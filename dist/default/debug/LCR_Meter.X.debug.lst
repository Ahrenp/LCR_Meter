

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Jan 20 22:59:17 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    68                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    69  0000                     
    70 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
    71  0000                     
    72                           	psect	idataCOMRAM
    73  003450                     __pidataCOMRAM:
    74                           	opt stack 0
    75                           
    76                           ;initializer for _units
    77  003450  70                 	db	112
    78  003451  46                 	db	70
    79                           
    80                           ;initializer for _last_range
    81  003452  01                 	db	1
    82                           
    83                           ;initializer for _range
    84  003453  05                 	db	5
    85                           
    86                           	psect	smallconst
    87  000600                     __psmallconst:
    88                           	opt stack 0
    89  000600  00                 	db	0
    90  000601                     _dpowers:
    91                           	opt stack 0
    92  000601  0001               	dw	1
    93  000603  0000               	dw	0
    94  000605  000A               	dw	10
    95  000607  0000               	dw	0
    96  000609  0064               	dw	100
    97  00060B  0000               	dw	0
    98  00060D  03E8               	dw	1000
    99  00060F  0000               	dw	0
   100  000611  2710               	dw	10000
   101  000613  0000               	dw	0
   102  000615  86A0               	dw	34464
   103  000617  0001               	dw	1
   104  000619  4240               	dw	16960
   105  00061B  000F               	dw	15
   106  00061D  9680               	dw	38528
   107  00061F  0098               	dw	152
   108  000621  E100               	dw	57600
   109  000623  05F5               	dw	1525
   110  000625  CA00               	dw	51712
   111  000627  3B9A               	dw	15258
   112  000629                     __end_of_dpowers:
   113                           	opt stack 0
   114  000629                     __npowers_:
   115                           	opt stack 0
   116  000629  00                 	db	0
   117  00062A  80                 	db	128
   118  00062B  3F                 	db	63
   119  00062C  CD                 	db	205
   120  00062D  CC                 	db	204
   121  00062E  3D                 	db	61
   122  00062F  D7                 	db	215
   123  000630  23                 	db	35
   124  000631  3C                 	db	60
   125  000632  12                 	db	18
   126  000633  83                 	db	131
   127  000634  3A                 	db	58
   128  000635  B7                 	db	183
   129  000636  D1                 	db	209
   130  000637  38                 	db	56
   131  000638  C6                 	db	198
   132  000639  27                 	db	39
   133  00063A  37                 	db	55
   134  00063B  38                 	db	56
   135  00063C  86                 	db	134
   136  00063D  35                 	db	53
   137  00063E  C0                 	db	192
   138  00063F  D6                 	db	214
   139  000640  33                 	db	51
   140  000641  CC                 	db	204
   141  000642  2B                 	db	43
   142  000643  32                 	db	50
   143  000644  70                 	db	112
   144  000645  89                 	db	137
   145  000646  30                 	db	48
   146  000647  E7                 	db	231
   147  000648  DB                 	db	219
   148  000649  2E                 	db	46
   149  00064A  E5                 	db	229
   150  00064B  3C                 	db	60
   151  00064C  1E                 	db	30
   152  00064D  42                 	db	66
   153  00064E  A2                 	db	162
   154  00064F  0D                 	db	13
   155  000650                     __end_of__npowers_:
   156                           	opt stack 0
   157  000650                     __powers_:
   158                           	opt stack 0
   159  000650  00                 	db	0
   160  000651  80                 	db	128
   161  000652  3F                 	db	63
   162  000653  00                 	db	0
   163  000654  20                 	db	32
   164  000655  41                 	db	65
   165  000656  00                 	db	0
   166  000657  C8                 	db	200
   167  000658  42                 	db	66
   168  000659  00                 	db	0
   169  00065A  7A                 	db	122
   170  00065B  44                 	db	68
   171  00065C  40                 	db	64
   172  00065D  1C                 	db	28
   173  00065E  46                 	db	70
   174  00065F  50                 	db	80
   175  000660  C3                 	db	195
   176  000661  47                 	db	71
   177  000662  24                 	db	36
   178  000663  74                 	db	116
   179  000664  49                 	db	73
   180  000665  97                 	db	151
   181  000666  18                 	db	24
   182  000667  4B                 	db	75
   183  000668  BC                 	db	188
   184  000669  BE                 	db	190
   185  00066A  4C                 	db	76
   186  00066B  6B                 	db	107
   187  00066C  6E                 	db	110
   188  00066D  4E                 	db	78
   189  00066E  03                 	db	3
   190  00066F  15                 	db	21
   191  000670  50                 	db	80
   192  000671  79                 	db	121
   193  000672  AD                 	db	173
   194  000673  60                 	db	96
   195  000674  F3                 	db	243
   196  000675  49                 	db	73
   197  000676  71                 	db	113
   198  000677                     __end_of__powers_:
   199                           	opt stack 0
   200  000677                     _cal_current:
   201                           	opt stack 0
   202  000677  00                 	db	0
   203  000678  00                 	db	0
   204  000679  00                 	db	0
   205  00067A  00                 	db	0
   206  00067B  00                 	db	0
   207  00067C  00                 	db	0
   208  00067D  00                 	db	0
   209  00067E  00                 	db	0
   210  00067F  00                 	db	0
   211  000680  00                 	db	0
   212  000681  00                 	db	0
   213  000682  00                 	db	0
   214  000683  C0                 	db	192
   215  000684  DA                 	db	218
   216  000685  47                 	db	71
   217  000686                     __end_of_cal_current:
   218                           	opt stack 0
   219  000686                     _R1_BIT:
   220                           	opt stack 0
   221  000686  00                 	db	0
   222  000687  01                 	db	1
   223  000688  02                 	db	2
   224  000689  03                 	db	3
   225  00068A  04                 	db	4
   226  00068B                     __end_of_R1_BIT:
   227                           	opt stack 0
   228  00068B                     _RSET_BIT:
   229                           	opt stack 0
   230  00068B  02                 	db	2
   231  00068C  03                 	db	3
   232  00068D  03                 	db	3
   233  00068E  04                 	db	4
   234  00068F  05                 	db	5
   235  000690                     __end_of_RSET_BIT:
   236                           	opt stack 0
   237  000690  25                 	db	37
   238  000691  6C                 	db	108	;'l'
   239  000692  75                 	db	117	;'u'
   240  000693  2E                 	db	46
   241  000694  25                 	db	37
   242  000695  36                 	db	54	;'6'
   243  000696  2E                 	db	46
   244  000697  36                 	db	54	;'6'
   245  000698  6C                 	db	108	;'l'
   246  000699  75                 	db	117	;'u'
   247  00069A  00                 	db	0
   248  00069B                     STR_2:
   249  00069B  43                 	db	67	;'C'
   250  00069C  3D                 	db	61	;'='
   251  00069D  25                 	db	37
   252  00069E  31                 	db	49	;'1'
   253  00069F  32                 	db	50	;'2'
   254  0006A0  2E                 	db	46
   255  0006A1  33                 	db	51	;'3'
   256  0006A2  66                 	db	102	;'f'
   257  0006A3  6E                 	db	110	;'n'
   258  0006A4  46                 	db	70	;'F'
   259  0006A5  00                 	db	0
   260  0006A6                     STR_3:
   261  0006A6  43                 	db	67	;'C'
   262  0006A7  3D                 	db	61	;'='
   263  0006A8  25                 	db	37
   264  0006A9  31                 	db	49	;'1'
   265  0006AA  32                 	db	50	;'2'
   266  0006AB  2E                 	db	46
   267  0006AC  30                 	db	48	;'0'
   268  0006AD  66                 	db	102	;'f'
   269  0006AE  70                 	db	112	;'p'
   270  0006AF  46                 	db	70	;'F'
   271  0006B0  00                 	db	0
   272  0006B1                     STR_1:
   273  0006B1  43                 	db	67	;'C'
   274  0006B2  3D                 	db	61	;'='
   275  0006B3  25                 	db	37
   276  0006B4  31                 	db	49	;'1'
   277  0006B5  32                 	db	50	;'2'
   278  0006B6  2E                 	db	46
   279  0006B7  36                 	db	54	;'6'
   280  0006B8  66                 	db	102	;'f'
   281  0006B9  75                 	db	117	;'u'
   282  0006BA  46                 	db	70	;'F'
   283  0006BB  00                 	db	0
   284                           
   285                           ; #config settings
   286  0006BC  00                 	db	0	; dummy byte at the end
   287  0000                     
   288                           	psect	nvCOMRAM
   289  000052                     __pnvCOMRAM:
   290                           	opt stack 0
   291  000052                     _timer0ReloadVal:
   292                           	opt stack 0
   293  000052                     	ds	2
   294                           
   295                           	psect	nvBANK0
   296  0000E9                     __pnvBANK0:
   297                           	opt stack 0
   298  0000E9                     _INT0_InterruptHandler:
   299                           	opt stack 0
   300  0000E9                     	ds	2
   301  0000EB                     _TMR0_InterruptHandler:
   302                           	opt stack 0
   303  0000EB                     	ds	2
   304  0000                     _ANSELA	set	3896
   305  0000                     _ANSELB	set	3897
   306  0000                     _ANSELC	set	3898
   307  0000                     _BAUDCON1	set	4024
   308  0000                     _INTCON2bits	set	4081
   309  0000                     _INTCONbits	set	4082
   310  0000                     _LATA	set	3977
   311  0000                     _LATAbits	set	3977
   312  0000                     _LATB	set	3978
   313  0000                     _LATBbits	set	3978
   314  0000                     _LATC	set	3979
   315  0000                     _OSCCON	set	4051
   316  0000                     _OSCCON2	set	4050
   317  0000                     _OSCTUNE	set	3995
   318  0000                     _PIR1bits	set	3998
   319  0000                     _RCONbits	set	4048
   320  0000                     _RCREG1	set	4014
   321  0000                     _RCSTA1	set	4011
   322  0000                     _RCSTA1bits	set	4011
   323  0000                     _SPBRG1	set	4015
   324  0000                     _SPBRGH1	set	4016
   325  0000                     _T0CON	set	4053
   326  0000                     _T0CONbits	set	4053
   327  0000                     _TMR0H	set	4055
   328  0000                     _TMR0L	set	4054
   329  0000                     _TRISA	set	3986
   330  0000                     _TRISB	set	3987
   331  0000                     _TRISC	set	3988
   332  0000                     _TXREG1	set	4013
   333  0000                     _TXSTA1	set	4012
   334  0000                     _WPUB	set	3937
   335                           
   336                           	psect	cinit
   337  003204                     __pcinit:
   338                           	opt stack 0
   339  003204                     start_initialization:
   340                           	opt stack 0
   341  003204                     __initialization:
   342                           	opt stack 0
   343                           
   344                           ; Initialize objects allocated to COMRAM (4 bytes)
   345                           ; load TBLPTR registers with __pidataCOMRAM
   346  003204  0E50               	movlw	low __pidataCOMRAM
   347  003206  6EF6               	movwf	tblptrl,c
   348  003208  0E34               	movlw	high __pidataCOMRAM
   349  00320A  6EF7               	movwf	tblptrh,c
   350  00320C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   351  00320E  6EF8               	movwf	tblptru,c
   352  003210  EE00  F04E         	lfsr	0,__pdataCOMRAM
   353  003214  EE10 F004          	lfsr	1,4
   354  003218                     copy_data0:
   355  003218  0009               	tblrd		*+
   356  00321A  CFF5 FFEE          	movff	tablat,postinc0
   357  00321E  50E5               	movf	postdec1,w,c
   358  003220  50E1               	movf	fsr1l,w,c
   359  003222  E1FA               	bnz	copy_data0
   360                           
   361                           ; Clear objects allocated to BANK0 (20 bytes)
   362  003224  EE00  F0D5         	lfsr	0,__pbssBANK0
   363  003228  0E14               	movlw	20
   364  00322A                     clear_0:
   365  00322A  6AEE               	clrf	postinc0,c
   366  00322C  06E8               	decf	wreg,f,c
   367  00322E  E1FD               	bnz	clear_0
   368                           
   369                           ; Clear objects allocated to COMRAM (2 bytes)
   370  003230  6A55               	clrf	(__pbssCOMRAM+1)& (0+255),c
   371  003232  6A54               	clrf	__pbssCOMRAM& (0+255),c
   372  003234                     end_of_initialization:
   373                           	opt stack 0
   374  003234                     __end_of__initialization:
   375                           	opt stack 0
   376  003234  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   377  003236  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   378  003238  0E00               	movlw	low (__Lmediumconst shr (0+16))
   379  00323A  6EF8               	movwf	tblptru,c
   380  00323C  0100               	movlb	0
   381  00323E  EFA4  F011         	goto	_main	;jump to C main() function
   382                           tblptru	equ	0xFF8
   383                           tblptrh	equ	0xFF7
   384                           tblptrl	equ	0xFF6
   385                           tablat	equ	0xFF5
   386                           postinc0	equ	0xFEE
   387                           wreg	equ	0xFE8
   388                           postdec1	equ	0xFE5
   389                           fsr1l	equ	0xFE1
   390                           
   391                           	psect	bssCOMRAM
   392  000054                     __pbssCOMRAM:
   393                           	opt stack 0
   394  000054                     _reading:
   395                           	opt stack 0
   396  000054                     	ds	2
   397                           tblptru	equ	0xFF8
   398                           tblptrh	equ	0xFF7
   399                           tblptrl	equ	0xFF6
   400                           tablat	equ	0xFF5
   401                           postinc0	equ	0xFEE
   402                           wreg	equ	0xFE8
   403                           postdec1	equ	0xFE5
   404                           fsr1l	equ	0xFE1
   405                           
   406                           	psect	dataCOMRAM
   407  00004E                     __pdataCOMRAM:
   408                           	opt stack 0
   409  00004E                     _units:
   410                           	opt stack 0
   411  00004E                     	ds	2
   412  000050                     _last_range:
   413                           	opt stack 0
   414  000050                     	ds	1
   415  000051                     _range:
   416                           	opt stack 0
   417  000051                     	ds	1
   418                           tblptru	equ	0xFF8
   419                           tblptrh	equ	0xFF7
   420                           tblptrl	equ	0xFF6
   421                           tablat	equ	0xFF5
   422                           postinc0	equ	0xFEE
   423                           wreg	equ	0xFE8
   424                           postdec1	equ	0xFE5
   425                           fsr1l	equ	0xFE1
   426                           
   427                           	psect	bssBANK0
   428  0000D5                     __pbssBANK0:
   429                           	opt stack 0
   430  0000D5                     _result:
   431                           	opt stack 0
   432  0000D5                     	ds	3
   433  0000D8                     ftoa@buf:
   434                           	opt stack 0
   435  0000D8                     	ds	17
   436                           tblptru	equ	0xFF8
   437                           tblptrh	equ	0xFF7
   438                           tblptrl	equ	0xFF6
   439                           tablat	equ	0xFF5
   440                           postinc0	equ	0xFEE
   441                           wreg	equ	0xFE8
   442                           postdec1	equ	0xFE5
   443                           fsr1l	equ	0xFE1
   444                           
   445                           	psect	cstackBANK0
   446  000060                     __pcstackBANK0:
   447                           	opt stack 0
   448  000060                     ??_isdigit:
   449  000060                     ?___awmod:
   450                           	opt stack 0
   451  000060                     ?___ftpack:
   452                           	opt stack 0
   453  000060                     ?___ftneg:
   454                           	opt stack 0
   455  000060                     ?__tdiv_to_l_:
   456                           	opt stack 0
   457  000060                     ?__div_to_l_:
   458                           	opt stack 0
   459  000060                     ?___lldiv:
   460                           	opt stack 0
   461  000060                     __lcd_Port@a:
   462                           	opt stack 0
   463  000060                     INT0_SetInterruptHandler@InterruptHandler:
   464                           	opt stack 0
   465  000060                     TMR0_SetInterruptHandler@InterruptHandler:
   466                           	opt stack 0
   467  000060                     ___awmod@dividend:
   468                           	opt stack 0
   469  000060                     __div_to_l_@f1:
   470                           	opt stack 0
   471  000060                     ___ftpack@arg:
   472                           	opt stack 0
   473  000060                     __tdiv_to_l_@f1:
   474                           	opt stack 0
   475  000060                     ___ftge@ff1:
   476                           	opt stack 0
   477  000060                     ___ftneg@f1:
   478                           	opt stack 0
   479  000060                     ___lldiv@dividend:
   480                           	opt stack 0
   481                           
   482                           ; 4 bytes @ 0x0
   483  000060                     	ds	1
   484  000061                     ??_lcd_sendCommand:
   485  000061                     lcd_sendChar@temp:
   486                           	opt stack 0
   487  000061                     _isdigit$1161:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x1
   491  000061                     	ds	1
   492  000062                     ??_TMR0_Initialize:
   493  000062                     lcd_sendCommand@a:
   494                           	opt stack 0
   495  000062                     lcd_sendChar@y:
   496                           	opt stack 0
   497  000062                     isdigit@c:
   498                           	opt stack 0
   499  000062                     ___awmod@divisor:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x2
   503  000062                     	ds	1
   504  000063                     ??_lcd_init:
   505  000063                     lcd_sendChar@a:
   506                           	opt stack 0
   507  000063                     ___ftpack@exp:
   508                           	opt stack 0
   509  000063                     __div_to_l_@f2:
   510                           	opt stack 0
   511  000063                     __tdiv_to_l_@f2:
   512                           	opt stack 0
   513  000063                     ___ftge@ff2:
   514                           	opt stack 0
   515                           
   516                           ; 3 bytes @ 0x3
   517  000063                     	ds	1
   518  000064                     ___awmod@counter:
   519                           	opt stack 0
   520  000064                     ___ftpack@sign:
   521                           	opt stack 0
   522  000064                     lcd_sendString@a:
   523                           	opt stack 0
   524  000064                     ___lldiv@divisor:
   525                           	opt stack 0
   526                           
   527                           ; 4 bytes @ 0x4
   528  000064                     	ds	1
   529  000065                     ??___ftpack:
   530  000065                     ___awmod@sign:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0x5
   534  000065                     	ds	1
   535  000066                     ??__tdiv_to_l_:
   536  000066                     ??___ftge:
   537  000066                     ?___awdiv:
   538                           	opt stack 0
   539  000066                     lcd_sendString@i:
   540                           	opt stack 0
   541  000066                     ___awdiv@dividend:
   542                           	opt stack 0
   543  000066                     __div_to_l_@quot:
   544                           	opt stack 0
   545                           
   546                           ; 4 bytes @ 0x6
   547  000066                     	ds	2
   548  000068                     ?___ftdiv:
   549                           	opt stack 0
   550  000068                     ?___lltoft:
   551                           	opt stack 0
   552  000068                     ___awdiv@divisor:
   553                           	opt stack 0
   554  000068                     ___ftdiv@f1:
   555                           	opt stack 0
   556  000068                     ___lldiv@quotient:
   557                           	opt stack 0
   558  000068                     ___lltoft@c:
   559                           	opt stack 0
   560                           
   561                           ; 4 bytes @ 0x8
   562  000068                     	ds	1
   563  000069                     __tdiv_to_l_@quot:
   564                           	opt stack 0
   565                           
   566                           ; 4 bytes @ 0x9
   567  000069                     	ds	1
   568  00006A                     ___awdiv@counter:
   569                           	opt stack 0
   570  00006A                     __div_to_l_@cntr:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0xA
   574  00006A                     	ds	1
   575  00006B                     ___awdiv@sign:
   576                           	opt stack 0
   577  00006B                     __div_to_l_@exp1:
   578                           	opt stack 0
   579  00006B                     ___ftdiv@f2:
   580                           	opt stack 0
   581                           
   582                           ; 3 bytes @ 0xB
   583  00006B                     	ds	1
   584  00006C                     ??___lltoft:
   585  00006C                     ___lldiv@counter:
   586                           	opt stack 0
   587  00006C                     ___awdiv@quotient:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0xC
   591  00006C                     	ds	1
   592  00006D                     ?___llmod:
   593                           	opt stack 0
   594  00006D                     __tdiv_to_l_@cntr:
   595                           	opt stack 0
   596  00006D                     ___llmod@dividend:
   597                           	opt stack 0
   598                           
   599                           ; 4 bytes @ 0xD
   600  00006D                     	ds	1
   601  00006E                     ??___ftdiv:
   602  00006E                     ?___wmul:
   603                           	opt stack 0
   604  00006E                     __tdiv_to_l_@exp1:
   605                           	opt stack 0
   606  00006E                     ___wmul@multiplier:
   607                           	opt stack 0
   608                           
   609                           ; 2 bytes @ 0xE
   610  00006E                     	ds	2
   611  000070                     ___lltoft@exp:
   612                           	opt stack 0
   613  000070                     ___wmul@multiplicand:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0x10
   617  000070                     	ds	1
   618  000071                     ___ftdiv@cntr:
   619                           	opt stack 0
   620  000071                     ___llmod@divisor:
   621                           	opt stack 0
   622                           
   623                           ; 4 bytes @ 0x11
   624  000071                     	ds	1
   625  000072                     ___wmul@product:
   626                           	opt stack 0
   627  000072                     ___ftdiv@f3:
   628                           	opt stack 0
   629                           
   630                           ; 3 bytes @ 0x12
   631  000072                     	ds	2
   632  000074                     ?___ftmul:
   633                           	opt stack 0
   634  000074                     ___ftmul@f1:
   635                           	opt stack 0
   636                           
   637                           ; 3 bytes @ 0x14
   638  000074                     	ds	1
   639  000075                     ___ftdiv@exp:
   640                           	opt stack 0
   641  000075                     ___llmod@counter:
   642                           	opt stack 0
   643                           
   644                           ; 1 bytes @ 0x15
   645  000075                     	ds	1
   646  000076                     ___ftdiv@sign:
   647                           	opt stack 0
   648                           
   649                           ; 1 bytes @ 0x16
   650  000076                     	ds	1
   651  000077                     ___ftmul@f2:
   652                           	opt stack 0
   653                           
   654                           ; 3 bytes @ 0x17
   655  000077                     	ds	3
   656  00007A                     ??___ftmul:
   657                           
   658                           ; 1 bytes @ 0x1A
   659  00007A                     	ds	3
   660  00007D                     ___ftmul@exp:
   661                           	opt stack 0
   662                           
   663                           ; 1 bytes @ 0x1D
   664  00007D                     	ds	1
   665  00007E                     ___ftmul@f3_as_product:
   666                           	opt stack 0
   667                           
   668                           ; 3 bytes @ 0x1E
   669  00007E                     	ds	3
   670  000081                     ___ftmul@cntr:
   671                           	opt stack 0
   672                           
   673                           ; 1 bytes @ 0x21
   674  000081                     	ds	1
   675  000082                     ___ftmul@sign:
   676                           	opt stack 0
   677                           
   678                           ; 1 bytes @ 0x22
   679  000082                     	ds	1
   680  000083                     ?_fround:
   681                           	opt stack 0
   682  000083                     ?_scale:
   683                           	opt stack 0
   684                           
   685                           ; 3 bytes @ 0x23
   686  000083                     	ds	3
   687  000086                     _fround$1575:
   688                           	opt stack 0
   689  000086                     _scale$1576:
   690                           	opt stack 0
   691                           
   692                           ; 3 bytes @ 0x26
   693  000086                     	ds	3
   694  000089                     scale@scl:
   695                           	opt stack 0
   696  000089                     _fround$1574:
   697                           	opt stack 0
   698                           
   699                           ; 3 bytes @ 0x29
   700  000089                     	ds	1
   701  00008A                     ?___fttol:
   702                           	opt stack 0
   703  00008A                     ___fttol@f1:
   704                           	opt stack 0
   705                           
   706                           ; 3 bytes @ 0x2A
   707  00008A                     	ds	2
   708  00008C                     fround@prec:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x2C
   712  00008C                     	ds	1
   713  00008D                     ?___ftadd:
   714                           	opt stack 0
   715  00008D                     ___ftadd@f1:
   716                           	opt stack 0
   717                           
   718                           ; 3 bytes @ 0x2D
   719  00008D                     	ds	1
   720  00008E                     ??___fttol:
   721                           
   722                           ; 1 bytes @ 0x2E
   723  00008E                     	ds	2
   724  000090                     ___ftadd@f2:
   725                           	opt stack 0
   726                           
   727                           ; 3 bytes @ 0x30
   728  000090                     	ds	3
   729  000093                     ??___ftadd:
   730  000093                     ___fttol@sign1:
   731                           	opt stack 0
   732                           
   733                           ; 1 bytes @ 0x33
   734  000093                     	ds	1
   735  000094                     ___fttol@lval:
   736                           	opt stack 0
   737                           
   738                           ; 4 bytes @ 0x34
   739  000094                     	ds	2
   740  000096                     ___ftadd@sign:
   741                           	opt stack 0
   742                           
   743                           ; 1 bytes @ 0x36
   744  000096                     	ds	1
   745  000097                     ___ftadd@exp2:
   746                           	opt stack 0
   747                           
   748                           ; 1 bytes @ 0x37
   749  000097                     	ds	1
   750  000098                     ___ftadd@exp1:
   751                           	opt stack 0
   752  000098                     ___fttol@exp1:
   753                           	opt stack 0
   754                           
   755                           ; 1 bytes @ 0x38
   756  000098                     	ds	1
   757  000099                     ?___ftsub:
   758                           	opt stack 0
   759  000099                     ___ftsub@f1:
   760                           	opt stack 0
   761                           
   762                           ; 3 bytes @ 0x39
   763  000099                     	ds	3
   764  00009C                     ___ftsub@f2:
   765                           	opt stack 0
   766                           
   767                           ; 3 bytes @ 0x3C
   768  00009C                     	ds	3
   769  00009F                     ?_sprintf:
   770                           	opt stack 0
   771  00009F                     sprintf@sp:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0x3F
   775  00009F                     	ds	2
   776  0000A1                     sprintf@f:
   777                           	opt stack 0
   778                           
   779                           ; 2 bytes @ 0x41
   780  0000A1                     	ds	5
   781  0000A6                     ??_sprintf:
   782                           
   783                           ; 1 bytes @ 0x46
   784  0000A6                     	ds	6
   785  0000AC                     _sprintf$1577:
   786                           	opt stack 0
   787                           
   788                           ; 3 bytes @ 0x4C
   789  0000AC                     	ds	3
   790  0000AF                     sprintf@ap:
   791                           	opt stack 0
   792                           
   793                           ; 2 bytes @ 0x4F
   794  0000AF                     	ds	2
   795  0000B1                     sprintf@val:
   796                           	opt stack 0
   797                           
   798                           ; 4 bytes @ 0x51
   799  0000B1                     	ds	4
   800  0000B5                     sprintf@flag:
   801                           	opt stack 0
   802                           
   803                           ; 2 bytes @ 0x55
   804  0000B5                     	ds	2
   805  0000B7                     sprintf@width:
   806                           	opt stack 0
   807                           
   808                           ; 2 bytes @ 0x57
   809  0000B7                     	ds	2
   810  0000B9                     sprintf@tmpval:
   811                           	opt stack 0
   812                           
   813                           ; 4 bytes @ 0x59
   814  0000B9                     	ds	4
   815  0000BD                     sprintf@exp:
   816                           	opt stack 0
   817                           
   818                           ; 2 bytes @ 0x5D
   819  0000BD                     	ds	2
   820  0000BF                     sprintf@fval:
   821                           	opt stack 0
   822                           
   823                           ; 3 bytes @ 0x5F
   824  0000BF                     	ds	3
   825  0000C2                     sprintf@prec:
   826                           	opt stack 0
   827                           
   828                           ; 2 bytes @ 0x62
   829  0000C2                     	ds	2
   830  0000C4                     sprintf@c:
   831                           	opt stack 0
   832                           
   833                           ; 1 bytes @ 0x64
   834  0000C4                     	ds	1
   835  0000C5                     main@cap_string:
   836                           	opt stack 0
   837                           
   838                           ; 16 bytes @ 0x65
   839  0000C5                     	ds	16
   840                           tblptru	equ	0xFF8
   841                           tblptrh	equ	0xFF7
   842                           tblptrl	equ	0xFF6
   843                           tablat	equ	0xFF5
   844                           postinc0	equ	0xFEE
   845                           wreg	equ	0xFE8
   846                           postdec1	equ	0xFE5
   847                           fsr1l	equ	0xFE1
   848                           
   849                           	psect	cstackCOMRAM
   850  000001                     __pcstackCOMRAM:
   851                           	opt stack 0
   852  000001                     ??_TMR0_DefaultInterruptHandler:
   853  000001                     ?_TMR0_ReadTimer:
   854                           	opt stack 0
   855  000001                     ?i2___ftpack:
   856                           	opt stack 0
   857  000001                     i2___ftpack@arg:
   858                           	opt stack 0
   859                           
   860                           ; 3 bytes @ 0x0
   861  000001                     	ds	1
   862  000002                     
   863                           ; 1 bytes @ 0x1
   864  000002                     	ds	1
   865  000003                     ??_TMR0_ReadTimer:
   866                           
   867                           ; 1 bytes @ 0x2
   868  000003                     	ds	1
   869  000004                     i2___ftpack@exp:
   870                           	opt stack 0
   871                           
   872                           ; 1 bytes @ 0x3
   873  000004                     	ds	1
   874  000005                     i2___ftpack@sign:
   875                           	opt stack 0
   876                           
   877                           ; 1 bytes @ 0x4
   878  000005                     	ds	1
   879  000006                     ??i2___ftpack:
   880                           
   881                           ; 1 bytes @ 0x5
   882  000006                     	ds	1
   883  000007                     TMR0_ReadTimer@readVal:
   884                           	opt stack 0
   885                           
   886                           ; 2 bytes @ 0x6
   887  000007                     	ds	2
   888  000009                     ?___lwtoft:
   889                           	opt stack 0
   890  000009                     TMR0_ReadTimer@readValLow:
   891                           	opt stack 0
   892  000009                     ___lwtoft@c:
   893                           	opt stack 0
   894                           
   895                           ; 2 bytes @ 0x8
   896  000009                     	ds	1
   897  00000A                     TMR0_ReadTimer@readValHigh:
   898                           	opt stack 0
   899                           
   900                           ; 1 bytes @ 0x9
   901  00000A                     	ds	2
   902  00000C                     ?i2___ftadd:
   903                           	opt stack 0
   904  00000C                     i2___ftadd@f1:
   905                           	opt stack 0
   906                           
   907                           ; 3 bytes @ 0xB
   908  00000C                     	ds	3
   909  00000F                     i2___ftadd@f2:
   910                           	opt stack 0
   911                           
   912                           ; 3 bytes @ 0xE
   913  00000F                     	ds	3
   914  000012                     ??i2___ftadd:
   915                           
   916                           ; 1 bytes @ 0x11
   917  000012                     	ds	3
   918  000015                     i2___ftadd@sign:
   919                           	opt stack 0
   920                           
   921                           ; 1 bytes @ 0x14
   922  000015                     	ds	1
   923  000016                     i2___ftadd@exp2:
   924                           	opt stack 0
   925                           
   926                           ; 1 bytes @ 0x15
   927  000016                     	ds	1
   928  000017                     i2___ftadd@exp1:
   929                           	opt stack 0
   930                           
   931                           ; 1 bytes @ 0x16
   932  000017                     	ds	1
   933  000018                     ?i2___ftmul:
   934                           	opt stack 0
   935  000018                     i2___ftmul@f1:
   936                           	opt stack 0
   937                           
   938                           ; 3 bytes @ 0x17
   939  000018                     	ds	3
   940  00001B                     i2___ftmul@f2:
   941                           	opt stack 0
   942                           
   943                           ; 3 bytes @ 0x1A
   944  00001B                     	ds	3
   945  00001E                     ??i2___ftmul:
   946                           
   947                           ; 1 bytes @ 0x1D
   948  00001E                     	ds	3
   949  000021                     i2___ftmul@exp:
   950                           	opt stack 0
   951                           
   952                           ; 1 bytes @ 0x20
   953  000021                     	ds	1
   954  000022                     i2___ftmul@f3_as_product:
   955                           	opt stack 0
   956                           
   957                           ; 3 bytes @ 0x21
   958  000022                     	ds	3
   959  000025                     i2___ftmul@cntr:
   960                           	opt stack 0
   961                           
   962                           ; 1 bytes @ 0x24
   963  000025                     	ds	1
   964  000026                     i2___ftmul@sign:
   965                           	opt stack 0
   966                           
   967                           ; 1 bytes @ 0x25
   968  000026                     	ds	1
   969  000027                     ?i2___ftdiv:
   970                           	opt stack 0
   971  000027                     i2___ftdiv@f1:
   972                           	opt stack 0
   973                           
   974                           ; 3 bytes @ 0x26
   975  000027                     	ds	3
   976  00002A                     i2___ftdiv@f2:
   977                           	opt stack 0
   978                           
   979                           ; 3 bytes @ 0x29
   980  00002A                     	ds	3
   981  00002D                     ??i2___ftdiv:
   982                           
   983                           ; 1 bytes @ 0x2C
   984  00002D                     	ds	3
   985  000030                     i2___ftdiv@cntr:
   986                           	opt stack 0
   987                           
   988                           ; 1 bytes @ 0x2F
   989  000030                     	ds	1
   990  000031                     i2___ftdiv@f3:
   991                           	opt stack 0
   992                           
   993                           ; 3 bytes @ 0x30
   994  000031                     	ds	3
   995  000034                     i2___ftdiv@exp:
   996                           	opt stack 0
   997                           
   998                           ; 1 bytes @ 0x33
   999  000034                     	ds	1
  1000  000035                     i2___ftdiv@sign:
  1001                           	opt stack 0
  1002                           
  1003                           ; 1 bytes @ 0x34
  1004  000035                     	ds	1
  1005  000036                     ??_INT0_ISR:
  1006                           
  1007                           ; 1 bytes @ 0x35
  1008  000036                     	ds	10
  1009  000040                     ??_INTERRUPT_InterruptManager:
  1010                           
  1011                           ; 1 bytes @ 0x3F
  1012  000040                     	ds	14
  1013                           tblptru	equ	0xFF8
  1014                           tblptrh	equ	0xFF7
  1015                           tblptrl	equ	0xFF6
  1016                           tablat	equ	0xFF5
  1017                           postinc0	equ	0xFEE
  1018                           wreg	equ	0xFE8
  1019                           postdec1	equ	0xFE5
  1020                           fsr1l	equ	0xFE1
  1021                           
  1022 ;;
  1023 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1024 ;;
  1025 ;; *************** function _main *****************
  1026 ;; Defined at:
  1027 ;;		line 8 in file "main.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;		None
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;  cap_string     16  101[BANK0 ] unsigned char [16]
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  1    wreg      void 
  1034 ;; Registers used:
  1035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1041 ;;      Params:         0       0       0       0       0       0       0
  1042 ;;      Locals:         0      16       0       0       0       0       0
  1043 ;;      Temps:          0       0       0       0       0       0       0
  1044 ;;      Totals:         0      16       0       0       0       0       0
  1045 ;;Total ram usage:       16 bytes
  1046 ;; Hardware stack levels required when called:    8
  1047 ;; This function calls:
  1048 ;;		_SYSTEM_Initialize
  1049 ;;		___ftdiv
  1050 ;;		___ftge
  1051 ;;		_lcd_clear
  1052 ;;		_lcd_init
  1053 ;;		_lcd_sendString
  1054 ;;		_sprintf
  1055 ;; This function is called by:
  1056 ;;		Startup code after reset
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text0
  1061  002348                     __ptext0:
  1062                           	opt stack 0
  1063  002348                     _main:
  1064                           	opt stack 23
  1065                           
  1066                           ;main.c: 11: SYSTEM_Initialize();
  1067                           
  1068                           ;incstack = 0
  1069  002348  ECE7  F019         	call	_SYSTEM_Initialize	;wreg free
  1070                           
  1071                           ;main.c: 30: (INTCONbits.GIE = 1);
  1072  00234C  8EF2               	bsf	intcon,7,c	;volatile
  1073                           
  1074                           ;main.c: 33: (INTCONbits.PEIE = 1);
  1075  00234E  8CF2               	bsf	intcon,6,c	;volatile
  1076                           
  1077                           ;main.c: 41: lcd_init();
  1078  002350  EC15  F018         	call	_lcd_init	;wreg free
  1079                           
  1080                           ;main.c: 42: lcd_clear();
  1081  002354  EC0B  F01A         	call	_lcd_clear	;wreg free
  1082                           
  1083                           ;main.c: 46: LATC |= (1 << 0) | (1 << 1) | (1 << 2) | (1 << 3) | (1 << 4);
  1084  002358  0E1F               	movlw	31
  1085  00235A  128B               	iorwf	3979,f,c	;volatile
  1086                           
  1087                           ;main.c: 47: LATB |= (1 << 2) | (1 << 3) | (1 << 4) | (1 << 5);
  1088  00235C  0E3C               	movlw	60
  1089  00235E  128A               	iorwf	3978,f,c	;volatile
  1090                           
  1091                           ;main.c: 50: LATC &= ~(1 << 0);
  1092  002360  908B               	bcf	3979,0,c	;volatile
  1093                           
  1094                           ;main.c: 51: LATB &= ~(1 << 0);
  1095  002362  908A               	bcf	3978,0,c	;volatile
  1096  002364                     l232:
  1097                           
  1098                           ;main.c: 54: {
  1099                           ;main.c: 56: char cap_string[16];
  1100                           ;main.c: 59: if (result >= 1000000.0)
  1101  002364  C0D5  F060         	movff	_result,___ftge@ff1
  1102  002368  C0D6  F061         	movff	_result+1,___ftge@ff1+1
  1103  00236C  C0D7  F062         	movff	_result+2,___ftge@ff1+2
  1104  002370  0E24               	movlw	36
  1105  002372  0100               	movlb	0	; () banked
  1106  002374  6F63               	movwf	___ftge@ff2& (0+255),b
  1107  002376  0E74               	movlw	116
  1108  002378  0100               	movlb	0	; () banked
  1109  00237A  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  1110  00237C  0E49               	movlw	73
  1111  00237E  0100               	movlb	0	; () banked
  1112  002380  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  1113  002382  ECC1  F015         	call	___ftge	;wreg free
  1114  002386  0100               	movlb	0	; () banked
  1115  002388  A0D8               	btfss	status,0,c
  1116  00238A  D026               	goto	l3867
  1117                           
  1118                           ; BSR set to: 0
  1119                           ;main.c: 60: {
  1120                           ;main.c: 61: sprintf(cap_string, "C=%12.6fuF", result / 1000000.0);
  1121  00238C  0EC5               	movlw	low main@cap_string
  1122  00238E  0100               	movlb	0	; () banked
  1123  002390  6F9F               	movwf	sprintf@sp& (0+255),b
  1124  002392  0E00               	movlw	high main@cap_string
  1125  002394  0100               	movlb	0	; () banked
  1126  002396  6FA0               	movwf	(sprintf@sp+1)& (0+255),b
  1127  002398  0EB1               	movlw	low STR_1
  1128  00239A  0100               	movlb	0	; () banked
  1129  00239C  6FA1               	movwf	sprintf@f& (0+255),b
  1130  00239E  0E06               	movlw	high STR_1
  1131  0023A0  0100               	movlb	0	; () banked
  1132  0023A2  6FA2               	movwf	(sprintf@f+1)& (0+255),b
  1133  0023A4  C0D5  F068         	movff	_result,___ftdiv@f1
  1134  0023A8  C0D6  F069         	movff	_result+1,___ftdiv@f1+1
  1135  0023AC  C0D7  F06A         	movff	_result+2,___ftdiv@f1+2
  1136  0023B0  0E24               	movlw	36
  1137  0023B2  0100               	movlb	0	; () banked
  1138  0023B4  6F6B               	movwf	___ftdiv@f2& (0+255),b
  1139  0023B6  0E74               	movlw	116
  1140  0023B8  0100               	movlb	0	; () banked
  1141  0023BA  6F6C               	movwf	(___ftdiv@f2+1)& (0+255),b
  1142  0023BC  0E49               	movlw	73
  1143  0023BE  0100               	movlb	0	; () banked
  1144  0023C0  6F6D               	movwf	(___ftdiv@f2+2)& (0+255),b
  1145  0023C2  EC06  F013         	call	___ftdiv	;wreg free
  1146  0023C6  C068  F0A3         	movff	?___ftdiv,?_sprintf+4
  1147  0023CA  C069  F0A4         	movff	?___ftdiv+1,?_sprintf+5
  1148  0023CE  C06A  F0A5         	movff	?___ftdiv+2,?_sprintf+6
  1149  0023D2  EC5F  F003         	call	_sprintf	;wreg free
  1150                           
  1151                           ;main.c: 62: }
  1152  0023D6  D062               	goto	l3875
  1153  0023D8                     l3867:
  1154                           
  1155                           ;main.c: 63: else if (result < 1000000 && result >= 1000.0)
  1156  0023D8  C0D5  F060         	movff	_result,___ftge@ff1
  1157  0023DC  C0D6  F061         	movff	_result+1,___ftge@ff1+1
  1158  0023E0  C0D7  F062         	movff	_result+2,___ftge@ff1+2
  1159  0023E4  0E24               	movlw	36
  1160  0023E6  0100               	movlb	0	; () banked
  1161  0023E8  6F63               	movwf	___ftge@ff2& (0+255),b
  1162  0023EA  0E74               	movlw	116
  1163  0023EC  0100               	movlb	0	; () banked
  1164  0023EE  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  1165  0023F0  0E49               	movlw	73
  1166  0023F2  0100               	movlb	0	; () banked
  1167  0023F4  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  1168  0023F6  ECC1  F015         	call	___ftge	;wreg free
  1169  0023FA  0100               	movlb	0	; () banked
  1170  0023FC  B0D8               	btfsc	status,0,c
  1171  0023FE  D03A               	goto	l3873
  1172                           
  1173                           ; BSR set to: 0
  1174  002400  C0D5  F060         	movff	_result,___ftge@ff1
  1175  002404  C0D6  F061         	movff	_result+1,___ftge@ff1+1
  1176  002408  C0D7  F062         	movff	_result+2,___ftge@ff1+2
  1177  00240C  0E00               	movlw	0
  1178  00240E  0100               	movlb	0	; () banked
  1179  002410  6F63               	movwf	___ftge@ff2& (0+255),b
  1180  002412  0E7A               	movlw	122
  1181  002414  0100               	movlb	0	; () banked
  1182  002416  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  1183  002418  0E44               	movlw	68
  1184  00241A  0100               	movlb	0	; () banked
  1185  00241C  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  1186  00241E  ECC1  F015         	call	___ftge	;wreg free
  1187  002422  0100               	movlb	0	; () banked
  1188  002424  A0D8               	btfss	status,0,c
  1189  002426  D026               	goto	l3873
  1190                           
  1191                           ; BSR set to: 0
  1192                           ;main.c: 64: {
  1193                           ;main.c: 65: sprintf(cap_string, "C=%12.3fnF", result / 1000.0);
  1194  002428  0EC5               	movlw	low main@cap_string
  1195  00242A  0100               	movlb	0	; () banked
  1196  00242C  6F9F               	movwf	sprintf@sp& (0+255),b
  1197  00242E  0E00               	movlw	high main@cap_string
  1198  002430  0100               	movlb	0	; () banked
  1199  002432  6FA0               	movwf	(sprintf@sp+1)& (0+255),b
  1200  002434  0E9B               	movlw	low STR_2
  1201  002436  0100               	movlb	0	; () banked
  1202  002438  6FA1               	movwf	sprintf@f& (0+255),b
  1203  00243A  0E06               	movlw	high STR_2
  1204  00243C  0100               	movlb	0	; () banked
  1205  00243E  6FA2               	movwf	(sprintf@f+1)& (0+255),b
  1206  002440  C0D5  F068         	movff	_result,___ftdiv@f1
  1207  002444  C0D6  F069         	movff	_result+1,___ftdiv@f1+1
  1208  002448  C0D7  F06A         	movff	_result+2,___ftdiv@f1+2
  1209  00244C  0E00               	movlw	0
  1210  00244E  0100               	movlb	0	; () banked
  1211  002450  6F6B               	movwf	___ftdiv@f2& (0+255),b
  1212  002452  0E7A               	movlw	122
  1213  002454  0100               	movlb	0	; () banked
  1214  002456  6F6C               	movwf	(___ftdiv@f2+1)& (0+255),b
  1215  002458  0E44               	movlw	68
  1216  00245A  0100               	movlb	0	; () banked
  1217  00245C  6F6D               	movwf	(___ftdiv@f2+2)& (0+255),b
  1218  00245E  EC06  F013         	call	___ftdiv	;wreg free
  1219  002462  C068  F0A3         	movff	?___ftdiv,?_sprintf+4
  1220  002466  C069  F0A4         	movff	?___ftdiv+1,?_sprintf+5
  1221  00246A  C06A  F0A5         	movff	?___ftdiv+2,?_sprintf+6
  1222  00246E  EC5F  F003         	call	_sprintf	;wreg free
  1223                           
  1224                           ;main.c: 66: }
  1225  002472  D014               	goto	l3875
  1226  002474                     l3873:
  1227                           
  1228                           ;main.c: 67: else
  1229                           ;main.c: 68: {
  1230                           ;main.c: 69: sprintf(cap_string, "C=%12.0fpF", result);
  1231  002474  0EC5               	movlw	low main@cap_string
  1232  002476  0100               	movlb	0	; () banked
  1233  002478  6F9F               	movwf	sprintf@sp& (0+255),b
  1234  00247A  0E00               	movlw	high main@cap_string
  1235  00247C  0100               	movlb	0	; () banked
  1236  00247E  6FA0               	movwf	(sprintf@sp+1)& (0+255),b
  1237  002480  0EA6               	movlw	low STR_3
  1238  002482  0100               	movlb	0	; () banked
  1239  002484  6FA1               	movwf	sprintf@f& (0+255),b
  1240  002486  0E06               	movlw	high STR_3
  1241  002488  0100               	movlb	0	; () banked
  1242  00248A  6FA2               	movwf	(sprintf@f+1)& (0+255),b
  1243  00248C  C0D5  F0A3         	movff	_result,?_sprintf+4
  1244  002490  C0D6  F0A4         	movff	_result+1,?_sprintf+5
  1245  002494  C0D7  F0A5         	movff	_result+2,?_sprintf+6
  1246  002498  EC5F  F003         	call	_sprintf	;wreg free
  1247  00249C                     l3875:
  1248                           
  1249                           ;main.c: 70: }
  1250                           ;main.c: 72: lcd_sendString(cap_string);
  1251  00249C  0EC5               	movlw	low main@cap_string
  1252  00249E  0100               	movlb	0	; () banked
  1253  0024A0  6F64               	movwf	lcd_sendString@a& (0+255),b
  1254  0024A2  0E00               	movlw	high main@cap_string
  1255  0024A4  0100               	movlb	0	; () banked
  1256  0024A6  6F65               	movwf	(lcd_sendString@a+1)& (0+255),b
  1257  0024A8  EC78  F018         	call	_lcd_sendString	;wreg free
  1258  0024AC  D75B               	goto	l232
  1259  0024AE                     __end_of_main:
  1260                           	opt stack 0
  1261                           tblptru	equ	0xFF8
  1262                           tblptrh	equ	0xFF7
  1263                           tblptrl	equ	0xFF6
  1264                           tablat	equ	0xFF5
  1265                           intcon	equ	0xFF2
  1266                           postinc0	equ	0xFEE
  1267                           wreg	equ	0xFE8
  1268                           postdec1	equ	0xFE5
  1269                           fsr1l	equ	0xFE1
  1270                           status	equ	0xFD8
  1271                           
  1272 ;; *************** function _sprintf *****************
  1273 ;; Defined at:
  1274 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  sp              2   63[BANK0 ] PTR unsigned char 
  1277 ;;		 -> ftoa@buf(17), main@cap_string(16), 
  1278 ;;  f               2   65[BANK0 ] PTR const unsigned char 
  1279 ;;		 -> STR_4(11), STR_3(11), STR_2(11), STR_1(11), 
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;  tmpval          4   89[BANK0 ] struct .
  1282 ;;  val             4   81[BANK0 ] unsigned long 
  1283 ;;  fval            3   95[BANK0 ] unsigned long 
  1284 ;;  cp              3    0        PTR const unsigned char 
  1285 ;;  prec            2   98[BANK0 ] int 
  1286 ;;  exp             2   93[BANK0 ] int 
  1287 ;;  width           2   87[BANK0 ] int 
  1288 ;;  flag            2   85[BANK0 ] unsigned short 
  1289 ;;  ap              2   79[BANK0 ] PTR void [1]
  1290 ;;		 -> ?_sprintf(2), 
  1291 ;;  len             2    0        unsigned int 
  1292 ;;  c               1  100[BANK0 ] char 
  1293 ;;  d               1    0        unsigned char 
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  2   63[BANK0 ] int 
  1296 ;; Registers used:
  1297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1303 ;;      Params:         0       7       0       0       0       0       0
  1304 ;;      Locals:         0      25       0       0       0       0       0
  1305 ;;      Temps:          0       6       0       0       0       0       0
  1306 ;;      Totals:         0      38       0       0       0       0       0
  1307 ;;Total ram usage:       38 bytes
  1308 ;; Hardware stack levels used:    1
  1309 ;; Hardware stack levels required when called:    7
  1310 ;; This function calls:
  1311 ;;		___awdiv
  1312 ;;		___ftadd
  1313 ;;		___ftge
  1314 ;;		___ftmul
  1315 ;;		___ftneg
  1316 ;;		___ftsub
  1317 ;;		___fttol
  1318 ;;		___lldiv
  1319 ;;		___llmod
  1320 ;;		___lltoft
  1321 ;;		___wmul
  1322 ;;		__div_to_l_
  1323 ;;		__tdiv_to_l_
  1324 ;;		_fround
  1325 ;;		_isdigit
  1326 ;;		_scale
  1327 ;; This function is called by:
  1328 ;;		_main
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text1
  1333  0006BE                     __ptext1:
  1334                           	opt stack 0
  1335  0006BE                     _sprintf:
  1336                           	opt stack 23
  1337                           
  1338                           ;doprnt.c: 494: va_list ap;
  1339                           ;doprnt.c: 499: signed char c;
  1340                           ;doprnt.c: 501: int width;
  1341                           ;doprnt.c: 504: int prec;
  1342                           ;doprnt.c: 508: unsigned short flag;
  1343                           ;doprnt.c: 515: char d;
  1344                           ;doprnt.c: 516: double fval;
  1345                           ;doprnt.c: 517: int exp;
  1346                           ;doprnt.c: 523: union {
  1347                           ;doprnt.c: 524: unsigned long vd;
  1348                           ;doprnt.c: 525: double integ;
  1349                           ;doprnt.c: 526: } tmpval;
  1350                           ;doprnt.c: 528: unsigned long val;
  1351                           ;doprnt.c: 529: unsigned len;
  1352                           ;doprnt.c: 530: const char * cp;
  1353                           ;doprnt.c: 533: *ap = __va_start();
  1354                           
  1355                           ;incstack = 0
  1356  0006BE  0EA3               	movlw	low (?_sprintf+4)
  1357  0006C0  0100               	movlb	0	; () banked
  1358  0006C2  6FAF               	movwf	sprintf@ap& (0+255),b
  1359  0006C4  0E00               	movlw	high (?_sprintf+4)
  1360  0006C6  0100               	movlb	0	; () banked
  1361  0006C8  6FB0               	movwf	(sprintf@ap+1)& (0+255),b
  1362                           
  1363                           ;doprnt.c: 536: while(c = *f++) {
  1364  0006CA  EF23  F009         	goto	l3745
  1365  0006CE                     l3457:
  1366                           
  1367                           ; BSR set to: 0
  1368                           ;doprnt.c: 538: if(c != '%')
  1369  0006CE  0E25               	movlw	37
  1370  0006D0  0100               	movlb	0	; () banked
  1371  0006D2  19C4               	xorwf	sprintf@c& (0+255),w,b
  1372  0006D4  B4D8               	btfsc	status,2,c
  1373  0006D6  D00B               	goto	l3463
  1374                           
  1375                           ; BSR set to: 0
  1376                           ;doprnt.c: 540: {
  1377                           ;doprnt.c: 541: ((*sp++ = (c)));
  1378  0006D8  C09F  FFD9         	movff	sprintf@sp,fsr2l
  1379  0006DC  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  1380  0006E0  C0C4  FFDF         	movff	sprintf@c,indf2
  1381                           
  1382                           ; BSR set to: 0
  1383  0006E4  0100               	movlb	0	; () banked
  1384  0006E6  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  1385  0006E8  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  1386                           
  1387                           ;doprnt.c: 542: continue;
  1388  0006EA  EF23  F009         	goto	l3745
  1389  0006EE                     l3463:
  1390                           
  1391                           ; BSR set to: 0
  1392                           ;doprnt.c: 543: }
  1393                           ;doprnt.c: 546: width = 0;
  1394  0006EE  0E00               	movlw	0
  1395  0006F0  0100               	movlb	0	; () banked
  1396  0006F2  6FB8               	movwf	(sprintf@width+1)& (0+255),b
  1397  0006F4  0E00               	movlw	0
  1398  0006F6  6FB7               	movwf	sprintf@width& (0+255),b
  1399                           
  1400                           ;doprnt.c: 548: flag = 0;
  1401  0006F8  0E00               	movlw	0
  1402  0006FA  0100               	movlb	0	; () banked
  1403  0006FC  6FB6               	movwf	(sprintf@flag+1)& (0+255),b
  1404  0006FE  0E00               	movlw	0
  1405  000700  6FB5               	movwf	sprintf@flag& (0+255),b
  1406                           
  1407                           ; BSR set to: 0
  1408                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1409  000702  C0A1  FFF6         	movff	sprintf@f,tblptrl
  1410  000706  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  1411  00070A                     	if	0	;tblptru may be non-zero
  1412  00070A                     	endif
  1413  00070A                     	if	0	;tblptru may be non-zero
  1414  00070A                     	endif
  1415  00070A  0008               	tblrd		*
  1416  00070C  50F5               	movf	tablat,w,c
  1417  00070E  EC9F  F019         	call	_isdigit
  1418  000712  A0D8               	btfss	status,0,c
  1419  000714  D040               	goto	l3477
  1420                           
  1421                           ;doprnt.c: 598: width = 0;
  1422  000716  0E00               	movlw	0
  1423  000718  0100               	movlb	0	; () banked
  1424  00071A  6FB8               	movwf	(sprintf@width+1)& (0+255),b
  1425  00071C  0E00               	movlw	0
  1426  00071E  6FB7               	movwf	sprintf@width& (0+255),b
  1427  000720                     l3469:
  1428                           
  1429                           ;doprnt.c: 600: width *= 10;
  1430  000720  C0B7  F06E         	movff	sprintf@width,___wmul@multiplier
  1431  000724  C0B8  F06F         	movff	sprintf@width+1,___wmul@multiplier+1
  1432  000728  0E00               	movlw	0
  1433  00072A  0100               	movlb	0	; () banked
  1434  00072C  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1435  00072E  0E0A               	movlw	10
  1436  000730  6F70               	movwf	___wmul@multiplicand& (0+255),b
  1437  000732  EC21  F019         	call	___wmul	;wreg free
  1438  000736  C06E  F0B7         	movff	?___wmul,sprintf@width
  1439  00073A  C06F  F0B8         	movff	?___wmul+1,sprintf@width+1
  1440                           
  1441                           ;doprnt.c: 601: width += *f++ - '0';
  1442  00073E  0ED0               	movlw	208
  1443  000740  0100               	movlb	0	; () banked
  1444  000742  6FA6               	movwf	??_sprintf& (0+255),b
  1445  000744  0EFF               	movlw	255
  1446  000746  0100               	movlb	0	; () banked
  1447  000748  6FA7               	movwf	(??_sprintf+1)& (0+255),b
  1448  00074A  C0A1  FFF6         	movff	sprintf@f,tblptrl
  1449  00074E  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  1450  000752                     	if	0	;tblptru may be non-zero
  1451  000752                     	endif
  1452  000752                     	if	0	;tblptru may be non-zero
  1453  000752                     	endif
  1454  000752  0008               	tblrd		*
  1455  000754  50F5               	movf	tablat,w,c
  1456  000756  0100               	movlb	0	; () banked
  1457  000758  6FA8               	movwf	(??_sprintf+2)& (0+255),b
  1458  00075A  6BA9               	clrf	(??_sprintf+3)& (0+255),b
  1459  00075C  0100               	movlb	0	; () banked
  1460  00075E  51A6               	movf	??_sprintf& (0+255),w,b
  1461  000760  0100               	movlb	0	; () banked
  1462  000762  27A8               	addwf	(??_sprintf+2)& (0+255),f,b
  1463  000764  0100               	movlb	0	; () banked
  1464  000766  51A7               	movf	(??_sprintf+1)& (0+255),w,b
  1465  000768  0100               	movlb	0	; () banked
  1466  00076A  23A9               	addwfc	(??_sprintf+3)& (0+255),f,b
  1467  00076C  0100               	movlb	0	; () banked
  1468  00076E  51A8               	movf	(??_sprintf+2)& (0+255),w,b
  1469  000770  0100               	movlb	0	; () banked
  1470  000772  27B7               	addwf	sprintf@width& (0+255),f,b
  1471  000774  0100               	movlb	0	; () banked
  1472  000776  51A9               	movf	(??_sprintf+3)& (0+255),w,b
  1473  000778  0100               	movlb	0	; () banked
  1474  00077A  23B8               	addwfc	(sprintf@width+1)& (0+255),f,b
  1475                           
  1476                           ; BSR set to: 0
  1477  00077C  0100               	movlb	0	; () banked
  1478  00077E  4BA1               	infsnz	sprintf@f& (0+255),f,b
  1479  000780  2BA2               	incf	(sprintf@f+1)& (0+255),f,b
  1480                           
  1481                           ; BSR set to: 0
  1482                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1483  000782  C0A1  FFF6         	movff	sprintf@f,tblptrl
  1484  000786  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  1485  00078A                     	if	0	;tblptru may be non-zero
  1486  00078A                     	endif
  1487  00078A                     	if	0	;tblptru may be non-zero
  1488  00078A                     	endif
  1489  00078A  0008               	tblrd		*
  1490  00078C  50F5               	movf	tablat,w,c
  1491  00078E  EC9F  F019         	call	_isdigit
  1492  000792  B0D8               	btfsc	status,0,c
  1493  000794  D7C5               	goto	l3469
  1494  000796                     l3477:
  1495                           
  1496                           ;doprnt.c: 608: }
  1497                           ;doprnt.c: 611: if(*f == '.') {
  1498  000796  C0A1  FFF6         	movff	sprintf@f,tblptrl
  1499  00079A  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  1500  00079E                     	if	0	;tblptru may be non-zero
  1501  00079E                     	endif
  1502  00079E                     	if	0	;tblptru may be non-zero
  1503  00079E                     	endif
  1504  00079E  0008               	tblrd		*
  1505  0007A0  50F5               	movf	tablat,w,c
  1506  0007A2  0A2E               	xorlw	46
  1507  0007A4  A4D8               	btfss	status,2,c
  1508  0007A6  D039               	goto	l3489
  1509                           
  1510                           ;doprnt.c: 612: flag |= 0x4000;
  1511  0007A8  0100               	movlb	0	; () banked
  1512  0007AA  8DB6               	bsf	(sprintf@flag+1)& (0+255),6,b
  1513                           
  1514                           ;doprnt.c: 613: f++;
  1515  0007AC  0100               	movlb	0	; () banked
  1516  0007AE  4BA1               	infsnz	sprintf@f& (0+255),f,b
  1517  0007B0  2BA2               	incf	(sprintf@f+1)& (0+255),f,b
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;doprnt.c: 620: {
  1521                           ;doprnt.c: 621: prec = 0;
  1522  0007B2  0E00               	movlw	0
  1523  0007B4  0100               	movlb	0	; () banked
  1524  0007B6  6FC3               	movwf	(sprintf@prec+1)& (0+255),b
  1525  0007B8  0E00               	movlw	0
  1526  0007BA  6FC2               	movwf	sprintf@prec& (0+255),b
  1527                           
  1528                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  1529  0007BC  D023               	goto	l3487
  1530  0007BE                     l3483:
  1531                           
  1532                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  1533  0007BE  C0C2  F06E         	movff	sprintf@prec,___wmul@multiplier
  1534  0007C2  C0C3  F06F         	movff	sprintf@prec+1,___wmul@multiplier+1
  1535  0007C6  0E00               	movlw	0
  1536  0007C8  0100               	movlb	0	; () banked
  1537  0007CA  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1538  0007CC  0E0A               	movlw	10
  1539  0007CE  6F70               	movwf	___wmul@multiplicand& (0+255),b
  1540  0007D0  EC21  F019         	call	___wmul	;wreg free
  1541  0007D4  C0A1  FFF6         	movff	sprintf@f,tblptrl
  1542  0007D8  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  1543  0007DC                     	if	0	;tblptru may be non-zero
  1544  0007DC                     	endif
  1545  0007DC                     	if	0	;tblptru may be non-zero
  1546  0007DC                     	endif
  1547  0007DC  0008               	tblrd		*
  1548  0007DE  50F5               	movf	tablat,w,c
  1549  0007E0  0100               	movlb	0	; () banked
  1550  0007E2  276E               	addwf	?___wmul& (0+255),f,b
  1551  0007E4  0E00               	movlw	0
  1552  0007E6  0100               	movlb	0	; () banked
  1553  0007E8  236F               	addwfc	(?___wmul+1)& (0+255),f,b
  1554  0007EA  0ED0               	movlw	208
  1555  0007EC  0100               	movlb	0	; () banked
  1556  0007EE  256E               	addwf	?___wmul& (0+255),w,b
  1557  0007F0  0100               	movlb	0	; () banked
  1558  0007F2  6FC2               	movwf	sprintf@prec& (0+255),b
  1559  0007F4  0EFF               	movlw	255
  1560  0007F6  0100               	movlb	0	; () banked
  1561  0007F8  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  1562  0007FA  0100               	movlb	0	; () banked
  1563  0007FC  6FC3               	movwf	(sprintf@prec+1)& (0+255),b
  1564                           
  1565                           ; BSR set to: 0
  1566  0007FE  0100               	movlb	0	; () banked
  1567  000800  4BA1               	infsnz	sprintf@f& (0+255),f,b
  1568  000802  2BA2               	incf	(sprintf@f+1)& (0+255),f,b
  1569  000804                     l3487:
  1570                           
  1571                           ; BSR set to: 0
  1572  000804  C0A1  FFF6         	movff	sprintf@f,tblptrl
  1573  000808  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  1574  00080C                     	if	0	;tblptru may be non-zero
  1575  00080C                     	endif
  1576  00080C                     	if	0	;tblptru may be non-zero
  1577  00080C                     	endif
  1578  00080C  0008               	tblrd		*
  1579  00080E  50F5               	movf	tablat,w,c
  1580  000810  EC9F  F019         	call	_isdigit
  1581  000814  A0D8               	btfss	status,0,c
  1582  000816  D013               	goto	l3501
  1583  000818  D7D2               	goto	l3483
  1584  00081A                     l3489:
  1585                           
  1586                           ;doprnt.c: 626: prec = 0;
  1587  00081A  0E00               	movlw	0
  1588  00081C  0100               	movlb	0	; () banked
  1589  00081E  6FC3               	movwf	(sprintf@prec+1)& (0+255),b
  1590  000820  0E00               	movlw	0
  1591  000822  6FC2               	movwf	sprintf@prec& (0+255),b
  1592                           
  1593                           ; BSR set to: 0
  1594                           ;doprnt.c: 628: flag |= 0x1000;
  1595  000824  0100               	movlb	0	; () banked
  1596  000826  89B6               	bsf	(sprintf@flag+1)& (0+255),4,b
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;doprnt.c: 635: switch(c = *f++) {
  1600                           
  1601                           ;doprnt.c: 630: }
  1602                           ;doprnt.c: 633: loop:
  1603                           
  1604                           ; BSR set to: 0
  1605  000828  D00A               	goto	l3501
  1606  00082A                     l3493:
  1607                           
  1608                           ; BSR set to: 0
  1609                           ;doprnt.c: 643: flag |= 0x10;
  1610  00082A  0100               	movlb	0	; () banked
  1611  00082C  89B5               	bsf	sprintf@flag& (0+255),4,b
  1612                           
  1613                           ;doprnt.c: 644: goto loop;
  1614  00082E  D007               	goto	l3501
  1615  000830                     l3495:
  1616                           
  1617                           ; BSR set to: 0
  1618                           ;doprnt.c: 663: flag |= 0x400;
  1619  000830  0100               	movlb	0	; () banked
  1620  000832  85B6               	bsf	(sprintf@flag+1)& (0+255),2,b
  1621                           
  1622                           ;doprnt.c: 664: break;
  1623  000834  D01F               	goto	l3503
  1624  000836                     l3497:
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;doprnt.c: 818: flag |= 0xC0;
  1628  000836  0EC0               	movlw	192
  1629  000838  0100               	movlb	0	; () banked
  1630  00083A  13B5               	iorwf	sprintf@flag& (0+255),f,b
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;doprnt.c: 822: }
  1634                           
  1635                           ;doprnt.c: 819: break;
  1636  00083C  D01B               	goto	l3503
  1637  00083E                     l3501:
  1638  00083E  C0A1  FFF6         	movff	sprintf@f,tblptrl
  1639  000842  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  1640  000846  0100               	movlb	0	; () banked
  1641  000848  4BA1               	infsnz	sprintf@f& (0+255),f,b
  1642  00084A  2BA2               	incf	(sprintf@f+1)& (0+255),f,b
  1643  00084C                     	if	0	;tblptru may be non-zero
  1644  00084C                     	endif
  1645  00084C                     	if	0	;tblptru may be non-zero
  1646  00084C                     	endif
  1647  00084C  0008               	tblrd		*
  1648  00084E  CFF5 F0C4          	movff	tablat,sprintf@c
  1649  000852  0100               	movlb	0	; () banked
  1650  000854  51C4               	movf	sprintf@c& (0+255),w,b
  1651                           
  1652                           ; Switch size 1, requested type "space"
  1653                           ; Number of cases is 4, Range of values is 0 to 117
  1654                           ; switch strategies available:
  1655                           ; Name         Instructions Cycles
  1656                           ; simple_byte           13     7 (average)
  1657                           ;	Chosen strategy is simple_byte
  1658  000856  0A00               	xorlw	0	; case 0
  1659  000858  B4D8               	btfsc	status,2,c
  1660  00085A  EF32  F009         	goto	l3747
  1661  00085E  0A66               	xorlw	102	; case 102
  1662  000860  B4D8               	btfsc	status,2,c
  1663  000862  D7E6               	goto	l3495
  1664  000864  0A0A               	xorlw	10	; case 108
  1665  000866  B4D8               	btfsc	status,2,c
  1666  000868  D7E0               	goto	l3493
  1667  00086A  0A19               	xorlw	25	; case 117
  1668  00086C  B4D8               	btfsc	status,2,c
  1669  00086E  D7E3               	goto	l3497
  1670  000870  EF23  F009         	goto	l3745
  1671  000874                     l3503:
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;doprnt.c: 825: if(flag & (0x700)) {
  1675  000874  0E07               	movlw	7
  1676  000876  0100               	movlb	0	; () banked
  1677  000878  15B6               	andwf	(sprintf@flag+1)& (0+255),w,b
  1678  00087A  B4D8               	btfsc	status,2,c
  1679  00087C  D379               	goto	l368
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;doprnt.c: 827: if(flag & 0x1000)
  1683  00087E  0100               	movlb	0	; () banked
  1684  000880  A9B6               	btfss	(sprintf@flag+1)& (0+255),4,b
  1685  000882  D005               	goto	l3509
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;doprnt.c: 829: prec = 6;
  1689  000884  0E00               	movlw	0
  1690  000886  0100               	movlb	0	; () banked
  1691  000888  6FC3               	movwf	(sprintf@prec+1)& (0+255),b
  1692  00088A  0E06               	movlw	6
  1693  00088C  6FC2               	movwf	sprintf@prec& (0+255),b
  1694  00088E                     l3509:
  1695                           
  1696                           ; BSR set to: 0
  1697                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1698  00088E  C0AF  FFD9         	movff	sprintf@ap,fsr2l
  1699  000892  C0B0  FFDA         	movff	sprintf@ap+1,fsr2h
  1700  000896  CFDE F0BF          	movff	postinc2,sprintf@fval
  1701  00089A  CFDE F0C0          	movff	postinc2,sprintf@fval+1
  1702  00089E  CFDD F0C1          	movff	postdec2,sprintf@fval+2
  1703                           
  1704                           ; BSR set to: 0
  1705  0008A2  0E03               	movlw	3
  1706  0008A4  0100               	movlb	0	; () banked
  1707  0008A6  27AF               	addwf	sprintf@ap& (0+255),f,b
  1708  0008A8  0E00               	movlw	0
  1709  0008AA  23B0               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1710                           
  1711                           ; BSR set to: 0
  1712                           ;doprnt.c: 831: if(fval < 0.0) {
  1713  0008AC  0100               	movlb	0	; () banked
  1714  0008AE  AFC1               	btfss	(sprintf@fval+2)& (0+255),7,b
  1715  0008B0  D011               	goto	l3519
  1716                           
  1717                           ; BSR set to: 0
  1718                           ;doprnt.c: 832: fval = -fval;
  1719  0008B2  C0BF  F060         	movff	sprintf@fval,___ftneg@f1
  1720  0008B6  C0C0  F061         	movff	sprintf@fval+1,___ftneg@f1+1
  1721  0008BA  C0C1  F062         	movff	sprintf@fval+2,___ftneg@f1+2
  1722  0008BE  EC57  F019         	call	___ftneg	;wreg free
  1723  0008C2  C060  F0BF         	movff	?___ftneg,sprintf@fval
  1724  0008C6  C061  F0C0         	movff	?___ftneg+1,sprintf@fval+1
  1725  0008CA  C062  F0C1         	movff	?___ftneg+2,sprintf@fval+2
  1726                           
  1727                           ;doprnt.c: 833: flag |= 0x03;
  1728  0008CE  0E03               	movlw	3
  1729  0008D0  0100               	movlb	0	; () banked
  1730  0008D2  13B5               	iorwf	sprintf@flag& (0+255),f,b
  1731  0008D4                     l3519:
  1732                           
  1733                           ; BSR set to: 0
  1734                           ;doprnt.c: 834: }
  1735                           ;doprnt.c: 835: exp = 0;
  1736  0008D4  0E00               	movlw	0
  1737  0008D6  0100               	movlb	0	; () banked
  1738  0008D8  6FBE               	movwf	(sprintf@exp+1)& (0+255),b
  1739  0008DA  0E00               	movlw	0
  1740  0008DC  6FBD               	movwf	sprintf@exp& (0+255),b
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;doprnt.c: 836: if( fval!=0) {
  1744  0008DE  0100               	movlb	0	; () banked
  1745  0008E0  51BF               	movf	sprintf@fval& (0+255),w,b
  1746  0008E2  0100               	movlb	0	; () banked
  1747  0008E4  11C0               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1748  0008E6  0100               	movlb	0	; () banked
  1749  0008E8  11C1               	iorwf	(sprintf@fval+2)& (0+255),w,b
  1750  0008EA  B4D8               	btfsc	status,2,c
  1751  0008EC  D09B               	goto	l3547
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1755  0008EE  0E82               	movlw	130
  1756  0008F0  0100               	movlb	0	; () banked
  1757  0008F2  6FA6               	movwf	??_sprintf& (0+255),b
  1758  0008F4  0EFF               	movlw	255
  1759  0008F6  0100               	movlb	0	; () banked
  1760  0008F8  6FA7               	movwf	(??_sprintf+1)& (0+255),b
  1761  0008FA  C0BF  F0A8         	movff	sprintf@fval,??_sprintf+2
  1762  0008FE  C0C0  F0A9         	movff	sprintf@fval+1,??_sprintf+3
  1763  000902  C0C1  F0AA         	movff	sprintf@fval+2,??_sprintf+4
  1764  000906  C0C2  F0AB         	movff	sprintf@fval+3,??_sprintf+5
  1765  00090A  0E10               	movlw	16
  1766  00090C  D006               	goto	u3820
  1767  00090E                     u3825:
  1768  00090E  0100               	movlb	0	; () banked
  1769  000910  90D8               	bcf	status,0,c
  1770  000912  33AB               	rrcf	(??_sprintf+5)& (0+255),f,b
  1771  000914  33AA               	rrcf	(??_sprintf+4)& (0+255),f,b
  1772  000916  33A9               	rrcf	(??_sprintf+3)& (0+255),f,b
  1773  000918  33A8               	rrcf	(??_sprintf+2)& (0+255),f,b
  1774  00091A                     u3820:
  1775  00091A  2EE8               	decfsz	wreg,f,c
  1776  00091C  D7F8               	goto	u3825
  1777  00091E  0100               	movlb	0	; () banked
  1778  000920  51A8               	movf	(??_sprintf+2)& (0+255),w,b
  1779  000922  0100               	movlb	0	; () banked
  1780  000924  25A6               	addwf	??_sprintf& (0+255),w,b
  1781  000926  0100               	movlb	0	; () banked
  1782  000928  6FBD               	movwf	sprintf@exp& (0+255),b
  1783  00092A  0E00               	movlw	0
  1784  00092C  0100               	movlb	0	; () banked
  1785  00092E  21A7               	addwfc	(??_sprintf+1)& (0+255),w,b
  1786  000930  0100               	movlb	0	; () banked
  1787  000932  6FBE               	movwf	(sprintf@exp+1)& (0+255),b
  1788                           
  1789                           ; BSR set to: 0
  1790                           ;doprnt.c: 838: exp--;
  1791  000934  0100               	movlb	0	; () banked
  1792  000936  07BD               	decf	sprintf@exp& (0+255),f,b
  1793  000938  A0D8               	btfss	status,0,c
  1794  00093A  07BE               	decf	(sprintf@exp+1)& (0+255),f,b
  1795                           
  1796                           ; BSR set to: 0
  1797                           ;doprnt.c: 839: exp *= 3;
  1798  00093C  C0BD  F06E         	movff	sprintf@exp,___wmul@multiplier
  1799  000940  C0BE  F06F         	movff	sprintf@exp+1,___wmul@multiplier+1
  1800  000944  0E00               	movlw	0
  1801  000946  0100               	movlb	0	; () banked
  1802  000948  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1803  00094A  0E03               	movlw	3
  1804  00094C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  1805  00094E  EC21  F019         	call	___wmul	;wreg free
  1806  000952  C06E  F0BD         	movff	?___wmul,sprintf@exp
  1807  000956  C06F  F0BE         	movff	?___wmul+1,sprintf@exp+1
  1808                           
  1809                           ;doprnt.c: 840: exp /= 10;
  1810  00095A  C0BD  F066         	movff	sprintf@exp,___awdiv@dividend
  1811  00095E  C0BE  F067         	movff	sprintf@exp+1,___awdiv@dividend+1
  1812  000962  0E00               	movlw	0
  1813  000964  0100               	movlb	0	; () banked
  1814  000966  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  1815  000968  0E0A               	movlw	10
  1816  00096A  6F68               	movwf	___awdiv@divisor& (0+255),b
  1817  00096C  EC25  F016         	call	___awdiv	;wreg free
  1818  000970  C066  F0BD         	movff	?___awdiv,sprintf@exp
  1819  000974  C067  F0BE         	movff	?___awdiv+1,sprintf@exp+1
  1820                           
  1821                           ;doprnt.c: 841: if(exp < 0)
  1822  000978  0100               	movlb	0	; () banked
  1823  00097A  AFBE               	btfss	(sprintf@exp+1)& (0+255),7,b
  1824  00097C  D004               	goto	l3535
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;doprnt.c: 842: exp--;
  1828  00097E  0100               	movlb	0	; () banked
  1829  000980  07BD               	decf	sprintf@exp& (0+255),f,b
  1830  000982  A0D8               	btfss	status,0,c
  1831  000984  07BE               	decf	(sprintf@exp+1)& (0+255),f,b
  1832  000986                     l3535:
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1836  000986  0100               	movlb	0	; () banked
  1837  000988  51BD               	movf	sprintf@exp& (0+255),w,b
  1838  00098A  0800               	sublw	0
  1839  00098C  EC39  F009         	call	_scale
  1840  000990  C083  F0B9         	movff	?_scale,sprintf@tmpval
  1841  000994  C084  F0BA         	movff	?_scale+1,sprintf@tmpval+1
  1842  000998  C085  F0BB         	movff	?_scale+2,sprintf@tmpval+2
  1843                           
  1844                           ;doprnt.c: 847: tmpval.integ *= fval;
  1845  00099C  C0B9  F074         	movff	sprintf@tmpval,___ftmul@f1
  1846  0009A0  C0BA  F075         	movff	sprintf@tmpval+1,___ftmul@f1+1
  1847  0009A4  C0BB  F076         	movff	sprintf@tmpval+2,___ftmul@f1+2
  1848  0009A8  C0BF  F077         	movff	sprintf@fval,___ftmul@f2
  1849  0009AC  C0C0  F078         	movff	sprintf@fval+1,___ftmul@f2+1
  1850  0009B0  C0C1  F079         	movff	sprintf@fval+2,___ftmul@f2+2
  1851  0009B4  EC57  F012         	call	___ftmul	;wreg free
  1852  0009B8  C074  F0B9         	movff	?___ftmul,sprintf@tmpval
  1853  0009BC  C075  F0BA         	movff	?___ftmul+1,sprintf@tmpval+1
  1854  0009C0  C076  F0BB         	movff	?___ftmul+2,sprintf@tmpval+2
  1855                           
  1856                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1857  0009C4  C0B9  F060         	movff	sprintf@tmpval,___ftge@ff1
  1858  0009C8  C0BA  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
  1859  0009CC  C0BB  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
  1860  0009D0  0E00               	movlw	0
  1861  0009D2  0100               	movlb	0	; () banked
  1862  0009D4  6F63               	movwf	___ftge@ff2& (0+255),b
  1863  0009D6  0E80               	movlw	128
  1864  0009D8  0100               	movlb	0	; () banked
  1865  0009DA  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  1866  0009DC  0E3F               	movlw	63
  1867  0009DE  0100               	movlb	0	; () banked
  1868  0009E0  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  1869  0009E2  ECC1  F015         	call	___ftge	;wreg free
  1870  0009E6  0100               	movlb	0	; () banked
  1871  0009E8  B0D8               	btfsc	status,0,c
  1872  0009EA  D005               	goto	l3543
  1873                           
  1874                           ; BSR set to: 0
  1875                           ;doprnt.c: 849: exp--;
  1876  0009EC  0100               	movlb	0	; () banked
  1877  0009EE  07BD               	decf	sprintf@exp& (0+255),f,b
  1878  0009F0  A0D8               	btfss	status,0,c
  1879  0009F2  07BE               	decf	(sprintf@exp+1)& (0+255),f,b
  1880  0009F4  D017               	goto	l3547
  1881  0009F6                     l3543:
  1882                           
  1883                           ; BSR set to: 0
  1884                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1885  0009F6  C0B9  F060         	movff	sprintf@tmpval,___ftge@ff1
  1886  0009FA  C0BA  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
  1887  0009FE  C0BB  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
  1888  000A02  0E00               	movlw	0
  1889  000A04  0100               	movlb	0	; () banked
  1890  000A06  6F63               	movwf	___ftge@ff2& (0+255),b
  1891  000A08  0E20               	movlw	32
  1892  000A0A  0100               	movlb	0	; () banked
  1893  000A0C  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  1894  000A0E  0E41               	movlw	65
  1895  000A10  0100               	movlb	0	; () banked
  1896  000A12  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  1897  000A14  ECC1  F015         	call	___ftge	;wreg free
  1898  000A18  0100               	movlb	0	; () banked
  1899  000A1A  A0D8               	btfss	status,0,c
  1900  000A1C  D003               	goto	l3547
  1901                           
  1902                           ; BSR set to: 0
  1903                           ;doprnt.c: 851: exp++;
  1904  000A1E  0100               	movlb	0	; () banked
  1905  000A20  4BBD               	infsnz	sprintf@exp& (0+255),f,b
  1906  000A22  2BBE               	incf	(sprintf@exp+1)& (0+255),f,b
  1907  000A24                     l3547:
  1908                           
  1909                           ; BSR set to: 0
  1910                           ;doprnt.c: 852: }
  1911                           ;doprnt.c: 1112: if(prec <= 12)
  1912  000A24  0100               	movlb	0	; () banked
  1913  000A26  BFC3               	btfsc	(sprintf@prec+1)& (0+255),7,b
  1914  000A28  D008               	goto	l3549
  1915  000A2A  0100               	movlb	0	; () banked
  1916  000A2C  51C3               	movf	(sprintf@prec+1)& (0+255),w,b
  1917  000A2E  E11D               	bnz	l3551
  1918  000A30  0E0D               	movlw	13
  1919  000A32  0100               	movlb	0	; () banked
  1920  000A34  5DC2               	subwf	sprintf@prec& (0+255),w,b
  1921  000A36  B0D8               	btfsc	status,0,c
  1922  000A38  D018               	goto	l3551
  1923  000A3A                     l3549:
  1924                           
  1925                           ; BSR set to: 0
  1926                           ;doprnt.c: 1113: fval += fround(prec);
  1927  000A3A  C0BF  F08D         	movff	sprintf@fval,___ftadd@f1
  1928  000A3E  C0C0  F08E         	movff	sprintf@fval+1,___ftadd@f1+1
  1929  000A42  C0C1  F08F         	movff	sprintf@fval+2,___ftadd@f1+2
  1930  000A46  0100               	movlb	0	; () banked
  1931  000A48  51C2               	movf	sprintf@prec& (0+255),w,b
  1932  000A4A  EC90  F00B         	call	_fround
  1933  000A4E  C083  F090         	movff	?_fround,___ftadd@f2
  1934  000A52  C084  F091         	movff	?_fround+1,___ftadd@f2+1
  1935  000A56  C085  F092         	movff	?_fround+2,___ftadd@f2+2
  1936  000A5A  ECE6  F00C         	call	___ftadd	;wreg free
  1937  000A5E  C08D  F0BF         	movff	?___ftadd,sprintf@fval
  1938  000A62  C08E  F0C0         	movff	?___ftadd+1,sprintf@fval+1
  1939  000A66  C08F  F0C1         	movff	?___ftadd+2,sprintf@fval+2
  1940  000A6A                     l3551:
  1941                           
  1942                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1943  000A6A  0100               	movlb	0	; () banked
  1944  000A6C  BFBE               	btfsc	(sprintf@exp+1)& (0+255),7,b
  1945  000A6E  D008               	goto	l3553
  1946  000A70  0100               	movlb	0	; () banked
  1947  000A72  51BE               	movf	(sprintf@exp+1)& (0+255),w,b
  1948  000A74  E12A               	bnz	l3559
  1949  000A76  0E0A               	movlw	10
  1950  000A78  0100               	movlb	0	; () banked
  1951  000A7A  5DBD               	subwf	sprintf@exp& (0+255),w,b
  1952  000A7C  B0D8               	btfsc	status,0,c
  1953  000A7E  D025               	goto	l3559
  1954  000A80                     l3553:
  1955                           
  1956                           ; BSR set to: 0
  1957  000A80  0100               	movlb	0	; () banked
  1958  000A82  51BF               	movf	sprintf@fval& (0+255),w,b
  1959  000A84  0100               	movlb	0	; () banked
  1960  000A86  11C0               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1961  000A88  0100               	movlb	0	; () banked
  1962  000A8A  11C1               	iorwf	(sprintf@fval+2)& (0+255),w,b
  1963  000A8C  B4D8               	btfsc	status,2,c
  1964  000A8E  D063               	goto	l3573
  1965                           
  1966                           ; BSR set to: 0
  1967  000A90  C0BF  F08A         	movff	sprintf@fval,___fttol@f1
  1968  000A94  C0C0  F08B         	movff	sprintf@fval+1,___fttol@f1+1
  1969  000A98  C0C1  F08C         	movff	sprintf@fval+2,___fttol@f1+2
  1970  000A9C  ECAC  F013         	call	___fttol	;wreg free
  1971  000AA0  0100               	movlb	0	; () banked
  1972  000AA2  518A               	movf	?___fttol& (0+255),w,b
  1973  000AA4  0100               	movlb	0	; () banked
  1974  000AA6  118B               	iorwf	(?___fttol+1)& (0+255),w,b
  1975  000AA8  0100               	movlb	0	; () banked
  1976  000AAA  118C               	iorwf	(?___fttol+2)& (0+255),w,b
  1977  000AAC  0100               	movlb	0	; () banked
  1978  000AAE  118D               	iorwf	(?___fttol+3)& (0+255),w,b
  1979  000AB0  A4D8               	btfss	status,2,c
  1980  000AB2  D051               	goto	l3573
  1981                           
  1982                           ; BSR set to: 0
  1983  000AB4  0100               	movlb	0	; () banked
  1984  000AB6  BFBE               	btfsc	(sprintf@exp+1)& (0+255),7,b
  1985  000AB8  D04E               	goto	l3573
  1986  000ABA  0100               	movlb	0	; () banked
  1987  000ABC  51BE               	movf	(sprintf@exp+1)& (0+255),w,b
  1988  000ABE  E105               	bnz	l3559
  1989  000AC0  0E02               	movlw	2
  1990  000AC2  0100               	movlb	0	; () banked
  1991  000AC4  5DBD               	subwf	sprintf@exp& (0+255),w,b
  1992  000AC6  A0D8               	btfss	status,0,c
  1993  000AC8  D046               	goto	l3573
  1994  000ACA                     l3559:
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1998  000ACA  C0B9  F060         	movff	sprintf@tmpval,___ftge@ff1
  1999  000ACE  C0BA  F061         	movff	sprintf@tmpval+1,___ftge@ff1+1
  2000  000AD2  C0BB  F062         	movff	sprintf@tmpval+2,___ftge@ff1+2
  2001  000AD6  0E70               	movlw	112
  2002  000AD8  0100               	movlb	0	; () banked
  2003  000ADA  6F63               	movwf	___ftge@ff2& (0+255),b
  2004  000ADC  0E89               	movlw	137
  2005  000ADE  0100               	movlb	0	; () banked
  2006  000AE0  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  2007  000AE2  0E40               	movlw	64
  2008  000AE4  0100               	movlb	0	; () banked
  2009  000AE6  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  2010  000AE8  ECC1  F015         	call	___ftge	;wreg free
  2011  000AEC  0100               	movlb	0	; () banked
  2012  000AEE  B0D8               	btfsc	status,0,c
  2013  000AF0  D003               	goto	l3563
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2017  000AF2  0100               	movlb	0	; () banked
  2018  000AF4  0EF7               	movlw	247
  2019  000AF6  D002               	goto	L1
  2020  000AF8                     l3563:
  2021                           
  2022                           ; BSR set to: 0
  2023                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2024  000AF8  0100               	movlb	0	; () banked
  2025  000AFA  0EF8               	movlw	248
  2026  000AFC                     L1:
  2027  000AFC  27BD               	addwf	sprintf@exp& (0+255),f,b
  2028  000AFE  0EFF               	movlw	255
  2029  000B00  23BE               	addwfc	(sprintf@exp+1)& (0+255),f,b
  2030                           
  2031                           ; BSR set to: 0
  2032                           ;doprnt.c: 1124: }
  2033                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  2034                           
  2035                           ; BSR set to: 0
  2036  000B02  0100               	movlb	0	; () banked
  2037  000B04  51BD               	movf	sprintf@exp& (0+255),w,b
  2038  000B06  EC39  F009         	call	_scale
  2039  000B0A  C083  F0B9         	movff	?_scale,sprintf@tmpval
  2040  000B0E  C084  F0BA         	movff	?_scale+1,sprintf@tmpval+1
  2041  000B12  C085  F0BB         	movff	?_scale+2,sprintf@tmpval+2
  2042                           
  2043                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2044  000B16  C0BF  F060         	movff	sprintf@fval,__tdiv_to_l_@f1
  2045  000B1A  C0C0  F061         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  2046  000B1E  C0C1  F062         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  2047  000B22  C0B9  F063         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  2048  000B26  C0BA  F064         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  2049  000B2A  C0BB  F065         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  2050  000B2E  EC11  F010         	call	__tdiv_to_l_	;wreg free
  2051  000B32  C060  F0B1         	movff	?__tdiv_to_l_,sprintf@val
  2052  000B36  C061  F0B2         	movff	?__tdiv_to_l_+1,sprintf@val+1
  2053  000B3A  C062  F0B3         	movff	?__tdiv_to_l_+2,sprintf@val+2
  2054  000B3E  C063  F0B4         	movff	?__tdiv_to_l_+3,sprintf@val+3
  2055                           
  2056                           ;doprnt.c: 1129: fval = 0.0;
  2057  000B42  0E00               	movlw	0
  2058  000B44  0100               	movlb	0	; () banked
  2059  000B46  6FBF               	movwf	sprintf@fval& (0+255),b
  2060  000B48  0E00               	movlw	0
  2061  000B4A  0100               	movlb	0	; () banked
  2062  000B4C  6FC0               	movwf	(sprintf@fval+1)& (0+255),b
  2063  000B4E  0E00               	movlw	0
  2064  000B50  0100               	movlb	0	; () banked
  2065  000B52  6FC1               	movwf	(sprintf@fval+2)& (0+255),b
  2066                           
  2067                           ;doprnt.c: 1130: } else {
  2068  000B54  D033               	goto	l3577
  2069  000B56                     l3573:
  2070                           
  2071                           ; BSR set to: 0
  2072                           ;doprnt.c: 1131: val = (unsigned long)fval;
  2073  000B56  C0BF  F08A         	movff	sprintf@fval,___fttol@f1
  2074  000B5A  C0C0  F08B         	movff	sprintf@fval+1,___fttol@f1+1
  2075  000B5E  C0C1  F08C         	movff	sprintf@fval+2,___fttol@f1+2
  2076  000B62  ECAC  F013         	call	___fttol	;wreg free
  2077  000B66  C08A  F0B1         	movff	?___fttol,sprintf@val
  2078  000B6A  C08B  F0B2         	movff	?___fttol+1,sprintf@val+1
  2079  000B6E  C08C  F0B3         	movff	?___fttol+2,sprintf@val+2
  2080  000B72  C08D  F0B4         	movff	?___fttol+3,sprintf@val+3
  2081                           
  2082                           ;doprnt.c: 1132: fval -= (double)val;
  2083  000B76  C0BF  F099         	movff	sprintf@fval,___ftsub@f1
  2084  000B7A  C0C0  F09A         	movff	sprintf@fval+1,___ftsub@f1+1
  2085  000B7E  C0C1  F09B         	movff	sprintf@fval+2,___ftsub@f1+2
  2086  000B82  C0B1  F068         	movff	sprintf@val,___lltoft@c
  2087  000B86  C0B2  F069         	movff	sprintf@val+1,___lltoft@c+1
  2088  000B8A  C0B3  F06A         	movff	sprintf@val+2,___lltoft@c+2
  2089  000B8E  C0B4  F06B         	movff	sprintf@val+3,___lltoft@c+3
  2090  000B92  ECD7  F017         	call	___lltoft	;wreg free
  2091  000B96  C068  F09C         	movff	?___lltoft,___ftsub@f2
  2092  000B9A  C069  F09D         	movff	?___lltoft+1,___ftsub@f2+1
  2093  000B9E  C06A  F09E         	movff	?___lltoft+2,___ftsub@f2+2
  2094  000BA2  EC52  F018         	call	___ftsub	;wreg free
  2095  000BA6  C099  F0BF         	movff	?___ftsub,sprintf@fval
  2096  000BAA  C09A  F0C0         	movff	?___ftsub+1,sprintf@fval+1
  2097  000BAE  C09B  F0C1         	movff	?___ftsub+2,sprintf@fval+2
  2098                           
  2099                           ;doprnt.c: 1133: exp = 0;
  2100  000BB2  0E00               	movlw	0
  2101  000BB4  0100               	movlb	0	; () banked
  2102  000BB6  6FBE               	movwf	(sprintf@exp+1)& (0+255),b
  2103  000BB8  0E00               	movlw	0
  2104  000BBA  6FBD               	movwf	sprintf@exp& (0+255),b
  2105  000BBC                     l3577:
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;doprnt.c: 1134: }
  2109                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2110  000BBC  0E01               	movlw	1
  2111  000BBE  0100               	movlb	0	; () banked
  2112  000BC0  6FC4               	movwf	sprintf@c& (0+255),b
  2113  000BC2                     l3579:
  2114                           
  2115                           ; BSR set to: 0
  2116  000BC2  0E0A               	movlw	10
  2117  000BC4  0100               	movlb	0	; () banked
  2118  000BC6  19C4               	xorwf	sprintf@c& (0+255),w,b
  2119  000BC8  B4D8               	btfsc	status,2,c
  2120  000BCA  D01E               	goto	l3591
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;doprnt.c: 1137: if(val < dpowers[c])
  2124                           
  2125                           ; BSR set to: 0
  2126                           
  2127                           ; BSR set to: 0
  2128  000BCC  0100               	movlb	0	; () banked
  2129  000BCE  51C4               	movf	sprintf@c& (0+255),w,b
  2130  000BD0  0D04               	mullw	4
  2131  000BD2  0E01               	movlw	low _dpowers
  2132  000BD4  24F3               	addwf	prodl,w,c
  2133  000BD6  6EF6               	movwf	tblptrl,c
  2134  000BD8  0E06               	movlw	high _dpowers
  2135  000BDA  20F4               	addwfc	prodh,w,c
  2136  000BDC  6EF7               	movwf	tblptrh,c
  2137  000BDE                     	if	0	;There are less than 3 active tblptr bytes
  2138  000BDE                     	endif
  2139  000BDE  0009               	tblrd		*+
  2140  000BE0  50F5               	movf	tablat,w,c
  2141  000BE2  0100               	movlb	0	; () banked
  2142  000BE4  5DB1               	subwf	sprintf@val& (0+255),w,b
  2143  000BE6  0009               	tblrd		*+
  2144  000BE8  50F5               	movf	tablat,w,c
  2145  000BEA  0100               	movlb	0	; () banked
  2146  000BEC  59B2               	subwfb	(sprintf@val+1)& (0+255),w,b
  2147  000BEE  0009               	tblrd		*+
  2148  000BF0  50F5               	movf	tablat,w,c
  2149  000BF2  0100               	movlb	0	; () banked
  2150  000BF4  59B3               	subwfb	(sprintf@val+2)& (0+255),w,b
  2151  000BF6  0009               	tblrd		*+
  2152  000BF8  50F5               	movf	tablat,w,c
  2153  000BFA  0100               	movlb	0	; () banked
  2154  000BFC  59B4               	subwfb	(sprintf@val+3)& (0+255),w,b
  2155  000BFE  A0D8               	btfss	status,0,c
  2156  000C00  D003               	goto	l3591
  2157                           
  2158                           ; BSR set to: 0
  2159                           
  2160                           ; BSR set to: 0
  2161                           
  2162                           ; BSR set to: 0
  2163                           ;doprnt.c: 1138: break;
  2164  000C02  0100               	movlb	0	; () banked
  2165  000C04  2BC4               	incf	sprintf@c& (0+255),f,b
  2166  000C06  D7DD               	goto	l3579
  2167  000C08                     l3591:
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;doprnt.c: 1142: width -= prec + c + exp;
  2171  000C08  C0C4  F0A6         	movff	sprintf@c,??_sprintf
  2172  000C0C  0100               	movlb	0	; () banked
  2173  000C0E  6BA7               	clrf	(??_sprintf+1)& (0+255),b
  2174  000C10  BFA6               	btfsc	??_sprintf& (0+255),7,b
  2175  000C12  07A7               	decf	(??_sprintf+1)& (0+255),f,b
  2176  000C14  0100               	movlb	0	; () banked
  2177  000C16  51C2               	movf	sprintf@prec& (0+255),w,b
  2178  000C18  0100               	movlb	0	; () banked
  2179  000C1A  27A6               	addwf	??_sprintf& (0+255),f,b
  2180  000C1C  0100               	movlb	0	; () banked
  2181  000C1E  51C3               	movf	(sprintf@prec+1)& (0+255),w,b
  2182  000C20  0100               	movlb	0	; () banked
  2183  000C22  23A7               	addwfc	(??_sprintf+1)& (0+255),f,b
  2184  000C24  0100               	movlb	0	; () banked
  2185  000C26  51BD               	movf	sprintf@exp& (0+255),w,b
  2186  000C28  0100               	movlb	0	; () banked
  2187  000C2A  27A6               	addwf	??_sprintf& (0+255),f,b
  2188  000C2C  0100               	movlb	0	; () banked
  2189  000C2E  51BE               	movf	(sprintf@exp+1)& (0+255),w,b
  2190  000C30  0100               	movlb	0	; () banked
  2191  000C32  23A7               	addwfc	(??_sprintf+1)& (0+255),f,b
  2192  000C34  0100               	movlb	0	; () banked
  2193  000C36  51A6               	movf	??_sprintf& (0+255),w,b
  2194  000C38  0100               	movlb	0	; () banked
  2195  000C3A  5FB7               	subwf	sprintf@width& (0+255),f,b
  2196  000C3C  0100               	movlb	0	; () banked
  2197  000C3E  51A7               	movf	(??_sprintf+1)& (0+255),w,b
  2198  000C40  0100               	movlb	0	; () banked
  2199  000C42  5BB8               	subwfb	(sprintf@width+1)& (0+255),f,b
  2200                           
  2201                           ;doprnt.c: 1143: if(
  2202                           ;doprnt.c: 1147: prec)
  2203  000C44  0100               	movlb	0	; () banked
  2204  000C46  51C2               	movf	sprintf@prec& (0+255),w,b
  2205  000C48  0100               	movlb	0	; () banked
  2206  000C4A  11C3               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2207  000C4C  B4D8               	btfsc	status,2,c
  2208  000C4E  D004               	goto	l3595
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;doprnt.c: 1148: width--;
  2212  000C50  0100               	movlb	0	; () banked
  2213  000C52  07B7               	decf	sprintf@width& (0+255),f,b
  2214  000C54  A0D8               	btfss	status,0,c
  2215  000C56  07B8               	decf	(sprintf@width+1)& (0+255),f,b
  2216  000C58                     l3595:
  2217                           
  2218                           ; BSR set to: 0
  2219                           ;doprnt.c: 1149: if(flag & 0x03)
  2220  000C58  0E03               	movlw	3
  2221  000C5A  0100               	movlb	0	; () banked
  2222  000C5C  15B5               	andwf	sprintf@flag& (0+255),w,b
  2223  000C5E  0100               	movlb	0	; () banked
  2224  000C60  6FA6               	movwf	??_sprintf& (0+255),b
  2225  000C62  0E00               	movlw	0
  2226  000C64  0100               	movlb	0	; () banked
  2227  000C66  15B6               	andwf	(sprintf@flag+1)& (0+255),w,b
  2228  000C68  0100               	movlb	0	; () banked
  2229  000C6A  6FA7               	movwf	(??_sprintf+1)& (0+255),b
  2230  000C6C  0100               	movlb	0	; () banked
  2231  000C6E  51A6               	movf	??_sprintf& (0+255),w,b
  2232  000C70  0100               	movlb	0	; () banked
  2233  000C72  11A7               	iorwf	(??_sprintf+1)& (0+255),w,b
  2234  000C74  B4D8               	btfsc	status,2,c
  2235  000C76  D00E               	goto	l3605
  2236  000C78  D009               	goto	l3603
  2237  000C7A                     l3599:
  2238                           
  2239                           ; BSR set to: 0
  2240                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  2241  000C7A  C09F  FFD9         	movff	sprintf@sp,fsr2l
  2242  000C7E  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  2243  000C82  0E20               	movlw	32
  2244  000C84  6EDF               	movwf	indf2,c
  2245                           
  2246                           ; BSR set to: 0
  2247  000C86  0100               	movlb	0	; () banked
  2248  000C88  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  2249  000C8A  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  2250  000C8C                     l3603:
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;doprnt.c: 1182: width--;
  2254  000C8C  0100               	movlb	0	; () banked
  2255  000C8E  07B7               	decf	sprintf@width& (0+255),f,b
  2256  000C90  A0D8               	btfss	status,0,c
  2257  000C92  07B8               	decf	(sprintf@width+1)& (0+255),f,b
  2258  000C94                     l3605:
  2259                           
  2260                           ; BSR set to: 0
  2261  000C94  0100               	movlb	0	; () banked
  2262  000C96  BFB8               	btfsc	(sprintf@width+1)& (0+255),7,b
  2263  000C98  D007               	goto	l3607
  2264  000C9A  0100               	movlb	0	; () banked
  2265  000C9C  51B8               	movf	(sprintf@width+1)& (0+255),w,b
  2266  000C9E  E1ED               	bnz	l3599
  2267  000CA0  0100               	movlb	0	; () banked
  2268  000CA2  05B7               	decf	sprintf@width& (0+255),w,b
  2269  000CA4  B0D8               	btfsc	status,0,c
  2270  000CA6  D7E9               	goto	l3599
  2271  000CA8                     l3607:
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;doprnt.c: 1183: }
  2275                           ;doprnt.c: 1188: if(flag & 0x03)
  2276  000CA8  0E03               	movlw	3
  2277  000CAA  0100               	movlb	0	; () banked
  2278  000CAC  15B5               	andwf	sprintf@flag& (0+255),w,b
  2279  000CAE  0100               	movlb	0	; () banked
  2280  000CB0  6FA6               	movwf	??_sprintf& (0+255),b
  2281  000CB2  0E00               	movlw	0
  2282  000CB4  0100               	movlb	0	; () banked
  2283  000CB6  15B6               	andwf	(sprintf@flag+1)& (0+255),w,b
  2284  000CB8  0100               	movlb	0	; () banked
  2285  000CBA  6FA7               	movwf	(??_sprintf+1)& (0+255),b
  2286  000CBC  0100               	movlb	0	; () banked
  2287  000CBE  51A6               	movf	??_sprintf& (0+255),w,b
  2288  000CC0  0100               	movlb	0	; () banked
  2289  000CC2  11A7               	iorwf	(??_sprintf+1)& (0+255),w,b
  2290  000CC4  B4D8               	btfsc	status,2,c
  2291  000CC6  D055               	goto	l3621
  2292                           
  2293                           ; BSR set to: 0
  2294                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  2295  000CC8  C09F  FFD9         	movff	sprintf@sp,fsr2l
  2296  000CCC  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  2297  000CD0  0E2D               	movlw	45
  2298  000CD2  D04D               	goto	L2
  2299  000CD4                     l3611:
  2300                           
  2301                           ; BSR set to: 0
  2302  000CD4  0100               	movlb	0	; () banked
  2303  000CD6  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  2304  000CD8  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;doprnt.c: 1195: }
  2308                           ;doprnt.c: 1196: while(c--) {
  2309  000CDA  D04B               	goto	l3621
  2310  000CDC                     l3613:
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;doprnt.c: 1200: {
  2314                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  2315  000CDC  C0B1  F060         	movff	sprintf@val,___lldiv@dividend
  2316  000CE0  C0B2  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  2317  000CE4  C0B3  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  2318  000CE8  C0B4  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  2319  000CEC  0100               	movlb	0	; () banked
  2320  000CEE  51C4               	movf	sprintf@c& (0+255),w,b
  2321  000CF0  0D04               	mullw	4
  2322  000CF2  0E01               	movlw	low _dpowers
  2323  000CF4  24F3               	addwf	prodl,w,c
  2324  000CF6  6EF6               	movwf	tblptrl,c
  2325  000CF8  0E06               	movlw	high _dpowers
  2326  000CFA  20F4               	addwfc	prodh,w,c
  2327  000CFC  6EF7               	movwf	tblptrh,c
  2328  000CFE                     	if	0	;There are less than 3 active tblptr bytes
  2329  000CFE                     	endif
  2330  000CFE  0009               	tblrd		*+
  2331  000D00  CFF5 F064          	movff	tablat,___lldiv@divisor
  2332  000D04  0009               	tblrd		*+
  2333  000D06  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  2334  000D0A  0009               	tblrd		*+
  2335  000D0C  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  2336  000D10  000A               	tblrd		*-
  2337  000D12  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  2338  000D16  EC84  F016         	call	___lldiv	;wreg free
  2339  000D1A  C060  F0B9         	movff	?___lldiv,sprintf@tmpval
  2340  000D1E  C061  F0BA         	movff	?___lldiv+1,sprintf@tmpval+1
  2341  000D22  C062  F0BB         	movff	?___lldiv+2,sprintf@tmpval+2
  2342  000D26  C063  F0BC         	movff	?___lldiv+3,sprintf@tmpval+3
  2343                           
  2344                           ;doprnt.c: 1202: tmpval.vd %= 10;
  2345  000D2A  C0B9  F06D         	movff	sprintf@tmpval,___llmod@dividend
  2346  000D2E  C0BA  F06E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2347  000D32  C0BB  F06F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2348  000D36  C0BC  F070         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2349  000D3A  0E0A               	movlw	10
  2350  000D3C  0100               	movlb	0	; () banked
  2351  000D3E  6F71               	movwf	___llmod@divisor& (0+255),b
  2352  000D40  0E00               	movlw	0
  2353  000D42  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  2354  000D44  0E00               	movlw	0
  2355  000D46  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  2356  000D48  0E00               	movlw	0
  2357  000D4A  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  2358  000D4C  EC8A  F017         	call	___llmod	;wreg free
  2359  000D50  C06D  F0B9         	movff	?___llmod,sprintf@tmpval
  2360  000D54  C06E  F0BA         	movff	?___llmod+1,sprintf@tmpval+1
  2361  000D58  C06F  F0BB         	movff	?___llmod+2,sprintf@tmpval+2
  2362  000D5C  C070  F0BC         	movff	?___llmod+3,sprintf@tmpval+3
  2363                           
  2364                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  2365  000D60  0100               	movlb	0	; () banked
  2366  000D62  51B9               	movf	sprintf@tmpval& (0+255),w,b
  2367  000D64  0F30               	addlw	48
  2368  000D66  C09F  FFD9         	movff	sprintf@sp,fsr2l
  2369  000D6A  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  2370  000D6E                     L2:
  2371  000D6E  6EDF               	movwf	indf2,c
  2372  000D70  D7B1               	goto	l3611
  2373  000D72                     l3621:
  2374                           
  2375                           ; BSR set to: 0
  2376  000D72  0100               	movlb	0	; () banked
  2377  000D74  07C4               	decf	sprintf@c& (0+255),f,b
  2378  000D76  0100               	movlb	0	; () banked
  2379  000D78  29C4               	incf	sprintf@c& (0+255),w,b
  2380  000D7A  B4D8               	btfsc	status,2,c
  2381  000D7C  D00E               	goto	l3629
  2382  000D7E  D7AE               	goto	l3613
  2383  000D80                     l3623:
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  2387  000D80  C09F  FFD9         	movff	sprintf@sp,fsr2l
  2388  000D84  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  2389  000D88  0E30               	movlw	48
  2390  000D8A  6EDF               	movwf	indf2,c
  2391                           
  2392                           ; BSR set to: 0
  2393  000D8C  0100               	movlb	0	; () banked
  2394  000D8E  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  2395  000D90  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  2396                           
  2397                           ; BSR set to: 0
  2398                           ;doprnt.c: 1209: exp--;
  2399  000D92  0100               	movlb	0	; () banked
  2400  000D94  07BD               	decf	sprintf@exp& (0+255),f,b
  2401  000D96  A0D8               	btfss	status,0,c
  2402  000D98  07BE               	decf	(sprintf@exp+1)& (0+255),f,b
  2403  000D9A                     l3629:
  2404                           
  2405                           ; BSR set to: 0
  2406  000D9A  0100               	movlb	0	; () banked
  2407  000D9C  BFBE               	btfsc	(sprintf@exp+1)& (0+255),7,b
  2408  000D9E  D007               	goto	l3631
  2409  000DA0  0100               	movlb	0	; () banked
  2410  000DA2  51BE               	movf	(sprintf@exp+1)& (0+255),w,b
  2411  000DA4  E1ED               	bnz	l3623
  2412  000DA6  0100               	movlb	0	; () banked
  2413  000DA8  05BD               	decf	sprintf@exp& (0+255),w,b
  2414  000DAA  B0D8               	btfsc	status,0,c
  2415  000DAC  D7E9               	goto	l3623
  2416  000DAE                     l3631:
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;doprnt.c: 1210: }
  2420                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2421  000DAE  0100               	movlb	0	; () banked
  2422  000DB0  BFC3               	btfsc	(sprintf@prec+1)& (0+255),7,b
  2423  000DB2  D00C               	goto	l402
  2424  000DB4  0100               	movlb	0	; () banked
  2425  000DB6  51C3               	movf	(sprintf@prec+1)& (0+255),w,b
  2426  000DB8  E105               	bnz	u4010
  2427  000DBA  0E09               	movlw	9
  2428  000DBC  0100               	movlb	0	; () banked
  2429  000DBE  5DC2               	subwf	sprintf@prec& (0+255),w,b
  2430  000DC0  A0D8               	btfss	status,0,c
  2431  000DC2  D004               	goto	l402
  2432  000DC4                     u4010:
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2436  000DC4  0E08               	movlw	8
  2437  000DC6  0100               	movlb	0	; () banked
  2438  000DC8  6FC4               	movwf	sprintf@c& (0+255),b
  2439  000DCA  D002               	goto	l3635
  2440  000DCC                     l402:
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;doprnt.c: 1213: else
  2444                           ;doprnt.c: 1214: c = prec;
  2445  000DCC  C0C2  F0C4         	movff	sprintf@prec,sprintf@c
  2446  000DD0                     l3635:
  2447                           
  2448                           ; BSR set to: 0
  2449                           ;doprnt.c: 1215: prec -= c;
  2450  000DD0  0100               	movlb	0	; () banked
  2451  000DD2  51C4               	movf	sprintf@c& (0+255),w,b
  2452  000DD4  0100               	movlb	0	; () banked
  2453  000DD6  5FC2               	subwf	sprintf@prec& (0+255),f,b
  2454  000DD8  0E00               	movlw	0
  2455  000DDA  0100               	movlb	0	; () banked
  2456  000DDC  BFC4               	btfsc	sprintf@c& (0+255),7,b
  2457  000DDE  0EFF               	movlw	255
  2458  000DE0  0100               	movlb	0	; () banked
  2459  000DE2  5BC3               	subwfb	(sprintf@prec+1)& (0+255),f,b
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;doprnt.c: 1219: if(c)
  2463  000DE4  0100               	movlb	0	; () banked
  2464  000DE6  51C4               	movf	sprintf@c& (0+255),w,b
  2465  000DE8  0100               	movlb	0	; () banked
  2466  000DEA  B4D8               	btfsc	status,2,c
  2467  000DEC  D009               	goto	l3643
  2468                           
  2469                           ; BSR set to: 0
  2470                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  2471  000DEE  C09F  FFD9         	movff	sprintf@sp,fsr2l
  2472  000DF2  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  2473  000DF6  0E2E               	movlw	46
  2474  000DF8  6EDF               	movwf	indf2,c
  2475                           
  2476                           ; BSR set to: 0
  2477  000DFA  0100               	movlb	0	; () banked
  2478  000DFC  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  2479  000DFE  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  2480  000E00                     l3643:
  2481                           
  2482                           ; BSR set to: 0
  2483                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2484  000E00  0100               	movlb	0	; () banked
  2485  000E02  51C4               	movf	sprintf@c& (0+255),w,b
  2486  000E04  EC39  F009         	call	_scale
  2487  000E08  C083  F0AC         	movff	?_scale,_sprintf$1577
  2488  000E0C  C084  F0AD         	movff	?_scale+1,_sprintf$1577+1
  2489  000E10  C085  F0AE         	movff	?_scale+2,_sprintf$1577+2
  2490                           
  2491                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2492  000E14  C0BF  F077         	movff	sprintf@fval,___ftmul@f2
  2493  000E18  C0C0  F078         	movff	sprintf@fval+1,___ftmul@f2+1
  2494  000E1C  C0C1  F079         	movff	sprintf@fval+2,___ftmul@f2+2
  2495  000E20  C0AC  F074         	movff	_sprintf$1577,___ftmul@f1
  2496  000E24  C0AD  F075         	movff	_sprintf$1577+1,___ftmul@f1+1
  2497  000E28  C0AE  F076         	movff	_sprintf$1577+2,___ftmul@f1+2
  2498  000E2C  EC57  F012         	call	___ftmul	;wreg free
  2499  000E30  C074  F08A         	movff	?___ftmul,___fttol@f1
  2500  000E34  C075  F08B         	movff	?___ftmul+1,___fttol@f1+1
  2501  000E38  C076  F08C         	movff	?___ftmul+2,___fttol@f1+2
  2502  000E3C  ECAC  F013         	call	___fttol	;wreg free
  2503  000E40  C08A  F0B1         	movff	?___fttol,sprintf@val
  2504  000E44  C08B  F0B2         	movff	?___fttol+1,sprintf@val+1
  2505  000E48  C08C  F0B3         	movff	?___fttol+2,sprintf@val+2
  2506  000E4C  C08D  F0B4         	movff	?___fttol+3,sprintf@val+3
  2507                           
  2508                           ;doprnt.c: 1228: while(c--) {
  2509  000E50  D074               	goto	l3657
  2510  000E52                     l3647:
  2511                           
  2512                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2513  000E52  C0B1  F060         	movff	sprintf@val,___lldiv@dividend
  2514  000E56  C0B2  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  2515  000E5A  C0B3  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  2516  000E5E  C0B4  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  2517  000E62  0100               	movlb	0	; () banked
  2518  000E64  51C4               	movf	sprintf@c& (0+255),w,b
  2519  000E66  0D04               	mullw	4
  2520  000E68  0E01               	movlw	low _dpowers
  2521  000E6A  24F3               	addwf	prodl,w,c
  2522  000E6C  6EF6               	movwf	tblptrl,c
  2523  000E6E  0E06               	movlw	high _dpowers
  2524  000E70  20F4               	addwfc	prodh,w,c
  2525  000E72  6EF7               	movwf	tblptrh,c
  2526  000E74                     	if	0	;There are less than 3 active tblptr bytes
  2527  000E74                     	endif
  2528  000E74  0009               	tblrd		*+
  2529  000E76  CFF5 F064          	movff	tablat,___lldiv@divisor
  2530  000E7A  0009               	tblrd		*+
  2531  000E7C  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  2532  000E80  0009               	tblrd		*+
  2533  000E82  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  2534  000E86  000A               	tblrd		*-
  2535  000E88  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  2536  000E8C  EC84  F016         	call	___lldiv	;wreg free
  2537  000E90  C060  F0B9         	movff	?___lldiv,sprintf@tmpval
  2538  000E94  C061  F0BA         	movff	?___lldiv+1,sprintf@tmpval+1
  2539  000E98  C062  F0BB         	movff	?___lldiv+2,sprintf@tmpval+2
  2540  000E9C  C063  F0BC         	movff	?___lldiv+3,sprintf@tmpval+3
  2541                           
  2542                           ;doprnt.c: 1230: tmpval.vd %= 10;
  2543  000EA0  C0B9  F06D         	movff	sprintf@tmpval,___llmod@dividend
  2544  000EA4  C0BA  F06E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2545  000EA8  C0BB  F06F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2546  000EAC  C0BC  F070         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2547  000EB0  0E0A               	movlw	10
  2548  000EB2  0100               	movlb	0	; () banked
  2549  000EB4  6F71               	movwf	___llmod@divisor& (0+255),b
  2550  000EB6  0E00               	movlw	0
  2551  000EB8  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  2552  000EBA  0E00               	movlw	0
  2553  000EBC  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  2554  000EBE  0E00               	movlw	0
  2555  000EC0  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  2556  000EC2  EC8A  F017         	call	___llmod	;wreg free
  2557  000EC6  C06D  F0B9         	movff	?___llmod,sprintf@tmpval
  2558  000ECA  C06E  F0BA         	movff	?___llmod+1,sprintf@tmpval+1
  2559  000ECE  C06F  F0BB         	movff	?___llmod+2,sprintf@tmpval+2
  2560  000ED2  C070  F0BC         	movff	?___llmod+3,sprintf@tmpval+3
  2561                           
  2562                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  2563  000ED6  0100               	movlb	0	; () banked
  2564  000ED8  51B9               	movf	sprintf@tmpval& (0+255),w,b
  2565  000EDA  0F30               	addlw	48
  2566  000EDC  C09F  FFD9         	movff	sprintf@sp,fsr2l
  2567  000EE0  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  2568  000EE4  6EDF               	movwf	indf2,c
  2569                           
  2570                           ; BSR set to: 0
  2571  000EE6  0100               	movlb	0	; () banked
  2572  000EE8  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  2573  000EEA  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;doprnt.c: 1232: val %= dpowers[c];
  2577  000EEC  C0B1  F06D         	movff	sprintf@val,___llmod@dividend
  2578  000EF0  C0B2  F06E         	movff	sprintf@val+1,___llmod@dividend+1
  2579  000EF4  C0B3  F06F         	movff	sprintf@val+2,___llmod@dividend+2
  2580  000EF8  C0B4  F070         	movff	sprintf@val+3,___llmod@dividend+3
  2581  000EFC  0100               	movlb	0	; () banked
  2582  000EFE  51C4               	movf	sprintf@c& (0+255),w,b
  2583  000F00  0D04               	mullw	4
  2584  000F02  0E01               	movlw	low _dpowers
  2585  000F04  24F3               	addwf	prodl,w,c
  2586  000F06  6EF6               	movwf	tblptrl,c
  2587  000F08  0E06               	movlw	high _dpowers
  2588  000F0A  20F4               	addwfc	prodh,w,c
  2589  000F0C  6EF7               	movwf	tblptrh,c
  2590  000F0E                     	if	0	;There are less than 3 active tblptr bytes
  2591  000F0E                     	endif
  2592  000F0E  0009               	tblrd		*+
  2593  000F10  CFF5 F071          	movff	tablat,___llmod@divisor
  2594  000F14  0009               	tblrd		*+
  2595  000F16  CFF5 F072          	movff	tablat,___llmod@divisor+1
  2596  000F1A  0009               	tblrd		*+
  2597  000F1C  CFF5 F073          	movff	tablat,___llmod@divisor+2
  2598  000F20  000A               	tblrd		*-
  2599  000F22  CFF5 F074          	movff	tablat,___llmod@divisor+3
  2600  000F26  EC8A  F017         	call	___llmod	;wreg free
  2601  000F2A  C06D  F0B1         	movff	?___llmod,sprintf@val
  2602  000F2E  C06E  F0B2         	movff	?___llmod+1,sprintf@val+1
  2603  000F32  C06F  F0B3         	movff	?___llmod+2,sprintf@val+2
  2604  000F36  C070  F0B4         	movff	?___llmod+3,sprintf@val+3
  2605  000F3A                     l3657:
  2606  000F3A  0100               	movlb	0	; () banked
  2607  000F3C  07C4               	decf	sprintf@c& (0+255),f,b
  2608  000F3E  0100               	movlb	0	; () banked
  2609  000F40  29C4               	incf	sprintf@c& (0+255),w,b
  2610  000F42  B4D8               	btfsc	status,2,c
  2611  000F44  D00E               	goto	l3665
  2612  000F46  D785               	goto	l3647
  2613  000F48                     l3659:
  2614                           
  2615                           ; BSR set to: 0
  2616                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  2617  000F48  C09F  FFD9         	movff	sprintf@sp,fsr2l
  2618  000F4C  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  2619  000F50  0E30               	movlw	48
  2620  000F52  6EDF               	movwf	indf2,c
  2621                           
  2622                           ; BSR set to: 0
  2623  000F54  0100               	movlb	0	; () banked
  2624  000F56  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  2625  000F58  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;doprnt.c: 1237: prec--;
  2629  000F5A  0100               	movlb	0	; () banked
  2630  000F5C  07C2               	decf	sprintf@prec& (0+255),f,b
  2631  000F5E  A0D8               	btfss	status,0,c
  2632  000F60  07C3               	decf	(sprintf@prec+1)& (0+255),f,b
  2633  000F62                     l3665:
  2634                           
  2635                           ; BSR set to: 0
  2636  000F62  0100               	movlb	0	; () banked
  2637  000F64  51C2               	movf	sprintf@prec& (0+255),w,b
  2638  000F66  0100               	movlb	0	; () banked
  2639  000F68  11C3               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2640  000F6A  B4D8               	btfsc	status,2,c
  2641  000F6C  D16C               	goto	l3745
  2642  000F6E  D7EC               	goto	l3659
  2643  000F70                     l368:
  2644                           
  2645                           ; BSR set to: 0
  2646                           ;doprnt.c: 1246: }
  2647                           ;doprnt.c: 1273: {
  2648                           ;doprnt.c: 1281: if(flag & 0x10)
  2649  000F70  0100               	movlb	0	; () banked
  2650  000F72  A9B5               	btfss	sprintf@flag& (0+255),4,b
  2651  000F74  D00E               	goto	l3671
  2652                           
  2653                           ; BSR set to: 0
  2654                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  2655  000F76  C0AF  FFD9         	movff	sprintf@ap,fsr2l
  2656  000F7A  C0B0  FFDA         	movff	sprintf@ap+1,fsr2h
  2657  000F7E  CFDE F0B1          	movff	postinc2,sprintf@val
  2658  000F82  CFDE F0B2          	movff	postinc2,sprintf@val+1
  2659  000F86  CFDE F0B3          	movff	postinc2,sprintf@val+2
  2660  000F8A  CFDE F0B4          	movff	postinc2,sprintf@val+3
  2661                           
  2662                           ; BSR set to: 0
  2663  000F8E  0E04               	movlw	4
  2664  000F90  D010               	goto	L3
  2665  000F92                     l3671:
  2666                           
  2667                           ; BSR set to: 0
  2668                           ;doprnt.c: 1283: else
  2669                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2670  000F92  C0AF  FFD9         	movff	sprintf@ap,fsr2l
  2671  000F96  C0B0  FFDA         	movff	sprintf@ap+1,fsr2h
  2672  000F9A  CFDE F0A6          	movff	postinc2,??_sprintf
  2673  000F9E  CFDD F0A7          	movff	postdec2,??_sprintf+1
  2674  000FA2  C0A6  F0B1         	movff	??_sprintf,sprintf@val
  2675  000FA6  C0A7  F0B2         	movff	??_sprintf+1,sprintf@val+1
  2676  000FAA  0100               	movlb	0	; () banked
  2677  000FAC  6BB3               	clrf	(sprintf@val+2)& (0+255),b
  2678  000FAE  6BB4               	clrf	(sprintf@val+3)& (0+255),b
  2679                           
  2680                           ; BSR set to: 0
  2681  000FB0  0E02               	movlw	2
  2682  000FB2                     L3:
  2683  000FB2  0100               	movlb	0	; () banked
  2684  000FB4  27AF               	addwf	sprintf@ap& (0+255),f,b
  2685  000FB6  0E00               	movlw	0
  2686  000FB8  23B0               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2687                           
  2688                           ; BSR set to: 0
  2689                           ;doprnt.c: 1287: }
  2690                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  2691                           
  2692                           ; BSR set to: 0
  2693  000FBA  0100               	movlb	0	; () banked
  2694  000FBC  51C2               	movf	sprintf@prec& (0+255),w,b
  2695  000FBE  0100               	movlb	0	; () banked
  2696  000FC0  11C3               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2697  000FC2  A4D8               	btfss	status,2,c
  2698  000FC4  D00D               	goto	l3681
  2699                           
  2700                           ; BSR set to: 0
  2701  000FC6  0100               	movlb	0	; () banked
  2702  000FC8  51B1               	movf	sprintf@val& (0+255),w,b
  2703  000FCA  0100               	movlb	0	; () banked
  2704  000FCC  11B2               	iorwf	(sprintf@val+1)& (0+255),w,b
  2705  000FCE  0100               	movlb	0	; () banked
  2706  000FD0  11B3               	iorwf	(sprintf@val+2)& (0+255),w,b
  2707  000FD2  0100               	movlb	0	; () banked
  2708  000FD4  11B4               	iorwf	(sprintf@val+3)& (0+255),w,b
  2709  000FD6  A4D8               	btfss	status,2,c
  2710  000FD8  D003               	goto	l3681
  2711                           
  2712                           ; BSR set to: 0
  2713                           ;doprnt.c: 1291: prec++;
  2714  000FDA  0100               	movlb	0	; () banked
  2715  000FDC  4BC2               	infsnz	sprintf@prec& (0+255),f,b
  2716  000FDE  2BC3               	incf	(sprintf@prec+1)& (0+255),f,b
  2717  000FE0                     l3681:
  2718                           
  2719                           ; BSR set to: 0
  2720                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2721  000FE0  0E01               	movlw	1
  2722  000FE2  0100               	movlb	0	; () banked
  2723  000FE4  6FC4               	movwf	sprintf@c& (0+255),b
  2724  000FE6                     l3683:
  2725                           
  2726                           ; BSR set to: 0
  2727  000FE6  0E0A               	movlw	10
  2728  000FE8  0100               	movlb	0	; () banked
  2729  000FEA  19C4               	xorwf	sprintf@c& (0+255),w,b
  2730  000FEC  B4D8               	btfsc	status,2,c
  2731  000FEE  D01E               	goto	l3695
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;doprnt.c: 1306: if(val < dpowers[c])
  2735                           
  2736                           ; BSR set to: 0
  2737                           
  2738                           ; BSR set to: 0
  2739  000FF0  0100               	movlb	0	; () banked
  2740  000FF2  51C4               	movf	sprintf@c& (0+255),w,b
  2741  000FF4  0D04               	mullw	4
  2742  000FF6  0E01               	movlw	low _dpowers
  2743  000FF8  24F3               	addwf	prodl,w,c
  2744  000FFA  6EF6               	movwf	tblptrl,c
  2745  000FFC  0E06               	movlw	high _dpowers
  2746  000FFE  20F4               	addwfc	prodh,w,c
  2747  001000  6EF7               	movwf	tblptrh,c
  2748  001002                     	if	0	;There are less than 3 active tblptr bytes
  2749  001002                     	endif
  2750  001002  0009               	tblrd		*+
  2751  001004  50F5               	movf	tablat,w,c
  2752  001006  0100               	movlb	0	; () banked
  2753  001008  5DB1               	subwf	sprintf@val& (0+255),w,b
  2754  00100A  0009               	tblrd		*+
  2755  00100C  50F5               	movf	tablat,w,c
  2756  00100E  0100               	movlb	0	; () banked
  2757  001010  59B2               	subwfb	(sprintf@val+1)& (0+255),w,b
  2758  001012  0009               	tblrd		*+
  2759  001014  50F5               	movf	tablat,w,c
  2760  001016  0100               	movlb	0	; () banked
  2761  001018  59B3               	subwfb	(sprintf@val+2)& (0+255),w,b
  2762  00101A  0009               	tblrd		*+
  2763  00101C  50F5               	movf	tablat,w,c
  2764  00101E  0100               	movlb	0	; () banked
  2765  001020  59B4               	subwfb	(sprintf@val+3)& (0+255),w,b
  2766  001022  A0D8               	btfss	status,0,c
  2767  001024  D003               	goto	l3695
  2768                           
  2769                           ; BSR set to: 0
  2770                           
  2771                           ; BSR set to: 0
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;doprnt.c: 1307: break;
  2775  001026  0100               	movlb	0	; () banked
  2776  001028  2BC4               	incf	sprintf@c& (0+255),f,b
  2777  00102A  D7DD               	goto	l3683
  2778  00102C                     l3695:
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;doprnt.c: 1339: if(c < prec)
  2782  00102C  0E80               	movlw	128
  2783  00102E  0100               	movlb	0	; () banked
  2784  001030  BFC4               	btfsc	sprintf@c& (0+255),7,b
  2785  001032  0E7F               	movlw	127
  2786  001034  0100               	movlb	0	; () banked
  2787  001036  6FA6               	movwf	??_sprintf& (0+255),b
  2788  001038  0100               	movlb	0	; () banked
  2789  00103A  51C2               	movf	sprintf@prec& (0+255),w,b
  2790  00103C  0100               	movlb	0	; () banked
  2791  00103E  5DC4               	subwf	sprintf@c& (0+255),w,b
  2792  001040  0100               	movlb	0	; () banked
  2793  001042  51C3               	movf	(sprintf@prec+1)& (0+255),w,b
  2794  001044  0A80               	xorlw	128
  2795  001046  0100               	movlb	0	; () banked
  2796  001048  59A6               	subwfb	??_sprintf& (0+255),w,b
  2797  00104A  B0D8               	btfsc	status,0,c
  2798  00104C  D003               	goto	l3699
  2799                           
  2800                           ; BSR set to: 0
  2801                           ;doprnt.c: 1340: c = prec;
  2802  00104E  C0C2  F0C4         	movff	sprintf@prec,sprintf@c
  2803  001052  D018               	goto	l3703
  2804  001054                     l3699:
  2805                           
  2806                           ; BSR set to: 0
  2807                           ;doprnt.c: 1341: else if(prec < c)
  2808  001054  0100               	movlb	0	; () banked
  2809  001056  51C3               	movf	(sprintf@prec+1)& (0+255),w,b
  2810  001058  0A80               	xorlw	128
  2811  00105A  0100               	movlb	0	; () banked
  2812  00105C  6FA6               	movwf	??_sprintf& (0+255),b
  2813  00105E  0100               	movlb	0	; () banked
  2814  001060  51C4               	movf	sprintf@c& (0+255),w,b
  2815  001062  0100               	movlb	0	; () banked
  2816  001064  5DC2               	subwf	sprintf@prec& (0+255),w,b
  2817  001066  0E80               	movlw	128
  2818  001068  0100               	movlb	0	; () banked
  2819  00106A  BFC4               	btfsc	sprintf@c& (0+255),7,b
  2820  00106C  0E7F               	movlw	127
  2821  00106E  0100               	movlb	0	; () banked
  2822  001070  59A6               	subwfb	??_sprintf& (0+255),w,b
  2823  001072  B0D8               	btfsc	status,0,c
  2824  001074  D007               	goto	l3703
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;doprnt.c: 1342: prec = c;
  2828  001076  0100               	movlb	0	; () banked
  2829  001078  51C4               	movf	sprintf@c& (0+255),w,b
  2830  00107A  0100               	movlb	0	; () banked
  2831  00107C  6FC2               	movwf	sprintf@prec& (0+255),b
  2832  00107E  6BC3               	clrf	(sprintf@prec+1)& (0+255),b
  2833  001080  BFC2               	btfsc	sprintf@prec& (0+255),7,b
  2834  001082  07C3               	decf	(sprintf@prec+1)& (0+255),f,b
  2835  001084                     l3703:
  2836                           
  2837                           ; BSR set to: 0
  2838                           ;doprnt.c: 1345: if(width && flag & 0x03)
  2839  001084  0100               	movlb	0	; () banked
  2840  001086  51B7               	movf	sprintf@width& (0+255),w,b
  2841  001088  0100               	movlb	0	; () banked
  2842  00108A  11B8               	iorwf	(sprintf@width+1)& (0+255),w,b
  2843  00108C  B4D8               	btfsc	status,2,c
  2844  00108E  D014               	goto	l3709
  2845                           
  2846                           ; BSR set to: 0
  2847  001090  0E03               	movlw	3
  2848  001092  0100               	movlb	0	; () banked
  2849  001094  15B5               	andwf	sprintf@flag& (0+255),w,b
  2850  001096  0100               	movlb	0	; () banked
  2851  001098  6FA6               	movwf	??_sprintf& (0+255),b
  2852  00109A  0E00               	movlw	0
  2853  00109C  0100               	movlb	0	; () banked
  2854  00109E  15B6               	andwf	(sprintf@flag+1)& (0+255),w,b
  2855  0010A0  0100               	movlb	0	; () banked
  2856  0010A2  6FA7               	movwf	(??_sprintf+1)& (0+255),b
  2857  0010A4  0100               	movlb	0	; () banked
  2858  0010A6  51A6               	movf	??_sprintf& (0+255),w,b
  2859  0010A8  0100               	movlb	0	; () banked
  2860  0010AA  11A7               	iorwf	(??_sprintf+1)& (0+255),w,b
  2861  0010AC  B4D8               	btfsc	status,2,c
  2862  0010AE  D004               	goto	l3709
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;doprnt.c: 1346: width--;
  2866  0010B0  0100               	movlb	0	; () banked
  2867  0010B2  07B7               	decf	sprintf@width& (0+255),f,b
  2868  0010B4  A0D8               	btfss	status,0,c
  2869  0010B6  07B8               	decf	(sprintf@width+1)& (0+255),f,b
  2870  0010B8                     l3709:
  2871                           
  2872                           ; BSR set to: 0
  2873                           ;doprnt.c: 1348: if(flag & 0x4000) {
  2874  0010B8  0100               	movlb	0	; () banked
  2875  0010BA  ADB6               	btfss	(sprintf@flag+1)& (0+255),6,b
  2876  0010BC  D01E               	goto	l3717
  2877                           
  2878                           ; BSR set to: 0
  2879                           ;doprnt.c: 1349: if(width > prec)
  2880  0010BE  0100               	movlb	0	; () banked
  2881  0010C0  51B7               	movf	sprintf@width& (0+255),w,b
  2882  0010C2  0100               	movlb	0	; () banked
  2883  0010C4  5DC2               	subwf	sprintf@prec& (0+255),w,b
  2884  0010C6  0100               	movlb	0	; () banked
  2885  0010C8  51C3               	movf	(sprintf@prec+1)& (0+255),w,b
  2886  0010CA  0A80               	xorlw	128
  2887  0010CC  0100               	movlb	0	; () banked
  2888  0010CE  6FA6               	movwf	??_sprintf& (0+255),b
  2889  0010D0  0100               	movlb	0	; () banked
  2890  0010D2  51B8               	movf	(sprintf@width+1)& (0+255),w,b
  2891  0010D4  0A80               	xorlw	128
  2892  0010D6  0100               	movlb	0	; () banked
  2893  0010D8  59A6               	subwfb	??_sprintf& (0+255),w,b
  2894  0010DA  B0D8               	btfsc	status,0,c
  2895  0010DC  D009               	goto	l3715
  2896                           
  2897                           ; BSR set to: 0
  2898                           ;doprnt.c: 1350: width -= prec;
  2899  0010DE  0100               	movlb	0	; () banked
  2900  0010E0  51C2               	movf	sprintf@prec& (0+255),w,b
  2901  0010E2  0100               	movlb	0	; () banked
  2902  0010E4  5FB7               	subwf	sprintf@width& (0+255),f,b
  2903  0010E6  0100               	movlb	0	; () banked
  2904  0010E8  51C3               	movf	(sprintf@prec+1)& (0+255),w,b
  2905  0010EA  0100               	movlb	0	; () banked
  2906  0010EC  5BB8               	subwfb	(sprintf@width+1)& (0+255),f,b
  2907  0010EE  D005               	goto	l3717
  2908  0010F0                     l3715:
  2909                           
  2910                           ; BSR set to: 0
  2911                           ;doprnt.c: 1351: else
  2912                           ;doprnt.c: 1352: width = 0;
  2913  0010F0  0E00               	movlw	0
  2914  0010F2  0100               	movlb	0	; () banked
  2915  0010F4  6FB8               	movwf	(sprintf@width+1)& (0+255),b
  2916  0010F6  0E00               	movlw	0
  2917  0010F8  6FB7               	movwf	sprintf@width& (0+255),b
  2918  0010FA                     l3717:
  2919                           
  2920                           ; BSR set to: 0
  2921                           ;doprnt.c: 1353: }
  2922                           ;doprnt.c: 1381: if(width > c)
  2923  0010FA  0E80               	movlw	128
  2924  0010FC  0100               	movlb	0	; () banked
  2925  0010FE  BFC4               	btfsc	sprintf@c& (0+255),7,b
  2926  001100  0E7F               	movlw	127
  2927  001102  0100               	movlb	0	; () banked
  2928  001104  6FA6               	movwf	??_sprintf& (0+255),b
  2929  001106  0100               	movlb	0	; () banked
  2930  001108  51B7               	movf	sprintf@width& (0+255),w,b
  2931  00110A  0100               	movlb	0	; () banked
  2932  00110C  5DC4               	subwf	sprintf@c& (0+255),w,b
  2933  00110E  0100               	movlb	0	; () banked
  2934  001110  51B8               	movf	(sprintf@width+1)& (0+255),w,b
  2935  001112  0A80               	xorlw	128
  2936  001114  0100               	movlb	0	; () banked
  2937  001116  59A6               	subwfb	??_sprintf& (0+255),w,b
  2938  001118  B0D8               	btfsc	status,0,c
  2939  00111A  D00B               	goto	l3721
  2940                           
  2941                           ; BSR set to: 0
  2942                           ;doprnt.c: 1382: width -= c;
  2943  00111C  0100               	movlb	0	; () banked
  2944  00111E  51C4               	movf	sprintf@c& (0+255),w,b
  2945  001120  0100               	movlb	0	; () banked
  2946  001122  5FB7               	subwf	sprintf@width& (0+255),f,b
  2947  001124  0E00               	movlw	0
  2948  001126  0100               	movlb	0	; () banked
  2949  001128  BFC4               	btfsc	sprintf@c& (0+255),7,b
  2950  00112A  0EFF               	movlw	255
  2951  00112C  0100               	movlb	0	; () banked
  2952  00112E  5BB8               	subwfb	(sprintf@width+1)& (0+255),f,b
  2953  001130  D005               	goto	l3723
  2954  001132                     l3721:
  2955                           
  2956                           ; BSR set to: 0
  2957                           ;doprnt.c: 1383: else
  2958                           ;doprnt.c: 1384: width = 0;
  2959  001132  0E00               	movlw	0
  2960  001134  0100               	movlb	0	; () banked
  2961  001136  6FB8               	movwf	(sprintf@width+1)& (0+255),b
  2962  001138  0E00               	movlw	0
  2963  00113A  6FB7               	movwf	sprintf@width& (0+255),b
  2964  00113C                     l3723:
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;doprnt.c: 1422: {
  2968                           ;doprnt.c: 1424: if(width
  2969                           ;doprnt.c: 1428: )
  2970  00113C  0100               	movlb	0	; () banked
  2971  00113E  51B7               	movf	sprintf@width& (0+255),w,b
  2972  001140  0100               	movlb	0	; () banked
  2973  001142  11B8               	iorwf	(sprintf@width+1)& (0+255),w,b
  2974  001144  B4D8               	btfsc	status,2,c
  2975  001146  D013               	goto	l3731
  2976  001148                     l3725:
  2977                           
  2978                           ; BSR set to: 0
  2979                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  2980  001148  C09F  FFD9         	movff	sprintf@sp,fsr2l
  2981  00114C  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  2982  001150  0E20               	movlw	32
  2983  001152  6EDF               	movwf	indf2,c
  2984                           
  2985                           ; BSR set to: 0
  2986  001154  0100               	movlb	0	; () banked
  2987  001156  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  2988  001158  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  2989                           
  2990                           ; BSR set to: 0
  2991                           ;doprnt.c: 1431: while(--width);
  2992  00115A  0100               	movlb	0	; () banked
  2993  00115C  07B7               	decf	sprintf@width& (0+255),f,b
  2994  00115E  A0D8               	btfss	status,0,c
  2995  001160  07B8               	decf	(sprintf@width+1)& (0+255),f,b
  2996  001162  0100               	movlb	0	; () banked
  2997  001164  51B7               	movf	sprintf@width& (0+255),w,b
  2998  001166  0100               	movlb	0	; () banked
  2999  001168  11B8               	iorwf	(sprintf@width+1)& (0+255),w,b
  3000  00116A  A4D8               	btfss	status,2,c
  3001  00116C  D7ED               	goto	l3725
  3002  00116E                     l3731:
  3003                           
  3004                           ; BSR set to: 0
  3005                           ;doprnt.c: 1438: if(flag & 0x03)
  3006  00116E  0E03               	movlw	3
  3007  001170  0100               	movlb	0	; () banked
  3008  001172  15B5               	andwf	sprintf@flag& (0+255),w,b
  3009  001174  0100               	movlb	0	; () banked
  3010  001176  6FA6               	movwf	??_sprintf& (0+255),b
  3011  001178  0E00               	movlw	0
  3012  00117A  0100               	movlb	0	; () banked
  3013  00117C  15B6               	andwf	(sprintf@flag+1)& (0+255),w,b
  3014  00117E  0100               	movlb	0	; () banked
  3015  001180  6FA7               	movwf	(??_sprintf+1)& (0+255),b
  3016  001182  0100               	movlb	0	; () banked
  3017  001184  51A6               	movf	??_sprintf& (0+255),w,b
  3018  001186  0100               	movlb	0	; () banked
  3019  001188  11A7               	iorwf	(??_sprintf+1)& (0+255),w,b
  3020  00118A  B4D8               	btfsc	status,2,c
  3021  00118C  D051               	goto	l3743
  3022                           
  3023                           ; BSR set to: 0
  3024                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3025  00118E  C09F  FFD9         	movff	sprintf@sp,fsr2l
  3026  001192  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  3027  001196  0E2D               	movlw	45
  3028  001198  6EDF               	movwf	indf2,c
  3029  00119A  D047               	goto	l3741
  3030  00119C                     l3737:
  3031                           
  3032                           ; BSR set to: 0
  3033                           ;doprnt.c: 1478: {
  3034                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3035  00119C  C0C2  F0A6         	movff	sprintf@prec,??_sprintf
  3036  0011A0  C0C3  F0A7         	movff	sprintf@prec+1,??_sprintf+1
  3037  0011A4  0100               	movlb	0	; () banked
  3038  0011A6  90D8               	bcf	status,0,c
  3039  0011A8  37A6               	rlcf	??_sprintf& (0+255),f,b
  3040  0011AA  37A7               	rlcf	(??_sprintf+1)& (0+255),f,b
  3041  0011AC  0100               	movlb	0	; () banked
  3042  0011AE  90D8               	bcf	status,0,c
  3043  0011B0  37A6               	rlcf	??_sprintf& (0+255),f,b
  3044  0011B2  37A7               	rlcf	(??_sprintf+1)& (0+255),f,b
  3045  0011B4  0E01               	movlw	low _dpowers
  3046  0011B6  0100               	movlb	0	; () banked
  3047  0011B8  25A6               	addwf	??_sprintf& (0+255),w,b
  3048  0011BA  6EF6               	movwf	tblptrl,c
  3049  0011BC  0E06               	movlw	high _dpowers
  3050  0011BE  21A7               	addwfc	(??_sprintf+1)& (0+255),w,b
  3051  0011C0  6EF7               	movwf	tblptrh,c
  3052  0011C2                     	if	0	;There are less than 3 active tblptr bytes
  3053  0011C2                     	endif
  3054  0011C2  0009               	tblrd		*+
  3055  0011C4  CFF5 F064          	movff	tablat,___lldiv@divisor
  3056  0011C8  0009               	tblrd		*+
  3057  0011CA  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  3058  0011CE  0009               	tblrd		*+
  3059  0011D0  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  3060  0011D4  000A               	tblrd		*-
  3061  0011D6  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  3062  0011DA  C0B1  F060         	movff	sprintf@val,___lldiv@dividend
  3063  0011DE  C0B2  F061         	movff	sprintf@val+1,___lldiv@dividend+1
  3064  0011E2  C0B3  F062         	movff	sprintf@val+2,___lldiv@dividend+2
  3065  0011E6  C0B4  F063         	movff	sprintf@val+3,___lldiv@dividend+3
  3066  0011EA  EC84  F016         	call	___lldiv	;wreg free
  3067  0011EE  C060  F06D         	movff	?___lldiv,___llmod@dividend
  3068  0011F2  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
  3069  0011F6  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
  3070  0011FA  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
  3071  0011FE  0E0A               	movlw	10
  3072  001200  0100               	movlb	0	; () banked
  3073  001202  6F71               	movwf	___llmod@divisor& (0+255),b
  3074  001204  0E00               	movlw	0
  3075  001206  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  3076  001208  0E00               	movlw	0
  3077  00120A  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  3078  00120C  0E00               	movlw	0
  3079  00120E  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  3080  001210  EC8A  F017         	call	___llmod	;wreg free
  3081  001214  0100               	movlb	0	; () banked
  3082  001216  516D               	movf	?___llmod& (0+255),w,b
  3083  001218  0F30               	addlw	48
  3084  00121A  0100               	movlb	0	; () banked
  3085  00121C  6FC4               	movwf	sprintf@c& (0+255),b
  3086                           
  3087                           ; BSR set to: 0
  3088                           ;doprnt.c: 1523: }
  3089                           ;doprnt.c: 1524: ((*sp++ = (c)));
  3090  00121E  C09F  FFD9         	movff	sprintf@sp,fsr2l
  3091  001222  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  3092  001226  C0C4  FFDF         	movff	sprintf@c,indf2
  3093  00122A                     l3741:
  3094                           
  3095                           ; BSR set to: 0
  3096  00122A  0100               	movlb	0	; () banked
  3097  00122C  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  3098  00122E  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  3099  001230                     l3743:
  3100                           
  3101                           ; BSR set to: 0
  3102  001230  0100               	movlb	0	; () banked
  3103  001232  07C2               	decf	sprintf@prec& (0+255),f,b
  3104  001234  A0D8               	btfss	status,0,c
  3105  001236  07C3               	decf	(sprintf@prec+1)& (0+255),f,b
  3106  001238  0100               	movlb	0	; () banked
  3107  00123A  29C2               	incf	sprintf@prec& (0+255),w,b
  3108  00123C  E1AF               	bnz	l3737
  3109  00123E  0100               	movlb	0	; () banked
  3110  001240  29C3               	incf	(sprintf@prec+1)& (0+255),w,b
  3111  001242  A4D8               	btfss	status,2,c
  3112  001244  D7AB               	goto	l3737
  3113  001246                     l3745:
  3114                           
  3115                           ; BSR set to: 0
  3116  001246  C0A1  FFF6         	movff	sprintf@f,tblptrl
  3117  00124A  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  3118  00124E  0100               	movlb	0	; () banked
  3119  001250  4BA1               	infsnz	sprintf@f& (0+255),f,b
  3120  001252  2BA2               	incf	(sprintf@f+1)& (0+255),f,b
  3121  001254                     	if	0	;tblptru may be non-zero
  3122  001254                     	endif
  3123  001254                     	if	0	;tblptru may be non-zero
  3124  001254                     	endif
  3125  001254  0008               	tblrd		*
  3126  001256  CFF5 F0C4          	movff	tablat,sprintf@c
  3127  00125A  0100               	movlb	0	; () banked
  3128  00125C  51C4               	movf	sprintf@c& (0+255),w,b
  3129  00125E  A4D8               	btfss	status,2,c
  3130  001260  EF67  F003         	goto	l3457
  3131  001264                     l3747:
  3132                           
  3133                           ; BSR set to: 0
  3134                           ;doprnt.c: 1538: *sp = 0;
  3135  001264  C09F  FFD9         	movff	sprintf@sp,fsr2l
  3136  001268  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  3137  00126C  0E00               	movlw	0
  3138  00126E  6EDF               	movwf	indf2,c
  3139  001270  0012               	return	
  3140  001272                     __end_of_sprintf:
  3141                           	opt stack 0
  3142                           tblptru	equ	0xFF8
  3143                           tblptrh	equ	0xFF7
  3144                           tblptrl	equ	0xFF6
  3145                           tablat	equ	0xFF5
  3146                           prodh	equ	0xFF4
  3147                           prodl	equ	0xFF3
  3148                           intcon	equ	0xFF2
  3149                           postinc0	equ	0xFEE
  3150                           wreg	equ	0xFE8
  3151                           postdec1	equ	0xFE5
  3152                           fsr1l	equ	0xFE1
  3153                           indf2	equ	0xFDF
  3154                           postinc2	equ	0xFDE
  3155                           postdec2	equ	0xFDD
  3156                           fsr2h	equ	0xFDA
  3157                           fsr2l	equ	0xFD9
  3158                           status	equ	0xFD8
  3159                           
  3160 ;; *************** function _scale *****************
  3161 ;; Defined at:
  3162 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  scl             1    wreg     char 
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;  scl             1   41[BANK0 ] char 
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  3   35[BANK0 ] char 
  3169 ;; Registers used:
  3170 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3176 ;;      Params:         0       3       0       0       0       0       0
  3177 ;;      Locals:         0       4       0       0       0       0       0
  3178 ;;      Temps:          0       0       0       0       0       0       0
  3179 ;;      Totals:         0       7       0       0       0       0       0
  3180 ;;Total ram usage:        7 bytes
  3181 ;; Hardware stack levels used:    1
  3182 ;; Hardware stack levels required when called:    6
  3183 ;; This function calls:
  3184 ;;		___awdiv
  3185 ;;		___awmod
  3186 ;;		___ftmul
  3187 ;;		___wmul
  3188 ;; This function is called by:
  3189 ;;		_sprintf
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           	psect	text2
  3194  001272                     __ptext2:
  3195                           	opt stack 0
  3196  001272                     _scale:
  3197                           	opt stack 23
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;incstack = 0
  3201                           ;scale@scl stored from wreg
  3202  001272  0100               	movlb	0	; () banked
  3203  001274  6F89               	movwf	scale@scl& (0+255),b
  3204                           
  3205                           ;doprnt.c: 428: if(scl < 0) {
  3206  001276  0100               	movlb	0	; () banked
  3207  001278  AF89               	btfss	scale@scl& (0+255),7,b
  3208  00127A  D12A               	goto	l2947
  3209                           
  3210                           ; BSR set to: 0
  3211                           ;doprnt.c: 429: scl = -scl;
  3212  00127C  0100               	movlb	0	; () banked
  3213  00127E  6D89               	negf	scale@scl& (0+255),b
  3214                           
  3215                           ;doprnt.c: 430: if(scl>=110)
  3216  001280  0100               	movlb	0	; () banked
  3217  001282  5189               	movf	scale@scl& (0+255),w,b
  3218  001284  0A80               	xorlw	128
  3219  001286  0F12               	addlw	-238
  3220  001288  A0D8               	btfss	status,0,c
  3221  00128A  D0AC               	goto	l2937
  3222                           
  3223                           ; BSR set to: 0
  3224                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3225  00128C  0E00               	movlw	0
  3226  00128E  0100               	movlb	0	; () banked
  3227  001290  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3228  001292  0E03               	movlw	3
  3229  001294  6F70               	movwf	___wmul@multiplicand& (0+255),b
  3230  001296  0E00               	movlw	0
  3231  001298  0100               	movlb	0	; () banked
  3232  00129A  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  3233  00129C  0E0A               	movlw	10
  3234  00129E  6F68               	movwf	___awdiv@divisor& (0+255),b
  3235  0012A0  0E00               	movlw	0
  3236  0012A2  0100               	movlb	0	; () banked
  3237  0012A4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  3238  0012A6  0E64               	movlw	100
  3239  0012A8  6F62               	movwf	___awmod@divisor& (0+255),b
  3240  0012AA  0100               	movlb	0	; () banked
  3241  0012AC  5189               	movf	scale@scl& (0+255),w,b
  3242  0012AE  0100               	movlb	0	; () banked
  3243  0012B0  6F60               	movwf	___awmod@dividend& (0+255),b
  3244  0012B2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  3245  0012B4  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  3246  0012B6  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  3247  0012B8  EC39  F017         	call	___awmod	;wreg free
  3248  0012BC  C060  F066         	movff	?___awmod,___awdiv@dividend
  3249  0012C0  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  3250  0012C4  EC25  F016         	call	___awdiv	;wreg free
  3251  0012C8  0E09               	movlw	9
  3252  0012CA  0100               	movlb	0	; () banked
  3253  0012CC  2566               	addwf	?___awdiv& (0+255),w,b
  3254  0012CE  0100               	movlb	0	; () banked
  3255  0012D0  6F6E               	movwf	___wmul@multiplier& (0+255),b
  3256  0012D2  0E00               	movlw	0
  3257  0012D4  0100               	movlb	0	; () banked
  3258  0012D6  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  3259  0012D8  0100               	movlb	0	; () banked
  3260  0012DA  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  3261  0012DC  EC21  F019         	call	___wmul	;wreg free
  3262  0012E0  0E29               	movlw	low __npowers_
  3263  0012E2  0100               	movlb	0	; () banked
  3264  0012E4  256E               	addwf	?___wmul& (0+255),w,b
  3265  0012E6  6EF6               	movwf	tblptrl,c
  3266  0012E8  0E06               	movlw	high __npowers_
  3267  0012EA  0100               	movlb	0	; () banked
  3268  0012EC  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  3269  0012EE  6EF7               	movwf	tblptrh,c
  3270  0012F0                     	if	0	;There are less than 3 active tblptr bytes
  3271  0012F0                     	endif
  3272  0012F0  0009               	tblrd		*+
  3273  0012F2  CFF5 F077          	movff	tablat,___ftmul@f2
  3274  0012F6  0009               	tblrd		*+
  3275  0012F8  CFF5 F078          	movff	tablat,___ftmul@f2+1
  3276  0012FC  000A               	tblrd		*-
  3277  0012FE  CFF5 F079          	movff	tablat,___ftmul@f2+2
  3278  001302  0E00               	movlw	0
  3279  001304  0100               	movlb	0	; () banked
  3280  001306  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  3281  001308  0E64               	movlw	100
  3282  00130A  6F68               	movwf	___awdiv@divisor& (0+255),b
  3283  00130C  0100               	movlb	0	; () banked
  3284  00130E  5189               	movf	scale@scl& (0+255),w,b
  3285  001310  0100               	movlb	0	; () banked
  3286  001312  6F66               	movwf	___awdiv@dividend& (0+255),b
  3287  001314  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  3288  001316  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  3289  001318  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  3290  00131A  EC25  F016         	call	___awdiv	;wreg free
  3291  00131E  0E12               	movlw	18
  3292  001320  0100               	movlb	0	; () banked
  3293  001322  2566               	addwf	?___awdiv& (0+255),w,b
  3294  001324  0100               	movlb	0	; () banked
  3295  001326  6F6E               	movwf	___wmul@multiplier& (0+255),b
  3296  001328  0E00               	movlw	0
  3297  00132A  0100               	movlb	0	; () banked
  3298  00132C  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  3299  00132E  0100               	movlb	0	; () banked
  3300  001330  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  3301  001332  0E00               	movlw	0
  3302  001334  0100               	movlb	0	; () banked
  3303  001336  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3304  001338  0E03               	movlw	3
  3305  00133A  6F70               	movwf	___wmul@multiplicand& (0+255),b
  3306  00133C  EC21  F019         	call	___wmul	;wreg free
  3307  001340  0E29               	movlw	low __npowers_
  3308  001342  0100               	movlb	0	; () banked
  3309  001344  256E               	addwf	?___wmul& (0+255),w,b
  3310  001346  6EF6               	movwf	tblptrl,c
  3311  001348  0E06               	movlw	high __npowers_
  3312  00134A  0100               	movlb	0	; () banked
  3313  00134C  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  3314  00134E  6EF7               	movwf	tblptrh,c
  3315  001350                     	if	0	;There are less than 3 active tblptr bytes
  3316  001350                     	endif
  3317  001350  0009               	tblrd		*+
  3318  001352  CFF5 F074          	movff	tablat,___ftmul@f1
  3319  001356  0009               	tblrd		*+
  3320  001358  CFF5 F075          	movff	tablat,___ftmul@f1+1
  3321  00135C  000A               	tblrd		*-
  3322  00135E  CFF5 F076          	movff	tablat,___ftmul@f1+2
  3323  001362  EC57  F012         	call	___ftmul	;wreg free
  3324  001366  C074  F086         	movff	?___ftmul,_scale$1576
  3325  00136A  C075  F087         	movff	?___ftmul+1,_scale$1576+1
  3326  00136E  C076  F088         	movff	?___ftmul+2,_scale$1576+2
  3327                           
  3328                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3329  001372  C086  F074         	movff	_scale$1576,___ftmul@f1
  3330  001376  C087  F075         	movff	_scale$1576+1,___ftmul@f1+1
  3331  00137A  C088  F076         	movff	_scale$1576+2,___ftmul@f1+2
  3332  00137E  0E00               	movlw	0
  3333  001380  0100               	movlb	0	; () banked
  3334  001382  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3335  001384  0E03               	movlw	3
  3336  001386  6F70               	movwf	___wmul@multiplicand& (0+255),b
  3337  001388  0E00               	movlw	0
  3338  00138A  0100               	movlb	0	; () banked
  3339  00138C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  3340  00138E  0E0A               	movlw	10
  3341  001390  6F62               	movwf	___awmod@divisor& (0+255),b
  3342  001392  0100               	movlb	0	; () banked
  3343  001394  5189               	movf	scale@scl& (0+255),w,b
  3344  001396  0100               	movlb	0	; () banked
  3345  001398  6F60               	movwf	___awmod@dividend& (0+255),b
  3346  00139A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  3347  00139C  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  3348  00139E  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  3349  0013A0  EC39  F017         	call	___awmod	;wreg free
  3350  0013A4  C060  F06E         	movff	?___awmod,___wmul@multiplier
  3351  0013A8  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  3352  0013AC  EC21  F019         	call	___wmul	;wreg free
  3353  0013B0  0E29               	movlw	low __npowers_
  3354  0013B2  0100               	movlb	0	; () banked
  3355  0013B4  256E               	addwf	?___wmul& (0+255),w,b
  3356  0013B6  6EF6               	movwf	tblptrl,c
  3357  0013B8  0E06               	movlw	high __npowers_
  3358  0013BA  0100               	movlb	0	; () banked
  3359  0013BC  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  3360  0013BE  6EF7               	movwf	tblptrh,c
  3361  0013C0                     	if	0	;There are less than 3 active tblptr bytes
  3362  0013C0                     	endif
  3363  0013C0  0009               	tblrd		*+
  3364  0013C2  CFF5 F077          	movff	tablat,___ftmul@f2
  3365  0013C6  0009               	tblrd		*+
  3366  0013C8  CFF5 F078          	movff	tablat,___ftmul@f2+1
  3367  0013CC  000A               	tblrd		*-
  3368  0013CE  CFF5 F079          	movff	tablat,___ftmul@f2+2
  3369  0013D2  EC57  F012         	call	___ftmul	;wreg free
  3370  0013D6  C074  F083         	movff	?___ftmul,?_scale
  3371  0013DA  C075  F084         	movff	?___ftmul+1,?_scale+1
  3372  0013DE  C076  F085         	movff	?___ftmul+2,?_scale+2
  3373  0013E2  0012               	return	
  3374  0013E4                     l2937:
  3375                           
  3376                           ;doprnt.c: 432: else if(scl > 10)
  3377  0013E4  0100               	movlb	0	; () banked
  3378  0013E6  5189               	movf	scale@scl& (0+255),w,b
  3379  0013E8  0A80               	xorlw	128
  3380  0013EA  0F75               	addlw	-139
  3381  0013EC  A0D8               	btfss	status,0,c
  3382  0013EE  D05D               	goto	l2943
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  3386  0013F0  0E00               	movlw	0
  3387  0013F2  0100               	movlb	0	; () banked
  3388  0013F4  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  3389  0013F6  0E0A               	movlw	10
  3390  0013F8  6F68               	movwf	___awdiv@divisor& (0+255),b
  3391  0013FA  0100               	movlb	0	; () banked
  3392  0013FC  5189               	movf	scale@scl& (0+255),w,b
  3393  0013FE  0100               	movlb	0	; () banked
  3394  001400  6F66               	movwf	___awdiv@dividend& (0+255),b
  3395  001402  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  3396  001404  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  3397  001406  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  3398  001408  EC25  F016         	call	___awdiv	;wreg free
  3399  00140C  0E09               	movlw	9
  3400  00140E  0100               	movlb	0	; () banked
  3401  001410  2566               	addwf	?___awdiv& (0+255),w,b
  3402  001412  0100               	movlb	0	; () banked
  3403  001414  6F6E               	movwf	___wmul@multiplier& (0+255),b
  3404  001416  0E00               	movlw	0
  3405  001418  0100               	movlb	0	; () banked
  3406  00141A  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  3407  00141C  0100               	movlb	0	; () banked
  3408  00141E  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  3409  001420  0E00               	movlw	0
  3410  001422  0100               	movlb	0	; () banked
  3411  001424  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3412  001426  0E03               	movlw	3
  3413  001428  6F70               	movwf	___wmul@multiplicand& (0+255),b
  3414  00142A  EC21  F019         	call	___wmul	;wreg free
  3415  00142E  0E29               	movlw	low __npowers_
  3416  001430  0100               	movlb	0	; () banked
  3417  001432  256E               	addwf	?___wmul& (0+255),w,b
  3418  001434  6EF6               	movwf	tblptrl,c
  3419  001436  0E06               	movlw	high __npowers_
  3420  001438  0100               	movlb	0	; () banked
  3421  00143A  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  3422  00143C  6EF7               	movwf	tblptrh,c
  3423  00143E                     	if	0	;There are less than 3 active tblptr bytes
  3424  00143E                     	endif
  3425  00143E  0009               	tblrd		*+
  3426  001440  CFF5 F074          	movff	tablat,___ftmul@f1
  3427  001444  0009               	tblrd		*+
  3428  001446  CFF5 F075          	movff	tablat,___ftmul@f1+1
  3429  00144A  000A               	tblrd		*-
  3430  00144C  CFF5 F076          	movff	tablat,___ftmul@f1+2
  3431  001450  0E00               	movlw	0
  3432  001452  0100               	movlb	0	; () banked
  3433  001454  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3434  001456  0E03               	movlw	3
  3435  001458  6F70               	movwf	___wmul@multiplicand& (0+255),b
  3436  00145A  0E00               	movlw	0
  3437  00145C  0100               	movlb	0	; () banked
  3438  00145E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  3439  001460  0E0A               	movlw	10
  3440  001462  6F62               	movwf	___awmod@divisor& (0+255),b
  3441  001464  0100               	movlb	0	; () banked
  3442  001466  5189               	movf	scale@scl& (0+255),w,b
  3443  001468  0100               	movlb	0	; () banked
  3444  00146A  6F60               	movwf	___awmod@dividend& (0+255),b
  3445  00146C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  3446  00146E  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  3447  001470  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  3448  001472  EC39  F017         	call	___awmod	;wreg free
  3449  001476  C060  F06E         	movff	?___awmod,___wmul@multiplier
  3450  00147A  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  3451  00147E  EC21  F019         	call	___wmul	;wreg free
  3452  001482  0E29               	movlw	low __npowers_
  3453  001484  0100               	movlb	0	; () banked
  3454  001486  256E               	addwf	?___wmul& (0+255),w,b
  3455  001488  6EF6               	movwf	tblptrl,c
  3456  00148A  0E06               	movlw	high __npowers_
  3457  00148C  0100               	movlb	0	; () banked
  3458  00148E  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  3459  001490  6EF7               	movwf	tblptrh,c
  3460  001492                     	if	0	;There are less than 3 active tblptr bytes
  3461  001492                     	endif
  3462  001492  0009               	tblrd		*+
  3463  001494  CFF5 F077          	movff	tablat,___ftmul@f2
  3464  001498  0009               	tblrd		*+
  3465  00149A  CFF5 F078          	movff	tablat,___ftmul@f2+1
  3466  00149E  000A               	tblrd		*-
  3467  0014A0  CFF5 F079          	movff	tablat,___ftmul@f2+2
  3468  0014A4  EC57  F012         	call	___ftmul	;wreg free
  3469  0014A8  D796               	goto	L4
  3470  0014AA                     l2943:
  3471                           
  3472                           ;doprnt.c: 434: return _npowers_[scl];
  3473  0014AA  0100               	movlb	0	; () banked
  3474  0014AC  5189               	movf	scale@scl& (0+255),w,b
  3475  0014AE  0D03               	mullw	3
  3476  0014B0  0E29               	movlw	low __npowers_
  3477  0014B2  24F3               	addwf	prodl,w,c
  3478  0014B4  6EF6               	movwf	tblptrl,c
  3479  0014B6  0E06               	movlw	high __npowers_
  3480  0014B8  20F4               	addwfc	prodh,w,c
  3481  0014BA  6EF7               	movwf	tblptrh,c
  3482  0014BC                     	if	0	;There are less than 3 active tblptr bytes
  3483  0014BC                     	endif
  3484  0014BC  0009               	tblrd		*+
  3485  0014BE  CFF5 F083          	movff	tablat,?_scale
  3486  0014C2  0009               	tblrd		*+
  3487  0014C4  CFF5 F084          	movff	tablat,?_scale+1
  3488  0014C8  000A               	tblrd		*-
  3489  0014CA  CFF5 F085          	movff	tablat,?_scale+2
  3490                           
  3491                           ; BSR set to: 0
  3492  0014CE  0012               	return	
  3493  0014D0                     l2947:
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;doprnt.c: 435: }
  3497                           ;doprnt.c: 436: if(scl>=110)
  3498  0014D0  0100               	movlb	0	; () banked
  3499  0014D2  5189               	movf	scale@scl& (0+255),w,b
  3500  0014D4  0A80               	xorlw	128
  3501  0014D6  0F12               	addlw	-238
  3502  0014D8  A0D8               	btfss	status,0,c
  3503  0014DA  D0AC               	goto	l2955
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3507  0014DC  0E00               	movlw	0
  3508  0014DE  0100               	movlb	0	; () banked
  3509  0014E0  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3510  0014E2  0E03               	movlw	3
  3511  0014E4  6F70               	movwf	___wmul@multiplicand& (0+255),b
  3512  0014E6  0E00               	movlw	0
  3513  0014E8  0100               	movlb	0	; () banked
  3514  0014EA  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  3515  0014EC  0E0A               	movlw	10
  3516  0014EE  6F68               	movwf	___awdiv@divisor& (0+255),b
  3517  0014F0  0E00               	movlw	0
  3518  0014F2  0100               	movlb	0	; () banked
  3519  0014F4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  3520  0014F6  0E64               	movlw	100
  3521  0014F8  6F62               	movwf	___awmod@divisor& (0+255),b
  3522  0014FA  0100               	movlb	0	; () banked
  3523  0014FC  5189               	movf	scale@scl& (0+255),w,b
  3524  0014FE  0100               	movlb	0	; () banked
  3525  001500  6F60               	movwf	___awmod@dividend& (0+255),b
  3526  001502  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  3527  001504  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  3528  001506  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  3529  001508  EC39  F017         	call	___awmod	;wreg free
  3530  00150C  C060  F066         	movff	?___awmod,___awdiv@dividend
  3531  001510  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  3532  001514  EC25  F016         	call	___awdiv	;wreg free
  3533  001518  0E09               	movlw	9
  3534  00151A  0100               	movlb	0	; () banked
  3535  00151C  2566               	addwf	?___awdiv& (0+255),w,b
  3536  00151E  0100               	movlb	0	; () banked
  3537  001520  6F6E               	movwf	___wmul@multiplier& (0+255),b
  3538  001522  0E00               	movlw	0
  3539  001524  0100               	movlb	0	; () banked
  3540  001526  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  3541  001528  0100               	movlb	0	; () banked
  3542  00152A  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  3543  00152C  EC21  F019         	call	___wmul	;wreg free
  3544  001530  0E50               	movlw	low __powers_
  3545  001532  0100               	movlb	0	; () banked
  3546  001534  256E               	addwf	?___wmul& (0+255),w,b
  3547  001536  6EF6               	movwf	tblptrl,c
  3548  001538  0E06               	movlw	high __powers_
  3549  00153A  0100               	movlb	0	; () banked
  3550  00153C  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  3551  00153E  6EF7               	movwf	tblptrh,c
  3552  001540                     	if	0	;There are less than 3 active tblptr bytes
  3553  001540                     	endif
  3554  001540  0009               	tblrd		*+
  3555  001542  CFF5 F077          	movff	tablat,___ftmul@f2
  3556  001546  0009               	tblrd		*+
  3557  001548  CFF5 F078          	movff	tablat,___ftmul@f2+1
  3558  00154C  000A               	tblrd		*-
  3559  00154E  CFF5 F079          	movff	tablat,___ftmul@f2+2
  3560  001552  0E00               	movlw	0
  3561  001554  0100               	movlb	0	; () banked
  3562  001556  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  3563  001558  0E64               	movlw	100
  3564  00155A  6F68               	movwf	___awdiv@divisor& (0+255),b
  3565  00155C  0100               	movlb	0	; () banked
  3566  00155E  5189               	movf	scale@scl& (0+255),w,b
  3567  001560  0100               	movlb	0	; () banked
  3568  001562  6F66               	movwf	___awdiv@dividend& (0+255),b
  3569  001564  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  3570  001566  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  3571  001568  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  3572  00156A  EC25  F016         	call	___awdiv	;wreg free
  3573  00156E  0E12               	movlw	18
  3574  001570  0100               	movlb	0	; () banked
  3575  001572  2566               	addwf	?___awdiv& (0+255),w,b
  3576  001574  0100               	movlb	0	; () banked
  3577  001576  6F6E               	movwf	___wmul@multiplier& (0+255),b
  3578  001578  0E00               	movlw	0
  3579  00157A  0100               	movlb	0	; () banked
  3580  00157C  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  3581  00157E  0100               	movlb	0	; () banked
  3582  001580  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  3583  001582  0E00               	movlw	0
  3584  001584  0100               	movlb	0	; () banked
  3585  001586  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3586  001588  0E03               	movlw	3
  3587  00158A  6F70               	movwf	___wmul@multiplicand& (0+255),b
  3588  00158C  EC21  F019         	call	___wmul	;wreg free
  3589  001590  0E50               	movlw	low __powers_
  3590  001592  0100               	movlb	0	; () banked
  3591  001594  256E               	addwf	?___wmul& (0+255),w,b
  3592  001596  6EF6               	movwf	tblptrl,c
  3593  001598  0E06               	movlw	high __powers_
  3594  00159A  0100               	movlb	0	; () banked
  3595  00159C  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  3596  00159E  6EF7               	movwf	tblptrh,c
  3597  0015A0                     	if	0	;There are less than 3 active tblptr bytes
  3598  0015A0                     	endif
  3599  0015A0  0009               	tblrd		*+
  3600  0015A2  CFF5 F074          	movff	tablat,___ftmul@f1
  3601  0015A6  0009               	tblrd		*+
  3602  0015A8  CFF5 F075          	movff	tablat,___ftmul@f1+1
  3603  0015AC  000A               	tblrd		*-
  3604  0015AE  CFF5 F076          	movff	tablat,___ftmul@f1+2
  3605  0015B2  EC57  F012         	call	___ftmul	;wreg free
  3606  0015B6  C074  F086         	movff	?___ftmul,_scale$1576
  3607  0015BA  C075  F087         	movff	?___ftmul+1,_scale$1576+1
  3608  0015BE  C076  F088         	movff	?___ftmul+2,_scale$1576+2
  3609                           
  3610                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3611  0015C2  C086  F074         	movff	_scale$1576,___ftmul@f1
  3612  0015C6  C087  F075         	movff	_scale$1576+1,___ftmul@f1+1
  3613  0015CA  C088  F076         	movff	_scale$1576+2,___ftmul@f1+2
  3614  0015CE  0E00               	movlw	0
  3615  0015D0  0100               	movlb	0	; () banked
  3616  0015D2  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3617  0015D4  0E03               	movlw	3
  3618  0015D6  6F70               	movwf	___wmul@multiplicand& (0+255),b
  3619  0015D8  0E00               	movlw	0
  3620  0015DA  0100               	movlb	0	; () banked
  3621  0015DC  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  3622  0015DE  0E0A               	movlw	10
  3623  0015E0  6F62               	movwf	___awmod@divisor& (0+255),b
  3624  0015E2  0100               	movlb	0	; () banked
  3625  0015E4  5189               	movf	scale@scl& (0+255),w,b
  3626  0015E6  0100               	movlb	0	; () banked
  3627  0015E8  6F60               	movwf	___awmod@dividend& (0+255),b
  3628  0015EA  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  3629  0015EC  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  3630  0015EE  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  3631  0015F0  EC39  F017         	call	___awmod	;wreg free
  3632  0015F4  C060  F06E         	movff	?___awmod,___wmul@multiplier
  3633  0015F8  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  3634  0015FC  EC21  F019         	call	___wmul	;wreg free
  3635  001600  0E50               	movlw	low __powers_
  3636  001602  0100               	movlb	0	; () banked
  3637  001604  256E               	addwf	?___wmul& (0+255),w,b
  3638  001606  6EF6               	movwf	tblptrl,c
  3639  001608  0E06               	movlw	high __powers_
  3640  00160A  0100               	movlb	0	; () banked
  3641  00160C  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  3642  00160E  6EF7               	movwf	tblptrh,c
  3643  001610                     	if	0	;There are less than 3 active tblptr bytes
  3644  001610                     	endif
  3645  001610  0009               	tblrd		*+
  3646  001612  CFF5 F077          	movff	tablat,___ftmul@f2
  3647  001616  0009               	tblrd		*+
  3648  001618  CFF5 F078          	movff	tablat,___ftmul@f2+1
  3649  00161C  000A               	tblrd		*-
  3650  00161E  CFF5 F079          	movff	tablat,___ftmul@f2+2
  3651  001622  EC57  F012         	call	___ftmul	;wreg free
  3652  001626  C074  F083         	movff	?___ftmul,?_scale
  3653  00162A  C075  F084         	movff	?___ftmul+1,?_scale+1
  3654  00162E  C076  F085         	movff	?___ftmul+2,?_scale+2
  3655  001632  0012               	return	
  3656  001634                     l2955:
  3657                           
  3658                           ;doprnt.c: 438: else if(scl > 10)
  3659  001634  0100               	movlb	0	; () banked
  3660  001636  5189               	movf	scale@scl& (0+255),w,b
  3661  001638  0A80               	xorlw	128
  3662  00163A  0F75               	addlw	-139
  3663  00163C  A0D8               	btfss	status,0,c
  3664  00163E  D05D               	goto	l2961
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  3668  001640  0E00               	movlw	0
  3669  001642  0100               	movlb	0	; () banked
  3670  001644  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  3671  001646  0E0A               	movlw	10
  3672  001648  6F68               	movwf	___awdiv@divisor& (0+255),b
  3673  00164A  0100               	movlb	0	; () banked
  3674  00164C  5189               	movf	scale@scl& (0+255),w,b
  3675  00164E  0100               	movlb	0	; () banked
  3676  001650  6F66               	movwf	___awdiv@dividend& (0+255),b
  3677  001652  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  3678  001654  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  3679  001656  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  3680  001658  EC25  F016         	call	___awdiv	;wreg free
  3681  00165C  0E09               	movlw	9
  3682  00165E  0100               	movlb	0	; () banked
  3683  001660  2566               	addwf	?___awdiv& (0+255),w,b
  3684  001662  0100               	movlb	0	; () banked
  3685  001664  6F6E               	movwf	___wmul@multiplier& (0+255),b
  3686  001666  0E00               	movlw	0
  3687  001668  0100               	movlb	0	; () banked
  3688  00166A  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  3689  00166C  0100               	movlb	0	; () banked
  3690  00166E  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  3691  001670  0E00               	movlw	0
  3692  001672  0100               	movlb	0	; () banked
  3693  001674  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3694  001676  0E03               	movlw	3
  3695  001678  6F70               	movwf	___wmul@multiplicand& (0+255),b
  3696  00167A  EC21  F019         	call	___wmul	;wreg free
  3697  00167E  0E50               	movlw	low __powers_
  3698  001680  0100               	movlb	0	; () banked
  3699  001682  256E               	addwf	?___wmul& (0+255),w,b
  3700  001684  6EF6               	movwf	tblptrl,c
  3701  001686  0E06               	movlw	high __powers_
  3702  001688  0100               	movlb	0	; () banked
  3703  00168A  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  3704  00168C  6EF7               	movwf	tblptrh,c
  3705  00168E                     	if	0	;There are less than 3 active tblptr bytes
  3706  00168E                     	endif
  3707  00168E  0009               	tblrd		*+
  3708  001690  CFF5 F074          	movff	tablat,___ftmul@f1
  3709  001694  0009               	tblrd		*+
  3710  001696  CFF5 F075          	movff	tablat,___ftmul@f1+1
  3711  00169A  000A               	tblrd		*-
  3712  00169C  CFF5 F076          	movff	tablat,___ftmul@f1+2
  3713  0016A0  0E00               	movlw	0
  3714  0016A2  0100               	movlb	0	; () banked
  3715  0016A4  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3716  0016A6  0E03               	movlw	3
  3717  0016A8  6F70               	movwf	___wmul@multiplicand& (0+255),b
  3718  0016AA  0E00               	movlw	0
  3719  0016AC  0100               	movlb	0	; () banked
  3720  0016AE  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  3721  0016B0  0E0A               	movlw	10
  3722  0016B2  6F62               	movwf	___awmod@divisor& (0+255),b
  3723  0016B4  0100               	movlb	0	; () banked
  3724  0016B6  5189               	movf	scale@scl& (0+255),w,b
  3725  0016B8  0100               	movlb	0	; () banked
  3726  0016BA  6F60               	movwf	___awmod@dividend& (0+255),b
  3727  0016BC  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  3728  0016BE  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  3729  0016C0  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  3730  0016C2  EC39  F017         	call	___awmod	;wreg free
  3731  0016C6  C060  F06E         	movff	?___awmod,___wmul@multiplier
  3732  0016CA  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  3733  0016CE  EC21  F019         	call	___wmul	;wreg free
  3734  0016D2  0E50               	movlw	low __powers_
  3735  0016D4  0100               	movlb	0	; () banked
  3736  0016D6  256E               	addwf	?___wmul& (0+255),w,b
  3737  0016D8  6EF6               	movwf	tblptrl,c
  3738  0016DA  0E06               	movlw	high __powers_
  3739  0016DC  0100               	movlb	0	; () banked
  3740  0016DE  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  3741  0016E0  6EF7               	movwf	tblptrh,c
  3742  0016E2                     	if	0	;There are less than 3 active tblptr bytes
  3743  0016E2                     	endif
  3744  0016E2  0009               	tblrd		*+
  3745  0016E4  CFF5 F077          	movff	tablat,___ftmul@f2
  3746  0016E8  0009               	tblrd		*+
  3747  0016EA  CFF5 F078          	movff	tablat,___ftmul@f2+1
  3748  0016EE  000A               	tblrd		*-
  3749  0016F0  CFF5 F079          	movff	tablat,___ftmul@f2+2
  3750  0016F4  EC57  F012         	call	___ftmul	;wreg free
  3751  0016F8  D796               	goto	L5
  3752  0016FA                     l2961:
  3753                           
  3754                           ;doprnt.c: 440: return _powers_[scl];
  3755  0016FA  0100               	movlb	0	; () banked
  3756  0016FC  5189               	movf	scale@scl& (0+255),w,b
  3757  0016FE  0D03               	mullw	3
  3758  001700  0E50               	movlw	low __powers_
  3759  001702  24F3               	addwf	prodl,w,c
  3760  001704  6EF6               	movwf	tblptrl,c
  3761  001706  0E06               	movlw	high __powers_
  3762  001708  20F4               	addwfc	prodh,w,c
  3763  00170A  6EF7               	movwf	tblptrh,c
  3764  00170C                     	if	0	;There are less than 3 active tblptr bytes
  3765  00170C                     	endif
  3766  00170C  0009               	tblrd		*+
  3767  00170E  CFF5 F083          	movff	tablat,?_scale
  3768  001712  0009               	tblrd		*+
  3769  001714  CFF5 F084          	movff	tablat,?_scale+1
  3770  001718  000A               	tblrd		*-
  3771  00171A  CFF5 F085          	movff	tablat,?_scale+2
  3772  00171E  0012               	return	
  3773  001720                     __end_of_scale:
  3774                           	opt stack 0
  3775                           tblptru	equ	0xFF8
  3776                           tblptrh	equ	0xFF7
  3777                           tblptrl	equ	0xFF6
  3778                           tablat	equ	0xFF5
  3779                           prodh	equ	0xFF4
  3780                           prodl	equ	0xFF3
  3781                           intcon	equ	0xFF2
  3782                           postinc0	equ	0xFEE
  3783                           wreg	equ	0xFE8
  3784                           postdec1	equ	0xFE5
  3785                           fsr1l	equ	0xFE1
  3786                           indf2	equ	0xFDF
  3787                           postinc2	equ	0xFDE
  3788                           postdec2	equ	0xFDD
  3789                           fsr2h	equ	0xFDA
  3790                           fsr2l	equ	0xFD9
  3791                           status	equ	0xFD8
  3792                           
  3793 ;; *************** function _isdigit *****************
  3794 ;; Defined at:
  3795 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;  c               1    wreg     unsigned char 
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;  c               1    2[BANK0 ] unsigned char 
  3800 ;; Return value:  Size  Location     Type
  3801 ;;		None               void
  3802 ;; Registers used:
  3803 ;;		wreg, status,2, status,0
  3804 ;; Tracked objects:
  3805 ;;		On entry : 0/0
  3806 ;;		On exit  : 0/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3809 ;;      Params:         0       0       0       0       0       0       0
  3810 ;;      Locals:         0       2       0       0       0       0       0
  3811 ;;      Temps:          0       1       0       0       0       0       0
  3812 ;;      Totals:         0       3       0       0       0       0       0
  3813 ;;Total ram usage:        3 bytes
  3814 ;; Hardware stack levels used:    1
  3815 ;; Hardware stack levels required when called:    4
  3816 ;; This function calls:
  3817 ;;		Nothing
  3818 ;; This function is called by:
  3819 ;;		_sprintf
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           	psect	text3
  3824  00333E                     __ptext3:
  3825                           	opt stack 0
  3826  00333E                     _isdigit:
  3827                           	opt stack 25
  3828                           
  3829                           ;incstack = 0
  3830                           ;isdigit@c stored from wreg
  3831  00333E  0100               	movlb	0	; () banked
  3832  003340  6F62               	movwf	isdigit@c& (0+255),b
  3833  003342  0E00               	movlw	0
  3834  003344  0100               	movlb	0	; () banked
  3835  003346  6F61               	movwf	_isdigit$1161& (0+255),b
  3836                           
  3837                           ; BSR set to: 0
  3838  003348  0E3A               	movlw	58
  3839  00334A  0100               	movlb	0	; () banked
  3840  00334C  6162               	cpfslt	isdigit@c& (0+255),b
  3841  00334E  D007               	goto	l2973
  3842                           
  3843                           ; BSR set to: 0
  3844  003350  0E2F               	movlw	47
  3845  003352  0100               	movlb	0	; () banked
  3846  003354  6562               	cpfsgt	isdigit@c& (0+255),b
  3847  003356  D003               	goto	l2973
  3848                           
  3849                           ; BSR set to: 0
  3850  003358  0E01               	movlw	1
  3851  00335A  0100               	movlb	0	; () banked
  3852  00335C  6F61               	movwf	_isdigit$1161& (0+255),b
  3853  00335E                     l2973:
  3854                           
  3855                           ; BSR set to: 0
  3856  00335E  C061  F060         	movff	_isdigit$1161,??_isdigit
  3857  003362  0100               	movlb	0	; () banked
  3858  003364  3160               	rrcf	??_isdigit& (0+255),w,b
  3859  003366  0012               	return	
  3860  003368                     __end_of_isdigit:
  3861                           	opt stack 0
  3862                           tblptru	equ	0xFF8
  3863                           tblptrh	equ	0xFF7
  3864                           tblptrl	equ	0xFF6
  3865                           tablat	equ	0xFF5
  3866                           prodh	equ	0xFF4
  3867                           prodl	equ	0xFF3
  3868                           intcon	equ	0xFF2
  3869                           postinc0	equ	0xFEE
  3870                           wreg	equ	0xFE8
  3871                           postdec1	equ	0xFE5
  3872                           fsr1l	equ	0xFE1
  3873                           indf2	equ	0xFDF
  3874                           postinc2	equ	0xFDE
  3875                           postdec2	equ	0xFDD
  3876                           fsr2h	equ	0xFDA
  3877                           fsr2l	equ	0xFD9
  3878                           status	equ	0xFD8
  3879                           
  3880 ;; *************** function _fround *****************
  3881 ;; Defined at:
  3882 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;  prec            1    wreg     unsigned char 
  3885 ;; Auto vars:     Size  Location     Type
  3886 ;;  prec            1   44[BANK0 ] unsigned char 
  3887 ;; Return value:  Size  Location     Type
  3888 ;;                  3   35[BANK0 ] unsigned char 
  3889 ;; Registers used:
  3890 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3896 ;;      Params:         0       3       0       0       0       0       0
  3897 ;;      Locals:         0       7       0       0       0       0       0
  3898 ;;      Temps:          0       0       0       0       0       0       0
  3899 ;;      Totals:         0      10       0       0       0       0       0
  3900 ;;Total ram usage:       10 bytes
  3901 ;; Hardware stack levels used:    1
  3902 ;; Hardware stack levels required when called:    6
  3903 ;; This function calls:
  3904 ;;		___awdiv
  3905 ;;		___awmod
  3906 ;;		___ftmul
  3907 ;;		___wmul
  3908 ;; This function is called by:
  3909 ;;		_sprintf
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           	psect	text4
  3914  001720                     __ptext4:
  3915                           	opt stack 0
  3916  001720                     _fround:
  3917                           	opt stack 23
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;incstack = 0
  3921                           ;fround@prec stored from wreg
  3922  001720  0100               	movlb	0	; () banked
  3923  001722  6F8C               	movwf	fround@prec& (0+255),b
  3924                           
  3925                           ;doprnt.c: 413: if(prec>=110)
  3926  001724  0E6D               	movlw	109
  3927  001726  0100               	movlb	0	; () banked
  3928  001728  658C               	cpfsgt	fround@prec& (0+255),b
  3929  00172A  D0BA               	goto	l2915
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3933  00172C  0E00               	movlw	0
  3934  00172E  0100               	movlb	0	; () banked
  3935  001730  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3936  001732  0E03               	movlw	3
  3937  001734  6F70               	movwf	___wmul@multiplicand& (0+255),b
  3938  001736  0E00               	movlw	0
  3939  001738  0100               	movlb	0	; () banked
  3940  00173A  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  3941  00173C  0E0A               	movlw	10
  3942  00173E  6F68               	movwf	___awdiv@divisor& (0+255),b
  3943  001740  0E00               	movlw	0
  3944  001742  0100               	movlb	0	; () banked
  3945  001744  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  3946  001746  0E64               	movlw	100
  3947  001748  6F62               	movwf	___awmod@divisor& (0+255),b
  3948  00174A  C08C  F060         	movff	fround@prec,___awmod@dividend
  3949  00174E  0100               	movlb	0	; () banked
  3950  001750  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  3951  001752  EC39  F017         	call	___awmod	;wreg free
  3952  001756  C060  F066         	movff	?___awmod,___awdiv@dividend
  3953  00175A  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  3954  00175E  EC25  F016         	call	___awdiv	;wreg free
  3955  001762  0E09               	movlw	9
  3956  001764  0100               	movlb	0	; () banked
  3957  001766  2566               	addwf	?___awdiv& (0+255),w,b
  3958  001768  0100               	movlb	0	; () banked
  3959  00176A  6F6E               	movwf	___wmul@multiplier& (0+255),b
  3960  00176C  0E00               	movlw	0
  3961  00176E  0100               	movlb	0	; () banked
  3962  001770  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  3963  001772  0100               	movlb	0	; () banked
  3964  001774  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  3965  001776  EC21  F019         	call	___wmul	;wreg free
  3966  00177A  0E29               	movlw	low __npowers_
  3967  00177C  0100               	movlb	0	; () banked
  3968  00177E  256E               	addwf	?___wmul& (0+255),w,b
  3969  001780  6EF6               	movwf	tblptrl,c
  3970  001782  0E06               	movlw	high __npowers_
  3971  001784  0100               	movlb	0	; () banked
  3972  001786  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  3973  001788  6EF7               	movwf	tblptrh,c
  3974  00178A                     	if	0	;There are less than 3 active tblptr bytes
  3975  00178A                     	endif
  3976  00178A  0009               	tblrd		*+
  3977  00178C  CFF5 F077          	movff	tablat,___ftmul@f2
  3978  001790  0009               	tblrd		*+
  3979  001792  CFF5 F078          	movff	tablat,___ftmul@f2+1
  3980  001796  000A               	tblrd		*-
  3981  001798  CFF5 F079          	movff	tablat,___ftmul@f2+2
  3982  00179C  0E00               	movlw	0
  3983  00179E  0100               	movlb	0	; () banked
  3984  0017A0  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  3985  0017A2  0E64               	movlw	100
  3986  0017A4  6F68               	movwf	___awdiv@divisor& (0+255),b
  3987  0017A6  C08C  F066         	movff	fround@prec,___awdiv@dividend
  3988  0017AA  0100               	movlb	0	; () banked
  3989  0017AC  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  3990  0017AE  EC25  F016         	call	___awdiv	;wreg free
  3991  0017B2  0E12               	movlw	18
  3992  0017B4  0100               	movlb	0	; () banked
  3993  0017B6  2566               	addwf	?___awdiv& (0+255),w,b
  3994  0017B8  0100               	movlb	0	; () banked
  3995  0017BA  6F6E               	movwf	___wmul@multiplier& (0+255),b
  3996  0017BC  0E00               	movlw	0
  3997  0017BE  0100               	movlb	0	; () banked
  3998  0017C0  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  3999  0017C2  0100               	movlb	0	; () banked
  4000  0017C4  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  4001  0017C6  0E00               	movlw	0
  4002  0017C8  0100               	movlb	0	; () banked
  4003  0017CA  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4004  0017CC  0E03               	movlw	3
  4005  0017CE  6F70               	movwf	___wmul@multiplicand& (0+255),b
  4006  0017D0  EC21  F019         	call	___wmul	;wreg free
  4007  0017D4  0E29               	movlw	low __npowers_
  4008  0017D6  0100               	movlb	0	; () banked
  4009  0017D8  256E               	addwf	?___wmul& (0+255),w,b
  4010  0017DA  6EF6               	movwf	tblptrl,c
  4011  0017DC  0E06               	movlw	high __npowers_
  4012  0017DE  0100               	movlb	0	; () banked
  4013  0017E0  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  4014  0017E2  6EF7               	movwf	tblptrh,c
  4015  0017E4                     	if	0	;There are less than 3 active tblptr bytes
  4016  0017E4                     	endif
  4017  0017E4  0009               	tblrd		*+
  4018  0017E6  CFF5 F074          	movff	tablat,___ftmul@f1
  4019  0017EA  0009               	tblrd		*+
  4020  0017EC  CFF5 F075          	movff	tablat,___ftmul@f1+1
  4021  0017F0  000A               	tblrd		*-
  4022  0017F2  CFF5 F076          	movff	tablat,___ftmul@f1+2
  4023  0017F6  EC57  F012         	call	___ftmul	;wreg free
  4024  0017FA  C074  F089         	movff	?___ftmul,_fround$1574
  4025  0017FE  C075  F08A         	movff	?___ftmul+1,_fround$1574+1
  4026  001802  C076  F08B         	movff	?___ftmul+2,_fround$1574+2
  4027                           
  4028                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4029  001806  0E00               	movlw	0
  4030  001808  0100               	movlb	0	; () banked
  4031  00180A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4032  00180C  0E03               	movlw	3
  4033  00180E  6F70               	movwf	___wmul@multiplicand& (0+255),b
  4034  001810  0E00               	movlw	0
  4035  001812  0100               	movlb	0	; () banked
  4036  001814  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4037  001816  0E0A               	movlw	10
  4038  001818  6F62               	movwf	___awmod@divisor& (0+255),b
  4039  00181A  C08C  F060         	movff	fround@prec,___awmod@dividend
  4040  00181E  0100               	movlb	0	; () banked
  4041  001820  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  4042  001822  EC39  F017         	call	___awmod	;wreg free
  4043  001826  C060  F06E         	movff	?___awmod,___wmul@multiplier
  4044  00182A  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  4045  00182E  EC21  F019         	call	___wmul	;wreg free
  4046  001832  0E29               	movlw	low __npowers_
  4047  001834  0100               	movlb	0	; () banked
  4048  001836  256E               	addwf	?___wmul& (0+255),w,b
  4049  001838  6EF6               	movwf	tblptrl,c
  4050  00183A  0E06               	movlw	high __npowers_
  4051  00183C  0100               	movlb	0	; () banked
  4052  00183E  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  4053  001840  6EF7               	movwf	tblptrh,c
  4054  001842                     	if	0	;There are less than 3 active tblptr bytes
  4055  001842                     	endif
  4056  001842  0009               	tblrd		*+
  4057  001844  CFF5 F077          	movff	tablat,___ftmul@f2
  4058  001848  0009               	tblrd		*+
  4059  00184A  CFF5 F078          	movff	tablat,___ftmul@f2+1
  4060  00184E  000A               	tblrd		*-
  4061  001850  CFF5 F079          	movff	tablat,___ftmul@f2+2
  4062  001854  C089  F074         	movff	_fround$1574,___ftmul@f1
  4063  001858  C08A  F075         	movff	_fround$1574+1,___ftmul@f1+1
  4064  00185C  C08B  F076         	movff	_fround$1574+2,___ftmul@f1+2
  4065  001860  EC57  F012         	call	___ftmul	;wreg free
  4066  001864  C074  F086         	movff	?___ftmul,_fround$1575
  4067  001868  C075  F087         	movff	?___ftmul+1,_fround$1575+1
  4068  00186C  C076  F088         	movff	?___ftmul+2,_fround$1575+2
  4069                           
  4070                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4071  001870  C086  F074         	movff	_fround$1575,___ftmul@f1
  4072  001874  C087  F075         	movff	_fround$1575+1,___ftmul@f1+1
  4073  001878  C088  F076         	movff	_fround$1575+2,___ftmul@f1+2
  4074  00187C  0E00               	movlw	0
  4075  00187E  0100               	movlb	0	; () banked
  4076  001880  6F77               	movwf	___ftmul@f2& (0+255),b
  4077  001882  0E00               	movlw	0
  4078  001884  0100               	movlb	0	; () banked
  4079  001886  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4080  001888  0E3F               	movlw	63
  4081  00188A  0100               	movlb	0	; () banked
  4082  00188C  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4083  00188E  EC57  F012         	call	___ftmul	;wreg free
  4084  001892  C074  F083         	movff	?___ftmul,?_fround
  4085  001896  C075  F084         	movff	?___ftmul+1,?_fround+1
  4086  00189A  C076  F085         	movff	?___ftmul+2,?_fround+2
  4087  00189E  0012               	return	
  4088  0018A0                     l2915:
  4089                           
  4090                           ;doprnt.c: 415: else if(prec > 10)
  4091  0018A0  0E0A               	movlw	10
  4092  0018A2  0100               	movlb	0	; () banked
  4093  0018A4  658C               	cpfsgt	fround@prec& (0+255),b
  4094  0018A6  D06E               	goto	l2923
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4098  0018A8  0E00               	movlw	0
  4099  0018AA  0100               	movlb	0	; () banked
  4100  0018AC  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4101  0018AE  0E03               	movlw	3
  4102  0018B0  6F70               	movwf	___wmul@multiplicand& (0+255),b
  4103  0018B2  0E00               	movlw	0
  4104  0018B4  0100               	movlb	0	; () banked
  4105  0018B6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4106  0018B8  0E0A               	movlw	10
  4107  0018BA  6F62               	movwf	___awmod@divisor& (0+255),b
  4108  0018BC  C08C  F060         	movff	fround@prec,___awmod@dividend
  4109  0018C0  0100               	movlb	0	; () banked
  4110  0018C2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  4111  0018C4  EC39  F017         	call	___awmod	;wreg free
  4112  0018C8  C060  F06E         	movff	?___awmod,___wmul@multiplier
  4113  0018CC  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  4114  0018D0  EC21  F019         	call	___wmul	;wreg free
  4115  0018D4  0E29               	movlw	low __npowers_
  4116  0018D6  0100               	movlb	0	; () banked
  4117  0018D8  256E               	addwf	?___wmul& (0+255),w,b
  4118  0018DA  6EF6               	movwf	tblptrl,c
  4119  0018DC  0E06               	movlw	high __npowers_
  4120  0018DE  0100               	movlb	0	; () banked
  4121  0018E0  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  4122  0018E2  6EF7               	movwf	tblptrh,c
  4123  0018E4                     	if	0	;There are less than 3 active tblptr bytes
  4124  0018E4                     	endif
  4125  0018E4  0009               	tblrd		*+
  4126  0018E6  CFF5 F077          	movff	tablat,___ftmul@f2
  4127  0018EA  0009               	tblrd		*+
  4128  0018EC  CFF5 F078          	movff	tablat,___ftmul@f2+1
  4129  0018F0  000A               	tblrd		*-
  4130  0018F2  CFF5 F079          	movff	tablat,___ftmul@f2+2
  4131  0018F6  0E00               	movlw	0
  4132  0018F8  0100               	movlb	0	; () banked
  4133  0018FA  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  4134  0018FC  0E0A               	movlw	10
  4135  0018FE  6F68               	movwf	___awdiv@divisor& (0+255),b
  4136  001900  C08C  F066         	movff	fround@prec,___awdiv@dividend
  4137  001904  0100               	movlb	0	; () banked
  4138  001906  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  4139  001908  EC25  F016         	call	___awdiv	;wreg free
  4140  00190C  0E09               	movlw	9
  4141  00190E  0100               	movlb	0	; () banked
  4142  001910  2566               	addwf	?___awdiv& (0+255),w,b
  4143  001912  0100               	movlb	0	; () banked
  4144  001914  6F6E               	movwf	___wmul@multiplier& (0+255),b
  4145  001916  0E00               	movlw	0
  4146  001918  0100               	movlb	0	; () banked
  4147  00191A  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  4148  00191C  0100               	movlb	0	; () banked
  4149  00191E  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  4150  001920  0E00               	movlw	0
  4151  001922  0100               	movlb	0	; () banked
  4152  001924  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4153  001926  0E03               	movlw	3
  4154  001928  6F70               	movwf	___wmul@multiplicand& (0+255),b
  4155  00192A  EC21  F019         	call	___wmul	;wreg free
  4156  00192E  0E29               	movlw	low __npowers_
  4157  001930  0100               	movlb	0	; () banked
  4158  001932  256E               	addwf	?___wmul& (0+255),w,b
  4159  001934  6EF6               	movwf	tblptrl,c
  4160  001936  0E06               	movlw	high __npowers_
  4161  001938  0100               	movlb	0	; () banked
  4162  00193A  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  4163  00193C  6EF7               	movwf	tblptrh,c
  4164  00193E                     	if	0	;There are less than 3 active tblptr bytes
  4165  00193E                     	endif
  4166  00193E  0009               	tblrd		*+
  4167  001940  CFF5 F074          	movff	tablat,___ftmul@f1
  4168  001944  0009               	tblrd		*+
  4169  001946  CFF5 F075          	movff	tablat,___ftmul@f1+1
  4170  00194A  000A               	tblrd		*-
  4171  00194C  CFF5 F076          	movff	tablat,___ftmul@f1+2
  4172  001950  EC57  F012         	call	___ftmul	;wreg free
  4173  001954  C074  F089         	movff	?___ftmul,_fround$1574
  4174  001958  C075  F08A         	movff	?___ftmul+1,_fround$1574+1
  4175  00195C  C076  F08B         	movff	?___ftmul+2,_fround$1574+2
  4176                           
  4177                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4178  001960  C089  F074         	movff	_fround$1574,___ftmul@f1
  4179  001964  C08A  F075         	movff	_fround$1574+1,___ftmul@f1+1
  4180  001968  C08B  F076         	movff	_fround$1574+2,___ftmul@f1+2
  4181  00196C  0E00               	movlw	0
  4182  00196E  0100               	movlb	0	; () banked
  4183  001970  6F77               	movwf	___ftmul@f2& (0+255),b
  4184  001972  0E00               	movlw	0
  4185  001974  0100               	movlb	0	; () banked
  4186  001976  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4187  001978  0E3F               	movlw	63
  4188  00197A  0100               	movlb	0	; () banked
  4189  00197C  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4190  00197E  EC57  F012         	call	___ftmul	;wreg free
  4191  001982  D787               	goto	L6
  4192  001984                     l2923:
  4193                           
  4194                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  4195  001984  0100               	movlb	0	; () banked
  4196  001986  518C               	movf	fround@prec& (0+255),w,b
  4197  001988  0D03               	mullw	3
  4198  00198A  0E29               	movlw	low __npowers_
  4199  00198C  24F3               	addwf	prodl,w,c
  4200  00198E  6EF6               	movwf	tblptrl,c
  4201  001990  0E06               	movlw	high __npowers_
  4202  001992  20F4               	addwfc	prodh,w,c
  4203  001994  6EF7               	movwf	tblptrh,c
  4204  001996                     	if	0	;There are less than 3 active tblptr bytes
  4205  001996                     	endif
  4206  001996  0009               	tblrd		*+
  4207  001998  CFF5 F074          	movff	tablat,___ftmul@f1
  4208  00199C  0009               	tblrd		*+
  4209  00199E  CFF5 F075          	movff	tablat,___ftmul@f1+1
  4210  0019A2  000A               	tblrd		*-
  4211  0019A4  CFF5 F076          	movff	tablat,___ftmul@f1+2
  4212  0019A8  0E00               	movlw	0
  4213  0019AA  0100               	movlb	0	; () banked
  4214  0019AC  6F77               	movwf	___ftmul@f2& (0+255),b
  4215  0019AE  0E00               	movlw	0
  4216  0019B0  0100               	movlb	0	; () banked
  4217  0019B2  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4218  0019B4  0E3F               	movlw	63
  4219  0019B6  0100               	movlb	0	; () banked
  4220  0019B8  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4221  0019BA  EC57  F012         	call	___ftmul	;wreg free
  4222  0019BE  C074  F083         	movff	?___ftmul,?_fround
  4223  0019C2  C075  F084         	movff	?___ftmul+1,?_fround+1
  4224  0019C6  C076  F085         	movff	?___ftmul+2,?_fround+2
  4225  0019CA  0012               	return	
  4226  0019CC                     __end_of_fround:
  4227                           	opt stack 0
  4228                           tblptru	equ	0xFF8
  4229                           tblptrh	equ	0xFF7
  4230                           tblptrl	equ	0xFF6
  4231                           tablat	equ	0xFF5
  4232                           prodh	equ	0xFF4
  4233                           prodl	equ	0xFF3
  4234                           intcon	equ	0xFF2
  4235                           postinc0	equ	0xFEE
  4236                           wreg	equ	0xFE8
  4237                           postdec1	equ	0xFE5
  4238                           fsr1l	equ	0xFE1
  4239                           indf2	equ	0xFDF
  4240                           postinc2	equ	0xFDE
  4241                           postdec2	equ	0xFDD
  4242                           fsr2h	equ	0xFDA
  4243                           fsr2l	equ	0xFD9
  4244                           status	equ	0xFD8
  4245                           
  4246 ;; *************** function ___wmul *****************
  4247 ;; Defined at:
  4248 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  multiplier      2   14[BANK0 ] unsigned int 
  4251 ;;  multiplicand    2   16[BANK0 ] unsigned int 
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;  product         2   18[BANK0 ] unsigned int 
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  2   14[BANK0 ] unsigned int 
  4256 ;; Registers used:
  4257 ;;		wreg, status,2, status,0, prodl, prodh
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4263 ;;      Params:         0       4       0       0       0       0       0
  4264 ;;      Locals:         0       2       0       0       0       0       0
  4265 ;;      Temps:          0       0       0       0       0       0       0
  4266 ;;      Totals:         0       6       0       0       0       0       0
  4267 ;;Total ram usage:        6 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; Hardware stack levels required when called:    4
  4270 ;; This function calls:
  4271 ;;		Nothing
  4272 ;; This function is called by:
  4273 ;;		_fround
  4274 ;;		_scale
  4275 ;;		_sprintf
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           	psect	text5
  4280  003242                     __ptext5:
  4281                           	opt stack 0
  4282  003242                     ___wmul:
  4283                           	opt stack 24
  4284                           
  4285                           ;incstack = 0
  4286  003242  0100               	movlb	0	; () banked
  4287  003244  516E               	movf	___wmul@multiplier& (0+255),w,b
  4288  003246  0100               	movlb	0	; () banked
  4289  003248  0370               	mulwf	___wmul@multiplicand& (0+255),b
  4290  00324A  CFF3 F072          	movff	prodl,___wmul@product
  4291  00324E  CFF4 F073          	movff	prodh,___wmul@product+1
  4292  003252  0100               	movlb	0	; () banked
  4293  003254  516E               	movf	___wmul@multiplier& (0+255),w,b
  4294  003256  0100               	movlb	0	; () banked
  4295  003258  0371               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  4296  00325A  50F3               	movf	prodl,w,c
  4297  00325C  0100               	movlb	0	; () banked
  4298  00325E  2773               	addwf	(___wmul@product+1)& (0+255),f,b
  4299  003260  0100               	movlb	0	; () banked
  4300  003262  516F               	movf	(___wmul@multiplier+1)& (0+255),w,b
  4301  003264  0100               	movlb	0	; () banked
  4302  003266  0370               	mulwf	___wmul@multiplicand& (0+255),b
  4303  003268  50F3               	movf	prodl,w,c
  4304  00326A  0100               	movlb	0	; () banked
  4305  00326C  2773               	addwf	(___wmul@product+1)& (0+255),f,b
  4306                           
  4307                           ; BSR set to: 0
  4308  00326E  C072  F06E         	movff	___wmul@product,?___wmul
  4309  003272  C073  F06F         	movff	___wmul@product+1,?___wmul+1
  4310  003276  0012               	return	
  4311  003278                     __end_of___wmul:
  4312                           	opt stack 0
  4313                           tblptru	equ	0xFF8
  4314                           tblptrh	equ	0xFF7
  4315                           tblptrl	equ	0xFF6
  4316                           tablat	equ	0xFF5
  4317                           prodh	equ	0xFF4
  4318                           prodl	equ	0xFF3
  4319                           intcon	equ	0xFF2
  4320                           postinc0	equ	0xFEE
  4321                           wreg	equ	0xFE8
  4322                           postdec1	equ	0xFE5
  4323                           fsr1l	equ	0xFE1
  4324                           indf2	equ	0xFDF
  4325                           postinc2	equ	0xFDE
  4326                           postdec2	equ	0xFDD
  4327                           fsr2h	equ	0xFDA
  4328                           fsr2l	equ	0xFD9
  4329                           status	equ	0xFD8
  4330                           
  4331 ;; *************** function ___ftmul *****************
  4332 ;; Defined at:
  4333 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;  f1              3   20[BANK0 ] float 
  4336 ;;  f2              3   23[BANK0 ] float 
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;  f3_as_produc    3   30[BANK0 ] unsigned um
  4339 ;;  sign            1   34[BANK0 ] unsigned char 
  4340 ;;  cntr            1   33[BANK0 ] unsigned char 
  4341 ;;  exp             1   29[BANK0 ] unsigned char 
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  3   20[BANK0 ] float 
  4344 ;; Registers used:
  4345 ;;		wreg, status,2, status,0, cstack
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4351 ;;      Params:         0       6       0       0       0       0       0
  4352 ;;      Locals:         0       6       0       0       0       0       0
  4353 ;;      Temps:          0       3       0       0       0       0       0
  4354 ;;      Totals:         0      15       0       0       0       0       0
  4355 ;;Total ram usage:       15 bytes
  4356 ;; Hardware stack levels used:    1
  4357 ;; Hardware stack levels required when called:    5
  4358 ;; This function calls:
  4359 ;;		___ftpack
  4360 ;; This function is called by:
  4361 ;;		_fround
  4362 ;;		_scale
  4363 ;;		_sprintf
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           	psect	text6
  4368  0024AE                     __ptext6:
  4369                           	opt stack 0
  4370  0024AE                     ___ftmul:
  4371                           	opt stack 23
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;incstack = 0
  4375  0024AE  C076  F07A         	movff	___ftmul@f1+2,??___ftmul
  4376  0024B2  0100               	movlb	0	; () banked
  4377  0024B4  6B7B               	clrf	(??___ftmul+1)& (0+255),b
  4378  0024B6  6B7C               	clrf	(??___ftmul+2)& (0+255),b
  4379  0024B8  0100               	movlb	0	; () banked
  4380  0024BA  3575               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  4381  0024BC  0100               	movlb	0	; () banked
  4382  0024BE  377A               	rlcf	??___ftmul& (0+255),f,b
  4383  0024C0  E301               	bnc	u2551
  4384  0024C2  817B               	bsf	(??___ftmul+1)& (0+255),0,b
  4385  0024C4                     u2551:
  4386  0024C4  0100               	movlb	0	; () banked
  4387  0024C6  517A               	movf	??___ftmul& (0+255),w,b
  4388  0024C8  0100               	movlb	0	; () banked
  4389  0024CA  6F7D               	movwf	___ftmul@exp& (0+255),b
  4390  0024CC  0100               	movlb	0	; () banked
  4391  0024CE  517D               	movf	___ftmul@exp& (0+255),w,b
  4392  0024D0  A4D8               	btfss	status,2,c
  4393  0024D2  D00A               	goto	l2671
  4394                           
  4395                           ; BSR set to: 0
  4396  0024D4  0E00               	movlw	0
  4397  0024D6  0100               	movlb	0	; () banked
  4398  0024D8  6F74               	movwf	?___ftmul& (0+255),b
  4399  0024DA  0E00               	movlw	0
  4400  0024DC  0100               	movlb	0	; () banked
  4401  0024DE  6F75               	movwf	(?___ftmul+1)& (0+255),b
  4402  0024E0  0E00               	movlw	0
  4403  0024E2  0100               	movlb	0	; () banked
  4404  0024E4  6F76               	movwf	(?___ftmul+2)& (0+255),b
  4405                           
  4406                           ; BSR set to: 0
  4407  0024E6  0012               	return	
  4408  0024E8                     l2671:
  4409                           
  4410                           ; BSR set to: 0
  4411  0024E8  C079  F07A         	movff	___ftmul@f2+2,??___ftmul
  4412  0024EC  0100               	movlb	0	; () banked
  4413  0024EE  6B7B               	clrf	(??___ftmul+1)& (0+255),b
  4414  0024F0  6B7C               	clrf	(??___ftmul+2)& (0+255),b
  4415  0024F2  0100               	movlb	0	; () banked
  4416  0024F4  3578               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  4417  0024F6  0100               	movlb	0	; () banked
  4418  0024F8  377A               	rlcf	??___ftmul& (0+255),f,b
  4419  0024FA  E301               	bnc	u2571
  4420  0024FC  817B               	bsf	(??___ftmul+1)& (0+255),0,b
  4421  0024FE                     u2571:
  4422  0024FE  0100               	movlb	0	; () banked
  4423  002500  517A               	movf	??___ftmul& (0+255),w,b
  4424  002502  0100               	movlb	0	; () banked
  4425  002504  6F82               	movwf	___ftmul@sign& (0+255),b
  4426  002506  0100               	movlb	0	; () banked
  4427  002508  5182               	movf	___ftmul@sign& (0+255),w,b
  4428  00250A  A4D8               	btfss	status,2,c
  4429  00250C  D00A               	goto	l2677
  4430                           
  4431                           ; BSR set to: 0
  4432  00250E  0E00               	movlw	0
  4433  002510  0100               	movlb	0	; () banked
  4434  002512  6F74               	movwf	?___ftmul& (0+255),b
  4435  002514  0E00               	movlw	0
  4436  002516  0100               	movlb	0	; () banked
  4437  002518  6F75               	movwf	(?___ftmul+1)& (0+255),b
  4438  00251A  0E00               	movlw	0
  4439  00251C  0100               	movlb	0	; () banked
  4440  00251E  6F76               	movwf	(?___ftmul+2)& (0+255),b
  4441                           
  4442                           ; BSR set to: 0
  4443  002520  0012               	return	
  4444  002522                     l2677:
  4445                           
  4446                           ; BSR set to: 0
  4447  002522  0100               	movlb	0	; () banked
  4448  002524  5182               	movf	___ftmul@sign& (0+255),w,b
  4449  002526  0F7B               	addlw	123
  4450  002528  0100               	movlb	0	; () banked
  4451  00252A  277D               	addwf	___ftmul@exp& (0+255),f,b
  4452                           
  4453                           ; BSR set to: 0
  4454  00252C  C076  F082         	movff	___ftmul@f1+2,___ftmul@sign
  4455  002530  0100               	movlb	0	; () banked
  4456  002532  5179               	movf	(___ftmul@f2+2)& (0+255),w,b
  4457  002534  0100               	movlb	0	; () banked
  4458  002536  1B82               	xorwf	___ftmul@sign& (0+255),f,b
  4459  002538  0E80               	movlw	128
  4460  00253A  0100               	movlb	0	; () banked
  4461  00253C  1782               	andwf	___ftmul@sign& (0+255),f,b
  4462                           
  4463                           ; BSR set to: 0
  4464  00253E  0100               	movlb	0	; () banked
  4465  002540  8F75               	bsf	(___ftmul@f1+1)& (0+255),7,b
  4466                           
  4467                           ; BSR set to: 0
  4468  002542  0100               	movlb	0	; () banked
  4469  002544  8F78               	bsf	(___ftmul@f2+1)& (0+255),7,b
  4470                           
  4471                           ; BSR set to: 0
  4472  002546  0EFF               	movlw	255
  4473  002548  0100               	movlb	0	; () banked
  4474  00254A  1777               	andwf	___ftmul@f2& (0+255),f,b
  4475  00254C  0EFF               	movlw	255
  4476  00254E  0100               	movlb	0	; () banked
  4477  002550  1778               	andwf	(___ftmul@f2+1)& (0+255),f,b
  4478  002552  0E00               	movlw	0
  4479  002554  0100               	movlb	0	; () banked
  4480  002556  1779               	andwf	(___ftmul@f2+2)& (0+255),f,b
  4481                           
  4482                           ; BSR set to: 0
  4483  002558  0E00               	movlw	0
  4484  00255A  0100               	movlb	0	; () banked
  4485  00255C  6F7E               	movwf	___ftmul@f3_as_product& (0+255),b
  4486  00255E  0E00               	movlw	0
  4487  002560  0100               	movlb	0	; () banked
  4488  002562  6F7F               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  4489  002564  0E00               	movlw	0
  4490  002566  0100               	movlb	0	; () banked
  4491  002568  6F80               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  4492                           
  4493                           ; BSR set to: 0
  4494  00256A  0E07               	movlw	7
  4495  00256C  0100               	movlb	0	; () banked
  4496  00256E  6F81               	movwf	___ftmul@cntr& (0+255),b
  4497  002570                     l2691:
  4498                           
  4499                           ; BSR set to: 0
  4500  002570  0100               	movlb	0	; () banked
  4501  002572  A174               	btfss	___ftmul@f1& (0+255),0,b
  4502  002574  D00C               	goto	l2695
  4503                           
  4504                           ; BSR set to: 0
  4505  002576  0100               	movlb	0	; () banked
  4506  002578  5177               	movf	___ftmul@f2& (0+255),w,b
  4507  00257A  0100               	movlb	0	; () banked
  4508  00257C  277E               	addwf	___ftmul@f3_as_product& (0+255),f,b
  4509  00257E  0100               	movlb	0	; () banked
  4510  002580  5178               	movf	(___ftmul@f2+1)& (0+255),w,b
  4511  002582  0100               	movlb	0	; () banked
  4512  002584  237F               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  4513  002586  0100               	movlb	0	; () banked
  4514  002588  5179               	movf	(___ftmul@f2+2)& (0+255),w,b
  4515  00258A  0100               	movlb	0	; () banked
  4516  00258C  2380               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  4517  00258E                     l2695:
  4518                           
  4519                           ; BSR set to: 0
  4520  00258E  0100               	movlb	0	; () banked
  4521  002590  90D8               	bcf	status,0,c
  4522  002592  3376               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  4523  002594  3375               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  4524  002596  3374               	rrcf	___ftmul@f1& (0+255),f,b
  4525  002598  0100               	movlb	0	; () banked
  4526  00259A  90D8               	bcf	status,0,c
  4527  00259C  3777               	rlcf	___ftmul@f2& (0+255),f,b
  4528  00259E  3778               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  4529  0025A0  3779               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  4530                           
  4531                           ; BSR set to: 0
  4532  0025A2  0100               	movlb	0	; () banked
  4533  0025A4  2F81               	decfsz	___ftmul@cntr& (0+255),f,b
  4534  0025A6  D7E4               	goto	l2691
  4535                           
  4536                           ; BSR set to: 0
  4537                           
  4538                           ; BSR set to: 0
  4539  0025A8  0E09               	movlw	9
  4540  0025AA  0100               	movlb	0	; () banked
  4541  0025AC  6F81               	movwf	___ftmul@cntr& (0+255),b
  4542  0025AE                     l2701:
  4543                           
  4544                           ; BSR set to: 0
  4545  0025AE  0100               	movlb	0	; () banked
  4546  0025B0  A174               	btfss	___ftmul@f1& (0+255),0,b
  4547  0025B2  D00C               	goto	l2705
  4548                           
  4549                           ; BSR set to: 0
  4550  0025B4  0100               	movlb	0	; () banked
  4551  0025B6  5177               	movf	___ftmul@f2& (0+255),w,b
  4552  0025B8  0100               	movlb	0	; () banked
  4553  0025BA  277E               	addwf	___ftmul@f3_as_product& (0+255),f,b
  4554  0025BC  0100               	movlb	0	; () banked
  4555  0025BE  5178               	movf	(___ftmul@f2+1)& (0+255),w,b
  4556  0025C0  0100               	movlb	0	; () banked
  4557  0025C2  237F               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  4558  0025C4  0100               	movlb	0	; () banked
  4559  0025C6  5179               	movf	(___ftmul@f2+2)& (0+255),w,b
  4560  0025C8  0100               	movlb	0	; () banked
  4561  0025CA  2380               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  4562  0025CC                     l2705:
  4563                           
  4564                           ; BSR set to: 0
  4565  0025CC  0100               	movlb	0	; () banked
  4566  0025CE  90D8               	bcf	status,0,c
  4567  0025D0  3376               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  4568  0025D2  3375               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  4569  0025D4  3374               	rrcf	___ftmul@f1& (0+255),f,b
  4570  0025D6  0100               	movlb	0	; () banked
  4571  0025D8  90D8               	bcf	status,0,c
  4572  0025DA  3380               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  4573  0025DC  337F               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  4574  0025DE  337E               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  4575                           
  4576                           ; BSR set to: 0
  4577  0025E0  0100               	movlb	0	; () banked
  4578  0025E2  2F81               	decfsz	___ftmul@cntr& (0+255),f,b
  4579  0025E4  D7E4               	goto	l2701
  4580                           
  4581                           ; BSR set to: 0
  4582                           
  4583                           ; BSR set to: 0
  4584  0025E6  C07E  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
  4585  0025EA  C07F  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4586  0025EE  C080  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4587  0025F2  C07D  F063         	movff	___ftmul@exp,___ftpack@exp
  4588  0025F6  C082  F064         	movff	___ftmul@sign,___ftpack@sign
  4589  0025FA  EC4E  F014         	call	___ftpack	;wreg free
  4590  0025FE  C060  F074         	movff	?___ftpack,?___ftmul
  4591  002602  C061  F075         	movff	?___ftpack+1,?___ftmul+1
  4592  002606  C062  F076         	movff	?___ftpack+2,?___ftmul+2
  4593  00260A  0012               	return	
  4594  00260C                     __end_of___ftmul:
  4595                           	opt stack 0
  4596                           tblptru	equ	0xFF8
  4597                           tblptrh	equ	0xFF7
  4598                           tblptrl	equ	0xFF6
  4599                           tablat	equ	0xFF5
  4600                           prodh	equ	0xFF4
  4601                           prodl	equ	0xFF3
  4602                           intcon	equ	0xFF2
  4603                           postinc0	equ	0xFEE
  4604                           wreg	equ	0xFE8
  4605                           postdec1	equ	0xFE5
  4606                           fsr1l	equ	0xFE1
  4607                           indf2	equ	0xFDF
  4608                           postinc2	equ	0xFDE
  4609                           postdec2	equ	0xFDD
  4610                           fsr2h	equ	0xFDA
  4611                           fsr2l	equ	0xFD9
  4612                           status	equ	0xFD8
  4613                           
  4614 ;; *************** function ___awmod *****************
  4615 ;; Defined at:
  4616 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;  dividend        2    0[BANK0 ] int 
  4619 ;;  divisor         2    2[BANK0 ] int 
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;  sign            1    5[BANK0 ] unsigned char 
  4622 ;;  counter         1    4[BANK0 ] unsigned char 
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  2    0[BANK0 ] int 
  4625 ;; Registers used:
  4626 ;;		wreg, status,2, status,0
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4632 ;;      Params:         0       4       0       0       0       0       0
  4633 ;;      Locals:         0       2       0       0       0       0       0
  4634 ;;      Temps:          0       0       0       0       0       0       0
  4635 ;;      Totals:         0       6       0       0       0       0       0
  4636 ;;Total ram usage:        6 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:    4
  4639 ;; This function calls:
  4640 ;;		Nothing
  4641 ;; This function is called by:
  4642 ;;		_fround
  4643 ;;		_scale
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           	psect	text7
  4648  002E72                     __ptext7:
  4649                           	opt stack 0
  4650  002E72                     ___awmod:
  4651                           	opt stack 24
  4652                           
  4653                           ;incstack = 0
  4654  002E72  0E00               	movlw	0
  4655  002E74  0100               	movlb	0	; () banked
  4656  002E76  6F65               	movwf	___awmod@sign& (0+255),b
  4657                           
  4658                           ; BSR set to: 0
  4659  002E78  0100               	movlb	0	; () banked
  4660  002E7A  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
  4661  002E7C  D008               	goto	l2765
  4662                           
  4663                           ; BSR set to: 0
  4664  002E7E  0100               	movlb	0	; () banked
  4665  002E80  6D60               	negf	___awmod@dividend& (0+255),b
  4666  002E82  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  4667  002E84  B0D8               	btfsc	status,0,c
  4668  002E86  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  4669                           
  4670                           ; BSR set to: 0
  4671  002E88  0E01               	movlw	1
  4672  002E8A  0100               	movlb	0	; () banked
  4673  002E8C  6F65               	movwf	___awmod@sign& (0+255),b
  4674  002E8E                     l2765:
  4675                           
  4676                           ; BSR set to: 0
  4677  002E8E  0100               	movlb	0	; () banked
  4678  002E90  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4679  002E92  D005               	goto	l2769
  4680                           
  4681                           ; BSR set to: 0
  4682  002E94  0100               	movlb	0	; () banked
  4683  002E96  6D62               	negf	___awmod@divisor& (0+255),b
  4684  002E98  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  4685  002E9A  B0D8               	btfsc	status,0,c
  4686  002E9C  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  4687  002E9E                     l2769:
  4688                           
  4689                           ; BSR set to: 0
  4690  002E9E  0100               	movlb	0	; () banked
  4691  002EA0  5162               	movf	___awmod@divisor& (0+255),w,b
  4692  002EA2  0100               	movlb	0	; () banked
  4693  002EA4  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  4694  002EA6  B4D8               	btfsc	status,2,c
  4695  002EA8  D026               	goto	l2785
  4696                           
  4697                           ; BSR set to: 0
  4698  002EAA  0E01               	movlw	1
  4699  002EAC  0100               	movlb	0	; () banked
  4700  002EAE  6F64               	movwf	___awmod@counter& (0+255),b
  4701  002EB0  D006               	goto	l2775
  4702  002EB2                     l2773:
  4703                           
  4704                           ; BSR set to: 0
  4705  002EB2  0100               	movlb	0	; () banked
  4706  002EB4  90D8               	bcf	status,0,c
  4707  002EB6  3762               	rlcf	___awmod@divisor& (0+255),f,b
  4708  002EB8  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4709  002EBA  0100               	movlb	0	; () banked
  4710  002EBC  2B64               	incf	___awmod@counter& (0+255),f,b
  4711  002EBE                     l2775:
  4712                           
  4713                           ; BSR set to: 0
  4714  002EBE  0100               	movlb	0	; () banked
  4715  002EC0  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4716  002EC2  D7F7               	goto	l2773
  4717  002EC4                     l2777:
  4718                           
  4719                           ; BSR set to: 0
  4720  002EC4  0100               	movlb	0	; () banked
  4721  002EC6  5162               	movf	___awmod@divisor& (0+255),w,b
  4722  002EC8  0100               	movlb	0	; () banked
  4723  002ECA  5D60               	subwf	___awmod@dividend& (0+255),w,b
  4724  002ECC  0100               	movlb	0	; () banked
  4725  002ECE  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  4726  002ED0  0100               	movlb	0	; () banked
  4727  002ED2  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4728  002ED4  A0D8               	btfss	status,0,c
  4729  002ED6  D008               	goto	l2781
  4730                           
  4731                           ; BSR set to: 0
  4732  002ED8  0100               	movlb	0	; () banked
  4733  002EDA  5162               	movf	___awmod@divisor& (0+255),w,b
  4734  002EDC  0100               	movlb	0	; () banked
  4735  002EDE  5F60               	subwf	___awmod@dividend& (0+255),f,b
  4736  002EE0  0100               	movlb	0	; () banked
  4737  002EE2  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  4738  002EE4  0100               	movlb	0	; () banked
  4739  002EE6  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4740  002EE8                     l2781:
  4741                           
  4742                           ; BSR set to: 0
  4743  002EE8  0100               	movlb	0	; () banked
  4744  002EEA  90D8               	bcf	status,0,c
  4745  002EEC  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4746  002EEE  3362               	rrcf	___awmod@divisor& (0+255),f,b
  4747                           
  4748                           ; BSR set to: 0
  4749  002EF0  0100               	movlb	0	; () banked
  4750  002EF2  2F64               	decfsz	___awmod@counter& (0+255),f,b
  4751  002EF4  D7E7               	goto	l2777
  4752  002EF6                     l2785:
  4753                           
  4754                           ; BSR set to: 0
  4755  002EF6  0100               	movlb	0	; () banked
  4756  002EF8  5165               	movf	___awmod@sign& (0+255),w,b
  4757  002EFA  0100               	movlb	0	; () banked
  4758  002EFC  B4D8               	btfsc	status,2,c
  4759  002EFE  D005               	goto	l2789
  4760                           
  4761                           ; BSR set to: 0
  4762  002F00  0100               	movlb	0	; () banked
  4763  002F02  6D60               	negf	___awmod@dividend& (0+255),b
  4764  002F04  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  4765  002F06  B0D8               	btfsc	status,0,c
  4766  002F08  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  4767  002F0A                     l2789:
  4768                           
  4769                           ; BSR set to: 0
  4770  002F0A  C060  F060         	movff	___awmod@dividend,?___awmod
  4771  002F0E  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  4772  002F12  0012               	return	
  4773  002F14                     __end_of___awmod:
  4774                           	opt stack 0
  4775                           tblptru	equ	0xFF8
  4776                           tblptrh	equ	0xFF7
  4777                           tblptrl	equ	0xFF6
  4778                           tablat	equ	0xFF5
  4779                           prodh	equ	0xFF4
  4780                           prodl	equ	0xFF3
  4781                           intcon	equ	0xFF2
  4782                           postinc0	equ	0xFEE
  4783                           wreg	equ	0xFE8
  4784                           postdec1	equ	0xFE5
  4785                           fsr1l	equ	0xFE1
  4786                           indf2	equ	0xFDF
  4787                           postinc2	equ	0xFDE
  4788                           postdec2	equ	0xFDD
  4789                           fsr2h	equ	0xFDA
  4790                           fsr2l	equ	0xFD9
  4791                           status	equ	0xFD8
  4792                           
  4793 ;; *************** function ___awdiv *****************
  4794 ;; Defined at:
  4795 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  4796 ;; Parameters:    Size  Location     Type
  4797 ;;  dividend        2    6[BANK0 ] int 
  4798 ;;  divisor         2    8[BANK0 ] int 
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;  quotient        2   12[BANK0 ] int 
  4801 ;;  sign            1   11[BANK0 ] unsigned char 
  4802 ;;  counter         1   10[BANK0 ] unsigned char 
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  2    6[BANK0 ] int 
  4805 ;; Registers used:
  4806 ;;		wreg, status,2, status,0
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4812 ;;      Params:         0       4       0       0       0       0       0
  4813 ;;      Locals:         0       4       0       0       0       0       0
  4814 ;;      Temps:          0       0       0       0       0       0       0
  4815 ;;      Totals:         0       8       0       0       0       0       0
  4816 ;;Total ram usage:        8 bytes
  4817 ;; Hardware stack levels used:    1
  4818 ;; Hardware stack levels required when called:    4
  4819 ;; This function calls:
  4820 ;;		Nothing
  4821 ;; This function is called by:
  4822 ;;		_fround
  4823 ;;		_scale
  4824 ;;		_sprintf
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           
  4828                           	psect	text8
  4829  002C4A                     __ptext8:
  4830                           	opt stack 0
  4831  002C4A                     ___awdiv:
  4832                           	opt stack 24
  4833                           
  4834                           ; BSR set to: 0
  4835                           ;incstack = 0
  4836  002C4A  0E00               	movlw	0
  4837  002C4C  0100               	movlb	0	; () banked
  4838  002C4E  6F6B               	movwf	___awdiv@sign& (0+255),b
  4839                           
  4840                           ; BSR set to: 0
  4841  002C50  0100               	movlb	0	; () banked
  4842  002C52  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4843  002C54  D008               	goto	l2721
  4844                           
  4845                           ; BSR set to: 0
  4846  002C56  0100               	movlb	0	; () banked
  4847  002C58  6D68               	negf	___awdiv@divisor& (0+255),b
  4848  002C5A  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4849  002C5C  B0D8               	btfsc	status,0,c
  4850  002C5E  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4851                           
  4852                           ; BSR set to: 0
  4853  002C60  0E01               	movlw	1
  4854  002C62  0100               	movlb	0	; () banked
  4855  002C64  6F6B               	movwf	___awdiv@sign& (0+255),b
  4856  002C66                     l2721:
  4857                           
  4858                           ; BSR set to: 0
  4859  002C66  0100               	movlb	0	; () banked
  4860  002C68  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  4861  002C6A  D008               	goto	l2727
  4862                           
  4863                           ; BSR set to: 0
  4864  002C6C  0100               	movlb	0	; () banked
  4865  002C6E  6D66               	negf	___awdiv@dividend& (0+255),b
  4866  002C70  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4867  002C72  B0D8               	btfsc	status,0,c
  4868  002C74  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4869                           
  4870                           ; BSR set to: 0
  4871  002C76  0E01               	movlw	1
  4872  002C78  0100               	movlb	0	; () banked
  4873  002C7A  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
  4874  002C7C                     l2727:
  4875                           
  4876                           ; BSR set to: 0
  4877  002C7C  0E00               	movlw	0
  4878  002C7E  0100               	movlb	0	; () banked
  4879  002C80  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
  4880  002C82  0E00               	movlw	0
  4881  002C84  6F6C               	movwf	___awdiv@quotient& (0+255),b
  4882                           
  4883                           ; BSR set to: 0
  4884  002C86  0100               	movlb	0	; () banked
  4885  002C88  5168               	movf	___awdiv@divisor& (0+255),w,b
  4886  002C8A  0100               	movlb	0	; () banked
  4887  002C8C  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4888  002C8E  B4D8               	btfsc	status,2,c
  4889  002C90  D02C               	goto	l2749
  4890                           
  4891                           ; BSR set to: 0
  4892  002C92  0E01               	movlw	1
  4893  002C94  0100               	movlb	0	; () banked
  4894  002C96  6F6A               	movwf	___awdiv@counter& (0+255),b
  4895  002C98  D006               	goto	l2735
  4896  002C9A                     l2733:
  4897                           
  4898                           ; BSR set to: 0
  4899  002C9A  0100               	movlb	0	; () banked
  4900  002C9C  90D8               	bcf	status,0,c
  4901  002C9E  3768               	rlcf	___awdiv@divisor& (0+255),f,b
  4902  002CA0  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4903  002CA2  0100               	movlb	0	; () banked
  4904  002CA4  2B6A               	incf	___awdiv@counter& (0+255),f,b
  4905  002CA6                     l2735:
  4906                           
  4907                           ; BSR set to: 0
  4908  002CA6  0100               	movlb	0	; () banked
  4909  002CA8  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4910  002CAA  D7F7               	goto	l2733
  4911  002CAC                     l2737:
  4912                           
  4913                           ; BSR set to: 0
  4914  002CAC  0100               	movlb	0	; () banked
  4915  002CAE  90D8               	bcf	status,0,c
  4916  002CB0  376C               	rlcf	___awdiv@quotient& (0+255),f,b
  4917  002CB2  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4918                           
  4919                           ; BSR set to: 0
  4920  002CB4  0100               	movlb	0	; () banked
  4921  002CB6  5168               	movf	___awdiv@divisor& (0+255),w,b
  4922  002CB8  0100               	movlb	0	; () banked
  4923  002CBA  5D66               	subwf	___awdiv@dividend& (0+255),w,b
  4924  002CBC  0100               	movlb	0	; () banked
  4925  002CBE  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4926  002CC0  0100               	movlb	0	; () banked
  4927  002CC2  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4928  002CC4  A0D8               	btfss	status,0,c
  4929  002CC6  D00A               	goto	l2745
  4930                           
  4931                           ; BSR set to: 0
  4932  002CC8  0100               	movlb	0	; () banked
  4933  002CCA  5168               	movf	___awdiv@divisor& (0+255),w,b
  4934  002CCC  0100               	movlb	0	; () banked
  4935  002CCE  5F66               	subwf	___awdiv@dividend& (0+255),f,b
  4936  002CD0  0100               	movlb	0	; () banked
  4937  002CD2  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4938  002CD4  0100               	movlb	0	; () banked
  4939  002CD6  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4940                           
  4941                           ; BSR set to: 0
  4942  002CD8  0100               	movlb	0	; () banked
  4943  002CDA  816C               	bsf	___awdiv@quotient& (0+255),0,b
  4944  002CDC                     l2745:
  4945                           
  4946                           ; BSR set to: 0
  4947  002CDC  0100               	movlb	0	; () banked
  4948  002CDE  90D8               	bcf	status,0,c
  4949  002CE0  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4950  002CE2  3368               	rrcf	___awdiv@divisor& (0+255),f,b
  4951                           
  4952                           ; BSR set to: 0
  4953  002CE4  0100               	movlb	0	; () banked
  4954  002CE6  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
  4955  002CE8  D7E1               	goto	l2737
  4956  002CEA                     l2749:
  4957                           
  4958                           ; BSR set to: 0
  4959  002CEA  0100               	movlb	0	; () banked
  4960  002CEC  516B               	movf	___awdiv@sign& (0+255),w,b
  4961  002CEE  0100               	movlb	0	; () banked
  4962  002CF0  B4D8               	btfsc	status,2,c
  4963  002CF2  D005               	goto	l2753
  4964                           
  4965                           ; BSR set to: 0
  4966  002CF4  0100               	movlb	0	; () banked
  4967  002CF6  6D6C               	negf	___awdiv@quotient& (0+255),b
  4968  002CF8  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4969  002CFA  B0D8               	btfsc	status,0,c
  4970  002CFC  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4971  002CFE                     l2753:
  4972                           
  4973                           ; BSR set to: 0
  4974  002CFE  C06C  F066         	movff	___awdiv@quotient,?___awdiv
  4975  002D02  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
  4976  002D06  0012               	return	
  4977  002D08                     __end_of___awdiv:
  4978                           	opt stack 0
  4979                           tblptru	equ	0xFF8
  4980                           tblptrh	equ	0xFF7
  4981                           tblptrl	equ	0xFF6
  4982                           tablat	equ	0xFF5
  4983                           prodh	equ	0xFF4
  4984                           prodl	equ	0xFF3
  4985                           intcon	equ	0xFF2
  4986                           postinc0	equ	0xFEE
  4987                           wreg	equ	0xFE8
  4988                           postdec1	equ	0xFE5
  4989                           fsr1l	equ	0xFE1
  4990                           indf2	equ	0xFDF
  4991                           postinc2	equ	0xFDE
  4992                           postdec2	equ	0xFDD
  4993                           fsr2h	equ	0xFDA
  4994                           fsr2l	equ	0xFD9
  4995                           status	equ	0xFD8
  4996                           
  4997 ;; *************** function __tdiv_to_l_ *****************
  4998 ;; Defined at:
  4999 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdivl.c"
  5000 ;; Parameters:    Size  Location     Type
  5001 ;;  f1              3    0[BANK0 ] float 
  5002 ;;  f2              3    3[BANK0 ] float 
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;  quot            4    9[BANK0 ] unsigned long 
  5005 ;;  exp1            1   14[BANK0 ] unsigned char 
  5006 ;;  cntr            1   13[BANK0 ] unsigned char 
  5007 ;; Return value:  Size  Location     Type
  5008 ;;                  4    0[BANK0 ] unsigned long 
  5009 ;; Registers used:
  5010 ;;		wreg, status,2, status,0
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5016 ;;      Params:         0       6       0       0       0       0       0
  5017 ;;      Locals:         0       6       0       0       0       0       0
  5018 ;;      Temps:          0       3       0       0       0       0       0
  5019 ;;      Totals:         0      15       0       0       0       0       0
  5020 ;;Total ram usage:       15 bytes
  5021 ;; Hardware stack levels used:    1
  5022 ;; Hardware stack levels required when called:    4
  5023 ;; This function calls:
  5024 ;;		Nothing
  5025 ;; This function is called by:
  5026 ;;		_sprintf
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029                           
  5030                           	psect	text9
  5031  002022                     __ptext9:
  5032                           	opt stack 0
  5033  002022                     __tdiv_to_l_:
  5034                           	opt stack 25
  5035                           
  5036                           ; BSR set to: 0
  5037                           ;incstack = 0
  5038  002022  C062  F066         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  5039  002026  0100               	movlb	0	; () banked
  5040  002028  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  5041  00202A  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  5042  00202C  0100               	movlb	0	; () banked
  5043  00202E  3561               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  5044  002030  0100               	movlb	0	; () banked
  5045  002032  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
  5046  002034  E301               	bnc	u2911
  5047  002036  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  5048  002038                     u2911:
  5049  002038  0100               	movlb	0	; () banked
  5050  00203A  5166               	movf	??__tdiv_to_l_& (0+255),w,b
  5051  00203C  0100               	movlb	0	; () banked
  5052  00203E  6F6E               	movwf	__tdiv_to_l_@exp1& (0+255),b
  5053  002040  0100               	movlb	0	; () banked
  5054  002042  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5055  002044  A4D8               	btfss	status,2,c
  5056  002046  D00A               	goto	l2983
  5057                           
  5058                           ; BSR set to: 0
  5059  002048  0E00               	movlw	0
  5060  00204A  0100               	movlb	0	; () banked
  5061  00204C  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  5062  00204E  0E00               	movlw	0
  5063  002050  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  5064  002052  0E00               	movlw	0
  5065  002054  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  5066  002056  0E00               	movlw	0
  5067  002058  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  5068                           
  5069                           ; BSR set to: 0
  5070  00205A  0012               	return	
  5071  00205C                     l2983:
  5072                           
  5073                           ; BSR set to: 0
  5074  00205C  C065  F066         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  5075  002060  0100               	movlb	0	; () banked
  5076  002062  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  5077  002064  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  5078  002066  0100               	movlb	0	; () banked
  5079  002068  3564               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  5080  00206A  0100               	movlb	0	; () banked
  5081  00206C  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
  5082  00206E  E301               	bnc	u2931
  5083  002070  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  5084  002072                     u2931:
  5085  002072  0100               	movlb	0	; () banked
  5086  002074  5166               	movf	??__tdiv_to_l_& (0+255),w,b
  5087  002076  0100               	movlb	0	; () banked
  5088  002078  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5089  00207A  0100               	movlb	0	; () banked
  5090  00207C  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  5091  00207E  A4D8               	btfss	status,2,c
  5092  002080  D00A               	goto	l2989
  5093                           
  5094                           ; BSR set to: 0
  5095  002082  0E00               	movlw	0
  5096  002084  0100               	movlb	0	; () banked
  5097  002086  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  5098  002088  0E00               	movlw	0
  5099  00208A  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  5100  00208C  0E00               	movlw	0
  5101  00208E  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  5102  002090  0E00               	movlw	0
  5103  002092  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  5104                           
  5105                           ; BSR set to: 0
  5106  002094  0012               	return	
  5107  002096                     l2989:
  5108                           
  5109                           ; BSR set to: 0
  5110  002096  0100               	movlb	0	; () banked
  5111  002098  8F61               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  5112                           
  5113                           ; BSR set to: 0
  5114  00209A  0EFF               	movlw	255
  5115  00209C  0100               	movlb	0	; () banked
  5116  00209E  1760               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  5117  0020A0  0EFF               	movlw	255
  5118  0020A2  0100               	movlb	0	; () banked
  5119  0020A4  1761               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5120  0020A6  0E00               	movlw	0
  5121  0020A8  0100               	movlb	0	; () banked
  5122  0020AA  1762               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5123  0020AC  0100               	movlb	0	; () banked
  5124  0020AE  8F64               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  5125                           
  5126                           ; BSR set to: 0
  5127  0020B0  0EFF               	movlw	255
  5128  0020B2  0100               	movlb	0	; () banked
  5129  0020B4  1763               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  5130  0020B6  0EFF               	movlw	255
  5131  0020B8  0100               	movlb	0	; () banked
  5132  0020BA  1764               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  5133  0020BC  0E00               	movlw	0
  5134  0020BE  0100               	movlb	0	; () banked
  5135  0020C0  1765               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  5136                           
  5137                           ; BSR set to: 0
  5138  0020C2  0E00               	movlw	0
  5139  0020C4  0100               	movlb	0	; () banked
  5140  0020C6  6F69               	movwf	__tdiv_to_l_@quot& (0+255),b
  5141  0020C8  0E00               	movlw	0
  5142  0020CA  6F6A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  5143  0020CC  0E00               	movlw	0
  5144  0020CE  6F6B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  5145  0020D0  0E00               	movlw	0
  5146  0020D2  6F6C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  5147                           
  5148                           ; BSR set to: 0
  5149  0020D4  0E7F               	movlw	127
  5150  0020D6  0100               	movlb	0	; () banked
  5151  0020D8  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5152                           
  5153                           ; BSR set to: 0
  5154  0020DA  0100               	movlb	0	; () banked
  5155  0020DC  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  5156  0020DE  0F98               	addlw	152
  5157  0020E0  0100               	movlb	0	; () banked
  5158  0020E2  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5159                           
  5160                           ; BSR set to: 0
  5161  0020E4  0E18               	movlw	24
  5162  0020E6  0100               	movlb	0	; () banked
  5163  0020E8  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5164  0020EA                     l741:
  5165                           
  5166                           ; BSR set to: 0
  5167  0020EA  0100               	movlb	0	; () banked
  5168  0020EC  90D8               	bcf	status,0,c
  5169  0020EE  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5170  0020F0  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5171  0020F2  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5172  0020F4  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5173                           
  5174                           ; BSR set to: 0
  5175  0020F6  0100               	movlb	0	; () banked
  5176  0020F8  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
  5177  0020FA  0100               	movlb	0	; () banked
  5178  0020FC  5D60               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  5179  0020FE  0100               	movlb	0	; () banked
  5180  002100  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  5181  002102  0100               	movlb	0	; () banked
  5182  002104  5961               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  5183  002106  0100               	movlb	0	; () banked
  5184  002108  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  5185  00210A  0100               	movlb	0	; () banked
  5186  00210C  5962               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  5187  00210E  A0D8               	btfss	status,0,c
  5188  002110  D00E               	goto	l742
  5189                           
  5190                           ; BSR set to: 0
  5191  002112  0100               	movlb	0	; () banked
  5192  002114  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
  5193  002116  0100               	movlb	0	; () banked
  5194  002118  5F60               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  5195  00211A  0100               	movlb	0	; () banked
  5196  00211C  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  5197  00211E  0100               	movlb	0	; () banked
  5198  002120  5B61               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5199  002122  0100               	movlb	0	; () banked
  5200  002124  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  5201  002126  0100               	movlb	0	; () banked
  5202  002128  5B62               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5203                           
  5204                           ; BSR set to: 0
  5205  00212A  0100               	movlb	0	; () banked
  5206  00212C  8169               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  5207  00212E                     l742:
  5208                           
  5209                           ; BSR set to: 0
  5210  00212E  0100               	movlb	0	; () banked
  5211  002130  90D8               	bcf	status,0,c
  5212  002132  3760               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  5213  002134  3761               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5214  002136  3762               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5215                           
  5216                           ; BSR set to: 0
  5217  002138  0100               	movlb	0	; () banked
  5218  00213A  2F6D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  5219  00213C  D7D6               	goto	l741
  5220                           
  5221                           ; BSR set to: 0
  5222                           
  5223                           ; BSR set to: 0
  5224  00213E  0100               	movlb	0	; () banked
  5225  002140  AF6E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  5226  002142  D01A               	goto	l3023
  5227                           
  5228                           ; BSR set to: 0
  5229  002144  0100               	movlb	0	; () banked
  5230  002146  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5231  002148  0A80               	xorlw	128
  5232  00214A  0F97               	addlw	151
  5233  00214C  B0D8               	btfsc	status,0,c
  5234  00214E  D00A               	goto	l3019
  5235                           
  5236                           ; BSR set to: 0
  5237  002150  0E00               	movlw	0
  5238  002152  0100               	movlb	0	; () banked
  5239  002154  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  5240  002156  0E00               	movlw	0
  5241  002158  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  5242  00215A  0E00               	movlw	0
  5243  00215C  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  5244  00215E  0E00               	movlw	0
  5245  002160  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  5246                           
  5247                           ; BSR set to: 0
  5248  002162  0012               	return	
  5249  002164                     l3019:
  5250                           
  5251                           ; BSR set to: 0
  5252  002164  0100               	movlb	0	; () banked
  5253  002166  90D8               	bcf	status,0,c
  5254  002168  336C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5255  00216A  336B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5256  00216C  336A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5257  00216E  3369               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  5258                           
  5259                           ; BSR set to: 0
  5260  002170  0100               	movlb	0	; () banked
  5261  002172  3F6E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  5262  002174  D7F7               	goto	l3019
  5263                           
  5264                           ; BSR set to: 0
  5265  002176  D01B               	goto	l748
  5266  002178                     l3023:
  5267                           
  5268                           ; BSR set to: 0
  5269  002178  0E17               	movlw	23
  5270  00217A  0100               	movlb	0	; () banked
  5271  00217C  656E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  5272  00217E  D012               	goto	l3031
  5273                           
  5274                           ; BSR set to: 0
  5275  002180  0E00               	movlw	0
  5276  002182  0100               	movlb	0	; () banked
  5277  002184  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  5278  002186  0E00               	movlw	0
  5279  002188  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  5280  00218A  0E00               	movlw	0
  5281  00218C  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  5282  00218E  0E00               	movlw	0
  5283  002190  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  5284                           
  5285                           ; BSR set to: 0
  5286  002192  0012               	return	
  5287  002194                     l3029:
  5288                           
  5289                           ; BSR set to: 0
  5290  002194  0100               	movlb	0	; () banked
  5291  002196  90D8               	bcf	status,0,c
  5292  002198  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5293  00219A  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5294  00219C  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5295  00219E  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5296  0021A0  0100               	movlb	0	; () banked
  5297  0021A2  076E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  5298  0021A4                     l3031:
  5299                           
  5300                           ; BSR set to: 0
  5301  0021A4  0100               	movlb	0	; () banked
  5302  0021A6  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5303  0021A8  0100               	movlb	0	; () banked
  5304  0021AA  A4D8               	btfss	status,2,c
  5305  0021AC  D7F3               	goto	l3029
  5306  0021AE                     l748:
  5307                           
  5308                           ; BSR set to: 0
  5309  0021AE  C069  F060         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  5310  0021B2  C06A  F061         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  5311  0021B6  C06B  F062         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  5312  0021BA  C06C  F063         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  5313                           
  5314                           ; BSR set to: 0
  5315  0021BE  0012               	return		;funcret
  5316  0021C0                     __end_of__tdiv_to_l_:
  5317                           	opt stack 0
  5318                           tblptru	equ	0xFF8
  5319                           tblptrh	equ	0xFF7
  5320                           tblptrl	equ	0xFF6
  5321                           tablat	equ	0xFF5
  5322                           prodh	equ	0xFF4
  5323                           prodl	equ	0xFF3
  5324                           intcon	equ	0xFF2
  5325                           postinc0	equ	0xFEE
  5326                           wreg	equ	0xFE8
  5327                           postdec1	equ	0xFE5
  5328                           fsr1l	equ	0xFE1
  5329                           indf2	equ	0xFDF
  5330                           postinc2	equ	0xFDE
  5331                           postdec2	equ	0xFDD
  5332                           fsr2h	equ	0xFDA
  5333                           fsr2l	equ	0xFD9
  5334                           status	equ	0xFD8
  5335                           
  5336 ;; *************** function __div_to_l_ *****************
  5337 ;; Defined at:
  5338 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fldivl.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;  f1              3    0[BANK0 ] unsigned long 
  5341 ;;  f2              3    3[BANK0 ] unsigned long 
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;  quot            4    6[BANK0 ] unsigned long 
  5344 ;;  exp1            1   11[BANK0 ] unsigned char 
  5345 ;;  cntr            1   10[BANK0 ] unsigned char 
  5346 ;; Return value:  Size  Location     Type
  5347 ;;                  4    0[BANK0 ] unsigned long 
  5348 ;; Registers used:
  5349 ;;		wreg, status,2, status,0
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5355 ;;      Params:         0       6       0       0       0       0       0
  5356 ;;      Locals:         0       6       0       0       0       0       0
  5357 ;;      Temps:          0       0       0       0       0       0       0
  5358 ;;      Totals:         0      12       0       0       0       0       0
  5359 ;;Total ram usage:       12 bytes
  5360 ;; Hardware stack levels used:    1
  5361 ;; Hardware stack levels required when called:    4
  5362 ;; This function calls:
  5363 ;;		Nothing
  5364 ;; This function is called by:
  5365 ;;		_sprintf
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           
  5369                           	psect	text10
  5370  0021C0                     __ptext10:
  5371                           	opt stack 0
  5372  0021C0                     __div_to_l_:
  5373                           	opt stack 25
  5374                           
  5375                           ; BSR set to: 0
  5376                           ;incstack = 0
  5377  0021C0  0100               	movlb	0	; () banked
  5378  0021C2  3562               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  5379  0021C4  3563               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  5380  0021C6  0100               	movlb	0	; () banked
  5381  0021C8  6F6B               	movwf	__div_to_l_@exp1& (0+255),b
  5382  0021CA  0100               	movlb	0	; () banked
  5383  0021CC  516B               	movf	__div_to_l_@exp1& (0+255),w,b
  5384  0021CE  A4D8               	btfss	status,2,c
  5385  0021D0  D00A               	goto	l3039
  5386                           
  5387                           ; BSR set to: 0
  5388  0021D2  0E00               	movlw	0
  5389  0021D4  0100               	movlb	0	; () banked
  5390  0021D6  6F60               	movwf	?__div_to_l_& (0+255),b
  5391  0021D8  0E00               	movlw	0
  5392  0021DA  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  5393  0021DC  0E00               	movlw	0
  5394  0021DE  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  5395  0021E0  0E00               	movlw	0
  5396  0021E2  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  5397                           
  5398                           ; BSR set to: 0
  5399  0021E4  0012               	return	
  5400  0021E6                     l3039:
  5401                           
  5402                           ; BSR set to: 0
  5403  0021E6  0100               	movlb	0	; () banked
  5404  0021E8  3565               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  5405  0021EA  3566               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  5406  0021EC  0100               	movlb	0	; () banked
  5407  0021EE  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
  5408  0021F0  0100               	movlb	0	; () banked
  5409  0021F2  516A               	movf	__div_to_l_@cntr& (0+255),w,b
  5410  0021F4  A4D8               	btfss	status,2,c
  5411  0021F6  D00A               	goto	l3045
  5412                           
  5413                           ; BSR set to: 0
  5414  0021F8  0E00               	movlw	0
  5415  0021FA  0100               	movlb	0	; () banked
  5416  0021FC  6F60               	movwf	?__div_to_l_& (0+255),b
  5417  0021FE  0E00               	movlw	0
  5418  002200  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  5419  002202  0E00               	movlw	0
  5420  002204  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  5421  002206  0E00               	movlw	0
  5422  002208  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  5423                           
  5424                           ; BSR set to: 0
  5425  00220A  0012               	return	
  5426  00220C                     l3045:
  5427                           
  5428                           ; BSR set to: 0
  5429  00220C  0100               	movlb	0	; () banked
  5430  00220E  8F62               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  5431                           
  5432                           ; BSR set to: 0
  5433  002210  0EFF               	movlw	255
  5434  002212  0100               	movlb	0	; () banked
  5435  002214  1760               	andwf	__div_to_l_@f1& (0+255),f,b
  5436  002216  0EFF               	movlw	255
  5437  002218  1761               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  5438  00221A  0EFF               	movlw	255
  5439  00221C  1762               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  5440  00221E  0E00               	movlw	0
  5441  002220  1763               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  5442                           
  5443                           ; BSR set to: 0
  5444  002222  0100               	movlb	0	; () banked
  5445  002224  8F65               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  5446  002226  0EFF               	movlw	255
  5447  002228  0100               	movlb	0	; () banked
  5448  00222A  1763               	andwf	__div_to_l_@f2& (0+255),f,b
  5449  00222C  0EFF               	movlw	255
  5450  00222E  1764               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  5451  002230  0EFF               	movlw	255
  5452  002232  1765               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  5453  002234  0E00               	movlw	0
  5454  002236  1766               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  5455                           
  5456                           ; BSR set to: 0
  5457  002238  0E00               	movlw	0
  5458  00223A  0100               	movlb	0	; () banked
  5459  00223C  6F66               	movwf	__div_to_l_@quot& (0+255),b
  5460  00223E  0E00               	movlw	0
  5461  002240  6F67               	movwf	(__div_to_l_@quot+1)& (0+255),b
  5462  002242  0E00               	movlw	0
  5463  002244  6F68               	movwf	(__div_to_l_@quot+2)& (0+255),b
  5464  002246  0E00               	movlw	0
  5465  002248  6F69               	movwf	(__div_to_l_@quot+3)& (0+255),b
  5466                           
  5467                           ; BSR set to: 0
  5468  00224A  0E7F               	movlw	127
  5469  00224C  0100               	movlb	0	; () banked
  5470  00224E  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
  5471                           
  5472                           ; BSR set to: 0
  5473  002250  0100               	movlb	0	; () banked
  5474  002252  516A               	movf	__div_to_l_@cntr& (0+255),w,b
  5475  002254  0FA0               	addlw	160
  5476  002256  0100               	movlb	0	; () banked
  5477  002258  5F6B               	subwf	__div_to_l_@exp1& (0+255),f,b
  5478                           
  5479                           ; BSR set to: 0
  5480  00225A  0E20               	movlw	32
  5481  00225C  0100               	movlb	0	; () banked
  5482  00225E  6F6A               	movwf	__div_to_l_@cntr& (0+255),b
  5483  002260                     l3059:
  5484                           
  5485                           ; BSR set to: 0
  5486  002260  0100               	movlb	0	; () banked
  5487  002262  90D8               	bcf	status,0,c
  5488  002264  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
  5489  002266  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  5490  002268  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  5491  00226A  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  5492                           
  5493                           ; BSR set to: 0
  5494  00226C  0100               	movlb	0	; () banked
  5495  00226E  5163               	movf	__div_to_l_@f2& (0+255),w,b
  5496  002270  0100               	movlb	0	; () banked
  5497  002272  5D60               	subwf	__div_to_l_@f1& (0+255),w,b
  5498  002274  0100               	movlb	0	; () banked
  5499  002276  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  5500  002278  0100               	movlb	0	; () banked
  5501  00227A  5961               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  5502  00227C  0100               	movlb	0	; () banked
  5503  00227E  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  5504  002280  0100               	movlb	0	; () banked
  5505  002282  5962               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  5506  002284  0100               	movlb	0	; () banked
  5507  002286  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  5508  002288  0100               	movlb	0	; () banked
  5509  00228A  5963               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  5510  00228C  A0D8               	btfss	status,0,c
  5511  00228E  D012               	goto	l3067
  5512                           
  5513                           ; BSR set to: 0
  5514  002290  0100               	movlb	0	; () banked
  5515  002292  5163               	movf	__div_to_l_@f2& (0+255),w,b
  5516  002294  0100               	movlb	0	; () banked
  5517  002296  5F60               	subwf	__div_to_l_@f1& (0+255),f,b
  5518  002298  0100               	movlb	0	; () banked
  5519  00229A  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  5520  00229C  0100               	movlb	0	; () banked
  5521  00229E  5B61               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  5522  0022A0  0100               	movlb	0	; () banked
  5523  0022A2  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  5524  0022A4  0100               	movlb	0	; () banked
  5525  0022A6  5B62               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  5526  0022A8  0100               	movlb	0	; () banked
  5527  0022AA  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  5528  0022AC  0100               	movlb	0	; () banked
  5529  0022AE  5B63               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  5530                           
  5531                           ; BSR set to: 0
  5532  0022B0  0100               	movlb	0	; () banked
  5533  0022B2  8166               	bsf	__div_to_l_@quot& (0+255),0,b
  5534  0022B4                     l3067:
  5535                           
  5536                           ; BSR set to: 0
  5537  0022B4  0100               	movlb	0	; () banked
  5538  0022B6  90D8               	bcf	status,0,c
  5539  0022B8  3760               	rlcf	__div_to_l_@f1& (0+255),f,b
  5540  0022BA  3761               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  5541  0022BC  3762               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  5542  0022BE  3763               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  5543                           
  5544                           ; BSR set to: 0
  5545  0022C0  0100               	movlb	0	; () banked
  5546  0022C2  2F6A               	decfsz	__div_to_l_@cntr& (0+255),f,b
  5547  0022C4  D7CD               	goto	l3059
  5548                           
  5549                           ; BSR set to: 0
  5550                           
  5551                           ; BSR set to: 0
  5552  0022C6  0100               	movlb	0	; () banked
  5553  0022C8  AF6B               	btfss	__div_to_l_@exp1& (0+255),7,b
  5554  0022CA  D01A               	goto	l3083
  5555                           
  5556                           ; BSR set to: 0
  5557  0022CC  0100               	movlb	0	; () banked
  5558  0022CE  516B               	movf	__div_to_l_@exp1& (0+255),w,b
  5559  0022D0  0A80               	xorlw	128
  5560  0022D2  0F9F               	addlw	159
  5561  0022D4  B0D8               	btfsc	status,0,c
  5562  0022D6  D00A               	goto	l3079
  5563                           
  5564                           ; BSR set to: 0
  5565  0022D8  0E00               	movlw	0
  5566  0022DA  0100               	movlb	0	; () banked
  5567  0022DC  6F60               	movwf	?__div_to_l_& (0+255),b
  5568  0022DE  0E00               	movlw	0
  5569  0022E0  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  5570  0022E2  0E00               	movlw	0
  5571  0022E4  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  5572  0022E6  0E00               	movlw	0
  5573  0022E8  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  5574                           
  5575                           ; BSR set to: 0
  5576  0022EA  0012               	return	
  5577  0022EC                     l3079:
  5578                           
  5579                           ; BSR set to: 0
  5580  0022EC  0100               	movlb	0	; () banked
  5581  0022EE  90D8               	bcf	status,0,c
  5582  0022F0  3369               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  5583  0022F2  3368               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  5584  0022F4  3367               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  5585  0022F6  3366               	rrcf	__div_to_l_@quot& (0+255),f,b
  5586                           
  5587                           ; BSR set to: 0
  5588  0022F8  0100               	movlb	0	; () banked
  5589  0022FA  3F6B               	incfsz	__div_to_l_@exp1& (0+255),f,b
  5590  0022FC  D7F7               	goto	l3079
  5591                           
  5592                           ; BSR set to: 0
  5593  0022FE  D01B               	goto	l644
  5594  002300                     l3083:
  5595                           
  5596                           ; BSR set to: 0
  5597  002300  0E1F               	movlw	31
  5598  002302  0100               	movlb	0	; () banked
  5599  002304  656B               	cpfsgt	__div_to_l_@exp1& (0+255),b
  5600  002306  D012               	goto	l3091
  5601                           
  5602                           ; BSR set to: 0
  5603  002308  0E00               	movlw	0
  5604  00230A  0100               	movlb	0	; () banked
  5605  00230C  6F60               	movwf	?__div_to_l_& (0+255),b
  5606  00230E  0E00               	movlw	0
  5607  002310  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  5608  002312  0E00               	movlw	0
  5609  002314  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  5610  002316  0E00               	movlw	0
  5611  002318  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  5612                           
  5613                           ; BSR set to: 0
  5614  00231A  0012               	return	
  5615  00231C                     l3089:
  5616                           
  5617                           ; BSR set to: 0
  5618  00231C  0100               	movlb	0	; () banked
  5619  00231E  90D8               	bcf	status,0,c
  5620  002320  3766               	rlcf	__div_to_l_@quot& (0+255),f,b
  5621  002322  3767               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  5622  002324  3768               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  5623  002326  3769               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  5624  002328  0100               	movlb	0	; () banked
  5625  00232A  076B               	decf	__div_to_l_@exp1& (0+255),f,b
  5626  00232C                     l3091:
  5627                           
  5628                           ; BSR set to: 0
  5629  00232C  0100               	movlb	0	; () banked
  5630  00232E  516B               	movf	__div_to_l_@exp1& (0+255),w,b
  5631  002330  0100               	movlb	0	; () banked
  5632  002332  A4D8               	btfss	status,2,c
  5633  002334  D7F3               	goto	l3089
  5634  002336                     l644:
  5635                           
  5636                           ; BSR set to: 0
  5637  002336  C066  F060         	movff	__div_to_l_@quot,?__div_to_l_
  5638  00233A  C067  F061         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  5639  00233E  C068  F062         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  5640  002342  C069  F063         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  5641                           
  5642                           ; BSR set to: 0
  5643  002346  0012               	return		;funcret
  5644  002348                     __end_of__div_to_l_:
  5645                           	opt stack 0
  5646                           tblptru	equ	0xFF8
  5647                           tblptrh	equ	0xFF7
  5648                           tblptrl	equ	0xFF6
  5649                           tablat	equ	0xFF5
  5650                           prodh	equ	0xFF4
  5651                           prodl	equ	0xFF3
  5652                           intcon	equ	0xFF2
  5653                           postinc0	equ	0xFEE
  5654                           wreg	equ	0xFE8
  5655                           postdec1	equ	0xFE5
  5656                           fsr1l	equ	0xFE1
  5657                           indf2	equ	0xFDF
  5658                           postinc2	equ	0xFDE
  5659                           postdec2	equ	0xFDD
  5660                           fsr2h	equ	0xFDA
  5661                           fsr2l	equ	0xFD9
  5662                           status	equ	0xFD8
  5663                           
  5664 ;; *************** function ___lltoft *****************
  5665 ;; Defined at:
  5666 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lltoft.c"
  5667 ;; Parameters:    Size  Location     Type
  5668 ;;  c               4    8[BANK0 ] unsigned long 
  5669 ;; Auto vars:     Size  Location     Type
  5670 ;;  exp             1   16[BANK0 ] unsigned char 
  5671 ;; Return value:  Size  Location     Type
  5672 ;;                  3    8[BANK0 ] float 
  5673 ;; Registers used:
  5674 ;;		wreg, status,2, status,0, cstack
  5675 ;; Tracked objects:
  5676 ;;		On entry : 0/0
  5677 ;;		On exit  : 0/0
  5678 ;;		Unchanged: 0/0
  5679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5680 ;;      Params:         0       4       0       0       0       0       0
  5681 ;;      Locals:         0       1       0       0       0       0       0
  5682 ;;      Temps:          0       4       0       0       0       0       0
  5683 ;;      Totals:         0       9       0       0       0       0       0
  5684 ;;Total ram usage:        9 bytes
  5685 ;; Hardware stack levels used:    1
  5686 ;; Hardware stack levels required when called:    5
  5687 ;; This function calls:
  5688 ;;		___ftpack
  5689 ;; This function is called by:
  5690 ;;		_sprintf
  5691 ;; This function uses a non-reentrant model
  5692 ;;
  5693                           
  5694                           	psect	text11
  5695  002FAE                     __ptext11:
  5696                           	opt stack 0
  5697  002FAE                     ___lltoft:
  5698                           	opt stack 24
  5699                           
  5700                           ; BSR set to: 0
  5701                           ;incstack = 0
  5702  002FAE  0E8E               	movlw	142
  5703  002FB0  0100               	movlb	0	; () banked
  5704  002FB2  6F70               	movwf	___lltoft@exp& (0+255),b
  5705  002FB4  D008               	goto	l3211
  5706  002FB6                     l3209:
  5707                           
  5708                           ; BSR set to: 0
  5709  002FB6  0100               	movlb	0	; () banked
  5710  002FB8  90D8               	bcf	status,0,c
  5711  002FBA  336B               	rrcf	(___lltoft@c+3)& (0+255),f,b
  5712  002FBC  336A               	rrcf	(___lltoft@c+2)& (0+255),f,b
  5713  002FBE  3369               	rrcf	(___lltoft@c+1)& (0+255),f,b
  5714  002FC0  3368               	rrcf	___lltoft@c& (0+255),f,b
  5715  002FC2  0100               	movlb	0	; () banked
  5716  002FC4  2B70               	incf	___lltoft@exp& (0+255),f,b
  5717  002FC6                     l3211:
  5718                           
  5719                           ; BSR set to: 0
  5720  002FC6  0E00               	movlw	0
  5721  002FC8  0100               	movlb	0	; () banked
  5722  002FCA  1568               	andwf	___lltoft@c& (0+255),w,b
  5723  002FCC  0100               	movlb	0	; () banked
  5724  002FCE  6F6C               	movwf	??___lltoft& (0+255),b
  5725  002FD0  0E00               	movlw	0
  5726  002FD2  0100               	movlb	0	; () banked
  5727  002FD4  1569               	andwf	(___lltoft@c+1)& (0+255),w,b
  5728  002FD6  0100               	movlb	0	; () banked
  5729  002FD8  6F6D               	movwf	(??___lltoft+1)& (0+255),b
  5730  002FDA  0E00               	movlw	0
  5731  002FDC  0100               	movlb	0	; () banked
  5732  002FDE  156A               	andwf	(___lltoft@c+2)& (0+255),w,b
  5733  002FE0  0100               	movlb	0	; () banked
  5734  002FE2  6F6E               	movwf	(??___lltoft+2)& (0+255),b
  5735  002FE4  0EFF               	movlw	255
  5736  002FE6  0100               	movlb	0	; () banked
  5737  002FE8  156B               	andwf	(___lltoft@c+3)& (0+255),w,b
  5738  002FEA  0100               	movlb	0	; () banked
  5739  002FEC  6F6F               	movwf	(??___lltoft+3)& (0+255),b
  5740  002FEE  0100               	movlb	0	; () banked
  5741  002FF0  516C               	movf	??___lltoft& (0+255),w,b
  5742  002FF2  0100               	movlb	0	; () banked
  5743  002FF4  116D               	iorwf	(??___lltoft+1)& (0+255),w,b
  5744  002FF6  0100               	movlb	0	; () banked
  5745  002FF8  116E               	iorwf	(??___lltoft+2)& (0+255),w,b
  5746  002FFA  0100               	movlb	0	; () banked
  5747  002FFC  116F               	iorwf	(??___lltoft+3)& (0+255),w,b
  5748  002FFE  A4D8               	btfss	status,2,c
  5749  003000  D7DA               	goto	l3209
  5750                           
  5751                           ; BSR set to: 0
  5752                           
  5753                           ; BSR set to: 0
  5754  003002  C068  F060         	movff	___lltoft@c,___ftpack@arg
  5755  003006  C069  F061         	movff	___lltoft@c+1,___ftpack@arg+1
  5756  00300A  C06A  F062         	movff	___lltoft@c+2,___ftpack@arg+2
  5757  00300E  C070  F063         	movff	___lltoft@exp,___ftpack@exp
  5758  003012  0E00               	movlw	0
  5759  003014  0100               	movlb	0	; () banked
  5760  003016  6F64               	movwf	___ftpack@sign& (0+255),b
  5761  003018  EC4E  F014         	call	___ftpack	;wreg free
  5762  00301C  C060  F068         	movff	?___ftpack,?___lltoft
  5763  003020  C061  F069         	movff	?___ftpack+1,?___lltoft+1
  5764  003024  C062  F06A         	movff	?___ftpack+2,?___lltoft+2
  5765  003028  0012               	return	
  5766  00302A                     __end_of___lltoft:
  5767                           	opt stack 0
  5768                           tblptru	equ	0xFF8
  5769                           tblptrh	equ	0xFF7
  5770                           tblptrl	equ	0xFF6
  5771                           tablat	equ	0xFF5
  5772                           prodh	equ	0xFF4
  5773                           prodl	equ	0xFF3
  5774                           intcon	equ	0xFF2
  5775                           postinc0	equ	0xFEE
  5776                           wreg	equ	0xFE8
  5777                           postdec1	equ	0xFE5
  5778                           fsr1l	equ	0xFE1
  5779                           indf2	equ	0xFDF
  5780                           postinc2	equ	0xFDE
  5781                           postdec2	equ	0xFDD
  5782                           fsr2h	equ	0xFDA
  5783                           fsr2l	equ	0xFD9
  5784                           status	equ	0xFD8
  5785                           
  5786 ;; *************** function ___llmod *****************
  5787 ;; Defined at:
  5788 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
  5789 ;; Parameters:    Size  Location     Type
  5790 ;;  dividend        4   13[BANK0 ] unsigned long 
  5791 ;;  divisor         4   17[BANK0 ] unsigned long 
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;  counter         1   21[BANK0 ] unsigned char 
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  4   13[BANK0 ] unsigned long 
  5796 ;; Registers used:
  5797 ;;		wreg, status,2, status,0
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5803 ;;      Params:         0       8       0       0       0       0       0
  5804 ;;      Locals:         0       1       0       0       0       0       0
  5805 ;;      Temps:          0       0       0       0       0       0       0
  5806 ;;      Totals:         0       9       0       0       0       0       0
  5807 ;;Total ram usage:        9 bytes
  5808 ;; Hardware stack levels used:    1
  5809 ;; Hardware stack levels required when called:    4
  5810 ;; This function calls:
  5811 ;;		Nothing
  5812 ;; This function is called by:
  5813 ;;		_sprintf
  5814 ;; This function uses a non-reentrant model
  5815 ;;
  5816                           
  5817                           	psect	text12
  5818  002F14                     __ptext12:
  5819                           	opt stack 0
  5820  002F14                     ___llmod:
  5821                           	opt stack 25
  5822                           
  5823                           ;incstack = 0
  5824  002F14  0100               	movlb	0	; () banked
  5825  002F16  5171               	movf	___llmod@divisor& (0+255),w,b
  5826  002F18  0100               	movlb	0	; () banked
  5827  002F1A  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  5828  002F1C  0100               	movlb	0	; () banked
  5829  002F1E  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  5830  002F20  0100               	movlb	0	; () banked
  5831  002F22  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  5832  002F24  B4D8               	btfsc	status,2,c
  5833  002F26  D03A               	goto	l855
  5834                           
  5835                           ; BSR set to: 0
  5836  002F28  0E01               	movlw	1
  5837  002F2A  0100               	movlb	0	; () banked
  5838  002F2C  6F75               	movwf	___llmod@counter& (0+255),b
  5839  002F2E  D008               	goto	l3197
  5840  002F30                     l3195:
  5841                           
  5842                           ; BSR set to: 0
  5843  002F30  0100               	movlb	0	; () banked
  5844  002F32  90D8               	bcf	status,0,c
  5845  002F34  3771               	rlcf	___llmod@divisor& (0+255),f,b
  5846  002F36  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  5847  002F38  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  5848  002F3A  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  5849  002F3C  0100               	movlb	0	; () banked
  5850  002F3E  2B75               	incf	___llmod@counter& (0+255),f,b
  5851  002F40                     l3197:
  5852                           
  5853                           ; BSR set to: 0
  5854  002F40  0100               	movlb	0	; () banked
  5855  002F42  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
  5856  002F44  D7F5               	goto	l3195
  5857  002F46                     l3199:
  5858                           
  5859                           ; BSR set to: 0
  5860  002F46  0100               	movlb	0	; () banked
  5861  002F48  5171               	movf	___llmod@divisor& (0+255),w,b
  5862  002F4A  0100               	movlb	0	; () banked
  5863  002F4C  5D6D               	subwf	___llmod@dividend& (0+255),w,b
  5864  002F4E  0100               	movlb	0	; () banked
  5865  002F50  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
  5866  002F52  0100               	movlb	0	; () banked
  5867  002F54  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  5868  002F56  0100               	movlb	0	; () banked
  5869  002F58  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
  5870  002F5A  0100               	movlb	0	; () banked
  5871  002F5C  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  5872  002F5E  0100               	movlb	0	; () banked
  5873  002F60  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
  5874  002F62  0100               	movlb	0	; () banked
  5875  002F64  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  5876  002F66  A0D8               	btfss	status,0,c
  5877  002F68  D010               	goto	l3203
  5878                           
  5879                           ; BSR set to: 0
  5880  002F6A  0100               	movlb	0	; () banked
  5881  002F6C  5171               	movf	___llmod@divisor& (0+255),w,b
  5882  002F6E  0100               	movlb	0	; () banked
  5883  002F70  5F6D               	subwf	___llmod@dividend& (0+255),f,b
  5884  002F72  0100               	movlb	0	; () banked
  5885  002F74  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
  5886  002F76  0100               	movlb	0	; () banked
  5887  002F78  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  5888  002F7A  0100               	movlb	0	; () banked
  5889  002F7C  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
  5890  002F7E  0100               	movlb	0	; () banked
  5891  002F80  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  5892  002F82  0100               	movlb	0	; () banked
  5893  002F84  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
  5894  002F86  0100               	movlb	0	; () banked
  5895  002F88  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  5896  002F8A                     l3203:
  5897                           
  5898                           ; BSR set to: 0
  5899  002F8A  0100               	movlb	0	; () banked
  5900  002F8C  90D8               	bcf	status,0,c
  5901  002F8E  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  5902  002F90  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  5903  002F92  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  5904  002F94  3371               	rrcf	___llmod@divisor& (0+255),f,b
  5905                           
  5906                           ; BSR set to: 0
  5907  002F96  0100               	movlb	0	; () banked
  5908  002F98  2F75               	decfsz	___llmod@counter& (0+255),f,b
  5909  002F9A  D7D5               	goto	l3199
  5910  002F9C                     l855:
  5911                           
  5912                           ; BSR set to: 0
  5913  002F9C  C06D  F06D         	movff	___llmod@dividend,?___llmod
  5914  002FA0  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
  5915  002FA4  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
  5916  002FA8  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
  5917                           
  5918                           ; BSR set to: 0
  5919  002FAC  0012               	return		;funcret
  5920  002FAE                     __end_of___llmod:
  5921                           	opt stack 0
  5922                           tblptru	equ	0xFF8
  5923                           tblptrh	equ	0xFF7
  5924                           tblptrl	equ	0xFF6
  5925                           tablat	equ	0xFF5
  5926                           prodh	equ	0xFF4
  5927                           prodl	equ	0xFF3
  5928                           intcon	equ	0xFF2
  5929                           postinc0	equ	0xFEE
  5930                           wreg	equ	0xFE8
  5931                           postdec1	equ	0xFE5
  5932                           fsr1l	equ	0xFE1
  5933                           indf2	equ	0xFDF
  5934                           postinc2	equ	0xFDE
  5935                           postdec2	equ	0xFDD
  5936                           fsr2h	equ	0xFDA
  5937                           fsr2l	equ	0xFD9
  5938                           status	equ	0xFD8
  5939                           
  5940 ;; *************** function ___lldiv *****************
  5941 ;; Defined at:
  5942 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
  5943 ;; Parameters:    Size  Location     Type
  5944 ;;  dividend        4    0[BANK0 ] unsigned long 
  5945 ;;  divisor         4    4[BANK0 ] unsigned long 
  5946 ;; Auto vars:     Size  Location     Type
  5947 ;;  quotient        4    8[BANK0 ] unsigned long 
  5948 ;;  counter         1   12[BANK0 ] unsigned char 
  5949 ;; Return value:  Size  Location     Type
  5950 ;;                  4    0[BANK0 ] unsigned long 
  5951 ;; Registers used:
  5952 ;;		wreg, status,2, status,0
  5953 ;; Tracked objects:
  5954 ;;		On entry : 0/0
  5955 ;;		On exit  : 0/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5958 ;;      Params:         0       8       0       0       0       0       0
  5959 ;;      Locals:         0       5       0       0       0       0       0
  5960 ;;      Temps:          0       0       0       0       0       0       0
  5961 ;;      Totals:         0      13       0       0       0       0       0
  5962 ;;Total ram usage:       13 bytes
  5963 ;; Hardware stack levels used:    1
  5964 ;; Hardware stack levels required when called:    4
  5965 ;; This function calls:
  5966 ;;		Nothing
  5967 ;; This function is called by:
  5968 ;;		_sprintf
  5969 ;; This function uses a non-reentrant model
  5970 ;;
  5971                           
  5972                           	psect	text13
  5973  002D08                     __ptext13:
  5974                           	opt stack 0
  5975  002D08                     ___lldiv:
  5976                           	opt stack 25
  5977                           
  5978                           ; BSR set to: 0
  5979                           ;incstack = 0
  5980  002D08  0E00               	movlw	0
  5981  002D0A  0100               	movlb	0	; () banked
  5982  002D0C  6F68               	movwf	___lldiv@quotient& (0+255),b
  5983  002D0E  0E00               	movlw	0
  5984  002D10  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  5985  002D12  0E00               	movlw	0
  5986  002D14  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  5987  002D16  0E00               	movlw	0
  5988  002D18  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  5989                           
  5990                           ; BSR set to: 0
  5991  002D1A  0100               	movlb	0	; () banked
  5992  002D1C  5164               	movf	___lldiv@divisor& (0+255),w,b
  5993  002D1E  0100               	movlb	0	; () banked
  5994  002D20  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  5995  002D22  0100               	movlb	0	; () banked
  5996  002D24  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  5997  002D26  0100               	movlb	0	; () banked
  5998  002D28  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  5999  002D2A  B4D8               	btfsc	status,2,c
  6000  002D2C  D042               	goto	l845
  6001                           
  6002                           ; BSR set to: 0
  6003  002D2E  0E01               	movlw	1
  6004  002D30  0100               	movlb	0	; () banked
  6005  002D32  6F6C               	movwf	___lldiv@counter& (0+255),b
  6006  002D34  D008               	goto	l3177
  6007  002D36                     l3175:
  6008                           
  6009                           ; BSR set to: 0
  6010  002D36  0100               	movlb	0	; () banked
  6011  002D38  90D8               	bcf	status,0,c
  6012  002D3A  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  6013  002D3C  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  6014  002D3E  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  6015  002D40  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  6016  002D42  0100               	movlb	0	; () banked
  6017  002D44  2B6C               	incf	___lldiv@counter& (0+255),f,b
  6018  002D46                     l3177:
  6019                           
  6020                           ; BSR set to: 0
  6021  002D46  0100               	movlb	0	; () banked
  6022  002D48  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  6023  002D4A  D7F5               	goto	l3175
  6024  002D4C                     l3179:
  6025                           
  6026                           ; BSR set to: 0
  6027  002D4C  0100               	movlb	0	; () banked
  6028  002D4E  90D8               	bcf	status,0,c
  6029  002D50  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  6030  002D52  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6031  002D54  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6032  002D56  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6033                           
  6034                           ; BSR set to: 0
  6035  002D58  0100               	movlb	0	; () banked
  6036  002D5A  5164               	movf	___lldiv@divisor& (0+255),w,b
  6037  002D5C  0100               	movlb	0	; () banked
  6038  002D5E  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  6039  002D60  0100               	movlb	0	; () banked
  6040  002D62  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6041  002D64  0100               	movlb	0	; () banked
  6042  002D66  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  6043  002D68  0100               	movlb	0	; () banked
  6044  002D6A  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6045  002D6C  0100               	movlb	0	; () banked
  6046  002D6E  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  6047  002D70  0100               	movlb	0	; () banked
  6048  002D72  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6049  002D74  0100               	movlb	0	; () banked
  6050  002D76  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  6051  002D78  A0D8               	btfss	status,0,c
  6052  002D7A  D012               	goto	l3187
  6053                           
  6054                           ; BSR set to: 0
  6055  002D7C  0100               	movlb	0	; () banked
  6056  002D7E  5164               	movf	___lldiv@divisor& (0+255),w,b
  6057  002D80  0100               	movlb	0	; () banked
  6058  002D82  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  6059  002D84  0100               	movlb	0	; () banked
  6060  002D86  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6061  002D88  0100               	movlb	0	; () banked
  6062  002D8A  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  6063  002D8C  0100               	movlb	0	; () banked
  6064  002D8E  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6065  002D90  0100               	movlb	0	; () banked
  6066  002D92  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  6067  002D94  0100               	movlb	0	; () banked
  6068  002D96  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6069  002D98  0100               	movlb	0	; () banked
  6070  002D9A  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  6071                           
  6072                           ; BSR set to: 0
  6073  002D9C  0100               	movlb	0	; () banked
  6074  002D9E  8168               	bsf	___lldiv@quotient& (0+255),0,b
  6075  002DA0                     l3187:
  6076                           
  6077                           ; BSR set to: 0
  6078  002DA0  0100               	movlb	0	; () banked
  6079  002DA2  90D8               	bcf	status,0,c
  6080  002DA4  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  6081  002DA6  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  6082  002DA8  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  6083  002DAA  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  6084                           
  6085                           ; BSR set to: 0
  6086  002DAC  0100               	movlb	0	; () banked
  6087  002DAE  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  6088  002DB0  D7CD               	goto	l3179
  6089  002DB2                     l845:
  6090                           
  6091                           ; BSR set to: 0
  6092  002DB2  C068  F060         	movff	___lldiv@quotient,?___lldiv
  6093  002DB6  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  6094  002DBA  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  6095  002DBE  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  6096                           
  6097                           ; BSR set to: 0
  6098  002DC2  0012               	return		;funcret
  6099  002DC4                     __end_of___lldiv:
  6100                           	opt stack 0
  6101                           tblptru	equ	0xFF8
  6102                           tblptrh	equ	0xFF7
  6103                           tblptrl	equ	0xFF6
  6104                           tablat	equ	0xFF5
  6105                           prodh	equ	0xFF4
  6106                           prodl	equ	0xFF3
  6107                           intcon	equ	0xFF2
  6108                           postinc0	equ	0xFEE
  6109                           wreg	equ	0xFE8
  6110                           postdec1	equ	0xFE5
  6111                           fsr1l	equ	0xFE1
  6112                           indf2	equ	0xFDF
  6113                           postinc2	equ	0xFDE
  6114                           postdec2	equ	0xFDD
  6115                           fsr2h	equ	0xFDA
  6116                           fsr2l	equ	0xFD9
  6117                           status	equ	0xFD8
  6118                           
  6119 ;; *************** function ___fttol *****************
  6120 ;; Defined at:
  6121 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;  f1              3   42[BANK0 ] float 
  6124 ;; Auto vars:     Size  Location     Type
  6125 ;;  lval            4   52[BANK0 ] unsigned long 
  6126 ;;  exp1            1   56[BANK0 ] unsigned char 
  6127 ;;  sign1           1   51[BANK0 ] unsigned char 
  6128 ;; Return value:  Size  Location     Type
  6129 ;;                  4   42[BANK0 ] long 
  6130 ;; Registers used:
  6131 ;;		wreg, status,2, status,0
  6132 ;; Tracked objects:
  6133 ;;		On entry : 0/0
  6134 ;;		On exit  : 0/0
  6135 ;;		Unchanged: 0/0
  6136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6137 ;;      Params:         0       4       0       0       0       0       0
  6138 ;;      Locals:         0       6       0       0       0       0       0
  6139 ;;      Temps:          0       5       0       0       0       0       0
  6140 ;;      Totals:         0      15       0       0       0       0       0
  6141 ;;Total ram usage:       15 bytes
  6142 ;; Hardware stack levels used:    1
  6143 ;; Hardware stack levels required when called:    4
  6144 ;; This function calls:
  6145 ;;		Nothing
  6146 ;; This function is called by:
  6147 ;;		_sprintf
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           	psect	text14
  6152  002758                     __ptext14:
  6153                           	opt stack 0
  6154  002758                     ___fttol:
  6155                           	opt stack 25
  6156                           
  6157                           ; BSR set to: 0
  6158                           ;incstack = 0
  6159  002758  C08C  F08E         	movff	___fttol@f1+2,??___fttol
  6160  00275C  0100               	movlb	0	; () banked
  6161  00275E  6B8F               	clrf	(??___fttol+1)& (0+255),b
  6162  002760  6B90               	clrf	(??___fttol+2)& (0+255),b
  6163  002762  0100               	movlb	0	; () banked
  6164  002764  358B               	rlcf	(___fttol@f1+1)& (0+255),w,b
  6165  002766  0100               	movlb	0	; () banked
  6166  002768  378E               	rlcf	??___fttol& (0+255),f,b
  6167  00276A  E301               	bnc	u3121
  6168  00276C  818F               	bsf	(??___fttol+1)& (0+255),0,b
  6169  00276E                     u3121:
  6170  00276E  0100               	movlb	0	; () banked
  6171  002770  518E               	movf	??___fttol& (0+255),w,b
  6172  002772  0100               	movlb	0	; () banked
  6173  002774  6F98               	movwf	___fttol@exp1& (0+255),b
  6174  002776  0100               	movlb	0	; () banked
  6175  002778  5198               	movf	___fttol@exp1& (0+255),w,b
  6176  00277A  A4D8               	btfss	status,2,c
  6177  00277C  D00A               	goto	l3129
  6178                           
  6179                           ; BSR set to: 0
  6180  00277E  0E00               	movlw	0
  6181  002780  0100               	movlb	0	; () banked
  6182  002782  6F8A               	movwf	?___fttol& (0+255),b
  6183  002784  0E00               	movlw	0
  6184  002786  6F8B               	movwf	(?___fttol+1)& (0+255),b
  6185  002788  0E00               	movlw	0
  6186  00278A  6F8C               	movwf	(?___fttol+2)& (0+255),b
  6187  00278C  0E00               	movlw	0
  6188  00278E  6F8D               	movwf	(?___fttol+3)& (0+255),b
  6189                           
  6190                           ; BSR set to: 0
  6191  002790  0012               	return	
  6192  002792                     l3129:
  6193                           
  6194                           ; BSR set to: 0
  6195  002792  0E17               	movlw	23
  6196  002794  0100               	movlb	0	; () banked
  6197  002796  6F8E               	movwf	??___fttol& (0+255),b
  6198  002798  C08A  F08F         	movff	___fttol@f1,??___fttol+1
  6199  00279C  C08B  F090         	movff	___fttol@f1+1,??___fttol+2
  6200  0027A0  C08C  F091         	movff	___fttol@f1+2,??___fttol+3
  6201  0027A4  0100               	movlb	0	; () banked
  6202  0027A6  298E               	incf	??___fttol& (0+255),w,b
  6203  0027A8  0100               	movlb	0	; () banked
  6204  0027AA  6F92               	movwf	(??___fttol+4)& (0+255),b
  6205  0027AC  D005               	goto	u3140
  6206  0027AE                     u3145:
  6207  0027AE  0100               	movlb	0	; () banked
  6208  0027B0  90D8               	bcf	status,0,c
  6209  0027B2  3391               	rrcf	(??___fttol+3)& (0+255),f,b
  6210  0027B4  3390               	rrcf	(??___fttol+2)& (0+255),f,b
  6211  0027B6  338F               	rrcf	(??___fttol+1)& (0+255),f,b
  6212  0027B8                     u3140:
  6213  0027B8  0100               	movlb	0	; () banked
  6214  0027BA  2F92               	decfsz	(??___fttol+4)& (0+255),f,b
  6215  0027BC  D7F8               	goto	u3145
  6216  0027BE  0100               	movlb	0	; () banked
  6217  0027C0  518F               	movf	(??___fttol+1)& (0+255),w,b
  6218  0027C2  0100               	movlb	0	; () banked
  6219  0027C4  6F93               	movwf	___fttol@sign1& (0+255),b
  6220                           
  6221                           ; BSR set to: 0
  6222  0027C6  0100               	movlb	0	; () banked
  6223  0027C8  8F8B               	bsf	(___fttol@f1+1)& (0+255),7,b
  6224                           
  6225                           ; BSR set to: 0
  6226  0027CA  0EFF               	movlw	255
  6227  0027CC  0100               	movlb	0	; () banked
  6228  0027CE  178A               	andwf	___fttol@f1& (0+255),f,b
  6229  0027D0  0EFF               	movlw	255
  6230  0027D2  0100               	movlb	0	; () banked
  6231  0027D4  178B               	andwf	(___fttol@f1+1)& (0+255),f,b
  6232  0027D6  0E00               	movlw	0
  6233  0027D8  0100               	movlb	0	; () banked
  6234  0027DA  178C               	andwf	(___fttol@f1+2)& (0+255),f,b
  6235                           
  6236                           ; BSR set to: 0
  6237  0027DC  0100               	movlb	0	; () banked
  6238  0027DE  518A               	movf	___fttol@f1& (0+255),w,b
  6239  0027E0  0100               	movlb	0	; () banked
  6240  0027E2  6F94               	movwf	___fttol@lval& (0+255),b
  6241  0027E4  0100               	movlb	0	; () banked
  6242  0027E6  518B               	movf	(___fttol@f1+1)& (0+255),w,b
  6243  0027E8  0100               	movlb	0	; () banked
  6244  0027EA  6F95               	movwf	(___fttol@lval+1)& (0+255),b
  6245  0027EC  0100               	movlb	0	; () banked
  6246  0027EE  518C               	movf	(___fttol@f1+2)& (0+255),w,b
  6247  0027F0  0100               	movlb	0	; () banked
  6248  0027F2  6F96               	movwf	(___fttol@lval+2)& (0+255),b
  6249  0027F4  0100               	movlb	0	; () banked
  6250  0027F6  6B97               	clrf	(___fttol@lval+3)& (0+255),b
  6251                           
  6252                           ; BSR set to: 0
  6253  0027F8  0E8E               	movlw	142
  6254  0027FA  0100               	movlb	0	; () banked
  6255  0027FC  5F98               	subwf	___fttol@exp1& (0+255),f,b
  6256                           
  6257                           ; BSR set to: 0
  6258  0027FE  0100               	movlb	0	; () banked
  6259  002800  AF98               	btfss	___fttol@exp1& (0+255),7,b
  6260  002802  D01A               	goto	l3151
  6261                           
  6262                           ; BSR set to: 0
  6263  002804  0100               	movlb	0	; () banked
  6264  002806  5198               	movf	___fttol@exp1& (0+255),w,b
  6265  002808  0A80               	xorlw	128
  6266  00280A  0F8F               	addlw	143
  6267  00280C  B0D8               	btfsc	status,0,c
  6268  00280E  D00A               	goto	l3147
  6269                           
  6270                           ; BSR set to: 0
  6271  002810  0E00               	movlw	0
  6272  002812  0100               	movlb	0	; () banked
  6273  002814  6F8A               	movwf	?___fttol& (0+255),b
  6274  002816  0E00               	movlw	0
  6275  002818  6F8B               	movwf	(?___fttol+1)& (0+255),b
  6276  00281A  0E00               	movlw	0
  6277  00281C  6F8C               	movwf	(?___fttol+2)& (0+255),b
  6278  00281E  0E00               	movlw	0
  6279  002820  6F8D               	movwf	(?___fttol+3)& (0+255),b
  6280                           
  6281                           ; BSR set to: 0
  6282  002822  0012               	return	
  6283  002824                     l3147:
  6284                           
  6285                           ; BSR set to: 0
  6286  002824  0100               	movlb	0	; () banked
  6287  002826  90D8               	bcf	status,0,c
  6288  002828  3397               	rrcf	(___fttol@lval+3)& (0+255),f,b
  6289  00282A  3396               	rrcf	(___fttol@lval+2)& (0+255),f,b
  6290  00282C  3395               	rrcf	(___fttol@lval+1)& (0+255),f,b
  6291  00282E  3394               	rrcf	___fttol@lval& (0+255),f,b
  6292                           
  6293                           ; BSR set to: 0
  6294  002830  0100               	movlb	0	; () banked
  6295  002832  3F98               	incfsz	___fttol@exp1& (0+255),f,b
  6296  002834  D7F7               	goto	l3147
  6297                           
  6298                           ; BSR set to: 0
  6299  002836  D01B               	goto	l3161
  6300  002838                     l3151:
  6301                           
  6302                           ; BSR set to: 0
  6303  002838  0E17               	movlw	23
  6304  00283A  0100               	movlb	0	; () banked
  6305  00283C  6598               	cpfsgt	___fttol@exp1& (0+255),b
  6306  00283E  D012               	goto	l3159
  6307                           
  6308                           ; BSR set to: 0
  6309  002840  0E00               	movlw	0
  6310  002842  0100               	movlb	0	; () banked
  6311  002844  6F8A               	movwf	?___fttol& (0+255),b
  6312  002846  0E00               	movlw	0
  6313  002848  6F8B               	movwf	(?___fttol+1)& (0+255),b
  6314  00284A  0E00               	movlw	0
  6315  00284C  6F8C               	movwf	(?___fttol+2)& (0+255),b
  6316  00284E  0E00               	movlw	0
  6317  002850  6F8D               	movwf	(?___fttol+3)& (0+255),b
  6318                           
  6319                           ; BSR set to: 0
  6320  002852  0012               	return	
  6321  002854                     l3157:
  6322                           
  6323                           ; BSR set to: 0
  6324  002854  0100               	movlb	0	; () banked
  6325  002856  90D8               	bcf	status,0,c
  6326  002858  3794               	rlcf	___fttol@lval& (0+255),f,b
  6327  00285A  3795               	rlcf	(___fttol@lval+1)& (0+255),f,b
  6328  00285C  3796               	rlcf	(___fttol@lval+2)& (0+255),f,b
  6329  00285E  3797               	rlcf	(___fttol@lval+3)& (0+255),f,b
  6330  002860  0100               	movlb	0	; () banked
  6331  002862  0798               	decf	___fttol@exp1& (0+255),f,b
  6332  002864                     l3159:
  6333                           
  6334                           ; BSR set to: 0
  6335  002864  0100               	movlb	0	; () banked
  6336  002866  5198               	movf	___fttol@exp1& (0+255),w,b
  6337  002868  0100               	movlb	0	; () banked
  6338  00286A  A4D8               	btfss	status,2,c
  6339  00286C  D7F3               	goto	l3157
  6340  00286E                     l3161:
  6341                           
  6342                           ; BSR set to: 0
  6343  00286E  0100               	movlb	0	; () banked
  6344  002870  5193               	movf	___fttol@sign1& (0+255),w,b
  6345  002872  0100               	movlb	0	; () banked
  6346  002874  B4D8               	btfsc	status,2,c
  6347  002876  D009               	goto	l3165
  6348                           
  6349                           ; BSR set to: 0
  6350  002878  0100               	movlb	0	; () banked
  6351  00287A  1F97               	comf	(___fttol@lval+3)& (0+255),f,b
  6352  00287C  1F96               	comf	(___fttol@lval+2)& (0+255),f,b
  6353  00287E  1F95               	comf	(___fttol@lval+1)& (0+255),f,b
  6354  002880  6D94               	negf	___fttol@lval& (0+255),b
  6355  002882  0E00               	movlw	0
  6356  002884  2395               	addwfc	(___fttol@lval+1)& (0+255),f,b
  6357  002886  2396               	addwfc	(___fttol@lval+2)& (0+255),f,b
  6358  002888  2397               	addwfc	(___fttol@lval+3)& (0+255),f,b
  6359  00288A                     l3165:
  6360                           
  6361                           ; BSR set to: 0
  6362  00288A  C094  F08A         	movff	___fttol@lval,?___fttol
  6363  00288E  C095  F08B         	movff	___fttol@lval+1,?___fttol+1
  6364  002892  C096  F08C         	movff	___fttol@lval+2,?___fttol+2
  6365  002896  C097  F08D         	movff	___fttol@lval+3,?___fttol+3
  6366  00289A  0012               	return	
  6367  00289C                     __end_of___fttol:
  6368                           	opt stack 0
  6369                           tblptru	equ	0xFF8
  6370                           tblptrh	equ	0xFF7
  6371                           tblptrl	equ	0xFF6
  6372                           tablat	equ	0xFF5
  6373                           prodh	equ	0xFF4
  6374                           prodl	equ	0xFF3
  6375                           intcon	equ	0xFF2
  6376                           postinc0	equ	0xFEE
  6377                           wreg	equ	0xFE8
  6378                           postdec1	equ	0xFE5
  6379                           fsr1l	equ	0xFE1
  6380                           indf2	equ	0xFDF
  6381                           postinc2	equ	0xFDE
  6382                           postdec2	equ	0xFDD
  6383                           fsr2h	equ	0xFDA
  6384                           fsr2l	equ	0xFD9
  6385                           status	equ	0xFD8
  6386                           
  6387 ;; *************** function ___ftsub *****************
  6388 ;; Defined at:
  6389 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;  f1              3   57[BANK0 ] float 
  6392 ;;  f2              3   60[BANK0 ] float 
  6393 ;; Auto vars:     Size  Location     Type
  6394 ;;		None
  6395 ;; Return value:  Size  Location     Type
  6396 ;;                  3   57[BANK0 ] float 
  6397 ;; Registers used:
  6398 ;;		wreg, status,2, status,0, cstack
  6399 ;; Tracked objects:
  6400 ;;		On entry : 0/0
  6401 ;;		On exit  : 0/0
  6402 ;;		Unchanged: 0/0
  6403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6404 ;;      Params:         0       6       0       0       0       0       0
  6405 ;;      Locals:         0       0       0       0       0       0       0
  6406 ;;      Temps:          0       0       0       0       0       0       0
  6407 ;;      Totals:         0       6       0       0       0       0       0
  6408 ;;Total ram usage:        6 bytes
  6409 ;; Hardware stack levels used:    1
  6410 ;; Hardware stack levels required when called:    6
  6411 ;; This function calls:
  6412 ;;		___ftadd
  6413 ;; This function is called by:
  6414 ;;		_sprintf
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           
  6418                           	psect	text15
  6419  0030A4                     __ptext15:
  6420                           	opt stack 0
  6421  0030A4                     ___ftsub:
  6422                           	opt stack 23
  6423                           
  6424                           ; BSR set to: 0
  6425                           ;incstack = 0
  6426  0030A4  0100               	movlb	0	; () banked
  6427  0030A6  519C               	movf	___ftsub@f2& (0+255),w,b
  6428  0030A8  0100               	movlb	0	; () banked
  6429  0030AA  119D               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  6430  0030AC  0100               	movlb	0	; () banked
  6431  0030AE  119E               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  6432  0030B0  B4D8               	btfsc	status,2,c
  6433  0030B2  D009               	goto	l3097
  6434                           
  6435                           ; BSR set to: 0
  6436  0030B4  0E00               	movlw	0
  6437  0030B6  0100               	movlb	0	; () banked
  6438  0030B8  1B9C               	xorwf	___ftsub@f2& (0+255),f,b
  6439  0030BA  0E00               	movlw	0
  6440  0030BC  0100               	movlb	0	; () banked
  6441  0030BE  1B9D               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  6442  0030C0  0E80               	movlw	128
  6443  0030C2  0100               	movlb	0	; () banked
  6444  0030C4  1B9E               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  6445  0030C6                     l3097:
  6446                           
  6447                           ; BSR set to: 0
  6448  0030C6  C099  F08D         	movff	___ftsub@f1,___ftadd@f1
  6449  0030CA  C09A  F08E         	movff	___ftsub@f1+1,___ftadd@f1+1
  6450  0030CE  C09B  F08F         	movff	___ftsub@f1+2,___ftadd@f1+2
  6451  0030D2  C09C  F090         	movff	___ftsub@f2,___ftadd@f2
  6452  0030D6  C09D  F091         	movff	___ftsub@f2+1,___ftadd@f2+1
  6453  0030DA  C09E  F092         	movff	___ftsub@f2+2,___ftadd@f2+2
  6454  0030DE  ECE6  F00C         	call	___ftadd	;wreg free
  6455  0030E2  C08D  F099         	movff	?___ftadd,?___ftsub
  6456  0030E6  C08E  F09A         	movff	?___ftadd+1,?___ftsub+1
  6457  0030EA  C08F  F09B         	movff	?___ftadd+2,?___ftsub+2
  6458  0030EE  0012               	return	
  6459  0030F0                     __end_of___ftsub:
  6460                           	opt stack 0
  6461                           tblptru	equ	0xFF8
  6462                           tblptrh	equ	0xFF7
  6463                           tblptrl	equ	0xFF6
  6464                           tablat	equ	0xFF5
  6465                           prodh	equ	0xFF4
  6466                           prodl	equ	0xFF3
  6467                           intcon	equ	0xFF2
  6468                           postinc0	equ	0xFEE
  6469                           wreg	equ	0xFE8
  6470                           postdec1	equ	0xFE5
  6471                           fsr1l	equ	0xFE1
  6472                           indf2	equ	0xFDF
  6473                           postinc2	equ	0xFDE
  6474                           postdec2	equ	0xFDD
  6475                           fsr2h	equ	0xFDA
  6476                           fsr2l	equ	0xFD9
  6477                           status	equ	0xFD8
  6478                           
  6479 ;; *************** function ___ftadd *****************
  6480 ;; Defined at:
  6481 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  6482 ;; Parameters:    Size  Location     Type
  6483 ;;  f1              3   45[BANK0 ] float 
  6484 ;;  f2              3   48[BANK0 ] float 
  6485 ;; Auto vars:     Size  Location     Type
  6486 ;;  exp1            1   56[BANK0 ] unsigned char 
  6487 ;;  exp2            1   55[BANK0 ] unsigned char 
  6488 ;;  sign            1   54[BANK0 ] unsigned char 
  6489 ;; Return value:  Size  Location     Type
  6490 ;;                  3   45[BANK0 ] float 
  6491 ;; Registers used:
  6492 ;;		wreg, status,2, status,0, cstack
  6493 ;; Tracked objects:
  6494 ;;		On entry : 0/0
  6495 ;;		On exit  : 0/0
  6496 ;;		Unchanged: 0/0
  6497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6498 ;;      Params:         0       6       0       0       0       0       0
  6499 ;;      Locals:         0       3       0       0       0       0       0
  6500 ;;      Temps:          0       3       0       0       0       0       0
  6501 ;;      Totals:         0      12       0       0       0       0       0
  6502 ;;Total ram usage:       12 bytes
  6503 ;; Hardware stack levels used:    1
  6504 ;; Hardware stack levels required when called:    5
  6505 ;; This function calls:
  6506 ;;		___ftpack
  6507 ;; This function is called by:
  6508 ;;		_sprintf
  6509 ;;		___ftsub
  6510 ;; This function uses a non-reentrant model
  6511 ;;
  6512                           
  6513                           	psect	text16
  6514  0019CC                     __ptext16:
  6515                           	opt stack 0
  6516  0019CC                     ___ftadd:
  6517                           	opt stack 23
  6518                           
  6519                           ;incstack = 0
  6520  0019CC  C08F  F093         	movff	___ftadd@f1+2,??___ftadd
  6521  0019D0  0100               	movlb	0	; () banked
  6522  0019D2  6B94               	clrf	(??___ftadd+1)& (0+255),b
  6523  0019D4  6B95               	clrf	(??___ftadd+2)& (0+255),b
  6524  0019D6  0100               	movlb	0	; () banked
  6525  0019D8  358E               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  6526  0019DA  0100               	movlb	0	; () banked
  6527  0019DC  3793               	rlcf	??___ftadd& (0+255),f,b
  6528  0019DE  E301               	bnc	u2341
  6529  0019E0  8194               	bsf	(??___ftadd+1)& (0+255),0,b
  6530  0019E2                     u2341:
  6531  0019E2  0100               	movlb	0	; () banked
  6532  0019E4  5193               	movf	??___ftadd& (0+255),w,b
  6533  0019E6  0100               	movlb	0	; () banked
  6534  0019E8  6F98               	movwf	___ftadd@exp1& (0+255),b
  6535  0019EA  C092  F093         	movff	___ftadd@f2+2,??___ftadd
  6536  0019EE  0100               	movlb	0	; () banked
  6537  0019F0  6B94               	clrf	(??___ftadd+1)& (0+255),b
  6538  0019F2  6B95               	clrf	(??___ftadd+2)& (0+255),b
  6539  0019F4  0100               	movlb	0	; () banked
  6540  0019F6  3591               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  6541  0019F8  0100               	movlb	0	; () banked
  6542  0019FA  3793               	rlcf	??___ftadd& (0+255),f,b
  6543  0019FC  E301               	bnc	u2351
  6544  0019FE  8194               	bsf	(??___ftadd+1)& (0+255),0,b
  6545  001A00                     u2351:
  6546  001A00  0100               	movlb	0	; () banked
  6547  001A02  5193               	movf	??___ftadd& (0+255),w,b
  6548  001A04  0100               	movlb	0	; () banked
  6549  001A06  6F97               	movwf	___ftadd@exp2& (0+255),b
  6550                           
  6551                           ; BSR set to: 0
  6552  001A08  0100               	movlb	0	; () banked
  6553  001A0A  5198               	movf	___ftadd@exp1& (0+255),w,b
  6554  001A0C  0100               	movlb	0	; () banked
  6555  001A0E  B4D8               	btfsc	status,2,c
  6556  001A10  D011               	goto	l699
  6557                           
  6558                           ; BSR set to: 0
  6559  001A12  0100               	movlb	0	; () banked
  6560  001A14  5197               	movf	___ftadd@exp2& (0+255),w,b
  6561  001A16  0100               	movlb	0	; () banked
  6562  001A18  5D98               	subwf	___ftadd@exp1& (0+255),w,b
  6563  001A1A  B0D8               	btfsc	status,0,c
  6564  001A1C  D012               	goto	l2603
  6565                           
  6566                           ; BSR set to: 0
  6567  001A1E  0100               	movlb	0	; () banked
  6568  001A20  5198               	movf	___ftadd@exp1& (0+255),w,b
  6569  001A22  0800               	sublw	0
  6570  001A24  0100               	movlb	0	; () banked
  6571  001A26  2597               	addwf	___ftadd@exp2& (0+255),w,b
  6572  001A28  0100               	movlb	0	; () banked
  6573  001A2A  6F93               	movwf	??___ftadd& (0+255),b
  6574  001A2C  0E18               	movlw	24
  6575  001A2E  0100               	movlb	0	; () banked
  6576  001A30  6593               	cpfsgt	??___ftadd& (0+255),b
  6577  001A32  D007               	goto	l2603
  6578  001A34                     l699:
  6579                           
  6580                           ; BSR set to: 0
  6581  001A34  C090  F08D         	movff	___ftadd@f2,?___ftadd
  6582  001A38  C091  F08E         	movff	___ftadd@f2+1,?___ftadd+1
  6583  001A3C  C092  F08F         	movff	___ftadd@f2+2,?___ftadd+2
  6584  001A40  0012               	return	
  6585  001A42                     l2603:
  6586                           
  6587                           ; BSR set to: 0
  6588  001A42  0100               	movlb	0	; () banked
  6589  001A44  5197               	movf	___ftadd@exp2& (0+255),w,b
  6590  001A46  0100               	movlb	0	; () banked
  6591  001A48  B4D8               	btfsc	status,2,c
  6592  001A4A  D011               	goto	l703
  6593                           
  6594                           ; BSR set to: 0
  6595  001A4C  0100               	movlb	0	; () banked
  6596  001A4E  5198               	movf	___ftadd@exp1& (0+255),w,b
  6597  001A50  0100               	movlb	0	; () banked
  6598  001A52  5D97               	subwf	___ftadd@exp2& (0+255),w,b
  6599  001A54  B0D8               	btfsc	status,0,c
  6600  001A56  D012               	goto	l2609
  6601                           
  6602                           ; BSR set to: 0
  6603  001A58  0100               	movlb	0	; () banked
  6604  001A5A  5197               	movf	___ftadd@exp2& (0+255),w,b
  6605  001A5C  0800               	sublw	0
  6606  001A5E  0100               	movlb	0	; () banked
  6607  001A60  2598               	addwf	___ftadd@exp1& (0+255),w,b
  6608  001A62  0100               	movlb	0	; () banked
  6609  001A64  6F93               	movwf	??___ftadd& (0+255),b
  6610  001A66  0E18               	movlw	24
  6611  001A68  0100               	movlb	0	; () banked
  6612  001A6A  6593               	cpfsgt	??___ftadd& (0+255),b
  6613  001A6C  D007               	goto	l2609
  6614  001A6E                     l703:
  6615                           
  6616                           ; BSR set to: 0
  6617  001A6E  C08D  F08D         	movff	___ftadd@f1,?___ftadd
  6618  001A72  C08E  F08E         	movff	___ftadd@f1+1,?___ftadd+1
  6619  001A76  C08F  F08F         	movff	___ftadd@f1+2,?___ftadd+2
  6620  001A7A  0012               	return	
  6621  001A7C                     l2609:
  6622                           
  6623                           ; BSR set to: 0
  6624  001A7C  0E06               	movlw	6
  6625  001A7E  0100               	movlb	0	; () banked
  6626  001A80  6F96               	movwf	___ftadd@sign& (0+255),b
  6627                           
  6628                           ; BSR set to: 0
  6629  001A82  0100               	movlb	0	; () banked
  6630  001A84  AF8F               	btfss	(___ftadd@f1+2)& (0+255),7,b
  6631  001A86  D002               	goto	l2615
  6632                           
  6633                           ; BSR set to: 0
  6634  001A88  0100               	movlb	0	; () banked
  6635  001A8A  8F96               	bsf	___ftadd@sign& (0+255),7,b
  6636  001A8C                     l2615:
  6637                           
  6638                           ; BSR set to: 0
  6639  001A8C  0100               	movlb	0	; () banked
  6640  001A8E  AF92               	btfss	(___ftadd@f2+2)& (0+255),7,b
  6641  001A90  D002               	goto	l705
  6642                           
  6643                           ; BSR set to: 0
  6644  001A92  0100               	movlb	0	; () banked
  6645  001A94  8D96               	bsf	___ftadd@sign& (0+255),6,b
  6646  001A96                     l705:
  6647                           
  6648                           ; BSR set to: 0
  6649  001A96  0100               	movlb	0	; () banked
  6650  001A98  8F8E               	bsf	(___ftadd@f1+1)& (0+255),7,b
  6651                           
  6652                           ; BSR set to: 0
  6653  001A9A  0EFF               	movlw	255
  6654  001A9C  0100               	movlb	0	; () banked
  6655  001A9E  178D               	andwf	___ftadd@f1& (0+255),f,b
  6656  001AA0  0EFF               	movlw	255
  6657  001AA2  0100               	movlb	0	; () banked
  6658  001AA4  178E               	andwf	(___ftadd@f1+1)& (0+255),f,b
  6659  001AA6  0E00               	movlw	0
  6660  001AA8  0100               	movlb	0	; () banked
  6661  001AAA  178F               	andwf	(___ftadd@f1+2)& (0+255),f,b
  6662  001AAC  0100               	movlb	0	; () banked
  6663  001AAE  8F91               	bsf	(___ftadd@f2+1)& (0+255),7,b
  6664                           
  6665                           ; BSR set to: 0
  6666  001AB0  0EFF               	movlw	255
  6667  001AB2  0100               	movlb	0	; () banked
  6668  001AB4  1790               	andwf	___ftadd@f2& (0+255),f,b
  6669  001AB6  0EFF               	movlw	255
  6670  001AB8  0100               	movlb	0	; () banked
  6671  001ABA  1791               	andwf	(___ftadd@f2+1)& (0+255),f,b
  6672  001ABC  0E00               	movlw	0
  6673  001ABE  0100               	movlb	0	; () banked
  6674  001AC0  1792               	andwf	(___ftadd@f2+2)& (0+255),f,b
  6675                           
  6676                           ; BSR set to: 0
  6677  001AC2  0100               	movlb	0	; () banked
  6678  001AC4  5197               	movf	___ftadd@exp2& (0+255),w,b
  6679  001AC6  0100               	movlb	0	; () banked
  6680  001AC8  5D98               	subwf	___ftadd@exp1& (0+255),w,b
  6681  001ACA  B0D8               	btfsc	status,0,c
  6682  001ACC  D025               	goto	l2635
  6683  001ACE                     l2625:
  6684                           
  6685                           ; BSR set to: 0
  6686  001ACE  0100               	movlb	0	; () banked
  6687  001AD0  90D8               	bcf	status,0,c
  6688  001AD2  3790               	rlcf	___ftadd@f2& (0+255),f,b
  6689  001AD4  3791               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  6690  001AD6  3792               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  6691  001AD8  0100               	movlb	0	; () banked
  6692  001ADA  0797               	decf	___ftadd@exp2& (0+255),f,b
  6693                           
  6694                           ; BSR set to: 0
  6695  001ADC  0100               	movlb	0	; () banked
  6696  001ADE  5198               	movf	___ftadd@exp1& (0+255),w,b
  6697  001AE0  0100               	movlb	0	; () banked
  6698  001AE2  1997               	xorwf	___ftadd@exp2& (0+255),w,b
  6699  001AE4  B4D8               	btfsc	status,2,c
  6700  001AE6  D011               	goto	l2633
  6701                           
  6702                           ; BSR set to: 0
  6703  001AE8  0100               	movlb	0	; () banked
  6704  001AEA  0796               	decf	___ftadd@sign& (0+255),f,b
  6705  001AEC  C096  F093         	movff	___ftadd@sign,??___ftadd
  6706  001AF0  0E07               	movlw	7
  6707  001AF2  0100               	movlb	0	; () banked
  6708  001AF4  1793               	andwf	??___ftadd& (0+255),f,b
  6709  001AF6  B4D8               	btfsc	status,2,c
  6710  001AF8  D008               	goto	l2633
  6711  001AFA  D7E9               	goto	l2625
  6712  001AFC                     l2631:
  6713                           
  6714                           ; BSR set to: 0
  6715  001AFC  0100               	movlb	0	; () banked
  6716  001AFE  90D8               	bcf	status,0,c
  6717  001B00  338F               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  6718  001B02  338E               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  6719  001B04  338D               	rrcf	___ftadd@f1& (0+255),f,b
  6720  001B06  0100               	movlb	0	; () banked
  6721  001B08  2B98               	incf	___ftadd@exp1& (0+255),f,b
  6722  001B0A                     l2633:
  6723                           
  6724                           ; BSR set to: 0
  6725  001B0A  0100               	movlb	0	; () banked
  6726  001B0C  5197               	movf	___ftadd@exp2& (0+255),w,b
  6727  001B0E  0100               	movlb	0	; () banked
  6728  001B10  1998               	xorwf	___ftadd@exp1& (0+255),w,b
  6729  001B12  B4D8               	btfsc	status,2,c
  6730  001B14  D02B               	goto	l714
  6731  001B16  D7F2               	goto	l2631
  6732  001B18                     l2635:
  6733                           
  6734                           ; BSR set to: 0
  6735  001B18  0100               	movlb	0	; () banked
  6736  001B1A  5198               	movf	___ftadd@exp1& (0+255),w,b
  6737  001B1C  0100               	movlb	0	; () banked
  6738  001B1E  5D97               	subwf	___ftadd@exp2& (0+255),w,b
  6739  001B20  B0D8               	btfsc	status,0,c
  6740  001B22  D024               	goto	l714
  6741  001B24                     l2637:
  6742                           
  6743                           ; BSR set to: 0
  6744  001B24  0100               	movlb	0	; () banked
  6745  001B26  90D8               	bcf	status,0,c
  6746  001B28  378D               	rlcf	___ftadd@f1& (0+255),f,b
  6747  001B2A  378E               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  6748  001B2C  378F               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  6749  001B2E  0100               	movlb	0	; () banked
  6750  001B30  0798               	decf	___ftadd@exp1& (0+255),f,b
  6751                           
  6752                           ; BSR set to: 0
  6753  001B32  0100               	movlb	0	; () banked
  6754  001B34  5198               	movf	___ftadd@exp1& (0+255),w,b
  6755  001B36  0100               	movlb	0	; () banked
  6756  001B38  1997               	xorwf	___ftadd@exp2& (0+255),w,b
  6757  001B3A  B4D8               	btfsc	status,2,c
  6758  001B3C  D011               	goto	l2645
  6759                           
  6760                           ; BSR set to: 0
  6761  001B3E  0100               	movlb	0	; () banked
  6762  001B40  0796               	decf	___ftadd@sign& (0+255),f,b
  6763  001B42  C096  F093         	movff	___ftadd@sign,??___ftadd
  6764  001B46  0E07               	movlw	7
  6765  001B48  0100               	movlb	0	; () banked
  6766  001B4A  1793               	andwf	??___ftadd& (0+255),f,b
  6767  001B4C  B4D8               	btfsc	status,2,c
  6768  001B4E  D008               	goto	l2645
  6769  001B50  D7E9               	goto	l2637
  6770  001B52                     l2643:
  6771                           
  6772                           ; BSR set to: 0
  6773  001B52  0100               	movlb	0	; () banked
  6774  001B54  90D8               	bcf	status,0,c
  6775  001B56  3392               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  6776  001B58  3391               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  6777  001B5A  3390               	rrcf	___ftadd@f2& (0+255),f,b
  6778  001B5C  0100               	movlb	0	; () banked
  6779  001B5E  2B97               	incf	___ftadd@exp2& (0+255),f,b
  6780  001B60                     l2645:
  6781                           
  6782                           ; BSR set to: 0
  6783  001B60  0100               	movlb	0	; () banked
  6784  001B62  5197               	movf	___ftadd@exp2& (0+255),w,b
  6785  001B64  0100               	movlb	0	; () banked
  6786  001B66  1998               	xorwf	___ftadd@exp1& (0+255),w,b
  6787  001B68  A4D8               	btfss	status,2,c
  6788  001B6A  D7F3               	goto	l2643
  6789  001B6C                     l714:
  6790                           
  6791                           ; BSR set to: 0
  6792  001B6C  0100               	movlb	0	; () banked
  6793  001B6E  AF96               	btfss	___ftadd@sign& (0+255),7,b
  6794  001B70  D012               	goto	l723
  6795                           
  6796                           ; BSR set to: 0
  6797  001B72  0EFF               	movlw	255
  6798  001B74  0100               	movlb	0	; () banked
  6799  001B76  1B8D               	xorwf	___ftadd@f1& (0+255),f,b
  6800  001B78  0EFF               	movlw	255
  6801  001B7A  0100               	movlb	0	; () banked
  6802  001B7C  1B8E               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  6803  001B7E  0EFF               	movlw	255
  6804  001B80  0100               	movlb	0	; () banked
  6805  001B82  1B8F               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  6806  001B84  0E01               	movlw	1
  6807  001B86  0100               	movlb	0	; () banked
  6808  001B88  278D               	addwf	___ftadd@f1& (0+255),f,b
  6809  001B8A  0E00               	movlw	0
  6810  001B8C  0100               	movlb	0	; () banked
  6811  001B8E  238E               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  6812  001B90  0E00               	movlw	0
  6813  001B92  0100               	movlb	0	; () banked
  6814  001B94  238F               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  6815  001B96                     l723:
  6816                           
  6817                           ; BSR set to: 0
  6818  001B96  0100               	movlb	0	; () banked
  6819  001B98  AD96               	btfss	___ftadd@sign& (0+255),6,b
  6820  001B9A  D012               	goto	l2651
  6821                           
  6822                           ; BSR set to: 0
  6823  001B9C  0EFF               	movlw	255
  6824  001B9E  0100               	movlb	0	; () banked
  6825  001BA0  1B90               	xorwf	___ftadd@f2& (0+255),f,b
  6826  001BA2  0EFF               	movlw	255
  6827  001BA4  0100               	movlb	0	; () banked
  6828  001BA6  1B91               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  6829  001BA8  0EFF               	movlw	255
  6830  001BAA  0100               	movlb	0	; () banked
  6831  001BAC  1B92               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  6832  001BAE  0E01               	movlw	1
  6833  001BB0  0100               	movlb	0	; () banked
  6834  001BB2  2790               	addwf	___ftadd@f2& (0+255),f,b
  6835  001BB4  0E00               	movlw	0
  6836  001BB6  0100               	movlb	0	; () banked
  6837  001BB8  2391               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  6838  001BBA  0E00               	movlw	0
  6839  001BBC  0100               	movlb	0	; () banked
  6840  001BBE  2392               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  6841  001BC0                     l2651:
  6842                           
  6843                           ; BSR set to: 0
  6844  001BC0  0E00               	movlw	0
  6845  001BC2  0100               	movlb	0	; () banked
  6846  001BC4  6F96               	movwf	___ftadd@sign& (0+255),b
  6847                           
  6848                           ; BSR set to: 0
  6849  001BC6  0100               	movlb	0	; () banked
  6850  001BC8  518D               	movf	___ftadd@f1& (0+255),w,b
  6851  001BCA  0100               	movlb	0	; () banked
  6852  001BCC  2790               	addwf	___ftadd@f2& (0+255),f,b
  6853  001BCE  0100               	movlb	0	; () banked
  6854  001BD0  518E               	movf	(___ftadd@f1+1)& (0+255),w,b
  6855  001BD2  0100               	movlb	0	; () banked
  6856  001BD4  2391               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  6857  001BD6  0100               	movlb	0	; () banked
  6858  001BD8  518F               	movf	(___ftadd@f1+2)& (0+255),w,b
  6859  001BDA  0100               	movlb	0	; () banked
  6860  001BDC  2392               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  6861                           
  6862                           ; BSR set to: 0
  6863  001BDE  0100               	movlb	0	; () banked
  6864  001BE0  AF92               	btfss	(___ftadd@f2+2)& (0+255),7,b
  6865  001BE2  D015               	goto	l2661
  6866                           
  6867                           ; BSR set to: 0
  6868  001BE4  0EFF               	movlw	255
  6869  001BE6  0100               	movlb	0	; () banked
  6870  001BE8  1B90               	xorwf	___ftadd@f2& (0+255),f,b
  6871  001BEA  0EFF               	movlw	255
  6872  001BEC  0100               	movlb	0	; () banked
  6873  001BEE  1B91               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  6874  001BF0  0EFF               	movlw	255
  6875  001BF2  0100               	movlb	0	; () banked
  6876  001BF4  1B92               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  6877  001BF6  0E01               	movlw	1
  6878  001BF8  0100               	movlb	0	; () banked
  6879  001BFA  2790               	addwf	___ftadd@f2& (0+255),f,b
  6880  001BFC  0E00               	movlw	0
  6881  001BFE  0100               	movlb	0	; () banked
  6882  001C00  2391               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  6883  001C02  0E00               	movlw	0
  6884  001C04  0100               	movlb	0	; () banked
  6885  001C06  2392               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  6886                           
  6887                           ; BSR set to: 0
  6888  001C08  0E01               	movlw	1
  6889  001C0A  0100               	movlb	0	; () banked
  6890  001C0C  6F96               	movwf	___ftadd@sign& (0+255),b
  6891  001C0E                     l2661:
  6892                           
  6893                           ; BSR set to: 0
  6894  001C0E  C090  F060         	movff	___ftadd@f2,___ftpack@arg
  6895  001C12  C091  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
  6896  001C16  C092  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
  6897  001C1A  C098  F063         	movff	___ftadd@exp1,___ftpack@exp
  6898  001C1E  C096  F064         	movff	___ftadd@sign,___ftpack@sign
  6899  001C22  EC4E  F014         	call	___ftpack	;wreg free
  6900  001C26  C060  F08D         	movff	?___ftpack,?___ftadd
  6901  001C2A  C061  F08E         	movff	?___ftpack+1,?___ftadd+1
  6902  001C2E  C062  F08F         	movff	?___ftpack+2,?___ftadd+2
  6903  001C32  0012               	return	
  6904  001C34                     __end_of___ftadd:
  6905                           	opt stack 0
  6906                           tblptru	equ	0xFF8
  6907                           tblptrh	equ	0xFF7
  6908                           tblptrl	equ	0xFF6
  6909                           tablat	equ	0xFF5
  6910                           prodh	equ	0xFF4
  6911                           prodl	equ	0xFF3
  6912                           intcon	equ	0xFF2
  6913                           postinc0	equ	0xFEE
  6914                           wreg	equ	0xFE8
  6915                           postdec1	equ	0xFE5
  6916                           fsr1l	equ	0xFE1
  6917                           indf2	equ	0xFDF
  6918                           postinc2	equ	0xFDE
  6919                           postdec2	equ	0xFDD
  6920                           fsr2h	equ	0xFDA
  6921                           fsr2l	equ	0xFD9
  6922                           status	equ	0xFD8
  6923                           
  6924 ;; *************** function ___ftneg *****************
  6925 ;; Defined at:
  6926 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;  f1              3    0[BANK0 ] float 
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;		None
  6931 ;; Return value:  Size  Location     Type
  6932 ;;                  3    0[BANK0 ] float 
  6933 ;; Registers used:
  6934 ;;		wreg, status,2, status,0
  6935 ;; Tracked objects:
  6936 ;;		On entry : 0/0
  6937 ;;		On exit  : 0/0
  6938 ;;		Unchanged: 0/0
  6939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6940 ;;      Params:         0       3       0       0       0       0       0
  6941 ;;      Locals:         0       0       0       0       0       0       0
  6942 ;;      Temps:          0       0       0       0       0       0       0
  6943 ;;      Totals:         0       3       0       0       0       0       0
  6944 ;;Total ram usage:        3 bytes
  6945 ;; Hardware stack levels used:    1
  6946 ;; Hardware stack levels required when called:    4
  6947 ;; This function calls:
  6948 ;;		Nothing
  6949 ;; This function is called by:
  6950 ;;		_sprintf
  6951 ;; This function uses a non-reentrant model
  6952 ;;
  6953                           
  6954                           	psect	text17
  6955  0032AE                     __ptext17:
  6956                           	opt stack 0
  6957  0032AE                     ___ftneg:
  6958                           	opt stack 25
  6959                           
  6960                           ;incstack = 0
  6961  0032AE  0100               	movlb	0	; () banked
  6962  0032B0  5160               	movf	___ftneg@f1& (0+255),w,b
  6963  0032B2  0100               	movlb	0	; () banked
  6964  0032B4  1161               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  6965  0032B6  0100               	movlb	0	; () banked
  6966  0032B8  1162               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  6967  0032BA  B4D8               	btfsc	status,2,c
  6968  0032BC  D009               	goto	l773
  6969                           
  6970                           ; BSR set to: 0
  6971  0032BE  0E00               	movlw	0
  6972  0032C0  0100               	movlb	0	; () banked
  6973  0032C2  1B60               	xorwf	___ftneg@f1& (0+255),f,b
  6974  0032C4  0E00               	movlw	0
  6975  0032C6  0100               	movlb	0	; () banked
  6976  0032C8  1B61               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  6977  0032CA  0E80               	movlw	128
  6978  0032CC  0100               	movlb	0	; () banked
  6979  0032CE  1B62               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  6980  0032D0                     l773:
  6981                           
  6982                           ; BSR set to: 0
  6983  0032D0  C060  F060         	movff	___ftneg@f1,?___ftneg
  6984  0032D4  C061  F061         	movff	___ftneg@f1+1,?___ftneg+1
  6985  0032D8  C062  F062         	movff	___ftneg@f1+2,?___ftneg+2
  6986                           
  6987                           ; BSR set to: 0
  6988  0032DC  0012               	return		;funcret
  6989  0032DE                     __end_of___ftneg:
  6990                           	opt stack 0
  6991                           tblptru	equ	0xFF8
  6992                           tblptrh	equ	0xFF7
  6993                           tblptrl	equ	0xFF6
  6994                           tablat	equ	0xFF5
  6995                           prodh	equ	0xFF4
  6996                           prodl	equ	0xFF3
  6997                           intcon	equ	0xFF2
  6998                           postinc0	equ	0xFEE
  6999                           wreg	equ	0xFE8
  7000                           postdec1	equ	0xFE5
  7001                           fsr1l	equ	0xFE1
  7002                           indf2	equ	0xFDF
  7003                           postinc2	equ	0xFDE
  7004                           postdec2	equ	0xFDD
  7005                           fsr2h	equ	0xFDA
  7006                           fsr2l	equ	0xFD9
  7007                           status	equ	0xFD8
  7008                           
  7009 ;; *************** function ___ftge *****************
  7010 ;; Defined at:
  7011 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  7012 ;; Parameters:    Size  Location     Type
  7013 ;;  ff1             3    0[BANK0 ] float 
  7014 ;;  ff2             3    3[BANK0 ] float 
  7015 ;; Auto vars:     Size  Location     Type
  7016 ;;		None
  7017 ;; Return value:  Size  Location     Type
  7018 ;;		None               void
  7019 ;; Registers used:
  7020 ;;		wreg, status,2, status,0
  7021 ;; Tracked objects:
  7022 ;;		On entry : 0/0
  7023 ;;		On exit  : 0/0
  7024 ;;		Unchanged: 0/0
  7025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7026 ;;      Params:         0       6       0       0       0       0       0
  7027 ;;      Locals:         0       0       0       0       0       0       0
  7028 ;;      Temps:          0       3       0       0       0       0       0
  7029 ;;      Totals:         0       9       0       0       0       0       0
  7030 ;;Total ram usage:        9 bytes
  7031 ;; Hardware stack levels used:    1
  7032 ;; Hardware stack levels required when called:    4
  7033 ;; This function calls:
  7034 ;;		Nothing
  7035 ;; This function is called by:
  7036 ;;		_main
  7037 ;;		_sprintf
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041                           	psect	text18
  7042  002B82                     __ptext18:
  7043                           	opt stack 0
  7044  002B82                     ___ftge:
  7045                           	opt stack 25
  7046                           
  7047                           ; BSR set to: 0
  7048                           ;incstack = 0
  7049  002B82  0100               	movlb	0	; () banked
  7050  002B84  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
  7051  002B86  D01D               	goto	l3105
  7052                           
  7053                           ; BSR set to: 0
  7054  002B88  C060  F066         	movff	___ftge@ff1,??___ftge
  7055  002B8C  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
  7056  002B90  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
  7057  002B94  0100               	movlb	0	; () banked
  7058  002B96  1F66               	comf	??___ftge& (0+255),f,b
  7059  002B98  1F67               	comf	(??___ftge+1)& (0+255),f,b
  7060  002B9A  1F68               	comf	(??___ftge+2)& (0+255),f,b
  7061  002B9C  2B66               	incf	??___ftge& (0+255),f,b
  7062  002B9E  0E00               	movlw	0
  7063  002BA0  2367               	addwfc	(??___ftge+1)& (0+255),f,b
  7064  002BA2  2368               	addwfc	(??___ftge+2)& (0+255),f,b
  7065  002BA4  0E00               	movlw	0
  7066  002BA6  0100               	movlb	0	; () banked
  7067  002BA8  2566               	addwf	??___ftge& (0+255),w,b
  7068  002BAA  0100               	movlb	0	; () banked
  7069  002BAC  6F60               	movwf	___ftge@ff1& (0+255),b
  7070  002BAE  0E00               	movlw	0
  7071  002BB0  0100               	movlb	0	; () banked
  7072  002BB2  2167               	addwfc	(??___ftge+1)& (0+255),w,b
  7073  002BB4  0100               	movlb	0	; () banked
  7074  002BB6  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
  7075  002BB8  0E80               	movlw	128
  7076  002BBA  0100               	movlb	0	; () banked
  7077  002BBC  2168               	addwfc	(??___ftge+2)& (0+255),w,b
  7078  002BBE  0100               	movlb	0	; () banked
  7079  002BC0  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
  7080  002BC2                     l3105:
  7081                           
  7082                           ; BSR set to: 0
  7083  002BC2  0100               	movlb	0	; () banked
  7084  002BC4  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
  7085  002BC6  D01D               	goto	l3109
  7086                           
  7087                           ; BSR set to: 0
  7088  002BC8  C063  F066         	movff	___ftge@ff2,??___ftge
  7089  002BCC  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
  7090  002BD0  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
  7091  002BD4  0100               	movlb	0	; () banked
  7092  002BD6  1F66               	comf	??___ftge& (0+255),f,b
  7093  002BD8  1F67               	comf	(??___ftge+1)& (0+255),f,b
  7094  002BDA  1F68               	comf	(??___ftge+2)& (0+255),f,b
  7095  002BDC  2B66               	incf	??___ftge& (0+255),f,b
  7096  002BDE  0E00               	movlw	0
  7097  002BE0  2367               	addwfc	(??___ftge+1)& (0+255),f,b
  7098  002BE2  2368               	addwfc	(??___ftge+2)& (0+255),f,b
  7099  002BE4  0E00               	movlw	0
  7100  002BE6  0100               	movlb	0	; () banked
  7101  002BE8  2566               	addwf	??___ftge& (0+255),w,b
  7102  002BEA  0100               	movlb	0	; () banked
  7103  002BEC  6F63               	movwf	___ftge@ff2& (0+255),b
  7104  002BEE  0E00               	movlw	0
  7105  002BF0  0100               	movlb	0	; () banked
  7106  002BF2  2167               	addwfc	(??___ftge+1)& (0+255),w,b
  7107  002BF4  0100               	movlb	0	; () banked
  7108  002BF6  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  7109  002BF8  0E80               	movlw	128
  7110  002BFA  0100               	movlb	0	; () banked
  7111  002BFC  2168               	addwfc	(??___ftge+2)& (0+255),w,b
  7112  002BFE  0100               	movlb	0	; () banked
  7113  002C00  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  7114  002C02                     l3109:
  7115                           
  7116                           ; BSR set to: 0
  7117  002C02  0E00               	movlw	0
  7118  002C04  0100               	movlb	0	; () banked
  7119  002C06  1B60               	xorwf	___ftge@ff1& (0+255),f,b
  7120  002C08  0E00               	movlw	0
  7121  002C0A  0100               	movlb	0	; () banked
  7122  002C0C  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  7123  002C0E  0E80               	movlw	128
  7124  002C10  0100               	movlb	0	; () banked
  7125  002C12  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  7126                           
  7127                           ; BSR set to: 0
  7128  002C14  0E00               	movlw	0
  7129  002C16  0100               	movlb	0	; () banked
  7130  002C18  1B63               	xorwf	___ftge@ff2& (0+255),f,b
  7131  002C1A  0E00               	movlw	0
  7132  002C1C  0100               	movlb	0	; () banked
  7133  002C1E  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  7134  002C20  0E80               	movlw	128
  7135  002C22  0100               	movlb	0	; () banked
  7136  002C24  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  7137  002C26  0100               	movlb	0	; () banked
  7138  002C28  5163               	movf	___ftge@ff2& (0+255),w,b
  7139  002C2A  0100               	movlb	0	; () banked
  7140  002C2C  5D60               	subwf	___ftge@ff1& (0+255),w,b
  7141  002C2E  0100               	movlb	0	; () banked
  7142  002C30  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
  7143  002C32  0100               	movlb	0	; () banked
  7144  002C34  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  7145  002C36  0100               	movlb	0	; () banked
  7146  002C38  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
  7147  002C3A  0100               	movlb	0	; () banked
  7148  002C3C  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  7149  002C3E  B0D8               	btfsc	status,0,c
  7150  002C40  D002               	goto	l3115
  7151                           
  7152                           ; BSR set to: 0
  7153  002C42  90D8               	bcf	status,0,c
  7154  002C44  0012               	return	
  7155  002C46                     l3115:
  7156                           
  7157                           ; BSR set to: 0
  7158  002C46  80D8               	bsf	status,0,c
  7159                           
  7160                           ; BSR set to: 0
  7161  002C48  0012               	return	
  7162  002C4A                     __end_of___ftge:
  7163                           	opt stack 0
  7164                           tblptru	equ	0xFF8
  7165                           tblptrh	equ	0xFF7
  7166                           tblptrl	equ	0xFF6
  7167                           tablat	equ	0xFF5
  7168                           prodh	equ	0xFF4
  7169                           prodl	equ	0xFF3
  7170                           intcon	equ	0xFF2
  7171                           postinc0	equ	0xFEE
  7172                           wreg	equ	0xFE8
  7173                           postdec1	equ	0xFE5
  7174                           fsr1l	equ	0xFE1
  7175                           indf2	equ	0xFDF
  7176                           postinc2	equ	0xFDE
  7177                           postdec2	equ	0xFDD
  7178                           fsr2h	equ	0xFDA
  7179                           fsr2l	equ	0xFD9
  7180                           status	equ	0xFD8
  7181                           
  7182 ;; *************** function _lcd_sendString *****************
  7183 ;; Defined at:
  7184 ;;		line 74 in file "lcd.c"
  7185 ;; Parameters:    Size  Location     Type
  7186 ;;  a               2    4[BANK0 ] PTR const unsigned char 
  7187 ;;		 -> ftoa@buf(17), lcd_sendUInt@displayString(10), lcd_sendInt@displayString(10), main@cap_string(16), 
  7188 ;; Auto vars:     Size  Location     Type
  7189 ;;  i               2    6[BANK0 ] int 
  7190 ;; Return value:  Size  Location     Type
  7191 ;;                  1    wreg      void 
  7192 ;; Registers used:
  7193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7194 ;; Tracked objects:
  7195 ;;		On entry : 0/0
  7196 ;;		On exit  : 0/0
  7197 ;;		Unchanged: 0/0
  7198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7199 ;;      Params:         0       2       0       0       0       0       0
  7200 ;;      Locals:         0       2       0       0       0       0       0
  7201 ;;      Temps:          0       0       0       0       0       0       0
  7202 ;;      Totals:         0       4       0       0       0       0       0
  7203 ;;Total ram usage:        4 bytes
  7204 ;; Hardware stack levels used:    1
  7205 ;; Hardware stack levels required when called:    6
  7206 ;; This function calls:
  7207 ;;		_lcd_sendChar
  7208 ;; This function is called by:
  7209 ;;		_main
  7210 ;;		_lcd_sendStringToPos
  7211 ;;		_lcd_sendInt
  7212 ;;		_lcd_sendFloat
  7213 ;;		_lcd_sendUInt
  7214 ;; This function uses a non-reentrant model
  7215 ;;
  7216                           
  7217                           	psect	text19
  7218  0030F0                     __ptext19:
  7219                           	opt stack 0
  7220  0030F0                     _lcd_sendString:
  7221                           	opt stack 24
  7222                           
  7223                           ;lcd.c: 76: int i;
  7224                           ;lcd.c: 77: for(i=0;a[i]!='\0';i++)
  7225                           
  7226                           ; BSR set to: 0
  7227                           ;incstack = 0
  7228  0030F0  0E00               	movlw	0
  7229  0030F2  0100               	movlb	0	; () banked
  7230  0030F4  6F67               	movwf	(lcd_sendString@i+1)& (0+255),b
  7231  0030F6  0E00               	movlw	0
  7232  0030F8  6F66               	movwf	lcd_sendString@i& (0+255),b
  7233  0030FA  D010               	goto	l3757
  7234  0030FC                     l3753:
  7235                           
  7236                           ; BSR set to: 0
  7237                           ;lcd.c: 78: lcd_sendChar(a[i]);
  7238  0030FC  0100               	movlb	0	; () banked
  7239  0030FE  5166               	movf	lcd_sendString@i& (0+255),w,b
  7240  003100  0100               	movlb	0	; () banked
  7241  003102  2564               	addwf	lcd_sendString@a& (0+255),w,b
  7242  003104  6ED9               	movwf	fsr2l,c
  7243  003106  0100               	movlb	0	; () banked
  7244  003108  5167               	movf	(lcd_sendString@i+1)& (0+255),w,b
  7245  00310A  0100               	movlb	0	; () banked
  7246  00310C  2165               	addwfc	(lcd_sendString@a+1)& (0+255),w,b
  7247  00310E  6EDA               	movwf	fsr2h,c
  7248  003110  50DF               	movf	indf2,w,c
  7249  003112  EC9C  F018         	call	_lcd_sendChar
  7250  003116  0100               	movlb	0	; () banked
  7251  003118  4B66               	infsnz	lcd_sendString@i& (0+255),f,b
  7252  00311A  2B67               	incf	(lcd_sendString@i+1)& (0+255),f,b
  7253  00311C                     l3757:
  7254                           
  7255                           ; BSR set to: 0
  7256  00311C  0100               	movlb	0	; () banked
  7257  00311E  5166               	movf	lcd_sendString@i& (0+255),w,b
  7258  003120  0100               	movlb	0	; () banked
  7259  003122  2564               	addwf	lcd_sendString@a& (0+255),w,b
  7260  003124  6ED9               	movwf	fsr2l,c
  7261  003126  0100               	movlb	0	; () banked
  7262  003128  5167               	movf	(lcd_sendString@i+1)& (0+255),w,b
  7263  00312A  0100               	movlb	0	; () banked
  7264  00312C  2165               	addwfc	(lcd_sendString@a+1)& (0+255),w,b
  7265  00312E  6EDA               	movwf	fsr2h,c
  7266  003130  50DF               	movf	indf2,w,c
  7267  003132  B4D8               	btfsc	status,2,c
  7268  003134  0012               	return	
  7269  003136  D7E2               	goto	l3753
  7270  003138                     __end_of_lcd_sendString:
  7271                           	opt stack 0
  7272                           tblptru	equ	0xFF8
  7273                           tblptrh	equ	0xFF7
  7274                           tblptrl	equ	0xFF6
  7275                           tablat	equ	0xFF5
  7276                           prodh	equ	0xFF4
  7277                           prodl	equ	0xFF3
  7278                           intcon	equ	0xFF2
  7279                           postinc0	equ	0xFEE
  7280                           wreg	equ	0xFE8
  7281                           postdec1	equ	0xFE5
  7282                           fsr1l	equ	0xFE1
  7283                           indf2	equ	0xFDF
  7284                           postinc2	equ	0xFDE
  7285                           postdec2	equ	0xFDD
  7286                           fsr2h	equ	0xFDA
  7287                           fsr2l	equ	0xFD9
  7288                           status	equ	0xFD8
  7289                           
  7290 ;; *************** function _lcd_sendChar *****************
  7291 ;; Defined at:
  7292 ;;		line 58 in file "lcd.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;  a               1    wreg     const unsigned char 
  7295 ;; Auto vars:     Size  Location     Type
  7296 ;;  a               1    3[BANK0 ] const unsigned char 
  7297 ;;  y               1    2[BANK0 ] unsigned char 
  7298 ;;  temp            1    1[BANK0 ] unsigned char 
  7299 ;; Return value:  Size  Location     Type
  7300 ;;                  1    wreg      void 
  7301 ;; Registers used:
  7302 ;;		wreg, status,2, status,0, cstack
  7303 ;; Tracked objects:
  7304 ;;		On entry : 0/0
  7305 ;;		On exit  : 0/0
  7306 ;;		Unchanged: 0/0
  7307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7308 ;;      Params:         0       0       0       0       0       0       0
  7309 ;;      Locals:         0       3       0       0       0       0       0
  7310 ;;      Temps:          0       0       0       0       0       0       0
  7311 ;;      Totals:         0       3       0       0       0       0       0
  7312 ;;Total ram usage:        3 bytes
  7313 ;; Hardware stack levels used:    1
  7314 ;; Hardware stack levels required when called:    5
  7315 ;; This function calls:
  7316 ;;		__lcd_Port
  7317 ;; This function is called by:
  7318 ;;		_lcd_sendString
  7319 ;; This function uses a non-reentrant model
  7320 ;;
  7321                           
  7322                           	psect	text20
  7323  003138                     __ptext20:
  7324                           	opt stack 0
  7325  003138                     _lcd_sendChar:
  7326                           	opt stack 24
  7327                           
  7328                           ; BSR set to: 0
  7329                           ;incstack = 0
  7330                           ;lcd_sendChar@a stored from wreg
  7331  003138  0100               	movlb	0	; () banked
  7332  00313A  6F63               	movwf	lcd_sendChar@a& (0+255),b
  7333                           
  7334                           ;lcd.c: 60: char temp,y;
  7335                           ;lcd.c: 61: temp = a&0x0F;
  7336  00313C  0100               	movlb	0	; () banked
  7337  00313E  5163               	movf	lcd_sendChar@a& (0+255),w,b
  7338  003140  0B0F               	andlw	15
  7339  003142  0100               	movlb	0	; () banked
  7340  003144  6F61               	movwf	lcd_sendChar@temp& (0+255),b
  7341                           
  7342                           ;lcd.c: 62: y = a&0xF0;
  7343  003146  0100               	movlb	0	; () banked
  7344  003148  5163               	movf	lcd_sendChar@a& (0+255),w,b
  7345  00314A  0BF0               	andlw	240
  7346  00314C  0100               	movlb	0	; () banked
  7347  00314E  6F62               	movwf	lcd_sendChar@y& (0+255),b
  7348                           
  7349                           ; BSR set to: 0
  7350                           ;lcd.c: 63: LATAbits.LA4 = 1;
  7351  003150  8889               	bsf	3977,4,c	;volatile
  7352                           
  7353                           ; BSR set to: 0
  7354                           ;lcd.c: 64: _lcd_Port(y>>4);
  7355  003152  0100               	movlb	0	; () banked
  7356  003154  3962               	swapf	lcd_sendChar@y& (0+255),w,b
  7357  003156  0B0F               	andlw	15
  7358  003158  EC3C  F019         	call	__lcd_Port
  7359                           
  7360                           ;lcd.c: 65: LATAbits.LA5 = 1;
  7361  00315C  8A89               	bsf	3977,5,c	;volatile
  7362                           
  7363                           ;lcd.c: 66: _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  7364  00315E  0E35               	movlw	53
  7365  003160                     u4407:
  7366  003160  2EE8               	decfsz	wreg,f,c
  7367  003162  D7FE               	goto	u4407
  7368  003164  F000               	nop	
  7369                           
  7370                           ;lcd.c: 67: LATAbits.LA5 = 0;
  7371  003166  9A89               	bcf	3977,5,c	;volatile
  7372                           
  7373                           ;lcd.c: 68: _lcd_Port(temp);
  7374  003168  0100               	movlb	0	; () banked
  7375  00316A  5161               	movf	lcd_sendChar@temp& (0+255),w,b
  7376  00316C  EC3C  F019         	call	__lcd_Port
  7377                           
  7378                           ;lcd.c: 69: LATAbits.LA5 = 1;
  7379  003170  8A89               	bsf	3977,5,c	;volatile
  7380                           
  7381                           ;lcd.c: 70: _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  7382  003172  0E35               	movlw	53
  7383  003174                     u4417:
  7384  003174  2EE8               	decfsz	wreg,f,c
  7385  003176  D7FE               	goto	u4417
  7386  003178  F000               	nop	
  7387                           
  7388                           ;lcd.c: 71: LATAbits.LA5 = 0;
  7389  00317A  9A89               	bcf	3977,5,c	;volatile
  7390  00317C  0012               	return		;funcret
  7391  00317E                     __end_of_lcd_sendChar:
  7392                           	opt stack 0
  7393                           tblptru	equ	0xFF8
  7394                           tblptrh	equ	0xFF7
  7395                           tblptrl	equ	0xFF6
  7396                           tablat	equ	0xFF5
  7397                           prodh	equ	0xFF4
  7398                           prodl	equ	0xFF3
  7399                           intcon	equ	0xFF2
  7400                           postinc0	equ	0xFEE
  7401                           wreg	equ	0xFE8
  7402                           postdec1	equ	0xFE5
  7403                           fsr1l	equ	0xFE1
  7404                           indf2	equ	0xFDF
  7405                           postinc2	equ	0xFDE
  7406                           postdec2	equ	0xFDD
  7407                           fsr2h	equ	0xFDA
  7408                           fsr2l	equ	0xFD9
  7409                           status	equ	0xFD8
  7410                           
  7411 ;; *************** function _lcd_init *****************
  7412 ;; Defined at:
  7413 ;;		line 39 in file "lcd.c"
  7414 ;; Parameters:    Size  Location     Type
  7415 ;;		None
  7416 ;; Auto vars:     Size  Location     Type
  7417 ;;		None
  7418 ;; Return value:  Size  Location     Type
  7419 ;;                  1    wreg      void 
  7420 ;; Registers used:
  7421 ;;		wreg, status,2, cstack
  7422 ;; Tracked objects:
  7423 ;;		On entry : 0/0
  7424 ;;		On exit  : 0/0
  7425 ;;		Unchanged: 0/0
  7426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7427 ;;      Params:         0       0       0       0       0       0       0
  7428 ;;      Locals:         0       0       0       0       0       0       0
  7429 ;;      Temps:          0       1       0       0       0       0       0
  7430 ;;      Totals:         0       1       0       0       0       0       0
  7431 ;;Total ram usage:        1 bytes
  7432 ;; Hardware stack levels used:    1
  7433 ;; Hardware stack levels required when called:    6
  7434 ;; This function calls:
  7435 ;;		__lcd_Port
  7436 ;;		_lcd_sendCommand
  7437 ;; This function is called by:
  7438 ;;		_main
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           	psect	text21
  7443  00302A                     __ptext21:
  7444                           	opt stack 0
  7445  00302A                     _lcd_init:
  7446                           	opt stack 24
  7447                           
  7448                           ;lcd.c: 41: _lcd_Port(0x00);
  7449                           
  7450                           ;incstack = 0
  7451  00302A  0E00               	movlw	0
  7452  00302C  EC3C  F019         	call	__lcd_Port
  7453                           
  7454                           ;lcd.c: 42: _delay((unsigned long)((20)*(16000000UL/4000.0)));
  7455  003030  0E68               	movlw	104
  7456  003032  0100               	movlb	0	; () banked
  7457  003034  6F63               	movwf	??_lcd_init& (0+255),b
  7458  003036  0EE4               	movlw	228
  7459  003038                     u4427:
  7460  003038  2EE8               	decfsz	wreg,f,c
  7461  00303A  D7FE               	goto	u4427
  7462  00303C  2F63               	decfsz	??_lcd_init& (0+255),f,b
  7463  00303E  D7FC               	goto	u4427
  7464  003040  D000               	nop2	
  7465                           
  7466                           ;lcd.c: 43: lcd_sendCommand(0x03);
  7467  003042  0E03               	movlw	3
  7468  003044  ECB4  F019         	call	_lcd_sendCommand
  7469                           
  7470                           ;lcd.c: 44: _delay((unsigned long)((5)*(16000000UL/4000.0)));
  7471  003048  0E1A               	movlw	26
  7472  00304A  0100               	movlb	0	; () banked
  7473  00304C  6F63               	movwf	??_lcd_init& (0+255),b
  7474  00304E  0EF8               	movlw	248
  7475  003050                     u4437:
  7476  003050  2EE8               	decfsz	wreg,f,c
  7477  003052  D7FE               	goto	u4437
  7478  003054  2F63               	decfsz	??_lcd_init& (0+255),f,b
  7479  003056  D7FC               	goto	u4437
  7480  003058  D000               	nop2	
  7481                           
  7482                           ;lcd.c: 45: lcd_sendCommand(0x03);
  7483  00305A  0E03               	movlw	3
  7484  00305C  ECB4  F019         	call	_lcd_sendCommand
  7485                           
  7486                           ;lcd.c: 46: _delay((unsigned long)((11)*(16000000UL/4000.0)));
  7487  003060  0E3A               	movlw	58
  7488  003062  0100               	movlb	0	; () banked
  7489  003064  6F63               	movwf	??_lcd_init& (0+255),b
  7490  003066  0E23               	movlw	35
  7491  003068                     u4447:
  7492  003068  2EE8               	decfsz	wreg,f,c
  7493  00306A  D7FE               	goto	u4447
  7494  00306C  2F63               	decfsz	??_lcd_init& (0+255),f,b
  7495  00306E  D7FC               	goto	u4447
  7496  003070  F000               	nop	
  7497                           
  7498                           ;lcd.c: 47: lcd_sendCommand(0x03);
  7499  003072  0E03               	movlw	3
  7500  003074  ECB4  F019         	call	_lcd_sendCommand
  7501                           
  7502                           ;lcd.c: 49: lcd_sendCommand(0x02);
  7503  003078  0E02               	movlw	2
  7504  00307A  ECB4  F019         	call	_lcd_sendCommand
  7505                           
  7506                           ;lcd.c: 50: lcd_sendCommand(0x02);
  7507  00307E  0E02               	movlw	2
  7508  003080  ECB4  F019         	call	_lcd_sendCommand
  7509                           
  7510                           ;lcd.c: 51: lcd_sendCommand(0x08);
  7511  003084  0E08               	movlw	8
  7512  003086  ECB4  F019         	call	_lcd_sendCommand
  7513                           
  7514                           ;lcd.c: 52: lcd_sendCommand(0x00);
  7515  00308A  0E00               	movlw	0
  7516  00308C  ECB4  F019         	call	_lcd_sendCommand
  7517                           
  7518                           ;lcd.c: 53: lcd_sendCommand(0x0C);
  7519  003090  0E0C               	movlw	12
  7520  003092  ECB4  F019         	call	_lcd_sendCommand
  7521                           
  7522                           ;lcd.c: 54: lcd_sendCommand(0x00);
  7523  003096  0E00               	movlw	0
  7524  003098  ECB4  F019         	call	_lcd_sendCommand
  7525                           
  7526                           ;lcd.c: 55: lcd_sendCommand(0x06);
  7527  00309C  0E06               	movlw	6
  7528  00309E  ECB4  F019         	call	_lcd_sendCommand
  7529  0030A2  0012               	return		;funcret
  7530  0030A4                     __end_of_lcd_init:
  7531                           	opt stack 0
  7532                           tblptru	equ	0xFF8
  7533                           tblptrh	equ	0xFF7
  7534                           tblptrl	equ	0xFF6
  7535                           tablat	equ	0xFF5
  7536                           prodh	equ	0xFF4
  7537                           prodl	equ	0xFF3
  7538                           intcon	equ	0xFF2
  7539                           postinc0	equ	0xFEE
  7540                           wreg	equ	0xFE8
  7541                           postdec1	equ	0xFE5
  7542                           fsr1l	equ	0xFE1
  7543                           indf2	equ	0xFDF
  7544                           postinc2	equ	0xFDE
  7545                           postdec2	equ	0xFDD
  7546                           fsr2h	equ	0xFDA
  7547                           fsr2l	equ	0xFD9
  7548                           status	equ	0xFD8
  7549                           
  7550 ;; *************** function _lcd_clear *****************
  7551 ;; Defined at:
  7552 ;;		line 12 in file "lcd.c"
  7553 ;; Parameters:    Size  Location     Type
  7554 ;;		None
  7555 ;; Auto vars:     Size  Location     Type
  7556 ;;		None
  7557 ;; Return value:  Size  Location     Type
  7558 ;;                  1    wreg      void 
  7559 ;; Registers used:
  7560 ;;		wreg, status,2, cstack
  7561 ;; Tracked objects:
  7562 ;;		On entry : 0/0
  7563 ;;		On exit  : 0/0
  7564 ;;		Unchanged: 0/0
  7565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7566 ;;      Params:         0       0       0       0       0       0       0
  7567 ;;      Locals:         0       0       0       0       0       0       0
  7568 ;;      Temps:          0       0       0       0       0       0       0
  7569 ;;      Totals:         0       0       0       0       0       0       0
  7570 ;;Total ram usage:        0 bytes
  7571 ;; Hardware stack levels used:    1
  7572 ;; Hardware stack levels required when called:    6
  7573 ;; This function calls:
  7574 ;;		_lcd_sendCommand
  7575 ;; This function is called by:
  7576 ;;		_main
  7577 ;; This function uses a non-reentrant model
  7578 ;;
  7579                           
  7580                           	psect	text22
  7581  003416                     __ptext22:
  7582                           	opt stack 0
  7583  003416                     _lcd_clear:
  7584                           	opt stack 24
  7585                           
  7586                           ;lcd.c: 14: lcd_sendCommand(0);
  7587                           
  7588                           ;incstack = 0
  7589  003416  0E00               	movlw	0
  7590  003418  ECB4  F019         	call	_lcd_sendCommand
  7591                           
  7592                           ;lcd.c: 15: lcd_sendCommand(1);
  7593  00341C  0E01               	movlw	1
  7594  00341E  ECB4  F019         	call	_lcd_sendCommand
  7595  003422  0012               	return		;funcret
  7596  003424                     __end_of_lcd_clear:
  7597                           	opt stack 0
  7598                           tblptru	equ	0xFF8
  7599                           tblptrh	equ	0xFF7
  7600                           tblptrl	equ	0xFF6
  7601                           tablat	equ	0xFF5
  7602                           prodh	equ	0xFF4
  7603                           prodl	equ	0xFF3
  7604                           intcon	equ	0xFF2
  7605                           postinc0	equ	0xFEE
  7606                           wreg	equ	0xFE8
  7607                           postdec1	equ	0xFE5
  7608                           fsr1l	equ	0xFE1
  7609                           indf2	equ	0xFDF
  7610                           postinc2	equ	0xFDE
  7611                           postdec2	equ	0xFDD
  7612                           fsr2h	equ	0xFDA
  7613                           fsr2l	equ	0xFD9
  7614                           status	equ	0xFD8
  7615                           
  7616 ;; *************** function _lcd_sendCommand *****************
  7617 ;; Defined at:
  7618 ;;		line 3 in file "lcd.c"
  7619 ;; Parameters:    Size  Location     Type
  7620 ;;  a               1    wreg     unsigned char 
  7621 ;; Auto vars:     Size  Location     Type
  7622 ;;  a               1    2[BANK0 ] unsigned char 
  7623 ;; Return value:  Size  Location     Type
  7624 ;;                  1    wreg      void 
  7625 ;; Registers used:
  7626 ;;		wreg, status,2, cstack
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7632 ;;      Params:         0       0       0       0       0       0       0
  7633 ;;      Locals:         0       1       0       0       0       0       0
  7634 ;;      Temps:          0       1       0       0       0       0       0
  7635 ;;      Totals:         0       2       0       0       0       0       0
  7636 ;;Total ram usage:        2 bytes
  7637 ;; Hardware stack levels used:    1
  7638 ;; Hardware stack levels required when called:    5
  7639 ;; This function calls:
  7640 ;;		__lcd_Port
  7641 ;; This function is called by:
  7642 ;;		_lcd_clear
  7643 ;;		_lcd_init
  7644 ;;		_lcd_setPosition
  7645 ;;		_lcd_shiftRight
  7646 ;;		_lcd_shiftLeft
  7647 ;; This function uses a non-reentrant model
  7648 ;;
  7649                           
  7650                           	psect	text23
  7651  003368                     __ptext23:
  7652                           	opt stack 0
  7653  003368                     _lcd_sendCommand:
  7654                           	opt stack 24
  7655                           
  7656                           ;incstack = 0
  7657                           ;lcd_sendCommand@a stored from wreg
  7658  003368  0100               	movlb	0	; () banked
  7659  00336A  6F62               	movwf	lcd_sendCommand@a& (0+255),b
  7660                           
  7661                           ;lcd.c: 5: LATAbits.LA4 = 0;
  7662  00336C  9889               	bcf	3977,4,c	;volatile
  7663                           
  7664                           ;lcd.c: 6: _lcd_Port(a);
  7665  00336E  0100               	movlb	0	; () banked
  7666  003370  5162               	movf	lcd_sendCommand@a& (0+255),w,b
  7667  003372  EC3C  F019         	call	__lcd_Port
  7668                           
  7669                           ;lcd.c: 7: LATAbits.LA5 = 1;
  7670  003376  8A89               	bsf	3977,5,c	;volatile
  7671                           
  7672                           ;lcd.c: 8: _delay((unsigned long)((4)*(16000000UL/4000.0)));
  7673  003378  0E15               	movlw	21
  7674  00337A  0100               	movlb	0	; () banked
  7675  00337C  6F61               	movwf	??_lcd_sendCommand& (0+255),b
  7676  00337E  0EC6               	movlw	198
  7677  003380                     u4457:
  7678  003380  2EE8               	decfsz	wreg,f,c
  7679  003382  D7FE               	goto	u4457
  7680  003384  2F61               	decfsz	??_lcd_sendCommand& (0+255),f,b
  7681  003386  D7FC               	goto	u4457
  7682  003388  D000               	nop2	
  7683                           
  7684                           ;lcd.c: 9: LATAbits.LA5 = 0;
  7685  00338A  9A89               	bcf	3977,5,c	;volatile
  7686  00338C  0012               	return		;funcret
  7687  00338E                     __end_of_lcd_sendCommand:
  7688                           	opt stack 0
  7689                           tblptru	equ	0xFF8
  7690                           tblptrh	equ	0xFF7
  7691                           tblptrl	equ	0xFF6
  7692                           tablat	equ	0xFF5
  7693                           prodh	equ	0xFF4
  7694                           prodl	equ	0xFF3
  7695                           intcon	equ	0xFF2
  7696                           postinc0	equ	0xFEE
  7697                           wreg	equ	0xFE8
  7698                           postdec1	equ	0xFE5
  7699                           fsr1l	equ	0xFE1
  7700                           indf2	equ	0xFDF
  7701                           postinc2	equ	0xFDE
  7702                           postdec2	equ	0xFDD
  7703                           fsr2h	equ	0xFDA
  7704                           fsr2l	equ	0xFD9
  7705                           status	equ	0xFD8
  7706                           
  7707 ;; *************** function __lcd_Port *****************
  7708 ;; Defined at:
  7709 ;;		line 139 in file "lcd.c"
  7710 ;; Parameters:    Size  Location     Type
  7711 ;;  a               1    wreg     unsigned char 
  7712 ;; Auto vars:     Size  Location     Type
  7713 ;;  a               1    0[BANK0 ] unsigned char 
  7714 ;; Return value:  Size  Location     Type
  7715 ;;                  1    wreg      void 
  7716 ;; Registers used:
  7717 ;;		wreg
  7718 ;; Tracked objects:
  7719 ;;		On entry : 0/0
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7723 ;;      Params:         0       0       0       0       0       0       0
  7724 ;;      Locals:         0       1       0       0       0       0       0
  7725 ;;      Temps:          0       0       0       0       0       0       0
  7726 ;;      Totals:         0       1       0       0       0       0       0
  7727 ;;Total ram usage:        1 bytes
  7728 ;; Hardware stack levels used:    1
  7729 ;; Hardware stack levels required when called:    4
  7730 ;; This function calls:
  7731 ;;		Nothing
  7732 ;; This function is called by:
  7733 ;;		_lcd_sendCommand
  7734 ;;		_lcd_init
  7735 ;;		_lcd_sendChar
  7736 ;; This function uses a non-reentrant model
  7737 ;;
  7738                           
  7739                           	psect	text24
  7740  003278                     __ptext24:
  7741                           	opt stack 0
  7742  003278                     __lcd_Port:
  7743                           	opt stack 24
  7744                           
  7745                           ;incstack = 0
  7746                           ;__lcd_Port@a stored from wreg
  7747  003278  0100               	movlb	0	; () banked
  7748  00327A  6F60               	movwf	__lcd_Port@a& (0+255),b
  7749                           
  7750                           ;lcd.c: 141: if(a & 1)
  7751  00327C  0100               	movlb	0	; () banked
  7752  00327E  A160               	btfss	__lcd_Port@a& (0+255),0,b
  7753  003280  D002               	goto	l305
  7754                           
  7755                           ; BSR set to: 0
  7756                           ;lcd.c: 142: LATAbits.LA0 = 1;
  7757  003282  8089               	bsf	3977,0,c	;volatile
  7758  003284  D001               	goto	l2577
  7759  003286                     l305:
  7760                           
  7761                           ; BSR set to: 0
  7762                           ;lcd.c: 143: else
  7763                           ;lcd.c: 144: LATAbits.LA0 = 0;
  7764  003286  9089               	bcf	3977,0,c	;volatile
  7765  003288                     l2577:
  7766                           
  7767                           ; BSR set to: 0
  7768                           ;lcd.c: 146: if(a & 2)
  7769  003288  0100               	movlb	0	; () banked
  7770  00328A  A360               	btfss	__lcd_Port@a& (0+255),1,b
  7771  00328C  D002               	goto	l307
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;lcd.c: 147: LATAbits.LA1 = 1;
  7775  00328E  8289               	bsf	3977,1,c	;volatile
  7776  003290  D001               	goto	l2581
  7777  003292                     l307:
  7778                           
  7779                           ; BSR set to: 0
  7780                           ;lcd.c: 148: else
  7781                           ;lcd.c: 149: LATAbits.LA1 = 0;
  7782  003292  9289               	bcf	3977,1,c	;volatile
  7783  003294                     l2581:
  7784                           
  7785                           ; BSR set to: 0
  7786                           ;lcd.c: 151: if(a & 4)
  7787  003294  0100               	movlb	0	; () banked
  7788  003296  A560               	btfss	__lcd_Port@a& (0+255),2,b
  7789  003298  D002               	goto	l309
  7790                           
  7791                           ; BSR set to: 0
  7792                           ;lcd.c: 152: LATAbits.LA2 = 1;
  7793  00329A  8489               	bsf	3977,2,c	;volatile
  7794  00329C  D001               	goto	l2585
  7795  00329E                     l309:
  7796                           
  7797                           ; BSR set to: 0
  7798                           ;lcd.c: 153: else
  7799                           ;lcd.c: 154: LATAbits.LA2 = 0;
  7800  00329E  9489               	bcf	3977,2,c	;volatile
  7801  0032A0                     l2585:
  7802                           
  7803                           ; BSR set to: 0
  7804                           ;lcd.c: 156: if(a & 8)
  7805  0032A0  0100               	movlb	0	; () banked
  7806  0032A2  A760               	btfss	__lcd_Port@a& (0+255),3,b
  7807  0032A4  D002               	goto	l311
  7808                           
  7809                           ; BSR set to: 0
  7810                           ;lcd.c: 157: LATAbits.LA3 = 1;
  7811  0032A6  8689               	bsf	3977,3,c	;volatile
  7812  0032A8  0012               	return	
  7813  0032AA                     l311:
  7814                           
  7815                           ; BSR set to: 0
  7816                           ;lcd.c: 158: else
  7817                           ;lcd.c: 159: LATAbits.LA3 = 0;
  7818  0032AA  9689               	bcf	3977,3,c	;volatile
  7819  0032AC  0012               	return	
  7820  0032AE                     __end_of__lcd_Port:
  7821                           	opt stack 0
  7822                           tblptru	equ	0xFF8
  7823                           tblptrh	equ	0xFF7
  7824                           tblptrl	equ	0xFF6
  7825                           tablat	equ	0xFF5
  7826                           prodh	equ	0xFF4
  7827                           prodl	equ	0xFF3
  7828                           intcon	equ	0xFF2
  7829                           postinc0	equ	0xFEE
  7830                           wreg	equ	0xFE8
  7831                           postdec1	equ	0xFE5
  7832                           fsr1l	equ	0xFE1
  7833                           indf2	equ	0xFDF
  7834                           postinc2	equ	0xFDE
  7835                           postdec2	equ	0xFDD
  7836                           fsr2h	equ	0xFDA
  7837                           fsr2l	equ	0xFD9
  7838                           status	equ	0xFD8
  7839                           
  7840 ;; *************** function ___ftdiv *****************
  7841 ;; Defined at:
  7842 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  7843 ;; Parameters:    Size  Location     Type
  7844 ;;  f1              3    8[BANK0 ] float 
  7845 ;;  f2              3   11[BANK0 ] float 
  7846 ;; Auto vars:     Size  Location     Type
  7847 ;;  f3              3   18[BANK0 ] float 
  7848 ;;  sign            1   22[BANK0 ] unsigned char 
  7849 ;;  exp             1   21[BANK0 ] unsigned char 
  7850 ;;  cntr            1   17[BANK0 ] unsigned char 
  7851 ;; Return value:  Size  Location     Type
  7852 ;;                  3    8[BANK0 ] float 
  7853 ;; Registers used:
  7854 ;;		wreg, status,2, status,0, cstack
  7855 ;; Tracked objects:
  7856 ;;		On entry : 0/0
  7857 ;;		On exit  : 0/0
  7858 ;;		Unchanged: 0/0
  7859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7860 ;;      Params:         0       6       0       0       0       0       0
  7861 ;;      Locals:         0       6       0       0       0       0       0
  7862 ;;      Temps:          0       3       0       0       0       0       0
  7863 ;;      Totals:         0      15       0       0       0       0       0
  7864 ;;Total ram usage:       15 bytes
  7865 ;; Hardware stack levels used:    1
  7866 ;; Hardware stack levels required when called:    5
  7867 ;; This function calls:
  7868 ;;		___ftpack
  7869 ;; This function is called by:
  7870 ;;		_main
  7871 ;; This function uses a non-reentrant model
  7872 ;;
  7873                           
  7874                           	psect	text25
  7875  00260C                     __ptext25:
  7876                           	opt stack 0
  7877  00260C                     ___ftdiv:
  7878                           	opt stack 25
  7879                           
  7880                           ; BSR set to: 0
  7881                           ;incstack = 0
  7882  00260C  C06A  F06E         	movff	___ftdiv@f1+2,??___ftdiv
  7883  002610  0100               	movlb	0	; () banked
  7884  002612  6B6F               	clrf	(??___ftdiv+1)& (0+255),b
  7885  002614  6B70               	clrf	(??___ftdiv+2)& (0+255),b
  7886  002616  0100               	movlb	0	; () banked
  7887  002618  3569               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  7888  00261A  0100               	movlb	0	; () banked
  7889  00261C  376E               	rlcf	??___ftdiv& (0+255),f,b
  7890  00261E  E301               	bnc	u4261
  7891  002620  816F               	bsf	(??___ftdiv+1)& (0+255),0,b
  7892  002622                     u4261:
  7893  002622  0100               	movlb	0	; () banked
  7894  002624  516E               	movf	??___ftdiv& (0+255),w,b
  7895  002626  0100               	movlb	0	; () banked
  7896  002628  6F75               	movwf	___ftdiv@exp& (0+255),b
  7897  00262A  0100               	movlb	0	; () banked
  7898  00262C  5175               	movf	___ftdiv@exp& (0+255),w,b
  7899  00262E  A4D8               	btfss	status,2,c
  7900  002630  D00A               	goto	l3793
  7901                           
  7902                           ; BSR set to: 0
  7903  002632  0E00               	movlw	0
  7904  002634  0100               	movlb	0	; () banked
  7905  002636  6F68               	movwf	?___ftdiv& (0+255),b
  7906  002638  0E00               	movlw	0
  7907  00263A  0100               	movlb	0	; () banked
  7908  00263C  6F69               	movwf	(?___ftdiv+1)& (0+255),b
  7909  00263E  0E00               	movlw	0
  7910  002640  0100               	movlb	0	; () banked
  7911  002642  6F6A               	movwf	(?___ftdiv+2)& (0+255),b
  7912                           
  7913                           ; BSR set to: 0
  7914  002644  0012               	return	
  7915  002646                     l3793:
  7916                           
  7917                           ; BSR set to: 0
  7918  002646  C06D  F06E         	movff	___ftdiv@f2+2,??___ftdiv
  7919  00264A  0100               	movlb	0	; () banked
  7920  00264C  6B6F               	clrf	(??___ftdiv+1)& (0+255),b
  7921  00264E  6B70               	clrf	(??___ftdiv+2)& (0+255),b
  7922  002650  0100               	movlb	0	; () banked
  7923  002652  356C               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  7924  002654  0100               	movlb	0	; () banked
  7925  002656  376E               	rlcf	??___ftdiv& (0+255),f,b
  7926  002658  E301               	bnc	u4281
  7927  00265A  816F               	bsf	(??___ftdiv+1)& (0+255),0,b
  7928  00265C                     u4281:
  7929  00265C  0100               	movlb	0	; () banked
  7930  00265E  516E               	movf	??___ftdiv& (0+255),w,b
  7931  002660  0100               	movlb	0	; () banked
  7932  002662  6F76               	movwf	___ftdiv@sign& (0+255),b
  7933  002664  0100               	movlb	0	; () banked
  7934  002666  5176               	movf	___ftdiv@sign& (0+255),w,b
  7935  002668  A4D8               	btfss	status,2,c
  7936  00266A  D00A               	goto	l3799
  7937                           
  7938                           ; BSR set to: 0
  7939  00266C  0E00               	movlw	0
  7940  00266E  0100               	movlb	0	; () banked
  7941  002670  6F68               	movwf	?___ftdiv& (0+255),b
  7942  002672  0E00               	movlw	0
  7943  002674  0100               	movlb	0	; () banked
  7944  002676  6F69               	movwf	(?___ftdiv+1)& (0+255),b
  7945  002678  0E00               	movlw	0
  7946  00267A  0100               	movlb	0	; () banked
  7947  00267C  6F6A               	movwf	(?___ftdiv+2)& (0+255),b
  7948                           
  7949                           ; BSR set to: 0
  7950  00267E  0012               	return	
  7951  002680                     l3799:
  7952                           
  7953                           ; BSR set to: 0
  7954  002680  0E00               	movlw	0
  7955  002682  0100               	movlb	0	; () banked
  7956  002684  6F72               	movwf	___ftdiv@f3& (0+255),b
  7957  002686  0E00               	movlw	0
  7958  002688  0100               	movlb	0	; () banked
  7959  00268A  6F73               	movwf	(___ftdiv@f3+1)& (0+255),b
  7960  00268C  0E00               	movlw	0
  7961  00268E  0100               	movlb	0	; () banked
  7962  002690  6F74               	movwf	(___ftdiv@f3+2)& (0+255),b
  7963                           
  7964                           ; BSR set to: 0
  7965  002692  0100               	movlb	0	; () banked
  7966  002694  5176               	movf	___ftdiv@sign& (0+255),w,b
  7967  002696  0F89               	addlw	137
  7968  002698  0100               	movlb	0	; () banked
  7969  00269A  5F75               	subwf	___ftdiv@exp& (0+255),f,b
  7970                           
  7971                           ; BSR set to: 0
  7972  00269C  C06A  F076         	movff	___ftdiv@f1+2,___ftdiv@sign
  7973                           
  7974                           ; BSR set to: 0
  7975  0026A0  0100               	movlb	0	; () banked
  7976  0026A2  516D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  7977  0026A4  0100               	movlb	0	; () banked
  7978  0026A6  1B76               	xorwf	___ftdiv@sign& (0+255),f,b
  7979                           
  7980                           ; BSR set to: 0
  7981  0026A8  0E80               	movlw	128
  7982  0026AA  0100               	movlb	0	; () banked
  7983  0026AC  1776               	andwf	___ftdiv@sign& (0+255),f,b
  7984                           
  7985                           ; BSR set to: 0
  7986  0026AE  0100               	movlb	0	; () banked
  7987  0026B0  8F69               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  7988                           
  7989                           ; BSR set to: 0
  7990  0026B2  0EFF               	movlw	255
  7991  0026B4  0100               	movlb	0	; () banked
  7992  0026B6  1768               	andwf	___ftdiv@f1& (0+255),f,b
  7993  0026B8  0EFF               	movlw	255
  7994  0026BA  0100               	movlb	0	; () banked
  7995  0026BC  1769               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  7996  0026BE  0E00               	movlw	0
  7997  0026C0  0100               	movlb	0	; () banked
  7998  0026C2  176A               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  7999                           
  8000                           ; BSR set to: 0
  8001  0026C4  0100               	movlb	0	; () banked
  8002  0026C6  8F6C               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  8003                           
  8004                           ; BSR set to: 0
  8005  0026C8  0EFF               	movlw	255
  8006  0026CA  0100               	movlb	0	; () banked
  8007  0026CC  176B               	andwf	___ftdiv@f2& (0+255),f,b
  8008  0026CE  0EFF               	movlw	255
  8009  0026D0  0100               	movlb	0	; () banked
  8010  0026D2  176C               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  8011  0026D4  0E00               	movlw	0
  8012  0026D6  0100               	movlb	0	; () banked
  8013  0026D8  176D               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  8014                           
  8015                           ; BSR set to: 0
  8016  0026DA  0E18               	movlw	24
  8017  0026DC  0100               	movlb	0	; () banked
  8018  0026DE  6F71               	movwf	___ftdiv@cntr& (0+255),b
  8019  0026E0                     l3819:
  8020                           
  8021                           ; BSR set to: 0
  8022  0026E0  0100               	movlb	0	; () banked
  8023  0026E2  90D8               	bcf	status,0,c
  8024  0026E4  3772               	rlcf	___ftdiv@f3& (0+255),f,b
  8025  0026E6  3773               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  8026  0026E8  3774               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  8027                           
  8028                           ; BSR set to: 0
  8029  0026EA  0100               	movlb	0	; () banked
  8030  0026EC  516B               	movf	___ftdiv@f2& (0+255),w,b
  8031  0026EE  0100               	movlb	0	; () banked
  8032  0026F0  5D68               	subwf	___ftdiv@f1& (0+255),w,b
  8033  0026F2  0100               	movlb	0	; () banked
  8034  0026F4  516C               	movf	(___ftdiv@f2+1)& (0+255),w,b
  8035  0026F6  0100               	movlb	0	; () banked
  8036  0026F8  5969               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  8037  0026FA  0100               	movlb	0	; () banked
  8038  0026FC  516D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8039  0026FE  0100               	movlb	0	; () banked
  8040  002700  596A               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  8041  002702  A0D8               	btfss	status,0,c
  8042  002704  D00E               	goto	l734
  8043                           
  8044                           ; BSR set to: 0
  8045  002706  0100               	movlb	0	; () banked
  8046  002708  516B               	movf	___ftdiv@f2& (0+255),w,b
  8047  00270A  0100               	movlb	0	; () banked
  8048  00270C  5F68               	subwf	___ftdiv@f1& (0+255),f,b
  8049  00270E  0100               	movlb	0	; () banked
  8050  002710  516C               	movf	(___ftdiv@f2+1)& (0+255),w,b
  8051  002712  0100               	movlb	0	; () banked
  8052  002714  5B69               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  8053  002716  0100               	movlb	0	; () banked
  8054  002718  516D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8055  00271A  0100               	movlb	0	; () banked
  8056  00271C  5B6A               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  8057                           
  8058                           ; BSR set to: 0
  8059  00271E  0100               	movlb	0	; () banked
  8060  002720  8172               	bsf	___ftdiv@f3& (0+255),0,b
  8061  002722                     l734:
  8062                           
  8063                           ; BSR set to: 0
  8064  002722  0100               	movlb	0	; () banked
  8065  002724  90D8               	bcf	status,0,c
  8066  002726  3768               	rlcf	___ftdiv@f1& (0+255),f,b
  8067  002728  3769               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  8068  00272A  376A               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  8069                           
  8070                           ; BSR set to: 0
  8071  00272C  0100               	movlb	0	; () banked
  8072  00272E  2F71               	decfsz	___ftdiv@cntr& (0+255),f,b
  8073  002730  D7D7               	goto	l3819
  8074                           
  8075                           ; BSR set to: 0
  8076                           
  8077                           ; BSR set to: 0
  8078  002732  C072  F060         	movff	___ftdiv@f3,___ftpack@arg
  8079  002736  C073  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
  8080  00273A  C074  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
  8081  00273E  C075  F063         	movff	___ftdiv@exp,___ftpack@exp
  8082  002742  C076  F064         	movff	___ftdiv@sign,___ftpack@sign
  8083  002746  EC4E  F014         	call	___ftpack	;wreg free
  8084  00274A  C060  F068         	movff	?___ftpack,?___ftdiv
  8085  00274E  C061  F069         	movff	?___ftpack+1,?___ftdiv+1
  8086  002752  C062  F06A         	movff	?___ftpack+2,?___ftdiv+2
  8087  002756  0012               	return	
  8088  002758                     __end_of___ftdiv:
  8089                           	opt stack 0
  8090                           tblptru	equ	0xFF8
  8091                           tblptrh	equ	0xFF7
  8092                           tblptrl	equ	0xFF6
  8093                           tablat	equ	0xFF5
  8094                           prodh	equ	0xFF4
  8095                           prodl	equ	0xFF3
  8096                           intcon	equ	0xFF2
  8097                           postinc0	equ	0xFEE
  8098                           wreg	equ	0xFE8
  8099                           postdec1	equ	0xFE5
  8100                           fsr1l	equ	0xFE1
  8101                           indf2	equ	0xFDF
  8102                           postinc2	equ	0xFDE
  8103                           postdec2	equ	0xFDD
  8104                           fsr2h	equ	0xFDA
  8105                           fsr2l	equ	0xFD9
  8106                           status	equ	0xFD8
  8107                           
  8108 ;; *************** function ___ftpack *****************
  8109 ;; Defined at:
  8110 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;  arg             3    0[BANK0 ] unsigned um
  8113 ;;  exp             1    3[BANK0 ] unsigned char 
  8114 ;;  sign            1    4[BANK0 ] unsigned char 
  8115 ;; Auto vars:     Size  Location     Type
  8116 ;;		None
  8117 ;; Return value:  Size  Location     Type
  8118 ;;                  3    0[BANK0 ] float 
  8119 ;; Registers used:
  8120 ;;		wreg, status,2, status,0
  8121 ;; Tracked objects:
  8122 ;;		On entry : 0/0
  8123 ;;		On exit  : 0/0
  8124 ;;		Unchanged: 0/0
  8125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8126 ;;      Params:         0       5       0       0       0       0       0
  8127 ;;      Locals:         0       0       0       0       0       0       0
  8128 ;;      Temps:          0       3       0       0       0       0       0
  8129 ;;      Totals:         0       8       0       0       0       0       0
  8130 ;;Total ram usage:        8 bytes
  8131 ;; Hardware stack levels used:    1
  8132 ;; Hardware stack levels required when called:    4
  8133 ;; This function calls:
  8134 ;;		Nothing
  8135 ;; This function is called by:
  8136 ;;		___ftadd
  8137 ;;		___ftdiv
  8138 ;;		___ftmul
  8139 ;;		___lltoft
  8140 ;; This function uses a non-reentrant model
  8141 ;;
  8142                           
  8143                           	psect	text26
  8144  00289C                     __ptext26:
  8145                           	opt stack 0
  8146  00289C                     ___ftpack:
  8147                           	opt stack 23
  8148                           
  8149                           ;incstack = 0
  8150  00289C  0100               	movlb	0	; () banked
  8151  00289E  5163               	movf	___ftpack@exp& (0+255),w,b
  8152  0028A0  0100               	movlb	0	; () banked
  8153  0028A2  B4D8               	btfsc	status,2,c
  8154  0028A4  D008               	goto	l2535
  8155                           
  8156                           ; BSR set to: 0
  8157  0028A6  0100               	movlb	0	; () banked
  8158  0028A8  5160               	movf	___ftpack@arg& (0+255),w,b
  8159  0028AA  0100               	movlb	0	; () banked
  8160  0028AC  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  8161  0028AE  0100               	movlb	0	; () banked
  8162  0028B0  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  8163  0028B2  A4D8               	btfss	status,2,c
  8164  0028B4  D011               	goto	l2541
  8165  0028B6                     l2535:
  8166                           
  8167                           ; BSR set to: 0
  8168  0028B6  0E00               	movlw	0
  8169  0028B8  0100               	movlb	0	; () banked
  8170  0028BA  6F60               	movwf	?___ftpack& (0+255),b
  8171  0028BC  0E00               	movlw	0
  8172  0028BE  0100               	movlb	0	; () banked
  8173  0028C0  6F61               	movwf	(?___ftpack+1)& (0+255),b
  8174  0028C2  0E00               	movlw	0
  8175  0028C4  0100               	movlb	0	; () banked
  8176  0028C6  6F62               	movwf	(?___ftpack+2)& (0+255),b
  8177                           
  8178                           ; BSR set to: 0
  8179  0028C8  0012               	return	
  8180  0028CA                     l2539:
  8181                           
  8182                           ; BSR set to: 0
  8183  0028CA  0100               	movlb	0	; () banked
  8184  0028CC  2B63               	incf	___ftpack@exp& (0+255),f,b
  8185  0028CE  0100               	movlb	0	; () banked
  8186  0028D0  90D8               	bcf	status,0,c
  8187  0028D2  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  8188  0028D4  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  8189  0028D6  3360               	rrcf	___ftpack@arg& (0+255),f,b
  8190  0028D8                     l2541:
  8191                           
  8192                           ; BSR set to: 0
  8193  0028D8  0E00               	movlw	0
  8194  0028DA  0100               	movlb	0	; () banked
  8195  0028DC  1560               	andwf	___ftpack@arg& (0+255),w,b
  8196  0028DE  0100               	movlb	0	; () banked
  8197  0028E0  6F65               	movwf	??___ftpack& (0+255),b
  8198  0028E2  0E00               	movlw	0
  8199  0028E4  0100               	movlb	0	; () banked
  8200  0028E6  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  8201  0028E8  0100               	movlb	0	; () banked
  8202  0028EA  6F66               	movwf	(??___ftpack+1)& (0+255),b
  8203  0028EC  0EFE               	movlw	254
  8204  0028EE  0100               	movlb	0	; () banked
  8205  0028F0  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  8206  0028F2  0100               	movlb	0	; () banked
  8207  0028F4  6F67               	movwf	(??___ftpack+2)& (0+255),b
  8208  0028F6  0100               	movlb	0	; () banked
  8209  0028F8  5165               	movf	??___ftpack& (0+255),w,b
  8210  0028FA  0100               	movlb	0	; () banked
  8211  0028FC  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  8212  0028FE  0100               	movlb	0	; () banked
  8213  002900  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  8214  002902  B4D8               	btfsc	status,2,c
  8215  002904  D011               	goto	l2547
  8216  002906  D7E1               	goto	l2539
  8217  002908                     l2543:
  8218                           
  8219                           ; BSR set to: 0
  8220  002908  0100               	movlb	0	; () banked
  8221  00290A  2B63               	incf	___ftpack@exp& (0+255),f,b
  8222                           
  8223                           ; BSR set to: 0
  8224  00290C  0E01               	movlw	1
  8225  00290E  0100               	movlb	0	; () banked
  8226  002910  2760               	addwf	___ftpack@arg& (0+255),f,b
  8227  002912  0E00               	movlw	0
  8228  002914  0100               	movlb	0	; () banked
  8229  002916  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  8230  002918  0E00               	movlw	0
  8231  00291A  0100               	movlb	0	; () banked
  8232  00291C  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  8233  00291E  0100               	movlb	0	; () banked
  8234  002920  90D8               	bcf	status,0,c
  8235  002922  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  8236  002924  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  8237  002926  3360               	rrcf	___ftpack@arg& (0+255),f,b
  8238  002928                     l2547:
  8239                           
  8240                           ; BSR set to: 0
  8241  002928  0E00               	movlw	0
  8242  00292A  0100               	movlb	0	; () banked
  8243  00292C  1560               	andwf	___ftpack@arg& (0+255),w,b
  8244  00292E  0100               	movlb	0	; () banked
  8245  002930  6F65               	movwf	??___ftpack& (0+255),b
  8246  002932  0E00               	movlw	0
  8247  002934  0100               	movlb	0	; () banked
  8248  002936  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  8249  002938  0100               	movlb	0	; () banked
  8250  00293A  6F66               	movwf	(??___ftpack+1)& (0+255),b
  8251  00293C  0EFF               	movlw	255
  8252  00293E  0100               	movlb	0	; () banked
  8253  002940  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  8254  002942  0100               	movlb	0	; () banked
  8255  002944  6F67               	movwf	(??___ftpack+2)& (0+255),b
  8256  002946  0100               	movlb	0	; () banked
  8257  002948  5165               	movf	??___ftpack& (0+255),w,b
  8258  00294A  0100               	movlb	0	; () banked
  8259  00294C  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  8260  00294E  0100               	movlb	0	; () banked
  8261  002950  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  8262  002952  B4D8               	btfsc	status,2,c
  8263  002954  D008               	goto	l2551
  8264  002956  D7D8               	goto	l2543
  8265  002958                     l2549:
  8266                           
  8267                           ; BSR set to: 0
  8268  002958  0100               	movlb	0	; () banked
  8269  00295A  0763               	decf	___ftpack@exp& (0+255),f,b
  8270  00295C  0100               	movlb	0	; () banked
  8271  00295E  90D8               	bcf	status,0,c
  8272  002960  3760               	rlcf	___ftpack@arg& (0+255),f,b
  8273  002962  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  8274  002964  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  8275  002966                     l2551:
  8276                           
  8277                           ; BSR set to: 0
  8278  002966  0100               	movlb	0	; () banked
  8279  002968  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  8280  00296A  D004               	goto	l676
  8281                           
  8282                           ; BSR set to: 0
  8283  00296C  0E02               	movlw	2
  8284  00296E  0100               	movlb	0	; () banked
  8285  002970  6163               	cpfslt	___ftpack@exp& (0+255),b
  8286  002972  D7F2               	goto	l2549
  8287  002974                     l676:
  8288                           
  8289                           ; BSR set to: 0
  8290  002974  0100               	movlb	0	; () banked
  8291  002976  B163               	btfsc	___ftpack@exp& (0+255),0,b
  8292  002978  D002               	goto	l2557
  8293                           
  8294                           ; BSR set to: 0
  8295  00297A  0100               	movlb	0	; () banked
  8296  00297C  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
  8297  00297E                     l2557:
  8298                           
  8299                           ; BSR set to: 0
  8300  00297E  0100               	movlb	0	; () banked
  8301  002980  90D8               	bcf	status,0,c
  8302  002982  3363               	rrcf	___ftpack@exp& (0+255),f,b
  8303  002984  0100               	movlb	0	; () banked
  8304  002986  5163               	movf	___ftpack@exp& (0+255),w,b
  8305  002988  0100               	movlb	0	; () banked
  8306  00298A  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  8307                           
  8308                           ; BSR set to: 0
  8309  00298C  0100               	movlb	0	; () banked
  8310  00298E  5164               	movf	___ftpack@sign& (0+255),w,b
  8311  002990  0100               	movlb	0	; () banked
  8312  002992  B4D8               	btfsc	status,2,c
  8313  002994  D002               	goto	l2563
  8314                           
  8315                           ; BSR set to: 0
  8316  002996  0100               	movlb	0	; () banked
  8317  002998  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
  8318  00299A                     l2563:
  8319                           
  8320                           ; BSR set to: 0
  8321  00299A  C060  F060         	movff	___ftpack@arg,?___ftpack
  8322  00299E  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
  8323  0029A2  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
  8324  0029A6  0012               	return	
  8325  0029A8                     __end_of___ftpack:
  8326                           	opt stack 0
  8327                           tblptru	equ	0xFF8
  8328                           tblptrh	equ	0xFF7
  8329                           tblptrl	equ	0xFF6
  8330                           tablat	equ	0xFF5
  8331                           prodh	equ	0xFF4
  8332                           prodl	equ	0xFF3
  8333                           intcon	equ	0xFF2
  8334                           postinc0	equ	0xFEE
  8335                           wreg	equ	0xFE8
  8336                           postdec1	equ	0xFE5
  8337                           fsr1l	equ	0xFE1
  8338                           indf2	equ	0xFDF
  8339                           postinc2	equ	0xFDE
  8340                           postdec2	equ	0xFDD
  8341                           fsr2h	equ	0xFDA
  8342                           fsr2l	equ	0xFD9
  8343                           status	equ	0xFD8
  8344                           
  8345 ;; *************** function _SYSTEM_Initialize *****************
  8346 ;; Defined at:
  8347 ;;		line 111 in file "mcc_generated_files/mcc.c"
  8348 ;; Parameters:    Size  Location     Type
  8349 ;;		None
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;		None
  8352 ;; Return value:  Size  Location     Type
  8353 ;;                  1    wreg      void 
  8354 ;; Registers used:
  8355 ;;		wreg, status,2, status,0, cstack
  8356 ;; Tracked objects:
  8357 ;;		On entry : 0/0
  8358 ;;		On exit  : 0/0
  8359 ;;		Unchanged: 0/0
  8360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8361 ;;      Params:         0       0       0       0       0       0       0
  8362 ;;      Locals:         0       0       0       0       0       0       0
  8363 ;;      Temps:          0       0       0       0       0       0       0
  8364 ;;      Totals:         0       0       0       0       0       0       0
  8365 ;;Total ram usage:        0 bytes
  8366 ;; Hardware stack levels used:    1
  8367 ;; Hardware stack levels required when called:    6
  8368 ;; This function calls:
  8369 ;;		_EUSART1_Initialize
  8370 ;;		_EXT_INT_Initialize
  8371 ;;		_INTERRUPT_Initialize
  8372 ;;		_OSCILLATOR_Initialize
  8373 ;;		_PIN_MANAGER_Initialize
  8374 ;;		_TMR0_Initialize
  8375 ;; This function is called by:
  8376 ;;		_main
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380                           	psect	text27
  8381  0033CE                     __ptext27:
  8382                           	opt stack 0
  8383  0033CE                     _SYSTEM_Initialize:
  8384                           	opt stack 24
  8385                           
  8386                           ;mcc.c: 114: INTERRUPT_Initialize();
  8387                           
  8388                           ; BSR set to: 0
  8389                           ;incstack = 0
  8390  0033CE  EC2C  F01A         	call	_INTERRUPT_Initialize	;wreg free
  8391                           
  8392                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  8393  0033D2  EC6F  F019         	call	_PIN_MANAGER_Initialize	;wreg free
  8394                           
  8395                           ;mcc.c: 116: OSCILLATOR_Initialize();
  8396  0033D6  EC12  F01A         	call	_OSCILLATOR_Initialize	;wreg free
  8397                           
  8398                           ;mcc.c: 117: EXT_INT_Initialize();
  8399  0033DA  ECF4  F019         	call	_EXT_INT_Initialize	;wreg free
  8400                           
  8401                           ;mcc.c: 118: TMR0_Initialize();
  8402  0033DE  ECBF  F018         	call	_TMR0_Initialize	;wreg free
  8403                           
  8404                           ;mcc.c: 119: EUSART1_Initialize();
  8405  0033E2  EC00  F01A         	call	_EUSART1_Initialize	;wreg free
  8406  0033E6  0012               	return		;funcret
  8407  0033E8                     __end_of_SYSTEM_Initialize:
  8408                           	opt stack 0
  8409                           tblptru	equ	0xFF8
  8410                           tblptrh	equ	0xFF7
  8411                           tblptrl	equ	0xFF6
  8412                           tablat	equ	0xFF5
  8413                           prodh	equ	0xFF4
  8414                           prodl	equ	0xFF3
  8415                           intcon	equ	0xFF2
  8416                           postinc0	equ	0xFEE
  8417                           wreg	equ	0xFE8
  8418                           postdec1	equ	0xFE5
  8419                           fsr1l	equ	0xFE1
  8420                           indf2	equ	0xFDF
  8421                           postinc2	equ	0xFDE
  8422                           postdec2	equ	0xFDD
  8423                           fsr2h	equ	0xFDA
  8424                           fsr2l	equ	0xFD9
  8425                           status	equ	0xFD8
  8426                           
  8427 ;; *************** function _TMR0_Initialize *****************
  8428 ;; Defined at:
  8429 ;;		line 14 in file "mcc_generated_files/tmr0.c"
  8430 ;; Parameters:    Size  Location     Type
  8431 ;;		None
  8432 ;; Auto vars:     Size  Location     Type
  8433 ;;		None
  8434 ;; Return value:  Size  Location     Type
  8435 ;;                  1    wreg      void 
  8436 ;; Registers used:
  8437 ;;		wreg, status,2, status,0, cstack
  8438 ;; Tracked objects:
  8439 ;;		On entry : 0/0
  8440 ;;		On exit  : 0/0
  8441 ;;		Unchanged: 0/0
  8442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8443 ;;      Params:         0       0       0       0       0       0       0
  8444 ;;      Locals:         0       0       0       0       0       0       0
  8445 ;;      Temps:          0       2       0       0       0       0       0
  8446 ;;      Totals:         0       2       0       0       0       0       0
  8447 ;;Total ram usage:        2 bytes
  8448 ;; Hardware stack levels used:    1
  8449 ;; Hardware stack levels required when called:    5
  8450 ;; This function calls:
  8451 ;;		_TMR0_SetInterruptHandler
  8452 ;;		_TMR0_StartTimer
  8453 ;; This function is called by:
  8454 ;;		_SYSTEM_Initialize
  8455 ;; This function uses a non-reentrant model
  8456 ;;
  8457                           
  8458                           	psect	text28
  8459  00317E                     __ptext28:
  8460                           	opt stack 0
  8461  00317E                     _TMR0_Initialize:
  8462                           	opt stack 24
  8463                           
  8464                           ;tmr0.c: 19: T0CON = 0x11;
  8465                           
  8466                           ;incstack = 0
  8467  00317E  0E11               	movlw	17
  8468  003180  6ED5               	movwf	4053,c	;volatile
  8469                           
  8470                           ;tmr0.c: 22: TMR0H = 0x15;
  8471  003182  0E15               	movlw	21
  8472  003184  6ED7               	movwf	4055,c	;volatile
  8473                           
  8474                           ;tmr0.c: 25: TMR0L = 0x9F;
  8475  003186  0E9F               	movlw	159
  8476  003188  6ED6               	movwf	4054,c	;volatile
  8477                           
  8478                           ;tmr0.c: 28: timer0ReloadVal = (TMR0H << 8) | TMR0L;
  8479  00318A  50D6               	movf	4054,w,c	;volatile
  8480  00318C  CFD7 F062          	movff	4055,??_TMR0_Initialize	;volatile
  8481  003190  0100               	movlb	0	; () banked
  8482  003192  6B63               	clrf	(??_TMR0_Initialize+1)& (0+255),b
  8483  003194  C062  F063         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  8484  003198  0100               	movlb	0	; () banked
  8485  00319A  6B62               	clrf	??_TMR0_Initialize& (0+255),b
  8486  00319C  0100               	movlb	0	; () banked
  8487  00319E  1162               	iorwf	??_TMR0_Initialize& (0+255),w,b
  8488  0031A0  6E52               	movwf	_timer0ReloadVal,c	;volatile
  8489  0031A2  0100               	movlb	0	; () banked
  8490  0031A4  5163               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
  8491  0031A6  6E53               	movwf	_timer0ReloadVal+1,c	;volatile
  8492                           
  8493                           ; BSR set to: 0
  8494                           ;tmr0.c: 31: INTCONbits.TMR0IF = 0;
  8495  0031A8  94F2               	bcf	intcon,2,c	;volatile
  8496                           
  8497                           ; BSR set to: 0
  8498                           ;tmr0.c: 34: INTCONbits.TMR0IE = 1;
  8499  0031AA  8AF2               	bsf	intcon,5,c	;volatile
  8500                           
  8501                           ; BSR set to: 0
  8502                           ;tmr0.c: 37: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  8503  0031AC  0EB2               	movlw	low _TMR0_DefaultInterruptHandler
  8504  0031AE  0100               	movlb	0	; () banked
  8505  0031B0  6F60               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  8506  0031B2  0E33               	movlw	high _TMR0_DefaultInterruptHandler
  8507  0031B4  0100               	movlb	0	; () banked
  8508  0031B6  6F61               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8509  0031B8  EC19  F01A         	call	_TMR0_SetInterruptHandler	;wreg free
  8510                           
  8511                           ;tmr0.c: 40: TMR0_StartTimer();
  8512  0031BC  EC2A  F01A         	call	_TMR0_StartTimer	;wreg free
  8513  0031C0  0012               	return		;funcret
  8514  0031C2                     __end_of_TMR0_Initialize:
  8515                           	opt stack 0
  8516                           tblptru	equ	0xFF8
  8517                           tblptrh	equ	0xFF7
  8518                           tblptrl	equ	0xFF6
  8519                           tablat	equ	0xFF5
  8520                           prodh	equ	0xFF4
  8521                           prodl	equ	0xFF3
  8522                           intcon	equ	0xFF2
  8523                           postinc0	equ	0xFEE
  8524                           wreg	equ	0xFE8
  8525                           postdec1	equ	0xFE5
  8526                           fsr1l	equ	0xFE1
  8527                           indf2	equ	0xFDF
  8528                           postinc2	equ	0xFDE
  8529                           postdec2	equ	0xFDD
  8530                           fsr2h	equ	0xFDA
  8531                           fsr2l	equ	0xFD9
  8532                           status	equ	0xFD8
  8533                           
  8534 ;; *************** function _TMR0_StartTimer *****************
  8535 ;; Defined at:
  8536 ;;		line 43 in file "mcc_generated_files/tmr0.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;		None
  8539 ;; Auto vars:     Size  Location     Type
  8540 ;;		None
  8541 ;; Return value:  Size  Location     Type
  8542 ;;                  1    wreg      void 
  8543 ;; Registers used:
  8544 ;;		None
  8545 ;; Tracked objects:
  8546 ;;		On entry : 0/0
  8547 ;;		On exit  : 0/0
  8548 ;;		Unchanged: 0/0
  8549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8550 ;;      Params:         0       0       0       0       0       0       0
  8551 ;;      Locals:         0       0       0       0       0       0       0
  8552 ;;      Temps:          0       0       0       0       0       0       0
  8553 ;;      Totals:         0       0       0       0       0       0       0
  8554 ;;Total ram usage:        0 bytes
  8555 ;; Hardware stack levels used:    1
  8556 ;; Hardware stack levels required when called:    4
  8557 ;; This function calls:
  8558 ;;		Nothing
  8559 ;; This function is called by:
  8560 ;;		_TMR0_Initialize
  8561 ;; This function uses a non-reentrant model
  8562 ;;
  8563                           
  8564                           	psect	text29
  8565  003454                     __ptext29:
  8566                           	opt stack 0
  8567  003454                     _TMR0_StartTimer:
  8568                           	opt stack 24
  8569                           
  8570                           ;tmr0.c: 46: T0CONbits.TMR0ON = 1;
  8571                           
  8572                           ;incstack = 0
  8573  003454  8ED5               	bsf	4053,7,c	;volatile
  8574  003456  0012               	return		;funcret
  8575  003458                     __end_of_TMR0_StartTimer:
  8576                           	opt stack 0
  8577                           tblptru	equ	0xFF8
  8578                           tblptrh	equ	0xFF7
  8579                           tblptrl	equ	0xFF6
  8580                           tablat	equ	0xFF5
  8581                           prodh	equ	0xFF4
  8582                           prodl	equ	0xFF3
  8583                           intcon	equ	0xFF2
  8584                           postinc0	equ	0xFEE
  8585                           wreg	equ	0xFE8
  8586                           postdec1	equ	0xFE5
  8587                           fsr1l	equ	0xFE1
  8588                           indf2	equ	0xFDF
  8589                           postinc2	equ	0xFDE
  8590                           postdec2	equ	0xFDD
  8591                           fsr2h	equ	0xFDA
  8592                           fsr2l	equ	0xFD9
  8593                           status	equ	0xFD8
  8594                           
  8595 ;; *************** function _TMR0_SetInterruptHandler *****************
  8596 ;; Defined at:
  8597 ;;		line 104 in file "mcc_generated_files/tmr0.c"
  8598 ;; Parameters:    Size  Location     Type
  8599 ;;  InterruptHan    2    0[BANK0 ] PTR void 
  8600 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  8601 ;; Auto vars:     Size  Location     Type
  8602 ;;		None
  8603 ;; Return value:  Size  Location     Type
  8604 ;;                  1    wreg      void 
  8605 ;; Registers used:
  8606 ;;		wreg, status,2, status,0
  8607 ;; Tracked objects:
  8608 ;;		On entry : 0/0
  8609 ;;		On exit  : 0/0
  8610 ;;		Unchanged: 0/0
  8611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8612 ;;      Params:         0       2       0       0       0       0       0
  8613 ;;      Locals:         0       0       0       0       0       0       0
  8614 ;;      Temps:          0       0       0       0       0       0       0
  8615 ;;      Totals:         0       2       0       0       0       0       0
  8616 ;;Total ram usage:        2 bytes
  8617 ;; Hardware stack levels used:    1
  8618 ;; Hardware stack levels required when called:    4
  8619 ;; This function calls:
  8620 ;;		Nothing
  8621 ;; This function is called by:
  8622 ;;		_TMR0_Initialize
  8623 ;; This function uses a non-reentrant model
  8624 ;;
  8625                           
  8626                           	psect	text30
  8627  003432                     __ptext30:
  8628                           	opt stack 0
  8629  003432                     _TMR0_SetInterruptHandler:
  8630                           	opt stack 24
  8631                           
  8632                           ;tmr0.c: 105: TMR0_InterruptHandler = InterruptHandler;
  8633                           
  8634                           ;incstack = 0
  8635  003432  C060  F0EB         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  8636  003436  C061  F0EC         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  8637  00343A  0012               	return		;funcret
  8638  00343C                     __end_of_TMR0_SetInterruptHandler:
  8639                           	opt stack 0
  8640                           tblptru	equ	0xFF8
  8641                           tblptrh	equ	0xFF7
  8642                           tblptrl	equ	0xFF6
  8643                           tablat	equ	0xFF5
  8644                           prodh	equ	0xFF4
  8645                           prodl	equ	0xFF3
  8646                           intcon	equ	0xFF2
  8647                           postinc0	equ	0xFEE
  8648                           wreg	equ	0xFE8
  8649                           postdec1	equ	0xFE5
  8650                           fsr1l	equ	0xFE1
  8651                           indf2	equ	0xFDF
  8652                           postinc2	equ	0xFDE
  8653                           postdec2	equ	0xFDD
  8654                           fsr2h	equ	0xFDA
  8655                           fsr2l	equ	0xFD9
  8656                           status	equ	0xFD8
  8657                           
  8658 ;; *************** function _PIN_MANAGER_Initialize *****************
  8659 ;; Defined at:
  8660 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  8661 ;; Parameters:    Size  Location     Type
  8662 ;;		None
  8663 ;; Auto vars:     Size  Location     Type
  8664 ;;		None
  8665 ;; Return value:  Size  Location     Type
  8666 ;;                  1    wreg      void 
  8667 ;; Registers used:
  8668 ;;		wreg, status,2
  8669 ;; Tracked objects:
  8670 ;;		On entry : 0/0
  8671 ;;		On exit  : 0/0
  8672 ;;		Unchanged: 0/0
  8673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8674 ;;      Params:         0       0       0       0       0       0       0
  8675 ;;      Locals:         0       0       0       0       0       0       0
  8676 ;;      Temps:          0       0       0       0       0       0       0
  8677 ;;      Totals:         0       0       0       0       0       0       0
  8678 ;;Total ram usage:        0 bytes
  8679 ;; Hardware stack levels used:    1
  8680 ;; Hardware stack levels required when called:    4
  8681 ;; This function calls:
  8682 ;;		Nothing
  8683 ;; This function is called by:
  8684 ;;		_SYSTEM_Initialize
  8685 ;; This function uses a non-reentrant model
  8686 ;;
  8687                           
  8688                           	psect	text31
  8689  0032DE                     __ptext31:
  8690                           	opt stack 0
  8691  0032DE                     _PIN_MANAGER_Initialize:
  8692                           	opt stack 25
  8693                           
  8694                           ;pin_manager.c: 56: LATA = 0x00;
  8695                           
  8696                           ;incstack = 0
  8697  0032DE  0E00               	movlw	0
  8698  0032E0  6E89               	movwf	3977,c	;volatile
  8699                           
  8700                           ;pin_manager.c: 57: LATB = 0x3E;
  8701  0032E2  0E3E               	movlw	62
  8702  0032E4  6E8A               	movwf	3978,c	;volatile
  8703                           
  8704                           ;pin_manager.c: 58: LATC = 0x1F;
  8705  0032E6  0E1F               	movlw	31
  8706  0032E8  6E8B               	movwf	3979,c	;volatile
  8707                           
  8708                           ;pin_manager.c: 63: TRISA = 0xC0;
  8709  0032EA  0EC0               	movlw	192
  8710  0032EC  6E92               	movwf	3986,c	;volatile
  8711                           
  8712                           ;pin_manager.c: 64: TRISB = 0xC1;
  8713  0032EE  0EC1               	movlw	193
  8714  0032F0  6E93               	movwf	3987,c	;volatile
  8715                           
  8716                           ;pin_manager.c: 65: TRISC = 0xA0;
  8717  0032F2  0EA0               	movlw	160
  8718  0032F4  6E94               	movwf	3988,c	;volatile
  8719                           
  8720                           ;pin_manager.c: 70: ANSELC = 0xA0;
  8721  0032F6  0EA0               	movlw	160
  8722  0032F8  010F               	movlb	15	; () banked
  8723  0032FA  6F3A               	movwf	58,b	;volatile
  8724                           
  8725                           ;pin_manager.c: 71: ANSELB = 0x00;
  8726  0032FC  0E00               	movlw	0
  8727  0032FE  010F               	movlb	15	; () banked
  8728  003300  6F39               	movwf	57,b	;volatile
  8729                           
  8730                           ;pin_manager.c: 72: ANSELA = 0x00;
  8731  003302  0E00               	movlw	0
  8732  003304  010F               	movlb	15	; () banked
  8733  003306  6F38               	movwf	56,b	;volatile
  8734                           
  8735                           ; BSR set to: 15
  8736                           ;pin_manager.c: 77: WPUB = 0xFF;
  8737  003308  6861               	setf	3937,c	;volatile
  8738                           
  8739                           ; BSR set to: 15
  8740                           ;pin_manager.c: 78: INTCON2bits.nRBPU = 0;
  8741  00330A  9EF1               	bcf	intcon2,7,c	;volatile
  8742                           
  8743                           ; BSR set to: 15
  8744  00330C  0012               	return		;funcret
  8745  00330E                     __end_of_PIN_MANAGER_Initialize:
  8746                           	opt stack 0
  8747                           tblptru	equ	0xFF8
  8748                           tblptrh	equ	0xFF7
  8749                           tblptrl	equ	0xFF6
  8750                           tablat	equ	0xFF5
  8751                           prodh	equ	0xFF4
  8752                           prodl	equ	0xFF3
  8753                           intcon	equ	0xFF2
  8754                           intcon2	equ	0xFF1
  8755                           postinc0	equ	0xFEE
  8756                           wreg	equ	0xFE8
  8757                           postdec1	equ	0xFE5
  8758                           fsr1l	equ	0xFE1
  8759                           indf2	equ	0xFDF
  8760                           postinc2	equ	0xFDE
  8761                           postdec2	equ	0xFDD
  8762                           fsr2h	equ	0xFDA
  8763                           fsr2l	equ	0xFD9
  8764                           status	equ	0xFD8
  8765                           
  8766 ;; *************** function _OSCILLATOR_Initialize *****************
  8767 ;; Defined at:
  8768 ;;		line 122 in file "mcc_generated_files/mcc.c"
  8769 ;; Parameters:    Size  Location     Type
  8770 ;;		None
  8771 ;; Auto vars:     Size  Location     Type
  8772 ;;		None
  8773 ;; Return value:  Size  Location     Type
  8774 ;;                  1    wreg      void 
  8775 ;; Registers used:
  8776 ;;		wreg, status,2
  8777 ;; Tracked objects:
  8778 ;;		On entry : 0/0
  8779 ;;		On exit  : 0/0
  8780 ;;		Unchanged: 0/0
  8781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8782 ;;      Params:         0       0       0       0       0       0       0
  8783 ;;      Locals:         0       0       0       0       0       0       0
  8784 ;;      Temps:          0       0       0       0       0       0       0
  8785 ;;      Totals:         0       0       0       0       0       0       0
  8786 ;;Total ram usage:        0 bytes
  8787 ;; Hardware stack levels used:    1
  8788 ;; Hardware stack levels required when called:    4
  8789 ;; This function calls:
  8790 ;;		Nothing
  8791 ;; This function is called by:
  8792 ;;		_SYSTEM_Initialize
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796                           	psect	text32
  8797  003424                     __ptext32:
  8798                           	opt stack 0
  8799  003424                     _OSCILLATOR_Initialize:
  8800                           	opt stack 25
  8801                           
  8802                           ;mcc.c: 125: OSCCON = 0x70;
  8803                           
  8804                           ; BSR set to: 15
  8805                           ;incstack = 0
  8806  003424  0E70               	movlw	112
  8807  003426  6ED3               	movwf	4051,c	;volatile
  8808                           
  8809                           ;mcc.c: 127: OSCCON2 = 0x04;
  8810  003428  0E04               	movlw	4
  8811  00342A  6ED2               	movwf	4050,c	;volatile
  8812                           
  8813                           ;mcc.c: 129: OSCTUNE = 0x00;
  8814  00342C  0E00               	movlw	0
  8815  00342E  6E9B               	movwf	3995,c	;volatile
  8816  003430  0012               	return		;funcret
  8817  003432                     __end_of_OSCILLATOR_Initialize:
  8818                           	opt stack 0
  8819                           tblptru	equ	0xFF8
  8820                           tblptrh	equ	0xFF7
  8821                           tblptrl	equ	0xFF6
  8822                           tablat	equ	0xFF5
  8823                           prodh	equ	0xFF4
  8824                           prodl	equ	0xFF3
  8825                           intcon	equ	0xFF2
  8826                           intcon2	equ	0xFF1
  8827                           postinc0	equ	0xFEE
  8828                           wreg	equ	0xFE8
  8829                           postdec1	equ	0xFE5
  8830                           fsr1l	equ	0xFE1
  8831                           indf2	equ	0xFDF
  8832                           postinc2	equ	0xFDE
  8833                           postdec2	equ	0xFDD
  8834                           fsr2h	equ	0xFDA
  8835                           fsr2l	equ	0xFD9
  8836                           status	equ	0xFD8
  8837                           
  8838 ;; *************** function _INTERRUPT_Initialize *****************
  8839 ;; Defined at:
  8840 ;;		line 4 in file "mcc_generated_files/interrupt_manager.c"
  8841 ;; Parameters:    Size  Location     Type
  8842 ;;		None
  8843 ;; Auto vars:     Size  Location     Type
  8844 ;;		None
  8845 ;; Return value:  Size  Location     Type
  8846 ;;                  1    wreg      void 
  8847 ;; Registers used:
  8848 ;;		None
  8849 ;; Tracked objects:
  8850 ;;		On entry : 0/0
  8851 ;;		On exit  : 0/0
  8852 ;;		Unchanged: 0/0
  8853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8854 ;;      Params:         0       0       0       0       0       0       0
  8855 ;;      Locals:         0       0       0       0       0       0       0
  8856 ;;      Temps:          0       0       0       0       0       0       0
  8857 ;;      Totals:         0       0       0       0       0       0       0
  8858 ;;Total ram usage:        0 bytes
  8859 ;; Hardware stack levels used:    1
  8860 ;; Hardware stack levels required when called:    4
  8861 ;; This function calls:
  8862 ;;		Nothing
  8863 ;; This function is called by:
  8864 ;;		_SYSTEM_Initialize
  8865 ;; This function uses a non-reentrant model
  8866 ;;
  8867                           
  8868                           	psect	text33
  8869  003458                     __ptext33:
  8870                           	opt stack 0
  8871  003458                     _INTERRUPT_Initialize:
  8872                           	opt stack 25
  8873                           
  8874                           ;interrupt_manager.c: 7: RCONbits.IPEN = 0;
  8875                           
  8876                           ;incstack = 0
  8877  003458  9ED0               	bcf	4048,7,c	;volatile
  8878  00345A  0012               	return		;funcret
  8879  00345C                     __end_of_INTERRUPT_Initialize:
  8880                           	opt stack 0
  8881                           tblptru	equ	0xFF8
  8882                           tblptrh	equ	0xFF7
  8883                           tblptrl	equ	0xFF6
  8884                           tablat	equ	0xFF5
  8885                           prodh	equ	0xFF4
  8886                           prodl	equ	0xFF3
  8887                           intcon	equ	0xFF2
  8888                           intcon2	equ	0xFF1
  8889                           postinc0	equ	0xFEE
  8890                           wreg	equ	0xFE8
  8891                           postdec1	equ	0xFE5
  8892                           fsr1l	equ	0xFE1
  8893                           indf2	equ	0xFDF
  8894                           postinc2	equ	0xFDE
  8895                           postdec2	equ	0xFDD
  8896                           fsr2h	equ	0xFDA
  8897                           fsr2l	equ	0xFD9
  8898                           status	equ	0xFD8
  8899                           
  8900 ;; *************** function _EXT_INT_Initialize *****************
  8901 ;; Defined at:
  8902 ;;		line 100 in file "mcc_generated_files/ext_int.c"
  8903 ;; Parameters:    Size  Location     Type
  8904 ;;		None
  8905 ;; Auto vars:     Size  Location     Type
  8906 ;;		None
  8907 ;; Return value:  Size  Location     Type
  8908 ;;                  1    wreg      void 
  8909 ;; Registers used:
  8910 ;;		wreg, status,2, status,0, cstack
  8911 ;; Tracked objects:
  8912 ;;		On entry : 0/0
  8913 ;;		On exit  : 0/0
  8914 ;;		Unchanged: 0/0
  8915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8916 ;;      Params:         0       0       0       0       0       0       0
  8917 ;;      Locals:         0       0       0       0       0       0       0
  8918 ;;      Temps:          0       0       0       0       0       0       0
  8919 ;;      Totals:         0       0       0       0       0       0       0
  8920 ;;Total ram usage:        0 bytes
  8921 ;; Hardware stack levels used:    1
  8922 ;; Hardware stack levels required when called:    5
  8923 ;; This function calls:
  8924 ;;		_INT0_SetInterruptHandler
  8925 ;; This function is called by:
  8926 ;;		_SYSTEM_Initialize
  8927 ;; This function uses a non-reentrant model
  8928 ;;
  8929                           
  8930                           	psect	text34
  8931  0033E8                     __ptext34:
  8932                           	opt stack 0
  8933  0033E8                     _EXT_INT_Initialize:
  8934                           	opt stack 24
  8935                           
  8936                           ;ext_int.c: 109: (INTCONbits.INT0IF = 0);
  8937                           
  8938                           ;incstack = 0
  8939  0033E8  92F2               	bcf	intcon,1,c	;volatile
  8940                           
  8941                           ;ext_int.c: 110: (INTCON2bits.INTEDG0 = 0);
  8942  0033EA  9CF1               	bcf	intcon2,6,c	;volatile
  8943                           
  8944                           ;ext_int.c: 112: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
  8945  0033EC  0E00               	movlw	0
  8946  0033EE  0100               	movlb	0	; () banked
  8947  0033F0  6F60               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  8948  0033F2  0E00               	movlw	0
  8949  0033F4  0100               	movlb	0	; () banked
  8950  0033F6  6F61               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8951  0033F8  EC1E  F01A         	call	_INT0_SetInterruptHandler	;wreg free
  8952                           
  8953                           ;ext_int.c: 113: (INTCONbits.INT0IE = 1);
  8954  0033FC  88F2               	bsf	intcon,4,c	;volatile
  8955  0033FE  0012               	return		;funcret
  8956  003400                     __end_of_EXT_INT_Initialize:
  8957                           	opt stack 0
  8958                           tblptru	equ	0xFF8
  8959                           tblptrh	equ	0xFF7
  8960                           tblptrl	equ	0xFF6
  8961                           tablat	equ	0xFF5
  8962                           prodh	equ	0xFF4
  8963                           prodl	equ	0xFF3
  8964                           intcon	equ	0xFF2
  8965                           intcon2	equ	0xFF1
  8966                           postinc0	equ	0xFEE
  8967                           wreg	equ	0xFE8
  8968                           postdec1	equ	0xFE5
  8969                           fsr1l	equ	0xFE1
  8970                           indf2	equ	0xFDF
  8971                           postinc2	equ	0xFDE
  8972                           postdec2	equ	0xFDD
  8973                           fsr2h	equ	0xFDA
  8974                           fsr2l	equ	0xFD9
  8975                           status	equ	0xFD8
  8976                           
  8977 ;; *************** function _INT0_SetInterruptHandler *****************
  8978 ;; Defined at:
  8979 ;;		line 80 in file "mcc_generated_files/ext_int.c"
  8980 ;; Parameters:    Size  Location     Type
  8981 ;;  InterruptHan    2    0[BANK0 ] PTR void 
  8982 ;;		 -> INT0_DefaultInterruptHandler(1), 
  8983 ;; Auto vars:     Size  Location     Type
  8984 ;;		None
  8985 ;; Return value:  Size  Location     Type
  8986 ;;                  1    wreg      void 
  8987 ;; Registers used:
  8988 ;;		wreg, status,2, status,0
  8989 ;; Tracked objects:
  8990 ;;		On entry : 0/0
  8991 ;;		On exit  : 0/0
  8992 ;;		Unchanged: 0/0
  8993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8994 ;;      Params:         0       2       0       0       0       0       0
  8995 ;;      Locals:         0       0       0       0       0       0       0
  8996 ;;      Temps:          0       0       0       0       0       0       0
  8997 ;;      Totals:         0       2       0       0       0       0       0
  8998 ;;Total ram usage:        2 bytes
  8999 ;; Hardware stack levels used:    1
  9000 ;; Hardware stack levels required when called:    4
  9001 ;; This function calls:
  9002 ;;		Nothing
  9003 ;; This function is called by:
  9004 ;;		_EXT_INT_Initialize
  9005 ;; This function uses a non-reentrant model
  9006 ;;
  9007                           
  9008                           	psect	text35
  9009  00343C                     __ptext35:
  9010                           	opt stack 0
  9011  00343C                     _INT0_SetInterruptHandler:
  9012                           	opt stack 24
  9013                           
  9014                           ;ext_int.c: 81: INT0_InterruptHandler = InterruptHandler;
  9015                           
  9016                           ;incstack = 0
  9017  00343C  C060  F0E9         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  9018  003440  C061  F0EA         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  9019  003444  0012               	return		;funcret
  9020  003446                     __end_of_INT0_SetInterruptHandler:
  9021                           	opt stack 0
  9022                           tblptru	equ	0xFF8
  9023                           tblptrh	equ	0xFF7
  9024                           tblptrl	equ	0xFF6
  9025                           tablat	equ	0xFF5
  9026                           prodh	equ	0xFF4
  9027                           prodl	equ	0xFF3
  9028                           intcon	equ	0xFF2
  9029                           intcon2	equ	0xFF1
  9030                           postinc0	equ	0xFEE
  9031                           wreg	equ	0xFE8
  9032                           postdec1	equ	0xFE5
  9033                           fsr1l	equ	0xFE1
  9034                           indf2	equ	0xFDF
  9035                           postinc2	equ	0xFDE
  9036                           postdec2	equ	0xFDD
  9037                           fsr2h	equ	0xFDA
  9038                           fsr2l	equ	0xFD9
  9039                           status	equ	0xFD8
  9040                           
  9041 ;; *************** function _EUSART1_Initialize *****************
  9042 ;; Defined at:
  9043 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  9044 ;; Parameters:    Size  Location     Type
  9045 ;;		None
  9046 ;; Auto vars:     Size  Location     Type
  9047 ;;		None
  9048 ;; Return value:  Size  Location     Type
  9049 ;;                  1    wreg      void 
  9050 ;; Registers used:
  9051 ;;		wreg, status,2
  9052 ;; Tracked objects:
  9053 ;;		On entry : 0/0
  9054 ;;		On exit  : 0/0
  9055 ;;		Unchanged: 0/0
  9056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9057 ;;      Params:         0       0       0       0       0       0       0
  9058 ;;      Locals:         0       0       0       0       0       0       0
  9059 ;;      Temps:          0       0       0       0       0       0       0
  9060 ;;      Totals:         0       0       0       0       0       0       0
  9061 ;;Total ram usage:        0 bytes
  9062 ;; Hardware stack levels used:    1
  9063 ;; Hardware stack levels required when called:    4
  9064 ;; This function calls:
  9065 ;;		Nothing
  9066 ;; This function is called by:
  9067 ;;		_SYSTEM_Initialize
  9068 ;; This function uses a non-reentrant model
  9069 ;;
  9070                           
  9071                           	psect	text36
  9072  003400                     __ptext36:
  9073                           	opt stack 0
  9074  003400                     _EUSART1_Initialize:
  9075                           	opt stack 25
  9076                           
  9077                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  9078                           
  9079                           ;incstack = 0
  9080  003400  0E08               	movlw	8
  9081  003402  6EB8               	movwf	4024,c	;volatile
  9082                           
  9083                           ;eusart1.c: 63: RCSTA1 = 0x80;
  9084  003404  0E80               	movlw	128
  9085  003406  6EAB               	movwf	4011,c	;volatile
  9086                           
  9087                           ;eusart1.c: 66: TXSTA1 = 0x24;
  9088  003408  0E24               	movlw	36
  9089  00340A  6EAC               	movwf	4012,c	;volatile
  9090                           
  9091                           ;eusart1.c: 69: SPBRG1 = 0xA0;
  9092  00340C  0EA0               	movlw	160
  9093  00340E  6EAF               	movwf	4015,c	;volatile
  9094                           
  9095                           ;eusart1.c: 72: SPBRGH1 = 0x01;
  9096  003410  0E01               	movlw	1
  9097  003412  6EB0               	movwf	4016,c	;volatile
  9098  003414  0012               	return		;funcret
  9099  003416                     __end_of_EUSART1_Initialize:
  9100                           	opt stack 0
  9101                           tblptru	equ	0xFF8
  9102                           tblptrh	equ	0xFF7
  9103                           tblptrl	equ	0xFF6
  9104                           tablat	equ	0xFF5
  9105                           prodh	equ	0xFF4
  9106                           prodl	equ	0xFF3
  9107                           intcon	equ	0xFF2
  9108                           intcon2	equ	0xFF1
  9109                           postinc0	equ	0xFEE
  9110                           wreg	equ	0xFE8
  9111                           postdec1	equ	0xFE5
  9112                           fsr1l	equ	0xFE1
  9113                           indf2	equ	0xFDF
  9114                           postinc2	equ	0xFDE
  9115                           postdec2	equ	0xFDD
  9116                           fsr2h	equ	0xFDA
  9117                           fsr2l	equ	0xFD9
  9118                           status	equ	0xFD8
  9119                           
  9120 ;; *************** function _INTERRUPT_InterruptManager *****************
  9121 ;; Defined at:
  9122 ;;		line 10 in file "mcc_generated_files/interrupt_manager.c"
  9123 ;; Parameters:    Size  Location     Type
  9124 ;;		None
  9125 ;; Auto vars:     Size  Location     Type
  9126 ;;		None
  9127 ;; Return value:  Size  Location     Type
  9128 ;;                  1    wreg      void 
  9129 ;; Registers used:
  9130 ;;		wreg, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
  9131 ;; Tracked objects:
  9132 ;;		On entry : 0/0
  9133 ;;		On exit  : 0/0
  9134 ;;		Unchanged: 0/0
  9135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9136 ;;      Params:         0       0       0       0       0       0       0
  9137 ;;      Locals:         0       0       0       0       0       0       0
  9138 ;;      Temps:         14       0       0       0       0       0       0
  9139 ;;      Totals:        14       0       0       0       0       0       0
  9140 ;;Total ram usage:       14 bytes
  9141 ;; Hardware stack levels used:    1
  9142 ;; Hardware stack levels required when called:    3
  9143 ;; This function calls:
  9144 ;;		_INT0_ISR
  9145 ;;		_TMR0_ISR
  9146 ;; This function is called by:
  9147 ;;		Interrupt level 2
  9148 ;; This function uses a non-reentrant model
  9149 ;;
  9150                           
  9151                           	psect	intcode
  9152  000008                     __pintcode:
  9153                           	opt stack 0
  9154  000008                     _INTERRUPT_InterruptManager:
  9155                           	opt stack 23
  9156                           
  9157                           ;incstack = 0
  9158  000008  8256               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9159  00000A  CFFA F040          	movff	pclath,??_INTERRUPT_InterruptManager
  9160  00000E  CFFB F041          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  9161  000012  CFE9 F042          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  9162  000016  CFEA F043          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  9163  00001A  CFE1 F044          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  9164  00001E  CFE2 F045          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  9165  000022  CFD9 F046          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  9166  000026  CFDA F047          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  9167  00002A  CFF3 F048          	movff	prodl,??_INTERRUPT_InterruptManager+8
  9168  00002E  CFF4 F049          	movff	prodh,??_INTERRUPT_InterruptManager+9
  9169  000032  CFF6 F04A          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  9170  000036  CFF7 F04B          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  9171  00003A  CFF8 F04C          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  9172  00003E  CFF5 F04D          	movff	tablat,??_INTERRUPT_InterruptManager+13
  9173                           
  9174                           ;interrupt_manager.c: 13: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  9175  000042  BAF2               	btfsc	intcon,5,c	;volatile
  9176  000044  A4F2               	btfss	intcon,2,c	;volatile
  9177  000046  D003               	goto	i2l87
  9178                           
  9179                           ;interrupt_manager.c: 14: {
  9180                           ;interrupt_manager.c: 15: TMR0_ISR();
  9181  000048  EC87  F019         	call	_TMR0_ISR	;wreg free
  9182                           
  9183                           ;interrupt_manager.c: 16: }
  9184  00004C  D005               	goto	i2l91
  9185  00004E                     i2l87:
  9186                           
  9187                           ;interrupt_manager.c: 17: else if(INTCONbits.INT0IE == 1 && INTCONbits.INT0IF == 1)
  9188  00004E  B8F2               	btfsc	intcon,4,c	;volatile
  9189  000050  A2F2               	btfss	intcon,1,c	;volatile
  9190  000052  D002               	goto	i2l91
  9191                           
  9192                           ;interrupt_manager.c: 18: {
  9193                           ;interrupt_manager.c: 19: INT0_ISR();
  9194  000054  EC1A  F00E         	call	_INT0_ISR	;wreg free
  9195  000058                     i2l91:
  9196  000058  C04D  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  9197  00005C  C04C  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  9198  000060  C04B  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  9199  000064  C04A  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  9200  000068  C049  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  9201  00006C  C048  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  9202  000070  C047  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  9203  000074  C046  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  9204  000078  C045  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  9205  00007C  C044  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  9206  000080  C043  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  9207  000084  C042  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  9208  000088  C041  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  9209  00008C  C040  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  9210  000090  9256               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9211  000092  0011               	retfie		f
  9212  000094                     __end_of_INTERRUPT_InterruptManager:
  9213                           	opt stack 0
  9214                           pclatu	equ	0xFFB
  9215                           pclath	equ	0xFFA
  9216                           tblptru	equ	0xFF8
  9217                           tblptrh	equ	0xFF7
  9218                           tblptrl	equ	0xFF6
  9219                           tablat	equ	0xFF5
  9220                           prodh	equ	0xFF4
  9221                           prodl	equ	0xFF3
  9222                           intcon	equ	0xFF2
  9223                           intcon2	equ	0xFF1
  9224                           postinc0	equ	0xFEE
  9225                           fsr0h	equ	0xFEA
  9226                           fsr0l	equ	0xFE9
  9227                           wreg	equ	0xFE8
  9228                           postdec1	equ	0xFE5
  9229                           fsr1h	equ	0xFE2
  9230                           fsr1l	equ	0xFE1
  9231                           indf2	equ	0xFDF
  9232                           postinc2	equ	0xFDE
  9233                           postdec2	equ	0xFDD
  9234                           fsr2h	equ	0xFDA
  9235                           fsr2l	equ	0xFD9
  9236                           status	equ	0xFD8
  9237                           
  9238 ;; *************** function _TMR0_ISR *****************
  9239 ;; Defined at:
  9240 ;;		line 84 in file "mcc_generated_files/tmr0.c"
  9241 ;; Parameters:    Size  Location     Type
  9242 ;;		None
  9243 ;; Auto vars:     Size  Location     Type
  9244 ;;		None
  9245 ;; Return value:  Size  Location     Type
  9246 ;;                  1    wreg      void 
  9247 ;; Registers used:
  9248 ;;		wreg, status,2, status,0, pclat, tosl, cstack
  9249 ;; Tracked objects:
  9250 ;;		On entry : 0/0
  9251 ;;		On exit  : 0/0
  9252 ;;		Unchanged: 0/0
  9253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9254 ;;      Params:         0       0       0       0       0       0       0
  9255 ;;      Locals:         0       0       0       0       0       0       0
  9256 ;;      Temps:          0       0       0       0       0       0       0
  9257 ;;      Totals:         0       0       0       0       0       0       0
  9258 ;;Total ram usage:        0 bytes
  9259 ;; Hardware stack levels used:    1
  9260 ;; Hardware stack levels required when called:    1
  9261 ;; This function calls:
  9262 ;;		Absolute function
  9263 ;;		_TMR0_DefaultInterruptHandler
  9264 ;; This function is called by:
  9265 ;;		_INTERRUPT_InterruptManager
  9266 ;; This function uses a non-reentrant model
  9267 ;;
  9268                           
  9269                           	psect	text38
  9270  00330E                     __ptext38:
  9271                           	opt stack 0
  9272  00330E                     _TMR0_ISR:
  9273                           	opt stack 24
  9274                           
  9275                           ;tmr0.c: 88: INTCONbits.TMR0IF = 0;
  9276                           
  9277                           ;incstack = 0
  9278  00330E  94F2               	bcf	intcon,2,c	;volatile
  9279                           
  9280                           ;tmr0.c: 92: TMR0H = timer0ReloadVal >> 8;
  9281  003310  5053               	movf	_timer0ReloadVal+1,w,c	;volatile
  9282  003312  6ED7               	movwf	4055,c	;volatile
  9283                           
  9284                           ;tmr0.c: 93: TMR0L = (uint8_t) timer0ReloadVal;
  9285  003314  C052  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  9286                           
  9287                           ;tmr0.c: 95: if(TMR0_InterruptHandler)
  9288  003318  0100               	movlb	0	; () banked
  9289  00331A  51EB               	movf	_TMR0_InterruptHandler& (0+255),w,b
  9290  00331C  0100               	movlb	0	; () banked
  9291  00331E  11EC               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  9292  003320  B4D8               	btfsc	status,2,c
  9293  003322  0012               	return	
  9294                           
  9295                           ; BSR set to: 0
  9296                           ;tmr0.c: 96: {
  9297                           ;tmr0.c: 97: TMR0_InterruptHandler();
  9298  003324  D801               	call	i2u372_48
  9299  003326  0012               	return	
  9300  003328                     i2u372_48:
  9301  003328  0005               	push	
  9302  00332A  0100               	movlb	0	; () banked
  9303  00332C  6EFA               	movwf	pclath,c
  9304  00332E  51EB               	movf	_TMR0_InterruptHandler& (0+255),w,b
  9305  003330  6EFD               	movwf	tosl,c
  9306  003332  51EC               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  9307  003334  6EFE               	movwf	tosh,c
  9308  003336  50F8               	movf	tblptru,w,c
  9309  003338  6EFF               	movwf	tosu,c
  9310  00333A  50FA               	movf	pclath,w,c
  9311  00333C  0012               	return		;indir
  9312  00333E                     __end_of_TMR0_ISR:
  9313                           	opt stack 0
  9314                           tosu	equ	0xFFF
  9315                           tosh	equ	0xFFE
  9316                           tosl	equ	0xFFD
  9317                           pclatu	equ	0xFFB
  9318                           pclath	equ	0xFFA
  9319                           tblptru	equ	0xFF8
  9320                           tblptrh	equ	0xFF7
  9321                           tblptrl	equ	0xFF6
  9322                           tablat	equ	0xFF5
  9323                           prodh	equ	0xFF4
  9324                           prodl	equ	0xFF3
  9325                           intcon	equ	0xFF2
  9326                           intcon2	equ	0xFF1
  9327                           postinc0	equ	0xFEE
  9328                           fsr0h	equ	0xFEA
  9329                           fsr0l	equ	0xFE9
  9330                           wreg	equ	0xFE8
  9331                           postdec1	equ	0xFE5
  9332                           fsr1h	equ	0xFE2
  9333                           fsr1l	equ	0xFE1
  9334                           indf2	equ	0xFDF
  9335                           postinc2	equ	0xFDE
  9336                           postdec2	equ	0xFDD
  9337                           fsr2h	equ	0xFDA
  9338                           fsr2l	equ	0xFD9
  9339                           status	equ	0xFD8
  9340                           
  9341 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  9342 ;; Defined at:
  9343 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  9344 ;; Parameters:    Size  Location     Type
  9345 ;;		None
  9346 ;; Auto vars:     Size  Location     Type
  9347 ;;		None
  9348 ;; Return value:  Size  Location     Type
  9349 ;;                  1    wreg      void 
  9350 ;; Registers used:
  9351 ;;		wreg, status,2, status,0
  9352 ;; Tracked objects:
  9353 ;;		On entry : 0/0
  9354 ;;		On exit  : 0/0
  9355 ;;		Unchanged: 0/0
  9356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9357 ;;      Params:         0       0       0       0       0       0       0
  9358 ;;      Locals:         0       0       0       0       0       0       0
  9359 ;;      Temps:          1       0       0       0       0       0       0
  9360 ;;      Totals:         1       0       0       0       0       0       0
  9361 ;;Total ram usage:        1 bytes
  9362 ;; Hardware stack levels used:    1
  9363 ;; This function calls:
  9364 ;;		Nothing
  9365 ;; This function is called by:
  9366 ;;		_TMR0_Initialize
  9367 ;;		_TMR0_ISR
  9368 ;; This function uses a non-reentrant model
  9369 ;;
  9370                           
  9371                           	psect	text39
  9372  0033B2                     __ptext39:
  9373                           	opt stack 0
  9374  0033B2                     _TMR0_DefaultInterruptHandler:
  9375                           	opt stack 24
  9376                           
  9377                           ;tmr0.c: 109: LATBbits.LATB1 = ~LATBbits.LATB1;
  9378                           
  9379                           ;incstack = 0
  9380  0033B2  A28A               	btfss	3978,1,c	;volatile
  9381  0033B4  D002               	goto	i2u281_40
  9382  0033B6  0E01               	movlw	1
  9383  0033B8  D001               	goto	i2u281_46
  9384  0033BA                     i2u281_40:
  9385  0033BA  0E00               	movlw	0
  9386  0033BC                     i2u281_46:
  9387  0033BC  0AFF               	xorlw	255
  9388  0033BE  6E01               	movwf	??_TMR0_DefaultInterruptHandler& (0+255),c
  9389  0033C0  4601               	rlncf	??_TMR0_DefaultInterruptHandler,f,c
  9390  0033C2  508A               	movf	3978,w,c	;volatile
  9391  0033C4  1801               	xorwf	??_TMR0_DefaultInterruptHandler,w,c
  9392  0033C6  0BFD               	andlw	-3
  9393  0033C8  1801               	xorwf	??_TMR0_DefaultInterruptHandler,w,c
  9394  0033CA  6E8A               	movwf	3978,c	;volatile
  9395  0033CC  0012               	return		;funcret
  9396  0033CE                     __end_of_TMR0_DefaultInterruptHandler:
  9397                           	opt stack 0
  9398                           tosu	equ	0xFFF
  9399                           tosh	equ	0xFFE
  9400                           tosl	equ	0xFFD
  9401                           pclatu	equ	0xFFB
  9402                           pclath	equ	0xFFA
  9403                           tblptru	equ	0xFF8
  9404                           tblptrh	equ	0xFF7
  9405                           tblptrl	equ	0xFF6
  9406                           tablat	equ	0xFF5
  9407                           prodh	equ	0xFF4
  9408                           prodl	equ	0xFF3
  9409                           intcon	equ	0xFF2
  9410                           intcon2	equ	0xFF1
  9411                           postinc0	equ	0xFEE
  9412                           fsr0h	equ	0xFEA
  9413                           fsr0l	equ	0xFE9
  9414                           wreg	equ	0xFE8
  9415                           postdec1	equ	0xFE5
  9416                           fsr1h	equ	0xFE2
  9417                           fsr1l	equ	0xFE1
  9418                           indf2	equ	0xFDF
  9419                           postinc2	equ	0xFDE
  9420                           postdec2	equ	0xFDD
  9421                           fsr2h	equ	0xFDA
  9422                           fsr2l	equ	0xFD9
  9423                           status	equ	0xFD8
  9424                           
  9425 ;; *************** function _INT0_ISR *****************
  9426 ;; Defined at:
  9427 ;;		line 30 in file "mcc_generated_files/ext_int.c"
  9428 ;; Parameters:    Size  Location     Type
  9429 ;;		None
  9430 ;; Auto vars:     Size  Location     Type
  9431 ;;		None
  9432 ;; Return value:  Size  Location     Type
  9433 ;;                  1    wreg      void 
  9434 ;; Registers used:
  9435 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9436 ;; Tracked objects:
  9437 ;;		On entry : 0/0
  9438 ;;		On exit  : 0/0
  9439 ;;		Unchanged: 0/0
  9440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9441 ;;      Params:         0       0       0       0       0       0       0
  9442 ;;      Locals:         0       0       0       0       0       0       0
  9443 ;;      Temps:         10       0       0       0       0       0       0
  9444 ;;      Totals:        10       0       0       0       0       0       0
  9445 ;;Total ram usage:       10 bytes
  9446 ;; Hardware stack levels used:    1
  9447 ;; Hardware stack levels required when called:    2
  9448 ;; This function calls:
  9449 ;;		_TMR0_ReadTimer
  9450 ;;		_TMR0_Reload
  9451 ;;		_TMR0_StopTimer
  9452 ;;		___lwtoft
  9453 ;;		i2_TMR0_StartTimer
  9454 ;;		i2___ftadd
  9455 ;;		i2___ftdiv
  9456 ;;		i2___ftmul
  9457 ;; This function is called by:
  9458 ;;		_INTERRUPT_InterruptManager
  9459 ;; This function uses a non-reentrant model
  9460 ;;
  9461                           
  9462                           	psect	text40
  9463  001C34                     __ptext40:
  9464                           	opt stack 0
  9465  001C34                     _INT0_ISR:
  9466                           	opt stack 23
  9467                           
  9468                           ;ext_int.c: 33: TMR0_StopTimer();
  9469                           
  9470                           ;incstack = 0
  9471  001C34  EC30  F01A         	call	_TMR0_StopTimer	;wreg free
  9472                           
  9473                           ;ext_int.c: 34: reading = TMR0_ReadTimer();
  9474  001C38  ECE1  F018         	call	_TMR0_ReadTimer	;wreg free
  9475  001C3C  C001  F054         	movff	?_TMR0_ReadTimer,_reading
  9476  001C40  C002  F055         	movff	?_TMR0_ReadTimer+1,_reading+1
  9477                           
  9478                           ;ext_int.c: 36: if (last_range != range)
  9479  001C44  5051               	movf	_range,w,c
  9480  001C46  1850               	xorwf	_last_range,w,c
  9481  001C48  B4D8               	btfsc	status,2,c
  9482  001C4A  D0D0               	goto	i2l3393
  9483                           
  9484                           ;ext_int.c: 37: {
  9485                           ;ext_int.c: 39: LATC |= (1 << R1_BIT[0]) | (1 << R1_BIT[1]) | (1 << R1_BIT[2]) | (1 << R
      +                          1_BIT[3]) | (1 << R1_BIT[4]);
  9486  001C4C  0E8A               	movlw	low (_R1_BIT+4)
  9487  001C4E  6EF6               	movwf	tblptrl,c
  9488  001C50  0E06               	movlw	high (_R1_BIT+4)
  9489  001C52  6EF7               	movwf	tblptrh,c
  9490  001C54                     	if	0	;tblptru may be non-zero
  9491  001C54                     	endif
  9492  001C54                     	if	0	;tblptru may be non-zero
  9493  001C54                     	endif
  9494  001C54  0008               	tblrd		*
  9495  001C56  CFF5 F036          	movff	tablat,??_INT0_ISR
  9496  001C5A  0E01               	movlw	1
  9497  001C5C  6E37               	movwf	(??_INT0_ISR+1)& (0+255),c
  9498  001C5E  2A36               	incf	??_INT0_ISR,f,c
  9499  001C60  D002               	goto	i2u360_44
  9500  001C62                     i2u360_45:
  9501  001C62  90D8               	bcf	status,0,c
  9502  001C64  3637               	rlcf	??_INT0_ISR+1,f,c
  9503  001C66                     i2u360_44:
  9504  001C66  2E36               	decfsz	??_INT0_ISR,f,c
  9505  001C68  D7FC               	goto	i2u360_45
  9506  001C6A  0E89               	movlw	low (_R1_BIT+3)
  9507  001C6C  6EF6               	movwf	tblptrl,c
  9508  001C6E  0E06               	movlw	high (_R1_BIT+3)
  9509  001C70  6EF7               	movwf	tblptrh,c
  9510  001C72                     	if	0	;tblptru may be non-zero
  9511  001C72                     	endif
  9512  001C72                     	if	0	;tblptru may be non-zero
  9513  001C72                     	endif
  9514  001C72  0008               	tblrd		*
  9515  001C74  CFF5 F038          	movff	tablat,??_INT0_ISR+2
  9516  001C78  0E01               	movlw	1
  9517  001C7A  6E39               	movwf	(??_INT0_ISR+3)& (0+255),c
  9518  001C7C  2A38               	incf	??_INT0_ISR+2,f,c
  9519  001C7E  D002               	goto	i2u361_44
  9520  001C80                     i2u361_45:
  9521  001C80  90D8               	bcf	status,0,c
  9522  001C82  3639               	rlcf	??_INT0_ISR+3,f,c
  9523  001C84                     i2u361_44:
  9524  001C84  2E38               	decfsz	??_INT0_ISR+2,f,c
  9525  001C86  D7FC               	goto	i2u361_45
  9526  001C88  0E88               	movlw	low (_R1_BIT+2)
  9527  001C8A  6EF6               	movwf	tblptrl,c
  9528  001C8C  0E06               	movlw	high (_R1_BIT+2)
  9529  001C8E  6EF7               	movwf	tblptrh,c
  9530  001C90                     	if	0	;tblptru may be non-zero
  9531  001C90                     	endif
  9532  001C90                     	if	0	;tblptru may be non-zero
  9533  001C90                     	endif
  9534  001C90  0008               	tblrd		*
  9535  001C92  CFF5 F03A          	movff	tablat,??_INT0_ISR+4
  9536  001C96  0E01               	movlw	1
  9537  001C98  6E3B               	movwf	(??_INT0_ISR+5)& (0+255),c
  9538  001C9A  2A3A               	incf	??_INT0_ISR+4,f,c
  9539  001C9C  D002               	goto	i2u362_44
  9540  001C9E                     i2u362_45:
  9541  001C9E  90D8               	bcf	status,0,c
  9542  001CA0  363B               	rlcf	??_INT0_ISR+5,f,c
  9543  001CA2                     i2u362_44:
  9544  001CA2  2E3A               	decfsz	??_INT0_ISR+4,f,c
  9545  001CA4  D7FC               	goto	i2u362_45
  9546  001CA6  0E87               	movlw	low (_R1_BIT+1)
  9547  001CA8  6EF6               	movwf	tblptrl,c
  9548  001CAA  0E06               	movlw	high (_R1_BIT+1)
  9549  001CAC  6EF7               	movwf	tblptrh,c
  9550  001CAE                     	if	0	;tblptru may be non-zero
  9551  001CAE                     	endif
  9552  001CAE                     	if	0	;tblptru may be non-zero
  9553  001CAE                     	endif
  9554  001CAE  0008               	tblrd		*
  9555  001CB0  CFF5 F03C          	movff	tablat,??_INT0_ISR+6
  9556  001CB4  0E01               	movlw	1
  9557  001CB6  6E3D               	movwf	(??_INT0_ISR+7)& (0+255),c
  9558  001CB8  2A3C               	incf	??_INT0_ISR+6,f,c
  9559  001CBA  D002               	goto	i2u363_44
  9560  001CBC                     i2u363_45:
  9561  001CBC  90D8               	bcf	status,0,c
  9562  001CBE  363D               	rlcf	??_INT0_ISR+7,f,c
  9563  001CC0                     i2u363_44:
  9564  001CC0  2E3C               	decfsz	??_INT0_ISR+6,f,c
  9565  001CC2  D7FC               	goto	i2u363_45
  9566  001CC4  0E86               	movlw	low _R1_BIT
  9567  001CC6  6EF6               	movwf	tblptrl,c
  9568  001CC8                     	if	1	;There is more than 1 active tblptr byte
  9569  001CC8  0E06               	movlw	high _R1_BIT
  9570  001CCA  6EF7               	movwf	tblptrh,c
  9571  001CCC                     	endif
  9572  001CCC                     	if	0	;There are less than 3 active tblptr bytes
  9573  001CCC                     	endif
  9574  001CCC  0008               	tblrd		*
  9575  001CCE  CFF5 F03E          	movff	tablat,??_INT0_ISR+8
  9576  001CD2  0E01               	movlw	1
  9577  001CD4  6E3F               	movwf	(??_INT0_ISR+9)& (0+255),c
  9578  001CD6  2A3E               	incf	??_INT0_ISR+8,f,c
  9579  001CD8  D002               	goto	i2u364_44
  9580  001CDA                     i2u364_45:
  9581  001CDA  90D8               	bcf	status,0,c
  9582  001CDC  363F               	rlcf	??_INT0_ISR+9,f,c
  9583  001CDE                     i2u364_44:
  9584  001CDE  2E3E               	decfsz	??_INT0_ISR+8,f,c
  9585  001CE0  D7FC               	goto	i2u364_45
  9586  001CE2  503F               	movf	??_INT0_ISR+9,w,c
  9587  001CE4  103D               	iorwf	??_INT0_ISR+7,w,c
  9588  001CE6  103B               	iorwf	??_INT0_ISR+5,w,c
  9589  001CE8  1039               	iorwf	??_INT0_ISR+3,w,c
  9590  001CEA  1037               	iorwf	??_INT0_ISR+1,w,c
  9591  001CEC  128B               	iorwf	3979,f,c	;volatile
  9592                           
  9593                           ;ext_int.c: 40: LATB |= (1 << RSET_BIT[0]) | (1 << RSET_BIT[1]) | (1 << RSET_BIT[3]) | (
      +                          1 << RSET_BIT[4]);
  9594  001CEE  0E8F               	movlw	low (_RSET_BIT+4)
  9595  001CF0  6EF6               	movwf	tblptrl,c
  9596  001CF2  0E06               	movlw	high (_RSET_BIT+4)
  9597  001CF4  6EF7               	movwf	tblptrh,c
  9598  001CF6                     	if	0	;tblptru may be non-zero
  9599  001CF6                     	endif
  9600  001CF6                     	if	0	;tblptru may be non-zero
  9601  001CF6                     	endif
  9602  001CF6  0008               	tblrd		*
  9603  001CF8  CFF5 F036          	movff	tablat,??_INT0_ISR
  9604  001CFC  0E01               	movlw	1
  9605  001CFE  6E37               	movwf	(??_INT0_ISR+1)& (0+255),c
  9606  001D00  2A36               	incf	??_INT0_ISR,f,c
  9607  001D02  D002               	goto	i2u365_44
  9608  001D04                     i2u365_45:
  9609  001D04  90D8               	bcf	status,0,c
  9610  001D06  3637               	rlcf	??_INT0_ISR+1,f,c
  9611  001D08                     i2u365_44:
  9612  001D08  2E36               	decfsz	??_INT0_ISR,f,c
  9613  001D0A  D7FC               	goto	i2u365_45
  9614  001D0C  0E8E               	movlw	low (_RSET_BIT+3)
  9615  001D0E  6EF6               	movwf	tblptrl,c
  9616  001D10  0E06               	movlw	high (_RSET_BIT+3)
  9617  001D12  6EF7               	movwf	tblptrh,c
  9618  001D14                     	if	0	;tblptru may be non-zero
  9619  001D14                     	endif
  9620  001D14                     	if	0	;tblptru may be non-zero
  9621  001D14                     	endif
  9622  001D14  0008               	tblrd		*
  9623  001D16  CFF5 F038          	movff	tablat,??_INT0_ISR+2
  9624  001D1A  0E01               	movlw	1
  9625  001D1C  6E39               	movwf	(??_INT0_ISR+3)& (0+255),c
  9626  001D1E  2A38               	incf	??_INT0_ISR+2,f,c
  9627  001D20  D002               	goto	i2u366_44
  9628  001D22                     i2u366_45:
  9629  001D22  90D8               	bcf	status,0,c
  9630  001D24  3639               	rlcf	??_INT0_ISR+3,f,c
  9631  001D26                     i2u366_44:
  9632  001D26  2E38               	decfsz	??_INT0_ISR+2,f,c
  9633  001D28  D7FC               	goto	i2u366_45
  9634  001D2A  0E8C               	movlw	low (_RSET_BIT+1)
  9635  001D2C  6EF6               	movwf	tblptrl,c
  9636  001D2E  0E06               	movlw	high (_RSET_BIT+1)
  9637  001D30  6EF7               	movwf	tblptrh,c
  9638  001D32                     	if	0	;tblptru may be non-zero
  9639  001D32                     	endif
  9640  001D32                     	if	0	;tblptru may be non-zero
  9641  001D32                     	endif
  9642  001D32  0008               	tblrd		*
  9643  001D34  CFF5 F03A          	movff	tablat,??_INT0_ISR+4
  9644  001D38  0E01               	movlw	1
  9645  001D3A  6E3B               	movwf	(??_INT0_ISR+5)& (0+255),c
  9646  001D3C  2A3A               	incf	??_INT0_ISR+4,f,c
  9647  001D3E  D002               	goto	i2u367_44
  9648  001D40                     i2u367_45:
  9649  001D40  90D8               	bcf	status,0,c
  9650  001D42  363B               	rlcf	??_INT0_ISR+5,f,c
  9651  001D44                     i2u367_44:
  9652  001D44  2E3A               	decfsz	??_INT0_ISR+4,f,c
  9653  001D46  D7FC               	goto	i2u367_45
  9654  001D48  0E8B               	movlw	low _RSET_BIT
  9655  001D4A  6EF6               	movwf	tblptrl,c
  9656  001D4C                     	if	1	;There is more than 1 active tblptr byte
  9657  001D4C  0E06               	movlw	high _RSET_BIT
  9658  001D4E  6EF7               	movwf	tblptrh,c
  9659  001D50                     	endif
  9660  001D50                     	if	0	;There are less than 3 active tblptr bytes
  9661  001D50                     	endif
  9662  001D50  0008               	tblrd		*
  9663  001D52  CFF5 F03C          	movff	tablat,??_INT0_ISR+6
  9664  001D56  0E01               	movlw	1
  9665  001D58  6E3D               	movwf	(??_INT0_ISR+7)& (0+255),c
  9666  001D5A  2A3C               	incf	??_INT0_ISR+6,f,c
  9667  001D5C  D002               	goto	i2u368_44
  9668  001D5E                     i2u368_45:
  9669  001D5E  90D8               	bcf	status,0,c
  9670  001D60  363D               	rlcf	??_INT0_ISR+7,f,c
  9671  001D62                     i2u368_44:
  9672  001D62  2E3C               	decfsz	??_INT0_ISR+6,f,c
  9673  001D64  D7FC               	goto	i2u368_45
  9674  001D66  503D               	movf	??_INT0_ISR+7,w,c
  9675  001D68  103B               	iorwf	??_INT0_ISR+5,w,c
  9676  001D6A  1039               	iorwf	??_INT0_ISR+3,w,c
  9677  001D6C  1037               	iorwf	??_INT0_ISR+1,w,c
  9678  001D6E  128A               	iorwf	3978,f,c	;volatile
  9679                           
  9680                           ;ext_int.c: 42: LATC &= ~(1 << R1_BIT[range - 1]);
  9681  001D70  0EFF               	movlw	255
  9682  001D72  6E36               	movwf	??_INT0_ISR& (0+255),c
  9683  001D74  0EFF               	movlw	255
  9684  001D76  6E37               	movwf	(??_INT0_ISR+1)& (0+255),c
  9685  001D78  5051               	movf	_range,w,c
  9686  001D7A  6E38               	movwf	(??_INT0_ISR+2)& (0+255),c
  9687  001D7C  6A39               	clrf	(??_INT0_ISR+3)& (0+255),c
  9688  001D7E  5036               	movf	??_INT0_ISR,w,c
  9689  001D80  2638               	addwf	??_INT0_ISR+2,f,c
  9690  001D82  5037               	movf	??_INT0_ISR+1,w,c
  9691  001D84  2239               	addwfc	??_INT0_ISR+3,f,c
  9692  001D86  0E86               	movlw	low _R1_BIT
  9693  001D88  2438               	addwf	??_INT0_ISR+2,w,c
  9694  001D8A  6EF6               	movwf	tblptrl,c
  9695  001D8C  0E06               	movlw	high _R1_BIT
  9696  001D8E  2039               	addwfc	??_INT0_ISR+3,w,c
  9697  001D90  6EF7               	movwf	tblptrh,c
  9698  001D92                     	if	0	;There are less than 3 active tblptr bytes
  9699  001D92                     	endif
  9700  001D92  0008               	tblrd		*
  9701  001D94  CFF5 F03A          	movff	tablat,??_INT0_ISR+4
  9702  001D98  0E01               	movlw	1
  9703  001D9A  6E3B               	movwf	(??_INT0_ISR+5)& (0+255),c
  9704  001D9C  2A3A               	incf	??_INT0_ISR+4,f,c
  9705  001D9E  D002               	goto	i2u369_44
  9706  001DA0                     i2u369_45:
  9707  001DA0  90D8               	bcf	status,0,c
  9708  001DA2  363B               	rlcf	??_INT0_ISR+5,f,c
  9709  001DA4                     i2u369_44:
  9710  001DA4  2E3A               	decfsz	??_INT0_ISR+4,f,c
  9711  001DA6  D7FC               	goto	i2u369_45
  9712  001DA8  503B               	movf	??_INT0_ISR+5,w,c
  9713  001DAA  0AFF               	xorlw	255
  9714  001DAC  168B               	andwf	3979,f,c	;volatile
  9715                           
  9716                           ;ext_int.c: 43: LATB &= ~(1 << RSET_BIT[range - 1]);
  9717  001DAE  0EFF               	movlw	255
  9718  001DB0  6E36               	movwf	??_INT0_ISR& (0+255),c
  9719  001DB2  0EFF               	movlw	255
  9720  001DB4  6E37               	movwf	(??_INT0_ISR+1)& (0+255),c
  9721  001DB6  5051               	movf	_range,w,c
  9722  001DB8  6E38               	movwf	(??_INT0_ISR+2)& (0+255),c
  9723  001DBA  6A39               	clrf	(??_INT0_ISR+3)& (0+255),c
  9724  001DBC  5036               	movf	??_INT0_ISR,w,c
  9725  001DBE  2638               	addwf	??_INT0_ISR+2,f,c
  9726  001DC0  5037               	movf	??_INT0_ISR+1,w,c
  9727  001DC2  2239               	addwfc	??_INT0_ISR+3,f,c
  9728  001DC4  0E8B               	movlw	low _RSET_BIT
  9729  001DC6  2438               	addwf	??_INT0_ISR+2,w,c
  9730  001DC8  6EF6               	movwf	tblptrl,c
  9731  001DCA  0E06               	movlw	high _RSET_BIT
  9732  001DCC  2039               	addwfc	??_INT0_ISR+3,w,c
  9733  001DCE  6EF7               	movwf	tblptrh,c
  9734  001DD0                     	if	0	;There are less than 3 active tblptr bytes
  9735  001DD0                     	endif
  9736  001DD0  0008               	tblrd		*
  9737  001DD2  CFF5 F03A          	movff	tablat,??_INT0_ISR+4
  9738  001DD6  0E01               	movlw	1
  9739  001DD8  6E3B               	movwf	(??_INT0_ISR+5)& (0+255),c
  9740  001DDA  2A3A               	incf	??_INT0_ISR+4,f,c
  9741  001DDC  D002               	goto	i2u370_44
  9742  001DDE                     i2u370_45:
  9743  001DDE  90D8               	bcf	status,0,c
  9744  001DE0  363B               	rlcf	??_INT0_ISR+5,f,c
  9745  001DE2                     i2u370_44:
  9746  001DE2  2E3A               	decfsz	??_INT0_ISR+4,f,c
  9747  001DE4  D7FC               	goto	i2u370_45
  9748  001DE6  503B               	movf	??_INT0_ISR+5,w,c
  9749  001DE8  0AFF               	xorlw	255
  9750  001DEA  168A               	andwf	3978,f,c	;volatile
  9751  001DEC                     i2l3393:
  9752                           
  9753                           ;ext_int.c: 44: }
  9754                           ;ext_int.c: 48: result = cal_current[4] * ((float)reading - 27) / 3.01004;
  9755  001DEC  0E83               	movlw	low (_cal_current+12)
  9756  001DEE  6EF6               	movwf	tblptrl,c
  9757  001DF0  0E06               	movlw	high (_cal_current+12)
  9758  001DF2  6EF7               	movwf	tblptrh,c
  9759  001DF4                     	if	0	;tblptru may be non-zero
  9760  001DF4                     	endif
  9761  001DF4                     	if	0	;tblptru may be non-zero
  9762  001DF4                     	endif
  9763  001DF4  0009               	tblrd		*+
  9764  001DF6  CFF5 F01B          	movff	tablat,i2___ftmul@f2
  9765  001DFA  0009               	tblrd		*+
  9766  001DFC  CFF5 F01C          	movff	tablat,i2___ftmul@f2+1
  9767  001E00  000A               	tblrd		*-
  9768  001E02  CFF5 F01D          	movff	tablat,i2___ftmul@f2+2
  9769  001E06  0E00               	movlw	0
  9770  001E08  6E0F               	movwf	i2___ftadd@f2,c
  9771  001E0A  0ED8               	movlw	216
  9772  001E0C  6E10               	movwf	i2___ftadd@f2+1,c
  9773  001E0E  0EC1               	movlw	193
  9774  001E10  6E11               	movwf	i2___ftadd@f2+2,c
  9775  001E12  C054  F009         	movff	_reading,___lwtoft@c
  9776  001E16  C055  F00A         	movff	_reading+1,___lwtoft@c+1
  9777  001E1A  ECC7  F019         	call	___lwtoft	;wreg free
  9778  001E1E  C009  F00C         	movff	?___lwtoft,i2___ftadd@f1
  9779  001E22  C00A  F00D         	movff	?___lwtoft+1,i2___ftadd@f1+1
  9780  001E26  C00B  F00E         	movff	?___lwtoft+2,i2___ftadd@f1+2
  9781  001E2A  EC3B  F00F         	call	i2___ftadd	;wreg free
  9782  001E2E  C00C  F018         	movff	?i2___ftadd,i2___ftmul@f1
  9783  001E32  C00D  F019         	movff	?i2___ftadd+1,i2___ftmul@f1+1
  9784  001E36  C00E  F01A         	movff	?i2___ftadd+2,i2___ftmul@f1+2
  9785  001E3A  ECD4  F014         	call	i2___ftmul	;wreg free
  9786  001E3E  C018  F027         	movff	?i2___ftmul,i2___ftdiv@f1
  9787  001E42  C019  F028         	movff	?i2___ftmul+1,i2___ftdiv@f1+1
  9788  001E46  C01A  F029         	movff	?i2___ftmul+2,i2___ftdiv@f1+2
  9789  001E4A  0EA4               	movlw	164
  9790  001E4C  6E2A               	movwf	i2___ftdiv@f2,c
  9791  001E4E  0E40               	movlw	64
  9792  001E50  6E2B               	movwf	i2___ftdiv@f2+1,c
  9793  001E52  0E40               	movlw	64
  9794  001E54  6E2C               	movwf	i2___ftdiv@f2+2,c
  9795  001E56  EC4E  F015         	call	i2___ftdiv	;wreg free
  9796  001E5A  C027  F0D5         	movff	?i2___ftdiv,_result
  9797  001E5E  C028  F0D6         	movff	?i2___ftdiv+1,_result+1
  9798  001E62  C029  F0D7         	movff	?i2___ftdiv+2,_result+2
  9799                           
  9800                           ;ext_int.c: 53: last_range = range;
  9801  001E66  C051  F050         	movff	_range,_last_range
  9802                           
  9803                           ;ext_int.c: 56: TMR0_Reload();
  9804  001E6A  EC23  F01A         	call	_TMR0_Reload	;wreg free
  9805                           
  9806                           ;ext_int.c: 59: TMR0_StartTimer();
  9807  001E6E  EC2E  F01A         	call	i2_TMR0_StartTimer	;wreg free
  9808                           
  9809                           ;ext_int.c: 62: (INTCONbits.INT0IF = 0);
  9810  001E72  92F2               	bcf	intcon,1,c	;volatile
  9811  001E74  0012               	return		;funcret
  9812  001E76                     __end_of_INT0_ISR:
  9813                           	opt stack 0
  9814                           tosu	equ	0xFFF
  9815                           tosh	equ	0xFFE
  9816                           tosl	equ	0xFFD
  9817                           pclatu	equ	0xFFB
  9818                           pclath	equ	0xFFA
  9819                           tblptru	equ	0xFF8
  9820                           tblptrh	equ	0xFF7
  9821                           tblptrl	equ	0xFF6
  9822                           tablat	equ	0xFF5
  9823                           prodh	equ	0xFF4
  9824                           prodl	equ	0xFF3
  9825                           intcon	equ	0xFF2
  9826                           intcon2	equ	0xFF1
  9827                           postinc0	equ	0xFEE
  9828                           fsr0h	equ	0xFEA
  9829                           fsr0l	equ	0xFE9
  9830                           wreg	equ	0xFE8
  9831                           postdec1	equ	0xFE5
  9832                           fsr1h	equ	0xFE2
  9833                           fsr1l	equ	0xFE1
  9834                           indf2	equ	0xFDF
  9835                           postinc2	equ	0xFDE
  9836                           postdec2	equ	0xFDD
  9837                           fsr2h	equ	0xFDA
  9838                           fsr2l	equ	0xFD9
  9839                           status	equ	0xFD8
  9840                           
  9841 ;; *************** function i2___ftmul *****************
  9842 ;; Defined at:
  9843 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  9844 ;; Parameters:    Size  Location     Type
  9845 ;;  f1              3   23[COMRAM] float 
  9846 ;;  f2              3   26[COMRAM] float 
  9847 ;; Auto vars:     Size  Location     Type
  9848 ;;  __ftmul         3   33[COMRAM] unsigned um
  9849 ;;  __ftmul         1   37[COMRAM] unsigned char 
  9850 ;;  __ftmul         1   36[COMRAM] unsigned char 
  9851 ;;  __ftmul         1   32[COMRAM] unsigned char 
  9852 ;; Return value:  Size  Location     Type
  9853 ;;                  3   23[COMRAM] float 
  9854 ;; Registers used:
  9855 ;;		wreg, status,2, status,0, cstack
  9856 ;; Tracked objects:
  9857 ;;		On entry : 0/0
  9858 ;;		On exit  : 0/0
  9859 ;;		Unchanged: 0/0
  9860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9861 ;;      Params:         6       0       0       0       0       0       0
  9862 ;;      Locals:         6       0       0       0       0       0       0
  9863 ;;      Temps:          3       0       0       0       0       0       0
  9864 ;;      Totals:        15       0       0       0       0       0       0
  9865 ;;Total ram usage:       15 bytes
  9866 ;; Hardware stack levels used:    1
  9867 ;; Hardware stack levels required when called:    1
  9868 ;; This function calls:
  9869 ;;		i2___ftpack
  9870 ;; This function is called by:
  9871 ;;		_INT0_ISR
  9872 ;; This function uses a non-reentrant model
  9873 ;;
  9874                           
  9875                           	psect	text41
  9876  0029A8                     __ptext41:
  9877                           	opt stack 0
  9878  0029A8                     i2___ftmul:
  9879                           	opt stack 23
  9880                           
  9881                           ;incstack = 0
  9882  0029A8  C01A  F01E         	movff	i2___ftmul@f1+2,??i2___ftmul
  9883  0029AC  6A1F               	clrf	(??i2___ftmul+1)& (0+255),c
  9884  0029AE  6A20               	clrf	(??i2___ftmul+2)& (0+255),c
  9885  0029B0  3419               	rlcf	i2___ftmul@f1+1,w,c
  9886  0029B2  361E               	rlcf	??i2___ftmul& (0+255),f,c
  9887  0029B4  E301               	bnc	u353_41
  9888  0029B6  801F               	bsf	(??i2___ftmul+1)& (0+255),0,c
  9889  0029B8                     u353_41:
  9890  0029B8  501E               	movf	??i2___ftmul,w,c
  9891  0029BA  6E21               	movwf	i2___ftmul@exp,c
  9892  0029BC  5021               	movf	i2___ftmul@exp,w,c
  9893  0029BE  A4D8               	btfss	status,2,c
  9894  0029C0  D007               	goto	i2l3345
  9895  0029C2  0E00               	movlw	0
  9896  0029C4  6E18               	movwf	?i2___ftmul,c
  9897  0029C6  0E00               	movlw	0
  9898  0029C8  6E19               	movwf	?i2___ftmul+1,c
  9899  0029CA  0E00               	movlw	0
  9900  0029CC  6E1A               	movwf	?i2___ftmul+2,c
  9901  0029CE  0012               	return	
  9902  0029D0                     i2l3345:
  9903  0029D0  C01D  F01E         	movff	i2___ftmul@f2+2,??i2___ftmul
  9904  0029D4  6A1F               	clrf	(??i2___ftmul+1)& (0+255),c
  9905  0029D6  6A20               	clrf	(??i2___ftmul+2)& (0+255),c
  9906  0029D8  341C               	rlcf	i2___ftmul@f2+1,w,c
  9907  0029DA  361E               	rlcf	??i2___ftmul& (0+255),f,c
  9908  0029DC  E301               	bnc	u355_41
  9909  0029DE  801F               	bsf	(??i2___ftmul+1)& (0+255),0,c
  9910  0029E0                     u355_41:
  9911  0029E0  501E               	movf	??i2___ftmul,w,c
  9912  0029E2  6E26               	movwf	i2___ftmul@sign,c
  9913  0029E4  5026               	movf	i2___ftmul@sign,w,c
  9914  0029E6  A4D8               	btfss	status,2,c
  9915  0029E8  D007               	goto	i2l3351
  9916  0029EA  0E00               	movlw	0
  9917  0029EC  6E18               	movwf	?i2___ftmul,c
  9918  0029EE  0E00               	movlw	0
  9919  0029F0  6E19               	movwf	?i2___ftmul+1,c
  9920  0029F2  0E00               	movlw	0
  9921  0029F4  6E1A               	movwf	?i2___ftmul+2,c
  9922  0029F6  0012               	return	
  9923  0029F8                     i2l3351:
  9924  0029F8  5026               	movf	i2___ftmul@sign,w,c
  9925  0029FA  0F7B               	addlw	123
  9926  0029FC  2621               	addwf	i2___ftmul@exp,f,c
  9927  0029FE  C01A  F026         	movff	i2___ftmul@f1+2,i2___ftmul@sign
  9928  002A02  501D               	movf	i2___ftmul@f2+2,w,c
  9929  002A04  1A26               	xorwf	i2___ftmul@sign,f,c
  9930  002A06  0E80               	movlw	128
  9931  002A08  1626               	andwf	i2___ftmul@sign,f,c
  9932  002A0A  8E19               	bsf	i2___ftmul@f1+1,7,c
  9933  002A0C  8E1C               	bsf	i2___ftmul@f2+1,7,c
  9934  002A0E  0EFF               	movlw	255
  9935  002A10  161B               	andwf	i2___ftmul@f2,f,c
  9936  002A12  0EFF               	movlw	255
  9937  002A14  161C               	andwf	i2___ftmul@f2+1,f,c
  9938  002A16  0E00               	movlw	0
  9939  002A18  161D               	andwf	i2___ftmul@f2+2,f,c
  9940  002A1A  0E00               	movlw	0
  9941  002A1C  6E22               	movwf	i2___ftmul@f3_as_product,c
  9942  002A1E  0E00               	movlw	0
  9943  002A20  6E23               	movwf	i2___ftmul@f3_as_product+1,c
  9944  002A22  0E00               	movlw	0
  9945  002A24  6E24               	movwf	i2___ftmul@f3_as_product+2,c
  9946  002A26  0E07               	movlw	7
  9947  002A28  6E25               	movwf	i2___ftmul@cntr,c
  9948  002A2A                     i2l3365:
  9949  002A2A  A018               	btfss	i2___ftmul@f1,0,c
  9950  002A2C  D006               	goto	i2l3369
  9951  002A2E  501B               	movf	i2___ftmul@f2,w,c
  9952  002A30  2622               	addwf	i2___ftmul@f3_as_product,f,c
  9953  002A32  501C               	movf	i2___ftmul@f2+1,w,c
  9954  002A34  2223               	addwfc	i2___ftmul@f3_as_product+1,f,c
  9955  002A36  501D               	movf	i2___ftmul@f2+2,w,c
  9956  002A38  2224               	addwfc	i2___ftmul@f3_as_product+2,f,c
  9957  002A3A                     i2l3369:
  9958  002A3A  90D8               	bcf	status,0,c
  9959  002A3C  321A               	rrcf	i2___ftmul@f1+2,f,c
  9960  002A3E  3219               	rrcf	i2___ftmul@f1+1,f,c
  9961  002A40  3218               	rrcf	i2___ftmul@f1,f,c
  9962  002A42  90D8               	bcf	status,0,c
  9963  002A44  361B               	rlcf	i2___ftmul@f2,f,c
  9964  002A46  361C               	rlcf	i2___ftmul@f2+1,f,c
  9965  002A48  361D               	rlcf	i2___ftmul@f2+2,f,c
  9966  002A4A  2E25               	decfsz	i2___ftmul@cntr,f,c
  9967  002A4C  D7EE               	goto	i2l3365
  9968  002A4E  0E09               	movlw	9
  9969  002A50  6E25               	movwf	i2___ftmul@cntr,c
  9970  002A52                     i2l3375:
  9971  002A52  A018               	btfss	i2___ftmul@f1,0,c
  9972  002A54  D006               	goto	i2l3379
  9973  002A56  501B               	movf	i2___ftmul@f2,w,c
  9974  002A58  2622               	addwf	i2___ftmul@f3_as_product,f,c
  9975  002A5A  501C               	movf	i2___ftmul@f2+1,w,c
  9976  002A5C  2223               	addwfc	i2___ftmul@f3_as_product+1,f,c
  9977  002A5E  501D               	movf	i2___ftmul@f2+2,w,c
  9978  002A60  2224               	addwfc	i2___ftmul@f3_as_product+2,f,c
  9979  002A62                     i2l3379:
  9980  002A62  90D8               	bcf	status,0,c
  9981  002A64  321A               	rrcf	i2___ftmul@f1+2,f,c
  9982  002A66  3219               	rrcf	i2___ftmul@f1+1,f,c
  9983  002A68  3218               	rrcf	i2___ftmul@f1,f,c
  9984  002A6A  90D8               	bcf	status,0,c
  9985  002A6C  3224               	rrcf	i2___ftmul@f3_as_product+2,f,c
  9986  002A6E  3223               	rrcf	i2___ftmul@f3_as_product+1,f,c
  9987  002A70  3222               	rrcf	i2___ftmul@f3_as_product,f,c
  9988  002A72  2E25               	decfsz	i2___ftmul@cntr,f,c
  9989  002A74  D7EE               	goto	i2l3375
  9990  002A76  C022  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
  9991  002A7A  C023  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
  9992  002A7E  C024  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
  9993  002A82  C021  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
  9994  002A86  C026  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
  9995  002A8A  ECE2  F016         	call	i2___ftpack	;wreg free
  9996  002A8E  C001  F018         	movff	?i2___ftpack,?i2___ftmul
  9997  002A92  C002  F019         	movff	?i2___ftpack+1,?i2___ftmul+1
  9998  002A96  C003  F01A         	movff	?i2___ftpack+2,?i2___ftmul+2
  9999  002A9A  0012               	return	
 10000  002A9C                     __end_ofi2___ftmul:
 10001                           	opt stack 0
 10002                           tosu	equ	0xFFF
 10003                           tosh	equ	0xFFE
 10004                           tosl	equ	0xFFD
 10005                           pclatu	equ	0xFFB
 10006                           pclath	equ	0xFFA
 10007                           tblptru	equ	0xFF8
 10008                           tblptrh	equ	0xFF7
 10009                           tblptrl	equ	0xFF6
 10010                           tablat	equ	0xFF5
 10011                           prodh	equ	0xFF4
 10012                           prodl	equ	0xFF3
 10013                           intcon	equ	0xFF2
 10014                           intcon2	equ	0xFF1
 10015                           postinc0	equ	0xFEE
 10016                           fsr0h	equ	0xFEA
 10017                           fsr0l	equ	0xFE9
 10018                           wreg	equ	0xFE8
 10019                           postdec1	equ	0xFE5
 10020                           fsr1h	equ	0xFE2
 10021                           fsr1l	equ	0xFE1
 10022                           indf2	equ	0xFDF
 10023                           postinc2	equ	0xFDE
 10024                           postdec2	equ	0xFDD
 10025                           fsr2h	equ	0xFDA
 10026                           fsr2l	equ	0xFD9
 10027                           status	equ	0xFD8
 10028                           
 10029 ;; *************** function i2___ftdiv *****************
 10030 ;; Defined at:
 10031 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
 10032 ;; Parameters:    Size  Location     Type
 10033 ;;  f1              3   38[COMRAM] float 
 10034 ;;  f2              3   41[COMRAM] float 
 10035 ;; Auto vars:     Size  Location     Type
 10036 ;;  __ftdiv         3   48[COMRAM] float 
 10037 ;;  __ftdiv         1   52[COMRAM] unsigned char 
 10038 ;;  __ftdiv         1   51[COMRAM] unsigned char 
 10039 ;;  __ftdiv         1   47[COMRAM] unsigned char 
 10040 ;; Return value:  Size  Location     Type
 10041 ;;                  3   38[COMRAM] float 
 10042 ;; Registers used:
 10043 ;;		wreg, status,2, status,0, cstack
 10044 ;; Tracked objects:
 10045 ;;		On entry : 0/0
 10046 ;;		On exit  : 0/0
 10047 ;;		Unchanged: 0/0
 10048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10049 ;;      Params:         6       0       0       0       0       0       0
 10050 ;;      Locals:         6       0       0       0       0       0       0
 10051 ;;      Temps:          3       0       0       0       0       0       0
 10052 ;;      Totals:        15       0       0       0       0       0       0
 10053 ;;Total ram usage:       15 bytes
 10054 ;; Hardware stack levels used:    1
 10055 ;; Hardware stack levels required when called:    1
 10056 ;; This function calls:
 10057 ;;		i2___ftpack
 10058 ;; This function is called by:
 10059 ;;		_INT0_ISR
 10060 ;; This function uses a non-reentrant model
 10061 ;;
 10062                           
 10063                           	psect	text42
 10064  002A9C                     __ptext42:
 10065                           	opt stack 0
 10066  002A9C                     i2___ftdiv:
 10067                           	opt stack 23
 10068                           
 10069                           ;incstack = 0
 10070  002A9C  C029  F02D         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 10071  002AA0  6A2E               	clrf	(??i2___ftdiv+1)& (0+255),c
 10072  002AA2  6A2F               	clrf	(??i2___ftdiv+2)& (0+255),c
 10073  002AA4  3428               	rlcf	i2___ftdiv@f1+1,w,c
 10074  002AA6  362D               	rlcf	??i2___ftdiv& (0+255),f,c
 10075  002AA8  E301               	bnc	u348_41
 10076  002AAA  802E               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 10077  002AAC                     u348_41:
 10078  002AAC  502D               	movf	??i2___ftdiv,w,c
 10079  002AAE  6E34               	movwf	i2___ftdiv@exp,c
 10080  002AB0  5034               	movf	i2___ftdiv@exp,w,c
 10081  002AB2  A4D8               	btfss	status,2,c
 10082  002AB4  D007               	goto	i2l3299
 10083  002AB6  0E00               	movlw	0
 10084  002AB8  6E27               	movwf	?i2___ftdiv,c
 10085  002ABA  0E00               	movlw	0
 10086  002ABC  6E28               	movwf	?i2___ftdiv+1,c
 10087  002ABE  0E00               	movlw	0
 10088  002AC0  6E29               	movwf	?i2___ftdiv+2,c
 10089  002AC2  0012               	return	
 10090  002AC4                     i2l3299:
 10091  002AC4  C02C  F02D         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 10092  002AC8  6A2E               	clrf	(??i2___ftdiv+1)& (0+255),c
 10093  002ACA  6A2F               	clrf	(??i2___ftdiv+2)& (0+255),c
 10094  002ACC  342B               	rlcf	i2___ftdiv@f2+1,w,c
 10095  002ACE  362D               	rlcf	??i2___ftdiv& (0+255),f,c
 10096  002AD0  E301               	bnc	u350_41
 10097  002AD2  802E               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 10098  002AD4                     u350_41:
 10099  002AD4  502D               	movf	??i2___ftdiv,w,c
 10100  002AD6  6E35               	movwf	i2___ftdiv@sign,c
 10101  002AD8  5035               	movf	i2___ftdiv@sign,w,c
 10102  002ADA  A4D8               	btfss	status,2,c
 10103  002ADC  D007               	goto	i2l3305
 10104  002ADE  0E00               	movlw	0
 10105  002AE0  6E27               	movwf	?i2___ftdiv,c
 10106  002AE2  0E00               	movlw	0
 10107  002AE4  6E28               	movwf	?i2___ftdiv+1,c
 10108  002AE6  0E00               	movlw	0
 10109  002AE8  6E29               	movwf	?i2___ftdiv+2,c
 10110  002AEA  0012               	return	
 10111  002AEC                     i2l3305:
 10112  002AEC  0E00               	movlw	0
 10113  002AEE  6E31               	movwf	i2___ftdiv@f3,c
 10114  002AF0  0E00               	movlw	0
 10115  002AF2  6E32               	movwf	i2___ftdiv@f3+1,c
 10116  002AF4  0E00               	movlw	0
 10117  002AF6  6E33               	movwf	i2___ftdiv@f3+2,c
 10118  002AF8  5035               	movf	i2___ftdiv@sign,w,c
 10119  002AFA  0F89               	addlw	137
 10120  002AFC  5E34               	subwf	i2___ftdiv@exp,f,c
 10121  002AFE  C029  F035         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 10122  002B02  502C               	movf	i2___ftdiv@f2+2,w,c
 10123  002B04  1A35               	xorwf	i2___ftdiv@sign,f,c
 10124  002B06  0E80               	movlw	128
 10125  002B08  1635               	andwf	i2___ftdiv@sign,f,c
 10126  002B0A  8E28               	bsf	i2___ftdiv@f1+1,7,c
 10127  002B0C  0EFF               	movlw	255
 10128  002B0E  1627               	andwf	i2___ftdiv@f1,f,c
 10129  002B10  0EFF               	movlw	255
 10130  002B12  1628               	andwf	i2___ftdiv@f1+1,f,c
 10131  002B14  0E00               	movlw	0
 10132  002B16  1629               	andwf	i2___ftdiv@f1+2,f,c
 10133  002B18  8E2B               	bsf	i2___ftdiv@f2+1,7,c
 10134  002B1A  0EFF               	movlw	255
 10135  002B1C  162A               	andwf	i2___ftdiv@f2,f,c
 10136  002B1E  0EFF               	movlw	255
 10137  002B20  162B               	andwf	i2___ftdiv@f2+1,f,c
 10138  002B22  0E00               	movlw	0
 10139  002B24  162C               	andwf	i2___ftdiv@f2+2,f,c
 10140  002B26  0E18               	movlw	24
 10141  002B28  6E30               	movwf	i2___ftdiv@cntr,c
 10142  002B2A                     i2l3325:
 10143  002B2A  90D8               	bcf	status,0,c
 10144  002B2C  3631               	rlcf	i2___ftdiv@f3,f,c
 10145  002B2E  3632               	rlcf	i2___ftdiv@f3+1,f,c
 10146  002B30  3633               	rlcf	i2___ftdiv@f3+2,f,c
 10147  002B32  502A               	movf	i2___ftdiv@f2,w,c
 10148  002B34  5C27               	subwf	i2___ftdiv@f1,w,c
 10149  002B36  502B               	movf	i2___ftdiv@f2+1,w,c
 10150  002B38  5828               	subwfb	i2___ftdiv@f1+1,w,c
 10151  002B3A  502C               	movf	i2___ftdiv@f2+2,w,c
 10152  002B3C  5829               	subwfb	i2___ftdiv@f1+2,w,c
 10153  002B3E  A0D8               	btfss	status,0,c
 10154  002B40  D007               	goto	i2l734
 10155  002B42  502A               	movf	i2___ftdiv@f2,w,c
 10156  002B44  5E27               	subwf	i2___ftdiv@f1,f,c
 10157  002B46  502B               	movf	i2___ftdiv@f2+1,w,c
 10158  002B48  5A28               	subwfb	i2___ftdiv@f1+1,f,c
 10159  002B4A  502C               	movf	i2___ftdiv@f2+2,w,c
 10160  002B4C  5A29               	subwfb	i2___ftdiv@f1+2,f,c
 10161  002B4E  8031               	bsf	i2___ftdiv@f3,0,c
 10162  002B50                     i2l734:
 10163  002B50  90D8               	bcf	status,0,c
 10164  002B52  3627               	rlcf	i2___ftdiv@f1,f,c
 10165  002B54  3628               	rlcf	i2___ftdiv@f1+1,f,c
 10166  002B56  3629               	rlcf	i2___ftdiv@f1+2,f,c
 10167  002B58  2E30               	decfsz	i2___ftdiv@cntr,f,c
 10168  002B5A  D7E7               	goto	i2l3325
 10169  002B5C  C031  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 10170  002B60  C032  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 10171  002B64  C033  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 10172  002B68  C034  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 10173  002B6C  C035  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 10174  002B70  ECE2  F016         	call	i2___ftpack	;wreg free
 10175  002B74  C001  F027         	movff	?i2___ftpack,?i2___ftdiv
 10176  002B78  C002  F028         	movff	?i2___ftpack+1,?i2___ftdiv+1
 10177  002B7C  C003  F029         	movff	?i2___ftpack+2,?i2___ftdiv+2
 10178  002B80  0012               	return	
 10179  002B82                     __end_ofi2___ftdiv:
 10180                           	opt stack 0
 10181                           tosu	equ	0xFFF
 10182                           tosh	equ	0xFFE
 10183                           tosl	equ	0xFFD
 10184                           pclatu	equ	0xFFB
 10185                           pclath	equ	0xFFA
 10186                           tblptru	equ	0xFF8
 10187                           tblptrh	equ	0xFF7
 10188                           tblptrl	equ	0xFF6
 10189                           tablat	equ	0xFF5
 10190                           prodh	equ	0xFF4
 10191                           prodl	equ	0xFF3
 10192                           intcon	equ	0xFF2
 10193                           intcon2	equ	0xFF1
 10194                           postinc0	equ	0xFEE
 10195                           fsr0h	equ	0xFEA
 10196                           fsr0l	equ	0xFE9
 10197                           wreg	equ	0xFE8
 10198                           postdec1	equ	0xFE5
 10199                           fsr1h	equ	0xFE2
 10200                           fsr1l	equ	0xFE1
 10201                           indf2	equ	0xFDF
 10202                           postinc2	equ	0xFDE
 10203                           postdec2	equ	0xFDD
 10204                           fsr2h	equ	0xFDA
 10205                           fsr2l	equ	0xFD9
 10206                           status	equ	0xFD8
 10207                           
 10208 ;; *************** function i2___ftadd *****************
 10209 ;; Defined at:
 10210 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
 10211 ;; Parameters:    Size  Location     Type
 10212 ;;  f1              3   11[COMRAM] float 
 10213 ;;  f2              3   14[COMRAM] float 
 10214 ;; Auto vars:     Size  Location     Type
 10215 ;;  __ftadd         1   22[COMRAM] unsigned char 
 10216 ;;  __ftadd         1   21[COMRAM] unsigned char 
 10217 ;;  __ftadd         1   20[COMRAM] unsigned char 
 10218 ;; Return value:  Size  Location     Type
 10219 ;;                  3   11[COMRAM] float 
 10220 ;; Registers used:
 10221 ;;		wreg, status,2, status,0, cstack
 10222 ;; Tracked objects:
 10223 ;;		On entry : 0/0
 10224 ;;		On exit  : 0/0
 10225 ;;		Unchanged: 0/0
 10226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10227 ;;      Params:         6       0       0       0       0       0       0
 10228 ;;      Locals:         3       0       0       0       0       0       0
 10229 ;;      Temps:          3       0       0       0       0       0       0
 10230 ;;      Totals:        12       0       0       0       0       0       0
 10231 ;;Total ram usage:       12 bytes
 10232 ;; Hardware stack levels used:    1
 10233 ;; Hardware stack levels required when called:    1
 10234 ;; This function calls:
 10235 ;;		i2___ftpack
 10236 ;; This function is called by:
 10237 ;;		_INT0_ISR
 10238 ;; This function uses a non-reentrant model
 10239 ;;
 10240                           
 10241                           	psect	text43
 10242  001E76                     __ptext43:
 10243                           	opt stack 0
 10244  001E76                     i2___ftadd:
 10245                           	opt stack 23
 10246                           
 10247                           ;incstack = 0
 10248  001E76  C00E  F012         	movff	i2___ftadd@f1+2,??i2___ftadd
 10249  001E7A  6A13               	clrf	(??i2___ftadd+1)& (0+255),c
 10250  001E7C  6A14               	clrf	(??i2___ftadd+2)& (0+255),c
 10251  001E7E  340D               	rlcf	i2___ftadd@f1+1,w,c
 10252  001E80  3612               	rlcf	??i2___ftadd& (0+255),f,c
 10253  001E82  E301               	bnc	u327_41
 10254  001E84  8013               	bsf	(??i2___ftadd+1)& (0+255),0,c
 10255  001E86                     u327_41:
 10256  001E86  5012               	movf	??i2___ftadd,w,c
 10257  001E88  6E17               	movwf	i2___ftadd@exp1,c
 10258  001E8A  C011  F012         	movff	i2___ftadd@f2+2,??i2___ftadd
 10259  001E8E  6A13               	clrf	(??i2___ftadd+1)& (0+255),c
 10260  001E90  6A14               	clrf	(??i2___ftadd+2)& (0+255),c
 10261  001E92  3410               	rlcf	i2___ftadd@f2+1,w,c
 10262  001E94  3612               	rlcf	??i2___ftadd& (0+255),f,c
 10263  001E96  E301               	bnc	u328_41
 10264  001E98  8013               	bsf	(??i2___ftadd+1)& (0+255),0,c
 10265  001E9A                     u328_41:
 10266  001E9A  5012               	movf	??i2___ftadd,w,c
 10267  001E9C  6E16               	movwf	i2___ftadd@exp2,c
 10268  001E9E  5017               	movf	i2___ftadd@exp1,w,c
 10269  001EA0  B4D8               	btfsc	status,2,c
 10270  001EA2  D00B               	goto	i2l699
 10271  001EA4  5016               	movf	i2___ftadd@exp2,w,c
 10272  001EA6  5C17               	subwf	i2___ftadd@exp1,w,c
 10273  001EA8  B0D8               	btfsc	status,0,c
 10274  001EAA  D00E               	goto	i2l3231
 10275  001EAC  5017               	movf	i2___ftadd@exp1,w,c
 10276  001EAE  0800               	sublw	0
 10277  001EB0  2416               	addwf	i2___ftadd@exp2,w,c
 10278  001EB2  6E12               	movwf	??i2___ftadd& (0+255),c
 10279  001EB4  0E18               	movlw	24
 10280  001EB6  6412               	cpfsgt	??i2___ftadd,c
 10281  001EB8  D007               	goto	i2l3231
 10282  001EBA                     i2l699:
 10283  001EBA  C00F  F00C         	movff	i2___ftadd@f2,?i2___ftadd
 10284  001EBE  C010  F00D         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 10285  001EC2  C011  F00E         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 10286  001EC6  0012               	return	
 10287  001EC8                     i2l3231:
 10288  001EC8  5016               	movf	i2___ftadd@exp2,w,c
 10289  001ECA  B4D8               	btfsc	status,2,c
 10290  001ECC  D00B               	goto	i2l703
 10291  001ECE  5017               	movf	i2___ftadd@exp1,w,c
 10292  001ED0  5C16               	subwf	i2___ftadd@exp2,w,c
 10293  001ED2  B0D8               	btfsc	status,0,c
 10294  001ED4  D00E               	goto	i2l3237
 10295  001ED6  5016               	movf	i2___ftadd@exp2,w,c
 10296  001ED8  0800               	sublw	0
 10297  001EDA  2417               	addwf	i2___ftadd@exp1,w,c
 10298  001EDC  6E12               	movwf	??i2___ftadd& (0+255),c
 10299  001EDE  0E18               	movlw	24
 10300  001EE0  6412               	cpfsgt	??i2___ftadd,c
 10301  001EE2  D007               	goto	i2l3237
 10302  001EE4                     i2l703:
 10303  001EE4  C00C  F00C         	movff	i2___ftadd@f1,?i2___ftadd
 10304  001EE8  C00D  F00D         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 10305  001EEC  C00E  F00E         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 10306  001EF0  0012               	return	
 10307  001EF2                     i2l3237:
 10308  001EF2  0E06               	movlw	6
 10309  001EF4  6E15               	movwf	i2___ftadd@sign,c
 10310  001EF6  BE0E               	btfsc	i2___ftadd@f1+2,7,c
 10311  001EF8  8E15               	bsf	i2___ftadd@sign,7,c
 10312  001EFA  BE11               	btfsc	i2___ftadd@f2+2,7,c
 10313  001EFC  8C15               	bsf	i2___ftadd@sign,6,c
 10314  001EFE  8E0D               	bsf	i2___ftadd@f1+1,7,c
 10315  001F00  0EFF               	movlw	255
 10316  001F02  160C               	andwf	i2___ftadd@f1,f,c
 10317  001F04  0EFF               	movlw	255
 10318  001F06  160D               	andwf	i2___ftadd@f1+1,f,c
 10319  001F08  0E00               	movlw	0
 10320  001F0A  160E               	andwf	i2___ftadd@f1+2,f,c
 10321  001F0C  8E10               	bsf	i2___ftadd@f2+1,7,c
 10322  001F0E  0EFF               	movlw	255
 10323  001F10  160F               	andwf	i2___ftadd@f2,f,c
 10324  001F12  0EFF               	movlw	255
 10325  001F14  1610               	andwf	i2___ftadd@f2+1,f,c
 10326  001F16  0E00               	movlw	0
 10327  001F18  1611               	andwf	i2___ftadd@f2+2,f,c
 10328  001F1A  5016               	movf	i2___ftadd@exp2,w,c
 10329  001F1C  5C17               	subwf	i2___ftadd@exp1,w,c
 10330  001F1E  B0D8               	btfsc	status,0,c
 10331  001F20  D01B               	goto	i2l3263
 10332  001F22                     i2l3253:
 10333  001F22  90D8               	bcf	status,0,c
 10334  001F24  360F               	rlcf	i2___ftadd@f2,f,c
 10335  001F26  3610               	rlcf	i2___ftadd@f2+1,f,c
 10336  001F28  3611               	rlcf	i2___ftadd@f2+2,f,c
 10337  001F2A  0616               	decf	i2___ftadd@exp2,f,c
 10338  001F2C  5017               	movf	i2___ftadd@exp1,w,c
 10339  001F2E  1816               	xorwf	i2___ftadd@exp2,w,c
 10340  001F30  B4D8               	btfsc	status,2,c
 10341  001F32  D00D               	goto	i2l3261
 10342  001F34  0615               	decf	i2___ftadd@sign,f,c
 10343  001F36  C015  F012         	movff	i2___ftadd@sign,??i2___ftadd
 10344  001F3A  0E07               	movlw	7
 10345  001F3C  1612               	andwf	??i2___ftadd,f,c
 10346  001F3E  B4D8               	btfsc	status,2,c
 10347  001F40  D006               	goto	i2l3261
 10348  001F42  D7EF               	goto	i2l3253
 10349  001F44                     i2l3259:
 10350  001F44  90D8               	bcf	status,0,c
 10351  001F46  320E               	rrcf	i2___ftadd@f1+2,f,c
 10352  001F48  320D               	rrcf	i2___ftadd@f1+1,f,c
 10353  001F4A  320C               	rrcf	i2___ftadd@f1,f,c
 10354  001F4C  2A17               	incf	i2___ftadd@exp1,f,c
 10355  001F4E                     i2l3261:
 10356  001F4E  5016               	movf	i2___ftadd@exp2,w,c
 10357  001F50  1817               	xorwf	i2___ftadd@exp1,w,c
 10358  001F52  B4D8               	btfsc	status,2,c
 10359  001F54  D01F               	goto	i2l714
 10360  001F56  D7F6               	goto	i2l3259
 10361  001F58                     i2l3263:
 10362  001F58  5017               	movf	i2___ftadd@exp1,w,c
 10363  001F5A  5C16               	subwf	i2___ftadd@exp2,w,c
 10364  001F5C  B0D8               	btfsc	status,0,c
 10365  001F5E  D01A               	goto	i2l714
 10366  001F60                     i2l3265:
 10367  001F60  90D8               	bcf	status,0,c
 10368  001F62  360C               	rlcf	i2___ftadd@f1,f,c
 10369  001F64  360D               	rlcf	i2___ftadd@f1+1,f,c
 10370  001F66  360E               	rlcf	i2___ftadd@f1+2,f,c
 10371  001F68  0617               	decf	i2___ftadd@exp1,f,c
 10372  001F6A  5017               	movf	i2___ftadd@exp1,w,c
 10373  001F6C  1816               	xorwf	i2___ftadd@exp2,w,c
 10374  001F6E  B4D8               	btfsc	status,2,c
 10375  001F70  D00D               	goto	i2l3273
 10376  001F72  0615               	decf	i2___ftadd@sign,f,c
 10377  001F74  C015  F012         	movff	i2___ftadd@sign,??i2___ftadd
 10378  001F78  0E07               	movlw	7
 10379  001F7A  1612               	andwf	??i2___ftadd,f,c
 10380  001F7C  B4D8               	btfsc	status,2,c
 10381  001F7E  D006               	goto	i2l3273
 10382  001F80  D7EF               	goto	i2l3265
 10383  001F82                     i2l3271:
 10384  001F82  90D8               	bcf	status,0,c
 10385  001F84  3211               	rrcf	i2___ftadd@f2+2,f,c
 10386  001F86  3210               	rrcf	i2___ftadd@f2+1,f,c
 10387  001F88  320F               	rrcf	i2___ftadd@f2,f,c
 10388  001F8A  2A16               	incf	i2___ftadd@exp2,f,c
 10389  001F8C                     i2l3273:
 10390  001F8C  5016               	movf	i2___ftadd@exp2,w,c
 10391  001F8E  1817               	xorwf	i2___ftadd@exp1,w,c
 10392  001F90  A4D8               	btfss	status,2,c
 10393  001F92  D7F7               	goto	i2l3271
 10394  001F94                     i2l714:
 10395  001F94  AE15               	btfss	i2___ftadd@sign,7,c
 10396  001F96  D00C               	goto	i2l723
 10397  001F98  0EFF               	movlw	255
 10398  001F9A  1A0C               	xorwf	i2___ftadd@f1,f,c
 10399  001F9C  0EFF               	movlw	255
 10400  001F9E  1A0D               	xorwf	i2___ftadd@f1+1,f,c
 10401  001FA0  0EFF               	movlw	255
 10402  001FA2  1A0E               	xorwf	i2___ftadd@f1+2,f,c
 10403  001FA4  0E01               	movlw	1
 10404  001FA6  260C               	addwf	i2___ftadd@f1,f,c
 10405  001FA8  0E00               	movlw	0
 10406  001FAA  220D               	addwfc	i2___ftadd@f1+1,f,c
 10407  001FAC  0E00               	movlw	0
 10408  001FAE  220E               	addwfc	i2___ftadd@f1+2,f,c
 10409  001FB0                     i2l723:
 10410  001FB0  AC15               	btfss	i2___ftadd@sign,6,c
 10411  001FB2  D00C               	goto	i2l3279
 10412  001FB4  0EFF               	movlw	255
 10413  001FB6  1A0F               	xorwf	i2___ftadd@f2,f,c
 10414  001FB8  0EFF               	movlw	255
 10415  001FBA  1A10               	xorwf	i2___ftadd@f2+1,f,c
 10416  001FBC  0EFF               	movlw	255
 10417  001FBE  1A11               	xorwf	i2___ftadd@f2+2,f,c
 10418  001FC0  0E01               	movlw	1
 10419  001FC2  260F               	addwf	i2___ftadd@f2,f,c
 10420  001FC4  0E00               	movlw	0
 10421  001FC6  2210               	addwfc	i2___ftadd@f2+1,f,c
 10422  001FC8  0E00               	movlw	0
 10423  001FCA  2211               	addwfc	i2___ftadd@f2+2,f,c
 10424  001FCC                     i2l3279:
 10425  001FCC  0E00               	movlw	0
 10426  001FCE  6E15               	movwf	i2___ftadd@sign,c
 10427  001FD0  500C               	movf	i2___ftadd@f1,w,c
 10428  001FD2  260F               	addwf	i2___ftadd@f2,f,c
 10429  001FD4  500D               	movf	i2___ftadd@f1+1,w,c
 10430  001FD6  2210               	addwfc	i2___ftadd@f2+1,f,c
 10431  001FD8  500E               	movf	i2___ftadd@f1+2,w,c
 10432  001FDA  2211               	addwfc	i2___ftadd@f2+2,f,c
 10433  001FDC  AE11               	btfss	i2___ftadd@f2+2,7,c
 10434  001FDE  D00E               	goto	i2l3289
 10435  001FE0  0EFF               	movlw	255
 10436  001FE2  1A0F               	xorwf	i2___ftadd@f2,f,c
 10437  001FE4  0EFF               	movlw	255
 10438  001FE6  1A10               	xorwf	i2___ftadd@f2+1,f,c
 10439  001FE8  0EFF               	movlw	255
 10440  001FEA  1A11               	xorwf	i2___ftadd@f2+2,f,c
 10441  001FEC  0E01               	movlw	1
 10442  001FEE  260F               	addwf	i2___ftadd@f2,f,c
 10443  001FF0  0E00               	movlw	0
 10444  001FF2  2210               	addwfc	i2___ftadd@f2+1,f,c
 10445  001FF4  0E00               	movlw	0
 10446  001FF6  2211               	addwfc	i2___ftadd@f2+2,f,c
 10447  001FF8  0E01               	movlw	1
 10448  001FFA  6E15               	movwf	i2___ftadd@sign,c
 10449  001FFC                     i2l3289:
 10450  001FFC  C00F  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 10451  002000  C010  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 10452  002004  C011  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 10453  002008  C017  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 10454  00200C  C015  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 10455  002010  ECE2  F016         	call	i2___ftpack	;wreg free
 10456  002014  C001  F00C         	movff	?i2___ftpack,?i2___ftadd
 10457  002018  C002  F00D         	movff	?i2___ftpack+1,?i2___ftadd+1
 10458  00201C  C003  F00E         	movff	?i2___ftpack+2,?i2___ftadd+2
 10459  002020  0012               	return	
 10460  002022                     __end_ofi2___ftadd:
 10461                           	opt stack 0
 10462                           tosu	equ	0xFFF
 10463                           tosh	equ	0xFFE
 10464                           tosl	equ	0xFFD
 10465                           pclatu	equ	0xFFB
 10466                           pclath	equ	0xFFA
 10467                           tblptru	equ	0xFF8
 10468                           tblptrh	equ	0xFF7
 10469                           tblptrl	equ	0xFF6
 10470                           tablat	equ	0xFF5
 10471                           prodh	equ	0xFF4
 10472                           prodl	equ	0xFF3
 10473                           intcon	equ	0xFF2
 10474                           intcon2	equ	0xFF1
 10475                           postinc0	equ	0xFEE
 10476                           fsr0h	equ	0xFEA
 10477                           fsr0l	equ	0xFE9
 10478                           wreg	equ	0xFE8
 10479                           postdec1	equ	0xFE5
 10480                           fsr1h	equ	0xFE2
 10481                           fsr1l	equ	0xFE1
 10482                           indf2	equ	0xFDF
 10483                           postinc2	equ	0xFDE
 10484                           postdec2	equ	0xFDD
 10485                           fsr2h	equ	0xFDA
 10486                           fsr2l	equ	0xFD9
 10487                           status	equ	0xFD8
 10488                           
 10489 ;; *************** function i2_TMR0_StartTimer *****************
 10490 ;; Defined at:
 10491 ;;		line 43 in file "mcc_generated_files/tmr0.c"
 10492 ;; Parameters:    Size  Location     Type
 10493 ;;		None
 10494 ;; Auto vars:     Size  Location     Type
 10495 ;;		None
 10496 ;; Return value:  Size  Location     Type
 10497 ;;                  1    wreg      void 
 10498 ;; Registers used:
 10499 ;;		None
 10500 ;; Tracked objects:
 10501 ;;		On entry : 0/0
 10502 ;;		On exit  : 0/0
 10503 ;;		Unchanged: 0/0
 10504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10505 ;;      Params:         0       0       0       0       0       0       0
 10506 ;;      Locals:         0       0       0       0       0       0       0
 10507 ;;      Temps:          0       0       0       0       0       0       0
 10508 ;;      Totals:         0       0       0       0       0       0       0
 10509 ;;Total ram usage:        0 bytes
 10510 ;; Hardware stack levels used:    1
 10511 ;; This function calls:
 10512 ;;		Nothing
 10513 ;; This function is called by:
 10514 ;;		_INT0_ISR
 10515 ;; This function uses a non-reentrant model
 10516 ;;
 10517                           
 10518                           	psect	text44
 10519  00345C                     __ptext44:
 10520                           	opt stack 0
 10521  00345C                     i2_TMR0_StartTimer:
 10522                           	opt stack 24
 10523                           
 10524                           ;tmr0.c: 46: T0CONbits.TMR0ON = 1;
 10525                           
 10526                           ;incstack = 0
 10527  00345C  8ED5               	bsf	4053,7,c	;volatile
 10528  00345E  0012               	return		;funcret
 10529  003460                     __end_ofi2_TMR0_StartTimer:
 10530                           	opt stack 0
 10531                           tosu	equ	0xFFF
 10532                           tosh	equ	0xFFE
 10533                           tosl	equ	0xFFD
 10534                           pclatu	equ	0xFFB
 10535                           pclath	equ	0xFFA
 10536                           tblptru	equ	0xFF8
 10537                           tblptrh	equ	0xFF7
 10538                           tblptrl	equ	0xFF6
 10539                           tablat	equ	0xFF5
 10540                           prodh	equ	0xFF4
 10541                           prodl	equ	0xFF3
 10542                           intcon	equ	0xFF2
 10543                           intcon2	equ	0xFF1
 10544                           postinc0	equ	0xFEE
 10545                           fsr0h	equ	0xFEA
 10546                           fsr0l	equ	0xFE9
 10547                           wreg	equ	0xFE8
 10548                           postdec1	equ	0xFE5
 10549                           fsr1h	equ	0xFE2
 10550                           fsr1l	equ	0xFE1
 10551                           indf2	equ	0xFDF
 10552                           postinc2	equ	0xFDE
 10553                           postdec2	equ	0xFDD
 10554                           fsr2h	equ	0xFDA
 10555                           fsr2l	equ	0xFD9
 10556                           status	equ	0xFD8
 10557                           
 10558 ;; *************** function ___lwtoft *****************
 10559 ;; Defined at:
 10560 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
 10561 ;; Parameters:    Size  Location     Type
 10562 ;;  c               2    8[COMRAM] unsigned int 
 10563 ;; Auto vars:     Size  Location     Type
 10564 ;;		None
 10565 ;; Return value:  Size  Location     Type
 10566 ;;                  3    8[COMRAM] float 
 10567 ;; Registers used:
 10568 ;;		wreg, status,2, status,0, cstack
 10569 ;; Tracked objects:
 10570 ;;		On entry : 0/0
 10571 ;;		On exit  : 0/0
 10572 ;;		Unchanged: 0/0
 10573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10574 ;;      Params:         3       0       0       0       0       0       0
 10575 ;;      Locals:         0       0       0       0       0       0       0
 10576 ;;      Temps:          0       0       0       0       0       0       0
 10577 ;;      Totals:         3       0       0       0       0       0       0
 10578 ;;Total ram usage:        3 bytes
 10579 ;; Hardware stack levels used:    1
 10580 ;; Hardware stack levels required when called:    1
 10581 ;; This function calls:
 10582 ;;		i2___ftpack
 10583 ;; This function is called by:
 10584 ;;		_INT0_ISR
 10585 ;; This function uses a non-reentrant model
 10586 ;;
 10587                           
 10588                           	psect	text45
 10589  00338E                     __ptext45:
 10590                           	opt stack 0
 10591  00338E                     ___lwtoft:
 10592                           	opt stack 23
 10593                           
 10594                           ;incstack = 0
 10595  00338E  C009  F001         	movff	___lwtoft@c,i2___ftpack@arg
 10596  003392  C00A  F002         	movff	___lwtoft@c+1,i2___ftpack@arg+1
 10597  003396  6A03               	clrf	i2___ftpack@arg+2,c
 10598  003398  0E8E               	movlw	142
 10599  00339A  6E04               	movwf	i2___ftpack@exp,c
 10600  00339C  0E00               	movlw	0
 10601  00339E  6E05               	movwf	i2___ftpack@sign,c
 10602  0033A0  ECE2  F016         	call	i2___ftpack	;wreg free
 10603  0033A4  C001  F009         	movff	?i2___ftpack,?___lwtoft
 10604  0033A8  C002  F00A         	movff	?i2___ftpack+1,?___lwtoft+1
 10605  0033AC  C003  F00B         	movff	?i2___ftpack+2,?___lwtoft+2
 10606  0033B0  0012               	return	
 10607  0033B2                     __end_of___lwtoft:
 10608                           	opt stack 0
 10609                           tosu	equ	0xFFF
 10610                           tosh	equ	0xFFE
 10611                           tosl	equ	0xFFD
 10612                           pclatu	equ	0xFFB
 10613                           pclath	equ	0xFFA
 10614                           tblptru	equ	0xFF8
 10615                           tblptrh	equ	0xFF7
 10616                           tblptrl	equ	0xFF6
 10617                           tablat	equ	0xFF5
 10618                           prodh	equ	0xFF4
 10619                           prodl	equ	0xFF3
 10620                           intcon	equ	0xFF2
 10621                           intcon2	equ	0xFF1
 10622                           postinc0	equ	0xFEE
 10623                           fsr0h	equ	0xFEA
 10624                           fsr0l	equ	0xFE9
 10625                           wreg	equ	0xFE8
 10626                           postdec1	equ	0xFE5
 10627                           fsr1h	equ	0xFE2
 10628                           fsr1l	equ	0xFE1
 10629                           indf2	equ	0xFDF
 10630                           postinc2	equ	0xFDE
 10631                           postdec2	equ	0xFDD
 10632                           fsr2h	equ	0xFDA
 10633                           fsr2l	equ	0xFD9
 10634                           status	equ	0xFD8
 10635                           
 10636 ;; *************** function i2___ftpack *****************
 10637 ;; Defined at:
 10638 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
 10639 ;; Parameters:    Size  Location     Type
 10640 ;;  arg             3    0[COMRAM] unsigned um
 10641 ;;  exp             1    3[COMRAM] unsigned char 
 10642 ;;  sign            1    4[COMRAM] unsigned char 
 10643 ;; Auto vars:     Size  Location     Type
 10644 ;;		None
 10645 ;; Return value:  Size  Location     Type
 10646 ;;                  3    0[COMRAM] float 
 10647 ;; Registers used:
 10648 ;;		wreg, status,2, status,0
 10649 ;; Tracked objects:
 10650 ;;		On entry : 0/0
 10651 ;;		On exit  : 0/0
 10652 ;;		Unchanged: 0/0
 10653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10654 ;;      Params:         5       0       0       0       0       0       0
 10655 ;;      Locals:         0       0       0       0       0       0       0
 10656 ;;      Temps:          3       0       0       0       0       0       0
 10657 ;;      Totals:         8       0       0       0       0       0       0
 10658 ;;Total ram usage:        8 bytes
 10659 ;; Hardware stack levels used:    1
 10660 ;; This function calls:
 10661 ;;		Nothing
 10662 ;; This function is called by:
 10663 ;;		___lwtoft
 10664 ;;		i2___ftadd
 10665 ;;		i2___ftdiv
 10666 ;;		i2___ftmul
 10667 ;; This function uses a non-reentrant model
 10668 ;;
 10669                           
 10670                           	psect	text46
 10671  002DC4                     __ptext46:
 10672                           	opt stack 0
 10673  002DC4                     i2___ftpack:
 10674                           	opt stack 23
 10675                           
 10676                           ;incstack = 0
 10677  002DC4  5004               	movf	i2___ftpack@exp,w,c
 10678  002DC6  B4D8               	btfsc	status,2,c
 10679  002DC8  D005               	goto	i2l2797
 10680  002DCA  5001               	movf	i2___ftpack@arg,w,c
 10681  002DCC  1002               	iorwf	i2___ftpack@arg+1,w,c
 10682  002DCE  1003               	iorwf	i2___ftpack@arg+2,w,c
 10683  002DD0  A4D8               	btfss	status,2,c
 10684  002DD2  D00C               	goto	i2l2803
 10685  002DD4                     i2l2797:
 10686  002DD4  0E00               	movlw	0
 10687  002DD6  6E01               	movwf	?i2___ftpack,c
 10688  002DD8  0E00               	movlw	0
 10689  002DDA  6E02               	movwf	?i2___ftpack+1,c
 10690  002DDC  0E00               	movlw	0
 10691  002DDE  6E03               	movwf	?i2___ftpack+2,c
 10692  002DE0  0012               	return	
 10693  002DE2                     i2l2801:
 10694  002DE2  2A04               	incf	i2___ftpack@exp,f,c
 10695  002DE4  90D8               	bcf	status,0,c
 10696  002DE6  3203               	rrcf	i2___ftpack@arg+2,f,c
 10697  002DE8  3202               	rrcf	i2___ftpack@arg+1,f,c
 10698  002DEA  3201               	rrcf	i2___ftpack@arg,f,c
 10699  002DEC                     i2l2803:
 10700  002DEC  0E00               	movlw	0
 10701  002DEE  1401               	andwf	i2___ftpack@arg,w,c
 10702  002DF0  6E06               	movwf	??i2___ftpack& (0+255),c
 10703  002DF2  0E00               	movlw	0
 10704  002DF4  1402               	andwf	i2___ftpack@arg+1,w,c
 10705  002DF6  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 10706  002DF8  0EFE               	movlw	254
 10707  002DFA  1403               	andwf	i2___ftpack@arg+2,w,c
 10708  002DFC  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 10709  002DFE  5006               	movf	??i2___ftpack,w,c
 10710  002E00  1007               	iorwf	??i2___ftpack+1,w,c
 10711  002E02  1008               	iorwf	??i2___ftpack+2,w,c
 10712  002E04  B4D8               	btfsc	status,2,c
 10713  002E06  D00C               	goto	i2l2809
 10714  002E08  D7EC               	goto	i2l2801
 10715  002E0A                     i2l2805:
 10716  002E0A  2A04               	incf	i2___ftpack@exp,f,c
 10717  002E0C  0E01               	movlw	1
 10718  002E0E  2601               	addwf	i2___ftpack@arg,f,c
 10719  002E10  0E00               	movlw	0
 10720  002E12  2202               	addwfc	i2___ftpack@arg+1,f,c
 10721  002E14  0E00               	movlw	0
 10722  002E16  2203               	addwfc	i2___ftpack@arg+2,f,c
 10723  002E18  90D8               	bcf	status,0,c
 10724  002E1A  3203               	rrcf	i2___ftpack@arg+2,f,c
 10725  002E1C  3202               	rrcf	i2___ftpack@arg+1,f,c
 10726  002E1E  3201               	rrcf	i2___ftpack@arg,f,c
 10727  002E20                     i2l2809:
 10728  002E20  0E00               	movlw	0
 10729  002E22  1401               	andwf	i2___ftpack@arg,w,c
 10730  002E24  6E06               	movwf	??i2___ftpack& (0+255),c
 10731  002E26  0E00               	movlw	0
 10732  002E28  1402               	andwf	i2___ftpack@arg+1,w,c
 10733  002E2A  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 10734  002E2C  0EFF               	movlw	255
 10735  002E2E  1403               	andwf	i2___ftpack@arg+2,w,c
 10736  002E30  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 10737  002E32  5006               	movf	??i2___ftpack,w,c
 10738  002E34  1007               	iorwf	??i2___ftpack+1,w,c
 10739  002E36  1008               	iorwf	??i2___ftpack+2,w,c
 10740  002E38  B4D8               	btfsc	status,2,c
 10741  002E3A  D006               	goto	i2l2813
 10742  002E3C  D7E6               	goto	i2l2805
 10743  002E3E                     i2l2811:
 10744  002E3E  0604               	decf	i2___ftpack@exp,f,c
 10745  002E40  90D8               	bcf	status,0,c
 10746  002E42  3601               	rlcf	i2___ftpack@arg,f,c
 10747  002E44  3602               	rlcf	i2___ftpack@arg+1,f,c
 10748  002E46  3603               	rlcf	i2___ftpack@arg+2,f,c
 10749  002E48                     i2l2813:
 10750  002E48  BE02               	btfsc	i2___ftpack@arg+1,7,c
 10751  002E4A  D003               	goto	i2l676
 10752  002E4C  0E02               	movlw	2
 10753  002E4E  6004               	cpfslt	i2___ftpack@exp,c
 10754  002E50  D7F6               	goto	i2l2811
 10755  002E52                     i2l676:
 10756  002E52  A004               	btfss	i2___ftpack@exp,0,c
 10757  002E54  9E02               	bcf	i2___ftpack@arg+1,7,c
 10758  002E56  90D8               	bcf	status,0,c
 10759  002E58  3204               	rrcf	i2___ftpack@exp,f,c
 10760  002E5A  5004               	movf	i2___ftpack@exp,w,c
 10761  002E5C  1203               	iorwf	i2___ftpack@arg+2,f,c
 10762  002E5E  5005               	movf	i2___ftpack@sign,w,c
 10763  002E60  A4D8               	btfss	status,2,c
 10764  002E62  8E03               	bsf	i2___ftpack@arg+2,7,c
 10765  002E64  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 10766  002E68  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 10767  002E6C  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 10768  002E70  0012               	return	
 10769  002E72                     __end_ofi2___ftpack:
 10770                           	opt stack 0
 10771                           tosu	equ	0xFFF
 10772                           tosh	equ	0xFFE
 10773                           tosl	equ	0xFFD
 10774                           pclatu	equ	0xFFB
 10775                           pclath	equ	0xFFA
 10776                           tblptru	equ	0xFF8
 10777                           tblptrh	equ	0xFF7
 10778                           tblptrl	equ	0xFF6
 10779                           tablat	equ	0xFF5
 10780                           prodh	equ	0xFF4
 10781                           prodl	equ	0xFF3
 10782                           intcon	equ	0xFF2
 10783                           intcon2	equ	0xFF1
 10784                           postinc0	equ	0xFEE
 10785                           fsr0h	equ	0xFEA
 10786                           fsr0l	equ	0xFE9
 10787                           wreg	equ	0xFE8
 10788                           postdec1	equ	0xFE5
 10789                           fsr1h	equ	0xFE2
 10790                           fsr1l	equ	0xFE1
 10791                           indf2	equ	0xFDF
 10792                           postinc2	equ	0xFDE
 10793                           postdec2	equ	0xFDD
 10794                           fsr2h	equ	0xFDA
 10795                           fsr2l	equ	0xFD9
 10796                           status	equ	0xFD8
 10797                           
 10798 ;; *************** function _TMR0_StopTimer *****************
 10799 ;; Defined at:
 10800 ;;		line 49 in file "mcc_generated_files/tmr0.c"
 10801 ;; Parameters:    Size  Location     Type
 10802 ;;		None
 10803 ;; Auto vars:     Size  Location     Type
 10804 ;;		None
 10805 ;; Return value:  Size  Location     Type
 10806 ;;                  1    wreg      void 
 10807 ;; Registers used:
 10808 ;;		None
 10809 ;; Tracked objects:
 10810 ;;		On entry : 0/0
 10811 ;;		On exit  : 0/0
 10812 ;;		Unchanged: 0/0
 10813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10814 ;;      Params:         0       0       0       0       0       0       0
 10815 ;;      Locals:         0       0       0       0       0       0       0
 10816 ;;      Temps:          0       0       0       0       0       0       0
 10817 ;;      Totals:         0       0       0       0       0       0       0
 10818 ;;Total ram usage:        0 bytes
 10819 ;; Hardware stack levels used:    1
 10820 ;; This function calls:
 10821 ;;		Nothing
 10822 ;; This function is called by:
 10823 ;;		_INT0_ISR
 10824 ;; This function uses a non-reentrant model
 10825 ;;
 10826                           
 10827                           	psect	text47
 10828  003460                     __ptext47:
 10829                           	opt stack 0
 10830  003460                     _TMR0_StopTimer:
 10831                           	opt stack 24
 10832                           
 10833                           ;tmr0.c: 52: T0CONbits.TMR0ON = 0;
 10834                           
 10835                           ;incstack = 0
 10836  003460  9ED5               	bcf	4053,7,c	;volatile
 10837  003462  0012               	return		;funcret
 10838  003464                     __end_of_TMR0_StopTimer:
 10839                           	opt stack 0
 10840                           tosu	equ	0xFFF
 10841                           tosh	equ	0xFFE
 10842                           tosl	equ	0xFFD
 10843                           pclatu	equ	0xFFB
 10844                           pclath	equ	0xFFA
 10845                           tblptru	equ	0xFF8
 10846                           tblptrh	equ	0xFF7
 10847                           tblptrl	equ	0xFF6
 10848                           tablat	equ	0xFF5
 10849                           prodh	equ	0xFF4
 10850                           prodl	equ	0xFF3
 10851                           intcon	equ	0xFF2
 10852                           intcon2	equ	0xFF1
 10853                           postinc0	equ	0xFEE
 10854                           fsr0h	equ	0xFEA
 10855                           fsr0l	equ	0xFE9
 10856                           wreg	equ	0xFE8
 10857                           postdec1	equ	0xFE5
 10858                           fsr1h	equ	0xFE2
 10859                           fsr1l	equ	0xFE1
 10860                           indf2	equ	0xFDF
 10861                           postinc2	equ	0xFDE
 10862                           postdec2	equ	0xFDD
 10863                           fsr2h	equ	0xFDA
 10864                           fsr2l	equ	0xFD9
 10865                           status	equ	0xFD8
 10866                           
 10867 ;; *************** function _TMR0_Reload *****************
 10868 ;; Defined at:
 10869 ;;		line 77 in file "mcc_generated_files/tmr0.c"
 10870 ;; Parameters:    Size  Location     Type
 10871 ;;		None
 10872 ;; Auto vars:     Size  Location     Type
 10873 ;;		None
 10874 ;; Return value:  Size  Location     Type
 10875 ;;                  1    wreg      void 
 10876 ;; Registers used:
 10877 ;;		wreg, status,2
 10878 ;; Tracked objects:
 10879 ;;		On entry : 0/0
 10880 ;;		On exit  : 0/0
 10881 ;;		Unchanged: 0/0
 10882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10883 ;;      Params:         0       0       0       0       0       0       0
 10884 ;;      Locals:         0       0       0       0       0       0       0
 10885 ;;      Temps:          0       0       0       0       0       0       0
 10886 ;;      Totals:         0       0       0       0       0       0       0
 10887 ;;Total ram usage:        0 bytes
 10888 ;; Hardware stack levels used:    1
 10889 ;; This function calls:
 10890 ;;		Nothing
 10891 ;; This function is called by:
 10892 ;;		_INT0_ISR
 10893 ;; This function uses a non-reentrant model
 10894 ;;
 10895                           
 10896                           	psect	text48
 10897  003446                     __ptext48:
 10898                           	opt stack 0
 10899  003446                     _TMR0_Reload:
 10900                           	opt stack 24
 10901                           
 10902                           ;tmr0.c: 80: TMR0H = timer0ReloadVal >> 8;
 10903                           
 10904                           ;incstack = 0
 10905  003446  5053               	movf	_timer0ReloadVal+1,w,c	;volatile
 10906  003448  6ED7               	movwf	4055,c	;volatile
 10907                           
 10908                           ;tmr0.c: 81: TMR0L = (uint8_t) timer0ReloadVal;
 10909  00344A  C052  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 10910  00344E  0012               	return		;funcret
 10911  003450                     __end_of_TMR0_Reload:
 10912                           	opt stack 0
 10913                           tosu	equ	0xFFF
 10914                           tosh	equ	0xFFE
 10915                           tosl	equ	0xFFD
 10916                           pclatu	equ	0xFFB
 10917                           pclath	equ	0xFFA
 10918                           tblptru	equ	0xFF8
 10919                           tblptrh	equ	0xFF7
 10920                           tblptrl	equ	0xFF6
 10921                           tablat	equ	0xFF5
 10922                           prodh	equ	0xFF4
 10923                           prodl	equ	0xFF3
 10924                           intcon	equ	0xFF2
 10925                           intcon2	equ	0xFF1
 10926                           postinc0	equ	0xFEE
 10927                           fsr0h	equ	0xFEA
 10928                           fsr0l	equ	0xFE9
 10929                           wreg	equ	0xFE8
 10930                           postdec1	equ	0xFE5
 10931                           fsr1h	equ	0xFE2
 10932                           fsr1l	equ	0xFE1
 10933                           indf2	equ	0xFDF
 10934                           postinc2	equ	0xFDE
 10935                           postdec2	equ	0xFDD
 10936                           fsr2h	equ	0xFDA
 10937                           fsr2l	equ	0xFD9
 10938                           status	equ	0xFD8
 10939                           
 10940 ;; *************** function _TMR0_ReadTimer *****************
 10941 ;; Defined at:
 10942 ;;		line 55 in file "mcc_generated_files/tmr0.c"
 10943 ;; Parameters:    Size  Location     Type
 10944 ;;		None
 10945 ;; Auto vars:     Size  Location     Type
 10946 ;;  readVal         2    6[COMRAM] unsigned int 
 10947 ;;  readValHigh     1    9[COMRAM] unsigned char 
 10948 ;;  readValLow      1    8[COMRAM] unsigned char 
 10949 ;; Return value:  Size  Location     Type
 10950 ;;                  2    0[COMRAM] unsigned int 
 10951 ;; Registers used:
 10952 ;;		wreg, status,2, status,0
 10953 ;; Tracked objects:
 10954 ;;		On entry : 0/0
 10955 ;;		On exit  : 0/0
 10956 ;;		Unchanged: 0/0
 10957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10958 ;;      Params:         2       0       0       0       0       0       0
 10959 ;;      Locals:         4       0       0       0       0       0       0
 10960 ;;      Temps:          4       0       0       0       0       0       0
 10961 ;;      Totals:        10       0       0       0       0       0       0
 10962 ;;Total ram usage:       10 bytes
 10963 ;; Hardware stack levels used:    1
 10964 ;; This function calls:
 10965 ;;		Nothing
 10966 ;; This function is called by:
 10967 ;;		_INT0_ISR
 10968 ;; This function uses a non-reentrant model
 10969 ;;
 10970                           
 10971                           	psect	text49
 10972  0031C2                     __ptext49:
 10973                           	opt stack 0
 10974  0031C2                     _TMR0_ReadTimer:
 10975                           	opt stack 24
 10976                           
 10977                           ;tmr0.c: 57: uint16_t readVal;
 10978                           ;tmr0.c: 58: uint8_t readValLow;
 10979                           ;tmr0.c: 59: uint8_t readValHigh;
 10980                           ;tmr0.c: 61: readValLow = TMR0L;
 10981                           
 10982                           ;incstack = 0
 10983  0031C2  CFD6 F009          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
 10984                           
 10985                           ;tmr0.c: 62: readValHigh = TMR0H;
 10986  0031C6  CFD7 F00A          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
 10987                           
 10988                           ;tmr0.c: 65: readVal = ((uint16_t)readValHigh << 8) + readValLow - (timer0ReloadVal);
 10989  0031CA  C052  F003         	movff	_timer0ReloadVal,??_TMR0_ReadTimer	;volatile
 10990  0031CE  C053  F004         	movff	_timer0ReloadVal+1,??_TMR0_ReadTimer+1	;volatile
 10991  0031D2  1E03               	comf	??_TMR0_ReadTimer,f,c
 10992  0031D4  1E04               	comf	??_TMR0_ReadTimer+1,f,c
 10993  0031D6  4A03               	infsnz	??_TMR0_ReadTimer,f,c
 10994  0031D8  2A04               	incf	??_TMR0_ReadTimer+1,f,c
 10995  0031DA  5009               	movf	TMR0_ReadTimer@readValLow,w,c
 10996  0031DC  C00A  F005         	movff	TMR0_ReadTimer@readValHigh,??_TMR0_ReadTimer+2
 10997  0031E0  6A06               	clrf	(??_TMR0_ReadTimer+3)& (0+255),c
 10998  0031E2  C005  F006         	movff	??_TMR0_ReadTimer+2,??_TMR0_ReadTimer+3
 10999  0031E6  6A05               	clrf	??_TMR0_ReadTimer+2,c
 11000  0031E8  2605               	addwf	??_TMR0_ReadTimer+2,f,c
 11001  0031EA  0E00               	movlw	0
 11002  0031EC  2206               	addwfc	??_TMR0_ReadTimer+3,f,c
 11003  0031EE  5003               	movf	??_TMR0_ReadTimer,w,c
 11004  0031F0  2405               	addwf	??_TMR0_ReadTimer+2,w,c
 11005  0031F2  6E07               	movwf	TMR0_ReadTimer@readVal,c
 11006  0031F4  5004               	movf	??_TMR0_ReadTimer+1,w,c
 11007  0031F6  2006               	addwfc	??_TMR0_ReadTimer+3,w,c
 11008  0031F8  6E08               	movwf	TMR0_ReadTimer@readVal+1,c
 11009                           
 11010                           ;tmr0.c: 67: return readVal;
 11011  0031FA  C007  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
 11012  0031FE  C008  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
 11013  003202  0012               	return	
 11014  003204                     __end_of_TMR0_ReadTimer:
 11015                           	opt stack 0
 11016                           tosu	equ	0xFFF
 11017                           tosh	equ	0xFFE
 11018                           tosl	equ	0xFFD
 11019                           pclatu	equ	0xFFB
 11020                           pclath	equ	0xFFA
 11021                           tblptru	equ	0xFF8
 11022                           tblptrh	equ	0xFF7
 11023                           tblptrl	equ	0xFF6
 11024                           tablat	equ	0xFF5
 11025                           prodh	equ	0xFF4
 11026                           prodl	equ	0xFF3
 11027                           intcon	equ	0xFF2
 11028                           intcon2	equ	0xFF1
 11029                           postinc0	equ	0xFEE
 11030                           fsr0h	equ	0xFEA
 11031                           fsr0l	equ	0xFE9
 11032                           wreg	equ	0xFE8
 11033                           postdec1	equ	0xFE5
 11034                           fsr1h	equ	0xFE2
 11035                           fsr1l	equ	0xFE1
 11036                           indf2	equ	0xFDF
 11037                           postinc2	equ	0xFDE
 11038                           postdec2	equ	0xFDD
 11039                           fsr2h	equ	0xFDA
 11040                           fsr2l	equ	0xFD9
 11041                           status	equ	0xFD8
 11042                           tosu	equ	0xFFF
 11043                           tosh	equ	0xFFE
 11044                           tosl	equ	0xFFD
 11045                           pclatu	equ	0xFFB
 11046                           pclath	equ	0xFFA
 11047                           tblptru	equ	0xFF8
 11048                           tblptrh	equ	0xFF7
 11049                           tblptrl	equ	0xFF6
 11050                           tablat	equ	0xFF5
 11051                           prodh	equ	0xFF4
 11052                           prodl	equ	0xFF3
 11053                           intcon	equ	0xFF2
 11054                           intcon2	equ	0xFF1
 11055                           postinc0	equ	0xFEE
 11056                           fsr0h	equ	0xFEA
 11057                           fsr0l	equ	0xFE9
 11058                           wreg	equ	0xFE8
 11059                           postdec1	equ	0xFE5
 11060                           fsr1h	equ	0xFE2
 11061                           fsr1l	equ	0xFE1
 11062                           indf2	equ	0xFDF
 11063                           postinc2	equ	0xFDE
 11064                           postdec2	equ	0xFDD
 11065                           fsr2h	equ	0xFDA
 11066                           fsr2l	equ	0xFD9
 11067                           status	equ	0xFD8
 11068                           
 11069                           	psect	text50
 11070  000000                     __ptext50:
 11071                           	opt stack 0
 11072                           tosu	equ	0xFFF
 11073                           tosh	equ	0xFFE
 11074                           tosl	equ	0xFFD
 11075                           pclatu	equ	0xFFB
 11076                           pclath	equ	0xFFA
 11077                           tblptru	equ	0xFF8
 11078                           tblptrh	equ	0xFF7
 11079                           tblptrl	equ	0xFF6
 11080                           tablat	equ	0xFF5
 11081                           prodh	equ	0xFF4
 11082                           prodl	equ	0xFF3
 11083                           intcon	equ	0xFF2
 11084                           intcon2	equ	0xFF1
 11085                           postinc0	equ	0xFEE
 11086                           fsr0h	equ	0xFEA
 11087                           fsr0l	equ	0xFE9
 11088                           wreg	equ	0xFE8
 11089                           postdec1	equ	0xFE5
 11090                           fsr1h	equ	0xFE2
 11091                           fsr1l	equ	0xFE1
 11092                           indf2	equ	0xFDF
 11093                           postinc2	equ	0xFDE
 11094                           postdec2	equ	0xFDD
 11095                           fsr2h	equ	0xFDA
 11096                           fsr2l	equ	0xFD9
 11097                           status	equ	0xFD8
 11098                           
 11099                           	psect	rparam
 11100  0000                     tosu	equ	0xFFF
 11101                           tosh	equ	0xFFE
 11102                           tosl	equ	0xFFD
 11103                           pclatu	equ	0xFFB
 11104                           pclath	equ	0xFFA
 11105                           tblptru	equ	0xFF8
 11106                           tblptrh	equ	0xFF7
 11107                           tblptrl	equ	0xFF6
 11108                           tablat	equ	0xFF5
 11109                           prodh	equ	0xFF4
 11110                           prodl	equ	0xFF3
 11111                           intcon	equ	0xFF2
 11112                           intcon2	equ	0xFF1
 11113                           postinc0	equ	0xFEE
 11114                           fsr0h	equ	0xFEA
 11115                           fsr0l	equ	0xFE9
 11116                           wreg	equ	0xFE8
 11117                           postdec1	equ	0xFE5
 11118                           fsr1h	equ	0xFE2
 11119                           fsr1l	equ	0xFE1
 11120                           indf2	equ	0xFDF
 11121                           postinc2	equ	0xFDE
 11122                           postdec2	equ	0xFDD
 11123                           fsr2h	equ	0xFDA
 11124                           fsr2l	equ	0xFD9
 11125                           status	equ	0xFD8
 11126                           
 11127                           	psect	temp
 11128  000056                     btemp:
 11129                           	opt stack 0
 11130  000056                     	ds	1
 11131  0000                     int$flags	set	btemp
 11132                           tosu	equ	0xFFF
 11133                           tosh	equ	0xFFE
 11134                           tosl	equ	0xFFD
 11135                           pclatu	equ	0xFFB
 11136                           pclath	equ	0xFFA
 11137                           tblptru	equ	0xFF8
 11138                           tblptrh	equ	0xFF7
 11139                           tblptrl	equ	0xFF6
 11140                           tablat	equ	0xFF5
 11141                           prodh	equ	0xFF4
 11142                           prodl	equ	0xFF3
 11143                           intcon	equ	0xFF2
 11144                           intcon2	equ	0xFF1
 11145                           postinc0	equ	0xFEE
 11146                           fsr0h	equ	0xFEA
 11147                           fsr0l	equ	0xFE9
 11148                           wreg	equ	0xFE8
 11149                           postdec1	equ	0xFE5
 11150                           fsr1h	equ	0xFE2
 11151                           fsr1l	equ	0xFE1
 11152                           indf2	equ	0xFDF
 11153                           postinc2	equ	0xFDE
 11154                           postdec2	equ	0xFDD
 11155                           fsr2h	equ	0xFDA
 11156                           fsr2l	equ	0xFD9
 11157                           status	equ	0xFD8


Data Sizes:
    Strings     44
    Constant    143
    Data        4
    BSS         22
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     77      85
    BANK0           160    117     141
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> lcd_sendInt@displayString(COMRAM[10]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_4(CODE[11]), STR_3(CODE[11]), STR_2(CODE[11]), STR_1(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), main@cap_string(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 10
		 -> lcd_sendUInt@displayString(COMRAM[10]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> lcd_sendInt@displayString(COMRAM[10]), 

    lcd_sendString@a	PTR const unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), lcd_sendUInt@displayString(COMRAM[10]), lcd_sendInt@displayString(COMRAM[10]), main@cap_string(BANK0[16]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_INT0_ISR
    _TMR0_ISR->_TMR0_DefaultInterruptHandler
    _INT0_ISR->i2___ftdiv
    i2___ftmul->i2___ftadd
    i2___ftdiv->i2___ftmul
    i2___ftadd->___lwtoft
    ___lwtoft->i2___ftpack

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _lcd_sendString->_lcd_sendChar
    _lcd_sendChar->__lcd_Port
    _lcd_init->_lcd_sendCommand
    _lcd_clear->_lcd_sendCommand
    _lcd_sendCommand->__lcd_Port
    ___ftdiv->___ftpack
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   50524
                                            101 BANK0     16    16      0
                  _SYSTEM_Initialize
                            ___ftdiv
                             ___ftge
                          _lcd_clear
                           _lcd_init
                     _lcd_sendString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             44    37      7   45693
                                             63 BANK0     38    31      7
                            ___awdiv
                            ___ftadd
                            ___ftdiv (ARG)
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3   10409
                                             35 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3   10211
                                             35 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2463
                                             14 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    4429
                                             20 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1448
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1580
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     431
                                              0 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     574
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    2215
                                              8 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     773
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     750
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     546
                                             42 BANK0     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3704
                                             57 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3305
                                             45 BANK0     12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     160
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     904
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (1) _lcd_sendString                                       4     2      2     588
                                              4 BANK0      4     2      2
                       _lcd_sendChar
 ---------------------------------------------------------------------------------
 (2) _lcd_sendChar                                         3     3      0     178
                                              1 BANK0      3     3      0
                          __lcd_Port
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     198
                                              3 BANK0      1     1      0
                          __lcd_Port
                    _lcd_sendCommand
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0     110
                    _lcd_sendCommand
 ---------------------------------------------------------------------------------
 (2) _lcd_sendCommand                                      2     2      0     110
                                              1 BANK0      2     2      0
                          __lcd_Port
 ---------------------------------------------------------------------------------
 (3) __lcd_Port                                            1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2745
                                              8 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2031
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      86
                                              2 BANK0      2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      86
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      86
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      86
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                          14    14      0    3929
                                             63 COMRAM    14    14      0
                           _INT0_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT0_ISR                                            10    10      0    3929
                                             53 COMRAM    10    10      0
                     _TMR0_ReadTimer
                        _TMR0_Reload
                     _TMR0_StopTimer
                           ___lwtoft
                  i2_TMR0_StartTimer
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
 ---------------------------------------------------------------------------------
 (7) i2___ftmul                                           15     9      6     921
                                             23 COMRAM    15     9      6
                           ___lwtoft (ARG)
                          i2___ftadd (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (7) i2___ftdiv                                           15     9      6     875
                                             38 COMRAM    15     9      6
                           ___lwtoft (ARG)
                          i2___ftadd (ARG)
                          i2___ftmul (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (7) i2___ftadd                                           12     6      6    1435
                                             11 COMRAM    12     6      6
                           ___lwtoft (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (7) i2_TMR0_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) ___lwtoft                                             3     0      3     629
                                              8 COMRAM     3     0      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (8) i2___ftpack                                           8     3      5     543
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (7) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_ReadTimer                                      10     8      2      69
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
   ___ftdiv
     ___ftpack
   ___ftge
   _lcd_clear
     _lcd_sendCommand
       __lcd_Port
   _lcd_init
     __lcd_Port
     _lcd_sendCommand
       __lcd_Port
   _lcd_sendString
     _lcd_sendChar
       __lcd_Port
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftdiv (ARG)
       ___ftpack
     ___ftge (ARG)
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg (ARG)
     ___ftsub (ARG)
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv (ARG)
     ___llmod (ARG)
       ___lldiv (ARG)
     ___lltoft (ARG)
       ___ftpack
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_ (ARG)
     __tdiv_to_l_ (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _INT0_ISR
     _TMR0_ReadTimer
     _TMR0_Reload
     _TMR0_StopTimer
     ___lwtoft
       i2___ftpack
     i2_TMR0_StartTimer
     i2___ftadd
       ___lwtoft (ARG)
         i2___ftpack
       i2___ftpack (ARG)
     i2___ftdiv
       ___lwtoft (ARG)
         i2___ftpack
       i2___ftadd (ARG)
         ___lwtoft (ARG)
           i2___ftpack
         i2___ftpack (ARG)
       i2___ftmul (ARG)
         ___lwtoft (ARG)
           i2___ftpack
         i2___ftadd (ARG)
           ___lwtoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
         i2___ftpack (ARG)
       i2___ftpack (ARG)
     i2___ftmul
       ___lwtoft (ARG)
         i2___ftpack
       i2___ftadd (ARG)
         ___lwtoft (ARG)
           i2___ftpack
         i2___ftpack (ARG)
       i2___ftpack (ARG)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0     75      8D       6       88.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4D      55       1       90.4%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E2       3        0.0%
DATA                 0      0      E2       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Jan 20 22:59:17 2017

                           ?_lcd_sendChar 0001                              ___awdiv@sign 006B  
                     ___wmul@multiplicand 0070                                i2___ftpack 2DC4  
                         _timer0ReloadVal 0052                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                              ___ftadd@exp1 0098  
                            ___ftadd@exp2 0097                               __CFG_LVP$ON 000000  
                            ___ftadd@sign 0096                           ?_lcd_sendString 0064  
                        ?_lcd_sendCommand 0001                                       l311 32AA  
                                     l232 2364                                       l305 3286  
                                     l402 0DCC                                       l307 3292  
                                     l309 329E                                       l703 1A6E  
                                     l368 0F70                                       l705 1A96  
                                     l714 1B6C                                       l723 1B96  
                                     l644 2336                                       l741 20EA  
                                     l734 2722                                       l742 212E  
                                     l676 2974                                       l748 21AE  
                                     l773 32D0                                       l845 2DB2  
                                     l855 2F9C                                       l699 1A34  
                            __CFG_CPB$OFF 000000                              __CFG_CPD$OFF 000000  
              ??_INT0_SetInterruptHandler 0062                              ___awmod@sign 0065  
                                     tosl 000FFD                                       wreg 000FE8  
                            ___ftdiv@cntr 0071                              ___ftdiv@sign 0076  
                                    l3031 21A4                                      l3023 2178  
                                    l3105 2BC2                                      l3115 2C46  
                                    l3203 2F8A                                      l3211 2FC6  
                                    l3019 2164                                      l3109 2C02  
                                    l3045 220C                                      l3029 2194  
                                    l3151 2838                                      l3039 21E6  
                                    l3161 286E                                      l3129 2792  
                                    l3209 2FB6                                      l2603 1A42  
                                    l3147 2824                                      l3091 232C  
                                    l3083 2300                                      l3067 22B4  
                                    l3059 2260                                      l2541 28D8  
                                    l3165 288A                                      l3157 2854  
                                    l2701 25AE                                      l3501 083E  
                                    l2551 2966                                      l2543 2908  
                                    l2535 28B6                                      l2631 1AFC  
                                    l2615 1A8C                                      l3159 2864  
                                    l3175 2D36                                      l3079 22EC  
                                    l3503 0874                                      l2633 1B0A  
                                    l2625 1ACE                                      l2609 1A7C  
                                    l3097 30C6                                      l3177 2D46  
                                    l3089 231C                                      l2721 2C66  
                                    l2705 25CC                                      l2563 299A  
                                    l2547 2928                                      l2539 28CA  
                                    l2651 1BC0                                      l2643 1B52  
                                    l2635 1B18                                      l3187 2DA0  
                                    l3179 2D4C                                      l3195 2F30  
                                    l3611 0CD4                                      l3603 0C8C  
                                    l2557 297E                                      l2549 2958  
                                    l2581 3294                                      l2661 1C0E  
                                    l2645 1B60                                      l2637 1B24  
                                    l3197 2F40                                      l2733 2C9A  
                                    l3613 0CDC                                      l3621 0D72  
                                    l3605 0C94                                      l3509 088E  
                                    l3199 2F46                                      l2735 2CA6  
                                    l2727 2C7C                                      l2671 24E8  
                                    l3703 1084                                      l3631 0DAE  
                                    l3623 0D80                                      l3607 0CA8  
                                    l3551 0A6A                                      l3543 09F6  
                                    l3535 0986                                      l3519 08D4  
                                    l3463 06EE                                      l2585 32A0  
                                    l2577 3288                                      l2753 2CFE  
                                    l2745 2CDC                                      l2737 2CAC  
                                    l3721 1132                                      l3553 0A80  
                                    l3457 06CE                                      l2691 2570  
                                    l2923 1984                                      l2915 18A0  
                                    l3731 116E                                      l3723 113C  
                                    l3715 10F0                                      l3643 0E00  
                                    l3635 0DD0                                      l3563 0AF8  
                                    l3547 0A24                                      l3483 07BE  
                                    l2749 2CEA                                      l2781 2EE8  
                                    l2773 2EB2                                      l2765 2E8E  
                                    l2677 2522                                      l3741 122A  
                                    l3725 1148                                      l3717 10FA  
                                    l3709 10B8                                      l3629 0D9A  
                                    l3573 0B56                                      l3549 0A3A  
                                    l3493 082A                                      l3469 0720  
                                    l3477 0796                                      l2775 2EBE  
                                    l2695 258E                                      l2943 14AA  
                                    l3743 1230                                      l3671 0F92  
                                    l3647 0E52                                      l3591 0C08  
                                    l3559 0ACA                                      l3495 0830  
                                    l3487 0804                                      l3753 30FC  
                                    l2777 2EC4                                      l2785 2EF6  
                                    l2769 2E9E                                      l2961 16FA  
                                    l2937 13E4                                      l3737 119C  
                                    l3681 0FE0                                      l3665 0F62  
                                    l3657 0F3A                                      l3577 0BBC  
                                    l3497 0836                                      l3489 081A  
                                    l3745 1246                                      l3819 26E0  
                                    l2955 1634                                      l2947 14D0  
                                    l3683 0FE6                                      l3659 0F48  
                                    l3595 0C58                                      l3579 0BC2  
                                    l3747 1264                                      l3757 311C  
                                    l2789 2F0A                                      l2973 335E  
                                    l2983 205C                                      l3695 102C  
                                    l3599 0C7A                                      l3793 2646  
                                    l3873 2474                                      l3699 1054  
                                    l3875 249C                                      l3867 23D8  
                                    l2989 2096                                      l3799 2680  
                                    STR_1 06B1                                      STR_2 069B  
                                    STR_3 06A6                                      STR_4 0690  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      u3121 276E  
                                    u4010 0DC4                                      u3140 27B8  
                                    u2341 19E2                                      u2351 1A00  
                                    u3145 27AE                                      u2551 24C4  
                                    u2571 24FE                                      u4261 2622  
                                    u4407 3160                                      u2911 2038  
                                    u4281 265C                                      u4417 3174  
                                    u4427 3038                                      u2931 2072  
                                    u3820 091A                                      u4437 3050  
                                    u4447 3068                                      u4457 3380  
                                    u3825 090E                                      i2l91 0058  
                                    i2l87 004E                                      _WPUB 000F61  
                                    _main 2348                              ___ftpack@arg 0060  
                            ___ftpack@exp 0063                           _TMR0_StartTimer 3454  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr0l 000FE9                                      fsr2h 000FDA  
                                    fsr1l 000FE1                                      indf2 000FDF  
                                    fsr2l 000FD9                                      btemp 0056  
                           __CFG_BORV$190 000000                              i2___ftadd@f1 000C  
                            i2___ftadd@f2 000F                                      pclat 000FFA  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 0094                             __CFG_IESO$OFF 000000  
                            i2___ftdiv@f1 0027                              i2___ftdiv@f2 002A  
                            i2___ftdiv@f3 0031                              _sprintf$1577 00AC  
                          ??_lcd_sendChar 0061                              ___ftmul@cntr 0081  
                            i2___ftmul@f1 0018                              i2___ftmul@f2 001B  
                            ___param_bank 000010                              ___ftmul@sign 0082  
                            ___fttol@exp1 0098                              ___fttol@lval 0094  
                 __end_of_TMR0_Initialize 31C2                          __end_of_INT0_ISR 1E76  
          ??_TMR0_DefaultInterruptHandler 0001            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 3432                                     ?_main 0001  
                         __end_of___awdiv 2D08                           __end_of___ftadd 1C34  
                         __end_of___awmod 2F14                 TMR0_ReadTimer@readValHigh 000A  
                         __end_of___ftdiv 2758                           __end_of___ftneg 32DE  
                         __end_of___lldiv 2DC4                           __end_of___ftmul 260C  
                                   _T0CON 000FD5                           ___awdiv@divisor 0068  
                         __end_of___llmod 2FAE                           __end_of___ftsub 30F0  
                         __end_of___fttol 289C                            __CFG_DEBUG$OFF 000000  
                                   i2l703 1EE4                                     i2l714 1F94  
                                   i2l723 1FB0                                     i2l734 2B50  
                                   i2l676 2E52                                     i2l699 1EBA  
                         ___awdiv@counter 006A                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
       __size_of_TMR0_SetInterruptHandler 000A                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
               ?_TMR0_SetInterruptHandler 0060                             __CFG_WRT3$OFF 000000  
                            ___lltoft@exp 0070                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                        __end_of_TMR0_ISR 333E                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                          __end_of_RSET_BIT 0690  
                         __end_of_dpowers 0629                                     _scale 1272  
                                   _range 0051                           __end_of_isdigit 3368  
                      __CFG_MCLRE$EXTMCLR 000000                             ___ftpack@sign 0064  
                                   _units 004E                                     pclath 000FFA  
                                   tablat 000FF5                                     status 000FD8  
                         __end_of_sprintf 1272                            __CFG_HFOFST$ON 000000  
                          __CFG_FOSC$HSMP 000000                             i2___ftdiv@exp 0034  
                      __size_ofi2___ftadd 01AC                            __CFG_PBADEN$ON 000000  
                      __size_ofi2___ftdiv 00E6                        __size_ofi2___ftmul 00F4  
                         __initialization 3204                __end_of_EUSART1_Initialize 3416  
                            __end_of_main 24AE                             i2___ftmul@exp 0021  
             ?_INTERRUPT_InterruptManager 0001                               ?i2___ftpack 0001  
                           lcd_sendChar@a 0063                             lcd_sendChar@y 0062  
                                  ??_main 00C5                             ___fttol@sign1 0093  
                           __activetblptr 000002                      __size_of__tdiv_to_l_ 019E  
                 __end_of_TMR0_StartTimer 3458                          ___llmod@dividend 006D  
                                  ?_scale 0083                          ___awdiv@dividend 0066  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                          __end_of___ftpack 29A8  
                        __end_of___lltoft 302A                                    _R1_BIT 0686  
                                  i2l3231 1EC8                                    i2l3305 2AEC  
                                  i2l3261 1F4E                                    i2l3253 1F22  
                                  i2l3237 1EF2                                    i2l3325 2B2A  
                          __CFG_WDTEN$OFF 000000                                    i2l3271 1F82  
                                  i2l3263 1F58                                    i2l3351 29F8  
                                  i2l2801 2DE2                                    i2l3273 1F8C  
                                  i2l3265 1F60                                    i2l3345 29D0  
                                  i2l2811 2E3E                                    i2l2803 2DEC  
                                  i2l3259 1F44                                    i2l2813 2E48  
                                  i2l2805 2E0A                                    i2l3365 2A2A  
                                  i2l3279 1FCC                                    i2l3375 2A52  
                                  i2l2809 2E20                                    i2l3289 1FFC  
                                  i2l3369 2A3A                                    i2l3393 1DEC  
                                  i2l3299 2AC4                                    i2l3379 2A62  
                                  i2l2797 2DD4                                    u350_41 2AD4  
                                  u327_41 1E86                                    _RCREG1 000FAE  
                                  u328_41 1E9A                                    u353_41 29B8  
                        __end_of___lwtoft 33B2                                    u355_41 29E0  
                                  u348_41 2AAC                                    _RCSTA1 000FAB  
                                  _OSCCON 000FD3                                    _SPBRG1 000FAF  
                                  _TXREG1 000FAD                                    _TXSTA1 000FAC  
                          __CFG_XINST$OFF 000000                          __end_of__powers_ 0677  
                        __end_of_lcd_init 30A4                              ?_TMR0_Reload 0001  
                                  ___ftge 2B82                          lcd_sendChar@temp 0061  
                                  ___wmul 3242                                 ??___awdiv 006A  
                               ??___ftadd 0093                            __CFG_STVREN$ON 000000  
                               ??___awmod 0064                                 ??___ftdiv 006E  
                               ??___ftneg 0063                                 ??___lldiv 0068  
                               ??___ftmul 007A                                 ??___llmod 0075  
                               ??___ftsub 009F                                 ??___fttol 008E  
                        ?_TMR0_Initialize 0001                                    _fround 1720  
                                  clear_0 322A                          ___awdiv@quotient 006C  
                         ___awmod@divisor 0062                                    _result 00D5  
                         ___awmod@counter 0064                     ___ftmul@f3_as_product 007E  
                            __pdataCOMRAM 004E                                 ??_isdigit 0060  
                       __end_ofi2___ftadd 2022                         __end_ofi2___ftdiv 2B82  
                          i2___ftadd@exp1 0017                            i2___ftadd@exp2 0016  
                       __end_ofi2___ftmul 2A9C                            i2___ftadd@sign 0015  
                            __mediumconst 0000                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                    __end_of_lcd_sendChar 317E                          lcd_sendCommand@a 0062  
TMR0_SetInterruptHandler@InterruptHandler 0060  INT0_SetInterruptHandler@InterruptHandler 0060  
                               ??_sprintf 00A6             __size_of_INTERRUPT_Initialize 0004  
                       _SYSTEM_Initialize 33CE                            i2___ftdiv@cntr 0030  
                              __accesstop 0060                   __end_of__initialization 3234  
                          i2___ftdiv@sign 0035                                 ?_INT0_ISR 0001  
                              ___ftadd@f1 008D                                ___ftadd@f2 0090  
                     __size_ofi2___ftpack 00AE                                ___ftge@ff1 0060  
                              ___ftge@ff2 0063                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 000001                                ___ftdiv@f1 0068  
                              ___ftdiv@f2 006B                                ___ftdiv@f3 0072  
                              ___ftneg@f1 0060                        __size_of__lcd_Port 0036  
                          i2___ftpack@arg 0001                            i2___ftpack@exp 0004  
                              ___ftmul@f1 0074                                ___ftmul@f2 0077  
                              ___ftsub@f1 0099                                ___ftsub@f2 009C  
                              ___fttol@f1 008A                            __pcstackCOMRAM 0001  
                     ??_SYSTEM_Initialize 0064                          ??_lcd_sendString 0066  
                               ?_TMR0_ISR 0001                                ___lltoft@c 0068  
                          i2___ftmul@cntr 0025                             __end_of_scale 1720  
                          i2___ftmul@sign 0026                   __size_of_TMR0_ReadTimer 0042  
                          main@cap_string 00C5                                ___lwtoft@c 0009  
             __size_of_EXT_INT_Initialize 0018                                __div_to_l_ 21C0  
                      __size_of_lcd_clear 000E                           __div_to_l_@exp1 006B  
                        ?_TMR0_StartTimer 0001                           __div_to_l_@cntr 006A  
                                 ??_scale 0086                 __end_of_SYSTEM_Initialize 33E8  
                         __div_to_l_@quot 0066                              sprintf@width 00B7  
                              __pbssBANK0 00D5                           __CFG_PLLCFG$OFF 000000  
                   _INT0_InterruptHandler 00E9                                ??_INT0_ISR 0036  
                              __pnvCOMRAM 0052                             __div_to_l_@f1 0060  
                           __div_to_l_@f2 0063                        __CFG_CCP2MX$PORTC1 000000  
                                 ?___ftge 0060          __end_of_TMR0_SetInterruptHandler 343C  
                 __size_of_TMR0_StopTimer 0004                                   ?___wmul 006E  
                              ??_TMR0_ISR 0002                        __CFG_CCP3MX$PORTB5 000000  
                                 ?_fround 0083                                 ?___ftpack 0060  
                               ?___lltoft 0068                                 ?___lwtoft 0009  
                       __end_of__lcd_Port 32AE                                   _OSCCON2 000FD2  
                                 _OSCTUNE 000F9B                                   _SPBRGH1 000FB0  
                __size_of_lcd_sendCommand 0026                                 ?_lcd_init 0001  
       __size_of_INT0_SetInterruptHandler 000A                 ?_INT0_SetInterruptHandler 0060  
                         __CFG_PWRTEN$OFF 000000                         __end_of__npowers_ 0650  
                                 __Hparam 0000                                _scale$1576 0086  
                                 __Lparam 0000                         __end_of_lcd_clear 3424  
                              _last_range 0050                           __size_of___ftge 00C8  
                                 ___awdiv 2C4A                                   ___ftadd 19CC  
                                 ___awmod 2E72                                   ___ftdiv 260C  
                                 ___ftneg 32AE                                   ___lldiv 2D08  
                         __size_of___wmul 0036                                   ___ftmul 24AE  
                                 ___llmod 2F14                                   ___ftsub 30A4  
                                 ___fttol 2758                              __psmallconst 0600  
                    __size_of_TMR0_Reload 000A                                   __pcinit 3204  
                            ??i2___ftpack 0006                                ??___ftpack 0065  
                         __size_of_fround 02AC                   i2___ftmul@f3_as_product 0022  
                                 __ramtop 0600                                ??___lltoft 006C  
                                 __ptext0 2348                                   __ptext1 06BE  
                                 __ptext2 1272                                   __ptext3 333E  
                                 __ptext4 1720                                   __ptext5 3242  
                                 __ptext6 24AE                                   __ptext7 2E72  
                                 __ptext8 2C4A                                   __ptext9 2022  
                   __size_of_lcd_sendChar 0046                                ??___lwtoft 000C  
                               _T0CONbits 000FD5                               ?__div_to_l_ 0060  
                                 _dpowers 0601                     _OSCILLATOR_Initialize 3424  
                                 _isdigit 333E                                   _reading 0054  
                        ___awmod@dividend 0060                        _EUSART1_Initialize 3400  
                ??_PIN_MANAGER_Initialize 0060                __size_of_SYSTEM_Initialize 001A  
                                 _sprintf 06BE                                ??_lcd_init 0063  
                    end_of_initialization 3234                                   ftoa@buf 00D8  
                     ?_EUSART1_Initialize 0001                             __Lmediumconst 0000  
                      __end_ofi2___ftpack 2E72                           ___lldiv@divisor 0064  
                         ___lldiv@counter 006C                     TMR0_ReadTimer@readVal 0007  
                            _lcd_sendChar 3138                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                            __tdiv_to_l_@f1 0060  
                          __tdiv_to_l_@f2 0063                            _TMR0_ReadTimer 31C2  
                    ??_EUSART1_Initialize 0060                       __end_of_cal_current 0686  
                           ??__tdiv_to_l_ 0066                  _TMR0_SetInterruptHandler 3432  
                               i2___ftadd 1E76                                 i2___ftdiv 2A9C  
                               i2___ftmul 29A8                            __end_of_R1_BIT 068B  
                             ___ftdiv@exp 0075                         ??_lcd_sendCommand 0061  
                         i2___ftpack@sign 0005                         __size_of_INT0_ISR 0242  
                     __size_of__div_to_l_ 0188                               ___ftmul@exp 007D  
                          _TMR0_StopTimer 3460                    __end_of_TMR0_ReadTimer 3204  
            __end_of_INTERRUPT_Initialize 345C              _INT0_DefaultInterruptHandler 000000  
                          __end_of___ftge 2C4A                            __end_of___wmul 3278  
                           __pidataCOMRAM 3450                         __size_of_TMR0_ISR 0030  
                  ?_OSCILLATOR_Initialize 0001                            __end_of_fround 19CC  
                     start_initialization 3204                  __size_of_TMR0_Initialize 0044  
         __size_of_PIN_MANAGER_Initialize 0030                       __end_of__tdiv_to_l_ 21C0  
                             __lcd_Port@a 0060                                ?i2___ftadd 000C  
                              ?i2___ftdiv 0027                                ?i2___ftmul 0018  
                         ___llmod@divisor 0071                           ___llmod@counter 0075  
                  __end_of_TMR0_StopTimer 3464                               _cal_current 0677  
                                ??___ftge 0066                           ?_TMR0_ReadTimer 0001  
                                ??___wmul 0072                                  ??_fround 0086  
              __end_of_EXT_INT_Initialize 3400                             sprintf@tmpval 00B9  
                              fround@prec 008C                         __size_of___ftpack 010C  
                       __size_of___lltoft 007C                               __pbssCOMRAM 0054  
        __end_of_INT0_SetInterruptHandler 3446                         __size_of___lwtoft 0024  
                           __pcstackBANK0 0060                              _isdigit$1161 0061  
                               __lcd_Port 3278                         __size_of_lcd_init 007A  
                             sprintf@flag 00B5                               sprintf@fval 00BF  
                             sprintf@prec 00C2                     _TMR0_InterruptHandler 00EB  
                               __pnvBANK0 00E9                  __size_of_TMR0_StartTimer 0004  
                         lcd_sendString@a 0064                           lcd_sendString@i 0066  
                         ?_TMR0_StopTimer 0001                    _PIN_MANAGER_Initialize 32DE  
                               __pintcode 0008                                  ?___awdiv 0066  
                                ?___ftadd 008D                                  ?___awmod 0060  
                                ?___ftdiv 0068                                  ?___ftneg 0060  
                                ?___lldiv 0060                                  ?___ftmul 0074  
                                ?___llmod 006D                                  ?___ftsub 0099  
                               __npowers_ 0629                                  ?___fttol 008A  
                               _lcd_clear 3416              ??_INTERRUPT_InterruptManager 0040  
                        __CFG_PRICLKEN$ON 000000                               __tdiv_to_l_ 2022  
                            ??__div_to_l_ 0066                               __smallconst 0600  
                                _BAUDCON1 000FB8                                  ?_isdigit 0001  
                 __size_of_lcd_sendString 0048                               ??i2___ftadd 0012  
                                ?_sprintf 009F                               ??i2___ftdiv 002D  
                             ??i2___ftmul 001E                            __size_of_scale 04AE  
                              ?__lcd_Port 0001                      _INTERRUPT_Initialize 3458  
                       ??_TMR0_Initialize 0062                                  _INT0_ISR 1C34  
                          ___wmul@product 0072                                  _LATAbits 000F89  
                                _LATBbits 000F8A                         i2_TMR0_StartTimer 345C  
     __size_of_INTERRUPT_InterruptManager 008C                ??_TMR0_SetInterruptHandler 0062  
                                i2u360_44 1C66                                  i2u360_45 1C62  
                                i2u281_40 33BA                                  _PIR1bits 000F9E  
                                i2u361_44 1C84                                  i2u361_45 1C80  
                                i2u281_46 33BC                        __end_of__div_to_l_ 2348  
                                i2u370_44 1DE2                                  i2u362_44 1CA2  
                                i2u370_45 1DDE                                  i2u362_45 1C9E  
                                i2u363_44 1CC0                                  i2u363_45 1CBC  
                                i2u364_44 1CDE                                  i2u364_45 1CDA  
                                i2u372_48 3328                                  i2u365_44 1D08  
                                i2u365_45 1D04                                  i2u366_44 1D26  
                                i2u366_45 1D22                                  i2u367_44 1D44  
                                i2u367_45 1D40                                  i2u368_44 1D62  
                                i2u368_45 1D5E                                  i2u369_44 1DA4  
                                i2u369_45 1DA0                             ??_TMR0_Reload 0001  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                      ?i2_TMR0_StartTimer 0001                                  _TMR0_ISR 330E  
                                _RSET_BIT 068B                                ?_lcd_clear 0001  
                TMR0_ReadTimer@readValLow 0009                       ??i2_TMR0_StartTimer 0001  
                       ___wmul@multiplier 006E                           _lcd_sendCommand 3368  
                             _INTCON2bits 000FF1                                 copy_data0 3218  
                   ?_INTERRUPT_Initialize 0001                  _INT0_SetInterruptHandler 343C  
               __end_ofi2_TMR0_StartTimer 3460                                  __Hrparam 0000  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                       __CFG_P2BMX$PORTB5 000000                   ??_OSCILLATOR_Initialize 0060  
                       ??_TMR0_StartTimer 0060                          __size_of___awdiv 00BE  
                        __size_of___ftadd 0268                          __size_of___awmod 00A2  
                        __size_of___ftdiv 014C                          __size_of___ftneg 0030  
                        __size_of___lldiv 00BC                          __size_of___ftmul 015E  
                        __size_of___llmod 009A                          __size_of___ftsub 004C  
                        __size_of___fttol 0144               __size_of_EUSART1_Initialize 0016  
                                ___ftpack 289C                               _fround$1574 0089  
                             _fround$1575 0086                                  ___lltoft 2FAE  
                     __end_of_TMR0_Reload 3450                                  ___lwtoft 338E  
                              sprintf@exp 00BD                                sprintf@val 00B1  
                        __size_of_isdigit 002A                                  __ptext10 21C0  
                                __ptext11 2FAE                                  __ptext20 3138  
                                __ptext12 2F14                                  __ptext21 302A  
                                __ptext13 2D08                                  __ptext30 3432  
                                __ptext22 3416                                  __ptext14 2758  
                                __ptext31 32DE                                  __ptext23 3368  
                                __ptext15 30A4                                  __ptext40 1C34  
                                __ptext32 3424                                  __ptext24 3278  
                                __ptext16 19CC                                  __ptext41 29A8  
                                __ptext33 3458                                  __ptext25 260C  
                                __ptext17 32AE                                  __ptext50 0000  
                                __ptext42 2A9C                                  __ptext34 33E8  
                                __ptext26 289C                                  __ptext18 2B82  
                                __ptext43 1E76                                  __ptext35 343C  
                                __ptext27 33CE                                  __ptext19 30F0  
                                __ptext44 345C                                  __ptext36 3400  
                                __ptext28 317E                                  __ptext45 338E  
                                __ptext29 3454                                  __ptext46 2DC4  
                                __ptext38 330E                                  __ptext47 3460  
                                __ptext39 33B2                                  __ptext48 3446  
                                __ptext49 31C2                                  __powers_ 0650  
                                _lcd_init 302A                               ??__lcd_Port 0060  
                        __size_of_sprintf 0BB4                             __size_of_main 0166  
                        ??_TMR0_ReadTimer 0003      __end_of_TMR0_DefaultInterruptHandler 33CE  
   __size_of_TMR0_DefaultInterruptHandler 001C              _TMR0_DefaultInterruptHandler 33B2  
                                int$flags 0056        __end_of_INTERRUPT_InterruptManager 0094  
              _INTERRUPT_InterruptManager 0008                               ??_lcd_clear 0063  
                 __end_of_lcd_sendCommand 338E                                _INTCONbits 000FF2  
                          _lcd_sendString 30F0                                  isdigit@c 0062  
                  ??_INTERRUPT_Initialize 0060                                  scale@scl 0089  
                      _EXT_INT_Initialize 33E8                                  intlevel2 0000  
                               sprintf@ap 00AF                          ??_TMR0_StopTimer 0001  
                        __tdiv_to_l_@exp1 006E                                 sprintf@sp 009F  
                        __tdiv_to_l_@cntr 006D                          __tdiv_to_l_@quot 0069  
                        ___lldiv@dividend 0060                   ?_PIN_MANAGER_Initialize 0001  
              __size_ofi2_TMR0_StartTimer 0004                       ?_EXT_INT_Initialize 0001  
                              _RCSTA1bits 000FAB             ?_TMR0_DefaultInterruptHandler 0001  
                             _TMR0_Reload 3446                              ?__tdiv_to_l_ 0060  
                  __end_of_lcd_sendString 3138                      ??_EXT_INT_Initialize 0062  
                                sprintf@c 00C4                                  sprintf@f 00A1  
                        ___lldiv@quotient 0068                           _TMR0_Initialize 317E  
                       __CFG_T3CMX$PORTC0 000000            __end_of_PIN_MANAGER_Initialize 330E  
