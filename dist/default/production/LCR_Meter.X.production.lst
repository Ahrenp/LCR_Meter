

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat Jan 21 14:12:28 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    96                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    97  0000                     
    98 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
    99  0000                     
   100 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
   101  0000                     
   102                           	psect	idataCOMRAM
   103  005B2E                     __pidataCOMRAM:
   104                           	opt stack 0
   105                           
   106                           ;initializer for _range
   107  005B2E  02                 	db	2
   108                           
   109                           	psect	idataBANK0
   110  005B2C                     __pidataBANK0:
   111                           	opt stack 0
   112                           
   113                           ;initializer for _units
   114  005B2C  70                 	db	112
   115  005B2D  46                 	db	70
   116                           
   117                           	psect	smallconst
   118  000600                     __psmallconst:
   119                           	opt stack 0
   120  000600  00                 	db	0
   121  000601                     _dpowers:
   122                           	opt stack 0
   123  000601  0001               	dw	1
   124  000603  0000               	dw	0
   125  000605  000A               	dw	10
   126  000607  0000               	dw	0
   127  000609  0064               	dw	100
   128  00060B  0000               	dw	0
   129  00060D  03E8               	dw	1000
   130  00060F  0000               	dw	0
   131  000611  2710               	dw	10000
   132  000613  0000               	dw	0
   133  000615  86A0               	dw	34464
   134  000617  0001               	dw	1
   135  000619  4240               	dw	16960
   136  00061B  000F               	dw	15
   137  00061D  9680               	dw	38528
   138  00061F  0098               	dw	152
   139  000621  E100               	dw	57600
   140  000623  05F5               	dw	1525
   141  000625  CA00               	dw	51712
   142  000627  3B9A               	dw	15258
   143  000629                     __end_of_dpowers:
   144                           	opt stack 0
   145  000629                     __npowers_:
   146                           	opt stack 0
   147  000629  00                 	db	0
   148  00062A  80                 	db	128
   149  00062B  3F                 	db	63
   150  00062C  CD                 	db	205
   151  00062D  CC                 	db	204
   152  00062E  3D                 	db	61
   153  00062F  D7                 	db	215
   154  000630  23                 	db	35
   155  000631  3C                 	db	60
   156  000632  12                 	db	18
   157  000633  83                 	db	131
   158  000634  3A                 	db	58
   159  000635  B7                 	db	183
   160  000636  D1                 	db	209
   161  000637  38                 	db	56
   162  000638  C6                 	db	198
   163  000639  27                 	db	39
   164  00063A  37                 	db	55
   165  00063B  38                 	db	56
   166  00063C  86                 	db	134
   167  00063D  35                 	db	53
   168  00063E  C0                 	db	192
   169  00063F  D6                 	db	214
   170  000640  33                 	db	51
   171  000641  CC                 	db	204
   172  000642  2B                 	db	43
   173  000643  32                 	db	50
   174  000644  70                 	db	112
   175  000645  89                 	db	137
   176  000646  30                 	db	48
   177  000647  E7                 	db	231
   178  000648  DB                 	db	219
   179  000649  2E                 	db	46
   180  00064A  E5                 	db	229
   181  00064B  3C                 	db	60
   182  00064C  1E                 	db	30
   183  00064D  42                 	db	66
   184  00064E  A2                 	db	162
   185  00064F  0D                 	db	13
   186  000650                     __end_of__npowers_:
   187                           	opt stack 0
   188  000650                     __powers_:
   189                           	opt stack 0
   190  000650  00                 	db	0
   191  000651  80                 	db	128
   192  000652  3F                 	db	63
   193  000653  00                 	db	0
   194  000654  20                 	db	32
   195  000655  41                 	db	65
   196  000656  00                 	db	0
   197  000657  C8                 	db	200
   198  000658  42                 	db	66
   199  000659  00                 	db	0
   200  00065A  7A                 	db	122
   201  00065B  44                 	db	68
   202  00065C  40                 	db	64
   203  00065D  1C                 	db	28
   204  00065E  46                 	db	70
   205  00065F  50                 	db	80
   206  000660  C3                 	db	195
   207  000661  47                 	db	71
   208  000662  24                 	db	36
   209  000663  74                 	db	116
   210  000664  49                 	db	73
   211  000665  97                 	db	151
   212  000666  18                 	db	24
   213  000667  4B                 	db	75
   214  000668  BC                 	db	188
   215  000669  BE                 	db	190
   216  00066A  4C                 	db	76
   217  00066B  6B                 	db	107
   218  00066C  6E                 	db	110
   219  00066D  4E                 	db	78
   220  00066E  03                 	db	3
   221  00066F  15                 	db	21
   222  000670  50                 	db	80
   223  000671  79                 	db	121
   224  000672  AD                 	db	173
   225  000673  60                 	db	96
   226  000674  F3                 	db	243
   227  000675  49                 	db	73
   228  000676  71                 	db	113
   229  000677                     __end_of__powers_:
   230                           	opt stack 0
   231  000677                     _cal_current:
   232                           	opt stack 0
   233  000677  00                 	db	0
   234  000678  00                 	db	0
   235  000679  3F                 	db	63
   236  00067A  B8                 	db	184
   237  00067B  3E                 	db	62
   238  00067C  40                 	db	64
   239  00067D  DC                 	db	220
   240  00067E  D8                 	db	216
   241  00067F  42                 	db	66
   242  000680  68                 	db	104
   243  000681  8D                 	db	141
   244  000682  45                 	db	69
   245  000683  C0                 	db	192
   246  000684  DA                 	db	218
   247  000685  47                 	db	71
   248  000686                     __end_of_cal_current:
   249                           	opt stack 0
   250  000686                     _R1_BIT:
   251                           	opt stack 0
   252  000686  00                 	db	0
   253  000687  01                 	db	1
   254  000688  02                 	db	2
   255  000689  03                 	db	3
   256  00068A  04                 	db	4
   257  00068B                     __end_of_R1_BIT:
   258                           	opt stack 0
   259  00068B                     _RSET_BIT:
   260                           	opt stack 0
   261  00068B  02                 	db	2
   262  00068C  03                 	db	3
   263  00068D  03                 	db	3
   264  00068E  04                 	db	4
   265  00068F  05                 	db	5
   266  000690                     __end_of_RSET_BIT:
   267                           	opt stack 0
   268  000690                     STR_1:
   269  000690  43                 	db	67	;'C'
   270  000691  61                 	db	97	;'a'
   271  000692  70                 	db	112	;'p'
   272  000693  61                 	db	97	;'a'
   273  000694  63                 	db	99	;'c'
   274  000695  69                 	db	105	;'i'
   275  000696  74                 	db	116	;'t'
   276  000697  61                 	db	97	;'a'
   277  000698  6E                 	db	110	;'n'
   278  000699  63                 	db	99	;'c'
   279  00069A  65                 	db	101	;'e'
   280  00069B  3A                 	db	58	;':'
   281  00069C  20                 	db	32
   282  00069D  25                 	db	37
   283  00069E  30                 	db	48	;'0'
   284  00069F  2E                 	db	46
   285  0006A0  32                 	db	50	;'2'
   286  0006A1  66                 	db	102	;'f'
   287  0006A2  20                 	db	32
   288  0006A3  70                 	db	112	;'p'
   289  0006A4  46                 	db	70	;'F'
   290  0006A5  20                 	db	32
   291  0006A6  28                 	db	40
   292  0006A7  43                 	db	67	;'C'
   293  0006A8  6F                 	db	111	;'o'
   294  0006A9  75                 	db	117	;'u'
   295  0006AA  6E                 	db	110	;'n'
   296  0006AB  74                 	db	116	;'t'
   297  0006AC  3A                 	db	58	;':'
   298  0006AD  20                 	db	32
   299  0006AE  25                 	db	37
   300  0006AF  75                 	db	117	;'u'
   301  0006B0  29                 	db	41
   302  0006B1  20                 	db	32
   303  0006B2  2D                 	db	45
   304  0006B3  20                 	db	32
   305  0006B4  52                 	db	82	;'R'
   306  0006B5  61                 	db	97	;'a'
   307  0006B6  6E                 	db	110	;'n'
   308  0006B7  67                 	db	103	;'g'
   309  0006B8  65                 	db	101	;'e'
   310  0006B9  3A                 	db	58	;':'
   311  0006BA  20                 	db	32
   312  0006BB  25                 	db	37
   313  0006BC  64                 	db	100	;'d'
   314  0006BD  0D                 	db	13
   315  0006BE  0A                 	db	10
   316  0006BF  00                 	db	0
   317  0006C0  25                 	db	37
   318  0006C1  6C                 	db	108	;'l'
   319  0006C2  75                 	db	117	;'u'
   320  0006C3  2E                 	db	46
   321  0006C4  25                 	db	37
   322  0006C5  36                 	db	54	;'6'
   323  0006C6  2E                 	db	46
   324  0006C7  36                 	db	54	;'6'
   325  0006C8  6C                 	db	108	;'l'
   326  0006C9  75                 	db	117	;'u'
   327  0006CA  00                 	db	0
   328  0006CB                     STR_3:
   329  0006CB  43                 	db	67	;'C'
   330  0006CC  3D                 	db	61	;'='
   331  0006CD  25                 	db	37
   332  0006CE  31                 	db	49	;'1'
   333  0006CF  32                 	db	50	;'2'
   334  0006D0  2E                 	db	46
   335  0006D1  33                 	db	51	;'3'
   336  0006D2  66                 	db	102	;'f'
   337  0006D3  6E                 	db	110	;'n'
   338  0006D4  46                 	db	70	;'F'
   339  0006D5  00                 	db	0
   340  0006D6                     STR_4:
   341  0006D6  43                 	db	67	;'C'
   342  0006D7  3D                 	db	61	;'='
   343  0006D8  25                 	db	37
   344  0006D9  31                 	db	49	;'1'
   345  0006DA  32                 	db	50	;'2'
   346  0006DB  2E                 	db	46
   347  0006DC  30                 	db	48	;'0'
   348  0006DD  66                 	db	102	;'f'
   349  0006DE  70                 	db	112	;'p'
   350  0006DF  46                 	db	70	;'F'
   351  0006E0  00                 	db	0
   352  0006E1                     STR_2:
   353  0006E1  43                 	db	67	;'C'
   354  0006E2  3D                 	db	61	;'='
   355  0006E3  25                 	db	37
   356  0006E4  31                 	db	49	;'1'
   357  0006E5  32                 	db	50	;'2'
   358  0006E6  2E                 	db	46
   359  0006E7  36                 	db	54	;'6'
   360  0006E8  66                 	db	102	;'f'
   361  0006E9  75                 	db	117	;'u'
   362  0006EA  46                 	db	70	;'F'
   363  0006EB  00                 	db	0
   364                           
   365                           ; #config settings
   366  0006EC  00                 	db	0	; dummy byte at the end
   367  0000                     
   368                           	psect	nvCOMRAM
   369  00005C                     __pnvCOMRAM:
   370                           	opt stack 0
   371  00005C                     _timer0ReloadVal:
   372                           	opt stack 0
   373  00005C                     	ds	2
   374                           
   375                           	psect	nvBANK0
   376  0000CA                     __pnvBANK0:
   377                           	opt stack 0
   378  0000CA                     _INT0_InterruptHandler:
   379                           	opt stack 0
   380  0000CA                     	ds	2
   381  0000CC                     _INT1_InterruptHandler:
   382                           	opt stack 0
   383  0000CC                     	ds	2
   384  0000CE                     _TMR0_InterruptHandler:
   385                           	opt stack 0
   386  0000CE                     	ds	2
   387  0000                     _ANSELA	set	3896
   388  0000                     _ANSELB	set	3897
   389  0000                     _ANSELC	set	3898
   390  0000                     _BAUDCON1	set	4024
   391  0000                     _INTCON2bits	set	4081
   392  0000                     _INTCON3bits	set	4080
   393  0000                     _INTCONbits	set	4082
   394  0000                     _LATA	set	3977
   395  0000                     _LATAbits	set	3977
   396  0000                     _LATB	set	3978
   397  0000                     _LATC	set	3979
   398  0000                     _LATCbits	set	3979
   399  0000                     _OSCCON	set	4051
   400  0000                     _OSCCON2	set	4050
   401  0000                     _OSCTUNE	set	3995
   402  0000                     _PIR1bits	set	3998
   403  0000                     _RCONbits	set	4048
   404  0000                     _RCREG1	set	4014
   405  0000                     _RCSTA1	set	4011
   406  0000                     _RCSTA1bits	set	4011
   407  0000                     _SPBRG1	set	4015
   408  0000                     _SPBRGH1	set	4016
   409  0000                     _T0CON	set	4053
   410  0000                     _T0CONbits	set	4053
   411  0000                     _TMR0H	set	4055
   412  0000                     _TMR0L	set	4054
   413  0000                     _TRISA	set	3986
   414  0000                     _TRISB	set	3987
   415  0000                     _TRISC	set	3988
   416  0000                     _TXREG1	set	4013
   417  0000                     _TXSTA1	set	4012
   418  0000                     _WPUB	set	3937
   419                           
   420                           	psect	cinit
   421  005604                     __pcinit:
   422                           	opt stack 0
   423  005604                     start_initialization:
   424                           	opt stack 0
   425  005604                     __initialization:
   426                           	opt stack 0
   427                           
   428                           ; Initialize objects allocated to BANK0 (2 bytes)
   429                           ; load TBLPTR registers with __pidataBANK0
   430  005604  0E2C               	movlw	low __pidataBANK0
   431  005606  6EF6               	movwf	tblptrl,c
   432  005608  0E5B               	movlw	high __pidataBANK0
   433  00560A  6EF7               	movwf	tblptrh,c
   434  00560C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   435  00560E  6EF8               	movwf	tblptru,c
   436  005610  0009               	tblrd		*+	;fetch initializer
   437  005612  CFF5 F0D0          	movff	tablat,__pdataBANK0
   438  005616  0009               	tblrd		*+	;fetch initializer
   439  005618  CFF5 F0D1          	movff	tablat,__pdataBANK0+1
   440                           
   441                           ; Initialize objects allocated to COMRAM (1 bytes)
   442                           ; load TBLPTR registers with __pidataCOMRAM
   443  00561C  0E2E               	movlw	low __pidataCOMRAM
   444  00561E  6EF6               	movwf	tblptrl,c
   445  005620  0E5B               	movlw	high __pidataCOMRAM
   446  005622  6EF7               	movwf	tblptrh,c
   447  005624  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   448  005626  6EF8               	movwf	tblptru,c
   449  005628  0009               	tblrd		*+	;fetch initializer
   450  00562A  CFF5 F05E          	movff	tablat,__pdataCOMRAM
   451                           
   452                           ; Clear objects allocated to BANK0 (19 bytes)
   453  00562E  EE00  F0B7         	lfsr	0,__pbssBANK0
   454  005632  0E13               	movlw	19
   455  005634                     clear_0:
   456  005634  6AEE               	clrf	postinc0,c
   457  005636  06E8               	decf	wreg,f,c
   458  005638  E1FD               	bnz	clear_0
   459                           
   460                           ; Clear objects allocated to COMRAM (4 bytes)
   461  00563A  6A5B               	clrf	(__pbssCOMRAM+3)& (0+255),c
   462  00563C  6A5A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   463  00563E  6A59               	clrf	(__pbssCOMRAM+1)& (0+255),c
   464  005640  6A58               	clrf	__pbssCOMRAM& (0+255),c
   465  005642                     end_of_initialization:
   466                           	opt stack 0
   467  005642                     __end_of__initialization:
   468                           	opt stack 0
   469  005642  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   470  005644  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   471  005646  0E00               	movlw	low (__Lmediumconst shr (0+16))
   472  005648  6EF8               	movwf	tblptru,c
   473  00564A  0100               	movlb	0
   474  00564C  EFA0  F020         	goto	_main	;jump to C main() function
   475                           tblptru	equ	0xFF8
   476                           tblptrh	equ	0xFF7
   477                           tblptrl	equ	0xFF6
   478                           tablat	equ	0xFF5
   479                           postinc0	equ	0xFEE
   480                           wreg	equ	0xFE8
   481                           
   482                           	psect	bssCOMRAM
   483  000058                     __pbssCOMRAM:
   484                           	opt stack 0
   485  000058                     _result:
   486                           	opt stack 0
   487  000058                     	ds	3
   488  00005B                     _delta_range:
   489                           	opt stack 0
   490  00005B                     	ds	1
   491                           tblptru	equ	0xFF8
   492                           tblptrh	equ	0xFF7
   493                           tblptrl	equ	0xFF6
   494                           tablat	equ	0xFF5
   495                           postinc0	equ	0xFEE
   496                           wreg	equ	0xFE8
   497                           
   498                           	psect	dataCOMRAM
   499  00005E                     __pdataCOMRAM:
   500                           	opt stack 0
   501  00005E                     _range:
   502                           	opt stack 0
   503  00005E                     	ds	1
   504                           tblptru	equ	0xFF8
   505                           tblptrh	equ	0xFF7
   506                           tblptrl	equ	0xFF6
   507                           tablat	equ	0xFF5
   508                           postinc0	equ	0xFEE
   509                           wreg	equ	0xFE8
   510                           
   511                           	psect	bssBANK0
   512  0000B7                     __pbssBANK0:
   513                           	opt stack 0
   514  0000B7                     _reading:
   515                           	opt stack 0
   516  0000B7                     	ds	2
   517  0000B9                     ftoa@buf:
   518                           	opt stack 0
   519  0000B9                     	ds	17
   520                           tblptru	equ	0xFF8
   521                           tblptrh	equ	0xFF7
   522                           tblptrl	equ	0xFF6
   523                           tablat	equ	0xFF5
   524                           postinc0	equ	0xFEE
   525                           wreg	equ	0xFE8
   526                           
   527                           	psect	dataBANK0
   528  0000D0                     __pdataBANK0:
   529                           	opt stack 0
   530  0000D0                     _units:
   531                           	opt stack 0
   532  0000D0                     	ds	2
   533                           tblptru	equ	0xFF8
   534                           tblptrh	equ	0xFF7
   535                           tblptrl	equ	0xFF6
   536                           tablat	equ	0xFF5
   537                           postinc0	equ	0xFEE
   538                           wreg	equ	0xFE8
   539                           
   540                           	psect	cstackBANK1
   541  000100                     __pcstackBANK1:
   542                           	opt stack 0
   543  000100                     _fround$1769:
   544                           	opt stack 0
   545  000100                     _scale$1770:
   546                           	opt stack 0
   547                           
   548                           ; 3 bytes @ 0x0
   549  000100                     	ds	3
   550  000103                     scale@scl:
   551                           	opt stack 0
   552  000103                     _fround$1768:
   553                           	opt stack 0
   554                           
   555                           ; 3 bytes @ 0x3
   556  000103                     	ds	1
   557  000104                     ?___fttol:
   558                           	opt stack 0
   559  000104                     ___fttol@f1:
   560                           	opt stack 0
   561                           
   562                           ; 3 bytes @ 0x4
   563  000104                     	ds	2
   564  000106                     fround@prec:
   565                           	opt stack 0
   566                           
   567                           ; 1 bytes @ 0x6
   568  000106                     	ds	1
   569  000107                     ?___ftadd:
   570                           	opt stack 0
   571  000107                     ___ftadd@f1:
   572                           	opt stack 0
   573                           
   574                           ; 3 bytes @ 0x7
   575  000107                     	ds	1
   576  000108                     ??___fttol:
   577                           
   578                           ; 1 bytes @ 0x8
   579  000108                     	ds	2
   580  00010A                     ___ftadd@f2:
   581                           	opt stack 0
   582                           
   583                           ; 3 bytes @ 0xA
   584  00010A                     	ds	3
   585  00010D                     ___ftadd@sign:
   586                           	opt stack 0
   587  00010D                     ___fttol@sign1:
   588                           	opt stack 0
   589                           
   590                           ; 1 bytes @ 0xD
   591  00010D                     	ds	1
   592  00010E                     ___ftadd@exp2:
   593                           	opt stack 0
   594  00010E                     ___fttol@lval:
   595                           	opt stack 0
   596                           
   597                           ; 4 bytes @ 0xE
   598  00010E                     	ds	1
   599  00010F                     ___ftadd@exp1:
   600                           	opt stack 0
   601                           
   602                           ; 1 bytes @ 0xF
   603  00010F                     	ds	1
   604  000110                     ?___ftsub:
   605                           	opt stack 0
   606  000110                     ___ftsub@f1:
   607                           	opt stack 0
   608                           
   609                           ; 3 bytes @ 0x10
   610  000110                     	ds	2
   611  000112                     ___fttol@exp1:
   612                           	opt stack 0
   613                           
   614                           ; 1 bytes @ 0x12
   615  000112                     	ds	1
   616  000113                     ___ftsub@f2:
   617                           	opt stack 0
   618                           
   619                           ; 3 bytes @ 0x13
   620  000113                     	ds	3
   621  000116                     ?__doprnt:
   622                           	opt stack 0
   623  000116                     __doprnt@pb:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x16
   627  000116                     	ds	2
   628  000118                     __doprnt@f:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x18
   632  000118                     	ds	2
   633  00011A                     __doprnt@ap:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0x1A
   637  00011A                     	ds	2
   638  00011C                     ??__doprnt:
   639                           
   640                           ; 1 bytes @ 0x1C
   641  00011C                     	ds	6
   642  000122                     __doprnt$1771:
   643                           	opt stack 0
   644                           
   645                           ; 3 bytes @ 0x22
   646  000122                     	ds	3
   647  000125                     __doprnt@exp:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0x25
   651  000125                     	ds	2
   652  000127                     __doprnt@val:
   653                           	opt stack 0
   654                           
   655                           ; 4 bytes @ 0x27
   656  000127                     	ds	4
   657  00012B                     __doprnt@tmpval:
   658                           	opt stack 0
   659                           
   660                           ; 4 bytes @ 0x2B
   661  00012B                     	ds	4
   662  00012F                     __doprnt@width:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0x2F
   666  00012F                     	ds	2
   667  000131                     __doprnt@fval:
   668                           	opt stack 0
   669                           
   670                           ; 3 bytes @ 0x31
   671  000131                     	ds	3
   672  000134                     __doprnt@flag:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0x34
   676  000134                     	ds	2
   677  000136                     __doprnt@prec:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0x36
   681  000136                     	ds	2
   682  000138                     __doprnt@c:
   683                           	opt stack 0
   684                           
   685                           ; 1 bytes @ 0x38
   686  000138                     	ds	1
   687  000139                     ?_sprintf:
   688                           	opt stack 0
   689  000139                     sprintf@wh:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x39
   693  000139                     	ds	2
   694  00013B                     sprintf@f:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0x3B
   698  00013B                     	ds	5
   699  000140                     sprintf@ap:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x40
   703  000140                     	ds	2
   704  000142                     sprintf@pb:
   705                           	opt stack 0
   706                           
   707                           ; 4 bytes @ 0x42
   708  000142                     	ds	4
   709  000146                     main@cap_string:
   710                           	opt stack 0
   711                           
   712                           ; 16 bytes @ 0x46
   713  000146                     	ds	16
   714                           tblptru	equ	0xFF8
   715                           tblptrh	equ	0xFF7
   716                           tblptrl	equ	0xFF6
   717                           tablat	equ	0xFF5
   718                           postinc0	equ	0xFEE
   719                           wreg	equ	0xFE8
   720                           
   721                           	psect	cstackBANK0
   722  000060                     __pcstackBANK0:
   723                           	opt stack 0
   724  000060                     i2__doprnt$1953:
   725                           	opt stack 0
   726                           
   727                           ; 3 bytes @ 0x0
   728  000060                     	ds	3
   729  000063                     i2__doprnt@exp:
   730                           	opt stack 0
   731                           
   732                           ; 2 bytes @ 0x3
   733  000063                     	ds	2
   734  000065                     i2__doprnt@val:
   735                           	opt stack 0
   736                           
   737                           ; 4 bytes @ 0x5
   738  000065                     	ds	4
   739  000069                     i2__doprnt@tmpval:
   740                           	opt stack 0
   741                           
   742                           ; 4 bytes @ 0x9
   743  000069                     	ds	4
   744  00006D                     i2__doprnt@fval:
   745                           	opt stack 0
   746                           
   747                           ; 3 bytes @ 0xD
   748  00006D                     	ds	3
   749  000070                     i2__doprnt@width:
   750                           	opt stack 0
   751                           
   752                           ; 2 bytes @ 0x10
   753  000070                     	ds	2
   754  000072                     i2__doprnt@flag:
   755                           	opt stack 0
   756                           
   757                           ; 2 bytes @ 0x12
   758  000072                     	ds	2
   759  000074                     i2__doprnt@prec:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x14
   763  000074                     	ds	2
   764  000076                     i2__doprnt@c:
   765                           	opt stack 0
   766                           
   767                           ; 1 bytes @ 0x16
   768  000076                     	ds	1
   769  000077                     ?_printf:
   770                           	opt stack 0
   771  000077                     printf@f:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0x17
   775  000077                     	ds	9
   776  000080                     ??_INTERRUPT_InterruptManager:
   777                           
   778                           ; 1 bytes @ 0x20
   779  000080                     	ds	14
   780  00008E                     ??_isdigit:
   781  00008E                     ?___awmod:
   782                           	opt stack 0
   783  00008E                     ?___ftpack:
   784                           	opt stack 0
   785  00008E                     ?___ftneg:
   786                           	opt stack 0
   787  00008E                     ?__tdiv_to_l_:
   788                           	opt stack 0
   789  00008E                     ?__div_to_l_:
   790                           	opt stack 0
   791  00008E                     ?___lldiv:
   792                           	opt stack 0
   793  00008E                     EUSART1_Write@txData:
   794                           	opt stack 0
   795  00008E                     __lcd_Port@a:
   796                           	opt stack 0
   797  00008E                     INT1_SetInterruptHandler@InterruptHandler:
   798                           	opt stack 0
   799  00008E                     INT0_SetInterruptHandler@InterruptHandler:
   800                           	opt stack 0
   801  00008E                     TMR0_SetInterruptHandler@InterruptHandler:
   802                           	opt stack 0
   803  00008E                     ___awmod@dividend:
   804                           	opt stack 0
   805  00008E                     __div_to_l_@f1:
   806                           	opt stack 0
   807  00008E                     ___ftpack@arg:
   808                           	opt stack 0
   809  00008E                     __tdiv_to_l_@f1:
   810                           	opt stack 0
   811  00008E                     ___ftge@ff1:
   812                           	opt stack 0
   813  00008E                     ___ftneg@f1:
   814                           	opt stack 0
   815  00008E                     ___lldiv@dividend:
   816                           	opt stack 0
   817                           
   818                           ; 4 bytes @ 0x2E
   819  00008E                     	ds	1
   820  00008F                     ??_lcd_sendCommand:
   821  00008F                     putch@txData:
   822                           	opt stack 0
   823  00008F                     lcd_sendChar@temp:
   824                           	opt stack 0
   825  00008F                     _isdigit$1301:
   826                           	opt stack 0
   827                           
   828                           ; 1 bytes @ 0x2F
   829  00008F                     	ds	1
   830  000090                     ??_TMR0_Initialize:
   831  000090                     lcd_sendCommand@a:
   832                           	opt stack 0
   833  000090                     lcd_sendChar@y:
   834                           	opt stack 0
   835  000090                     isdigit@c:
   836                           	opt stack 0
   837  000090                     ___awmod@divisor:
   838                           	opt stack 0
   839                           
   840                           ; 2 bytes @ 0x30
   841  000090                     	ds	1
   842  000091                     ??_lcd_init:
   843  000091                     lcd_sendChar@a:
   844                           	opt stack 0
   845  000091                     ___ftpack@exp:
   846                           	opt stack 0
   847  000091                     __div_to_l_@f2:
   848                           	opt stack 0
   849  000091                     __tdiv_to_l_@f2:
   850                           	opt stack 0
   851  000091                     ___ftge@ff2:
   852                           	opt stack 0
   853                           
   854                           ; 3 bytes @ 0x31
   855  000091                     	ds	1
   856  000092                     ___awmod@counter:
   857                           	opt stack 0
   858  000092                     ___ftpack@sign:
   859                           	opt stack 0
   860  000092                     lcd_sendString@a:
   861                           	opt stack 0
   862  000092                     ___lldiv@divisor:
   863                           	opt stack 0
   864                           
   865                           ; 4 bytes @ 0x32
   866  000092                     	ds	1
   867  000093                     ??___ftpack:
   868  000093                     ___awmod@sign:
   869                           	opt stack 0
   870                           
   871                           ; 1 bytes @ 0x33
   872  000093                     	ds	1
   873  000094                     ??__tdiv_to_l_:
   874  000094                     ??___ftge:
   875  000094                     ?___awdiv:
   876                           	opt stack 0
   877  000094                     lcd_sendString@i:
   878                           	opt stack 0
   879  000094                     ___awdiv@dividend:
   880                           	opt stack 0
   881  000094                     __div_to_l_@quot:
   882                           	opt stack 0
   883                           
   884                           ; 4 bytes @ 0x34
   885  000094                     	ds	2
   886  000096                     ?___ftdiv:
   887                           	opt stack 0
   888  000096                     ?___lltoft:
   889                           	opt stack 0
   890  000096                     ___awdiv@divisor:
   891                           	opt stack 0
   892  000096                     ___ftdiv@f1:
   893                           	opt stack 0
   894  000096                     ___lldiv@quotient:
   895                           	opt stack 0
   896  000096                     ___lltoft@c:
   897                           	opt stack 0
   898                           
   899                           ; 4 bytes @ 0x36
   900  000096                     	ds	1
   901  000097                     __tdiv_to_l_@quot:
   902                           	opt stack 0
   903                           
   904                           ; 4 bytes @ 0x37
   905  000097                     	ds	1
   906  000098                     ___awdiv@counter:
   907                           	opt stack 0
   908  000098                     __div_to_l_@cntr:
   909                           	opt stack 0
   910                           
   911                           ; 1 bytes @ 0x38
   912  000098                     	ds	1
   913  000099                     ___awdiv@sign:
   914                           	opt stack 0
   915  000099                     __div_to_l_@exp1:
   916                           	opt stack 0
   917  000099                     ___ftdiv@f2:
   918                           	opt stack 0
   919                           
   920                           ; 3 bytes @ 0x39
   921  000099                     	ds	1
   922  00009A                     ??___lltoft:
   923  00009A                     ___lldiv@counter:
   924                           	opt stack 0
   925  00009A                     ___awdiv@quotient:
   926                           	opt stack 0
   927                           
   928                           ; 2 bytes @ 0x3A
   929  00009A                     	ds	1
   930  00009B                     ?___llmod:
   931                           	opt stack 0
   932  00009B                     __tdiv_to_l_@cntr:
   933                           	opt stack 0
   934  00009B                     ___llmod@dividend:
   935                           	opt stack 0
   936                           
   937                           ; 4 bytes @ 0x3B
   938  00009B                     	ds	1
   939  00009C                     ??___ftdiv:
   940  00009C                     ?___wmul:
   941                           	opt stack 0
   942  00009C                     __tdiv_to_l_@exp1:
   943                           	opt stack 0
   944  00009C                     ___wmul@multiplier:
   945                           	opt stack 0
   946                           
   947                           ; 2 bytes @ 0x3C
   948  00009C                     	ds	2
   949  00009E                     ___lltoft@exp:
   950                           	opt stack 0
   951  00009E                     ___wmul@multiplicand:
   952                           	opt stack 0
   953                           
   954                           ; 2 bytes @ 0x3E
   955  00009E                     	ds	1
   956  00009F                     ___ftdiv@cntr:
   957                           	opt stack 0
   958  00009F                     ___llmod@divisor:
   959                           	opt stack 0
   960                           
   961                           ; 4 bytes @ 0x3F
   962  00009F                     	ds	1
   963  0000A0                     ___wmul@product:
   964                           	opt stack 0
   965  0000A0                     ___ftdiv@f3:
   966                           	opt stack 0
   967                           
   968                           ; 3 bytes @ 0x40
   969  0000A0                     	ds	2
   970  0000A2                     ?___ftmul:
   971                           	opt stack 0
   972  0000A2                     ___ftmul@f1:
   973                           	opt stack 0
   974                           
   975                           ; 3 bytes @ 0x42
   976  0000A2                     	ds	1
   977  0000A3                     ___ftdiv@exp:
   978                           	opt stack 0
   979  0000A3                     ___llmod@counter:
   980                           	opt stack 0
   981                           
   982                           ; 1 bytes @ 0x43
   983  0000A3                     	ds	1
   984  0000A4                     ___ftdiv@sign:
   985                           	opt stack 0
   986                           
   987                           ; 1 bytes @ 0x44
   988  0000A4                     	ds	1
   989  0000A5                     ___ftmul@f2:
   990                           	opt stack 0
   991                           
   992                           ; 3 bytes @ 0x45
   993  0000A5                     	ds	3
   994  0000A8                     ??___ftmul:
   995                           
   996                           ; 1 bytes @ 0x48
   997  0000A8                     	ds	3
   998  0000AB                     ___ftmul@exp:
   999                           	opt stack 0
  1000                           
  1001                           ; 1 bytes @ 0x4B
  1002  0000AB                     	ds	1
  1003  0000AC                     ___ftmul@f3_as_product:
  1004                           	opt stack 0
  1005                           
  1006                           ; 3 bytes @ 0x4C
  1007  0000AC                     	ds	3
  1008  0000AF                     ___ftmul@cntr:
  1009                           	opt stack 0
  1010                           
  1011                           ; 1 bytes @ 0x4F
  1012  0000AF                     	ds	1
  1013  0000B0                     ___ftmul@sign:
  1014                           	opt stack 0
  1015                           
  1016                           ; 1 bytes @ 0x50
  1017  0000B0                     	ds	1
  1018  0000B1                     ?_fround:
  1019                           	opt stack 0
  1020  0000B1                     ?_scale:
  1021                           	opt stack 0
  1022                           
  1023                           ; 3 bytes @ 0x51
  1024  0000B1                     	ds	3
  1025  0000B4                     ??___ftadd:
  1026  0000B4                     
  1027                           ; 1 bytes @ 0x54
  1028  0000B4                     	ds	3
  1029  0000B7                     tblptru	equ	0xFF8
  1030                           tblptrh	equ	0xFF7
  1031                           tblptrl	equ	0xFF6
  1032                           tablat	equ	0xFF5
  1033                           postinc0	equ	0xFEE
  1034                           wreg	equ	0xFE8
  1035                           
  1036                           ; 1 bytes @ 0x57
  1037                           
  1038                           	psect	cstackCOMRAM
  1039  000001                     __pcstackCOMRAM:
  1040                           	opt stack 0
  1041  000001                     ??_SetRange:
  1042  000001                     ??i2_isdigit:
  1043  000001                     ?_TMR0_ReadTimer:
  1044                           	opt stack 0
  1045  000001                     ?i2___awmod:
  1046                           	opt stack 0
  1047  000001                     ?i2___ftpack:
  1048                           	opt stack 0
  1049  000001                     ?i2___ftneg:
  1050                           	opt stack 0
  1051  000001                     ?i2__div_to_l_:
  1052                           	opt stack 0
  1053  000001                     ?i2__tdiv_to_l_:
  1054                           	opt stack 0
  1055  000001                     ?i2___lldiv:
  1056                           	opt stack 0
  1057  000001                     i2EUSART1_Write@txData:
  1058                           	opt stack 0
  1059  000001                     i2___awmod@dividend:
  1060                           	opt stack 0
  1061  000001                     i2__div_to_l_@f1:
  1062                           	opt stack 0
  1063  000001                     i2___ftpack@arg:
  1064                           	opt stack 0
  1065  000001                     i2__tdiv_to_l_@f1:
  1066                           	opt stack 0
  1067  000001                     i2___ftge@ff1:
  1068                           	opt stack 0
  1069  000001                     i2___ftneg@f1:
  1070                           	opt stack 0
  1071  000001                     i2___lldiv@dividend:
  1072                           	opt stack 0
  1073                           
  1074                           ; 4 bytes @ 0x0
  1075  000001                     	ds	1
  1076  000002                     i2putch@txData:
  1077                           	opt stack 0
  1078  000002                     i2_isdigit$1301:
  1079                           	opt stack 0
  1080                           
  1081                           ; 1 bytes @ 0x1
  1082  000002                     	ds	1
  1083  000003                     ??_TMR0_ReadTimer:
  1084  000003                     i2isdigit@c:
  1085                           	opt stack 0
  1086  000003                     i2___awmod@divisor:
  1087                           	opt stack 0
  1088                           
  1089                           ; 2 bytes @ 0x2
  1090  000003                     	ds	1
  1091  000004                     i2___ftpack@exp:
  1092                           	opt stack 0
  1093  000004                     i2__div_to_l_@f2:
  1094                           	opt stack 0
  1095  000004                     i2__tdiv_to_l_@f2:
  1096                           	opt stack 0
  1097  000004                     i2___ftge@ff2:
  1098                           	opt stack 0
  1099                           
  1100                           ; 3 bytes @ 0x3
  1101  000004                     	ds	1
  1102  000005                     i2___awmod@counter:
  1103                           	opt stack 0
  1104  000005                     i2___ftpack@sign:
  1105                           	opt stack 0
  1106  000005                     i2___lldiv@divisor:
  1107                           	opt stack 0
  1108                           
  1109                           ; 4 bytes @ 0x4
  1110  000005                     	ds	1
  1111  000006                     ??i2___ftpack:
  1112  000006                     i2___awmod@sign:
  1113                           	opt stack 0
  1114                           
  1115                           ; 1 bytes @ 0x5
  1116  000006                     	ds	1
  1117  000007                     ??i2__tdiv_to_l_:
  1118  000007                     ??i2___ftge:
  1119  000007                     ?i2___awdiv:
  1120                           	opt stack 0
  1121  000007                     TMR0_ReadTimer@readVal:
  1122                           	opt stack 0
  1123  000007                     i2___awdiv@dividend:
  1124                           	opt stack 0
  1125  000007                     i2__div_to_l_@quot:
  1126                           	opt stack 0
  1127                           
  1128                           ; 4 bytes @ 0x6
  1129  000007                     	ds	2
  1130  000009                     ?___lwtoft:
  1131                           	opt stack 0
  1132  000009                     ?i2___lltoft:
  1133                           	opt stack 0
  1134  000009                     TMR0_ReadTimer@readValLow:
  1135                           	opt stack 0
  1136  000009                     ___lwtoft@c:
  1137                           	opt stack 0
  1138  000009                     i2___awdiv@divisor:
  1139                           	opt stack 0
  1140  000009                     i2___lldiv@quotient:
  1141                           	opt stack 0
  1142  000009                     i2___lltoft@c:
  1143                           	opt stack 0
  1144                           
  1145                           ; 4 bytes @ 0x8
  1146  000009                     	ds	1
  1147  00000A                     TMR0_ReadTimer@readValHigh:
  1148                           	opt stack 0
  1149  00000A                     i2__tdiv_to_l_@quot:
  1150                           	opt stack 0
  1151                           
  1152                           ; 4 bytes @ 0x9
  1153  00000A                     	ds	1
  1154  00000B                     SetRange@new_range:
  1155                           	opt stack 0
  1156  00000B                     i2___awdiv@counter:
  1157                           	opt stack 0
  1158  00000B                     i2__div_to_l_@cntr:
  1159                           	opt stack 0
  1160                           
  1161                           ; 1 bytes @ 0xA
  1162  00000B                     	ds	1
  1163  00000C                     ??_TMR0_DefaultInterruptHandler:
  1164  00000C                     i2___awdiv@sign:
  1165                           	opt stack 0
  1166  00000C                     i2__div_to_l_@exp1:
  1167                           	opt stack 0
  1168                           
  1169                           ; 1 bytes @ 0xB
  1170  00000C                     	ds	1
  1171  00000D                     ??i2___lltoft:
  1172  00000D                     i2___lldiv@counter:
  1173                           	opt stack 0
  1174  00000D                     i2___awdiv@quotient:
  1175                           	opt stack 0
  1176                           
  1177                           ; 2 bytes @ 0xC
  1178  00000D                     	ds	1
  1179  00000E                     ?i2___llmod:
  1180                           	opt stack 0
  1181  00000E                     i2__tdiv_to_l_@cntr:
  1182                           	opt stack 0
  1183  00000E                     i2___llmod@dividend:
  1184                           	opt stack 0
  1185                           
  1186                           ; 4 bytes @ 0xD
  1187  00000E                     	ds	1
  1188  00000F                     ?i2___wmul:
  1189                           	opt stack 0
  1190  00000F                     i2__tdiv_to_l_@exp1:
  1191                           	opt stack 0
  1192  00000F                     i2___wmul@multiplier:
  1193                           	opt stack 0
  1194                           
  1195                           ; 2 bytes @ 0xE
  1196  00000F                     	ds	2
  1197  000011                     i2___lltoft@exp:
  1198                           	opt stack 0
  1199  000011                     i2___wmul@multiplicand:
  1200                           	opt stack 0
  1201                           
  1202                           ; 2 bytes @ 0x10
  1203  000011                     	ds	1
  1204  000012                     i2___llmod@divisor:
  1205                           	opt stack 0
  1206                           
  1207                           ; 4 bytes @ 0x11
  1208  000012                     	ds	1
  1209  000013                     i2___wmul@product:
  1210                           	opt stack 0
  1211                           
  1212                           ; 2 bytes @ 0x12
  1213  000013                     	ds	2
  1214  000015                     ?i2___ftadd:
  1215                           	opt stack 0
  1216  000015                     i2___ftadd@f1:
  1217                           	opt stack 0
  1218                           
  1219                           ; 3 bytes @ 0x14
  1220  000015                     	ds	1
  1221  000016                     i2___llmod@counter:
  1222                           	opt stack 0
  1223                           
  1224                           ; 1 bytes @ 0x15
  1225  000016                     	ds	2
  1226  000018                     i2___ftadd@f2:
  1227                           	opt stack 0
  1228                           
  1229                           ; 3 bytes @ 0x17
  1230  000018                     	ds	3
  1231  00001B                     ??i2___ftadd:
  1232                           
  1233                           ; 1 bytes @ 0x1A
  1234  00001B                     	ds	3
  1235  00001E                     i2___ftadd@sign:
  1236                           	opt stack 0
  1237                           
  1238                           ; 1 bytes @ 0x1D
  1239  00001E                     	ds	1
  1240  00001F                     i2___ftadd@exp2:
  1241                           	opt stack 0
  1242                           
  1243                           ; 1 bytes @ 0x1E
  1244  00001F                     	ds	1
  1245  000020                     i2___ftadd@exp1:
  1246                           	opt stack 0
  1247                           
  1248                           ; 1 bytes @ 0x1F
  1249  000020                     	ds	1
  1250  000021                     ?i2___ftmul:
  1251                           	opt stack 0
  1252  000021                     ?i2___ftsub:
  1253                           	opt stack 0
  1254  000021                     i2___ftmul@f1:
  1255                           	opt stack 0
  1256  000021                     i2___ftsub@f1:
  1257                           	opt stack 0
  1258                           
  1259                           ; 3 bytes @ 0x20
  1260  000021                     	ds	3
  1261  000024                     i2___ftmul@f2:
  1262                           	opt stack 0
  1263  000024                     i2___ftsub@f2:
  1264                           	opt stack 0
  1265                           
  1266                           ; 3 bytes @ 0x23
  1267  000024                     	ds	3
  1268  000027                     ??i2___ftmul:
  1269  000027                     
  1270                           ; 1 bytes @ 0x26
  1271  000027                     	ds	3
  1272  00002A                     i2___ftmul@exp:
  1273                           	opt stack 0
  1274                           
  1275                           ; 1 bytes @ 0x29
  1276  00002A                     	ds	1
  1277  00002B                     i2___ftmul@f3_as_product:
  1278                           	opt stack 0
  1279                           
  1280                           ; 3 bytes @ 0x2A
  1281  00002B                     	ds	3
  1282  00002E                     i2___ftmul@cntr:
  1283                           	opt stack 0
  1284                           
  1285                           ; 1 bytes @ 0x2D
  1286  00002E                     	ds	1
  1287  00002F                     i2___ftmul@sign:
  1288                           	opt stack 0
  1289                           
  1290                           ; 1 bytes @ 0x2E
  1291  00002F                     	ds	1
  1292  000030                     ?i2_fround:
  1293                           	opt stack 0
  1294  000030                     ?i2_scale:
  1295                           	opt stack 0
  1296  000030                     ?i2___ftdiv:
  1297                           	opt stack 0
  1298  000030                     i2___ftdiv@f1:
  1299                           	opt stack 0
  1300                           
  1301                           ; 3 bytes @ 0x2F
  1302  000030                     	ds	3
  1303  000033                     i2___ftdiv@f2:
  1304                           	opt stack 0
  1305  000033                     i2_fround$1951:
  1306                           	opt stack 0
  1307  000033                     i2_scale$1952:
  1308                           	opt stack 0
  1309                           
  1310                           ; 3 bytes @ 0x32
  1311  000033                     	ds	3
  1312  000036                     ??i2___ftdiv:
  1313  000036                     i2scale@scl:
  1314                           	opt stack 0
  1315  000036                     i2_fround$1950:
  1316                           	opt stack 0
  1317                           
  1318                           ; 3 bytes @ 0x35
  1319  000036                     	ds	1
  1320  000037                     ?i2___fttol:
  1321                           	opt stack 0
  1322  000037                     i2___fttol@f1:
  1323                           	opt stack 0
  1324                           
  1325                           ; 3 bytes @ 0x36
  1326  000037                     	ds	2
  1327  000039                     i2fround@prec:
  1328                           	opt stack 0
  1329  000039                     i2___ftdiv@cntr:
  1330                           	opt stack 0
  1331                           
  1332                           ; 1 bytes @ 0x38
  1333  000039                     	ds	1
  1334  00003A                     i2___ftdiv@f3:
  1335                           	opt stack 0
  1336                           
  1337                           ; 3 bytes @ 0x39
  1338  00003A                     	ds	1
  1339  00003B                     ??i2___fttol:
  1340                           
  1341                           ; 1 bytes @ 0x3A
  1342  00003B                     	ds	2
  1343  00003D                     i2___ftdiv@exp:
  1344                           	opt stack 0
  1345                           
  1346                           ; 1 bytes @ 0x3C
  1347  00003D                     	ds	1
  1348  00003E                     i2___ftdiv@sign:
  1349                           	opt stack 0
  1350                           
  1351                           ; 1 bytes @ 0x3D
  1352  00003E                     	ds	2
  1353  000040                     i2___fttol@sign1:
  1354                           	opt stack 0
  1355                           
  1356                           ; 1 bytes @ 0x3F
  1357  000040                     	ds	1
  1358  000041                     i2___fttol@lval:
  1359                           	opt stack 0
  1360                           
  1361                           ; 4 bytes @ 0x40
  1362  000041                     	ds	4
  1363  000045                     i2___fttol@exp1:
  1364                           	opt stack 0
  1365                           
  1366                           ; 1 bytes @ 0x44
  1367  000045                     	ds	1
  1368  000046                     ?i2__doprnt:
  1369                           	opt stack 0
  1370  000046                     i2__doprnt@pb:
  1371                           	opt stack 0
  1372                           
  1373                           ; 2 bytes @ 0x45
  1374  000046                     	ds	2
  1375  000048                     i2__doprnt@f:
  1376                           	opt stack 0
  1377                           
  1378                           ; 2 bytes @ 0x47
  1379  000048                     	ds	2
  1380  00004A                     i2__doprnt@ap:
  1381                           	opt stack 0
  1382                           
  1383                           ; 2 bytes @ 0x49
  1384  00004A                     	ds	2
  1385  00004C                     ??i2__doprnt:
  1386                           
  1387                           ; 1 bytes @ 0x4B
  1388  00004C                     	ds	6
  1389  000052                     printf@ap:
  1390                           	opt stack 0
  1391                           
  1392                           ; 2 bytes @ 0x51
  1393  000052                     	ds	2
  1394  000054                     printf@pb:
  1395                           	opt stack 0
  1396                           
  1397                           ; 4 bytes @ 0x53
  1398  000054                     	ds	4
  1399  000058                     tblptru	equ	0xFF8
  1400                           tblptrh	equ	0xFF7
  1401                           tblptrl	equ	0xFF6
  1402                           tablat	equ	0xFF5
  1403                           postinc0	equ	0xFEE
  1404                           wreg	equ	0xFE8
  1405                           
  1406                           ; 1 bytes @ 0x57
  1407 ;;
  1408 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1409 ;;
  1410 ;; *************** function _main *****************
  1411 ;; Defined at:
  1412 ;;		line 8 in file "main.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;  cap_string     16   70[BANK1 ] unsigned char [16]
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1426 ;;      Params:         0       0       0       0       0       0       0
  1427 ;;      Locals:         0       0      16       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0
  1429 ;;      Totals:         0       0      16       0       0       0       0
  1430 ;;Total ram usage:       16 bytes
  1431 ;; Hardware stack levels required when called:   12
  1432 ;; This function calls:
  1433 ;;		_SYSTEM_Initialize
  1434 ;;		___ftdiv
  1435 ;;		___ftge
  1436 ;;		_lcd_clear
  1437 ;;		_lcd_init
  1438 ;;		_lcd_sendString
  1439 ;;		_sprintf
  1440 ;; This function is called by:
  1441 ;;		Startup code after reset
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           	psect	text0
  1446  004140                     __ptext0:
  1447                           	opt stack 0
  1448  004140                     _main:
  1449                           	opt stack 19
  1450                           
  1451                           ;main.c: 11: SYSTEM_Initialize();
  1452                           
  1453                           ;incstack = 0
  1454  004140  EC2C  F02D         	call	_SYSTEM_Initialize	;wreg free
  1455                           
  1456                           ;main.c: 30: (INTCONbits.GIE = 1);
  1457  004144  8EF2               	bsf	intcon,7,c	;volatile
  1458                           
  1459                           ;main.c: 33: (INTCONbits.PEIE = 1);
  1460  004146  8CF2               	bsf	intcon,6,c	;volatile
  1461                           
  1462                           ;main.c: 41: lcd_init();
  1463  004148  EC03  F02A         	call	_lcd_init	;wreg free
  1464                           
  1465                           ;main.c: 42: lcd_clear();
  1466  00414C  EC61  F02D         	call	_lcd_clear	;wreg free
  1467                           
  1468                           ;main.c: 46: LATC |= (1 << 0) | (1 << 1) | (1 << 2) | (1 << 3) | (1 << 4);
  1469  004150  0E1F               	movlw	31
  1470  004152  128B               	iorwf	3979,f,c	;volatile
  1471                           
  1472                           ;main.c: 47: LATB |= (1 << 2) | (1 << 3) | (1 << 4) | (1 << 5);
  1473  004154  0E3C               	movlw	60
  1474  004156  128A               	iorwf	3978,f,c	;volatile
  1475                           
  1476                           ;main.c: 50: LATC &= ~(1 << 1);
  1477  004158  928B               	bcf	3979,1,c	;volatile
  1478                           
  1479                           ;main.c: 51: LATB &= ~(1 << 3);
  1480  00415A  968A               	bcf	3978,3,c	;volatile
  1481  00415C                     l275:
  1482                           
  1483                           ;main.c: 54: {
  1484                           ;main.c: 56: char cap_string[16];
  1485                           ;main.c: 59: if (result >= 1000000.0)
  1486  00415C  C058  F08E         	movff	_result,___ftge@ff1
  1487  004160  C059  F08F         	movff	_result+1,___ftge@ff1+1
  1488  004164  C05A  F090         	movff	_result+2,___ftge@ff1+2
  1489  004168  0E24               	movlw	36
  1490  00416A  0100               	movlb	0	; () banked
  1491  00416C  6F91               	movwf	___ftge@ff2& (0+255),b
  1492  00416E  0E74               	movlw	116
  1493  004170  0100               	movlb	0	; () banked
  1494  004172  6F92               	movwf	(___ftge@ff2+1)& (0+255),b
  1495  004174  0E49               	movlw	73
  1496  004176  0100               	movlb	0	; () banked
  1497  004178  6F93               	movwf	(___ftge@ff2+2)& (0+255),b
  1498  00417A  ECE4  F026         	call	___ftge	;wreg free
  1499  00417E  0100               	movlb	0	; () banked
  1500  004180  A0D8               	btfss	status,0,c
  1501  004182  D026               	goto	l9907
  1502                           
  1503                           ; BSR set to: 0
  1504                           ;main.c: 60: {
  1505                           ;main.c: 61: sprintf(cap_string, "C=%12.6fuF", result / 1000000.0);
  1506  004184  0E46               	movlw	low main@cap_string
  1507  004186  0101               	movlb	1	; () banked
  1508  004188  6F39               	movwf	sprintf@wh& (0+255),b
  1509  00418A  0E01               	movlw	high main@cap_string
  1510  00418C  0101               	movlb	1	; () banked
  1511  00418E  6F3A               	movwf	(sprintf@wh+1)& (0+255),b
  1512  004190  0EE1               	movlw	low STR_2
  1513  004192  0101               	movlb	1	; () banked
  1514  004194  6F3B               	movwf	sprintf@f& (0+255),b
  1515  004196  0E06               	movlw	high STR_2
  1516  004198  0101               	movlb	1	; () banked
  1517  00419A  6F3C               	movwf	(sprintf@f+1)& (0+255),b
  1518  00419C  C058  F096         	movff	_result,___ftdiv@f1
  1519  0041A0  C059  F097         	movff	_result+1,___ftdiv@f1+1
  1520  0041A4  C05A  F098         	movff	_result+2,___ftdiv@f1+2
  1521  0041A8  0E24               	movlw	36
  1522  0041AA  0100               	movlb	0	; () banked
  1523  0041AC  6F99               	movwf	___ftdiv@f2& (0+255),b
  1524  0041AE  0E74               	movlw	116
  1525  0041B0  0100               	movlb	0	; () banked
  1526  0041B2  6F9A               	movwf	(___ftdiv@f2+1)& (0+255),b
  1527  0041B4  0E49               	movlw	73
  1528  0041B6  0100               	movlb	0	; () banked
  1529  0041B8  6F9B               	movwf	(___ftdiv@f2+2)& (0+255),b
  1530  0041BA  EC02  F022         	call	___ftdiv	;wreg free
  1531  0041BE  C096  F13D         	movff	?___ftdiv,?_sprintf+4
  1532  0041C2  C097  F13E         	movff	?___ftdiv+1,?_sprintf+5
  1533  0041C6  C098  F13F         	movff	?___ftdiv+2,?_sprintf+6
  1534  0041CA  ECD9  F02A         	call	_sprintf	;wreg free
  1535                           
  1536                           ;main.c: 62: }
  1537  0041CE  D062               	goto	l9915
  1538  0041D0                     l9907:
  1539                           
  1540                           ;main.c: 63: else if (result < 1000000 && result >= 1000.0)
  1541  0041D0  C058  F08E         	movff	_result,___ftge@ff1
  1542  0041D4  C059  F08F         	movff	_result+1,___ftge@ff1+1
  1543  0041D8  C05A  F090         	movff	_result+2,___ftge@ff1+2
  1544  0041DC  0E24               	movlw	36
  1545  0041DE  0100               	movlb	0	; () banked
  1546  0041E0  6F91               	movwf	___ftge@ff2& (0+255),b
  1547  0041E2  0E74               	movlw	116
  1548  0041E4  0100               	movlb	0	; () banked
  1549  0041E6  6F92               	movwf	(___ftge@ff2+1)& (0+255),b
  1550  0041E8  0E49               	movlw	73
  1551  0041EA  0100               	movlb	0	; () banked
  1552  0041EC  6F93               	movwf	(___ftge@ff2+2)& (0+255),b
  1553  0041EE  ECE4  F026         	call	___ftge	;wreg free
  1554  0041F2  0100               	movlb	0	; () banked
  1555  0041F4  B0D8               	btfsc	status,0,c
  1556  0041F6  D03A               	goto	l9913
  1557                           
  1558                           ; BSR set to: 0
  1559  0041F8  C058  F08E         	movff	_result,___ftge@ff1
  1560  0041FC  C059  F08F         	movff	_result+1,___ftge@ff1+1
  1561  004200  C05A  F090         	movff	_result+2,___ftge@ff1+2
  1562  004204  0E00               	movlw	0
  1563  004206  0100               	movlb	0	; () banked
  1564  004208  6F91               	movwf	___ftge@ff2& (0+255),b
  1565  00420A  0E7A               	movlw	122
  1566  00420C  0100               	movlb	0	; () banked
  1567  00420E  6F92               	movwf	(___ftge@ff2+1)& (0+255),b
  1568  004210  0E44               	movlw	68
  1569  004212  0100               	movlb	0	; () banked
  1570  004214  6F93               	movwf	(___ftge@ff2+2)& (0+255),b
  1571  004216  ECE4  F026         	call	___ftge	;wreg free
  1572  00421A  0100               	movlb	0	; () banked
  1573  00421C  A0D8               	btfss	status,0,c
  1574  00421E  D026               	goto	l9913
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;main.c: 64: {
  1578                           ;main.c: 65: sprintf(cap_string, "C=%12.3fnF", result / 1000.0);
  1579  004220  0E46               	movlw	low main@cap_string
  1580  004222  0101               	movlb	1	; () banked
  1581  004224  6F39               	movwf	sprintf@wh& (0+255),b
  1582  004226  0E01               	movlw	high main@cap_string
  1583  004228  0101               	movlb	1	; () banked
  1584  00422A  6F3A               	movwf	(sprintf@wh+1)& (0+255),b
  1585  00422C  0ECB               	movlw	low STR_3
  1586  00422E  0101               	movlb	1	; () banked
  1587  004230  6F3B               	movwf	sprintf@f& (0+255),b
  1588  004232  0E06               	movlw	high STR_3
  1589  004234  0101               	movlb	1	; () banked
  1590  004236  6F3C               	movwf	(sprintf@f+1)& (0+255),b
  1591  004238  C058  F096         	movff	_result,___ftdiv@f1
  1592  00423C  C059  F097         	movff	_result+1,___ftdiv@f1+1
  1593  004240  C05A  F098         	movff	_result+2,___ftdiv@f1+2
  1594  004244  0E00               	movlw	0
  1595  004246  0100               	movlb	0	; () banked
  1596  004248  6F99               	movwf	___ftdiv@f2& (0+255),b
  1597  00424A  0E7A               	movlw	122
  1598  00424C  0100               	movlb	0	; () banked
  1599  00424E  6F9A               	movwf	(___ftdiv@f2+1)& (0+255),b
  1600  004250  0E44               	movlw	68
  1601  004252  0100               	movlb	0	; () banked
  1602  004254  6F9B               	movwf	(___ftdiv@f2+2)& (0+255),b
  1603  004256  EC02  F022         	call	___ftdiv	;wreg free
  1604  00425A  C096  F13D         	movff	?___ftdiv,?_sprintf+4
  1605  00425E  C097  F13E         	movff	?___ftdiv+1,?_sprintf+5
  1606  004262  C098  F13F         	movff	?___ftdiv+2,?_sprintf+6
  1607  004266  ECD9  F02A         	call	_sprintf	;wreg free
  1608                           
  1609                           ;main.c: 66: }
  1610  00426A  D014               	goto	l9915
  1611  00426C                     l9913:
  1612                           
  1613                           ;main.c: 67: else
  1614                           ;main.c: 68: {
  1615                           ;main.c: 69: sprintf(cap_string, "C=%12.0fpF", result);
  1616  00426C  0E46               	movlw	low main@cap_string
  1617  00426E  0101               	movlb	1	; () banked
  1618  004270  6F39               	movwf	sprintf@wh& (0+255),b
  1619  004272  0E01               	movlw	high main@cap_string
  1620  004274  0101               	movlb	1	; () banked
  1621  004276  6F3A               	movwf	(sprintf@wh+1)& (0+255),b
  1622  004278  0ED6               	movlw	low STR_4
  1623  00427A  0101               	movlb	1	; () banked
  1624  00427C  6F3B               	movwf	sprintf@f& (0+255),b
  1625  00427E  0E06               	movlw	high STR_4
  1626  004280  0101               	movlb	1	; () banked
  1627  004282  6F3C               	movwf	(sprintf@f+1)& (0+255),b
  1628  004284  C058  F13D         	movff	_result,?_sprintf+4
  1629  004288  C059  F13E         	movff	_result+1,?_sprintf+5
  1630  00428C  C05A  F13F         	movff	_result+2,?_sprintf+6
  1631  004290  ECD9  F02A         	call	_sprintf	;wreg free
  1632  004294                     l9915:
  1633                           
  1634                           ;main.c: 70: }
  1635                           ;main.c: 72: lcd_sendString(cap_string);
  1636  004294  0E46               	movlw	low main@cap_string
  1637  004296  0100               	movlb	0	; () banked
  1638  004298  6F92               	movwf	lcd_sendString@a& (0+255),b
  1639  00429A  0E01               	movlw	high main@cap_string
  1640  00429C  0100               	movlb	0	; () banked
  1641  00429E  6F93               	movwf	(lcd_sendString@a+1)& (0+255),b
  1642  0042A0  EC4E  F02B         	call	_lcd_sendString	;wreg free
  1643  0042A4  D75B               	goto	l275
  1644  0042A6                     __end_of_main:
  1645                           	opt stack 0
  1646                           tblptru	equ	0xFF8
  1647                           tblptrh	equ	0xFF7
  1648                           tblptrl	equ	0xFF6
  1649                           tablat	equ	0xFF5
  1650                           intcon	equ	0xFF2
  1651                           postinc0	equ	0xFEE
  1652                           wreg	equ	0xFE8
  1653                           status	equ	0xFD8
  1654                           
  1655 ;; *************** function _sprintf *****************
  1656 ;; Defined at:
  1657 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprintf.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;  wh              2   57[BANK1 ] PTR unsigned char 
  1660 ;;		 -> ftoa@buf(17), main@cap_string(16), 
  1661 ;;  f               2   59[BANK1 ] PTR const unsigned char 
  1662 ;;		 -> STR_5(11), STR_4(11), STR_3(11), STR_2(11), 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  pb              4   66[BANK1 ] struct __prbuf
  1665 ;;  ap              2   64[BANK1 ] PTR void [1]
  1666 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  2   57[BANK1 ] int 
  1669 ;; Registers used:
  1670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1676 ;;      Params:         0       0       7       0       0       0       0
  1677 ;;      Locals:         0       0       6       0       0       0       0
  1678 ;;      Temps:          0       0       0       0       0       0       0
  1679 ;;      Totals:         0       0      13       0       0       0       0
  1680 ;;Total ram usage:       13 bytes
  1681 ;; Hardware stack levels used:    1
  1682 ;; Hardware stack levels required when called:   11
  1683 ;; This function calls:
  1684 ;;		__doprnt
  1685 ;; This function is called by:
  1686 ;;		_main
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text1
  1691  0055B2                     __ptext1:
  1692                           	opt stack 0
  1693  0055B2                     _sprintf:
  1694                           	opt stack 19
  1695                           
  1696                           ;incstack = 0
  1697  0055B2  C139  F142         	movff	sprintf@wh,sprintf@pb
  1698  0055B6  C13A  F143         	movff	sprintf@wh+1,sprintf@pb+1
  1699  0055BA  0E00               	movlw	0
  1700  0055BC  0101               	movlb	1	; () banked
  1701  0055BE  6F44               	movwf	(sprintf@pb+2)& (0+255),b
  1702  0055C0  0E00               	movlw	0
  1703  0055C2  0101               	movlb	1	; () banked
  1704  0055C4  6F45               	movwf	(sprintf@pb+3)& (0+255),b
  1705  0055C6  0E3D               	movlw	low (?_sprintf+4)
  1706  0055C8  0101               	movlb	1	; () banked
  1707  0055CA  6F40               	movwf	sprintf@ap& (0+255),b
  1708  0055CC  0E01               	movlw	high (?_sprintf+4)
  1709  0055CE  0101               	movlb	1	; () banked
  1710  0055D0  6F41               	movwf	(sprintf@ap+1)& (0+255),b
  1711                           
  1712                           ; BSR set to: 1
  1713  0055D2  0E42               	movlw	low sprintf@pb
  1714  0055D4  0101               	movlb	1	; () banked
  1715  0055D6  6F16               	movwf	__doprnt@pb& (0+255),b
  1716  0055D8  0E01               	movlw	high sprintf@pb
  1717  0055DA  0101               	movlb	1	; () banked
  1718  0055DC  6F17               	movwf	(__doprnt@pb+1)& (0+255),b
  1719  0055DE  C13B  F118         	movff	sprintf@f,__doprnt@f
  1720  0055E2  C13C  F119         	movff	sprintf@f+1,__doprnt@f+1
  1721  0055E6  0E40               	movlw	low sprintf@ap
  1722  0055E8  0101               	movlb	1	; () banked
  1723  0055EA  6F1A               	movwf	__doprnt@ap& (0+255),b
  1724  0055EC  0E01               	movlw	high sprintf@ap
  1725  0055EE  0101               	movlb	1	; () banked
  1726  0055F0  6F1B               	movwf	(__doprnt@ap+1)& (0+255),b
  1727  0055F2  EC77  F003         	call	__doprnt	;wreg free
  1728  0055F6  C142  FFD9         	movff	sprintf@pb,fsr2l
  1729  0055FA  C143  FFDA         	movff	sprintf@pb+1,fsr2h
  1730  0055FE  0E00               	movlw	0
  1731  005600  6EDF               	movwf	indf2,c
  1732  005602  0012               	return	
  1733  005604                     __end_of_sprintf:
  1734                           	opt stack 0
  1735                           tblptru	equ	0xFF8
  1736                           tblptrh	equ	0xFF7
  1737                           tblptrl	equ	0xFF6
  1738                           tablat	equ	0xFF5
  1739                           intcon	equ	0xFF2
  1740                           postinc0	equ	0xFEE
  1741                           wreg	equ	0xFE8
  1742                           indf2	equ	0xFDF
  1743                           fsr2h	equ	0xFDA
  1744                           fsr2l	equ	0xFD9
  1745                           status	equ	0xFD8
  1746                           
  1747 ;; *************** function __doprnt *****************
  1748 ;; Defined at:
  1749 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;  pb              2   22[BANK1 ] PTR struct __prbuf
  1752 ;;		 -> sprintf@pb(4), printf@pb(4), 
  1753 ;;  f               2   24[BANK1 ] PTR const unsigned char 
  1754 ;;		 -> STR_5(11), STR_4(11), STR_3(11), STR_2(11), 
  1755 ;;		 -> STR_1(48), 
  1756 ;;  ap              2   26[BANK1 ] PTR PTR void 
  1757 ;;		 -> sprintf@ap(2), printf@ap(2), 
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  tmpval          4   43[BANK1 ] struct .
  1760 ;;  val             4   39[BANK1 ] unsigned long 
  1761 ;;  fval            3   49[BANK1 ] unsigned long 
  1762 ;;  cp              3    0        PTR const unsigned char 
  1763 ;;  prec            2   54[BANK1 ] int 
  1764 ;;  flag            2   52[BANK1 ] unsigned short 
  1765 ;;  width           2   47[BANK1 ] int 
  1766 ;;  exp             2   37[BANK1 ] int 
  1767 ;;  len             2    0        unsigned int 
  1768 ;;  c               1   56[BANK1 ] char 
  1769 ;;  d               1    0        unsigned char 
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  2   22[BANK1 ] int 
  1772 ;; Registers used:
  1773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1779 ;;      Params:         0       0       6       0       0       0       0
  1780 ;;      Locals:         0       0      23       0       0       0       0
  1781 ;;      Temps:          0       0       6       0       0       0       0
  1782 ;;      Totals:         0       0      35       0       0       0       0
  1783 ;;Total ram usage:       35 bytes
  1784 ;; Hardware stack levels used:    1
  1785 ;; Hardware stack levels required when called:   10
  1786 ;; This function calls:
  1787 ;;		Absolute function
  1788 ;;		___awdiv
  1789 ;;		___ftadd
  1790 ;;		___ftge
  1791 ;;		___ftmul
  1792 ;;		___ftneg
  1793 ;;		___ftsub
  1794 ;;		___fttol
  1795 ;;		___lldiv
  1796 ;;		___llmod
  1797 ;;		___lltoft
  1798 ;;		___wmul
  1799 ;;		__div_to_l_
  1800 ;;		__tdiv_to_l_
  1801 ;;		_fround
  1802 ;;		_isdigit
  1803 ;;		_putch
  1804 ;;		_scale
  1805 ;; This function is called by:
  1806 ;;		_sprintf
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           	psect	text2
  1811  0006EE                     __ptext2:
  1812                           	opt stack 0
  1813  0006EE                     __doprnt:
  1814                           	opt stack 19
  1815                           
  1816                           ;doprnt.c: 499: signed char c;
  1817                           ;doprnt.c: 501: int width;
  1818                           ;doprnt.c: 504: int prec;
  1819                           ;doprnt.c: 508: unsigned short flag;
  1820                           ;doprnt.c: 515: char d;
  1821                           ;doprnt.c: 516: double fval;
  1822                           ;doprnt.c: 517: int exp;
  1823                           ;doprnt.c: 523: union {
  1824                           ;doprnt.c: 524: unsigned long vd;
  1825                           ;doprnt.c: 525: double integ;
  1826                           ;doprnt.c: 526: } tmpval;
  1827                           ;doprnt.c: 528: unsigned long val;
  1828                           ;doprnt.c: 529: unsigned len;
  1829                           ;doprnt.c: 530: const char * cp;
  1830                           ;doprnt.c: 536: while(c = *f++) {
  1831                           
  1832                           ;incstack = 0
  1833  0006EE  EF98  F00C         	goto	l9819
  1834  0006F2                     l9431:
  1835                           
  1836                           ;doprnt.c: 538: if(c != '%')
  1837  0006F2  0E25               	movlw	37
  1838  0006F4  0101               	movlb	1	; () banked
  1839  0006F6  1938               	xorwf	__doprnt@c& (0+255),w,b
  1840  0006F8  B4D8               	btfsc	status,2,c
  1841  0006FA  D038               	goto	l9441
  1842                           
  1843                           ; BSR set to: 1
  1844                           ;doprnt.c: 540: {
  1845                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  1846  0006FC  0101               	movlb	1	; () banked
  1847  0006FE  EE20 F002          	lfsr	2,2
  1848  000702  5116               	movf	__doprnt@pb& (0+255),w,b
  1849  000704  26D9               	addwf	fsr2l,f,c
  1850  000706  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  1851  000708  22DA               	addwfc	fsr2h,f,c
  1852  00070A  50DE               	movf	postinc2,w,c
  1853  00070C  10DE               	iorwf	postinc2,w,c
  1854  00070E  B4D8               	btfsc	status,2,c
  1855  000710  D016               	goto	l9437
  1856                           
  1857                           ; BSR set to: 1
  1858  000712  0101               	movlb	1	; () banked
  1859  000714  EE20 F002          	lfsr	2,2
  1860  000718  5116               	movf	__doprnt@pb& (0+255),w,b
  1861  00071A  26D9               	addwf	fsr2l,f,c
  1862  00071C  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  1863  00071E  22DA               	addwfc	fsr2h,f,c
  1864  000720  D802               	call	u15738
  1865  000722  EF98  F00C         	goto	l9819
  1866  000726                     u15738:
  1867  000726  0005               	push	
  1868  000728  6EFA               	movwf	pclath,c
  1869  00072A  50DE               	movf	postinc2,w,c
  1870  00072C  6EFD               	movwf	tosl,c
  1871  00072E  50DE               	movf	postinc2,w,c
  1872  000730  6EFE               	movwf	tosh,c
  1873  000732  50F8               	movf	tblptru,w,c
  1874  000734  6EFF               	movwf	tosu,c
  1875  000736  50FA               	movf	pclath,w,c
  1876  000738  0101               	movlb	1	; () banked
  1877  00073A  5138               	movf	__doprnt@c& (0+255),w,b
  1878  00073C  0012               	return		;indir
  1879  00073E                     l9437:
  1880  00073E  C116  FFD9         	movff	__doprnt@pb,fsr2l
  1881  000742  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  1882  000746  CFDE F11C          	movff	postinc2,??__doprnt
  1883  00074A  CFDD F11D          	movff	postdec2,??__doprnt+1
  1884  00074E  C11C  FFD9         	movff	??__doprnt,fsr2l
  1885  000752  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  1886  000756  C138  FFDF         	movff	__doprnt@c,indf2
  1887  00075A  C116  FFD9         	movff	__doprnt@pb,fsr2l
  1888  00075E  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  1889  000762  2ADE               	incf	postinc2,f,c
  1890  000764  0E00               	movlw	0
  1891  000766  22DD               	addwfc	postdec2,f,c
  1892                           
  1893                           ;doprnt.c: 542: continue;
  1894  000768  EF98  F00C         	goto	l9819
  1895  00076C                     l9441:
  1896                           
  1897                           ;doprnt.c: 543: }
  1898                           ;doprnt.c: 546: width = 0;
  1899  00076C  0E00               	movlw	0
  1900  00076E  0101               	movlb	1	; () banked
  1901  000770  6F30               	movwf	(__doprnt@width+1)& (0+255),b
  1902  000772  0E00               	movlw	0
  1903  000774  6F2F               	movwf	__doprnt@width& (0+255),b
  1904                           
  1905                           ;doprnt.c: 548: flag = 0;
  1906  000776  0E00               	movlw	0
  1907  000778  0101               	movlb	1	; () banked
  1908  00077A  6F35               	movwf	(__doprnt@flag+1)& (0+255),b
  1909  00077C  0E00               	movlw	0
  1910  00077E  6F34               	movwf	__doprnt@flag& (0+255),b
  1911                           
  1912                           ; BSR set to: 1
  1913                           ;doprnt.c: 551: switch(*f) {
  1914                           
  1915                           ;doprnt.c: 550: for(;;) {
  1916  000780  D005               	goto	l9447
  1917  000782                     l9443:
  1918                           
  1919                           ;doprnt.c: 580: flag |= 0x04;
  1920  000782  0101               	movlb	1	; () banked
  1921  000784  8534               	bsf	__doprnt@flag& (0+255),2,b
  1922                           
  1923                           ;doprnt.c: 581: f++;
  1924  000786  0101               	movlb	1	; () banked
  1925  000788  4B18               	infsnz	__doprnt@f& (0+255),f,b
  1926  00078A  2B19               	incf	(__doprnt@f+1)& (0+255),f,b
  1927  00078C                     l9447:
  1928  00078C  C118  FFF6         	movff	__doprnt@f,tblptrl
  1929  000790  C119  FFF7         	movff	__doprnt@f+1,tblptrh
  1930  000794                     	if	0	;tblptru may be non-zero
  1931  000794                     	endif
  1932  000794                     	if	0	;tblptru may be non-zero
  1933  000794                     	endif
  1934  000794  0008               	tblrd		*
  1935  000796  50F5               	movf	tablat,w,c
  1936                           
  1937                           ; Switch size 1, requested type "space"
  1938                           ; Number of cases is 1, Range of values is 48 to 48
  1939                           ; switch strategies available:
  1940                           ; Name         Instructions Cycles
  1941                           ; simple_byte            4     3 (average)
  1942                           ;	Chosen strategy is simple_byte
  1943  000798  0A30               	xorlw	48	; case 48
  1944  00079A  B4D8               	btfsc	status,2,c
  1945  00079C  D7F2               	goto	l9443
  1946                           
  1947                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1948                           
  1949                           ;doprnt.c: 586: }
  1950                           
  1951                           ;doprnt.c: 585: break;
  1952  00079E  C118  FFF6         	movff	__doprnt@f,tblptrl
  1953  0007A2  C119  FFF7         	movff	__doprnt@f+1,tblptrh
  1954  0007A6                     	if	0	;tblptru may be non-zero
  1955  0007A6                     	endif
  1956  0007A6                     	if	0	;tblptru may be non-zero
  1957  0007A6                     	endif
  1958  0007A6  0008               	tblrd		*
  1959  0007A8  50F5               	movf	tablat,w,c
  1960  0007AA  ECBE  F02C         	call	_isdigit
  1961  0007AE  A0D8               	btfss	status,0,c
  1962  0007B0  D040               	goto	l9461
  1963                           
  1964                           ;doprnt.c: 598: width = 0;
  1965  0007B2  0E00               	movlw	0
  1966  0007B4  0101               	movlb	1	; () banked
  1967  0007B6  6F30               	movwf	(__doprnt@width+1)& (0+255),b
  1968  0007B8  0E00               	movlw	0
  1969  0007BA  6F2F               	movwf	__doprnt@width& (0+255),b
  1970  0007BC                     l9453:
  1971                           
  1972                           ;doprnt.c: 600: width *= 10;
  1973  0007BC  C12F  F09C         	movff	__doprnt@width,___wmul@multiplier
  1974  0007C0  C130  F09D         	movff	__doprnt@width+1,___wmul@multiplier+1
  1975  0007C4  0E00               	movlw	0
  1976  0007C6  0100               	movlb	0	; () banked
  1977  0007C8  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1978  0007CA  0E0A               	movlw	10
  1979  0007CC  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  1980  0007CE  ECF8  F02B         	call	___wmul	;wreg free
  1981  0007D2  C09C  F12F         	movff	?___wmul,__doprnt@width
  1982  0007D6  C09D  F130         	movff	?___wmul+1,__doprnt@width+1
  1983                           
  1984                           ;doprnt.c: 601: width += *f++ - '0';
  1985  0007DA  0ED0               	movlw	208
  1986  0007DC  0101               	movlb	1	; () banked
  1987  0007DE  6F1C               	movwf	??__doprnt& (0+255),b
  1988  0007E0  0EFF               	movlw	255
  1989  0007E2  0101               	movlb	1	; () banked
  1990  0007E4  6F1D               	movwf	(??__doprnt+1)& (0+255),b
  1991  0007E6  C118  FFF6         	movff	__doprnt@f,tblptrl
  1992  0007EA  C119  FFF7         	movff	__doprnt@f+1,tblptrh
  1993  0007EE                     	if	0	;tblptru may be non-zero
  1994  0007EE                     	endif
  1995  0007EE                     	if	0	;tblptru may be non-zero
  1996  0007EE                     	endif
  1997  0007EE  0008               	tblrd		*
  1998  0007F0  50F5               	movf	tablat,w,c
  1999  0007F2  0101               	movlb	1	; () banked
  2000  0007F4  6F1E               	movwf	(??__doprnt+2)& (0+255),b
  2001  0007F6  6B1F               	clrf	(??__doprnt+3)& (0+255),b
  2002  0007F8  0101               	movlb	1	; () banked
  2003  0007FA  511C               	movf	??__doprnt& (0+255),w,b
  2004  0007FC  0101               	movlb	1	; () banked
  2005  0007FE  271E               	addwf	(??__doprnt+2)& (0+255),f,b
  2006  000800  0101               	movlb	1	; () banked
  2007  000802  511D               	movf	(??__doprnt+1)& (0+255),w,b
  2008  000804  0101               	movlb	1	; () banked
  2009  000806  231F               	addwfc	(??__doprnt+3)& (0+255),f,b
  2010  000808  0101               	movlb	1	; () banked
  2011  00080A  511E               	movf	(??__doprnt+2)& (0+255),w,b
  2012  00080C  0101               	movlb	1	; () banked
  2013  00080E  272F               	addwf	__doprnt@width& (0+255),f,b
  2014  000810  0101               	movlb	1	; () banked
  2015  000812  511F               	movf	(??__doprnt+3)& (0+255),w,b
  2016  000814  0101               	movlb	1	; () banked
  2017  000816  2330               	addwfc	(__doprnt@width+1)& (0+255),f,b
  2018                           
  2019                           ; BSR set to: 1
  2020  000818  0101               	movlb	1	; () banked
  2021  00081A  4B18               	infsnz	__doprnt@f& (0+255),f,b
  2022  00081C  2B19               	incf	(__doprnt@f+1)& (0+255),f,b
  2023                           
  2024                           ; BSR set to: 1
  2025                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2026  00081E  C118  FFF6         	movff	__doprnt@f,tblptrl
  2027  000822  C119  FFF7         	movff	__doprnt@f+1,tblptrh
  2028  000826                     	if	0	;tblptru may be non-zero
  2029  000826                     	endif
  2030  000826                     	if	0	;tblptru may be non-zero
  2031  000826                     	endif
  2032  000826  0008               	tblrd		*
  2033  000828  50F5               	movf	tablat,w,c
  2034  00082A  ECBE  F02C         	call	_isdigit
  2035  00082E  B0D8               	btfsc	status,0,c
  2036  000830  D7C5               	goto	l9453
  2037  000832                     l9461:
  2038                           
  2039                           ;doprnt.c: 608: }
  2040                           ;doprnt.c: 611: if(*f == '.') {
  2041  000832  C118  FFF6         	movff	__doprnt@f,tblptrl
  2042  000836  C119  FFF7         	movff	__doprnt@f+1,tblptrh
  2043  00083A                     	if	0	;tblptru may be non-zero
  2044  00083A                     	endif
  2045  00083A                     	if	0	;tblptru may be non-zero
  2046  00083A                     	endif
  2047  00083A  0008               	tblrd		*
  2048  00083C  50F5               	movf	tablat,w,c
  2049  00083E  0A2E               	xorlw	46
  2050  000840  A4D8               	btfss	status,2,c
  2051  000842  D039               	goto	l9473
  2052                           
  2053                           ;doprnt.c: 612: flag |= 0x4000;
  2054  000844  0101               	movlb	1	; () banked
  2055  000846  8D35               	bsf	(__doprnt@flag+1)& (0+255),6,b
  2056                           
  2057                           ;doprnt.c: 613: f++;
  2058  000848  0101               	movlb	1	; () banked
  2059  00084A  4B18               	infsnz	__doprnt@f& (0+255),f,b
  2060  00084C  2B19               	incf	(__doprnt@f+1)& (0+255),f,b
  2061                           
  2062                           ; BSR set to: 1
  2063                           ;doprnt.c: 620: {
  2064                           ;doprnt.c: 621: prec = 0;
  2065  00084E  0E00               	movlw	0
  2066  000850  0101               	movlb	1	; () banked
  2067  000852  6F37               	movwf	(__doprnt@prec+1)& (0+255),b
  2068  000854  0E00               	movlw	0
  2069  000856  6F36               	movwf	__doprnt@prec& (0+255),b
  2070                           
  2071                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  2072  000858  D023               	goto	l9471
  2073  00085A                     l9467:
  2074                           
  2075                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  2076  00085A  C136  F09C         	movff	__doprnt@prec,___wmul@multiplier
  2077  00085E  C137  F09D         	movff	__doprnt@prec+1,___wmul@multiplier+1
  2078  000862  0E00               	movlw	0
  2079  000864  0100               	movlb	0	; () banked
  2080  000866  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2081  000868  0E0A               	movlw	10
  2082  00086A  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  2083  00086C  ECF8  F02B         	call	___wmul	;wreg free
  2084  000870  C118  FFF6         	movff	__doprnt@f,tblptrl
  2085  000874  C119  FFF7         	movff	__doprnt@f+1,tblptrh
  2086  000878                     	if	0	;tblptru may be non-zero
  2087  000878                     	endif
  2088  000878                     	if	0	;tblptru may be non-zero
  2089  000878                     	endif
  2090  000878  0008               	tblrd		*
  2091  00087A  50F5               	movf	tablat,w,c
  2092  00087C  0100               	movlb	0	; () banked
  2093  00087E  279C               	addwf	?___wmul& (0+255),f,b
  2094  000880  0E00               	movlw	0
  2095  000882  0100               	movlb	0	; () banked
  2096  000884  239D               	addwfc	(?___wmul+1)& (0+255),f,b
  2097  000886  0ED0               	movlw	208
  2098  000888  0100               	movlb	0	; () banked
  2099  00088A  259C               	addwf	?___wmul& (0+255),w,b
  2100  00088C  0101               	movlb	1	; () banked
  2101  00088E  6F36               	movwf	__doprnt@prec& (0+255),b
  2102  000890  0EFF               	movlw	255
  2103  000892  0100               	movlb	0	; () banked
  2104  000894  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  2105  000896  0101               	movlb	1	; () banked
  2106  000898  6F37               	movwf	(__doprnt@prec+1)& (0+255),b
  2107                           
  2108                           ; BSR set to: 1
  2109  00089A  0101               	movlb	1	; () banked
  2110  00089C  4B18               	infsnz	__doprnt@f& (0+255),f,b
  2111  00089E  2B19               	incf	(__doprnt@f+1)& (0+255),f,b
  2112  0008A0                     l9471:
  2113                           
  2114                           ; BSR set to: 1
  2115  0008A0  C118  FFF6         	movff	__doprnt@f,tblptrl
  2116  0008A4  C119  FFF7         	movff	__doprnt@f+1,tblptrh
  2117  0008A8                     	if	0	;tblptru may be non-zero
  2118  0008A8                     	endif
  2119  0008A8                     	if	0	;tblptru may be non-zero
  2120  0008A8                     	endif
  2121  0008A8  0008               	tblrd		*
  2122  0008AA  50F5               	movf	tablat,w,c
  2123  0008AC  ECBE  F02C         	call	_isdigit
  2124  0008B0  A0D8               	btfss	status,0,c
  2125  0008B2  D012               	goto	l9485
  2126  0008B4  D7D2               	goto	l9467
  2127  0008B6                     l9473:
  2128                           
  2129                           ;doprnt.c: 626: prec = 0;
  2130  0008B6  0E00               	movlw	0
  2131  0008B8  0101               	movlb	1	; () banked
  2132  0008BA  6F37               	movwf	(__doprnt@prec+1)& (0+255),b
  2133  0008BC  0E00               	movlw	0
  2134  0008BE  6F36               	movwf	__doprnt@prec& (0+255),b
  2135                           
  2136                           ; BSR set to: 1
  2137                           ;doprnt.c: 628: flag |= 0x1000;
  2138  0008C0  0101               	movlb	1	; () banked
  2139  0008C2  8935               	bsf	(__doprnt@flag+1)& (0+255),4,b
  2140                           
  2141                           ; BSR set to: 1
  2142                           ;doprnt.c: 635: switch(c = *f++) {
  2143                           
  2144                           ;doprnt.c: 630: }
  2145                           ;doprnt.c: 633: loop:
  2146                           
  2147                           ; BSR set to: 1
  2148  0008C4  D009               	goto	l9485
  2149  0008C6                     l9477:
  2150                           
  2151                           ; BSR set to: 1
  2152                           ;doprnt.c: 643: flag |= 0x10;
  2153  0008C6  0101               	movlb	1	; () banked
  2154  0008C8  8934               	bsf	__doprnt@flag& (0+255),4,b
  2155                           
  2156                           ;doprnt.c: 644: goto loop;
  2157  0008CA  D006               	goto	l9485
  2158  0008CC                     l9479:
  2159                           
  2160                           ; BSR set to: 1
  2161                           ;doprnt.c: 663: flag |= 0x400;
  2162  0008CC  0101               	movlb	1	; () banked
  2163  0008CE  8535               	bsf	(__doprnt@flag+1)& (0+255),2,b
  2164                           
  2165                           ; BSR set to: 1
  2166                           ;doprnt.c: 698: case 'i':
  2167                           ;doprnt.c: 699: break;
  2168                           
  2169                           ; BSR set to: 1
  2170                           
  2171                           ;doprnt.c: 697: case 'd':
  2172                           
  2173                           ;doprnt.c: 664: break;
  2174  0008D0  D024               	goto	l9487
  2175  0008D2                     l9481:
  2176                           
  2177                           ; BSR set to: 1
  2178                           ;doprnt.c: 818: flag |= 0x40;
  2179  0008D2  0101               	movlb	1	; () banked
  2180  0008D4  8D34               	bsf	__doprnt@flag& (0+255),6,b
  2181                           
  2182                           ; BSR set to: 1
  2183                           ;doprnt.c: 822: }
  2184                           
  2185                           ;doprnt.c: 819: break;
  2186  0008D6  D021               	goto	l9487
  2187  0008D8                     l9485:
  2188  0008D8  C118  FFF6         	movff	__doprnt@f,tblptrl
  2189  0008DC  C119  FFF7         	movff	__doprnt@f+1,tblptrh
  2190  0008E0  0101               	movlb	1	; () banked
  2191  0008E2  4B18               	infsnz	__doprnt@f& (0+255),f,b
  2192  0008E4  2B19               	incf	(__doprnt@f+1)& (0+255),f,b
  2193  0008E6                     	if	0	;tblptru may be non-zero
  2194  0008E6                     	endif
  2195  0008E6                     	if	0	;tblptru may be non-zero
  2196  0008E6                     	endif
  2197  0008E6  0008               	tblrd		*
  2198  0008E8  CFF5 F138          	movff	tablat,__doprnt@c
  2199  0008EC  0101               	movlb	1	; () banked
  2200  0008EE  5138               	movf	__doprnt@c& (0+255),w,b
  2201                           
  2202                           ; Switch size 1, requested type "space"
  2203                           ; Number of cases is 6, Range of values is 0 to 117
  2204                           ; switch strategies available:
  2205                           ; Name         Instructions Cycles
  2206                           ; simple_byte           19    10 (average)
  2207                           ;	Chosen strategy is simple_byte
  2208  0008F0  0A00               	xorlw	0	; case 0
  2209  0008F2  B4D8               	btfsc	status,2,c
  2210  0008F4  EFA7  F00C         	goto	l9821
  2211  0008F8  0A64               	xorlw	100	; case 100
  2212  0008FA  B4D8               	btfsc	status,2,c
  2213  0008FC  D00E               	goto	l9487
  2214  0008FE  0A02               	xorlw	2	; case 102
  2215  000900  B4D8               	btfsc	status,2,c
  2216  000902  D7E4               	goto	l9479
  2217  000904  0A0F               	xorlw	15	; case 105
  2218  000906  B4D8               	btfsc	status,2,c
  2219  000908  D008               	goto	l9487
  2220  00090A  0A05               	xorlw	5	; case 108
  2221  00090C  B4D8               	btfsc	status,2,c
  2222  00090E  D7DB               	goto	l9477
  2223  000910  0A19               	xorlw	25	; case 117
  2224  000912  B4D8               	btfsc	status,2,c
  2225  000914  D7DE               	goto	l9481
  2226  000916  EF98  F00C         	goto	l9819
  2227  00091A                     l9487:
  2228                           
  2229                           ; BSR set to: 1
  2230                           ;doprnt.c: 825: if(flag & (0x700)) {
  2231  00091A  0E07               	movlw	7
  2232  00091C  0101               	movlb	1	; () banked
  2233  00091E  1535               	andwf	(__doprnt@flag+1)& (0+255),w,b
  2234  000920  B4D8               	btfsc	status,2,c
  2235  000922  EFCE  F009         	goto	l419
  2236                           
  2237                           ; BSR set to: 1
  2238                           ;doprnt.c: 827: if(flag & 0x1000)
  2239  000926  0101               	movlb	1	; () banked
  2240  000928  A935               	btfss	(__doprnt@flag+1)& (0+255),4,b
  2241  00092A  D005               	goto	l9493
  2242                           
  2243                           ; BSR set to: 1
  2244                           ;doprnt.c: 829: prec = 6;
  2245  00092C  0E00               	movlw	0
  2246  00092E  0101               	movlb	1	; () banked
  2247  000930  6F37               	movwf	(__doprnt@prec+1)& (0+255),b
  2248  000932  0E06               	movlw	6
  2249  000934  6F36               	movwf	__doprnt@prec& (0+255),b
  2250  000936                     l9493:
  2251                           
  2252                           ; BSR set to: 1
  2253                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2254  000936  C11A  FFD9         	movff	__doprnt@ap,fsr2l
  2255  00093A  C11B  FFDA         	movff	__doprnt@ap+1,fsr2h
  2256  00093E  CFDF F11C          	movff	indf2,??__doprnt
  2257  000942  0E03               	movlw	3
  2258  000944  26DE               	addwf	postinc2,f,c
  2259  000946  CFDF F11D          	movff	indf2,??__doprnt+1
  2260  00094A  0E00               	movlw	0
  2261  00094C  22DD               	addwfc	postdec2,f,c
  2262  00094E  C11C  FFD9         	movff	??__doprnt,fsr2l
  2263  000952  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  2264  000956  CFDE F131          	movff	postinc2,__doprnt@fval
  2265  00095A  CFDE F132          	movff	postinc2,__doprnt@fval+1
  2266  00095E  CFDD F133          	movff	postdec2,__doprnt@fval+2
  2267                           
  2268                           ; BSR set to: 1
  2269                           ;doprnt.c: 831: if(fval < 0.0) {
  2270  000962  0101               	movlb	1	; () banked
  2271  000964  AF33               	btfss	(__doprnt@fval+2)& (0+255),7,b
  2272  000966  D011               	goto	l9501
  2273                           
  2274                           ; BSR set to: 1
  2275                           ;doprnt.c: 832: fval = -fval;
  2276  000968  C131  F08E         	movff	__doprnt@fval,___ftneg@f1
  2277  00096C  C132  F08F         	movff	__doprnt@fval+1,___ftneg@f1+1
  2278  000970  C133  F090         	movff	__doprnt@fval+2,___ftneg@f1+2
  2279  000974  EC49  F02C         	call	___ftneg	;wreg free
  2280  000978  C08E  F131         	movff	?___ftneg,__doprnt@fval
  2281  00097C  C08F  F132         	movff	?___ftneg+1,__doprnt@fval+1
  2282  000980  C090  F133         	movff	?___ftneg+2,__doprnt@fval+2
  2283                           
  2284                           ;doprnt.c: 833: flag |= 0x03;
  2285  000984  0E03               	movlw	3
  2286  000986  0101               	movlb	1	; () banked
  2287  000988  1334               	iorwf	__doprnt@flag& (0+255),f,b
  2288  00098A                     l9501:
  2289                           
  2290                           ; BSR set to: 1
  2291                           ;doprnt.c: 834: }
  2292                           ;doprnt.c: 835: exp = 0;
  2293  00098A  0E00               	movlw	0
  2294  00098C  0101               	movlb	1	; () banked
  2295  00098E  6F26               	movwf	(__doprnt@exp+1)& (0+255),b
  2296  000990  0E00               	movlw	0
  2297  000992  6F25               	movwf	__doprnt@exp& (0+255),b
  2298                           
  2299                           ; BSR set to: 1
  2300                           ;doprnt.c: 836: if( fval!=0) {
  2301  000994  0101               	movlb	1	; () banked
  2302  000996  5131               	movf	__doprnt@fval& (0+255),w,b
  2303  000998  0101               	movlb	1	; () banked
  2304  00099A  1132               	iorwf	(__doprnt@fval+1)& (0+255),w,b
  2305  00099C  0101               	movlb	1	; () banked
  2306  00099E  1133               	iorwf	(__doprnt@fval+2)& (0+255),w,b
  2307  0009A0  B4D8               	btfsc	status,2,c
  2308  0009A2  D09B               	goto	l9529
  2309                           
  2310                           ; BSR set to: 1
  2311                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2312  0009A4  0E82               	movlw	130
  2313  0009A6  0101               	movlb	1	; () banked
  2314  0009A8  6F1C               	movwf	??__doprnt& (0+255),b
  2315  0009AA  0EFF               	movlw	255
  2316  0009AC  0101               	movlb	1	; () banked
  2317  0009AE  6F1D               	movwf	(??__doprnt+1)& (0+255),b
  2318  0009B0  C131  F11E         	movff	__doprnt@fval,??__doprnt+2
  2319  0009B4  C132  F11F         	movff	__doprnt@fval+1,??__doprnt+3
  2320  0009B8  C133  F120         	movff	__doprnt@fval+2,??__doprnt+4
  2321  0009BC  C134  F121         	movff	__doprnt@fval+3,??__doprnt+5
  2322  0009C0  0E10               	movlw	16
  2323  0009C2  D006               	goto	u15820
  2324  0009C4                     u15825:
  2325  0009C4  0101               	movlb	1	; () banked
  2326  0009C6  90D8               	bcf	status,0,c
  2327  0009C8  3321               	rrcf	(??__doprnt+5)& (0+255),f,b
  2328  0009CA  3320               	rrcf	(??__doprnt+4)& (0+255),f,b
  2329  0009CC  331F               	rrcf	(??__doprnt+3)& (0+255),f,b
  2330  0009CE  331E               	rrcf	(??__doprnt+2)& (0+255),f,b
  2331  0009D0                     u15820:
  2332  0009D0  2EE8               	decfsz	wreg,f,c
  2333  0009D2  D7F8               	goto	u15825
  2334  0009D4  0101               	movlb	1	; () banked
  2335  0009D6  511E               	movf	(??__doprnt+2)& (0+255),w,b
  2336  0009D8  0101               	movlb	1	; () banked
  2337  0009DA  251C               	addwf	??__doprnt& (0+255),w,b
  2338  0009DC  0101               	movlb	1	; () banked
  2339  0009DE  6F25               	movwf	__doprnt@exp& (0+255),b
  2340  0009E0  0E00               	movlw	0
  2341  0009E2  0101               	movlb	1	; () banked
  2342  0009E4  211D               	addwfc	(??__doprnt+1)& (0+255),w,b
  2343  0009E6  0101               	movlb	1	; () banked
  2344  0009E8  6F26               	movwf	(__doprnt@exp+1)& (0+255),b
  2345                           
  2346                           ; BSR set to: 1
  2347                           ;doprnt.c: 838: exp--;
  2348  0009EA  0101               	movlb	1	; () banked
  2349  0009EC  0725               	decf	__doprnt@exp& (0+255),f,b
  2350  0009EE  A0D8               	btfss	status,0,c
  2351  0009F0  0726               	decf	(__doprnt@exp+1)& (0+255),f,b
  2352                           
  2353                           ; BSR set to: 1
  2354                           ;doprnt.c: 839: exp *= 3;
  2355  0009F2  C125  F09C         	movff	__doprnt@exp,___wmul@multiplier
  2356  0009F6  C126  F09D         	movff	__doprnt@exp+1,___wmul@multiplier+1
  2357  0009FA  0E00               	movlw	0
  2358  0009FC  0100               	movlb	0	; () banked
  2359  0009FE  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2360  000A00  0E03               	movlw	3
  2361  000A02  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  2362  000A04  ECF8  F02B         	call	___wmul	;wreg free
  2363  000A08  C09C  F125         	movff	?___wmul,__doprnt@exp
  2364  000A0C  C09D  F126         	movff	?___wmul+1,__doprnt@exp+1
  2365                           
  2366                           ;doprnt.c: 840: exp /= 10;
  2367  000A10  C125  F094         	movff	__doprnt@exp,___awdiv@dividend
  2368  000A14  C126  F095         	movff	__doprnt@exp+1,___awdiv@dividend+1
  2369  000A18  0E00               	movlw	0
  2370  000A1A  0100               	movlb	0	; () banked
  2371  000A1C  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  2372  000A1E  0E0A               	movlw	10
  2373  000A20  6F96               	movwf	___awdiv@divisor& (0+255),b
  2374  000A22  EC48  F027         	call	___awdiv	;wreg free
  2375  000A26  C094  F125         	movff	?___awdiv,__doprnt@exp
  2376  000A2A  C095  F126         	movff	?___awdiv+1,__doprnt@exp+1
  2377                           
  2378                           ;doprnt.c: 841: if(exp < 0)
  2379  000A2E  0101               	movlb	1	; () banked
  2380  000A30  AF26               	btfss	(__doprnt@exp+1)& (0+255),7,b
  2381  000A32  D004               	goto	l9517
  2382                           
  2383                           ; BSR set to: 1
  2384                           ;doprnt.c: 842: exp--;
  2385  000A34  0101               	movlb	1	; () banked
  2386  000A36  0725               	decf	__doprnt@exp& (0+255),f,b
  2387  000A38  A0D8               	btfss	status,0,c
  2388  000A3A  0726               	decf	(__doprnt@exp+1)& (0+255),f,b
  2389  000A3C                     l9517:
  2390                           
  2391                           ; BSR set to: 1
  2392                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2393  000A3C  0101               	movlb	1	; () banked
  2394  000A3E  5125               	movf	__doprnt@exp& (0+255),w,b
  2395  000A40  0800               	sublw	0
  2396  000A42  EC69  F015         	call	_scale
  2397  000A46  C0B1  F12B         	movff	?_scale,__doprnt@tmpval
  2398  000A4A  C0B2  F12C         	movff	?_scale+1,__doprnt@tmpval+1
  2399  000A4E  C0B3  F12D         	movff	?_scale+2,__doprnt@tmpval+2
  2400                           
  2401                           ;doprnt.c: 847: tmpval.integ *= fval;
  2402  000A52  C12B  F0A2         	movff	__doprnt@tmpval,___ftmul@f1
  2403  000A56  C12C  F0A3         	movff	__doprnt@tmpval+1,___ftmul@f1+1
  2404  000A5A  C12D  F0A4         	movff	__doprnt@tmpval+2,___ftmul@f1+2
  2405  000A5E  C131  F0A5         	movff	__doprnt@fval,___ftmul@f2
  2406  000A62  C132  F0A6         	movff	__doprnt@fval+1,___ftmul@f2+1
  2407  000A66  C133  F0A7         	movff	__doprnt@fval+2,___ftmul@f2+2
  2408  000A6A  EC53  F021         	call	___ftmul	;wreg free
  2409  000A6E  C0A2  F12B         	movff	?___ftmul,__doprnt@tmpval
  2410  000A72  C0A3  F12C         	movff	?___ftmul+1,__doprnt@tmpval+1
  2411  000A76  C0A4  F12D         	movff	?___ftmul+2,__doprnt@tmpval+2
  2412                           
  2413                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2414  000A7A  C12B  F08E         	movff	__doprnt@tmpval,___ftge@ff1
  2415  000A7E  C12C  F08F         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  2416  000A82  C12D  F090         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  2417  000A86  0E00               	movlw	0
  2418  000A88  0100               	movlb	0	; () banked
  2419  000A8A  6F91               	movwf	___ftge@ff2& (0+255),b
  2420  000A8C  0E80               	movlw	128
  2421  000A8E  0100               	movlb	0	; () banked
  2422  000A90  6F92               	movwf	(___ftge@ff2+1)& (0+255),b
  2423  000A92  0E3F               	movlw	63
  2424  000A94  0100               	movlb	0	; () banked
  2425  000A96  6F93               	movwf	(___ftge@ff2+2)& (0+255),b
  2426  000A98  ECE4  F026         	call	___ftge	;wreg free
  2427  000A9C  0100               	movlb	0	; () banked
  2428  000A9E  B0D8               	btfsc	status,0,c
  2429  000AA0  D005               	goto	l9525
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;doprnt.c: 849: exp--;
  2433  000AA2  0101               	movlb	1	; () banked
  2434  000AA4  0725               	decf	__doprnt@exp& (0+255),f,b
  2435  000AA6  A0D8               	btfss	status,0,c
  2436  000AA8  0726               	decf	(__doprnt@exp+1)& (0+255),f,b
  2437  000AAA  D017               	goto	l9529
  2438  000AAC                     l9525:
  2439                           
  2440                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2441  000AAC  C12B  F08E         	movff	__doprnt@tmpval,___ftge@ff1
  2442  000AB0  C12C  F08F         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  2443  000AB4  C12D  F090         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  2444  000AB8  0E00               	movlw	0
  2445  000ABA  0100               	movlb	0	; () banked
  2446  000ABC  6F91               	movwf	___ftge@ff2& (0+255),b
  2447  000ABE  0E20               	movlw	32
  2448  000AC0  0100               	movlb	0	; () banked
  2449  000AC2  6F92               	movwf	(___ftge@ff2+1)& (0+255),b
  2450  000AC4  0E41               	movlw	65
  2451  000AC6  0100               	movlb	0	; () banked
  2452  000AC8  6F93               	movwf	(___ftge@ff2+2)& (0+255),b
  2453  000ACA  ECE4  F026         	call	___ftge	;wreg free
  2454  000ACE  0100               	movlb	0	; () banked
  2455  000AD0  A0D8               	btfss	status,0,c
  2456  000AD2  D003               	goto	l9529
  2457                           
  2458                           ; BSR set to: 0
  2459                           ;doprnt.c: 851: exp++;
  2460  000AD4  0101               	movlb	1	; () banked
  2461  000AD6  4B25               	infsnz	__doprnt@exp& (0+255),f,b
  2462  000AD8  2B26               	incf	(__doprnt@exp+1)& (0+255),f,b
  2463  000ADA                     l9529:
  2464                           
  2465                           ;doprnt.c: 852: }
  2466                           ;doprnt.c: 1112: if(prec <= 12)
  2467  000ADA  0101               	movlb	1	; () banked
  2468  000ADC  BF37               	btfsc	(__doprnt@prec+1)& (0+255),7,b
  2469  000ADE  D008               	goto	l9531
  2470  000AE0  0101               	movlb	1	; () banked
  2471  000AE2  5137               	movf	(__doprnt@prec+1)& (0+255),w,b
  2472  000AE4  E11D               	bnz	l9533
  2473  000AE6  0E0D               	movlw	13
  2474  000AE8  0101               	movlb	1	; () banked
  2475  000AEA  5D36               	subwf	__doprnt@prec& (0+255),w,b
  2476  000AEC  B0D8               	btfsc	status,0,c
  2477  000AEE  D018               	goto	l9533
  2478  000AF0                     l9531:
  2479                           
  2480                           ; BSR set to: 1
  2481                           ;doprnt.c: 1113: fval += fround(prec);
  2482  000AF0  C131  F107         	movff	__doprnt@fval,___ftadd@f1
  2483  000AF4  C132  F108         	movff	__doprnt@fval+1,___ftadd@f1+1
  2484  000AF8  C133  F109         	movff	__doprnt@fval+2,___ftadd@f1+2
  2485  000AFC  0101               	movlb	1	; () banked
  2486  000AFE  5136               	movf	__doprnt@prec& (0+255),w,b
  2487  000B00  ECB8  F019         	call	_fround
  2488  000B04  C0B1  F10A         	movff	?_fround,___ftadd@f2
  2489  000B08  C0B2  F10B         	movff	?_fround+1,___ftadd@f2+1
  2490  000B0C  C0B3  F10C         	movff	?_fround+2,___ftadd@f2+2
  2491  000B10  EC0E  F01B         	call	___ftadd	;wreg free
  2492  000B14  C107  F131         	movff	?___ftadd,__doprnt@fval
  2493  000B18  C108  F132         	movff	?___ftadd+1,__doprnt@fval+1
  2494  000B1C  C109  F133         	movff	?___ftadd+2,__doprnt@fval+2
  2495  000B20                     l9533:
  2496                           
  2497                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2498  000B20  0101               	movlb	1	; () banked
  2499  000B22  BF26               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  2500  000B24  D008               	goto	l9535
  2501  000B26  0101               	movlb	1	; () banked
  2502  000B28  5126               	movf	(__doprnt@exp+1)& (0+255),w,b
  2503  000B2A  E12A               	bnz	l9541
  2504  000B2C  0E0A               	movlw	10
  2505  000B2E  0101               	movlb	1	; () banked
  2506  000B30  5D25               	subwf	__doprnt@exp& (0+255),w,b
  2507  000B32  B0D8               	btfsc	status,0,c
  2508  000B34  D025               	goto	l9541
  2509  000B36                     l9535:
  2510                           
  2511                           ; BSR set to: 1
  2512  000B36  0101               	movlb	1	; () banked
  2513  000B38  5131               	movf	__doprnt@fval& (0+255),w,b
  2514  000B3A  0101               	movlb	1	; () banked
  2515  000B3C  1132               	iorwf	(__doprnt@fval+1)& (0+255),w,b
  2516  000B3E  0101               	movlb	1	; () banked
  2517  000B40  1133               	iorwf	(__doprnt@fval+2)& (0+255),w,b
  2518  000B42  B4D8               	btfsc	status,2,c
  2519  000B44  D063               	goto	l9555
  2520                           
  2521                           ; BSR set to: 1
  2522  000B46  C131  F104         	movff	__doprnt@fval,___fttol@f1
  2523  000B4A  C132  F105         	movff	__doprnt@fval+1,___fttol@f1+1
  2524  000B4E  C133  F106         	movff	__doprnt@fval+2,___fttol@f1+2
  2525  000B52  ECA8  F022         	call	___fttol	;wreg free
  2526  000B56  0101               	movlb	1	; () banked
  2527  000B58  5104               	movf	?___fttol& (0+255),w,b
  2528  000B5A  0101               	movlb	1	; () banked
  2529  000B5C  1105               	iorwf	(?___fttol+1)& (0+255),w,b
  2530  000B5E  0101               	movlb	1	; () banked
  2531  000B60  1106               	iorwf	(?___fttol+2)& (0+255),w,b
  2532  000B62  0101               	movlb	1	; () banked
  2533  000B64  1107               	iorwf	(?___fttol+3)& (0+255),w,b
  2534  000B66  A4D8               	btfss	status,2,c
  2535  000B68  D051               	goto	l9555
  2536                           
  2537                           ; BSR set to: 1
  2538  000B6A  0101               	movlb	1	; () banked
  2539  000B6C  BF26               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  2540  000B6E  D04E               	goto	l9555
  2541  000B70  0101               	movlb	1	; () banked
  2542  000B72  5126               	movf	(__doprnt@exp+1)& (0+255),w,b
  2543  000B74  E105               	bnz	l9541
  2544  000B76  0E02               	movlw	2
  2545  000B78  0101               	movlb	1	; () banked
  2546  000B7A  5D25               	subwf	__doprnt@exp& (0+255),w,b
  2547  000B7C  A0D8               	btfss	status,0,c
  2548  000B7E  D046               	goto	l9555
  2549  000B80                     l9541:
  2550                           
  2551                           ; BSR set to: 1
  2552                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  2553  000B80  C12B  F08E         	movff	__doprnt@tmpval,___ftge@ff1
  2554  000B84  C12C  F08F         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  2555  000B88  C12D  F090         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  2556  000B8C  0E70               	movlw	112
  2557  000B8E  0100               	movlb	0	; () banked
  2558  000B90  6F91               	movwf	___ftge@ff2& (0+255),b
  2559  000B92  0E89               	movlw	137
  2560  000B94  0100               	movlb	0	; () banked
  2561  000B96  6F92               	movwf	(___ftge@ff2+1)& (0+255),b
  2562  000B98  0E40               	movlw	64
  2563  000B9A  0100               	movlb	0	; () banked
  2564  000B9C  6F93               	movwf	(___ftge@ff2+2)& (0+255),b
  2565  000B9E  ECE4  F026         	call	___ftge	;wreg free
  2566  000BA2  0100               	movlb	0	; () banked
  2567  000BA4  B0D8               	btfsc	status,0,c
  2568  000BA6  D003               	goto	l9545
  2569                           
  2570                           ; BSR set to: 0
  2571                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2572  000BA8  0101               	movlb	1	; () banked
  2573  000BAA  0EF7               	movlw	247
  2574  000BAC  D002               	goto	L1
  2575  000BAE                     l9545:
  2576                           
  2577                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2578  000BAE  0101               	movlb	1	; () banked
  2579  000BB0  0EF8               	movlw	248
  2580  000BB2                     L1:
  2581  000BB2  2725               	addwf	__doprnt@exp& (0+255),f,b
  2582  000BB4  0EFF               	movlw	255
  2583  000BB6  2326               	addwfc	(__doprnt@exp+1)& (0+255),f,b
  2584                           
  2585                           ; BSR set to: 1
  2586                           ;doprnt.c: 1124: }
  2587                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  2588                           
  2589                           ; BSR set to: 1
  2590  000BB8  0101               	movlb	1	; () banked
  2591  000BBA  5125               	movf	__doprnt@exp& (0+255),w,b
  2592  000BBC  EC69  F015         	call	_scale
  2593  000BC0  C0B1  F12B         	movff	?_scale,__doprnt@tmpval
  2594  000BC4  C0B2  F12C         	movff	?_scale+1,__doprnt@tmpval+1
  2595  000BC8  C0B3  F12D         	movff	?_scale+2,__doprnt@tmpval+2
  2596                           
  2597                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2598  000BCC  C131  F08E         	movff	__doprnt@fval,__tdiv_to_l_@f1
  2599  000BD0  C132  F08F         	movff	__doprnt@fval+1,__tdiv_to_l_@f1+1
  2600  000BD4  C133  F090         	movff	__doprnt@fval+2,__tdiv_to_l_@f1+2
  2601  000BD8  C12B  F091         	movff	__doprnt@tmpval,__tdiv_to_l_@f2
  2602  000BDC  C12C  F092         	movff	__doprnt@tmpval+1,__tdiv_to_l_@f2+1
  2603  000BE0  C12D  F093         	movff	__doprnt@tmpval+2,__tdiv_to_l_@f2+2
  2604  000BE4  EC0D  F01F         	call	__tdiv_to_l_	;wreg free
  2605  000BE8  C08E  F127         	movff	?__tdiv_to_l_,__doprnt@val
  2606  000BEC  C08F  F128         	movff	?__tdiv_to_l_+1,__doprnt@val+1
  2607  000BF0  C090  F129         	movff	?__tdiv_to_l_+2,__doprnt@val+2
  2608  000BF4  C091  F12A         	movff	?__tdiv_to_l_+3,__doprnt@val+3
  2609                           
  2610                           ;doprnt.c: 1129: fval = 0.0;
  2611  000BF8  0E00               	movlw	0
  2612  000BFA  0101               	movlb	1	; () banked
  2613  000BFC  6F31               	movwf	__doprnt@fval& (0+255),b
  2614  000BFE  0E00               	movlw	0
  2615  000C00  0101               	movlb	1	; () banked
  2616  000C02  6F32               	movwf	(__doprnt@fval+1)& (0+255),b
  2617  000C04  0E00               	movlw	0
  2618  000C06  0101               	movlb	1	; () banked
  2619  000C08  6F33               	movwf	(__doprnt@fval+2)& (0+255),b
  2620                           
  2621                           ;doprnt.c: 1130: } else {
  2622  000C0A  D033               	goto	l9559
  2623  000C0C                     l9555:
  2624                           
  2625                           ; BSR set to: 1
  2626                           ;doprnt.c: 1131: val = (unsigned long)fval;
  2627  000C0C  C131  F104         	movff	__doprnt@fval,___fttol@f1
  2628  000C10  C132  F105         	movff	__doprnt@fval+1,___fttol@f1+1
  2629  000C14  C133  F106         	movff	__doprnt@fval+2,___fttol@f1+2
  2630  000C18  ECA8  F022         	call	___fttol	;wreg free
  2631  000C1C  C104  F127         	movff	?___fttol,__doprnt@val
  2632  000C20  C105  F128         	movff	?___fttol+1,__doprnt@val+1
  2633  000C24  C106  F129         	movff	?___fttol+2,__doprnt@val+2
  2634  000C28  C107  F12A         	movff	?___fttol+3,__doprnt@val+3
  2635                           
  2636                           ;doprnt.c: 1132: fval -= (double)val;
  2637  000C2C  C131  F110         	movff	__doprnt@fval,___ftsub@f1
  2638  000C30  C132  F111         	movff	__doprnt@fval+1,___ftsub@f1+1
  2639  000C34  C133  F112         	movff	__doprnt@fval+2,___ftsub@f1+2
  2640  000C38  C127  F096         	movff	__doprnt@val,___lltoft@c
  2641  000C3C  C128  F097         	movff	__doprnt@val+1,___lltoft@c+1
  2642  000C40  C129  F098         	movff	__doprnt@val+2,___lltoft@c+2
  2643  000C44  C12A  F099         	movff	__doprnt@val+3,___lltoft@c+3
  2644  000C48  ECC5  F029         	call	___lltoft	;wreg free
  2645  000C4C  C096  F113         	movff	?___lltoft,___ftsub@f2
  2646  000C50  C097  F114         	movff	?___lltoft+1,___ftsub@f2+1
  2647  000C54  C098  F115         	movff	?___lltoft+2,___ftsub@f2+2
  2648  000C58  EC28  F02B         	call	___ftsub	;wreg free
  2649  000C5C  C110  F131         	movff	?___ftsub,__doprnt@fval
  2650  000C60  C111  F132         	movff	?___ftsub+1,__doprnt@fval+1
  2651  000C64  C112  F133         	movff	?___ftsub+2,__doprnt@fval+2
  2652                           
  2653                           ;doprnt.c: 1133: exp = 0;
  2654  000C68  0E00               	movlw	0
  2655  000C6A  0101               	movlb	1	; () banked
  2656  000C6C  6F26               	movwf	(__doprnt@exp+1)& (0+255),b
  2657  000C6E  0E00               	movlw	0
  2658  000C70  6F25               	movwf	__doprnt@exp& (0+255),b
  2659  000C72                     l9559:
  2660                           
  2661                           ; BSR set to: 1
  2662                           ;doprnt.c: 1134: }
  2663                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2664  000C72  0E01               	movlw	1
  2665  000C74  0101               	movlb	1	; () banked
  2666  000C76  6F38               	movwf	__doprnt@c& (0+255),b
  2667  000C78                     l9561:
  2668                           
  2669                           ; BSR set to: 1
  2670  000C78  0E0A               	movlw	10
  2671  000C7A  0101               	movlb	1	; () banked
  2672  000C7C  1938               	xorwf	__doprnt@c& (0+255),w,b
  2673  000C7E  B4D8               	btfsc	status,2,c
  2674  000C80  D01E               	goto	l9573
  2675                           
  2676                           ; BSR set to: 1
  2677                           ;doprnt.c: 1137: if(val < dpowers[c])
  2678                           
  2679                           ; BSR set to: 1
  2680                           
  2681                           ; BSR set to: 1
  2682  000C82  0101               	movlb	1	; () banked
  2683  000C84  5138               	movf	__doprnt@c& (0+255),w,b
  2684  000C86  0D04               	mullw	4
  2685  000C88  0E01               	movlw	low _dpowers
  2686  000C8A  24F3               	addwf	prodl,w,c
  2687  000C8C  6EF6               	movwf	tblptrl,c
  2688  000C8E  0E06               	movlw	high _dpowers
  2689  000C90  20F4               	addwfc	prodh,w,c
  2690  000C92  6EF7               	movwf	tblptrh,c
  2691  000C94                     	if	0	;There are less than 3 active tblptr bytes
  2692  000C94                     	endif
  2693  000C94  0009               	tblrd		*+
  2694  000C96  50F5               	movf	tablat,w,c
  2695  000C98  0101               	movlb	1	; () banked
  2696  000C9A  5D27               	subwf	__doprnt@val& (0+255),w,b
  2697  000C9C  0009               	tblrd		*+
  2698  000C9E  50F5               	movf	tablat,w,c
  2699  000CA0  0101               	movlb	1	; () banked
  2700  000CA2  5928               	subwfb	(__doprnt@val+1)& (0+255),w,b
  2701  000CA4  0009               	tblrd		*+
  2702  000CA6  50F5               	movf	tablat,w,c
  2703  000CA8  0101               	movlb	1	; () banked
  2704  000CAA  5929               	subwfb	(__doprnt@val+2)& (0+255),w,b
  2705  000CAC  0009               	tblrd		*+
  2706  000CAE  50F5               	movf	tablat,w,c
  2707  000CB0  0101               	movlb	1	; () banked
  2708  000CB2  592A               	subwfb	(__doprnt@val+3)& (0+255),w,b
  2709  000CB4  A0D8               	btfss	status,0,c
  2710  000CB6  D003               	goto	l9573
  2711                           
  2712                           ; BSR set to: 1
  2713                           
  2714                           ; BSR set to: 1
  2715                           
  2716                           ; BSR set to: 1
  2717                           ;doprnt.c: 1138: break;
  2718  000CB8  0101               	movlb	1	; () banked
  2719  000CBA  2B38               	incf	__doprnt@c& (0+255),f,b
  2720  000CBC  D7DD               	goto	l9561
  2721  000CBE                     l9573:
  2722                           
  2723                           ; BSR set to: 1
  2724                           ;doprnt.c: 1142: width -= prec + c + exp;
  2725  000CBE  C138  F11C         	movff	__doprnt@c,??__doprnt
  2726  000CC2  0101               	movlb	1	; () banked
  2727  000CC4  6B1D               	clrf	(??__doprnt+1)& (0+255),b
  2728  000CC6  BF1C               	btfsc	??__doprnt& (0+255),7,b
  2729  000CC8  071D               	decf	(??__doprnt+1)& (0+255),f,b
  2730  000CCA  0101               	movlb	1	; () banked
  2731  000CCC  5136               	movf	__doprnt@prec& (0+255),w,b
  2732  000CCE  0101               	movlb	1	; () banked
  2733  000CD0  271C               	addwf	??__doprnt& (0+255),f,b
  2734  000CD2  0101               	movlb	1	; () banked
  2735  000CD4  5137               	movf	(__doprnt@prec+1)& (0+255),w,b
  2736  000CD6  0101               	movlb	1	; () banked
  2737  000CD8  231D               	addwfc	(??__doprnt+1)& (0+255),f,b
  2738  000CDA  0101               	movlb	1	; () banked
  2739  000CDC  5125               	movf	__doprnt@exp& (0+255),w,b
  2740  000CDE  0101               	movlb	1	; () banked
  2741  000CE0  271C               	addwf	??__doprnt& (0+255),f,b
  2742  000CE2  0101               	movlb	1	; () banked
  2743  000CE4  5126               	movf	(__doprnt@exp+1)& (0+255),w,b
  2744  000CE6  0101               	movlb	1	; () banked
  2745  000CE8  231D               	addwfc	(??__doprnt+1)& (0+255),f,b
  2746  000CEA  0101               	movlb	1	; () banked
  2747  000CEC  511C               	movf	??__doprnt& (0+255),w,b
  2748  000CEE  0101               	movlb	1	; () banked
  2749  000CF0  5F2F               	subwf	__doprnt@width& (0+255),f,b
  2750  000CF2  0101               	movlb	1	; () banked
  2751  000CF4  511D               	movf	(??__doprnt+1)& (0+255),w,b
  2752  000CF6  0101               	movlb	1	; () banked
  2753  000CF8  5B30               	subwfb	(__doprnt@width+1)& (0+255),f,b
  2754                           
  2755                           ;doprnt.c: 1143: if(
  2756                           ;doprnt.c: 1147: prec)
  2757  000CFA  0101               	movlb	1	; () banked
  2758  000CFC  5136               	movf	__doprnt@prec& (0+255),w,b
  2759  000CFE  0101               	movlb	1	; () banked
  2760  000D00  1137               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  2761  000D02  B4D8               	btfsc	status,2,c
  2762  000D04  D004               	goto	l9577
  2763                           
  2764                           ; BSR set to: 1
  2765                           ;doprnt.c: 1148: width--;
  2766  000D06  0101               	movlb	1	; () banked
  2767  000D08  072F               	decf	__doprnt@width& (0+255),f,b
  2768  000D0A  A0D8               	btfss	status,0,c
  2769  000D0C  0730               	decf	(__doprnt@width+1)& (0+255),f,b
  2770  000D0E                     l9577:
  2771                           
  2772                           ; BSR set to: 1
  2773                           ;doprnt.c: 1149: if(flag & 0x03)
  2774  000D0E  0E03               	movlw	3
  2775  000D10  0101               	movlb	1	; () banked
  2776  000D12  1534               	andwf	__doprnt@flag& (0+255),w,b
  2777  000D14  0101               	movlb	1	; () banked
  2778  000D16  6F1C               	movwf	??__doprnt& (0+255),b
  2779  000D18  0E00               	movlw	0
  2780  000D1A  0101               	movlb	1	; () banked
  2781  000D1C  1535               	andwf	(__doprnt@flag+1)& (0+255),w,b
  2782  000D1E  0101               	movlb	1	; () banked
  2783  000D20  6F1D               	movwf	(??__doprnt+1)& (0+255),b
  2784  000D22  0101               	movlb	1	; () banked
  2785  000D24  511C               	movf	??__doprnt& (0+255),w,b
  2786  000D26  0101               	movlb	1	; () banked
  2787  000D28  111D               	iorwf	(??__doprnt+1)& (0+255),w,b
  2788  000D2A  B4D8               	btfsc	status,2,c
  2789  000D2C  D004               	goto	l9581
  2790                           
  2791                           ; BSR set to: 1
  2792                           ;doprnt.c: 1150: width--;
  2793  000D2E  0101               	movlb	1	; () banked
  2794  000D30  072F               	decf	__doprnt@width& (0+255),f,b
  2795  000D32  A0D8               	btfss	status,0,c
  2796  000D34  0730               	decf	(__doprnt@width+1)& (0+255),f,b
  2797  000D36                     l9581:
  2798                           
  2799                           ; BSR set to: 1
  2800                           ;doprnt.c: 1153: if(flag & 0x04) {
  2801  000D36  0101               	movlb	1	; () banked
  2802  000D38  A534               	btfss	__doprnt@flag& (0+255),2,b
  2803  000D3A  D0C0               	goto	l9615
  2804                           
  2805                           ; BSR set to: 1
  2806                           ;doprnt.c: 1157: if(flag & 0x03)
  2807  000D3C  0E03               	movlw	3
  2808  000D3E  0101               	movlb	1	; () banked
  2809  000D40  1534               	andwf	__doprnt@flag& (0+255),w,b
  2810  000D42  0101               	movlb	1	; () banked
  2811  000D44  6F1C               	movwf	??__doprnt& (0+255),b
  2812  000D46  0E00               	movlw	0
  2813  000D48  0101               	movlb	1	; () banked
  2814  000D4A  1535               	andwf	(__doprnt@flag+1)& (0+255),w,b
  2815  000D4C  0101               	movlb	1	; () banked
  2816  000D4E  6F1D               	movwf	(??__doprnt+1)& (0+255),b
  2817  000D50  0101               	movlb	1	; () banked
  2818  000D52  511C               	movf	??__doprnt& (0+255),w,b
  2819  000D54  0101               	movlb	1	; () banked
  2820  000D56  111D               	iorwf	(??__doprnt+1)& (0+255),w,b
  2821  000D58  B4D8               	btfsc	status,2,c
  2822  000D5A  D06D               	goto	l9603
  2823                           
  2824                           ; BSR set to: 1
  2825                           ;doprnt.c: 1159: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  2826  000D5C  0101               	movlb	1	; () banked
  2827  000D5E  EE20 F002          	lfsr	2,2
  2828  000D62  5116               	movf	__doprnt@pb& (0+255),w,b
  2829  000D64  26D9               	addwf	fsr2l,f,c
  2830  000D66  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  2831  000D68  22DA               	addwfc	fsr2h,f,c
  2832  000D6A  50DE               	movf	postinc2,w,c
  2833  000D6C  10DE               	iorwf	postinc2,w,c
  2834  000D6E  B4D8               	btfsc	status,2,c
  2835  000D70  D014               	goto	l9589
  2836                           
  2837                           ; BSR set to: 1
  2838  000D72  0101               	movlb	1	; () banked
  2839  000D74  EE20 F002          	lfsr	2,2
  2840  000D78  5116               	movf	__doprnt@pb& (0+255),w,b
  2841  000D7A  26D9               	addwf	fsr2l,f,c
  2842  000D7C  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  2843  000D7E  22DA               	addwfc	fsr2h,f,c
  2844  000D80  D801               	call	u16008
  2845  000D82  D059               	goto	l9603
  2846  000D84                     u16008:
  2847  000D84  0005               	push	
  2848  000D86  6EFA               	movwf	pclath,c
  2849  000D88  50DE               	movf	postinc2,w,c
  2850  000D8A  6EFD               	movwf	tosl,c
  2851  000D8C  50DE               	movf	postinc2,w,c
  2852  000D8E  6EFE               	movwf	tosh,c
  2853  000D90  50F8               	movf	tblptru,w,c
  2854  000D92  6EFF               	movwf	tosu,c
  2855  000D94  50FA               	movf	pclath,w,c
  2856  000D96  0E2D               	movlw	45
  2857  000D98  0012               	return		;indir
  2858  000D9A                     l9589:
  2859  000D9A  C116  FFD9         	movff	__doprnt@pb,fsr2l
  2860  000D9E  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  2861  000DA2  CFDE F11C          	movff	postinc2,??__doprnt
  2862  000DA6  CFDD F11D          	movff	postdec2,??__doprnt+1
  2863  000DAA  C11C  FFD9         	movff	??__doprnt,fsr2l
  2864  000DAE  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  2865  000DB2  0E2D               	movlw	45
  2866  000DB4  6EDF               	movwf	indf2,c
  2867  000DB6  C116  FFD9         	movff	__doprnt@pb,fsr2l
  2868  000DBA  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  2869  000DBE  2ADE               	incf	postinc2,f,c
  2870  000DC0  0E00               	movlw	0
  2871  000DC2  22DD               	addwfc	postdec2,f,c
  2872                           
  2873                           ;doprnt.c: 1168: while(width > 0) {
  2874  000DC4  D038               	goto	l9603
  2875  000DC6                     l9593:
  2876                           
  2877                           ;doprnt.c: 1169: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  2878  000DC6  0101               	movlb	1	; () banked
  2879  000DC8  EE20 F002          	lfsr	2,2
  2880  000DCC  5116               	movf	__doprnt@pb& (0+255),w,b
  2881  000DCE  26D9               	addwf	fsr2l,f,c
  2882  000DD0  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  2883  000DD2  22DA               	addwfc	fsr2h,f,c
  2884  000DD4  50DE               	movf	postinc2,w,c
  2885  000DD6  10DE               	iorwf	postinc2,w,c
  2886  000DD8  B4D8               	btfsc	status,2,c
  2887  000DDA  D014               	goto	l9597
  2888                           
  2889                           ; BSR set to: 1
  2890  000DDC  0101               	movlb	1	; () banked
  2891  000DDE  EE20 F002          	lfsr	2,2
  2892  000DE2  5116               	movf	__doprnt@pb& (0+255),w,b
  2893  000DE4  26D9               	addwf	fsr2l,f,c
  2894  000DE6  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  2895  000DE8  22DA               	addwfc	fsr2h,f,c
  2896  000DEA  D801               	call	u16028
  2897  000DEC  D020               	goto	l9601
  2898  000DEE                     u16028:
  2899  000DEE  0005               	push	
  2900  000DF0  6EFA               	movwf	pclath,c
  2901  000DF2  50DE               	movf	postinc2,w,c
  2902  000DF4  6EFD               	movwf	tosl,c
  2903  000DF6  50DE               	movf	postinc2,w,c
  2904  000DF8  6EFE               	movwf	tosh,c
  2905  000DFA  50F8               	movf	tblptru,w,c
  2906  000DFC  6EFF               	movwf	tosu,c
  2907  000DFE  50FA               	movf	pclath,w,c
  2908  000E00  0E30               	movlw	48
  2909  000E02  0012               	return		;indir
  2910  000E04                     l9597:
  2911  000E04  C116  FFD9         	movff	__doprnt@pb,fsr2l
  2912  000E08  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  2913  000E0C  CFDE F11C          	movff	postinc2,??__doprnt
  2914  000E10  CFDD F11D          	movff	postdec2,??__doprnt+1
  2915  000E14  C11C  FFD9         	movff	??__doprnt,fsr2l
  2916  000E18  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  2917  000E1C  0E30               	movlw	48
  2918  000E1E  6EDF               	movwf	indf2,c
  2919  000E20  C116  FFD9         	movff	__doprnt@pb,fsr2l
  2920  000E24  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  2921  000E28  2ADE               	incf	postinc2,f,c
  2922  000E2A  0E00               	movlw	0
  2923  000E2C  22DD               	addwfc	postdec2,f,c
  2924  000E2E                     l9601:
  2925                           
  2926                           ;doprnt.c: 1170: width--;
  2927  000E2E  0101               	movlb	1	; () banked
  2928  000E30  072F               	decf	__doprnt@width& (0+255),f,b
  2929  000E32  A0D8               	btfss	status,0,c
  2930  000E34  0730               	decf	(__doprnt@width+1)& (0+255),f,b
  2931  000E36                     l9603:
  2932  000E36  0101               	movlb	1	; () banked
  2933  000E38  BF30               	btfsc	(__doprnt@width+1)& (0+255),7,b
  2934  000E3A  D103               	goto	l9637
  2935  000E3C  0101               	movlb	1	; () banked
  2936  000E3E  5130               	movf	(__doprnt@width+1)& (0+255),w,b
  2937  000E40  E1C2               	bnz	l9593
  2938  000E42  0101               	movlb	1	; () banked
  2939  000E44  052F               	decf	__doprnt@width& (0+255),w,b
  2940  000E46  A0D8               	btfss	status,0,c
  2941  000E48  D0FC               	goto	l9637
  2942  000E4A  D7BD               	goto	l9593
  2943  000E4C                     l9605:
  2944                           
  2945                           ; BSR set to: 1
  2946                           ;doprnt.c: 1181: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  2947  000E4C  0101               	movlb	1	; () banked
  2948  000E4E  EE20 F002          	lfsr	2,2
  2949  000E52  5116               	movf	__doprnt@pb& (0+255),w,b
  2950  000E54  26D9               	addwf	fsr2l,f,c
  2951  000E56  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  2952  000E58  22DA               	addwfc	fsr2h,f,c
  2953  000E5A  50DE               	movf	postinc2,w,c
  2954  000E5C  10DE               	iorwf	postinc2,w,c
  2955  000E5E  B4D8               	btfsc	status,2,c
  2956  000E60  D014               	goto	l9609
  2957                           
  2958                           ; BSR set to: 1
  2959  000E62  0101               	movlb	1	; () banked
  2960  000E64  EE20 F002          	lfsr	2,2
  2961  000E68  5116               	movf	__doprnt@pb& (0+255),w,b
  2962  000E6A  26D9               	addwf	fsr2l,f,c
  2963  000E6C  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  2964  000E6E  22DA               	addwfc	fsr2h,f,c
  2965  000E70  D801               	call	u16058
  2966  000E72  D020               	goto	l9613
  2967  000E74                     u16058:
  2968  000E74  0005               	push	
  2969  000E76  6EFA               	movwf	pclath,c
  2970  000E78  50DE               	movf	postinc2,w,c
  2971  000E7A  6EFD               	movwf	tosl,c
  2972  000E7C  50DE               	movf	postinc2,w,c
  2973  000E7E  6EFE               	movwf	tosh,c
  2974  000E80  50F8               	movf	tblptru,w,c
  2975  000E82  6EFF               	movwf	tosu,c
  2976  000E84  50FA               	movf	pclath,w,c
  2977  000E86  0E20               	movlw	32
  2978  000E88  0012               	return		;indir
  2979  000E8A                     l9609:
  2980  000E8A  C116  FFD9         	movff	__doprnt@pb,fsr2l
  2981  000E8E  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  2982  000E92  CFDE F11C          	movff	postinc2,??__doprnt
  2983  000E96  CFDD F11D          	movff	postdec2,??__doprnt+1
  2984  000E9A  C11C  FFD9         	movff	??__doprnt,fsr2l
  2985  000E9E  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  2986  000EA2  0E20               	movlw	32
  2987  000EA4  6EDF               	movwf	indf2,c
  2988  000EA6  C116  FFD9         	movff	__doprnt@pb,fsr2l
  2989  000EAA  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  2990  000EAE  2ADE               	incf	postinc2,f,c
  2991  000EB0  0E00               	movlw	0
  2992  000EB2  22DD               	addwfc	postdec2,f,c
  2993  000EB4                     l9613:
  2994                           
  2995                           ;doprnt.c: 1182: width--;
  2996  000EB4  0101               	movlb	1	; () banked
  2997  000EB6  072F               	decf	__doprnt@width& (0+255),f,b
  2998  000EB8  A0D8               	btfss	status,0,c
  2999  000EBA  0730               	decf	(__doprnt@width+1)& (0+255),f,b
  3000  000EBC                     l9615:
  3001                           
  3002                           ; BSR set to: 1
  3003  000EBC  0101               	movlb	1	; () banked
  3004  000EBE  BF30               	btfsc	(__doprnt@width+1)& (0+255),7,b
  3005  000EC0  D007               	goto	l9617
  3006  000EC2  0101               	movlb	1	; () banked
  3007  000EC4  5130               	movf	(__doprnt@width+1)& (0+255),w,b
  3008  000EC6  E1C2               	bnz	l9605
  3009  000EC8  0101               	movlb	1	; () banked
  3010  000ECA  052F               	decf	__doprnt@width& (0+255),w,b
  3011  000ECC  B0D8               	btfsc	status,0,c
  3012  000ECE  D7BE               	goto	l9605
  3013  000ED0                     l9617:
  3014                           
  3015                           ; BSR set to: 1
  3016                           ;doprnt.c: 1183: }
  3017                           ;doprnt.c: 1188: if(flag & 0x03)
  3018  000ED0  0E03               	movlw	3
  3019  000ED2  0101               	movlb	1	; () banked
  3020  000ED4  1534               	andwf	__doprnt@flag& (0+255),w,b
  3021  000ED6  0101               	movlb	1	; () banked
  3022  000ED8  6F1C               	movwf	??__doprnt& (0+255),b
  3023  000EDA  0E00               	movlw	0
  3024  000EDC  0101               	movlb	1	; () banked
  3025  000EDE  1535               	andwf	(__doprnt@flag+1)& (0+255),w,b
  3026  000EE0  0101               	movlb	1	; () banked
  3027  000EE2  6F1D               	movwf	(??__doprnt+1)& (0+255),b
  3028  000EE4  0101               	movlb	1	; () banked
  3029  000EE6  511C               	movf	??__doprnt& (0+255),w,b
  3030  000EE8  0101               	movlb	1	; () banked
  3031  000EEA  111D               	iorwf	(??__doprnt+1)& (0+255),w,b
  3032  000EEC  B4D8               	btfsc	status,2,c
  3033  000EEE  D0A9               	goto	l9637
  3034                           
  3035                           ; BSR set to: 1
  3036                           ;doprnt.c: 1190: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  3037  000EF0  0101               	movlb	1	; () banked
  3038  000EF2  EE20 F002          	lfsr	2,2
  3039  000EF6  5116               	movf	__doprnt@pb& (0+255),w,b
  3040  000EF8  26D9               	addwf	fsr2l,f,c
  3041  000EFA  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  3042  000EFC  22DA               	addwfc	fsr2h,f,c
  3043  000EFE  50DE               	movf	postinc2,w,c
  3044  000F00  10DE               	iorwf	postinc2,w,c
  3045  000F02  B4D8               	btfsc	status,2,c
  3046  000F04  D014               	goto	l9623
  3047                           
  3048                           ; BSR set to: 1
  3049  000F06  0101               	movlb	1	; () banked
  3050  000F08  EE20 F002          	lfsr	2,2
  3051  000F0C  5116               	movf	__doprnt@pb& (0+255),w,b
  3052  000F0E  26D9               	addwf	fsr2l,f,c
  3053  000F10  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  3054  000F12  22DA               	addwfc	fsr2h,f,c
  3055  000F14  D801               	call	u16098
  3056  000F16  D095               	goto	l9637
  3057  000F18                     u16098:
  3058  000F18  0005               	push	
  3059  000F1A  6EFA               	movwf	pclath,c
  3060  000F1C  50DE               	movf	postinc2,w,c
  3061  000F1E  6EFD               	movwf	tosl,c
  3062  000F20  50DE               	movf	postinc2,w,c
  3063  000F22  6EFE               	movwf	tosh,c
  3064  000F24  50F8               	movf	tblptru,w,c
  3065  000F26  6EFF               	movwf	tosu,c
  3066  000F28  50FA               	movf	pclath,w,c
  3067  000F2A  0E2D               	movlw	45
  3068  000F2C  0012               	return		;indir
  3069  000F2E                     l9623:
  3070  000F2E  C116  FFD9         	movff	__doprnt@pb,fsr2l
  3071  000F32  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  3072  000F36  CFDE F11C          	movff	postinc2,??__doprnt
  3073  000F3A  CFDD F11D          	movff	postdec2,??__doprnt+1
  3074  000F3E  C11C  FFD9         	movff	??__doprnt,fsr2l
  3075  000F42  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  3076  000F46  0E2D               	movlw	45
  3077  000F48  D07A               	goto	L2
  3078  000F4A                     l9625:
  3079  000F4A  C116  FFD9         	movff	__doprnt@pb,fsr2l
  3080  000F4E  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  3081  000F52  2ADE               	incf	postinc2,f,c
  3082  000F54  0E00               	movlw	0
  3083  000F56  22DD               	addwfc	postdec2,f,c
  3084                           
  3085                           ;doprnt.c: 1195: }
  3086                           ;doprnt.c: 1196: while(c--) {
  3087  000F58  D074               	goto	l9637
  3088  000F5A                     l9627:
  3089                           
  3090                           ;doprnt.c: 1200: {
  3091                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3092  000F5A  C127  F08E         	movff	__doprnt@val,___lldiv@dividend
  3093  000F5E  C128  F08F         	movff	__doprnt@val+1,___lldiv@dividend+1
  3094  000F62  C129  F090         	movff	__doprnt@val+2,___lldiv@dividend+2
  3095  000F66  C12A  F091         	movff	__doprnt@val+3,___lldiv@dividend+3
  3096  000F6A  0101               	movlb	1	; () banked
  3097  000F6C  5138               	movf	__doprnt@c& (0+255),w,b
  3098  000F6E  0D04               	mullw	4
  3099  000F70  0E01               	movlw	low _dpowers
  3100  000F72  24F3               	addwf	prodl,w,c
  3101  000F74  6EF6               	movwf	tblptrl,c
  3102  000F76  0E06               	movlw	high _dpowers
  3103  000F78  20F4               	addwfc	prodh,w,c
  3104  000F7A  6EF7               	movwf	tblptrh,c
  3105  000F7C                     	if	0	;There are less than 3 active tblptr bytes
  3106  000F7C                     	endif
  3107  000F7C  0009               	tblrd		*+
  3108  000F7E  CFF5 F092          	movff	tablat,___lldiv@divisor
  3109  000F82  0009               	tblrd		*+
  3110  000F84  CFF5 F093          	movff	tablat,___lldiv@divisor+1
  3111  000F88  0009               	tblrd		*+
  3112  000F8A  CFF5 F094          	movff	tablat,___lldiv@divisor+2
  3113  000F8E  000A               	tblrd		*-
  3114  000F90  CFF5 F095          	movff	tablat,___lldiv@divisor+3
  3115  000F94  ECA7  F027         	call	___lldiv
  3116  000F98  C08E  F12B         	movff	?___lldiv,__doprnt@tmpval
  3117  000F9C  C08F  F12C         	movff	?___lldiv+1,__doprnt@tmpval+1
  3118  000FA0  C090  F12D         	movff	?___lldiv+2,__doprnt@tmpval+2
  3119  000FA4  C091  F12E         	movff	?___lldiv+3,__doprnt@tmpval+3
  3120                           
  3121                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3122  000FA8  C12B  F09B         	movff	__doprnt@tmpval,___llmod@dividend
  3123  000FAC  C12C  F09C         	movff	__doprnt@tmpval+1,___llmod@dividend+1
  3124  000FB0  C12D  F09D         	movff	__doprnt@tmpval+2,___llmod@dividend+2
  3125  000FB4  C12E  F09E         	movff	__doprnt@tmpval+3,___llmod@dividend+3
  3126  000FB8  0E0A               	movlw	10
  3127  000FBA  0100               	movlb	0	; () banked
  3128  000FBC  6F9F               	movwf	___llmod@divisor& (0+255),b
  3129  000FBE  0E00               	movlw	0
  3130  000FC0  6FA0               	movwf	(___llmod@divisor+1)& (0+255),b
  3131  000FC2  0E00               	movlw	0
  3132  000FC4  6FA1               	movwf	(___llmod@divisor+2)& (0+255),b
  3133  000FC6  0E00               	movlw	0
  3134  000FC8  6FA2               	movwf	(___llmod@divisor+3)& (0+255),b
  3135  000FCA  ECAD  F028         	call	___llmod	;wreg free
  3136  000FCE  C09B  F12B         	movff	?___llmod,__doprnt@tmpval
  3137  000FD2  C09C  F12C         	movff	?___llmod+1,__doprnt@tmpval+1
  3138  000FD6  C09D  F12D         	movff	?___llmod+2,__doprnt@tmpval+2
  3139  000FDA  C09E  F12E         	movff	?___llmod+3,__doprnt@tmpval+3
  3140                           
  3141                           ;doprnt.c: 1203: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
  3142  000FDE  0101               	movlb	1	; () banked
  3143  000FE0  EE20 F002          	lfsr	2,2
  3144  000FE4  5116               	movf	__doprnt@pb& (0+255),w,b
  3145  000FE6  26D9               	addwf	fsr2l,f,c
  3146  000FE8  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  3147  000FEA  22DA               	addwfc	fsr2h,f,c
  3148  000FEC  50DE               	movf	postinc2,w,c
  3149  000FEE  10DE               	iorwf	postinc2,w,c
  3150  000FF0  B4D8               	btfsc	status,2,c
  3151  000FF2  D016               	goto	l9635
  3152                           
  3153                           ; BSR set to: 1
  3154  000FF4  0101               	movlb	1	; () banked
  3155  000FF6  EE20 F002          	lfsr	2,2
  3156  000FFA  5116               	movf	__doprnt@pb& (0+255),w,b
  3157  000FFC  26D9               	addwf	fsr2l,f,c
  3158  000FFE  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  3159  001000  22DA               	addwfc	fsr2h,f,c
  3160  001002  D801               	call	u16118
  3161  001004  D01E               	goto	l9637
  3162  001006                     u16118:
  3163  001006  0005               	push	
  3164  001008  6EFA               	movwf	pclath,c
  3165  00100A  50DE               	movf	postinc2,w,c
  3166  00100C  6EFD               	movwf	tosl,c
  3167  00100E  50DE               	movf	postinc2,w,c
  3168  001010  6EFE               	movwf	tosh,c
  3169  001012  50F8               	movf	tblptru,w,c
  3170  001014  6EFF               	movwf	tosu,c
  3171  001016  50FA               	movf	pclath,w,c
  3172  001018  0101               	movlb	1	; () banked
  3173  00101A  512B               	movf	__doprnt@tmpval& (0+255),w,b
  3174  00101C  0F30               	addlw	48
  3175  00101E  0012               	return		;indir
  3176  001020                     l9635:
  3177  001020  0101               	movlb	1	; () banked
  3178  001022  512B               	movf	__doprnt@tmpval& (0+255),w,b
  3179  001024  0F30               	addlw	48
  3180  001026  C116  FFD9         	movff	__doprnt@pb,fsr2l
  3181  00102A  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  3182  00102E  CFDE F11C          	movff	postinc2,??__doprnt
  3183  001032  CFDD F11D          	movff	postdec2,??__doprnt+1
  3184  001036  C11C  FFD9         	movff	??__doprnt,fsr2l
  3185  00103A  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  3186  00103E                     L2:
  3187  00103E  6EDF               	movwf	indf2,c
  3188  001040  D784               	goto	l9625
  3189  001042                     l9637:
  3190  001042  0101               	movlb	1	; () banked
  3191  001044  0738               	decf	__doprnt@c& (0+255),f,b
  3192  001046  0101               	movlb	1	; () banked
  3193  001048  2938               	incf	__doprnt@c& (0+255),w,b
  3194  00104A  B4D8               	btfsc	status,2,c
  3195  00104C  D039               	goto	l9649
  3196  00104E  D785               	goto	l9627
  3197  001050                     l9639:
  3198                           
  3199                           ; BSR set to: 1
  3200                           ;doprnt.c: 1208: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  3201  001050  0101               	movlb	1	; () banked
  3202  001052  EE20 F002          	lfsr	2,2
  3203  001056  5116               	movf	__doprnt@pb& (0+255),w,b
  3204  001058  26D9               	addwf	fsr2l,f,c
  3205  00105A  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  3206  00105C  22DA               	addwfc	fsr2h,f,c
  3207  00105E  50DE               	movf	postinc2,w,c
  3208  001060  10DE               	iorwf	postinc2,w,c
  3209  001062  B4D8               	btfsc	status,2,c
  3210  001064  D014               	goto	l9643
  3211                           
  3212                           ; BSR set to: 1
  3213  001066  0101               	movlb	1	; () banked
  3214  001068  EE20 F002          	lfsr	2,2
  3215  00106C  5116               	movf	__doprnt@pb& (0+255),w,b
  3216  00106E  26D9               	addwf	fsr2l,f,c
  3217  001070  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  3218  001072  22DA               	addwfc	fsr2h,f,c
  3219  001074  D801               	call	u16148
  3220  001076  D020               	goto	l9647
  3221  001078                     u16148:
  3222  001078  0005               	push	
  3223  00107A  6EFA               	movwf	pclath,c
  3224  00107C  50DE               	movf	postinc2,w,c
  3225  00107E  6EFD               	movwf	tosl,c
  3226  001080  50DE               	movf	postinc2,w,c
  3227  001082  6EFE               	movwf	tosh,c
  3228  001084  50F8               	movf	tblptru,w,c
  3229  001086  6EFF               	movwf	tosu,c
  3230  001088  50FA               	movf	pclath,w,c
  3231  00108A  0E30               	movlw	48
  3232  00108C  0012               	return		;indir
  3233  00108E                     l9643:
  3234  00108E  C116  FFD9         	movff	__doprnt@pb,fsr2l
  3235  001092  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  3236  001096  CFDE F11C          	movff	postinc2,??__doprnt
  3237  00109A  CFDD F11D          	movff	postdec2,??__doprnt+1
  3238  00109E  C11C  FFD9         	movff	??__doprnt,fsr2l
  3239  0010A2  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  3240  0010A6  0E30               	movlw	48
  3241  0010A8  6EDF               	movwf	indf2,c
  3242  0010AA  C116  FFD9         	movff	__doprnt@pb,fsr2l
  3243  0010AE  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  3244  0010B2  2ADE               	incf	postinc2,f,c
  3245  0010B4  0E00               	movlw	0
  3246  0010B6  22DD               	addwfc	postdec2,f,c
  3247  0010B8                     l9647:
  3248                           
  3249                           ;doprnt.c: 1209: exp--;
  3250  0010B8  0101               	movlb	1	; () banked
  3251  0010BA  0725               	decf	__doprnt@exp& (0+255),f,b
  3252  0010BC  A0D8               	btfss	status,0,c
  3253  0010BE  0726               	decf	(__doprnt@exp+1)& (0+255),f,b
  3254  0010C0                     l9649:
  3255                           
  3256                           ; BSR set to: 1
  3257  0010C0  0101               	movlb	1	; () banked
  3258  0010C2  BF26               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  3259  0010C4  D007               	goto	l9651
  3260  0010C6  0101               	movlb	1	; () banked
  3261  0010C8  5126               	movf	(__doprnt@exp+1)& (0+255),w,b
  3262  0010CA  E1C2               	bnz	l9639
  3263  0010CC  0101               	movlb	1	; () banked
  3264  0010CE  0525               	decf	__doprnt@exp& (0+255),w,b
  3265  0010D0  B0D8               	btfsc	status,0,c
  3266  0010D2  D7BE               	goto	l9639
  3267  0010D4                     l9651:
  3268                           
  3269                           ; BSR set to: 1
  3270                           ;doprnt.c: 1210: }
  3271                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3272  0010D4  0101               	movlb	1	; () banked
  3273  0010D6  BF37               	btfsc	(__doprnt@prec+1)& (0+255),7,b
  3274  0010D8  D00C               	goto	l471
  3275  0010DA  0101               	movlb	1	; () banked
  3276  0010DC  5137               	movf	(__doprnt@prec+1)& (0+255),w,b
  3277  0010DE  E105               	bnz	u16160
  3278  0010E0  0E09               	movlw	9
  3279  0010E2  0101               	movlb	1	; () banked
  3280  0010E4  5D36               	subwf	__doprnt@prec& (0+255),w,b
  3281  0010E6  A0D8               	btfss	status,0,c
  3282  0010E8  D004               	goto	l471
  3283  0010EA                     u16160:
  3284                           
  3285                           ; BSR set to: 1
  3286                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3287  0010EA  0E08               	movlw	8
  3288  0010EC  0101               	movlb	1	; () banked
  3289  0010EE  6F38               	movwf	__doprnt@c& (0+255),b
  3290  0010F0  D002               	goto	l9655
  3291  0010F2                     l471:
  3292                           
  3293                           ; BSR set to: 1
  3294                           ;doprnt.c: 1213: else
  3295                           ;doprnt.c: 1214: c = prec;
  3296  0010F2  C136  F138         	movff	__doprnt@prec,__doprnt@c
  3297  0010F6                     l9655:
  3298                           
  3299                           ; BSR set to: 1
  3300                           ;doprnt.c: 1215: prec -= c;
  3301  0010F6  0101               	movlb	1	; () banked
  3302  0010F8  5138               	movf	__doprnt@c& (0+255),w,b
  3303  0010FA  0101               	movlb	1	; () banked
  3304  0010FC  5F36               	subwf	__doprnt@prec& (0+255),f,b
  3305  0010FE  0E00               	movlw	0
  3306  001100  0101               	movlb	1	; () banked
  3307  001102  BF38               	btfsc	__doprnt@c& (0+255),7,b
  3308  001104  0EFF               	movlw	255
  3309  001106  0101               	movlb	1	; () banked
  3310  001108  5B37               	subwfb	(__doprnt@prec+1)& (0+255),f,b
  3311                           
  3312                           ; BSR set to: 1
  3313                           ;doprnt.c: 1219: if(c)
  3314  00110A  0101               	movlb	1	; () banked
  3315  00110C  5138               	movf	__doprnt@c& (0+255),w,b
  3316  00110E  0101               	movlb	1	; () banked
  3317  001110  B4D8               	btfsc	status,2,c
  3318  001112  D034               	goto	l9667
  3319                           
  3320                           ; BSR set to: 1
  3321                           ;doprnt.c: 1221: if(pb->func) (pb->func('.')); else ((*pb->ptr++ = '.'));
  3322  001114  0101               	movlb	1	; () banked
  3323  001116  EE20 F002          	lfsr	2,2
  3324  00111A  5116               	movf	__doprnt@pb& (0+255),w,b
  3325  00111C  26D9               	addwf	fsr2l,f,c
  3326  00111E  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  3327  001120  22DA               	addwfc	fsr2h,f,c
  3328  001122  50DE               	movf	postinc2,w,c
  3329  001124  10DE               	iorwf	postinc2,w,c
  3330  001126  B4D8               	btfsc	status,2,c
  3331  001128  D014               	goto	l9663
  3332                           
  3333                           ; BSR set to: 1
  3334  00112A  0101               	movlb	1	; () banked
  3335  00112C  EE20 F002          	lfsr	2,2
  3336  001130  5116               	movf	__doprnt@pb& (0+255),w,b
  3337  001132  26D9               	addwf	fsr2l,f,c
  3338  001134  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  3339  001136  22DA               	addwfc	fsr2h,f,c
  3340  001138  D801               	call	u16198
  3341  00113A  D020               	goto	l9667
  3342  00113C                     u16198:
  3343  00113C  0005               	push	
  3344  00113E  6EFA               	movwf	pclath,c
  3345  001140  50DE               	movf	postinc2,w,c
  3346  001142  6EFD               	movwf	tosl,c
  3347  001144  50DE               	movf	postinc2,w,c
  3348  001146  6EFE               	movwf	tosh,c
  3349  001148  50F8               	movf	tblptru,w,c
  3350  00114A  6EFF               	movwf	tosu,c
  3351  00114C  50FA               	movf	pclath,w,c
  3352  00114E  0E2E               	movlw	46
  3353  001150  0012               	return		;indir
  3354  001152                     l9663:
  3355  001152  C116  FFD9         	movff	__doprnt@pb,fsr2l
  3356  001156  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  3357  00115A  CFDE F11C          	movff	postinc2,??__doprnt
  3358  00115E  CFDD F11D          	movff	postdec2,??__doprnt+1
  3359  001162  C11C  FFD9         	movff	??__doprnt,fsr2l
  3360  001166  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  3361  00116A  0E2E               	movlw	46
  3362  00116C  6EDF               	movwf	indf2,c
  3363  00116E  C116  FFD9         	movff	__doprnt@pb,fsr2l
  3364  001172  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  3365  001176  2ADE               	incf	postinc2,f,c
  3366  001178  0E00               	movlw	0
  3367  00117A  22DD               	addwfc	postdec2,f,c
  3368  00117C                     l9667:
  3369                           
  3370                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3371  00117C  0101               	movlb	1	; () banked
  3372  00117E  5138               	movf	__doprnt@c& (0+255),w,b
  3373  001180  EC69  F015         	call	_scale
  3374  001184  C0B1  F122         	movff	?_scale,__doprnt$1771
  3375  001188  C0B2  F123         	movff	?_scale+1,__doprnt$1771+1
  3376  00118C  C0B3  F124         	movff	?_scale+2,__doprnt$1771+2
  3377                           
  3378                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3379  001190  C131  F0A5         	movff	__doprnt@fval,___ftmul@f2
  3380  001194  C132  F0A6         	movff	__doprnt@fval+1,___ftmul@f2+1
  3381  001198  C133  F0A7         	movff	__doprnt@fval+2,___ftmul@f2+2
  3382  00119C  C122  F0A2         	movff	__doprnt$1771,___ftmul@f1
  3383  0011A0  C123  F0A3         	movff	__doprnt$1771+1,___ftmul@f1+1
  3384  0011A4  C124  F0A4         	movff	__doprnt$1771+2,___ftmul@f1+2
  3385  0011A8  EC53  F021         	call	___ftmul	;wreg free
  3386  0011AC  C0A2  F104         	movff	?___ftmul,___fttol@f1
  3387  0011B0  C0A3  F105         	movff	?___ftmul+1,___fttol@f1+1
  3388  0011B4  C0A4  F106         	movff	?___ftmul+2,___fttol@f1+2
  3389  0011B8  ECA8  F022         	call	___fttol	;wreg free
  3390  0011BC  C104  F127         	movff	?___fttol,__doprnt@val
  3391  0011C0  C105  F128         	movff	?___fttol+1,__doprnt@val+1
  3392  0011C4  C106  F129         	movff	?___fttol+2,__doprnt@val+2
  3393  0011C8  C107  F12A         	movff	?___fttol+3,__doprnt@val+3
  3394                           
  3395                           ;doprnt.c: 1228: while(c--) {
  3396  0011CC  D0A1               	goto	l9683
  3397  0011CE                     l9671:
  3398                           
  3399                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3400  0011CE  C127  F08E         	movff	__doprnt@val,___lldiv@dividend
  3401  0011D2  C128  F08F         	movff	__doprnt@val+1,___lldiv@dividend+1
  3402  0011D6  C129  F090         	movff	__doprnt@val+2,___lldiv@dividend+2
  3403  0011DA  C12A  F091         	movff	__doprnt@val+3,___lldiv@dividend+3
  3404  0011DE  0101               	movlb	1	; () banked
  3405  0011E0  5138               	movf	__doprnt@c& (0+255),w,b
  3406  0011E2  0D04               	mullw	4
  3407  0011E4  0E01               	movlw	low _dpowers
  3408  0011E6  24F3               	addwf	prodl,w,c
  3409  0011E8  6EF6               	movwf	tblptrl,c
  3410  0011EA  0E06               	movlw	high _dpowers
  3411  0011EC  20F4               	addwfc	prodh,w,c
  3412  0011EE  6EF7               	movwf	tblptrh,c
  3413  0011F0                     	if	0	;There are less than 3 active tblptr bytes
  3414  0011F0                     	endif
  3415  0011F0  0009               	tblrd		*+
  3416  0011F2  CFF5 F092          	movff	tablat,___lldiv@divisor
  3417  0011F6  0009               	tblrd		*+
  3418  0011F8  CFF5 F093          	movff	tablat,___lldiv@divisor+1
  3419  0011FC  0009               	tblrd		*+
  3420  0011FE  CFF5 F094          	movff	tablat,___lldiv@divisor+2
  3421  001202  000A               	tblrd		*-
  3422  001204  CFF5 F095          	movff	tablat,___lldiv@divisor+3
  3423  001208  ECA7  F027         	call	___lldiv	;wreg free
  3424  00120C  C08E  F12B         	movff	?___lldiv,__doprnt@tmpval
  3425  001210  C08F  F12C         	movff	?___lldiv+1,__doprnt@tmpval+1
  3426  001214  C090  F12D         	movff	?___lldiv+2,__doprnt@tmpval+2
  3427  001218  C091  F12E         	movff	?___lldiv+3,__doprnt@tmpval+3
  3428                           
  3429                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3430  00121C  C12B  F09B         	movff	__doprnt@tmpval,___llmod@dividend
  3431  001220  C12C  F09C         	movff	__doprnt@tmpval+1,___llmod@dividend+1
  3432  001224  C12D  F09D         	movff	__doprnt@tmpval+2,___llmod@dividend+2
  3433  001228  C12E  F09E         	movff	__doprnt@tmpval+3,___llmod@dividend+3
  3434  00122C  0E0A               	movlw	10
  3435  00122E  0100               	movlb	0	; () banked
  3436  001230  6F9F               	movwf	___llmod@divisor& (0+255),b
  3437  001232  0E00               	movlw	0
  3438  001234  6FA0               	movwf	(___llmod@divisor+1)& (0+255),b
  3439  001236  0E00               	movlw	0
  3440  001238  6FA1               	movwf	(___llmod@divisor+2)& (0+255),b
  3441  00123A  0E00               	movlw	0
  3442  00123C  6FA2               	movwf	(___llmod@divisor+3)& (0+255),b
  3443  00123E  ECAD  F028         	call	___llmod	;wreg free
  3444  001242  C09B  F12B         	movff	?___llmod,__doprnt@tmpval
  3445  001246  C09C  F12C         	movff	?___llmod+1,__doprnt@tmpval+1
  3446  00124A  C09D  F12D         	movff	?___llmod+2,__doprnt@tmpval+2
  3447  00124E  C09E  F12E         	movff	?___llmod+3,__doprnt@tmpval+3
  3448                           
  3449                           ;doprnt.c: 1231: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
  3450  001252  0101               	movlb	1	; () banked
  3451  001254  EE20 F002          	lfsr	2,2
  3452  001258  5116               	movf	__doprnt@pb& (0+255),w,b
  3453  00125A  26D9               	addwf	fsr2l,f,c
  3454  00125C  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  3455  00125E  22DA               	addwfc	fsr2h,f,c
  3456  001260  50DE               	movf	postinc2,w,c
  3457  001262  10DE               	iorwf	postinc2,w,c
  3458  001264  B4D8               	btfsc	status,2,c
  3459  001266  D016               	goto	l9679
  3460                           
  3461                           ; BSR set to: 1
  3462  001268  0101               	movlb	1	; () banked
  3463  00126A  EE20 F002          	lfsr	2,2
  3464  00126E  5116               	movf	__doprnt@pb& (0+255),w,b
  3465  001270  26D9               	addwf	fsr2l,f,c
  3466  001272  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  3467  001274  22DA               	addwfc	fsr2h,f,c
  3468  001276  D801               	call	u16218
  3469  001278  D024               	goto	l9681
  3470  00127A                     u16218:
  3471  00127A  0005               	push	
  3472  00127C  6EFA               	movwf	pclath,c
  3473  00127E  50DE               	movf	postinc2,w,c
  3474  001280  6EFD               	movwf	tosl,c
  3475  001282  50DE               	movf	postinc2,w,c
  3476  001284  6EFE               	movwf	tosh,c
  3477  001286  50F8               	movf	tblptru,w,c
  3478  001288  6EFF               	movwf	tosu,c
  3479  00128A  50FA               	movf	pclath,w,c
  3480  00128C  0101               	movlb	1	; () banked
  3481  00128E  512B               	movf	__doprnt@tmpval& (0+255),w,b
  3482  001290  0F30               	addlw	48
  3483  001292  0012               	return		;indir
  3484  001294                     l9679:
  3485  001294  0101               	movlb	1	; () banked
  3486  001296  512B               	movf	__doprnt@tmpval& (0+255),w,b
  3487  001298  0F30               	addlw	48
  3488  00129A  C116  FFD9         	movff	__doprnt@pb,fsr2l
  3489  00129E  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  3490  0012A2  CFDE F11C          	movff	postinc2,??__doprnt
  3491  0012A6  CFDD F11D          	movff	postdec2,??__doprnt+1
  3492  0012AA  C11C  FFD9         	movff	??__doprnt,fsr2l
  3493  0012AE  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  3494  0012B2  6EDF               	movwf	indf2,c
  3495  0012B4  C116  FFD9         	movff	__doprnt@pb,fsr2l
  3496  0012B8  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  3497  0012BC  2ADE               	incf	postinc2,f,c
  3498  0012BE  0E00               	movlw	0
  3499  0012C0  22DD               	addwfc	postdec2,f,c
  3500  0012C2                     l9681:
  3501                           
  3502                           ;doprnt.c: 1232: val %= dpowers[c];
  3503  0012C2  C127  F09B         	movff	__doprnt@val,___llmod@dividend
  3504  0012C6  C128  F09C         	movff	__doprnt@val+1,___llmod@dividend+1
  3505  0012CA  C129  F09D         	movff	__doprnt@val+2,___llmod@dividend+2
  3506  0012CE  C12A  F09E         	movff	__doprnt@val+3,___llmod@dividend+3
  3507  0012D2  0101               	movlb	1	; () banked
  3508  0012D4  5138               	movf	__doprnt@c& (0+255),w,b
  3509  0012D6  0D04               	mullw	4
  3510  0012D8  0E01               	movlw	low _dpowers
  3511  0012DA  24F3               	addwf	prodl,w,c
  3512  0012DC  6EF6               	movwf	tblptrl,c
  3513  0012DE  0E06               	movlw	high _dpowers
  3514  0012E0  20F4               	addwfc	prodh,w,c
  3515  0012E2  6EF7               	movwf	tblptrh,c
  3516  0012E4                     	if	0	;There are less than 3 active tblptr bytes
  3517  0012E4                     	endif
  3518  0012E4  0009               	tblrd		*+
  3519  0012E6  CFF5 F09F          	movff	tablat,___llmod@divisor
  3520  0012EA  0009               	tblrd		*+
  3521  0012EC  CFF5 F0A0          	movff	tablat,___llmod@divisor+1
  3522  0012F0  0009               	tblrd		*+
  3523  0012F2  CFF5 F0A1          	movff	tablat,___llmod@divisor+2
  3524  0012F6  000A               	tblrd		*-
  3525  0012F8  CFF5 F0A2          	movff	tablat,___llmod@divisor+3
  3526  0012FC  ECAD  F028         	call	___llmod
  3527  001300  C09B  F127         	movff	?___llmod,__doprnt@val
  3528  001304  C09C  F128         	movff	?___llmod+1,__doprnt@val+1
  3529  001308  C09D  F129         	movff	?___llmod+2,__doprnt@val+2
  3530  00130C  C09E  F12A         	movff	?___llmod+3,__doprnt@val+3
  3531  001310                     l9683:
  3532  001310  0101               	movlb	1	; () banked
  3533  001312  0738               	decf	__doprnt@c& (0+255),f,b
  3534  001314  0101               	movlb	1	; () banked
  3535  001316  2938               	incf	__doprnt@c& (0+255),w,b
  3536  001318  B4D8               	btfsc	status,2,c
  3537  00131A  D039               	goto	l9695
  3538  00131C  D758               	goto	l9671
  3539  00131E                     l9685:
  3540                           
  3541                           ; BSR set to: 1
  3542                           ;doprnt.c: 1236: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  3543  00131E  0101               	movlb	1	; () banked
  3544  001320  EE20 F002          	lfsr	2,2
  3545  001324  5116               	movf	__doprnt@pb& (0+255),w,b
  3546  001326  26D9               	addwf	fsr2l,f,c
  3547  001328  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  3548  00132A  22DA               	addwfc	fsr2h,f,c
  3549  00132C  50DE               	movf	postinc2,w,c
  3550  00132E  10DE               	iorwf	postinc2,w,c
  3551  001330  B4D8               	btfsc	status,2,c
  3552  001332  D014               	goto	l9689
  3553                           
  3554                           ; BSR set to: 1
  3555  001334  0101               	movlb	1	; () banked
  3556  001336  EE20 F002          	lfsr	2,2
  3557  00133A  5116               	movf	__doprnt@pb& (0+255),w,b
  3558  00133C  26D9               	addwf	fsr2l,f,c
  3559  00133E  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  3560  001340  22DA               	addwfc	fsr2h,f,c
  3561  001342  D801               	call	u16248
  3562  001344  D020               	goto	l9693
  3563  001346                     u16248:
  3564  001346  0005               	push	
  3565  001348  6EFA               	movwf	pclath,c
  3566  00134A  50DE               	movf	postinc2,w,c
  3567  00134C  6EFD               	movwf	tosl,c
  3568  00134E  50DE               	movf	postinc2,w,c
  3569  001350  6EFE               	movwf	tosh,c
  3570  001352  50F8               	movf	tblptru,w,c
  3571  001354  6EFF               	movwf	tosu,c
  3572  001356  50FA               	movf	pclath,w,c
  3573  001358  0E30               	movlw	48
  3574  00135A  0012               	return		;indir
  3575  00135C                     l9689:
  3576  00135C  C116  FFD9         	movff	__doprnt@pb,fsr2l
  3577  001360  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  3578  001364  CFDE F11C          	movff	postinc2,??__doprnt
  3579  001368  CFDD F11D          	movff	postdec2,??__doprnt+1
  3580  00136C  C11C  FFD9         	movff	??__doprnt,fsr2l
  3581  001370  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  3582  001374  0E30               	movlw	48
  3583  001376  6EDF               	movwf	indf2,c
  3584  001378  C116  FFD9         	movff	__doprnt@pb,fsr2l
  3585  00137C  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  3586  001380  2ADE               	incf	postinc2,f,c
  3587  001382  0E00               	movlw	0
  3588  001384  22DD               	addwfc	postdec2,f,c
  3589  001386                     l9693:
  3590                           
  3591                           ;doprnt.c: 1237: prec--;
  3592  001386  0101               	movlb	1	; () banked
  3593  001388  0736               	decf	__doprnt@prec& (0+255),f,b
  3594  00138A  A0D8               	btfss	status,0,c
  3595  00138C  0737               	decf	(__doprnt@prec+1)& (0+255),f,b
  3596  00138E                     l9695:
  3597                           
  3598                           ; BSR set to: 1
  3599  00138E  0101               	movlb	1	; () banked
  3600  001390  5136               	movf	__doprnt@prec& (0+255),w,b
  3601  001392  0101               	movlb	1	; () banked
  3602  001394  1137               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  3603  001396  B4D8               	btfsc	status,2,c
  3604  001398  D2CB               	goto	l9819
  3605  00139A  D7C1               	goto	l9685
  3606  00139C                     l419:
  3607                           
  3608                           ; BSR set to: 1
  3609                           ;doprnt.c: 1246: }
  3610                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
  3611  00139C  0101               	movlb	1	; () banked
  3612  00139E  BD34               	btfsc	__doprnt@flag& (0+255),6,b
  3613  0013A0  D046               	goto	l486
  3614                           
  3615                           ; BSR set to: 1
  3616                           ;doprnt.c: 1253: {
  3617                           ;doprnt.c: 1255: if(flag & 0x10)
  3618  0013A2  0101               	movlb	1	; () banked
  3619  0013A4  A934               	btfss	__doprnt@flag& (0+255),4,b
  3620  0013A6  D019               	goto	l9701
  3621                           
  3622                           ; BSR set to: 1
  3623                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  3624  0013A8  C11A  FFD9         	movff	__doprnt@ap,fsr2l
  3625  0013AC  C11B  FFDA         	movff	__doprnt@ap+1,fsr2h
  3626  0013B0  CFDF F11C          	movff	indf2,??__doprnt
  3627  0013B4  0E04               	movlw	4
  3628  0013B6  26DE               	addwf	postinc2,f,c
  3629  0013B8  CFDF F11D          	movff	indf2,??__doprnt+1
  3630  0013BC  0E00               	movlw	0
  3631  0013BE  22DD               	addwfc	postdec2,f,c
  3632  0013C0  C11C  FFD9         	movff	??__doprnt,fsr2l
  3633  0013C4  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  3634  0013C8  CFDE F127          	movff	postinc2,__doprnt@val
  3635  0013CC  CFDE F128          	movff	postinc2,__doprnt@val+1
  3636  0013D0  CFDE F129          	movff	postinc2,__doprnt@val+2
  3637  0013D4  CFDE F12A          	movff	postinc2,__doprnt@val+3
  3638  0013D8  D01A               	goto	l9703
  3639  0013DA                     l9701:
  3640                           
  3641                           ; BSR set to: 1
  3642                           ;doprnt.c: 1257: else
  3643                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3644  0013DA  C11A  FFD9         	movff	__doprnt@ap,fsr2l
  3645  0013DE  C11B  FFDA         	movff	__doprnt@ap+1,fsr2h
  3646  0013E2  CFDF F11C          	movff	indf2,??__doprnt
  3647  0013E6  0E02               	movlw	2
  3648  0013E8  26DE               	addwf	postinc2,f,c
  3649  0013EA  CFDF F11D          	movff	indf2,??__doprnt+1
  3650  0013EE  0E00               	movlw	0
  3651  0013F0  22DD               	addwfc	postdec2,f,c
  3652  0013F2  C11C  FFD9         	movff	??__doprnt,fsr2l
  3653  0013F6  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  3654  0013FA  CFDE F127          	movff	postinc2,__doprnt@val
  3655  0013FE  CFDD F128          	movff	postdec2,__doprnt@val+1
  3656  001402  0101               	movlb	1	; () banked
  3657  001404  0E00               	movlw	0
  3658  001406  BF28               	btfsc	(__doprnt@val+1)& (0+255),7,b
  3659  001408  0EFF               	movlw	-1
  3660  00140A  6F29               	movwf	(__doprnt@val+2)& (0+255),b
  3661  00140C  6F2A               	movwf	(__doprnt@val+3)& (0+255),b
  3662  00140E                     l9703:
  3663                           
  3664                           ; BSR set to: 1
  3665                           ;doprnt.c: 1261: if((long)val < 0) {
  3666  00140E  0101               	movlb	1	; () banked
  3667  001410  AF2A               	btfss	(__doprnt@val+3)& (0+255),7,b
  3668  001412  D044               	goto	l9713
  3669                           
  3670                           ; BSR set to: 1
  3671                           ;doprnt.c: 1262: flag |= 0x03;
  3672  001414  0E03               	movlw	3
  3673  001416  0101               	movlb	1	; () banked
  3674  001418  1334               	iorwf	__doprnt@flag& (0+255),f,b
  3675                           
  3676                           ; BSR set to: 1
  3677                           ;doprnt.c: 1263: val = -val;
  3678  00141A  0101               	movlb	1	; () banked
  3679  00141C  1F2A               	comf	(__doprnt@val+3)& (0+255),f,b
  3680  00141E  1F29               	comf	(__doprnt@val+2)& (0+255),f,b
  3681  001420  1F28               	comf	(__doprnt@val+1)& (0+255),f,b
  3682  001422  6D27               	negf	__doprnt@val& (0+255),b
  3683  001424  0E00               	movlw	0
  3684  001426  2328               	addwfc	(__doprnt@val+1)& (0+255),f,b
  3685  001428  2329               	addwfc	(__doprnt@val+2)& (0+255),f,b
  3686  00142A  232A               	addwfc	(__doprnt@val+3)& (0+255),f,b
  3687                           
  3688                           ; BSR set to: 1
  3689                           ;doprnt.c: 1264: }
  3690                           ;doprnt.c: 1266: }
  3691  00142C  D037               	goto	l9713
  3692  00142E                     l486:
  3693                           
  3694                           ; BSR set to: 1
  3695                           ;doprnt.c: 1268: else
  3696                           ;doprnt.c: 1273: {
  3697                           ;doprnt.c: 1281: if(flag & 0x10)
  3698  00142E  0101               	movlb	1	; () banked
  3699  001430  A934               	btfss	__doprnt@flag& (0+255),4,b
  3700  001432  D019               	goto	l9711
  3701                           
  3702                           ; BSR set to: 1
  3703                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  3704  001434  C11A  FFD9         	movff	__doprnt@ap,fsr2l
  3705  001438  C11B  FFDA         	movff	__doprnt@ap+1,fsr2h
  3706  00143C  CFDF F11C          	movff	indf2,??__doprnt
  3707  001440  0E04               	movlw	4
  3708  001442  26DE               	addwf	postinc2,f,c
  3709  001444  CFDF F11D          	movff	indf2,??__doprnt+1
  3710  001448  0E00               	movlw	0
  3711  00144A  22DD               	addwfc	postdec2,f,c
  3712  00144C  C11C  FFD9         	movff	??__doprnt,fsr2l
  3713  001450  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  3714  001454  CFDE F127          	movff	postinc2,__doprnt@val
  3715  001458  CFDE F128          	movff	postinc2,__doprnt@val+1
  3716  00145C  CFDE F129          	movff	postinc2,__doprnt@val+2
  3717  001460  CFDE F12A          	movff	postinc2,__doprnt@val+3
  3718  001464  D01B               	goto	l9713
  3719  001466                     l9711:
  3720                           
  3721                           ; BSR set to: 1
  3722                           ;doprnt.c: 1283: else
  3723                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3724  001466  C11A  FFD9         	movff	__doprnt@ap,fsr2l
  3725  00146A  C11B  FFDA         	movff	__doprnt@ap+1,fsr2h
  3726  00146E  CFDF F11C          	movff	indf2,??__doprnt
  3727  001472  0E02               	movlw	2
  3728  001474  26DE               	addwf	postinc2,f,c
  3729  001476  CFDF F11D          	movff	indf2,??__doprnt+1
  3730  00147A  0E00               	movlw	0
  3731  00147C  22DD               	addwfc	postdec2,f,c
  3732  00147E  C11C  FFD9         	movff	??__doprnt,fsr2l
  3733  001482  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  3734  001486  CFDE F11E          	movff	postinc2,??__doprnt+2
  3735  00148A  CFDD F11F          	movff	postdec2,??__doprnt+3
  3736  00148E  C11E  F127         	movff	??__doprnt+2,__doprnt@val
  3737  001492  C11F  F128         	movff	??__doprnt+3,__doprnt@val+1
  3738  001496  0101               	movlb	1	; () banked
  3739  001498  6B29               	clrf	(__doprnt@val+2)& (0+255),b
  3740  00149A  6B2A               	clrf	(__doprnt@val+3)& (0+255),b
  3741  00149C                     l9713:
  3742                           
  3743                           ; BSR set to: 1
  3744                           ;doprnt.c: 1287: }
  3745                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3746  00149C  0101               	movlb	1	; () banked
  3747  00149E  5136               	movf	__doprnt@prec& (0+255),w,b
  3748  0014A0  0101               	movlb	1	; () banked
  3749  0014A2  1137               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  3750  0014A4  A4D8               	btfss	status,2,c
  3751  0014A6  D00D               	goto	l9719
  3752                           
  3753                           ; BSR set to: 1
  3754  0014A8  0101               	movlb	1	; () banked
  3755  0014AA  5127               	movf	__doprnt@val& (0+255),w,b
  3756  0014AC  0101               	movlb	1	; () banked
  3757  0014AE  1128               	iorwf	(__doprnt@val+1)& (0+255),w,b
  3758  0014B0  0101               	movlb	1	; () banked
  3759  0014B2  1129               	iorwf	(__doprnt@val+2)& (0+255),w,b
  3760  0014B4  0101               	movlb	1	; () banked
  3761  0014B6  112A               	iorwf	(__doprnt@val+3)& (0+255),w,b
  3762  0014B8  A4D8               	btfss	status,2,c
  3763  0014BA  D003               	goto	l9719
  3764                           
  3765                           ; BSR set to: 1
  3766                           ;doprnt.c: 1291: prec++;
  3767  0014BC  0101               	movlb	1	; () banked
  3768  0014BE  4B36               	infsnz	__doprnt@prec& (0+255),f,b
  3769  0014C0  2B37               	incf	(__doprnt@prec+1)& (0+255),f,b
  3770  0014C2                     l9719:
  3771                           
  3772                           ; BSR set to: 1
  3773                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3774  0014C2  0E01               	movlw	1
  3775  0014C4  0101               	movlb	1	; () banked
  3776  0014C6  6F38               	movwf	__doprnt@c& (0+255),b
  3777  0014C8                     l9721:
  3778                           
  3779                           ; BSR set to: 1
  3780  0014C8  0E0A               	movlw	10
  3781  0014CA  0101               	movlb	1	; () banked
  3782  0014CC  1938               	xorwf	__doprnt@c& (0+255),w,b
  3783  0014CE  B4D8               	btfsc	status,2,c
  3784  0014D0  D01E               	goto	l9733
  3785                           
  3786                           ; BSR set to: 1
  3787                           ;doprnt.c: 1306: if(val < dpowers[c])
  3788                           
  3789                           ; BSR set to: 1
  3790                           
  3791                           ; BSR set to: 1
  3792  0014D2  0101               	movlb	1	; () banked
  3793  0014D4  5138               	movf	__doprnt@c& (0+255),w,b
  3794  0014D6  0D04               	mullw	4
  3795  0014D8  0E01               	movlw	low _dpowers
  3796  0014DA  24F3               	addwf	prodl,w,c
  3797  0014DC  6EF6               	movwf	tblptrl,c
  3798  0014DE  0E06               	movlw	high _dpowers
  3799  0014E0  20F4               	addwfc	prodh,w,c
  3800  0014E2  6EF7               	movwf	tblptrh,c
  3801  0014E4                     	if	0	;There are less than 3 active tblptr bytes
  3802  0014E4                     	endif
  3803  0014E4  0009               	tblrd		*+
  3804  0014E6  50F5               	movf	tablat,w,c
  3805  0014E8  0101               	movlb	1	; () banked
  3806  0014EA  5D27               	subwf	__doprnt@val& (0+255),w,b
  3807  0014EC  0009               	tblrd		*+
  3808  0014EE  50F5               	movf	tablat,w,c
  3809  0014F0  0101               	movlb	1	; () banked
  3810  0014F2  5928               	subwfb	(__doprnt@val+1)& (0+255),w,b
  3811  0014F4  0009               	tblrd		*+
  3812  0014F6  50F5               	movf	tablat,w,c
  3813  0014F8  0101               	movlb	1	; () banked
  3814  0014FA  5929               	subwfb	(__doprnt@val+2)& (0+255),w,b
  3815  0014FC  0009               	tblrd		*+
  3816  0014FE  50F5               	movf	tablat,w,c
  3817  001500  0101               	movlb	1	; () banked
  3818  001502  592A               	subwfb	(__doprnt@val+3)& (0+255),w,b
  3819  001504  A0D8               	btfss	status,0,c
  3820  001506  D003               	goto	l9733
  3821                           
  3822                           ; BSR set to: 1
  3823                           
  3824                           ; BSR set to: 1
  3825                           
  3826                           ; BSR set to: 1
  3827                           ;doprnt.c: 1307: break;
  3828  001508  0101               	movlb	1	; () banked
  3829  00150A  2B38               	incf	__doprnt@c& (0+255),f,b
  3830  00150C  D7DD               	goto	l9721
  3831  00150E                     l9733:
  3832                           
  3833                           ; BSR set to: 1
  3834                           ;doprnt.c: 1339: if(c < prec)
  3835  00150E  0E80               	movlw	128
  3836  001510  0101               	movlb	1	; () banked
  3837  001512  BF38               	btfsc	__doprnt@c& (0+255),7,b
  3838  001514  0E7F               	movlw	127
  3839  001516  0101               	movlb	1	; () banked
  3840  001518  6F1C               	movwf	??__doprnt& (0+255),b
  3841  00151A  0101               	movlb	1	; () banked
  3842  00151C  5136               	movf	__doprnt@prec& (0+255),w,b
  3843  00151E  0101               	movlb	1	; () banked
  3844  001520  5D38               	subwf	__doprnt@c& (0+255),w,b
  3845  001522  0101               	movlb	1	; () banked
  3846  001524  5137               	movf	(__doprnt@prec+1)& (0+255),w,b
  3847  001526  0A80               	xorlw	128
  3848  001528  0101               	movlb	1	; () banked
  3849  00152A  591C               	subwfb	??__doprnt& (0+255),w,b
  3850  00152C  B0D8               	btfsc	status,0,c
  3851  00152E  D003               	goto	l9737
  3852                           
  3853                           ; BSR set to: 1
  3854                           ;doprnt.c: 1340: c = prec;
  3855  001530  C136  F138         	movff	__doprnt@prec,__doprnt@c
  3856  001534  D018               	goto	l9741
  3857  001536                     l9737:
  3858                           
  3859                           ; BSR set to: 1
  3860                           ;doprnt.c: 1341: else if(prec < c)
  3861  001536  0101               	movlb	1	; () banked
  3862  001538  5137               	movf	(__doprnt@prec+1)& (0+255),w,b
  3863  00153A  0A80               	xorlw	128
  3864  00153C  0101               	movlb	1	; () banked
  3865  00153E  6F1C               	movwf	??__doprnt& (0+255),b
  3866  001540  0101               	movlb	1	; () banked
  3867  001542  5138               	movf	__doprnt@c& (0+255),w,b
  3868  001544  0101               	movlb	1	; () banked
  3869  001546  5D36               	subwf	__doprnt@prec& (0+255),w,b
  3870  001548  0E80               	movlw	128
  3871  00154A  0101               	movlb	1	; () banked
  3872  00154C  BF38               	btfsc	__doprnt@c& (0+255),7,b
  3873  00154E  0E7F               	movlw	127
  3874  001550  0101               	movlb	1	; () banked
  3875  001552  591C               	subwfb	??__doprnt& (0+255),w,b
  3876  001554  B0D8               	btfsc	status,0,c
  3877  001556  D007               	goto	l9741
  3878                           
  3879                           ; BSR set to: 1
  3880                           ;doprnt.c: 1342: prec = c;
  3881  001558  0101               	movlb	1	; () banked
  3882  00155A  5138               	movf	__doprnt@c& (0+255),w,b
  3883  00155C  0101               	movlb	1	; () banked
  3884  00155E  6F36               	movwf	__doprnt@prec& (0+255),b
  3885  001560  6B37               	clrf	(__doprnt@prec+1)& (0+255),b
  3886  001562  BF36               	btfsc	__doprnt@prec& (0+255),7,b
  3887  001564  0737               	decf	(__doprnt@prec+1)& (0+255),f,b
  3888  001566                     l9741:
  3889                           
  3890                           ; BSR set to: 1
  3891                           ;doprnt.c: 1345: if(width && flag & 0x03)
  3892  001566  0101               	movlb	1	; () banked
  3893  001568  512F               	movf	__doprnt@width& (0+255),w,b
  3894  00156A  0101               	movlb	1	; () banked
  3895  00156C  1130               	iorwf	(__doprnt@width+1)& (0+255),w,b
  3896  00156E  B4D8               	btfsc	status,2,c
  3897  001570  D014               	goto	l9747
  3898                           
  3899                           ; BSR set to: 1
  3900  001572  0E03               	movlw	3
  3901  001574  0101               	movlb	1	; () banked
  3902  001576  1534               	andwf	__doprnt@flag& (0+255),w,b
  3903  001578  0101               	movlb	1	; () banked
  3904  00157A  6F1C               	movwf	??__doprnt& (0+255),b
  3905  00157C  0E00               	movlw	0
  3906  00157E  0101               	movlb	1	; () banked
  3907  001580  1535               	andwf	(__doprnt@flag+1)& (0+255),w,b
  3908  001582  0101               	movlb	1	; () banked
  3909  001584  6F1D               	movwf	(??__doprnt+1)& (0+255),b
  3910  001586  0101               	movlb	1	; () banked
  3911  001588  511C               	movf	??__doprnt& (0+255),w,b
  3912  00158A  0101               	movlb	1	; () banked
  3913  00158C  111D               	iorwf	(??__doprnt+1)& (0+255),w,b
  3914  00158E  B4D8               	btfsc	status,2,c
  3915  001590  D004               	goto	l9747
  3916                           
  3917                           ; BSR set to: 1
  3918                           ;doprnt.c: 1346: width--;
  3919  001592  0101               	movlb	1	; () banked
  3920  001594  072F               	decf	__doprnt@width& (0+255),f,b
  3921  001596  A0D8               	btfss	status,0,c
  3922  001598  0730               	decf	(__doprnt@width+1)& (0+255),f,b
  3923  00159A                     l9747:
  3924                           
  3925                           ; BSR set to: 1
  3926                           ;doprnt.c: 1348: if(flag & 0x4000) {
  3927  00159A  0101               	movlb	1	; () banked
  3928  00159C  AD35               	btfss	(__doprnt@flag+1)& (0+255),6,b
  3929  00159E  D01E               	goto	l9755
  3930                           
  3931                           ; BSR set to: 1
  3932                           ;doprnt.c: 1349: if(width > prec)
  3933  0015A0  0101               	movlb	1	; () banked
  3934  0015A2  512F               	movf	__doprnt@width& (0+255),w,b
  3935  0015A4  0101               	movlb	1	; () banked
  3936  0015A6  5D36               	subwf	__doprnt@prec& (0+255),w,b
  3937  0015A8  0101               	movlb	1	; () banked
  3938  0015AA  5137               	movf	(__doprnt@prec+1)& (0+255),w,b
  3939  0015AC  0A80               	xorlw	128
  3940  0015AE  0101               	movlb	1	; () banked
  3941  0015B0  6F1C               	movwf	??__doprnt& (0+255),b
  3942  0015B2  0101               	movlb	1	; () banked
  3943  0015B4  5130               	movf	(__doprnt@width+1)& (0+255),w,b
  3944  0015B6  0A80               	xorlw	128
  3945  0015B8  0101               	movlb	1	; () banked
  3946  0015BA  591C               	subwfb	??__doprnt& (0+255),w,b
  3947  0015BC  B0D8               	btfsc	status,0,c
  3948  0015BE  D009               	goto	l9753
  3949                           
  3950                           ; BSR set to: 1
  3951                           ;doprnt.c: 1350: width -= prec;
  3952  0015C0  0101               	movlb	1	; () banked
  3953  0015C2  5136               	movf	__doprnt@prec& (0+255),w,b
  3954  0015C4  0101               	movlb	1	; () banked
  3955  0015C6  5F2F               	subwf	__doprnt@width& (0+255),f,b
  3956  0015C8  0101               	movlb	1	; () banked
  3957  0015CA  5137               	movf	(__doprnt@prec+1)& (0+255),w,b
  3958  0015CC  0101               	movlb	1	; () banked
  3959  0015CE  5B30               	subwfb	(__doprnt@width+1)& (0+255),f,b
  3960  0015D0  D005               	goto	l9755
  3961  0015D2                     l9753:
  3962                           
  3963                           ; BSR set to: 1
  3964                           ;doprnt.c: 1351: else
  3965                           ;doprnt.c: 1352: width = 0;
  3966  0015D2  0E00               	movlw	0
  3967  0015D4  0101               	movlb	1	; () banked
  3968  0015D6  6F30               	movwf	(__doprnt@width+1)& (0+255),b
  3969  0015D8  0E00               	movlw	0
  3970  0015DA  6F2F               	movwf	__doprnt@width& (0+255),b
  3971  0015DC                     l9755:
  3972                           
  3973                           ; BSR set to: 1
  3974                           ;doprnt.c: 1353: }
  3975                           ;doprnt.c: 1381: if(width > c)
  3976  0015DC  0E80               	movlw	128
  3977  0015DE  0101               	movlb	1	; () banked
  3978  0015E0  BF38               	btfsc	__doprnt@c& (0+255),7,b
  3979  0015E2  0E7F               	movlw	127
  3980  0015E4  0101               	movlb	1	; () banked
  3981  0015E6  6F1C               	movwf	??__doprnt& (0+255),b
  3982  0015E8  0101               	movlb	1	; () banked
  3983  0015EA  512F               	movf	__doprnt@width& (0+255),w,b
  3984  0015EC  0101               	movlb	1	; () banked
  3985  0015EE  5D38               	subwf	__doprnt@c& (0+255),w,b
  3986  0015F0  0101               	movlb	1	; () banked
  3987  0015F2  5130               	movf	(__doprnt@width+1)& (0+255),w,b
  3988  0015F4  0A80               	xorlw	128
  3989  0015F6  0101               	movlb	1	; () banked
  3990  0015F8  591C               	subwfb	??__doprnt& (0+255),w,b
  3991  0015FA  B0D8               	btfsc	status,0,c
  3992  0015FC  D00B               	goto	l9759
  3993                           
  3994                           ; BSR set to: 1
  3995                           ;doprnt.c: 1382: width -= c;
  3996  0015FE  0101               	movlb	1	; () banked
  3997  001600  5138               	movf	__doprnt@c& (0+255),w,b
  3998  001602  0101               	movlb	1	; () banked
  3999  001604  5F2F               	subwf	__doprnt@width& (0+255),f,b
  4000  001606  0E00               	movlw	0
  4001  001608  0101               	movlb	1	; () banked
  4002  00160A  BF38               	btfsc	__doprnt@c& (0+255),7,b
  4003  00160C  0EFF               	movlw	255
  4004  00160E  0101               	movlb	1	; () banked
  4005  001610  5B30               	subwfb	(__doprnt@width+1)& (0+255),f,b
  4006  001612  D005               	goto	l9761
  4007  001614                     l9759:
  4008                           
  4009                           ; BSR set to: 1
  4010                           ;doprnt.c: 1383: else
  4011                           ;doprnt.c: 1384: width = 0;
  4012  001614  0E00               	movlw	0
  4013  001616  0101               	movlb	1	; () banked
  4014  001618  6F30               	movwf	(__doprnt@width+1)& (0+255),b
  4015  00161A  0E00               	movlw	0
  4016  00161C  6F2F               	movwf	__doprnt@width& (0+255),b
  4017  00161E                     l9761:
  4018                           
  4019                           ; BSR set to: 1
  4020                           ;doprnt.c: 1387: if(flag & 0x04) {
  4021  00161E  0101               	movlb	1	; () banked
  4022  001620  A534               	btfss	__doprnt@flag& (0+255),2,b
  4023  001622  D083               	goto	l9785
  4024                           
  4025                           ; BSR set to: 1
  4026                           ;doprnt.c: 1392: if(flag & 0x03)
  4027  001624  0E03               	movlw	3
  4028  001626  0101               	movlb	1	; () banked
  4029  001628  1534               	andwf	__doprnt@flag& (0+255),w,b
  4030  00162A  0101               	movlb	1	; () banked
  4031  00162C  6F1C               	movwf	??__doprnt& (0+255),b
  4032  00162E  0E00               	movlw	0
  4033  001630  0101               	movlb	1	; () banked
  4034  001632  1535               	andwf	(__doprnt@flag+1)& (0+255),w,b
  4035  001634  0101               	movlb	1	; () banked
  4036  001636  6F1D               	movwf	(??__doprnt+1)& (0+255),b
  4037  001638  0101               	movlb	1	; () banked
  4038  00163A  511C               	movf	??__doprnt& (0+255),w,b
  4039  00163C  0101               	movlb	1	; () banked
  4040  00163E  111D               	iorwf	(??__doprnt+1)& (0+255),w,b
  4041  001640  B4D8               	btfsc	status,2,c
  4042  001642  D034               	goto	l9773
  4043                           
  4044                           ; BSR set to: 1
  4045                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  4046  001644  0101               	movlb	1	; () banked
  4047  001646  EE20 F002          	lfsr	2,2
  4048  00164A  5116               	movf	__doprnt@pb& (0+255),w,b
  4049  00164C  26D9               	addwf	fsr2l,f,c
  4050  00164E  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  4051  001650  22DA               	addwfc	fsr2h,f,c
  4052  001652  50DE               	movf	postinc2,w,c
  4053  001654  10DE               	iorwf	postinc2,w,c
  4054  001656  B4D8               	btfsc	status,2,c
  4055  001658  D014               	goto	l9769
  4056                           
  4057                           ; BSR set to: 1
  4058  00165A  0101               	movlb	1	; () banked
  4059  00165C  EE20 F002          	lfsr	2,2
  4060  001660  5116               	movf	__doprnt@pb& (0+255),w,b
  4061  001662  26D9               	addwf	fsr2l,f,c
  4062  001664  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  4063  001666  22DA               	addwfc	fsr2h,f,c
  4064  001668  D801               	call	u16458
  4065  00166A  D020               	goto	l9773
  4066  00166C                     u16458:
  4067  00166C  0005               	push	
  4068  00166E  6EFA               	movwf	pclath,c
  4069  001670  50DE               	movf	postinc2,w,c
  4070  001672  6EFD               	movwf	tosl,c
  4071  001674  50DE               	movf	postinc2,w,c
  4072  001676  6EFE               	movwf	tosh,c
  4073  001678  50F8               	movf	tblptru,w,c
  4074  00167A  6EFF               	movwf	tosu,c
  4075  00167C  50FA               	movf	pclath,w,c
  4076  00167E  0E2D               	movlw	45
  4077  001680  0012               	return		;indir
  4078  001682                     l9769:
  4079  001682  C116  FFD9         	movff	__doprnt@pb,fsr2l
  4080  001686  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  4081  00168A  CFDE F11C          	movff	postinc2,??__doprnt
  4082  00168E  CFDD F11D          	movff	postdec2,??__doprnt+1
  4083  001692  C11C  FFD9         	movff	??__doprnt,fsr2l
  4084  001696  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  4085  00169A  0E2D               	movlw	45
  4086  00169C  6EDF               	movwf	indf2,c
  4087  00169E  C116  FFD9         	movff	__doprnt@pb,fsr2l
  4088  0016A2  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  4089  0016A6  2ADE               	incf	postinc2,f,c
  4090  0016A8  0E00               	movlw	0
  4091  0016AA  22DD               	addwfc	postdec2,f,c
  4092  0016AC                     l9773:
  4093                           
  4094                           ;doprnt.c: 1415: if(width)
  4095  0016AC  0101               	movlb	1	; () banked
  4096  0016AE  512F               	movf	__doprnt@width& (0+255),w,b
  4097  0016B0  0101               	movlb	1	; () banked
  4098  0016B2  1130               	iorwf	(__doprnt@width+1)& (0+255),w,b
  4099  0016B4  B4D8               	btfsc	status,2,c
  4100  0016B6  D131               	goto	l9817
  4101                           
  4102                           ; BSR set to: 1
  4103                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  4104                           
  4105                           ; BSR set to: 1
  4106                           
  4107                           ;doprnt.c: 1416: do
  4108  0016B8  0101               	movlb	1	; () banked
  4109  0016BA  EE20 F002          	lfsr	2,2
  4110  0016BE  5116               	movf	__doprnt@pb& (0+255),w,b
  4111  0016C0  26D9               	addwf	fsr2l,f,c
  4112  0016C2  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  4113  0016C4  22DA               	addwfc	fsr2h,f,c
  4114  0016C6  50DE               	movf	postinc2,w,c
  4115  0016C8  10DE               	iorwf	postinc2,w,c
  4116  0016CA  B4D8               	btfsc	status,2,c
  4117  0016CC  D014               	goto	l9779
  4118                           
  4119                           ; BSR set to: 1
  4120  0016CE  0101               	movlb	1	; () banked
  4121  0016D0  EE20 F002          	lfsr	2,2
  4122  0016D4  5116               	movf	__doprnt@pb& (0+255),w,b
  4123  0016D6  26D9               	addwf	fsr2l,f,c
  4124  0016D8  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  4125  0016DA  22DA               	addwfc	fsr2h,f,c
  4126  0016DC  D801               	call	u16488
  4127  0016DE  D020               	goto	l9783
  4128  0016E0                     u16488:
  4129  0016E0  0005               	push	
  4130  0016E2  6EFA               	movwf	pclath,c
  4131  0016E4  50DE               	movf	postinc2,w,c
  4132  0016E6  6EFD               	movwf	tosl,c
  4133  0016E8  50DE               	movf	postinc2,w,c
  4134  0016EA  6EFE               	movwf	tosh,c
  4135  0016EC  50F8               	movf	tblptru,w,c
  4136  0016EE  6EFF               	movwf	tosu,c
  4137  0016F0  50FA               	movf	pclath,w,c
  4138  0016F2  0E30               	movlw	48
  4139  0016F4  0012               	return		;indir
  4140  0016F6                     l9779:
  4141  0016F6  C116  FFD9         	movff	__doprnt@pb,fsr2l
  4142  0016FA  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  4143  0016FE  CFDE F11C          	movff	postinc2,??__doprnt
  4144  001702  CFDD F11D          	movff	postdec2,??__doprnt+1
  4145  001706  C11C  FFD9         	movff	??__doprnt,fsr2l
  4146  00170A  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  4147  00170E  0E30               	movlw	48
  4148  001710  6EDF               	movwf	indf2,c
  4149  001712  C116  FFD9         	movff	__doprnt@pb,fsr2l
  4150  001716  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  4151  00171A  2ADE               	incf	postinc2,f,c
  4152  00171C  0E00               	movlw	0
  4153  00171E  22DD               	addwfc	postdec2,f,c
  4154  001720                     l9783:
  4155                           
  4156                           ;doprnt.c: 1418: while(--width);
  4157  001720  0101               	movlb	1	; () banked
  4158  001722  072F               	decf	__doprnt@width& (0+255),f,b
  4159  001724  A0D8               	btfss	status,0,c
  4160  001726  0730               	decf	(__doprnt@width+1)& (0+255),f,b
  4161  001728  D7C1               	goto	l9773
  4162  00172A                     l9785:
  4163                           
  4164                           ; BSR set to: 1
  4165                           ;doprnt.c: 1422: {
  4166                           ;doprnt.c: 1424: if(width
  4167                           ;doprnt.c: 1428: )
  4168  00172A  0101               	movlb	1	; () banked
  4169  00172C  512F               	movf	__doprnt@width& (0+255),w,b
  4170  00172E  0101               	movlb	1	; () banked
  4171  001730  1130               	iorwf	(__doprnt@width+1)& (0+255),w,b
  4172  001732  B4D8               	btfsc	status,2,c
  4173  001734  D03E               	goto	l9797
  4174  001736                     l9787:
  4175                           
  4176                           ; BSR set to: 1
  4177                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  4178  001736  0101               	movlb	1	; () banked
  4179  001738  EE20 F002          	lfsr	2,2
  4180  00173C  5116               	movf	__doprnt@pb& (0+255),w,b
  4181  00173E  26D9               	addwf	fsr2l,f,c
  4182  001740  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  4183  001742  22DA               	addwfc	fsr2h,f,c
  4184  001744  50DE               	movf	postinc2,w,c
  4185  001746  10DE               	iorwf	postinc2,w,c
  4186  001748  B4D8               	btfsc	status,2,c
  4187  00174A  D014               	goto	l9791
  4188                           
  4189                           ; BSR set to: 1
  4190  00174C  0101               	movlb	1	; () banked
  4191  00174E  EE20 F002          	lfsr	2,2
  4192  001752  5116               	movf	__doprnt@pb& (0+255),w,b
  4193  001754  26D9               	addwf	fsr2l,f,c
  4194  001756  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  4195  001758  22DA               	addwfc	fsr2h,f,c
  4196  00175A  D801               	call	u16528
  4197  00175C  D020               	goto	l9795
  4198  00175E                     u16528:
  4199  00175E  0005               	push	
  4200  001760  6EFA               	movwf	pclath,c
  4201  001762  50DE               	movf	postinc2,w,c
  4202  001764  6EFD               	movwf	tosl,c
  4203  001766  50DE               	movf	postinc2,w,c
  4204  001768  6EFE               	movwf	tosh,c
  4205  00176A  50F8               	movf	tblptru,w,c
  4206  00176C  6EFF               	movwf	tosu,c
  4207  00176E  50FA               	movf	pclath,w,c
  4208  001770  0E20               	movlw	32
  4209  001772  0012               	return		;indir
  4210  001774                     l9791:
  4211  001774  C116  FFD9         	movff	__doprnt@pb,fsr2l
  4212  001778  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  4213  00177C  CFDE F11C          	movff	postinc2,??__doprnt
  4214  001780  CFDD F11D          	movff	postdec2,??__doprnt+1
  4215  001784  C11C  FFD9         	movff	??__doprnt,fsr2l
  4216  001788  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  4217  00178C  0E20               	movlw	32
  4218  00178E  6EDF               	movwf	indf2,c
  4219  001790  C116  FFD9         	movff	__doprnt@pb,fsr2l
  4220  001794  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  4221  001798  2ADE               	incf	postinc2,f,c
  4222  00179A  0E00               	movlw	0
  4223  00179C  22DD               	addwfc	postdec2,f,c
  4224  00179E                     l9795:
  4225                           
  4226                           ;doprnt.c: 1431: while(--width);
  4227  00179E  0101               	movlb	1	; () banked
  4228  0017A0  072F               	decf	__doprnt@width& (0+255),f,b
  4229  0017A2  A0D8               	btfss	status,0,c
  4230  0017A4  0730               	decf	(__doprnt@width+1)& (0+255),f,b
  4231  0017A6  0101               	movlb	1	; () banked
  4232  0017A8  512F               	movf	__doprnt@width& (0+255),w,b
  4233  0017AA  0101               	movlb	1	; () banked
  4234  0017AC  1130               	iorwf	(__doprnt@width+1)& (0+255),w,b
  4235  0017AE  A4D8               	btfss	status,2,c
  4236  0017B0  D7C2               	goto	l9787
  4237  0017B2                     l9797:
  4238                           
  4239                           ; BSR set to: 1
  4240                           ;doprnt.c: 1438: if(flag & 0x03)
  4241  0017B2  0E03               	movlw	3
  4242  0017B4  0101               	movlb	1	; () banked
  4243  0017B6  1534               	andwf	__doprnt@flag& (0+255),w,b
  4244  0017B8  0101               	movlb	1	; () banked
  4245  0017BA  6F1C               	movwf	??__doprnt& (0+255),b
  4246  0017BC  0E00               	movlw	0
  4247  0017BE  0101               	movlb	1	; () banked
  4248  0017C0  1535               	andwf	(__doprnt@flag+1)& (0+255),w,b
  4249  0017C2  0101               	movlb	1	; () banked
  4250  0017C4  6F1D               	movwf	(??__doprnt+1)& (0+255),b
  4251  0017C6  0101               	movlb	1	; () banked
  4252  0017C8  511C               	movf	??__doprnt& (0+255),w,b
  4253  0017CA  0101               	movlb	1	; () banked
  4254  0017CC  111D               	iorwf	(??__doprnt+1)& (0+255),w,b
  4255  0017CE  B4D8               	btfsc	status,2,c
  4256  0017D0  D0A4               	goto	l9817
  4257                           
  4258                           ; BSR set to: 1
  4259                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  4260  0017D2  0101               	movlb	1	; () banked
  4261  0017D4  EE20 F002          	lfsr	2,2
  4262  0017D8  5116               	movf	__doprnt@pb& (0+255),w,b
  4263  0017DA  26D9               	addwf	fsr2l,f,c
  4264  0017DC  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  4265  0017DE  22DA               	addwfc	fsr2h,f,c
  4266  0017E0  50DE               	movf	postinc2,w,c
  4267  0017E2  10DE               	iorwf	postinc2,w,c
  4268  0017E4  B4D8               	btfsc	status,2,c
  4269  0017E6  D014               	goto	l9803
  4270                           
  4271                           ; BSR set to: 1
  4272  0017E8  0101               	movlb	1	; () banked
  4273  0017EA  EE20 F002          	lfsr	2,2
  4274  0017EE  5116               	movf	__doprnt@pb& (0+255),w,b
  4275  0017F0  26D9               	addwf	fsr2l,f,c
  4276  0017F2  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  4277  0017F4  22DA               	addwfc	fsr2h,f,c
  4278  0017F6  D801               	call	u16568
  4279  0017F8  D090               	goto	l9817
  4280  0017FA                     u16568:
  4281  0017FA  0005               	push	
  4282  0017FC  6EFA               	movwf	pclath,c
  4283  0017FE  50DE               	movf	postinc2,w,c
  4284  001800  6EFD               	movwf	tosl,c
  4285  001802  50DE               	movf	postinc2,w,c
  4286  001804  6EFE               	movwf	tosh,c
  4287  001806  50F8               	movf	tblptru,w,c
  4288  001808  6EFF               	movwf	tosu,c
  4289  00180A  50FA               	movf	pclath,w,c
  4290  00180C  0E2D               	movlw	45
  4291  00180E  0012               	return		;indir
  4292  001810                     l9803:
  4293  001810  C116  FFD9         	movff	__doprnt@pb,fsr2l
  4294  001814  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  4295  001818  CFDE F11C          	movff	postinc2,??__doprnt
  4296  00181C  CFDD F11D          	movff	postdec2,??__doprnt+1
  4297  001820  C11C  FFD9         	movff	??__doprnt,fsr2l
  4298  001824  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  4299  001828  0E2D               	movlw	45
  4300  00182A  6EDF               	movwf	indf2,c
  4301  00182C  D06F               	goto	l9815
  4302  00182E                     l9807:
  4303                           
  4304                           ;doprnt.c: 1478: {
  4305                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4306  00182E  C136  F11C         	movff	__doprnt@prec,??__doprnt
  4307  001832  C137  F11D         	movff	__doprnt@prec+1,??__doprnt+1
  4308  001836  0101               	movlb	1	; () banked
  4309  001838  90D8               	bcf	status,0,c
  4310  00183A  371C               	rlcf	??__doprnt& (0+255),f,b
  4311  00183C  371D               	rlcf	(??__doprnt+1)& (0+255),f,b
  4312  00183E  0101               	movlb	1	; () banked
  4313  001840  90D8               	bcf	status,0,c
  4314  001842  371C               	rlcf	??__doprnt& (0+255),f,b
  4315  001844  371D               	rlcf	(??__doprnt+1)& (0+255),f,b
  4316  001846  0E01               	movlw	low _dpowers
  4317  001848  0101               	movlb	1	; () banked
  4318  00184A  251C               	addwf	??__doprnt& (0+255),w,b
  4319  00184C  6EF6               	movwf	tblptrl,c
  4320  00184E  0E06               	movlw	high _dpowers
  4321  001850  211D               	addwfc	(??__doprnt+1)& (0+255),w,b
  4322  001852  6EF7               	movwf	tblptrh,c
  4323  001854                     	if	0	;There are less than 3 active tblptr bytes
  4324  001854                     	endif
  4325  001854  0009               	tblrd		*+
  4326  001856  CFF5 F092          	movff	tablat,___lldiv@divisor
  4327  00185A  0009               	tblrd		*+
  4328  00185C  CFF5 F093          	movff	tablat,___lldiv@divisor+1
  4329  001860  0009               	tblrd		*+
  4330  001862  CFF5 F094          	movff	tablat,___lldiv@divisor+2
  4331  001866  000A               	tblrd		*-
  4332  001868  CFF5 F095          	movff	tablat,___lldiv@divisor+3
  4333  00186C  C127  F08E         	movff	__doprnt@val,___lldiv@dividend
  4334  001870  C128  F08F         	movff	__doprnt@val+1,___lldiv@dividend+1
  4335  001874  C129  F090         	movff	__doprnt@val+2,___lldiv@dividend+2
  4336  001878  C12A  F091         	movff	__doprnt@val+3,___lldiv@dividend+3
  4337  00187C  ECA7  F027         	call	___lldiv
  4338  001880  C08E  F09B         	movff	?___lldiv,___llmod@dividend
  4339  001884  C08F  F09C         	movff	?___lldiv+1,___llmod@dividend+1
  4340  001888  C090  F09D         	movff	?___lldiv+2,___llmod@dividend+2
  4341  00188C  C091  F09E         	movff	?___lldiv+3,___llmod@dividend+3
  4342  001890  0E0A               	movlw	10
  4343  001892  0100               	movlb	0	; () banked
  4344  001894  6F9F               	movwf	___llmod@divisor& (0+255),b
  4345  001896  0E00               	movlw	0
  4346  001898  6FA0               	movwf	(___llmod@divisor+1)& (0+255),b
  4347  00189A  0E00               	movlw	0
  4348  00189C  6FA1               	movwf	(___llmod@divisor+2)& (0+255),b
  4349  00189E  0E00               	movlw	0
  4350  0018A0  6FA2               	movwf	(___llmod@divisor+3)& (0+255),b
  4351  0018A2  ECAD  F028         	call	___llmod	;wreg free
  4352  0018A6  0100               	movlb	0	; () banked
  4353  0018A8  519B               	movf	?___llmod& (0+255),w,b
  4354  0018AA  0F30               	addlw	48
  4355  0018AC  0101               	movlb	1	; () banked
  4356  0018AE  6F38               	movwf	__doprnt@c& (0+255),b
  4357                           
  4358                           ; BSR set to: 1
  4359                           ;doprnt.c: 1523: }
  4360                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  4361  0018B0  0101               	movlb	1	; () banked
  4362  0018B2  EE20 F002          	lfsr	2,2
  4363  0018B6  5116               	movf	__doprnt@pb& (0+255),w,b
  4364  0018B8  26D9               	addwf	fsr2l,f,c
  4365  0018BA  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  4366  0018BC  22DA               	addwfc	fsr2h,f,c
  4367  0018BE  50DE               	movf	postinc2,w,c
  4368  0018C0  10DE               	iorwf	postinc2,w,c
  4369  0018C2  B4D8               	btfsc	status,2,c
  4370  0018C4  D015               	goto	l9813
  4371                           
  4372                           ; BSR set to: 1
  4373  0018C6  0101               	movlb	1	; () banked
  4374  0018C8  EE20 F002          	lfsr	2,2
  4375  0018CC  5116               	movf	__doprnt@pb& (0+255),w,b
  4376  0018CE  26D9               	addwf	fsr2l,f,c
  4377  0018D0  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  4378  0018D2  22DA               	addwfc	fsr2h,f,c
  4379  0018D4  D801               	call	u16588
  4380  0018D6  D021               	goto	l9817
  4381  0018D8                     u16588:
  4382  0018D8  0005               	push	
  4383  0018DA  6EFA               	movwf	pclath,c
  4384  0018DC  50DE               	movf	postinc2,w,c
  4385  0018DE  6EFD               	movwf	tosl,c
  4386  0018E0  50DE               	movf	postinc2,w,c
  4387  0018E2  6EFE               	movwf	tosh,c
  4388  0018E4  50F8               	movf	tblptru,w,c
  4389  0018E6  6EFF               	movwf	tosu,c
  4390  0018E8  50FA               	movf	pclath,w,c
  4391  0018EA  0101               	movlb	1	; () banked
  4392  0018EC  5138               	movf	__doprnt@c& (0+255),w,b
  4393  0018EE  0012               	return		;indir
  4394  0018F0                     l9813:
  4395  0018F0  C116  FFD9         	movff	__doprnt@pb,fsr2l
  4396  0018F4  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  4397  0018F8  CFDE F11C          	movff	postinc2,??__doprnt
  4398  0018FC  CFDD F11D          	movff	postdec2,??__doprnt+1
  4399  001900  C11C  FFD9         	movff	??__doprnt,fsr2l
  4400  001904  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  4401  001908  C138  FFDF         	movff	__doprnt@c,indf2
  4402  00190C                     l9815:
  4403  00190C  C116  FFD9         	movff	__doprnt@pb,fsr2l
  4404  001910  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  4405  001914  2ADE               	incf	postinc2,f,c
  4406  001916  0E00               	movlw	0
  4407  001918  22DD               	addwfc	postdec2,f,c
  4408  00191A                     l9817:
  4409  00191A  0101               	movlb	1	; () banked
  4410  00191C  0736               	decf	__doprnt@prec& (0+255),f,b
  4411  00191E  A0D8               	btfss	status,0,c
  4412  001920  0737               	decf	(__doprnt@prec+1)& (0+255),f,b
  4413  001922  0101               	movlb	1	; () banked
  4414  001924  2936               	incf	__doprnt@prec& (0+255),w,b
  4415  001926  E183               	bnz	l9807
  4416  001928  0101               	movlb	1	; () banked
  4417  00192A  2937               	incf	(__doprnt@prec+1)& (0+255),w,b
  4418  00192C  A4D8               	btfss	status,2,c
  4419  00192E  D77F               	goto	l9807
  4420  001930                     l9819:
  4421  001930  C118  FFF6         	movff	__doprnt@f,tblptrl
  4422  001934  C119  FFF7         	movff	__doprnt@f+1,tblptrh
  4423  001938  0101               	movlb	1	; () banked
  4424  00193A  4B18               	infsnz	__doprnt@f& (0+255),f,b
  4425  00193C  2B19               	incf	(__doprnt@f+1)& (0+255),f,b
  4426  00193E                     	if	0	;tblptru may be non-zero
  4427  00193E                     	endif
  4428  00193E                     	if	0	;tblptru may be non-zero
  4429  00193E                     	endif
  4430  00193E  0008               	tblrd		*
  4431  001940  CFF5 F138          	movff	tablat,__doprnt@c
  4432  001944  0101               	movlb	1	; () banked
  4433  001946  5138               	movf	__doprnt@c& (0+255),w,b
  4434  001948  A4D8               	btfss	status,2,c
  4435  00194A  EF79  F003         	goto	l9431
  4436  00194E                     l9821:
  4437                           
  4438                           ; BSR set to: 1
  4439                           ;doprnt.c: 1540: return 0;
  4440  00194E  0E00               	movlw	0
  4441  001950  0101               	movlb	1	; () banked
  4442  001952  6F17               	movwf	(?__doprnt+1)& (0+255),b
  4443  001954  0E00               	movlw	0
  4444  001956  6F16               	movwf	?__doprnt& (0+255),b
  4445  001958  0012               	return	
  4446  00195A                     __end_of__doprnt:
  4447                           	opt stack 0
  4448                           tosu	equ	0xFFF
  4449                           tosh	equ	0xFFE
  4450                           tosl	equ	0xFFD
  4451                           pclath	equ	0xFFA
  4452                           tblptru	equ	0xFF8
  4453                           tblptrh	equ	0xFF7
  4454                           tblptrl	equ	0xFF6
  4455                           tablat	equ	0xFF5
  4456                           prodh	equ	0xFF4
  4457                           prodl	equ	0xFF3
  4458                           intcon	equ	0xFF2
  4459                           postinc0	equ	0xFEE
  4460                           wreg	equ	0xFE8
  4461                           indf2	equ	0xFDF
  4462                           postinc2	equ	0xFDE
  4463                           postdec2	equ	0xFDD
  4464                           fsr2h	equ	0xFDA
  4465                           fsr2l	equ	0xFD9
  4466                           status	equ	0xFD8
  4467                           
  4468 ;; *************** function _scale *****************
  4469 ;; Defined at:
  4470 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;  scl             1    wreg     char 
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;  scl             1    3[BANK1 ] char 
  4475 ;; Return value:  Size  Location     Type
  4476 ;;                  3   81[BANK0 ] char 
  4477 ;; Registers used:
  4478 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4479 ;; Tracked objects:
  4480 ;;		On entry : 0/0
  4481 ;;		On exit  : 0/0
  4482 ;;		Unchanged: 0/0
  4483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4484 ;;      Params:         0       3       0       0       0       0       0
  4485 ;;      Locals:         0       0       4       0       0       0       0
  4486 ;;      Temps:          0       0       0       0       0       0       0
  4487 ;;      Totals:         0       3       4       0       0       0       0
  4488 ;;Total ram usage:        7 bytes
  4489 ;; Hardware stack levels used:    1
  4490 ;; Hardware stack levels required when called:    9
  4491 ;; This function calls:
  4492 ;;		___awdiv
  4493 ;;		___awmod
  4494 ;;		___ftmul
  4495 ;;		___wmul
  4496 ;; This function is called by:
  4497 ;;		__doprnt
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           	psect	text3
  4502  002AD2                     __ptext3:
  4503                           	opt stack 0
  4504  002AD2                     _scale:
  4505                           	opt stack 19
  4506                           
  4507                           ; BSR set to: 1
  4508                           ;incstack = 0
  4509                           ;scale@scl stored from wreg
  4510  002AD2  0101               	movlb	1	; () banked
  4511  002AD4  6F03               	movwf	scale@scl& (0+255),b
  4512                           
  4513                           ;doprnt.c: 428: if(scl < 0) {
  4514  002AD6  0101               	movlb	1	; () banked
  4515  002AD8  AF03               	btfss	scale@scl& (0+255),7,b
  4516  002ADA  D12A               	goto	l6229
  4517                           
  4518                           ; BSR set to: 1
  4519                           ;doprnt.c: 429: scl = -scl;
  4520  002ADC  0101               	movlb	1	; () banked
  4521  002ADE  6D03               	negf	scale@scl& (0+255),b
  4522                           
  4523                           ;doprnt.c: 430: if(scl>=110)
  4524  002AE0  0101               	movlb	1	; () banked
  4525  002AE2  5103               	movf	scale@scl& (0+255),w,b
  4526  002AE4  0A80               	xorlw	128
  4527  002AE6  0F12               	addlw	-238
  4528  002AE8  A0D8               	btfss	status,0,c
  4529  002AEA  D0AC               	goto	l6219
  4530                           
  4531                           ; BSR set to: 1
  4532                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4533  002AEC  0E00               	movlw	0
  4534  002AEE  0100               	movlb	0	; () banked
  4535  002AF0  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4536  002AF2  0E03               	movlw	3
  4537  002AF4  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  4538  002AF6  0E00               	movlw	0
  4539  002AF8  0100               	movlb	0	; () banked
  4540  002AFA  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  4541  002AFC  0E0A               	movlw	10
  4542  002AFE  6F96               	movwf	___awdiv@divisor& (0+255),b
  4543  002B00  0E00               	movlw	0
  4544  002B02  0100               	movlb	0	; () banked
  4545  002B04  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  4546  002B06  0E64               	movlw	100
  4547  002B08  6F90               	movwf	___awmod@divisor& (0+255),b
  4548  002B0A  0101               	movlb	1	; () banked
  4549  002B0C  5103               	movf	scale@scl& (0+255),w,b
  4550  002B0E  0100               	movlb	0	; () banked
  4551  002B10  6F8E               	movwf	___awmod@dividend& (0+255),b
  4552  002B12  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  4553  002B14  BF8E               	btfsc	___awmod@dividend& (0+255),7,b
  4554  002B16  078F               	decf	(___awmod@dividend+1)& (0+255),f,b
  4555  002B18  EC5C  F028         	call	___awmod
  4556  002B1C  C08E  F094         	movff	?___awmod,___awdiv@dividend
  4557  002B20  C08F  F095         	movff	?___awmod+1,___awdiv@dividend+1
  4558  002B24  EC48  F027         	call	___awdiv	;wreg free
  4559  002B28  0E09               	movlw	9
  4560  002B2A  0100               	movlb	0	; () banked
  4561  002B2C  2594               	addwf	?___awdiv& (0+255),w,b
  4562  002B2E  0100               	movlb	0	; () banked
  4563  002B30  6F9C               	movwf	___wmul@multiplier& (0+255),b
  4564  002B32  0E00               	movlw	0
  4565  002B34  0100               	movlb	0	; () banked
  4566  002B36  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  4567  002B38  0100               	movlb	0	; () banked
  4568  002B3A  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  4569  002B3C  ECF8  F02B         	call	___wmul	;wreg free
  4570  002B40  0E29               	movlw	low __npowers_
  4571  002B42  0100               	movlb	0	; () banked
  4572  002B44  259C               	addwf	?___wmul& (0+255),w,b
  4573  002B46  6EF6               	movwf	tblptrl,c
  4574  002B48  0E06               	movlw	high __npowers_
  4575  002B4A  0100               	movlb	0	; () banked
  4576  002B4C  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  4577  002B4E  6EF7               	movwf	tblptrh,c
  4578  002B50                     	if	0	;There are less than 3 active tblptr bytes
  4579  002B50                     	endif
  4580  002B50  0009               	tblrd		*+
  4581  002B52  CFF5 F0A5          	movff	tablat,___ftmul@f2
  4582  002B56  0009               	tblrd		*+
  4583  002B58  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  4584  002B5C  000A               	tblrd		*-
  4585  002B5E  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  4586  002B62  0E00               	movlw	0
  4587  002B64  0100               	movlb	0	; () banked
  4588  002B66  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  4589  002B68  0E64               	movlw	100
  4590  002B6A  6F96               	movwf	___awdiv@divisor& (0+255),b
  4591  002B6C  0101               	movlb	1	; () banked
  4592  002B6E  5103               	movf	scale@scl& (0+255),w,b
  4593  002B70  0100               	movlb	0	; () banked
  4594  002B72  6F94               	movwf	___awdiv@dividend& (0+255),b
  4595  002B74  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  4596  002B76  BF94               	btfsc	___awdiv@dividend& (0+255),7,b
  4597  002B78  0795               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4598  002B7A  EC48  F027         	call	___awdiv	;wreg free
  4599  002B7E  0E12               	movlw	18
  4600  002B80  0100               	movlb	0	; () banked
  4601  002B82  2594               	addwf	?___awdiv& (0+255),w,b
  4602  002B84  0100               	movlb	0	; () banked
  4603  002B86  6F9C               	movwf	___wmul@multiplier& (0+255),b
  4604  002B88  0E00               	movlw	0
  4605  002B8A  0100               	movlb	0	; () banked
  4606  002B8C  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  4607  002B8E  0100               	movlb	0	; () banked
  4608  002B90  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  4609  002B92  0E00               	movlw	0
  4610  002B94  0100               	movlb	0	; () banked
  4611  002B96  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4612  002B98  0E03               	movlw	3
  4613  002B9A  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  4614  002B9C  ECF8  F02B         	call	___wmul	;wreg free
  4615  002BA0  0E29               	movlw	low __npowers_
  4616  002BA2  0100               	movlb	0	; () banked
  4617  002BA4  259C               	addwf	?___wmul& (0+255),w,b
  4618  002BA6  6EF6               	movwf	tblptrl,c
  4619  002BA8  0E06               	movlw	high __npowers_
  4620  002BAA  0100               	movlb	0	; () banked
  4621  002BAC  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  4622  002BAE  6EF7               	movwf	tblptrh,c
  4623  002BB0                     	if	0	;There are less than 3 active tblptr bytes
  4624  002BB0                     	endif
  4625  002BB0  0009               	tblrd		*+
  4626  002BB2  CFF5 F0A2          	movff	tablat,___ftmul@f1
  4627  002BB6  0009               	tblrd		*+
  4628  002BB8  CFF5 F0A3          	movff	tablat,___ftmul@f1+1
  4629  002BBC  000A               	tblrd		*-
  4630  002BBE  CFF5 F0A4          	movff	tablat,___ftmul@f1+2
  4631  002BC2  EC53  F021         	call	___ftmul	;wreg free
  4632  002BC6  C0A2  F100         	movff	?___ftmul,_scale$1770
  4633  002BCA  C0A3  F101         	movff	?___ftmul+1,_scale$1770+1
  4634  002BCE  C0A4  F102         	movff	?___ftmul+2,_scale$1770+2
  4635                           
  4636                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4637  002BD2  C100  F0A2         	movff	_scale$1770,___ftmul@f1
  4638  002BD6  C101  F0A3         	movff	_scale$1770+1,___ftmul@f1+1
  4639  002BDA  C102  F0A4         	movff	_scale$1770+2,___ftmul@f1+2
  4640  002BDE  0E00               	movlw	0
  4641  002BE0  0100               	movlb	0	; () banked
  4642  002BE2  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4643  002BE4  0E03               	movlw	3
  4644  002BE6  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  4645  002BE8  0E00               	movlw	0
  4646  002BEA  0100               	movlb	0	; () banked
  4647  002BEC  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  4648  002BEE  0E0A               	movlw	10
  4649  002BF0  6F90               	movwf	___awmod@divisor& (0+255),b
  4650  002BF2  0101               	movlb	1	; () banked
  4651  002BF4  5103               	movf	scale@scl& (0+255),w,b
  4652  002BF6  0100               	movlb	0	; () banked
  4653  002BF8  6F8E               	movwf	___awmod@dividend& (0+255),b
  4654  002BFA  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  4655  002BFC  BF8E               	btfsc	___awmod@dividend& (0+255),7,b
  4656  002BFE  078F               	decf	(___awmod@dividend+1)& (0+255),f,b
  4657  002C00  EC5C  F028         	call	___awmod	;wreg free
  4658  002C04  C08E  F09C         	movff	?___awmod,___wmul@multiplier
  4659  002C08  C08F  F09D         	movff	?___awmod+1,___wmul@multiplier+1
  4660  002C0C  ECF8  F02B         	call	___wmul	;wreg free
  4661  002C10  0E29               	movlw	low __npowers_
  4662  002C12  0100               	movlb	0	; () banked
  4663  002C14  259C               	addwf	?___wmul& (0+255),w,b
  4664  002C16  6EF6               	movwf	tblptrl,c
  4665  002C18  0E06               	movlw	high __npowers_
  4666  002C1A  0100               	movlb	0	; () banked
  4667  002C1C  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  4668  002C1E  6EF7               	movwf	tblptrh,c
  4669  002C20                     	if	0	;There are less than 3 active tblptr bytes
  4670  002C20                     	endif
  4671  002C20  0009               	tblrd		*+
  4672  002C22  CFF5 F0A5          	movff	tablat,___ftmul@f2
  4673  002C26  0009               	tblrd		*+
  4674  002C28  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  4675  002C2C  000A               	tblrd		*-
  4676  002C2E  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  4677  002C32  EC53  F021         	call	___ftmul	;wreg free
  4678  002C36  C0A2  F0B1         	movff	?___ftmul,?_scale
  4679  002C3A  C0A3  F0B2         	movff	?___ftmul+1,?_scale+1
  4680  002C3E  C0A4  F0B3         	movff	?___ftmul+2,?_scale+2
  4681  002C42  0012               	return	
  4682  002C44                     l6219:
  4683                           
  4684                           ;doprnt.c: 432: else if(scl > 10)
  4685  002C44  0101               	movlb	1	; () banked
  4686  002C46  5103               	movf	scale@scl& (0+255),w,b
  4687  002C48  0A80               	xorlw	128
  4688  002C4A  0F75               	addlw	-139
  4689  002C4C  A0D8               	btfss	status,0,c
  4690  002C4E  D05D               	goto	l6225
  4691                           
  4692                           ; BSR set to: 1
  4693                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4694  002C50  0E00               	movlw	0
  4695  002C52  0100               	movlb	0	; () banked
  4696  002C54  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  4697  002C56  0E0A               	movlw	10
  4698  002C58  6F96               	movwf	___awdiv@divisor& (0+255),b
  4699  002C5A  0101               	movlb	1	; () banked
  4700  002C5C  5103               	movf	scale@scl& (0+255),w,b
  4701  002C5E  0100               	movlb	0	; () banked
  4702  002C60  6F94               	movwf	___awdiv@dividend& (0+255),b
  4703  002C62  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  4704  002C64  BF94               	btfsc	___awdiv@dividend& (0+255),7,b
  4705  002C66  0795               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4706  002C68  EC48  F027         	call	___awdiv	;wreg free
  4707  002C6C  0E09               	movlw	9
  4708  002C6E  0100               	movlb	0	; () banked
  4709  002C70  2594               	addwf	?___awdiv& (0+255),w,b
  4710  002C72  0100               	movlb	0	; () banked
  4711  002C74  6F9C               	movwf	___wmul@multiplier& (0+255),b
  4712  002C76  0E00               	movlw	0
  4713  002C78  0100               	movlb	0	; () banked
  4714  002C7A  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  4715  002C7C  0100               	movlb	0	; () banked
  4716  002C7E  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  4717  002C80  0E00               	movlw	0
  4718  002C82  0100               	movlb	0	; () banked
  4719  002C84  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4720  002C86  0E03               	movlw	3
  4721  002C88  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  4722  002C8A  ECF8  F02B         	call	___wmul	;wreg free
  4723  002C8E  0E29               	movlw	low __npowers_
  4724  002C90  0100               	movlb	0	; () banked
  4725  002C92  259C               	addwf	?___wmul& (0+255),w,b
  4726  002C94  6EF6               	movwf	tblptrl,c
  4727  002C96  0E06               	movlw	high __npowers_
  4728  002C98  0100               	movlb	0	; () banked
  4729  002C9A  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  4730  002C9C  6EF7               	movwf	tblptrh,c
  4731  002C9E                     	if	0	;There are less than 3 active tblptr bytes
  4732  002C9E                     	endif
  4733  002C9E  0009               	tblrd		*+
  4734  002CA0  CFF5 F0A2          	movff	tablat,___ftmul@f1
  4735  002CA4  0009               	tblrd		*+
  4736  002CA6  CFF5 F0A3          	movff	tablat,___ftmul@f1+1
  4737  002CAA  000A               	tblrd		*-
  4738  002CAC  CFF5 F0A4          	movff	tablat,___ftmul@f1+2
  4739  002CB0  0E00               	movlw	0
  4740  002CB2  0100               	movlb	0	; () banked
  4741  002CB4  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4742  002CB6  0E03               	movlw	3
  4743  002CB8  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  4744  002CBA  0E00               	movlw	0
  4745  002CBC  0100               	movlb	0	; () banked
  4746  002CBE  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  4747  002CC0  0E0A               	movlw	10
  4748  002CC2  6F90               	movwf	___awmod@divisor& (0+255),b
  4749  002CC4  0101               	movlb	1	; () banked
  4750  002CC6  5103               	movf	scale@scl& (0+255),w,b
  4751  002CC8  0100               	movlb	0	; () banked
  4752  002CCA  6F8E               	movwf	___awmod@dividend& (0+255),b
  4753  002CCC  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  4754  002CCE  BF8E               	btfsc	___awmod@dividend& (0+255),7,b
  4755  002CD0  078F               	decf	(___awmod@dividend+1)& (0+255),f,b
  4756  002CD2  EC5C  F028         	call	___awmod	;wreg free
  4757  002CD6  C08E  F09C         	movff	?___awmod,___wmul@multiplier
  4758  002CDA  C08F  F09D         	movff	?___awmod+1,___wmul@multiplier+1
  4759  002CDE  ECF8  F02B         	call	___wmul	;wreg free
  4760  002CE2  0E29               	movlw	low __npowers_
  4761  002CE4  0100               	movlb	0	; () banked
  4762  002CE6  259C               	addwf	?___wmul& (0+255),w,b
  4763  002CE8  6EF6               	movwf	tblptrl,c
  4764  002CEA  0E06               	movlw	high __npowers_
  4765  002CEC  0100               	movlb	0	; () banked
  4766  002CEE  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  4767  002CF0  6EF7               	movwf	tblptrh,c
  4768  002CF2                     	if	0	;There are less than 3 active tblptr bytes
  4769  002CF2                     	endif
  4770  002CF2  0009               	tblrd		*+
  4771  002CF4  CFF5 F0A5          	movff	tablat,___ftmul@f2
  4772  002CF8  0009               	tblrd		*+
  4773  002CFA  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  4774  002CFE  000A               	tblrd		*-
  4775  002D00  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  4776  002D04  EC53  F021         	call	___ftmul	;wreg free
  4777  002D08  D796               	goto	L3
  4778  002D0A                     l6225:
  4779                           
  4780                           ;doprnt.c: 434: return _npowers_[scl];
  4781  002D0A  0101               	movlb	1	; () banked
  4782  002D0C  5103               	movf	scale@scl& (0+255),w,b
  4783  002D0E  0D03               	mullw	3
  4784  002D10  0E29               	movlw	low __npowers_
  4785  002D12  24F3               	addwf	prodl,w,c
  4786  002D14  6EF6               	movwf	tblptrl,c
  4787  002D16  0E06               	movlw	high __npowers_
  4788  002D18  20F4               	addwfc	prodh,w,c
  4789  002D1A  6EF7               	movwf	tblptrh,c
  4790  002D1C                     	if	0	;There are less than 3 active tblptr bytes
  4791  002D1C                     	endif
  4792  002D1C  0009               	tblrd		*+
  4793  002D1E  CFF5 F0B1          	movff	tablat,?_scale
  4794  002D22  0009               	tblrd		*+
  4795  002D24  CFF5 F0B2          	movff	tablat,?_scale+1
  4796  002D28  000A               	tblrd		*-
  4797  002D2A  CFF5 F0B3          	movff	tablat,?_scale+2
  4798                           
  4799                           ; BSR set to: 1
  4800  002D2E  0012               	return	
  4801  002D30                     l6229:
  4802                           
  4803                           ; BSR set to: 1
  4804                           ;doprnt.c: 435: }
  4805                           ;doprnt.c: 436: if(scl>=110)
  4806  002D30  0101               	movlb	1	; () banked
  4807  002D32  5103               	movf	scale@scl& (0+255),w,b
  4808  002D34  0A80               	xorlw	128
  4809  002D36  0F12               	addlw	-238
  4810  002D38  A0D8               	btfss	status,0,c
  4811  002D3A  D0AC               	goto	l6237
  4812                           
  4813                           ; BSR set to: 1
  4814                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4815  002D3C  0E00               	movlw	0
  4816  002D3E  0100               	movlb	0	; () banked
  4817  002D40  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4818  002D42  0E03               	movlw	3
  4819  002D44  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  4820  002D46  0E00               	movlw	0
  4821  002D48  0100               	movlb	0	; () banked
  4822  002D4A  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  4823  002D4C  0E0A               	movlw	10
  4824  002D4E  6F96               	movwf	___awdiv@divisor& (0+255),b
  4825  002D50  0E00               	movlw	0
  4826  002D52  0100               	movlb	0	; () banked
  4827  002D54  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  4828  002D56  0E64               	movlw	100
  4829  002D58  6F90               	movwf	___awmod@divisor& (0+255),b
  4830  002D5A  0101               	movlb	1	; () banked
  4831  002D5C  5103               	movf	scale@scl& (0+255),w,b
  4832  002D5E  0100               	movlb	0	; () banked
  4833  002D60  6F8E               	movwf	___awmod@dividend& (0+255),b
  4834  002D62  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  4835  002D64  BF8E               	btfsc	___awmod@dividend& (0+255),7,b
  4836  002D66  078F               	decf	(___awmod@dividend+1)& (0+255),f,b
  4837  002D68  EC5C  F028         	call	___awmod	;wreg free
  4838  002D6C  C08E  F094         	movff	?___awmod,___awdiv@dividend
  4839  002D70  C08F  F095         	movff	?___awmod+1,___awdiv@dividend+1
  4840  002D74  EC48  F027         	call	___awdiv	;wreg free
  4841  002D78  0E09               	movlw	9
  4842  002D7A  0100               	movlb	0	; () banked
  4843  002D7C  2594               	addwf	?___awdiv& (0+255),w,b
  4844  002D7E  0100               	movlb	0	; () banked
  4845  002D80  6F9C               	movwf	___wmul@multiplier& (0+255),b
  4846  002D82  0E00               	movlw	0
  4847  002D84  0100               	movlb	0	; () banked
  4848  002D86  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  4849  002D88  0100               	movlb	0	; () banked
  4850  002D8A  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  4851  002D8C  ECF8  F02B         	call	___wmul	;wreg free
  4852  002D90  0E50               	movlw	low __powers_
  4853  002D92  0100               	movlb	0	; () banked
  4854  002D94  259C               	addwf	?___wmul& (0+255),w,b
  4855  002D96  6EF6               	movwf	tblptrl,c
  4856  002D98  0E06               	movlw	high __powers_
  4857  002D9A  0100               	movlb	0	; () banked
  4858  002D9C  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  4859  002D9E  6EF7               	movwf	tblptrh,c
  4860  002DA0                     	if	0	;There are less than 3 active tblptr bytes
  4861  002DA0                     	endif
  4862  002DA0  0009               	tblrd		*+
  4863  002DA2  CFF5 F0A5          	movff	tablat,___ftmul@f2
  4864  002DA6  0009               	tblrd		*+
  4865  002DA8  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  4866  002DAC  000A               	tblrd		*-
  4867  002DAE  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  4868  002DB2  0E00               	movlw	0
  4869  002DB4  0100               	movlb	0	; () banked
  4870  002DB6  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  4871  002DB8  0E64               	movlw	100
  4872  002DBA  6F96               	movwf	___awdiv@divisor& (0+255),b
  4873  002DBC  0101               	movlb	1	; () banked
  4874  002DBE  5103               	movf	scale@scl& (0+255),w,b
  4875  002DC0  0100               	movlb	0	; () banked
  4876  002DC2  6F94               	movwf	___awdiv@dividend& (0+255),b
  4877  002DC4  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  4878  002DC6  BF94               	btfsc	___awdiv@dividend& (0+255),7,b
  4879  002DC8  0795               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4880  002DCA  EC48  F027         	call	___awdiv	;wreg free
  4881  002DCE  0E12               	movlw	18
  4882  002DD0  0100               	movlb	0	; () banked
  4883  002DD2  2594               	addwf	?___awdiv& (0+255),w,b
  4884  002DD4  0100               	movlb	0	; () banked
  4885  002DD6  6F9C               	movwf	___wmul@multiplier& (0+255),b
  4886  002DD8  0E00               	movlw	0
  4887  002DDA  0100               	movlb	0	; () banked
  4888  002DDC  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  4889  002DDE  0100               	movlb	0	; () banked
  4890  002DE0  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  4891  002DE2  0E00               	movlw	0
  4892  002DE4  0100               	movlb	0	; () banked
  4893  002DE6  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4894  002DE8  0E03               	movlw	3
  4895  002DEA  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  4896  002DEC  ECF8  F02B         	call	___wmul	;wreg free
  4897  002DF0  0E50               	movlw	low __powers_
  4898  002DF2  0100               	movlb	0	; () banked
  4899  002DF4  259C               	addwf	?___wmul& (0+255),w,b
  4900  002DF6  6EF6               	movwf	tblptrl,c
  4901  002DF8  0E06               	movlw	high __powers_
  4902  002DFA  0100               	movlb	0	; () banked
  4903  002DFC  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  4904  002DFE  6EF7               	movwf	tblptrh,c
  4905  002E00                     	if	0	;There are less than 3 active tblptr bytes
  4906  002E00                     	endif
  4907  002E00  0009               	tblrd		*+
  4908  002E02  CFF5 F0A2          	movff	tablat,___ftmul@f1
  4909  002E06  0009               	tblrd		*+
  4910  002E08  CFF5 F0A3          	movff	tablat,___ftmul@f1+1
  4911  002E0C  000A               	tblrd		*-
  4912  002E0E  CFF5 F0A4          	movff	tablat,___ftmul@f1+2
  4913  002E12  EC53  F021         	call	___ftmul	;wreg free
  4914  002E16  C0A2  F100         	movff	?___ftmul,_scale$1770
  4915  002E1A  C0A3  F101         	movff	?___ftmul+1,_scale$1770+1
  4916  002E1E  C0A4  F102         	movff	?___ftmul+2,_scale$1770+2
  4917                           
  4918                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4919  002E22  C100  F0A2         	movff	_scale$1770,___ftmul@f1
  4920  002E26  C101  F0A3         	movff	_scale$1770+1,___ftmul@f1+1
  4921  002E2A  C102  F0A4         	movff	_scale$1770+2,___ftmul@f1+2
  4922  002E2E  0E00               	movlw	0
  4923  002E30  0100               	movlb	0	; () banked
  4924  002E32  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4925  002E34  0E03               	movlw	3
  4926  002E36  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  4927  002E38  0E00               	movlw	0
  4928  002E3A  0100               	movlb	0	; () banked
  4929  002E3C  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  4930  002E3E  0E0A               	movlw	10
  4931  002E40  6F90               	movwf	___awmod@divisor& (0+255),b
  4932  002E42  0101               	movlb	1	; () banked
  4933  002E44  5103               	movf	scale@scl& (0+255),w,b
  4934  002E46  0100               	movlb	0	; () banked
  4935  002E48  6F8E               	movwf	___awmod@dividend& (0+255),b
  4936  002E4A  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  4937  002E4C  BF8E               	btfsc	___awmod@dividend& (0+255),7,b
  4938  002E4E  078F               	decf	(___awmod@dividend+1)& (0+255),f,b
  4939  002E50  EC5C  F028         	call	___awmod	;wreg free
  4940  002E54  C08E  F09C         	movff	?___awmod,___wmul@multiplier
  4941  002E58  C08F  F09D         	movff	?___awmod+1,___wmul@multiplier+1
  4942  002E5C  ECF8  F02B         	call	___wmul	;wreg free
  4943  002E60  0E50               	movlw	low __powers_
  4944  002E62  0100               	movlb	0	; () banked
  4945  002E64  259C               	addwf	?___wmul& (0+255),w,b
  4946  002E66  6EF6               	movwf	tblptrl,c
  4947  002E68  0E06               	movlw	high __powers_
  4948  002E6A  0100               	movlb	0	; () banked
  4949  002E6C  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  4950  002E6E  6EF7               	movwf	tblptrh,c
  4951  002E70                     	if	0	;There are less than 3 active tblptr bytes
  4952  002E70                     	endif
  4953  002E70  0009               	tblrd		*+
  4954  002E72  CFF5 F0A5          	movff	tablat,___ftmul@f2
  4955  002E76  0009               	tblrd		*+
  4956  002E78  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  4957  002E7C  000A               	tblrd		*-
  4958  002E7E  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  4959  002E82  EC53  F021         	call	___ftmul	;wreg free
  4960  002E86  C0A2  F0B1         	movff	?___ftmul,?_scale
  4961  002E8A  C0A3  F0B2         	movff	?___ftmul+1,?_scale+1
  4962  002E8E  C0A4  F0B3         	movff	?___ftmul+2,?_scale+2
  4963  002E92  0012               	return	
  4964  002E94                     l6237:
  4965                           
  4966                           ;doprnt.c: 438: else if(scl > 10)
  4967  002E94  0101               	movlb	1	; () banked
  4968  002E96  5103               	movf	scale@scl& (0+255),w,b
  4969  002E98  0A80               	xorlw	128
  4970  002E9A  0F75               	addlw	-139
  4971  002E9C  A0D8               	btfss	status,0,c
  4972  002E9E  D05D               	goto	l6243
  4973                           
  4974                           ; BSR set to: 1
  4975                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4976  002EA0  0E00               	movlw	0
  4977  002EA2  0100               	movlb	0	; () banked
  4978  002EA4  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  4979  002EA6  0E0A               	movlw	10
  4980  002EA8  6F96               	movwf	___awdiv@divisor& (0+255),b
  4981  002EAA  0101               	movlb	1	; () banked
  4982  002EAC  5103               	movf	scale@scl& (0+255),w,b
  4983  002EAE  0100               	movlb	0	; () banked
  4984  002EB0  6F94               	movwf	___awdiv@dividend& (0+255),b
  4985  002EB2  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  4986  002EB4  BF94               	btfsc	___awdiv@dividend& (0+255),7,b
  4987  002EB6  0795               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4988  002EB8  EC48  F027         	call	___awdiv	;wreg free
  4989  002EBC  0E09               	movlw	9
  4990  002EBE  0100               	movlb	0	; () banked
  4991  002EC0  2594               	addwf	?___awdiv& (0+255),w,b
  4992  002EC2  0100               	movlb	0	; () banked
  4993  002EC4  6F9C               	movwf	___wmul@multiplier& (0+255),b
  4994  002EC6  0E00               	movlw	0
  4995  002EC8  0100               	movlb	0	; () banked
  4996  002ECA  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  4997  002ECC  0100               	movlb	0	; () banked
  4998  002ECE  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  4999  002ED0  0E00               	movlw	0
  5000  002ED2  0100               	movlb	0	; () banked
  5001  002ED4  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5002  002ED6  0E03               	movlw	3
  5003  002ED8  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5004  002EDA  ECF8  F02B         	call	___wmul	;wreg free
  5005  002EDE  0E50               	movlw	low __powers_
  5006  002EE0  0100               	movlb	0	; () banked
  5007  002EE2  259C               	addwf	?___wmul& (0+255),w,b
  5008  002EE4  6EF6               	movwf	tblptrl,c
  5009  002EE6  0E06               	movlw	high __powers_
  5010  002EE8  0100               	movlb	0	; () banked
  5011  002EEA  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5012  002EEC  6EF7               	movwf	tblptrh,c
  5013  002EEE                     	if	0	;There are less than 3 active tblptr bytes
  5014  002EEE                     	endif
  5015  002EEE  0009               	tblrd		*+
  5016  002EF0  CFF5 F0A2          	movff	tablat,___ftmul@f1
  5017  002EF4  0009               	tblrd		*+
  5018  002EF6  CFF5 F0A3          	movff	tablat,___ftmul@f1+1
  5019  002EFA  000A               	tblrd		*-
  5020  002EFC  CFF5 F0A4          	movff	tablat,___ftmul@f1+2
  5021  002F00  0E00               	movlw	0
  5022  002F02  0100               	movlb	0	; () banked
  5023  002F04  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5024  002F06  0E03               	movlw	3
  5025  002F08  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5026  002F0A  0E00               	movlw	0
  5027  002F0C  0100               	movlb	0	; () banked
  5028  002F0E  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  5029  002F10  0E0A               	movlw	10
  5030  002F12  6F90               	movwf	___awmod@divisor& (0+255),b
  5031  002F14  0101               	movlb	1	; () banked
  5032  002F16  5103               	movf	scale@scl& (0+255),w,b
  5033  002F18  0100               	movlb	0	; () banked
  5034  002F1A  6F8E               	movwf	___awmod@dividend& (0+255),b
  5035  002F1C  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  5036  002F1E  BF8E               	btfsc	___awmod@dividend& (0+255),7,b
  5037  002F20  078F               	decf	(___awmod@dividend+1)& (0+255),f,b
  5038  002F22  EC5C  F028         	call	___awmod	;wreg free
  5039  002F26  C08E  F09C         	movff	?___awmod,___wmul@multiplier
  5040  002F2A  C08F  F09D         	movff	?___awmod+1,___wmul@multiplier+1
  5041  002F2E  ECF8  F02B         	call	___wmul	;wreg free
  5042  002F32  0E50               	movlw	low __powers_
  5043  002F34  0100               	movlb	0	; () banked
  5044  002F36  259C               	addwf	?___wmul& (0+255),w,b
  5045  002F38  6EF6               	movwf	tblptrl,c
  5046  002F3A  0E06               	movlw	high __powers_
  5047  002F3C  0100               	movlb	0	; () banked
  5048  002F3E  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5049  002F40  6EF7               	movwf	tblptrh,c
  5050  002F42                     	if	0	;There are less than 3 active tblptr bytes
  5051  002F42                     	endif
  5052  002F42  0009               	tblrd		*+
  5053  002F44  CFF5 F0A5          	movff	tablat,___ftmul@f2
  5054  002F48  0009               	tblrd		*+
  5055  002F4A  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  5056  002F4E  000A               	tblrd		*-
  5057  002F50  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  5058  002F54  EC53  F021         	call	___ftmul	;wreg free
  5059  002F58  D796               	goto	L4
  5060  002F5A                     l6243:
  5061                           
  5062                           ;doprnt.c: 440: return _powers_[scl];
  5063  002F5A  0101               	movlb	1	; () banked
  5064  002F5C  5103               	movf	scale@scl& (0+255),w,b
  5065  002F5E  0D03               	mullw	3
  5066  002F60  0E50               	movlw	low __powers_
  5067  002F62  24F3               	addwf	prodl,w,c
  5068  002F64  6EF6               	movwf	tblptrl,c
  5069  002F66  0E06               	movlw	high __powers_
  5070  002F68  20F4               	addwfc	prodh,w,c
  5071  002F6A  6EF7               	movwf	tblptrh,c
  5072  002F6C                     	if	0	;There are less than 3 active tblptr bytes
  5073  002F6C                     	endif
  5074  002F6C  0009               	tblrd		*+
  5075  002F6E  CFF5 F0B1          	movff	tablat,?_scale
  5076  002F72  0009               	tblrd		*+
  5077  002F74  CFF5 F0B2          	movff	tablat,?_scale+1
  5078  002F78  000A               	tblrd		*-
  5079  002F7A  CFF5 F0B3          	movff	tablat,?_scale+2
  5080  002F7E  0012               	return	
  5081  002F80                     __end_of_scale:
  5082                           	opt stack 0
  5083                           tosu	equ	0xFFF
  5084                           tosh	equ	0xFFE
  5085                           tosl	equ	0xFFD
  5086                           pclath	equ	0xFFA
  5087                           tblptru	equ	0xFF8
  5088                           tblptrh	equ	0xFF7
  5089                           tblptrl	equ	0xFF6
  5090                           tablat	equ	0xFF5
  5091                           prodh	equ	0xFF4
  5092                           prodl	equ	0xFF3
  5093                           intcon	equ	0xFF2
  5094                           postinc0	equ	0xFEE
  5095                           wreg	equ	0xFE8
  5096                           indf2	equ	0xFDF
  5097                           postinc2	equ	0xFDE
  5098                           postdec2	equ	0xFDD
  5099                           fsr2h	equ	0xFDA
  5100                           fsr2l	equ	0xFD9
  5101                           status	equ	0xFD8
  5102                           
  5103 ;; *************** function _putch *****************
  5104 ;; Defined at:
  5105 ;;		line 111 in file "mcc_generated_files/eusart1.c"
  5106 ;; Parameters:    Size  Location     Type
  5107 ;;  txData          1    wreg     unsigned char 
  5108 ;; Auto vars:     Size  Location     Type
  5109 ;;  txData          1   47[BANK0 ] unsigned char 
  5110 ;; Return value:  Size  Location     Type
  5111 ;;                  1    wreg      void 
  5112 ;; Registers used:
  5113 ;;		wreg, status,2, cstack
  5114 ;; Tracked objects:
  5115 ;;		On entry : 0/0
  5116 ;;		On exit  : 0/0
  5117 ;;		Unchanged: 0/0
  5118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5119 ;;      Params:         0       0       0       0       0       0       0
  5120 ;;      Locals:         0       1       0       0       0       0       0
  5121 ;;      Temps:          0       0       0       0       0       0       0
  5122 ;;      Totals:         0       1       0       0       0       0       0
  5123 ;;Total ram usage:        1 bytes
  5124 ;; Hardware stack levels used:    1
  5125 ;; Hardware stack levels required when called:    8
  5126 ;; This function calls:
  5127 ;;		_EUSART1_Write
  5128 ;; This function is called by:
  5129 ;;		i2__doprnt
  5130 ;;		__doprnt
  5131 ;; This function uses a non-reentrant model
  5132 ;;
  5133                           
  5134                           	psect	text4
  5135  005AA0                     __ptext4:
  5136                           	opt stack 0
  5137  005AA0                     _putch:
  5138                           	opt stack 0
  5139                           
  5140                           ;Skip over the trampoline to the duplicate function for level 2
  5141  005AA0  B25F               	btfsc	btemp,1,c
  5142  005AA2  EF84  F02D         	goto	i2_putch
  5143  005AA6                     _putch$intlevel0:
  5144                           	opt stack 20
  5145                           
  5146                           ;incstack = 0
  5147                           ;putch@txData stored from wreg
  5148  005AA6  0100               	movlb	0	; () banked
  5149  005AA8  6F8F               	movwf	putch@txData& (0+255),b
  5150                           
  5151                           ;eusart1.c: 113: EUSART1_Write(txData);
  5152  005AAA  0100               	movlb	0	; () banked
  5153  005AAC  518F               	movf	putch@txData& (0+255),w,b
  5154  005AAE  EC5A  F02D         	call	_EUSART1_Write
  5155  005AB2  0012               	return		;funcret
  5156  005AB4                     __end_of_putch:
  5157                           	opt stack 0
  5158                           tosu	equ	0xFFF
  5159                           tosh	equ	0xFFE
  5160                           tosl	equ	0xFFD
  5161                           pclath	equ	0xFFA
  5162                           tblptru	equ	0xFF8
  5163                           tblptrh	equ	0xFF7
  5164                           tblptrl	equ	0xFF6
  5165                           tablat	equ	0xFF5
  5166                           prodh	equ	0xFF4
  5167                           prodl	equ	0xFF3
  5168                           intcon	equ	0xFF2
  5169                           postinc0	equ	0xFEE
  5170                           wreg	equ	0xFE8
  5171                           indf2	equ	0xFDF
  5172                           postinc2	equ	0xFDE
  5173                           postdec2	equ	0xFDD
  5174                           fsr2h	equ	0xFDA
  5175                           fsr2l	equ	0xFD9
  5176                           status	equ	0xFD8
  5177                           
  5178 ;; *************** function _EUSART1_Write *****************
  5179 ;; Defined at:
  5180 ;;		line 97 in file "mcc_generated_files/eusart1.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;  txData          1    wreg     unsigned char 
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;  txData          1   46[BANK0 ] unsigned char 
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  1    wreg      void 
  5187 ;; Registers used:
  5188 ;;		wreg
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5194 ;;      Params:         0       0       0       0       0       0       0
  5195 ;;      Locals:         0       1       0       0       0       0       0
  5196 ;;      Temps:          0       0       0       0       0       0       0
  5197 ;;      Totals:         0       1       0       0       0       0       0
  5198 ;;Total ram usage:        1 bytes
  5199 ;; Hardware stack levels used:    1
  5200 ;; Hardware stack levels required when called:    7
  5201 ;; This function calls:
  5202 ;;		Nothing
  5203 ;; This function is called by:
  5204 ;;		_putch
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208                           	psect	text5
  5209  005AB4                     __ptext5:
  5210                           	opt stack 0
  5211  005AB4                     _EUSART1_Write:
  5212                           	opt stack 20
  5213                           
  5214                           ;incstack = 0
  5215                           ;EUSART1_Write@txData stored from wreg
  5216  005AB4  0100               	movlb	0	; () banked
  5217  005AB6  6F8E               	movwf	EUSART1_Write@txData& (0+255),b
  5218  005AB8                     l243:
  5219  005AB8  A89E               	btfss	3998,4,c	;volatile
  5220  005ABA  D7FE               	goto	l243
  5221                           
  5222                           ;eusart1.c: 101: }
  5223                           ;eusart1.c: 103: TXREG1 = txData;
  5224  005ABC  C08E  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  5225  005AC0  0012               	return		;funcret
  5226  005AC2                     __end_of_EUSART1_Write:
  5227                           	opt stack 0
  5228                           tosu	equ	0xFFF
  5229                           tosh	equ	0xFFE
  5230                           tosl	equ	0xFFD
  5231                           pclath	equ	0xFFA
  5232                           tblptru	equ	0xFF8
  5233                           tblptrh	equ	0xFF7
  5234                           tblptrl	equ	0xFF6
  5235                           tablat	equ	0xFF5
  5236                           prodh	equ	0xFF4
  5237                           prodl	equ	0xFF3
  5238                           intcon	equ	0xFF2
  5239                           postinc0	equ	0xFEE
  5240                           wreg	equ	0xFE8
  5241                           indf2	equ	0xFDF
  5242                           postinc2	equ	0xFDE
  5243                           postdec2	equ	0xFDD
  5244                           fsr2h	equ	0xFDA
  5245                           fsr2l	equ	0xFD9
  5246                           status	equ	0xFD8
  5247                           
  5248 ;; *************** function _isdigit *****************
  5249 ;; Defined at:
  5250 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;  c               1    wreg     unsigned char 
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;  c               1   48[BANK0 ] unsigned char 
  5255 ;; Return value:  Size  Location     Type
  5256 ;;		None               void
  5257 ;; Registers used:
  5258 ;;		wreg, status,2, status,0
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5264 ;;      Params:         0       0       0       0       0       0       0
  5265 ;;      Locals:         0       2       0       0       0       0       0
  5266 ;;      Temps:          0       1       0       0       0       0       0
  5267 ;;      Totals:         0       3       0       0       0       0       0
  5268 ;;Total ram usage:        3 bytes
  5269 ;; Hardware stack levels used:    1
  5270 ;; Hardware stack levels required when called:    7
  5271 ;; This function calls:
  5272 ;;		Nothing
  5273 ;; This function is called by:
  5274 ;;		__doprnt
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278                           	psect	text6
  5279  00597C                     __ptext6:
  5280                           	opt stack 0
  5281  00597C                     _isdigit:
  5282                           	opt stack 21
  5283                           
  5284                           ;incstack = 0
  5285                           ;isdigit@c stored from wreg
  5286  00597C  0100               	movlb	0	; () banked
  5287  00597E  6F90               	movwf	isdigit@c& (0+255),b
  5288  005980  0E00               	movlw	0
  5289  005982  0100               	movlb	0	; () banked
  5290  005984  6F8F               	movwf	_isdigit$1301& (0+255),b
  5291                           
  5292                           ; BSR set to: 0
  5293  005986  0E3A               	movlw	58
  5294  005988  0100               	movlb	0	; () banked
  5295  00598A  6190               	cpfslt	isdigit@c& (0+255),b
  5296  00598C  D007               	goto	l4519
  5297                           
  5298                           ; BSR set to: 0
  5299  00598E  0E2F               	movlw	47
  5300  005990  0100               	movlb	0	; () banked
  5301  005992  6590               	cpfsgt	isdigit@c& (0+255),b
  5302  005994  D003               	goto	l4519
  5303                           
  5304                           ; BSR set to: 0
  5305  005996  0E01               	movlw	1
  5306  005998  0100               	movlb	0	; () banked
  5307  00599A  6F8F               	movwf	_isdigit$1301& (0+255),b
  5308  00599C                     l4519:
  5309                           
  5310                           ; BSR set to: 0
  5311  00599C  C08F  F08E         	movff	_isdigit$1301,??_isdigit
  5312  0059A0  0100               	movlb	0	; () banked
  5313  0059A2  318E               	rrcf	??_isdigit& (0+255),w,b
  5314  0059A4  0012               	return	
  5315  0059A6                     __end_of_isdigit:
  5316                           	opt stack 0
  5317                           tosu	equ	0xFFF
  5318                           tosh	equ	0xFFE
  5319                           tosl	equ	0xFFD
  5320                           pclath	equ	0xFFA
  5321                           tblptru	equ	0xFF8
  5322                           tblptrh	equ	0xFF7
  5323                           tblptrl	equ	0xFF6
  5324                           tablat	equ	0xFF5
  5325                           prodh	equ	0xFF4
  5326                           prodl	equ	0xFF3
  5327                           intcon	equ	0xFF2
  5328                           postinc0	equ	0xFEE
  5329                           wreg	equ	0xFE8
  5330                           indf2	equ	0xFDF
  5331                           postinc2	equ	0xFDE
  5332                           postdec2	equ	0xFDD
  5333                           fsr2h	equ	0xFDA
  5334                           fsr2l	equ	0xFD9
  5335                           status	equ	0xFD8
  5336                           
  5337 ;; *************** function _fround *****************
  5338 ;; Defined at:
  5339 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  prec            1    wreg     unsigned char 
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;  prec            1    6[BANK1 ] unsigned char 
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  3   81[BANK0 ] unsigned char 
  5346 ;; Registers used:
  5347 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5353 ;;      Params:         0       3       0       0       0       0       0
  5354 ;;      Locals:         0       0       7       0       0       0       0
  5355 ;;      Temps:          0       0       0       0       0       0       0
  5356 ;;      Totals:         0       3       7       0       0       0       0
  5357 ;;Total ram usage:       10 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; Hardware stack levels required when called:    9
  5360 ;; This function calls:
  5361 ;;		___awdiv
  5362 ;;		___awmod
  5363 ;;		___ftmul
  5364 ;;		___wmul
  5365 ;; This function is called by:
  5366 ;;		__doprnt
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           	psect	text7
  5371  003370                     __ptext7:
  5372                           	opt stack 0
  5373  003370                     _fround:
  5374                           	opt stack 19
  5375                           
  5376                           ; BSR set to: 0
  5377                           ;incstack = 0
  5378                           ;fround@prec stored from wreg
  5379  003370  0101               	movlb	1	; () banked
  5380  003372  6F06               	movwf	fround@prec& (0+255),b
  5381                           
  5382                           ;doprnt.c: 413: if(prec>=110)
  5383  003374  0E6D               	movlw	109
  5384  003376  0101               	movlb	1	; () banked
  5385  003378  6506               	cpfsgt	fround@prec& (0+255),b
  5386  00337A  D0BA               	goto	l6197
  5387                           
  5388                           ; BSR set to: 1
  5389                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5390  00337C  0E00               	movlw	0
  5391  00337E  0100               	movlb	0	; () banked
  5392  003380  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5393  003382  0E03               	movlw	3
  5394  003384  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5395  003386  0E00               	movlw	0
  5396  003388  0100               	movlb	0	; () banked
  5397  00338A  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5398  00338C  0E0A               	movlw	10
  5399  00338E  6F96               	movwf	___awdiv@divisor& (0+255),b
  5400  003390  0E00               	movlw	0
  5401  003392  0100               	movlb	0	; () banked
  5402  003394  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  5403  003396  0E64               	movlw	100
  5404  003398  6F90               	movwf	___awmod@divisor& (0+255),b
  5405  00339A  C106  F08E         	movff	fround@prec,___awmod@dividend
  5406  00339E  0100               	movlb	0	; () banked
  5407  0033A0  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  5408  0033A2  EC5C  F028         	call	___awmod	;wreg free
  5409  0033A6  C08E  F094         	movff	?___awmod,___awdiv@dividend
  5410  0033AA  C08F  F095         	movff	?___awmod+1,___awdiv@dividend+1
  5411  0033AE  EC48  F027         	call	___awdiv	;wreg free
  5412  0033B2  0E09               	movlw	9
  5413  0033B4  0100               	movlb	0	; () banked
  5414  0033B6  2594               	addwf	?___awdiv& (0+255),w,b
  5415  0033B8  0100               	movlb	0	; () banked
  5416  0033BA  6F9C               	movwf	___wmul@multiplier& (0+255),b
  5417  0033BC  0E00               	movlw	0
  5418  0033BE  0100               	movlb	0	; () banked
  5419  0033C0  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  5420  0033C2  0100               	movlb	0	; () banked
  5421  0033C4  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  5422  0033C6  ECF8  F02B         	call	___wmul	;wreg free
  5423  0033CA  0E29               	movlw	low __npowers_
  5424  0033CC  0100               	movlb	0	; () banked
  5425  0033CE  259C               	addwf	?___wmul& (0+255),w,b
  5426  0033D0  6EF6               	movwf	tblptrl,c
  5427  0033D2  0E06               	movlw	high __npowers_
  5428  0033D4  0100               	movlb	0	; () banked
  5429  0033D6  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5430  0033D8  6EF7               	movwf	tblptrh,c
  5431  0033DA                     	if	0	;There are less than 3 active tblptr bytes
  5432  0033DA                     	endif
  5433  0033DA  0009               	tblrd		*+
  5434  0033DC  CFF5 F0A5          	movff	tablat,___ftmul@f2
  5435  0033E0  0009               	tblrd		*+
  5436  0033E2  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  5437  0033E6  000A               	tblrd		*-
  5438  0033E8  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  5439  0033EC  0E00               	movlw	0
  5440  0033EE  0100               	movlb	0	; () banked
  5441  0033F0  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5442  0033F2  0E64               	movlw	100
  5443  0033F4  6F96               	movwf	___awdiv@divisor& (0+255),b
  5444  0033F6  C106  F094         	movff	fround@prec,___awdiv@dividend
  5445  0033FA  0100               	movlb	0	; () banked
  5446  0033FC  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  5447  0033FE  EC48  F027         	call	___awdiv	;wreg free
  5448  003402  0E12               	movlw	18
  5449  003404  0100               	movlb	0	; () banked
  5450  003406  2594               	addwf	?___awdiv& (0+255),w,b
  5451  003408  0100               	movlb	0	; () banked
  5452  00340A  6F9C               	movwf	___wmul@multiplier& (0+255),b
  5453  00340C  0E00               	movlw	0
  5454  00340E  0100               	movlb	0	; () banked
  5455  003410  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  5456  003412  0100               	movlb	0	; () banked
  5457  003414  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  5458  003416  0E00               	movlw	0
  5459  003418  0100               	movlb	0	; () banked
  5460  00341A  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5461  00341C  0E03               	movlw	3
  5462  00341E  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5463  003420  ECF8  F02B         	call	___wmul	;wreg free
  5464  003424  0E29               	movlw	low __npowers_
  5465  003426  0100               	movlb	0	; () banked
  5466  003428  259C               	addwf	?___wmul& (0+255),w,b
  5467  00342A  6EF6               	movwf	tblptrl,c
  5468  00342C  0E06               	movlw	high __npowers_
  5469  00342E  0100               	movlb	0	; () banked
  5470  003430  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5471  003432  6EF7               	movwf	tblptrh,c
  5472  003434                     	if	0	;There are less than 3 active tblptr bytes
  5473  003434                     	endif
  5474  003434  0009               	tblrd		*+
  5475  003436  CFF5 F0A2          	movff	tablat,___ftmul@f1
  5476  00343A  0009               	tblrd		*+
  5477  00343C  CFF5 F0A3          	movff	tablat,___ftmul@f1+1
  5478  003440  000A               	tblrd		*-
  5479  003442  CFF5 F0A4          	movff	tablat,___ftmul@f1+2
  5480  003446  EC53  F021         	call	___ftmul	;wreg free
  5481  00344A  C0A2  F103         	movff	?___ftmul,_fround$1768
  5482  00344E  C0A3  F104         	movff	?___ftmul+1,_fround$1768+1
  5483  003452  C0A4  F105         	movff	?___ftmul+2,_fround$1768+2
  5484                           
  5485                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5486  003456  0E00               	movlw	0
  5487  003458  0100               	movlb	0	; () banked
  5488  00345A  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5489  00345C  0E03               	movlw	3
  5490  00345E  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5491  003460  0E00               	movlw	0
  5492  003462  0100               	movlb	0	; () banked
  5493  003464  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  5494  003466  0E0A               	movlw	10
  5495  003468  6F90               	movwf	___awmod@divisor& (0+255),b
  5496  00346A  C106  F08E         	movff	fround@prec,___awmod@dividend
  5497  00346E  0100               	movlb	0	; () banked
  5498  003470  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  5499  003472  EC5C  F028         	call	___awmod	;wreg free
  5500  003476  C08E  F09C         	movff	?___awmod,___wmul@multiplier
  5501  00347A  C08F  F09D         	movff	?___awmod+1,___wmul@multiplier+1
  5502  00347E  ECF8  F02B         	call	___wmul	;wreg free
  5503  003482  0E29               	movlw	low __npowers_
  5504  003484  0100               	movlb	0	; () banked
  5505  003486  259C               	addwf	?___wmul& (0+255),w,b
  5506  003488  6EF6               	movwf	tblptrl,c
  5507  00348A  0E06               	movlw	high __npowers_
  5508  00348C  0100               	movlb	0	; () banked
  5509  00348E  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5510  003490  6EF7               	movwf	tblptrh,c
  5511  003492                     	if	0	;There are less than 3 active tblptr bytes
  5512  003492                     	endif
  5513  003492  0009               	tblrd		*+
  5514  003494  CFF5 F0A5          	movff	tablat,___ftmul@f2
  5515  003498  0009               	tblrd		*+
  5516  00349A  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  5517  00349E  000A               	tblrd		*-
  5518  0034A0  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  5519  0034A4  C103  F0A2         	movff	_fround$1768,___ftmul@f1
  5520  0034A8  C104  F0A3         	movff	_fround$1768+1,___ftmul@f1+1
  5521  0034AC  C105  F0A4         	movff	_fround$1768+2,___ftmul@f1+2
  5522  0034B0  EC53  F021         	call	___ftmul	;wreg free
  5523  0034B4  C0A2  F100         	movff	?___ftmul,_fround$1769
  5524  0034B8  C0A3  F101         	movff	?___ftmul+1,_fround$1769+1
  5525  0034BC  C0A4  F102         	movff	?___ftmul+2,_fround$1769+2
  5526                           
  5527                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5528  0034C0  C100  F0A2         	movff	_fround$1769,___ftmul@f1
  5529  0034C4  C101  F0A3         	movff	_fround$1769+1,___ftmul@f1+1
  5530  0034C8  C102  F0A4         	movff	_fround$1769+2,___ftmul@f1+2
  5531  0034CC  0E00               	movlw	0
  5532  0034CE  0100               	movlb	0	; () banked
  5533  0034D0  6FA5               	movwf	___ftmul@f2& (0+255),b
  5534  0034D2  0E00               	movlw	0
  5535  0034D4  0100               	movlb	0	; () banked
  5536  0034D6  6FA6               	movwf	(___ftmul@f2+1)& (0+255),b
  5537  0034D8  0E3F               	movlw	63
  5538  0034DA  0100               	movlb	0	; () banked
  5539  0034DC  6FA7               	movwf	(___ftmul@f2+2)& (0+255),b
  5540  0034DE  EC53  F021         	call	___ftmul	;wreg free
  5541  0034E2  C0A2  F0B1         	movff	?___ftmul,?_fround
  5542  0034E6  C0A3  F0B2         	movff	?___ftmul+1,?_fround+1
  5543  0034EA  C0A4  F0B3         	movff	?___ftmul+2,?_fround+2
  5544  0034EE  0012               	return	
  5545  0034F0                     l6197:
  5546                           
  5547                           ;doprnt.c: 415: else if(prec > 10)
  5548  0034F0  0E0A               	movlw	10
  5549  0034F2  0101               	movlb	1	; () banked
  5550  0034F4  6506               	cpfsgt	fround@prec& (0+255),b
  5551  0034F6  D06E               	goto	l6205
  5552                           
  5553                           ; BSR set to: 1
  5554                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5555  0034F8  0E00               	movlw	0
  5556  0034FA  0100               	movlb	0	; () banked
  5557  0034FC  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5558  0034FE  0E03               	movlw	3
  5559  003500  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5560  003502  0E00               	movlw	0
  5561  003504  0100               	movlb	0	; () banked
  5562  003506  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  5563  003508  0E0A               	movlw	10
  5564  00350A  6F90               	movwf	___awmod@divisor& (0+255),b
  5565  00350C  C106  F08E         	movff	fround@prec,___awmod@dividend
  5566  003510  0100               	movlb	0	; () banked
  5567  003512  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  5568  003514  EC5C  F028         	call	___awmod	;wreg free
  5569  003518  C08E  F09C         	movff	?___awmod,___wmul@multiplier
  5570  00351C  C08F  F09D         	movff	?___awmod+1,___wmul@multiplier+1
  5571  003520  ECF8  F02B         	call	___wmul	;wreg free
  5572  003524  0E29               	movlw	low __npowers_
  5573  003526  0100               	movlb	0	; () banked
  5574  003528  259C               	addwf	?___wmul& (0+255),w,b
  5575  00352A  6EF6               	movwf	tblptrl,c
  5576  00352C  0E06               	movlw	high __npowers_
  5577  00352E  0100               	movlb	0	; () banked
  5578  003530  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5579  003532  6EF7               	movwf	tblptrh,c
  5580  003534                     	if	0	;There are less than 3 active tblptr bytes
  5581  003534                     	endif
  5582  003534  0009               	tblrd		*+
  5583  003536  CFF5 F0A5          	movff	tablat,___ftmul@f2
  5584  00353A  0009               	tblrd		*+
  5585  00353C  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  5586  003540  000A               	tblrd		*-
  5587  003542  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  5588  003546  0E00               	movlw	0
  5589  003548  0100               	movlb	0	; () banked
  5590  00354A  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5591  00354C  0E0A               	movlw	10
  5592  00354E  6F96               	movwf	___awdiv@divisor& (0+255),b
  5593  003550  C106  F094         	movff	fround@prec,___awdiv@dividend
  5594  003554  0100               	movlb	0	; () banked
  5595  003556  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  5596  003558  EC48  F027         	call	___awdiv	;wreg free
  5597  00355C  0E09               	movlw	9
  5598  00355E  0100               	movlb	0	; () banked
  5599  003560  2594               	addwf	?___awdiv& (0+255),w,b
  5600  003562  0100               	movlb	0	; () banked
  5601  003564  6F9C               	movwf	___wmul@multiplier& (0+255),b
  5602  003566  0E00               	movlw	0
  5603  003568  0100               	movlb	0	; () banked
  5604  00356A  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  5605  00356C  0100               	movlb	0	; () banked
  5606  00356E  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  5607  003570  0E00               	movlw	0
  5608  003572  0100               	movlb	0	; () banked
  5609  003574  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5610  003576  0E03               	movlw	3
  5611  003578  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5612  00357A  ECF8  F02B         	call	___wmul	;wreg free
  5613  00357E  0E29               	movlw	low __npowers_
  5614  003580  0100               	movlb	0	; () banked
  5615  003582  259C               	addwf	?___wmul& (0+255),w,b
  5616  003584  6EF6               	movwf	tblptrl,c
  5617  003586  0E06               	movlw	high __npowers_
  5618  003588  0100               	movlb	0	; () banked
  5619  00358A  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5620  00358C  6EF7               	movwf	tblptrh,c
  5621  00358E                     	if	0	;There are less than 3 active tblptr bytes
  5622  00358E                     	endif
  5623  00358E  0009               	tblrd		*+
  5624  003590  CFF5 F0A2          	movff	tablat,___ftmul@f1
  5625  003594  0009               	tblrd		*+
  5626  003596  CFF5 F0A3          	movff	tablat,___ftmul@f1+1
  5627  00359A  000A               	tblrd		*-
  5628  00359C  CFF5 F0A4          	movff	tablat,___ftmul@f1+2
  5629  0035A0  EC53  F021         	call	___ftmul	;wreg free
  5630  0035A4  C0A2  F103         	movff	?___ftmul,_fround$1768
  5631  0035A8  C0A3  F104         	movff	?___ftmul+1,_fround$1768+1
  5632  0035AC  C0A4  F105         	movff	?___ftmul+2,_fround$1768+2
  5633                           
  5634                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5635  0035B0  C103  F0A2         	movff	_fround$1768,___ftmul@f1
  5636  0035B4  C104  F0A3         	movff	_fround$1768+1,___ftmul@f1+1
  5637  0035B8  C105  F0A4         	movff	_fround$1768+2,___ftmul@f1+2
  5638  0035BC  0E00               	movlw	0
  5639  0035BE  0100               	movlb	0	; () banked
  5640  0035C0  6FA5               	movwf	___ftmul@f2& (0+255),b
  5641  0035C2  0E00               	movlw	0
  5642  0035C4  0100               	movlb	0	; () banked
  5643  0035C6  6FA6               	movwf	(___ftmul@f2+1)& (0+255),b
  5644  0035C8  0E3F               	movlw	63
  5645  0035CA  0100               	movlb	0	; () banked
  5646  0035CC  6FA7               	movwf	(___ftmul@f2+2)& (0+255),b
  5647  0035CE  EC53  F021         	call	___ftmul	;wreg free
  5648  0035D2  D787               	goto	L5
  5649  0035D4                     l6205:
  5650                           
  5651                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5652  0035D4  0101               	movlb	1	; () banked
  5653  0035D6  5106               	movf	fround@prec& (0+255),w,b
  5654  0035D8  0D03               	mullw	3
  5655  0035DA  0E29               	movlw	low __npowers_
  5656  0035DC  24F3               	addwf	prodl,w,c
  5657  0035DE  6EF6               	movwf	tblptrl,c
  5658  0035E0  0E06               	movlw	high __npowers_
  5659  0035E2  20F4               	addwfc	prodh,w,c
  5660  0035E4  6EF7               	movwf	tblptrh,c
  5661  0035E6                     	if	0	;There are less than 3 active tblptr bytes
  5662  0035E6                     	endif
  5663  0035E6  0009               	tblrd		*+
  5664  0035E8  CFF5 F0A2          	movff	tablat,___ftmul@f1
  5665  0035EC  0009               	tblrd		*+
  5666  0035EE  CFF5 F0A3          	movff	tablat,___ftmul@f1+1
  5667  0035F2  000A               	tblrd		*-
  5668  0035F4  CFF5 F0A4          	movff	tablat,___ftmul@f1+2
  5669  0035F8  0E00               	movlw	0
  5670  0035FA  0100               	movlb	0	; () banked
  5671  0035FC  6FA5               	movwf	___ftmul@f2& (0+255),b
  5672  0035FE  0E00               	movlw	0
  5673  003600  0100               	movlb	0	; () banked
  5674  003602  6FA6               	movwf	(___ftmul@f2+1)& (0+255),b
  5675  003604  0E3F               	movlw	63
  5676  003606  0100               	movlb	0	; () banked
  5677  003608  6FA7               	movwf	(___ftmul@f2+2)& (0+255),b
  5678  00360A  EC53  F021         	call	___ftmul	;wreg free
  5679  00360E  C0A2  F0B1         	movff	?___ftmul,?_fround
  5680  003612  C0A3  F0B2         	movff	?___ftmul+1,?_fround+1
  5681  003616  C0A4  F0B3         	movff	?___ftmul+2,?_fround+2
  5682  00361A  0012               	return	
  5683  00361C                     __end_of_fround:
  5684                           	opt stack 0
  5685                           tosu	equ	0xFFF
  5686                           tosh	equ	0xFFE
  5687                           tosl	equ	0xFFD
  5688                           pclath	equ	0xFFA
  5689                           tblptru	equ	0xFF8
  5690                           tblptrh	equ	0xFF7
  5691                           tblptrl	equ	0xFF6
  5692                           tablat	equ	0xFF5
  5693                           prodh	equ	0xFF4
  5694                           prodl	equ	0xFF3
  5695                           intcon	equ	0xFF2
  5696                           postinc0	equ	0xFEE
  5697                           wreg	equ	0xFE8
  5698                           indf2	equ	0xFDF
  5699                           postinc2	equ	0xFDE
  5700                           postdec2	equ	0xFDD
  5701                           fsr2h	equ	0xFDA
  5702                           fsr2l	equ	0xFD9
  5703                           status	equ	0xFD8
  5704                           
  5705 ;; *************** function ___wmul *****************
  5706 ;; Defined at:
  5707 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;  multiplier      2   60[BANK0 ] unsigned int 
  5710 ;;  multiplicand    2   62[BANK0 ] unsigned int 
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;  product         2   64[BANK0 ] unsigned int 
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  2   60[BANK0 ] unsigned int 
  5715 ;; Registers used:
  5716 ;;		wreg, status,2, status,0, prodl, prodh
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5722 ;;      Params:         0       4       0       0       0       0       0
  5723 ;;      Locals:         0       2       0       0       0       0       0
  5724 ;;      Temps:          0       0       0       0       0       0       0
  5725 ;;      Totals:         0       6       0       0       0       0       0
  5726 ;;Total ram usage:        6 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; Hardware stack levels required when called:    7
  5729 ;; This function calls:
  5730 ;;		Nothing
  5731 ;; This function is called by:
  5732 ;;		_fround
  5733 ;;		_scale
  5734 ;;		__doprnt
  5735 ;; This function uses a non-reentrant model
  5736 ;;
  5737                           
  5738                           	psect	text8
  5739  0057F0                     __ptext8:
  5740                           	opt stack 0
  5741  0057F0                     ___wmul:
  5742                           	opt stack 20
  5743                           
  5744                           ;incstack = 0
  5745  0057F0  0100               	movlb	0	; () banked
  5746  0057F2  519C               	movf	___wmul@multiplier& (0+255),w,b
  5747  0057F4  0100               	movlb	0	; () banked
  5748  0057F6  039E               	mulwf	___wmul@multiplicand& (0+255),b
  5749  0057F8  CFF3 F0A0          	movff	prodl,___wmul@product
  5750  0057FC  CFF4 F0A1          	movff	prodh,___wmul@product+1
  5751  005800  0100               	movlb	0	; () banked
  5752  005802  519C               	movf	___wmul@multiplier& (0+255),w,b
  5753  005804  0100               	movlb	0	; () banked
  5754  005806  039F               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5755  005808  50F3               	movf	prodl,w,c
  5756  00580A  0100               	movlb	0	; () banked
  5757  00580C  27A1               	addwf	(___wmul@product+1)& (0+255),f,b
  5758  00580E  0100               	movlb	0	; () banked
  5759  005810  519D               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5760  005812  0100               	movlb	0	; () banked
  5761  005814  039E               	mulwf	___wmul@multiplicand& (0+255),b
  5762  005816  50F3               	movf	prodl,w,c
  5763  005818  0100               	movlb	0	; () banked
  5764  00581A  27A1               	addwf	(___wmul@product+1)& (0+255),f,b
  5765                           
  5766                           ; BSR set to: 0
  5767  00581C  C0A0  F09C         	movff	___wmul@product,?___wmul
  5768  005820  C0A1  F09D         	movff	___wmul@product+1,?___wmul+1
  5769  005824  0012               	return	
  5770  005826                     __end_of___wmul:
  5771                           	opt stack 0
  5772                           tosu	equ	0xFFF
  5773                           tosh	equ	0xFFE
  5774                           tosl	equ	0xFFD
  5775                           pclath	equ	0xFFA
  5776                           tblptru	equ	0xFF8
  5777                           tblptrh	equ	0xFF7
  5778                           tblptrl	equ	0xFF6
  5779                           tablat	equ	0xFF5
  5780                           prodh	equ	0xFF4
  5781                           prodl	equ	0xFF3
  5782                           intcon	equ	0xFF2
  5783                           postinc0	equ	0xFEE
  5784                           wreg	equ	0xFE8
  5785                           indf2	equ	0xFDF
  5786                           postinc2	equ	0xFDE
  5787                           postdec2	equ	0xFDD
  5788                           fsr2h	equ	0xFDA
  5789                           fsr2l	equ	0xFD9
  5790                           status	equ	0xFD8
  5791                           
  5792 ;; *************** function ___ftmul *****************
  5793 ;; Defined at:
  5794 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;  f1              3   66[BANK0 ] float 
  5797 ;;  f2              3   69[BANK0 ] float 
  5798 ;; Auto vars:     Size  Location     Type
  5799 ;;  f3_as_produc    3   76[BANK0 ] unsigned um
  5800 ;;  sign            1   80[BANK0 ] unsigned char 
  5801 ;;  cntr            1   79[BANK0 ] unsigned char 
  5802 ;;  exp             1   75[BANK0 ] unsigned char 
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  3   66[BANK0 ] float 
  5805 ;; Registers used:
  5806 ;;		wreg, status,2, status,0, cstack
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5812 ;;      Params:         0       6       0       0       0       0       0
  5813 ;;      Locals:         0       6       0       0       0       0       0
  5814 ;;      Temps:          0       3       0       0       0       0       0
  5815 ;;      Totals:         0      15       0       0       0       0       0
  5816 ;;Total ram usage:       15 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; Hardware stack levels required when called:    8
  5819 ;; This function calls:
  5820 ;;		___ftpack
  5821 ;; This function is called by:
  5822 ;;		_fround
  5823 ;;		_scale
  5824 ;;		__doprnt
  5825 ;; This function uses a non-reentrant model
  5826 ;;
  5827                           
  5828                           	psect	text9
  5829  0042A6                     __ptext9:
  5830                           	opt stack 0
  5831  0042A6                     ___ftmul:
  5832                           	opt stack 19
  5833                           
  5834                           ; BSR set to: 0
  5835                           ;incstack = 0
  5836  0042A6  C0A4  F0A8         	movff	___ftmul@f1+2,??___ftmul
  5837  0042AA  0100               	movlb	0	; () banked
  5838  0042AC  6BA9               	clrf	(??___ftmul+1)& (0+255),b
  5839  0042AE  6BAA               	clrf	(??___ftmul+2)& (0+255),b
  5840  0042B0  0100               	movlb	0	; () banked
  5841  0042B2  35A3               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  5842  0042B4  0100               	movlb	0	; () banked
  5843  0042B6  37A8               	rlcf	??___ftmul& (0+255),f,b
  5844  0042B8  E301               	bnc	u8561
  5845  0042BA  81A9               	bsf	(??___ftmul+1)& (0+255),0,b
  5846  0042BC                     u8561:
  5847  0042BC  0100               	movlb	0	; () banked
  5848  0042BE  51A8               	movf	??___ftmul& (0+255),w,b
  5849  0042C0  0100               	movlb	0	; () banked
  5850  0042C2  6FAB               	movwf	___ftmul@exp& (0+255),b
  5851  0042C4  0100               	movlb	0	; () banked
  5852  0042C6  51AB               	movf	___ftmul@exp& (0+255),w,b
  5853  0042C8  A4D8               	btfss	status,2,c
  5854  0042CA  D00A               	goto	l6065
  5855                           
  5856                           ; BSR set to: 0
  5857  0042CC  0E00               	movlw	0
  5858  0042CE  0100               	movlb	0	; () banked
  5859  0042D0  6FA2               	movwf	?___ftmul& (0+255),b
  5860  0042D2  0E00               	movlw	0
  5861  0042D4  0100               	movlb	0	; () banked
  5862  0042D6  6FA3               	movwf	(?___ftmul+1)& (0+255),b
  5863  0042D8  0E00               	movlw	0
  5864  0042DA  0100               	movlb	0	; () banked
  5865  0042DC  6FA4               	movwf	(?___ftmul+2)& (0+255),b
  5866                           
  5867                           ; BSR set to: 0
  5868  0042DE  0012               	return	
  5869  0042E0                     l6065:
  5870                           
  5871                           ; BSR set to: 0
  5872  0042E0  C0A7  F0A8         	movff	___ftmul@f2+2,??___ftmul
  5873  0042E4  0100               	movlb	0	; () banked
  5874  0042E6  6BA9               	clrf	(??___ftmul+1)& (0+255),b
  5875  0042E8  6BAA               	clrf	(??___ftmul+2)& (0+255),b
  5876  0042EA  0100               	movlb	0	; () banked
  5877  0042EC  35A6               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  5878  0042EE  0100               	movlb	0	; () banked
  5879  0042F0  37A8               	rlcf	??___ftmul& (0+255),f,b
  5880  0042F2  E301               	bnc	u8581
  5881  0042F4  81A9               	bsf	(??___ftmul+1)& (0+255),0,b
  5882  0042F6                     u8581:
  5883  0042F6  0100               	movlb	0	; () banked
  5884  0042F8  51A8               	movf	??___ftmul& (0+255),w,b
  5885  0042FA  0100               	movlb	0	; () banked
  5886  0042FC  6FB0               	movwf	___ftmul@sign& (0+255),b
  5887  0042FE  0100               	movlb	0	; () banked
  5888  004300  51B0               	movf	___ftmul@sign& (0+255),w,b
  5889  004302  A4D8               	btfss	status,2,c
  5890  004304  D00A               	goto	l6071
  5891                           
  5892                           ; BSR set to: 0
  5893  004306  0E00               	movlw	0
  5894  004308  0100               	movlb	0	; () banked
  5895  00430A  6FA2               	movwf	?___ftmul& (0+255),b
  5896  00430C  0E00               	movlw	0
  5897  00430E  0100               	movlb	0	; () banked
  5898  004310  6FA3               	movwf	(?___ftmul+1)& (0+255),b
  5899  004312  0E00               	movlw	0
  5900  004314  0100               	movlb	0	; () banked
  5901  004316  6FA4               	movwf	(?___ftmul+2)& (0+255),b
  5902                           
  5903                           ; BSR set to: 0
  5904  004318  0012               	return	
  5905  00431A                     l6071:
  5906                           
  5907                           ; BSR set to: 0
  5908  00431A  0100               	movlb	0	; () banked
  5909  00431C  51B0               	movf	___ftmul@sign& (0+255),w,b
  5910  00431E  0F7B               	addlw	123
  5911  004320  0100               	movlb	0	; () banked
  5912  004322  27AB               	addwf	___ftmul@exp& (0+255),f,b
  5913                           
  5914                           ; BSR set to: 0
  5915  004324  C0A4  F0B0         	movff	___ftmul@f1+2,___ftmul@sign
  5916  004328  0100               	movlb	0	; () banked
  5917  00432A  51A7               	movf	(___ftmul@f2+2)& (0+255),w,b
  5918  00432C  0100               	movlb	0	; () banked
  5919  00432E  1BB0               	xorwf	___ftmul@sign& (0+255),f,b
  5920  004330  0E80               	movlw	128
  5921  004332  0100               	movlb	0	; () banked
  5922  004334  17B0               	andwf	___ftmul@sign& (0+255),f,b
  5923                           
  5924                           ; BSR set to: 0
  5925  004336  0100               	movlb	0	; () banked
  5926  004338  8FA3               	bsf	(___ftmul@f1+1)& (0+255),7,b
  5927                           
  5928                           ; BSR set to: 0
  5929  00433A  0100               	movlb	0	; () banked
  5930  00433C  8FA6               	bsf	(___ftmul@f2+1)& (0+255),7,b
  5931                           
  5932                           ; BSR set to: 0
  5933  00433E  0EFF               	movlw	255
  5934  004340  0100               	movlb	0	; () banked
  5935  004342  17A5               	andwf	___ftmul@f2& (0+255),f,b
  5936  004344  0EFF               	movlw	255
  5937  004346  0100               	movlb	0	; () banked
  5938  004348  17A6               	andwf	(___ftmul@f2+1)& (0+255),f,b
  5939  00434A  0E00               	movlw	0
  5940  00434C  0100               	movlb	0	; () banked
  5941  00434E  17A7               	andwf	(___ftmul@f2+2)& (0+255),f,b
  5942                           
  5943                           ; BSR set to: 0
  5944  004350  0E00               	movlw	0
  5945  004352  0100               	movlb	0	; () banked
  5946  004354  6FAC               	movwf	___ftmul@f3_as_product& (0+255),b
  5947  004356  0E00               	movlw	0
  5948  004358  0100               	movlb	0	; () banked
  5949  00435A  6FAD               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  5950  00435C  0E00               	movlw	0
  5951  00435E  0100               	movlb	0	; () banked
  5952  004360  6FAE               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  5953                           
  5954                           ; BSR set to: 0
  5955  004362  0E07               	movlw	7
  5956  004364  0100               	movlb	0	; () banked
  5957  004366  6FAF               	movwf	___ftmul@cntr& (0+255),b
  5958  004368                     l6085:
  5959                           
  5960                           ; BSR set to: 0
  5961  004368  0100               	movlb	0	; () banked
  5962  00436A  A1A2               	btfss	___ftmul@f1& (0+255),0,b
  5963  00436C  D00C               	goto	l6089
  5964                           
  5965                           ; BSR set to: 0
  5966  00436E  0100               	movlb	0	; () banked
  5967  004370  51A5               	movf	___ftmul@f2& (0+255),w,b
  5968  004372  0100               	movlb	0	; () banked
  5969  004374  27AC               	addwf	___ftmul@f3_as_product& (0+255),f,b
  5970  004376  0100               	movlb	0	; () banked
  5971  004378  51A6               	movf	(___ftmul@f2+1)& (0+255),w,b
  5972  00437A  0100               	movlb	0	; () banked
  5973  00437C  23AD               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  5974  00437E  0100               	movlb	0	; () banked
  5975  004380  51A7               	movf	(___ftmul@f2+2)& (0+255),w,b
  5976  004382  0100               	movlb	0	; () banked
  5977  004384  23AE               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  5978  004386                     l6089:
  5979                           
  5980                           ; BSR set to: 0
  5981  004386  0100               	movlb	0	; () banked
  5982  004388  90D8               	bcf	status,0,c
  5983  00438A  33A4               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  5984  00438C  33A3               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  5985  00438E  33A2               	rrcf	___ftmul@f1& (0+255),f,b
  5986  004390  0100               	movlb	0	; () banked
  5987  004392  90D8               	bcf	status,0,c
  5988  004394  37A5               	rlcf	___ftmul@f2& (0+255),f,b
  5989  004396  37A6               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  5990  004398  37A7               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  5991                           
  5992                           ; BSR set to: 0
  5993  00439A  0100               	movlb	0	; () banked
  5994  00439C  2FAF               	decfsz	___ftmul@cntr& (0+255),f,b
  5995  00439E  D7E4               	goto	l6085
  5996                           
  5997                           ; BSR set to: 0
  5998                           
  5999                           ; BSR set to: 0
  6000  0043A0  0E09               	movlw	9
  6001  0043A2  0100               	movlb	0	; () banked
  6002  0043A4  6FAF               	movwf	___ftmul@cntr& (0+255),b
  6003  0043A6                     l6095:
  6004                           
  6005                           ; BSR set to: 0
  6006  0043A6  0100               	movlb	0	; () banked
  6007  0043A8  A1A2               	btfss	___ftmul@f1& (0+255),0,b
  6008  0043AA  D00C               	goto	l6099
  6009                           
  6010                           ; BSR set to: 0
  6011  0043AC  0100               	movlb	0	; () banked
  6012  0043AE  51A5               	movf	___ftmul@f2& (0+255),w,b
  6013  0043B0  0100               	movlb	0	; () banked
  6014  0043B2  27AC               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6015  0043B4  0100               	movlb	0	; () banked
  6016  0043B6  51A6               	movf	(___ftmul@f2+1)& (0+255),w,b
  6017  0043B8  0100               	movlb	0	; () banked
  6018  0043BA  23AD               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6019  0043BC  0100               	movlb	0	; () banked
  6020  0043BE  51A7               	movf	(___ftmul@f2+2)& (0+255),w,b
  6021  0043C0  0100               	movlb	0	; () banked
  6022  0043C2  23AE               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6023  0043C4                     l6099:
  6024                           
  6025                           ; BSR set to: 0
  6026  0043C4  0100               	movlb	0	; () banked
  6027  0043C6  90D8               	bcf	status,0,c
  6028  0043C8  33A4               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6029  0043CA  33A3               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6030  0043CC  33A2               	rrcf	___ftmul@f1& (0+255),f,b
  6031  0043CE  0100               	movlb	0	; () banked
  6032  0043D0  90D8               	bcf	status,0,c
  6033  0043D2  33AE               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  6034  0043D4  33AD               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  6035  0043D6  33AC               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  6036                           
  6037                           ; BSR set to: 0
  6038  0043D8  0100               	movlb	0	; () banked
  6039  0043DA  2FAF               	decfsz	___ftmul@cntr& (0+255),f,b
  6040  0043DC  D7E4               	goto	l6095
  6041                           
  6042                           ; BSR set to: 0
  6043                           
  6044                           ; BSR set to: 0
  6045  0043DE  C0AC  F08E         	movff	___ftmul@f3_as_product,___ftpack@arg
  6046  0043E2  C0AD  F08F         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6047  0043E6  C0AE  F090         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6048  0043EA  C0AB  F091         	movff	___ftmul@exp,___ftpack@exp
  6049  0043EE  C0B0  F092         	movff	___ftmul@sign,___ftpack@sign
  6050  0043F2  EC77  F024         	call	___ftpack	;wreg free
  6051  0043F6  C08E  F0A2         	movff	?___ftpack,?___ftmul
  6052  0043FA  C08F  F0A3         	movff	?___ftpack+1,?___ftmul+1
  6053  0043FE  C090  F0A4         	movff	?___ftpack+2,?___ftmul+2
  6054  004402  0012               	return	
  6055  004404                     __end_of___ftmul:
  6056                           	opt stack 0
  6057                           tosu	equ	0xFFF
  6058                           tosh	equ	0xFFE
  6059                           tosl	equ	0xFFD
  6060                           pclath	equ	0xFFA
  6061                           tblptru	equ	0xFF8
  6062                           tblptrh	equ	0xFF7
  6063                           tblptrl	equ	0xFF6
  6064                           tablat	equ	0xFF5
  6065                           prodh	equ	0xFF4
  6066                           prodl	equ	0xFF3
  6067                           intcon	equ	0xFF2
  6068                           postinc0	equ	0xFEE
  6069                           wreg	equ	0xFE8
  6070                           indf2	equ	0xFDF
  6071                           postinc2	equ	0xFDE
  6072                           postdec2	equ	0xFDD
  6073                           fsr2h	equ	0xFDA
  6074                           fsr2l	equ	0xFD9
  6075                           status	equ	0xFD8
  6076                           
  6077 ;; *************** function ___awmod *****************
  6078 ;; Defined at:
  6079 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  6080 ;; Parameters:    Size  Location     Type
  6081 ;;  dividend        2   46[BANK0 ] int 
  6082 ;;  divisor         2   48[BANK0 ] int 
  6083 ;; Auto vars:     Size  Location     Type
  6084 ;;  sign            1   51[BANK0 ] unsigned char 
  6085 ;;  counter         1   50[BANK0 ] unsigned char 
  6086 ;; Return value:  Size  Location     Type
  6087 ;;                  2   46[BANK0 ] int 
  6088 ;; Registers used:
  6089 ;;		wreg, status,2, status,0
  6090 ;; Tracked objects:
  6091 ;;		On entry : 0/0
  6092 ;;		On exit  : 0/0
  6093 ;;		Unchanged: 0/0
  6094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6095 ;;      Params:         0       4       0       0       0       0       0
  6096 ;;      Locals:         0       2       0       0       0       0       0
  6097 ;;      Temps:          0       0       0       0       0       0       0
  6098 ;;      Totals:         0       6       0       0       0       0       0
  6099 ;;Total ram usage:        6 bytes
  6100 ;; Hardware stack levels used:    1
  6101 ;; Hardware stack levels required when called:    7
  6102 ;; This function calls:
  6103 ;;		Nothing
  6104 ;; This function is called by:
  6105 ;;		_fround
  6106 ;;		_scale
  6107 ;; This function uses a non-reentrant model
  6108 ;;
  6109                           
  6110                           	psect	text10
  6111  0050B8                     __ptext10:
  6112                           	opt stack 0
  6113  0050B8                     ___awmod:
  6114                           	opt stack 20
  6115                           
  6116                           ;incstack = 0
  6117  0050B8  0E00               	movlw	0
  6118  0050BA  0100               	movlb	0	; () banked
  6119  0050BC  6F93               	movwf	___awmod@sign& (0+255),b
  6120                           
  6121                           ; BSR set to: 0
  6122  0050BE  0100               	movlb	0	; () banked
  6123  0050C0  AF8F               	btfss	(___awmod@dividend+1)& (0+255),7,b
  6124  0050C2  D008               	goto	l6159
  6125                           
  6126                           ; BSR set to: 0
  6127  0050C4  0100               	movlb	0	; () banked
  6128  0050C6  6D8E               	negf	___awmod@dividend& (0+255),b
  6129  0050C8  1F8F               	comf	(___awmod@dividend+1)& (0+255),f,b
  6130  0050CA  B0D8               	btfsc	status,0,c
  6131  0050CC  2B8F               	incf	(___awmod@dividend+1)& (0+255),f,b
  6132                           
  6133                           ; BSR set to: 0
  6134  0050CE  0E01               	movlw	1
  6135  0050D0  0100               	movlb	0	; () banked
  6136  0050D2  6F93               	movwf	___awmod@sign& (0+255),b
  6137  0050D4                     l6159:
  6138                           
  6139                           ; BSR set to: 0
  6140  0050D4  0100               	movlb	0	; () banked
  6141  0050D6  AF91               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6142  0050D8  D005               	goto	l6163
  6143                           
  6144                           ; BSR set to: 0
  6145  0050DA  0100               	movlb	0	; () banked
  6146  0050DC  6D90               	negf	___awmod@divisor& (0+255),b
  6147  0050DE  1F91               	comf	(___awmod@divisor+1)& (0+255),f,b
  6148  0050E0  B0D8               	btfsc	status,0,c
  6149  0050E2  2B91               	incf	(___awmod@divisor+1)& (0+255),f,b
  6150  0050E4                     l6163:
  6151                           
  6152                           ; BSR set to: 0
  6153  0050E4  0100               	movlb	0	; () banked
  6154  0050E6  5190               	movf	___awmod@divisor& (0+255),w,b
  6155  0050E8  0100               	movlb	0	; () banked
  6156  0050EA  1191               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6157  0050EC  B4D8               	btfsc	status,2,c
  6158  0050EE  D026               	goto	l6179
  6159                           
  6160                           ; BSR set to: 0
  6161  0050F0  0E01               	movlw	1
  6162  0050F2  0100               	movlb	0	; () banked
  6163  0050F4  6F92               	movwf	___awmod@counter& (0+255),b
  6164  0050F6  D006               	goto	l6169
  6165  0050F8                     l6167:
  6166                           
  6167                           ; BSR set to: 0
  6168  0050F8  0100               	movlb	0	; () banked
  6169  0050FA  90D8               	bcf	status,0,c
  6170  0050FC  3790               	rlcf	___awmod@divisor& (0+255),f,b
  6171  0050FE  3791               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6172  005100  0100               	movlb	0	; () banked
  6173  005102  2B92               	incf	___awmod@counter& (0+255),f,b
  6174  005104                     l6169:
  6175                           
  6176                           ; BSR set to: 0
  6177  005104  0100               	movlb	0	; () banked
  6178  005106  AF91               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6179  005108  D7F7               	goto	l6167
  6180  00510A                     l6171:
  6181                           
  6182                           ; BSR set to: 0
  6183  00510A  0100               	movlb	0	; () banked
  6184  00510C  5190               	movf	___awmod@divisor& (0+255),w,b
  6185  00510E  0100               	movlb	0	; () banked
  6186  005110  5D8E               	subwf	___awmod@dividend& (0+255),w,b
  6187  005112  0100               	movlb	0	; () banked
  6188  005114  5191               	movf	(___awmod@divisor+1)& (0+255),w,b
  6189  005116  0100               	movlb	0	; () banked
  6190  005118  598F               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6191  00511A  A0D8               	btfss	status,0,c
  6192  00511C  D008               	goto	l6175
  6193                           
  6194                           ; BSR set to: 0
  6195  00511E  0100               	movlb	0	; () banked
  6196  005120  5190               	movf	___awmod@divisor& (0+255),w,b
  6197  005122  0100               	movlb	0	; () banked
  6198  005124  5F8E               	subwf	___awmod@dividend& (0+255),f,b
  6199  005126  0100               	movlb	0	; () banked
  6200  005128  5191               	movf	(___awmod@divisor+1)& (0+255),w,b
  6201  00512A  0100               	movlb	0	; () banked
  6202  00512C  5B8F               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6203  00512E                     l6175:
  6204                           
  6205                           ; BSR set to: 0
  6206  00512E  0100               	movlb	0	; () banked
  6207  005130  90D8               	bcf	status,0,c
  6208  005132  3391               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6209  005134  3390               	rrcf	___awmod@divisor& (0+255),f,b
  6210                           
  6211                           ; BSR set to: 0
  6212  005136  0100               	movlb	0	; () banked
  6213  005138  2F92               	decfsz	___awmod@counter& (0+255),f,b
  6214  00513A  D7E7               	goto	l6171
  6215  00513C                     l6179:
  6216                           
  6217                           ; BSR set to: 0
  6218  00513C  0100               	movlb	0	; () banked
  6219  00513E  5193               	movf	___awmod@sign& (0+255),w,b
  6220  005140  0100               	movlb	0	; () banked
  6221  005142  B4D8               	btfsc	status,2,c
  6222  005144  D005               	goto	l6183
  6223                           
  6224                           ; BSR set to: 0
  6225  005146  0100               	movlb	0	; () banked
  6226  005148  6D8E               	negf	___awmod@dividend& (0+255),b
  6227  00514A  1F8F               	comf	(___awmod@dividend+1)& (0+255),f,b
  6228  00514C  B0D8               	btfsc	status,0,c
  6229  00514E  2B8F               	incf	(___awmod@dividend+1)& (0+255),f,b
  6230  005150                     l6183:
  6231                           
  6232                           ; BSR set to: 0
  6233  005150  C08E  F08E         	movff	___awmod@dividend,?___awmod
  6234  005154  C08F  F08F         	movff	___awmod@dividend+1,?___awmod+1
  6235  005158  0012               	return	
  6236  00515A                     __end_of___awmod:
  6237                           	opt stack 0
  6238                           tosu	equ	0xFFF
  6239                           tosh	equ	0xFFE
  6240                           tosl	equ	0xFFD
  6241                           pclath	equ	0xFFA
  6242                           tblptru	equ	0xFF8
  6243                           tblptrh	equ	0xFF7
  6244                           tblptrl	equ	0xFF6
  6245                           tablat	equ	0xFF5
  6246                           prodh	equ	0xFF4
  6247                           prodl	equ	0xFF3
  6248                           intcon	equ	0xFF2
  6249                           postinc0	equ	0xFEE
  6250                           wreg	equ	0xFE8
  6251                           indf2	equ	0xFDF
  6252                           postinc2	equ	0xFDE
  6253                           postdec2	equ	0xFDD
  6254                           fsr2h	equ	0xFDA
  6255                           fsr2l	equ	0xFD9
  6256                           status	equ	0xFD8
  6257                           
  6258 ;; *************** function ___awdiv *****************
  6259 ;; Defined at:
  6260 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  6261 ;; Parameters:    Size  Location     Type
  6262 ;;  dividend        2   52[BANK0 ] int 
  6263 ;;  divisor         2   54[BANK0 ] int 
  6264 ;; Auto vars:     Size  Location     Type
  6265 ;;  quotient        2   58[BANK0 ] int 
  6266 ;;  sign            1   57[BANK0 ] unsigned char 
  6267 ;;  counter         1   56[BANK0 ] unsigned char 
  6268 ;; Return value:  Size  Location     Type
  6269 ;;                  2   52[BANK0 ] int 
  6270 ;; Registers used:
  6271 ;;		wreg, status,2, status,0
  6272 ;; Tracked objects:
  6273 ;;		On entry : 0/0
  6274 ;;		On exit  : 0/0
  6275 ;;		Unchanged: 0/0
  6276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6277 ;;      Params:         0       4       0       0       0       0       0
  6278 ;;      Locals:         0       4       0       0       0       0       0
  6279 ;;      Temps:          0       0       0       0       0       0       0
  6280 ;;      Totals:         0       8       0       0       0       0       0
  6281 ;;Total ram usage:        8 bytes
  6282 ;; Hardware stack levels used:    1
  6283 ;; Hardware stack levels required when called:    7
  6284 ;; This function calls:
  6285 ;;		Nothing
  6286 ;; This function is called by:
  6287 ;;		_fround
  6288 ;;		_scale
  6289 ;;		__doprnt
  6290 ;; This function uses a non-reentrant model
  6291 ;;
  6292                           
  6293                           	psect	text11
  6294  004E90                     __ptext11:
  6295                           	opt stack 0
  6296  004E90                     ___awdiv:
  6297                           	opt stack 20
  6298                           
  6299                           ; BSR set to: 0
  6300                           ;incstack = 0
  6301  004E90  0E00               	movlw	0
  6302  004E92  0100               	movlb	0	; () banked
  6303  004E94  6F99               	movwf	___awdiv@sign& (0+255),b
  6304                           
  6305                           ; BSR set to: 0
  6306  004E96  0100               	movlb	0	; () banked
  6307  004E98  AF97               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6308  004E9A  D008               	goto	l6115
  6309                           
  6310                           ; BSR set to: 0
  6311  004E9C  0100               	movlb	0	; () banked
  6312  004E9E  6D96               	negf	___awdiv@divisor& (0+255),b
  6313  004EA0  1F97               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6314  004EA2  B0D8               	btfsc	status,0,c
  6315  004EA4  2B97               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6316                           
  6317                           ; BSR set to: 0
  6318  004EA6  0E01               	movlw	1
  6319  004EA8  0100               	movlb	0	; () banked
  6320  004EAA  6F99               	movwf	___awdiv@sign& (0+255),b
  6321  004EAC                     l6115:
  6322                           
  6323                           ; BSR set to: 0
  6324  004EAC  0100               	movlb	0	; () banked
  6325  004EAE  AF95               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6326  004EB0  D008               	goto	l6121
  6327                           
  6328                           ; BSR set to: 0
  6329  004EB2  0100               	movlb	0	; () banked
  6330  004EB4  6D94               	negf	___awdiv@dividend& (0+255),b
  6331  004EB6  1F95               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6332  004EB8  B0D8               	btfsc	status,0,c
  6333  004EBA  2B95               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6334                           
  6335                           ; BSR set to: 0
  6336  004EBC  0E01               	movlw	1
  6337  004EBE  0100               	movlb	0	; () banked
  6338  004EC0  1B99               	xorwf	___awdiv@sign& (0+255),f,b
  6339  004EC2                     l6121:
  6340                           
  6341                           ; BSR set to: 0
  6342  004EC2  0E00               	movlw	0
  6343  004EC4  0100               	movlb	0	; () banked
  6344  004EC6  6F9B               	movwf	(___awdiv@quotient+1)& (0+255),b
  6345  004EC8  0E00               	movlw	0
  6346  004ECA  6F9A               	movwf	___awdiv@quotient& (0+255),b
  6347                           
  6348                           ; BSR set to: 0
  6349  004ECC  0100               	movlb	0	; () banked
  6350  004ECE  5196               	movf	___awdiv@divisor& (0+255),w,b
  6351  004ED0  0100               	movlb	0	; () banked
  6352  004ED2  1197               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6353  004ED4  B4D8               	btfsc	status,2,c
  6354  004ED6  D02C               	goto	l6143
  6355                           
  6356                           ; BSR set to: 0
  6357  004ED8  0E01               	movlw	1
  6358  004EDA  0100               	movlb	0	; () banked
  6359  004EDC  6F98               	movwf	___awdiv@counter& (0+255),b
  6360  004EDE  D006               	goto	l6129
  6361  004EE0                     l6127:
  6362                           
  6363                           ; BSR set to: 0
  6364  004EE0  0100               	movlb	0	; () banked
  6365  004EE2  90D8               	bcf	status,0,c
  6366  004EE4  3796               	rlcf	___awdiv@divisor& (0+255),f,b
  6367  004EE6  3797               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6368  004EE8  0100               	movlb	0	; () banked
  6369  004EEA  2B98               	incf	___awdiv@counter& (0+255),f,b
  6370  004EEC                     l6129:
  6371                           
  6372                           ; BSR set to: 0
  6373  004EEC  0100               	movlb	0	; () banked
  6374  004EEE  AF97               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6375  004EF0  D7F7               	goto	l6127
  6376  004EF2                     l6131:
  6377                           
  6378                           ; BSR set to: 0
  6379  004EF2  0100               	movlb	0	; () banked
  6380  004EF4  90D8               	bcf	status,0,c
  6381  004EF6  379A               	rlcf	___awdiv@quotient& (0+255),f,b
  6382  004EF8  379B               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6383                           
  6384                           ; BSR set to: 0
  6385  004EFA  0100               	movlb	0	; () banked
  6386  004EFC  5196               	movf	___awdiv@divisor& (0+255),w,b
  6387  004EFE  0100               	movlb	0	; () banked
  6388  004F00  5D94               	subwf	___awdiv@dividend& (0+255),w,b
  6389  004F02  0100               	movlb	0	; () banked
  6390  004F04  5197               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6391  004F06  0100               	movlb	0	; () banked
  6392  004F08  5995               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6393  004F0A  A0D8               	btfss	status,0,c
  6394  004F0C  D00A               	goto	l6139
  6395                           
  6396                           ; BSR set to: 0
  6397  004F0E  0100               	movlb	0	; () banked
  6398  004F10  5196               	movf	___awdiv@divisor& (0+255),w,b
  6399  004F12  0100               	movlb	0	; () banked
  6400  004F14  5F94               	subwf	___awdiv@dividend& (0+255),f,b
  6401  004F16  0100               	movlb	0	; () banked
  6402  004F18  5197               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6403  004F1A  0100               	movlb	0	; () banked
  6404  004F1C  5B95               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6405                           
  6406                           ; BSR set to: 0
  6407  004F1E  0100               	movlb	0	; () banked
  6408  004F20  819A               	bsf	___awdiv@quotient& (0+255),0,b
  6409  004F22                     l6139:
  6410                           
  6411                           ; BSR set to: 0
  6412  004F22  0100               	movlb	0	; () banked
  6413  004F24  90D8               	bcf	status,0,c
  6414  004F26  3397               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6415  004F28  3396               	rrcf	___awdiv@divisor& (0+255),f,b
  6416                           
  6417                           ; BSR set to: 0
  6418  004F2A  0100               	movlb	0	; () banked
  6419  004F2C  2F98               	decfsz	___awdiv@counter& (0+255),f,b
  6420  004F2E  D7E1               	goto	l6131
  6421  004F30                     l6143:
  6422                           
  6423                           ; BSR set to: 0
  6424  004F30  0100               	movlb	0	; () banked
  6425  004F32  5199               	movf	___awdiv@sign& (0+255),w,b
  6426  004F34  0100               	movlb	0	; () banked
  6427  004F36  B4D8               	btfsc	status,2,c
  6428  004F38  D005               	goto	l6147
  6429                           
  6430                           ; BSR set to: 0
  6431  004F3A  0100               	movlb	0	; () banked
  6432  004F3C  6D9A               	negf	___awdiv@quotient& (0+255),b
  6433  004F3E  1F9B               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6434  004F40  B0D8               	btfsc	status,0,c
  6435  004F42  2B9B               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6436  004F44                     l6147:
  6437                           
  6438                           ; BSR set to: 0
  6439  004F44  C09A  F094         	movff	___awdiv@quotient,?___awdiv
  6440  004F48  C09B  F095         	movff	___awdiv@quotient+1,?___awdiv+1
  6441  004F4C  0012               	return	
  6442  004F4E                     __end_of___awdiv:
  6443                           	opt stack 0
  6444                           tosu	equ	0xFFF
  6445                           tosh	equ	0xFFE
  6446                           tosl	equ	0xFFD
  6447                           pclath	equ	0xFFA
  6448                           tblptru	equ	0xFF8
  6449                           tblptrh	equ	0xFF7
  6450                           tblptrl	equ	0xFF6
  6451                           tablat	equ	0xFF5
  6452                           prodh	equ	0xFF4
  6453                           prodl	equ	0xFF3
  6454                           intcon	equ	0xFF2
  6455                           postinc0	equ	0xFEE
  6456                           wreg	equ	0xFE8
  6457                           indf2	equ	0xFDF
  6458                           postinc2	equ	0xFDE
  6459                           postdec2	equ	0xFDD
  6460                           fsr2h	equ	0xFDA
  6461                           fsr2l	equ	0xFD9
  6462                           status	equ	0xFD8
  6463                           
  6464 ;; *************** function __tdiv_to_l_ *****************
  6465 ;; Defined at:
  6466 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdivl.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;  f1              3   46[BANK0 ] float 
  6469 ;;  f2              3   49[BANK0 ] float 
  6470 ;; Auto vars:     Size  Location     Type
  6471 ;;  quot            4   55[BANK0 ] unsigned long 
  6472 ;;  exp1            1   60[BANK0 ] unsigned char 
  6473 ;;  cntr            1   59[BANK0 ] unsigned char 
  6474 ;; Return value:  Size  Location     Type
  6475 ;;                  4   46[BANK0 ] unsigned long 
  6476 ;; Registers used:
  6477 ;;		wreg, status,2, status,0
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6483 ;;      Params:         0       6       0       0       0       0       0
  6484 ;;      Locals:         0       6       0       0       0       0       0
  6485 ;;      Temps:          0       3       0       0       0       0       0
  6486 ;;      Totals:         0      15       0       0       0       0       0
  6487 ;;Total ram usage:       15 bytes
  6488 ;; Hardware stack levels used:    1
  6489 ;; Hardware stack levels required when called:    7
  6490 ;; This function calls:
  6491 ;;		Nothing
  6492 ;; This function is called by:
  6493 ;;		__doprnt
  6494 ;; This function uses a non-reentrant model
  6495 ;;
  6496                           
  6497                           	psect	text12
  6498  003E1A                     __ptext12:
  6499                           	opt stack 0
  6500  003E1A                     __tdiv_to_l_:
  6501                           	opt stack 21
  6502                           
  6503                           ; BSR set to: 0
  6504                           ;incstack = 0
  6505  003E1A  C090  F094         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  6506  003E1E  0100               	movlb	0	; () banked
  6507  003E20  6B95               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  6508  003E22  6B96               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  6509  003E24  0100               	movlb	0	; () banked
  6510  003E26  358F               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6511  003E28  0100               	movlb	0	; () banked
  6512  003E2A  3794               	rlcf	??__tdiv_to_l_& (0+255),f,b
  6513  003E2C  E301               	bnc	u5801
  6514  003E2E  8195               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  6515  003E30                     u5801:
  6516  003E30  0100               	movlb	0	; () banked
  6517  003E32  5194               	movf	??__tdiv_to_l_& (0+255),w,b
  6518  003E34  0100               	movlb	0	; () banked
  6519  003E36  6F9C               	movwf	__tdiv_to_l_@exp1& (0+255),b
  6520  003E38  0100               	movlb	0	; () banked
  6521  003E3A  519C               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6522  003E3C  A4D8               	btfss	status,2,c
  6523  003E3E  D00A               	goto	l4529
  6524                           
  6525                           ; BSR set to: 0
  6526  003E40  0E00               	movlw	0
  6527  003E42  0100               	movlb	0	; () banked
  6528  003E44  6F8E               	movwf	?__tdiv_to_l_& (0+255),b
  6529  003E46  0E00               	movlw	0
  6530  003E48  6F8F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6531  003E4A  0E00               	movlw	0
  6532  003E4C  6F90               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6533  003E4E  0E00               	movlw	0
  6534  003E50  6F91               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6535                           
  6536                           ; BSR set to: 0
  6537  003E52  0012               	return	
  6538  003E54                     l4529:
  6539                           
  6540                           ; BSR set to: 0
  6541  003E54  C093  F094         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  6542  003E58  0100               	movlb	0	; () banked
  6543  003E5A  6B95               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  6544  003E5C  6B96               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  6545  003E5E  0100               	movlb	0	; () banked
  6546  003E60  3592               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6547  003E62  0100               	movlb	0	; () banked
  6548  003E64  3794               	rlcf	??__tdiv_to_l_& (0+255),f,b
  6549  003E66  E301               	bnc	u5821
  6550  003E68  8195               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  6551  003E6A                     u5821:
  6552  003E6A  0100               	movlb	0	; () banked
  6553  003E6C  5194               	movf	??__tdiv_to_l_& (0+255),w,b
  6554  003E6E  0100               	movlb	0	; () banked
  6555  003E70  6F9B               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6556  003E72  0100               	movlb	0	; () banked
  6557  003E74  519B               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6558  003E76  A4D8               	btfss	status,2,c
  6559  003E78  D00A               	goto	l4535
  6560                           
  6561                           ; BSR set to: 0
  6562  003E7A  0E00               	movlw	0
  6563  003E7C  0100               	movlb	0	; () banked
  6564  003E7E  6F8E               	movwf	?__tdiv_to_l_& (0+255),b
  6565  003E80  0E00               	movlw	0
  6566  003E82  6F8F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6567  003E84  0E00               	movlw	0
  6568  003E86  6F90               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6569  003E88  0E00               	movlw	0
  6570  003E8A  6F91               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6571                           
  6572                           ; BSR set to: 0
  6573  003E8C  0012               	return	
  6574  003E8E                     l4535:
  6575                           
  6576                           ; BSR set to: 0
  6577  003E8E  0100               	movlb	0	; () banked
  6578  003E90  8F8F               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  6579                           
  6580                           ; BSR set to: 0
  6581  003E92  0EFF               	movlw	255
  6582  003E94  0100               	movlb	0	; () banked
  6583  003E96  178E               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  6584  003E98  0EFF               	movlw	255
  6585  003E9A  0100               	movlb	0	; () banked
  6586  003E9C  178F               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6587  003E9E  0E00               	movlw	0
  6588  003EA0  0100               	movlb	0	; () banked
  6589  003EA2  1790               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6590  003EA4  0100               	movlb	0	; () banked
  6591  003EA6  8F92               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  6592                           
  6593                           ; BSR set to: 0
  6594  003EA8  0EFF               	movlw	255
  6595  003EAA  0100               	movlb	0	; () banked
  6596  003EAC  1791               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  6597  003EAE  0EFF               	movlw	255
  6598  003EB0  0100               	movlb	0	; () banked
  6599  003EB2  1792               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  6600  003EB4  0E00               	movlw	0
  6601  003EB6  0100               	movlb	0	; () banked
  6602  003EB8  1793               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  6603                           
  6604                           ; BSR set to: 0
  6605  003EBA  0E00               	movlw	0
  6606  003EBC  0100               	movlb	0	; () banked
  6607  003EBE  6F97               	movwf	__tdiv_to_l_@quot& (0+255),b
  6608  003EC0  0E00               	movlw	0
  6609  003EC2  6F98               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  6610  003EC4  0E00               	movlw	0
  6611  003EC6  6F99               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  6612  003EC8  0E00               	movlw	0
  6613  003ECA  6F9A               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  6614                           
  6615                           ; BSR set to: 0
  6616  003ECC  0E7F               	movlw	127
  6617  003ECE  0100               	movlb	0	; () banked
  6618  003ED0  5F9C               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6619                           
  6620                           ; BSR set to: 0
  6621  003ED2  0100               	movlb	0	; () banked
  6622  003ED4  519B               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6623  003ED6  0F98               	addlw	152
  6624  003ED8  0100               	movlb	0	; () banked
  6625  003EDA  5F9C               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6626                           
  6627                           ; BSR set to: 0
  6628  003EDC  0E18               	movlw	24
  6629  003EDE  0100               	movlb	0	; () banked
  6630  003EE0  6F9B               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6631  003EE2                     l837:
  6632                           
  6633                           ; BSR set to: 0
  6634  003EE2  0100               	movlb	0	; () banked
  6635  003EE4  90D8               	bcf	status,0,c
  6636  003EE6  3797               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6637  003EE8  3798               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6638  003EEA  3799               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6639  003EEC  379A               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6640                           
  6641                           ; BSR set to: 0
  6642  003EEE  0100               	movlb	0	; () banked
  6643  003EF0  5191               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6644  003EF2  0100               	movlb	0	; () banked
  6645  003EF4  5D8E               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  6646  003EF6  0100               	movlb	0	; () banked
  6647  003EF8  5192               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6648  003EFA  0100               	movlb	0	; () banked
  6649  003EFC  598F               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6650  003EFE  0100               	movlb	0	; () banked
  6651  003F00  5193               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6652  003F02  0100               	movlb	0	; () banked
  6653  003F04  5990               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  6654  003F06  A0D8               	btfss	status,0,c
  6655  003F08  D00E               	goto	l838
  6656                           
  6657                           ; BSR set to: 0
  6658  003F0A  0100               	movlb	0	; () banked
  6659  003F0C  5191               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6660  003F0E  0100               	movlb	0	; () banked
  6661  003F10  5F8E               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  6662  003F12  0100               	movlb	0	; () banked
  6663  003F14  5192               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6664  003F16  0100               	movlb	0	; () banked
  6665  003F18  5B8F               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6666  003F1A  0100               	movlb	0	; () banked
  6667  003F1C  5193               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6668  003F1E  0100               	movlb	0	; () banked
  6669  003F20  5B90               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6670                           
  6671                           ; BSR set to: 0
  6672  003F22  0100               	movlb	0	; () banked
  6673  003F24  8197               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  6674  003F26                     l838:
  6675                           
  6676                           ; BSR set to: 0
  6677  003F26  0100               	movlb	0	; () banked
  6678  003F28  90D8               	bcf	status,0,c
  6679  003F2A  378E               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  6680  003F2C  378F               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6681  003F2E  3790               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6682                           
  6683                           ; BSR set to: 0
  6684  003F30  0100               	movlb	0	; () banked
  6685  003F32  2F9B               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  6686  003F34  D7D6               	goto	l837
  6687                           
  6688                           ; BSR set to: 0
  6689                           
  6690                           ; BSR set to: 0
  6691  003F36  0100               	movlb	0	; () banked
  6692  003F38  AF9C               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  6693  003F3A  D01A               	goto	l4569
  6694                           
  6695                           ; BSR set to: 0
  6696  003F3C  0100               	movlb	0	; () banked
  6697  003F3E  519C               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6698  003F40  0A80               	xorlw	128
  6699  003F42  0F97               	addlw	151
  6700  003F44  B0D8               	btfsc	status,0,c
  6701  003F46  D00A               	goto	l4565
  6702                           
  6703                           ; BSR set to: 0
  6704  003F48  0E00               	movlw	0
  6705  003F4A  0100               	movlb	0	; () banked
  6706  003F4C  6F8E               	movwf	?__tdiv_to_l_& (0+255),b
  6707  003F4E  0E00               	movlw	0
  6708  003F50  6F8F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6709  003F52  0E00               	movlw	0
  6710  003F54  6F90               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6711  003F56  0E00               	movlw	0
  6712  003F58  6F91               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6713                           
  6714                           ; BSR set to: 0
  6715  003F5A  0012               	return	
  6716  003F5C                     l4565:
  6717                           
  6718                           ; BSR set to: 0
  6719  003F5C  0100               	movlb	0	; () banked
  6720  003F5E  90D8               	bcf	status,0,c
  6721  003F60  339A               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6722  003F62  3399               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6723  003F64  3398               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6724  003F66  3397               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  6725                           
  6726                           ; BSR set to: 0
  6727  003F68  0100               	movlb	0	; () banked
  6728  003F6A  3F9C               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  6729  003F6C  D7F7               	goto	l4565
  6730                           
  6731                           ; BSR set to: 0
  6732  003F6E  D01B               	goto	l844
  6733  003F70                     l4569:
  6734                           
  6735                           ; BSR set to: 0
  6736  003F70  0E17               	movlw	23
  6737  003F72  0100               	movlb	0	; () banked
  6738  003F74  659C               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  6739  003F76  D012               	goto	l4577
  6740                           
  6741                           ; BSR set to: 0
  6742  003F78  0E00               	movlw	0
  6743  003F7A  0100               	movlb	0	; () banked
  6744  003F7C  6F8E               	movwf	?__tdiv_to_l_& (0+255),b
  6745  003F7E  0E00               	movlw	0
  6746  003F80  6F8F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6747  003F82  0E00               	movlw	0
  6748  003F84  6F90               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6749  003F86  0E00               	movlw	0
  6750  003F88  6F91               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6751                           
  6752                           ; BSR set to: 0
  6753  003F8A  0012               	return	
  6754  003F8C                     l4575:
  6755                           
  6756                           ; BSR set to: 0
  6757  003F8C  0100               	movlb	0	; () banked
  6758  003F8E  90D8               	bcf	status,0,c
  6759  003F90  3797               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6760  003F92  3798               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6761  003F94  3799               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6762  003F96  379A               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6763  003F98  0100               	movlb	0	; () banked
  6764  003F9A  079C               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  6765  003F9C                     l4577:
  6766                           
  6767                           ; BSR set to: 0
  6768  003F9C  0100               	movlb	0	; () banked
  6769  003F9E  519C               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6770  003FA0  0100               	movlb	0	; () banked
  6771  003FA2  A4D8               	btfss	status,2,c
  6772  003FA4  D7F3               	goto	l4575
  6773  003FA6                     l844:
  6774                           
  6775                           ; BSR set to: 0
  6776  003FA6  C097  F08E         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  6777  003FAA  C098  F08F         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  6778  003FAE  C099  F090         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  6779  003FB2  C09A  F091         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  6780                           
  6781                           ; BSR set to: 0
  6782  003FB6  0012               	return		;funcret
  6783  003FB8                     __end_of__tdiv_to_l_:
  6784                           	opt stack 0
  6785                           tosu	equ	0xFFF
  6786                           tosh	equ	0xFFE
  6787                           tosl	equ	0xFFD
  6788                           pclath	equ	0xFFA
  6789                           tblptru	equ	0xFF8
  6790                           tblptrh	equ	0xFF7
  6791                           tblptrl	equ	0xFF6
  6792                           tablat	equ	0xFF5
  6793                           prodh	equ	0xFF4
  6794                           prodl	equ	0xFF3
  6795                           intcon	equ	0xFF2
  6796                           postinc0	equ	0xFEE
  6797                           wreg	equ	0xFE8
  6798                           indf2	equ	0xFDF
  6799                           postinc2	equ	0xFDE
  6800                           postdec2	equ	0xFDD
  6801                           fsr2h	equ	0xFDA
  6802                           fsr2l	equ	0xFD9
  6803                           status	equ	0xFD8
  6804                           
  6805 ;; *************** function __div_to_l_ *****************
  6806 ;; Defined at:
  6807 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fldivl.c"
  6808 ;; Parameters:    Size  Location     Type
  6809 ;;  f1              3   46[BANK0 ] unsigned long 
  6810 ;;  f2              3   49[BANK0 ] unsigned long 
  6811 ;; Auto vars:     Size  Location     Type
  6812 ;;  quot            4   52[BANK0 ] unsigned long 
  6813 ;;  exp1            1   57[BANK0 ] unsigned char 
  6814 ;;  cntr            1   56[BANK0 ] unsigned char 
  6815 ;; Return value:  Size  Location     Type
  6816 ;;                  4   46[BANK0 ] unsigned long 
  6817 ;; Registers used:
  6818 ;;		wreg, status,2, status,0
  6819 ;; Tracked objects:
  6820 ;;		On entry : 0/0
  6821 ;;		On exit  : 0/0
  6822 ;;		Unchanged: 0/0
  6823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6824 ;;      Params:         0       6       0       0       0       0       0
  6825 ;;      Locals:         0       6       0       0       0       0       0
  6826 ;;      Temps:          0       0       0       0       0       0       0
  6827 ;;      Totals:         0      12       0       0       0       0       0
  6828 ;;Total ram usage:       12 bytes
  6829 ;; Hardware stack levels used:    1
  6830 ;; Hardware stack levels required when called:    7
  6831 ;; This function calls:
  6832 ;;		Nothing
  6833 ;; This function is called by:
  6834 ;;		__doprnt
  6835 ;; This function uses a non-reentrant model
  6836 ;;
  6837                           
  6838                           	psect	text13
  6839  003FB8                     __ptext13:
  6840                           	opt stack 0
  6841  003FB8                     __div_to_l_:
  6842                           	opt stack 21
  6843                           
  6844                           ; BSR set to: 0
  6845                           ;incstack = 0
  6846  003FB8  0100               	movlb	0	; () banked
  6847  003FBA  3590               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  6848  003FBC  3591               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  6849  003FBE  0100               	movlb	0	; () banked
  6850  003FC0  6F99               	movwf	__div_to_l_@exp1& (0+255),b
  6851  003FC2  0100               	movlb	0	; () banked
  6852  003FC4  5199               	movf	__div_to_l_@exp1& (0+255),w,b
  6853  003FC6  A4D8               	btfss	status,2,c
  6854  003FC8  D00A               	goto	l4585
  6855                           
  6856                           ; BSR set to: 0
  6857  003FCA  0E00               	movlw	0
  6858  003FCC  0100               	movlb	0	; () banked
  6859  003FCE  6F8E               	movwf	?__div_to_l_& (0+255),b
  6860  003FD0  0E00               	movlw	0
  6861  003FD2  6F8F               	movwf	(?__div_to_l_+1)& (0+255),b
  6862  003FD4  0E00               	movlw	0
  6863  003FD6  6F90               	movwf	(?__div_to_l_+2)& (0+255),b
  6864  003FD8  0E00               	movlw	0
  6865  003FDA  6F91               	movwf	(?__div_to_l_+3)& (0+255),b
  6866                           
  6867                           ; BSR set to: 0
  6868  003FDC  0012               	return	
  6869  003FDE                     l4585:
  6870                           
  6871                           ; BSR set to: 0
  6872  003FDE  0100               	movlb	0	; () banked
  6873  003FE0  3593               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  6874  003FE2  3594               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  6875  003FE4  0100               	movlb	0	; () banked
  6876  003FE6  6F98               	movwf	__div_to_l_@cntr& (0+255),b
  6877  003FE8  0100               	movlb	0	; () banked
  6878  003FEA  5198               	movf	__div_to_l_@cntr& (0+255),w,b
  6879  003FEC  A4D8               	btfss	status,2,c
  6880  003FEE  D00A               	goto	l4591
  6881                           
  6882                           ; BSR set to: 0
  6883  003FF0  0E00               	movlw	0
  6884  003FF2  0100               	movlb	0	; () banked
  6885  003FF4  6F8E               	movwf	?__div_to_l_& (0+255),b
  6886  003FF6  0E00               	movlw	0
  6887  003FF8  6F8F               	movwf	(?__div_to_l_+1)& (0+255),b
  6888  003FFA  0E00               	movlw	0
  6889  003FFC  6F90               	movwf	(?__div_to_l_+2)& (0+255),b
  6890  003FFE  0E00               	movlw	0
  6891  004000  6F91               	movwf	(?__div_to_l_+3)& (0+255),b
  6892                           
  6893                           ; BSR set to: 0
  6894  004002  0012               	return	
  6895  004004                     l4591:
  6896                           
  6897                           ; BSR set to: 0
  6898  004004  0100               	movlb	0	; () banked
  6899  004006  8F90               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  6900                           
  6901                           ; BSR set to: 0
  6902  004008  0EFF               	movlw	255
  6903  00400A  0100               	movlb	0	; () banked
  6904  00400C  178E               	andwf	__div_to_l_@f1& (0+255),f,b
  6905  00400E  0EFF               	movlw	255
  6906  004010  178F               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  6907  004012  0EFF               	movlw	255
  6908  004014  1790               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  6909  004016  0E00               	movlw	0
  6910  004018  1791               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  6911                           
  6912                           ; BSR set to: 0
  6913  00401A  0100               	movlb	0	; () banked
  6914  00401C  8F93               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  6915  00401E  0EFF               	movlw	255
  6916  004020  0100               	movlb	0	; () banked
  6917  004022  1791               	andwf	__div_to_l_@f2& (0+255),f,b
  6918  004024  0EFF               	movlw	255
  6919  004026  1792               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  6920  004028  0EFF               	movlw	255
  6921  00402A  1793               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  6922  00402C  0E00               	movlw	0
  6923  00402E  1794               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  6924                           
  6925                           ; BSR set to: 0
  6926  004030  0E00               	movlw	0
  6927  004032  0100               	movlb	0	; () banked
  6928  004034  6F94               	movwf	__div_to_l_@quot& (0+255),b
  6929  004036  0E00               	movlw	0
  6930  004038  6F95               	movwf	(__div_to_l_@quot+1)& (0+255),b
  6931  00403A  0E00               	movlw	0
  6932  00403C  6F96               	movwf	(__div_to_l_@quot+2)& (0+255),b
  6933  00403E  0E00               	movlw	0
  6934  004040  6F97               	movwf	(__div_to_l_@quot+3)& (0+255),b
  6935                           
  6936                           ; BSR set to: 0
  6937  004042  0E7F               	movlw	127
  6938  004044  0100               	movlb	0	; () banked
  6939  004046  5F99               	subwf	__div_to_l_@exp1& (0+255),f,b
  6940                           
  6941                           ; BSR set to: 0
  6942  004048  0100               	movlb	0	; () banked
  6943  00404A  5198               	movf	__div_to_l_@cntr& (0+255),w,b
  6944  00404C  0FA0               	addlw	160
  6945  00404E  0100               	movlb	0	; () banked
  6946  004050  5F99               	subwf	__div_to_l_@exp1& (0+255),f,b
  6947                           
  6948                           ; BSR set to: 0
  6949  004052  0E20               	movlw	32
  6950  004054  0100               	movlb	0	; () banked
  6951  004056  6F98               	movwf	__div_to_l_@cntr& (0+255),b
  6952  004058                     l4605:
  6953                           
  6954                           ; BSR set to: 0
  6955  004058  0100               	movlb	0	; () banked
  6956  00405A  90D8               	bcf	status,0,c
  6957  00405C  3794               	rlcf	__div_to_l_@quot& (0+255),f,b
  6958  00405E  3795               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  6959  004060  3796               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  6960  004062  3797               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  6961                           
  6962                           ; BSR set to: 0
  6963  004064  0100               	movlb	0	; () banked
  6964  004066  5191               	movf	__div_to_l_@f2& (0+255),w,b
  6965  004068  0100               	movlb	0	; () banked
  6966  00406A  5D8E               	subwf	__div_to_l_@f1& (0+255),w,b
  6967  00406C  0100               	movlb	0	; () banked
  6968  00406E  5192               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6969  004070  0100               	movlb	0	; () banked
  6970  004072  598F               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  6971  004074  0100               	movlb	0	; () banked
  6972  004076  5193               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6973  004078  0100               	movlb	0	; () banked
  6974  00407A  5990               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  6975  00407C  0100               	movlb	0	; () banked
  6976  00407E  5194               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6977  004080  0100               	movlb	0	; () banked
  6978  004082  5991               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  6979  004084  A0D8               	btfss	status,0,c
  6980  004086  D012               	goto	l4613
  6981                           
  6982                           ; BSR set to: 0
  6983  004088  0100               	movlb	0	; () banked
  6984  00408A  5191               	movf	__div_to_l_@f2& (0+255),w,b
  6985  00408C  0100               	movlb	0	; () banked
  6986  00408E  5F8E               	subwf	__div_to_l_@f1& (0+255),f,b
  6987  004090  0100               	movlb	0	; () banked
  6988  004092  5192               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6989  004094  0100               	movlb	0	; () banked
  6990  004096  5B8F               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  6991  004098  0100               	movlb	0	; () banked
  6992  00409A  5193               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6993  00409C  0100               	movlb	0	; () banked
  6994  00409E  5B90               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  6995  0040A0  0100               	movlb	0	; () banked
  6996  0040A2  5194               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6997  0040A4  0100               	movlb	0	; () banked
  6998  0040A6  5B91               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  6999                           
  7000                           ; BSR set to: 0
  7001  0040A8  0100               	movlb	0	; () banked
  7002  0040AA  8194               	bsf	__div_to_l_@quot& (0+255),0,b
  7003  0040AC                     l4613:
  7004                           
  7005                           ; BSR set to: 0
  7006  0040AC  0100               	movlb	0	; () banked
  7007  0040AE  90D8               	bcf	status,0,c
  7008  0040B0  378E               	rlcf	__div_to_l_@f1& (0+255),f,b
  7009  0040B2  378F               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  7010  0040B4  3790               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  7011  0040B6  3791               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  7012                           
  7013                           ; BSR set to: 0
  7014  0040B8  0100               	movlb	0	; () banked
  7015  0040BA  2F98               	decfsz	__div_to_l_@cntr& (0+255),f,b
  7016  0040BC  D7CD               	goto	l4605
  7017                           
  7018                           ; BSR set to: 0
  7019                           
  7020                           ; BSR set to: 0
  7021  0040BE  0100               	movlb	0	; () banked
  7022  0040C0  AF99               	btfss	__div_to_l_@exp1& (0+255),7,b
  7023  0040C2  D01A               	goto	l4629
  7024                           
  7025                           ; BSR set to: 0
  7026  0040C4  0100               	movlb	0	; () banked
  7027  0040C6  5199               	movf	__div_to_l_@exp1& (0+255),w,b
  7028  0040C8  0A80               	xorlw	128
  7029  0040CA  0F9F               	addlw	159
  7030  0040CC  B0D8               	btfsc	status,0,c
  7031  0040CE  D00A               	goto	l4625
  7032                           
  7033                           ; BSR set to: 0
  7034  0040D0  0E00               	movlw	0
  7035  0040D2  0100               	movlb	0	; () banked
  7036  0040D4  6F8E               	movwf	?__div_to_l_& (0+255),b
  7037  0040D6  0E00               	movlw	0
  7038  0040D8  6F8F               	movwf	(?__div_to_l_+1)& (0+255),b
  7039  0040DA  0E00               	movlw	0
  7040  0040DC  6F90               	movwf	(?__div_to_l_+2)& (0+255),b
  7041  0040DE  0E00               	movlw	0
  7042  0040E0  6F91               	movwf	(?__div_to_l_+3)& (0+255),b
  7043                           
  7044                           ; BSR set to: 0
  7045  0040E2  0012               	return	
  7046  0040E4                     l4625:
  7047                           
  7048                           ; BSR set to: 0
  7049  0040E4  0100               	movlb	0	; () banked
  7050  0040E6  90D8               	bcf	status,0,c
  7051  0040E8  3397               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  7052  0040EA  3396               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  7053  0040EC  3395               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  7054  0040EE  3394               	rrcf	__div_to_l_@quot& (0+255),f,b
  7055                           
  7056                           ; BSR set to: 0
  7057  0040F0  0100               	movlb	0	; () banked
  7058  0040F2  3F99               	incfsz	__div_to_l_@exp1& (0+255),f,b
  7059  0040F4  D7F7               	goto	l4625
  7060                           
  7061                           ; BSR set to: 0
  7062  0040F6  D01B               	goto	l740
  7063  0040F8                     l4629:
  7064                           
  7065                           ; BSR set to: 0
  7066  0040F8  0E1F               	movlw	31
  7067  0040FA  0100               	movlb	0	; () banked
  7068  0040FC  6599               	cpfsgt	__div_to_l_@exp1& (0+255),b
  7069  0040FE  D012               	goto	l4637
  7070                           
  7071                           ; BSR set to: 0
  7072  004100  0E00               	movlw	0
  7073  004102  0100               	movlb	0	; () banked
  7074  004104  6F8E               	movwf	?__div_to_l_& (0+255),b
  7075  004106  0E00               	movlw	0
  7076  004108  6F8F               	movwf	(?__div_to_l_+1)& (0+255),b
  7077  00410A  0E00               	movlw	0
  7078  00410C  6F90               	movwf	(?__div_to_l_+2)& (0+255),b
  7079  00410E  0E00               	movlw	0
  7080  004110  6F91               	movwf	(?__div_to_l_+3)& (0+255),b
  7081                           
  7082                           ; BSR set to: 0
  7083  004112  0012               	return	
  7084  004114                     l4635:
  7085                           
  7086                           ; BSR set to: 0
  7087  004114  0100               	movlb	0	; () banked
  7088  004116  90D8               	bcf	status,0,c
  7089  004118  3794               	rlcf	__div_to_l_@quot& (0+255),f,b
  7090  00411A  3795               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7091  00411C  3796               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7092  00411E  3797               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7093  004120  0100               	movlb	0	; () banked
  7094  004122  0799               	decf	__div_to_l_@exp1& (0+255),f,b
  7095  004124                     l4637:
  7096                           
  7097                           ; BSR set to: 0
  7098  004124  0100               	movlb	0	; () banked
  7099  004126  5199               	movf	__div_to_l_@exp1& (0+255),w,b
  7100  004128  0100               	movlb	0	; () banked
  7101  00412A  A4D8               	btfss	status,2,c
  7102  00412C  D7F3               	goto	l4635
  7103  00412E                     l740:
  7104                           
  7105                           ; BSR set to: 0
  7106  00412E  C094  F08E         	movff	__div_to_l_@quot,?__div_to_l_
  7107  004132  C095  F08F         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  7108  004136  C096  F090         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  7109  00413A  C097  F091         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  7110                           
  7111                           ; BSR set to: 0
  7112  00413E  0012               	return		;funcret
  7113  004140                     __end_of__div_to_l_:
  7114                           	opt stack 0
  7115                           tosu	equ	0xFFF
  7116                           tosh	equ	0xFFE
  7117                           tosl	equ	0xFFD
  7118                           pclath	equ	0xFFA
  7119                           tblptru	equ	0xFF8
  7120                           tblptrh	equ	0xFF7
  7121                           tblptrl	equ	0xFF6
  7122                           tablat	equ	0xFF5
  7123                           prodh	equ	0xFF4
  7124                           prodl	equ	0xFF3
  7125                           intcon	equ	0xFF2
  7126                           postinc0	equ	0xFEE
  7127                           wreg	equ	0xFE8
  7128                           indf2	equ	0xFDF
  7129                           postinc2	equ	0xFDE
  7130                           postdec2	equ	0xFDD
  7131                           fsr2h	equ	0xFDA
  7132                           fsr2l	equ	0xFD9
  7133                           status	equ	0xFD8
  7134                           
  7135 ;; *************** function ___lltoft *****************
  7136 ;; Defined at:
  7137 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lltoft.c"
  7138 ;; Parameters:    Size  Location     Type
  7139 ;;  c               4   54[BANK0 ] unsigned long 
  7140 ;; Auto vars:     Size  Location     Type
  7141 ;;  exp             1   62[BANK0 ] unsigned char 
  7142 ;; Return value:  Size  Location     Type
  7143 ;;                  3   54[BANK0 ] float 
  7144 ;; Registers used:
  7145 ;;		wreg, status,2, status,0, cstack
  7146 ;; Tracked objects:
  7147 ;;		On entry : 0/0
  7148 ;;		On exit  : 0/0
  7149 ;;		Unchanged: 0/0
  7150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7151 ;;      Params:         0       4       0       0       0       0       0
  7152 ;;      Locals:         0       1       0       0       0       0       0
  7153 ;;      Temps:          0       4       0       0       0       0       0
  7154 ;;      Totals:         0       9       0       0       0       0       0
  7155 ;;Total ram usage:        9 bytes
  7156 ;; Hardware stack levels used:    1
  7157 ;; Hardware stack levels required when called:    8
  7158 ;; This function calls:
  7159 ;;		___ftpack
  7160 ;; This function is called by:
  7161 ;;		__doprnt
  7162 ;; This function uses a non-reentrant model
  7163 ;;
  7164                           
  7165                           	psect	text14
  7166  00538A                     __ptext14:
  7167                           	opt stack 0
  7168  00538A                     ___lltoft:
  7169                           	opt stack 20
  7170                           
  7171                           ; BSR set to: 0
  7172                           ;incstack = 0
  7173  00538A  0E8E               	movlw	142
  7174  00538C  0100               	movlb	0	; () banked
  7175  00538E  6F9E               	movwf	___lltoft@exp& (0+255),b
  7176  005390  D008               	goto	l6305
  7177  005392                     l6303:
  7178                           
  7179                           ; BSR set to: 0
  7180  005392  0100               	movlb	0	; () banked
  7181  005394  90D8               	bcf	status,0,c
  7182  005396  3399               	rrcf	(___lltoft@c+3)& (0+255),f,b
  7183  005398  3398               	rrcf	(___lltoft@c+2)& (0+255),f,b
  7184  00539A  3397               	rrcf	(___lltoft@c+1)& (0+255),f,b
  7185  00539C  3396               	rrcf	___lltoft@c& (0+255),f,b
  7186  00539E  0100               	movlb	0	; () banked
  7187  0053A0  2B9E               	incf	___lltoft@exp& (0+255),f,b
  7188  0053A2                     l6305:
  7189                           
  7190                           ; BSR set to: 0
  7191  0053A2  0E00               	movlw	0
  7192  0053A4  0100               	movlb	0	; () banked
  7193  0053A6  1596               	andwf	___lltoft@c& (0+255),w,b
  7194  0053A8  0100               	movlb	0	; () banked
  7195  0053AA  6F9A               	movwf	??___lltoft& (0+255),b
  7196  0053AC  0E00               	movlw	0
  7197  0053AE  0100               	movlb	0	; () banked
  7198  0053B0  1597               	andwf	(___lltoft@c+1)& (0+255),w,b
  7199  0053B2  0100               	movlb	0	; () banked
  7200  0053B4  6F9B               	movwf	(??___lltoft+1)& (0+255),b
  7201  0053B6  0E00               	movlw	0
  7202  0053B8  0100               	movlb	0	; () banked
  7203  0053BA  1598               	andwf	(___lltoft@c+2)& (0+255),w,b
  7204  0053BC  0100               	movlb	0	; () banked
  7205  0053BE  6F9C               	movwf	(??___lltoft+2)& (0+255),b
  7206  0053C0  0EFF               	movlw	255
  7207  0053C2  0100               	movlb	0	; () banked
  7208  0053C4  1599               	andwf	(___lltoft@c+3)& (0+255),w,b
  7209  0053C6  0100               	movlb	0	; () banked
  7210  0053C8  6F9D               	movwf	(??___lltoft+3)& (0+255),b
  7211  0053CA  0100               	movlb	0	; () banked
  7212  0053CC  519A               	movf	??___lltoft& (0+255),w,b
  7213  0053CE  0100               	movlb	0	; () banked
  7214  0053D0  119B               	iorwf	(??___lltoft+1)& (0+255),w,b
  7215  0053D2  0100               	movlb	0	; () banked
  7216  0053D4  119C               	iorwf	(??___lltoft+2)& (0+255),w,b
  7217  0053D6  0100               	movlb	0	; () banked
  7218  0053D8  119D               	iorwf	(??___lltoft+3)& (0+255),w,b
  7219  0053DA  A4D8               	btfss	status,2,c
  7220  0053DC  D7DA               	goto	l6303
  7221                           
  7222                           ; BSR set to: 0
  7223                           
  7224                           ; BSR set to: 0
  7225  0053DE  C096  F08E         	movff	___lltoft@c,___ftpack@arg
  7226  0053E2  C097  F08F         	movff	___lltoft@c+1,___ftpack@arg+1
  7227  0053E6  C098  F090         	movff	___lltoft@c+2,___ftpack@arg+2
  7228  0053EA  C09E  F091         	movff	___lltoft@exp,___ftpack@exp
  7229  0053EE  0E00               	movlw	0
  7230  0053F0  0100               	movlb	0	; () banked
  7231  0053F2  6F92               	movwf	___ftpack@sign& (0+255),b
  7232  0053F4  EC77  F024         	call	___ftpack	;wreg free
  7233  0053F8  C08E  F096         	movff	?___ftpack,?___lltoft
  7234  0053FC  C08F  F097         	movff	?___ftpack+1,?___lltoft+1
  7235  005400  C090  F098         	movff	?___ftpack+2,?___lltoft+2
  7236  005404  0012               	return	
  7237  005406                     __end_of___lltoft:
  7238                           	opt stack 0
  7239                           tosu	equ	0xFFF
  7240                           tosh	equ	0xFFE
  7241                           tosl	equ	0xFFD
  7242                           pclath	equ	0xFFA
  7243                           tblptru	equ	0xFF8
  7244                           tblptrh	equ	0xFF7
  7245                           tblptrl	equ	0xFF6
  7246                           tablat	equ	0xFF5
  7247                           prodh	equ	0xFF4
  7248                           prodl	equ	0xFF3
  7249                           intcon	equ	0xFF2
  7250                           postinc0	equ	0xFEE
  7251                           wreg	equ	0xFE8
  7252                           indf2	equ	0xFDF
  7253                           postinc2	equ	0xFDE
  7254                           postdec2	equ	0xFDD
  7255                           fsr2h	equ	0xFDA
  7256                           fsr2l	equ	0xFD9
  7257                           status	equ	0xFD8
  7258                           
  7259 ;; *************** function ___llmod *****************
  7260 ;; Defined at:
  7261 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
  7262 ;; Parameters:    Size  Location     Type
  7263 ;;  dividend        4   59[BANK0 ] unsigned long 
  7264 ;;  divisor         4   63[BANK0 ] unsigned long 
  7265 ;; Auto vars:     Size  Location     Type
  7266 ;;  counter         1   67[BANK0 ] unsigned char 
  7267 ;; Return value:  Size  Location     Type
  7268 ;;                  4   59[BANK0 ] unsigned long 
  7269 ;; Registers used:
  7270 ;;		wreg, status,2, status,0
  7271 ;; Tracked objects:
  7272 ;;		On entry : 0/0
  7273 ;;		On exit  : 0/0
  7274 ;;		Unchanged: 0/0
  7275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7276 ;;      Params:         0       8       0       0       0       0       0
  7277 ;;      Locals:         0       1       0       0       0       0       0
  7278 ;;      Temps:          0       0       0       0       0       0       0
  7279 ;;      Totals:         0       9       0       0       0       0       0
  7280 ;;Total ram usage:        9 bytes
  7281 ;; Hardware stack levels used:    1
  7282 ;; Hardware stack levels required when called:    7
  7283 ;; This function calls:
  7284 ;;		Nothing
  7285 ;; This function is called by:
  7286 ;;		__doprnt
  7287 ;; This function uses a non-reentrant model
  7288 ;;
  7289                           
  7290                           	psect	text15
  7291  00515A                     __ptext15:
  7292                           	opt stack 0
  7293  00515A                     ___llmod:
  7294                           	opt stack 21
  7295                           
  7296                           ;incstack = 0
  7297  00515A  0100               	movlb	0	; () banked
  7298  00515C  519F               	movf	___llmod@divisor& (0+255),w,b
  7299  00515E  0100               	movlb	0	; () banked
  7300  005160  11A0               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  7301  005162  0100               	movlb	0	; () banked
  7302  005164  11A1               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  7303  005166  0100               	movlb	0	; () banked
  7304  005168  11A2               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  7305  00516A  B4D8               	btfsc	status,2,c
  7306  00516C  D03A               	goto	l951
  7307                           
  7308                           ; BSR set to: 0
  7309  00516E  0E01               	movlw	1
  7310  005170  0100               	movlb	0	; () banked
  7311  005172  6FA3               	movwf	___llmod@counter& (0+255),b
  7312  005174  D008               	goto	l4743
  7313  005176                     l4741:
  7314                           
  7315                           ; BSR set to: 0
  7316  005176  0100               	movlb	0	; () banked
  7317  005178  90D8               	bcf	status,0,c
  7318  00517A  379F               	rlcf	___llmod@divisor& (0+255),f,b
  7319  00517C  37A0               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  7320  00517E  37A1               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  7321  005180  37A2               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  7322  005182  0100               	movlb	0	; () banked
  7323  005184  2BA3               	incf	___llmod@counter& (0+255),f,b
  7324  005186                     l4743:
  7325                           
  7326                           ; BSR set to: 0
  7327  005186  0100               	movlb	0	; () banked
  7328  005188  AFA2               	btfss	(___llmod@divisor+3)& (0+255),7,b
  7329  00518A  D7F5               	goto	l4741
  7330  00518C                     l4745:
  7331                           
  7332                           ; BSR set to: 0
  7333  00518C  0100               	movlb	0	; () banked
  7334  00518E  519F               	movf	___llmod@divisor& (0+255),w,b
  7335  005190  0100               	movlb	0	; () banked
  7336  005192  5D9B               	subwf	___llmod@dividend& (0+255),w,b
  7337  005194  0100               	movlb	0	; () banked
  7338  005196  51A0               	movf	(___llmod@divisor+1)& (0+255),w,b
  7339  005198  0100               	movlb	0	; () banked
  7340  00519A  599C               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  7341  00519C  0100               	movlb	0	; () banked
  7342  00519E  51A1               	movf	(___llmod@divisor+2)& (0+255),w,b
  7343  0051A0  0100               	movlb	0	; () banked
  7344  0051A2  599D               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  7345  0051A4  0100               	movlb	0	; () banked
  7346  0051A6  51A2               	movf	(___llmod@divisor+3)& (0+255),w,b
  7347  0051A8  0100               	movlb	0	; () banked
  7348  0051AA  599E               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  7349  0051AC  A0D8               	btfss	status,0,c
  7350  0051AE  D010               	goto	l4749
  7351                           
  7352                           ; BSR set to: 0
  7353  0051B0  0100               	movlb	0	; () banked
  7354  0051B2  519F               	movf	___llmod@divisor& (0+255),w,b
  7355  0051B4  0100               	movlb	0	; () banked
  7356  0051B6  5F9B               	subwf	___llmod@dividend& (0+255),f,b
  7357  0051B8  0100               	movlb	0	; () banked
  7358  0051BA  51A0               	movf	(___llmod@divisor+1)& (0+255),w,b
  7359  0051BC  0100               	movlb	0	; () banked
  7360  0051BE  5B9C               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  7361  0051C0  0100               	movlb	0	; () banked
  7362  0051C2  51A1               	movf	(___llmod@divisor+2)& (0+255),w,b
  7363  0051C4  0100               	movlb	0	; () banked
  7364  0051C6  5B9D               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  7365  0051C8  0100               	movlb	0	; () banked
  7366  0051CA  51A2               	movf	(___llmod@divisor+3)& (0+255),w,b
  7367  0051CC  0100               	movlb	0	; () banked
  7368  0051CE  5B9E               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  7369  0051D0                     l4749:
  7370                           
  7371                           ; BSR set to: 0
  7372  0051D0  0100               	movlb	0	; () banked
  7373  0051D2  90D8               	bcf	status,0,c
  7374  0051D4  33A2               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  7375  0051D6  33A1               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  7376  0051D8  33A0               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  7377  0051DA  339F               	rrcf	___llmod@divisor& (0+255),f,b
  7378                           
  7379                           ; BSR set to: 0
  7380  0051DC  0100               	movlb	0	; () banked
  7381  0051DE  2FA3               	decfsz	___llmod@counter& (0+255),f,b
  7382  0051E0  D7D5               	goto	l4745
  7383  0051E2                     l951:
  7384                           
  7385                           ; BSR set to: 0
  7386  0051E2  C09B  F09B         	movff	___llmod@dividend,?___llmod
  7387  0051E6  C09C  F09C         	movff	___llmod@dividend+1,?___llmod+1
  7388  0051EA  C09D  F09D         	movff	___llmod@dividend+2,?___llmod+2
  7389  0051EE  C09E  F09E         	movff	___llmod@dividend+3,?___llmod+3
  7390                           
  7391                           ; BSR set to: 0
  7392  0051F2  0012               	return		;funcret
  7393  0051F4                     __end_of___llmod:
  7394                           	opt stack 0
  7395                           tosu	equ	0xFFF
  7396                           tosh	equ	0xFFE
  7397                           tosl	equ	0xFFD
  7398                           pclath	equ	0xFFA
  7399                           tblptru	equ	0xFF8
  7400                           tblptrh	equ	0xFF7
  7401                           tblptrl	equ	0xFF6
  7402                           tablat	equ	0xFF5
  7403                           prodh	equ	0xFF4
  7404                           prodl	equ	0xFF3
  7405                           intcon	equ	0xFF2
  7406                           postinc0	equ	0xFEE
  7407                           wreg	equ	0xFE8
  7408                           indf2	equ	0xFDF
  7409                           postinc2	equ	0xFDE
  7410                           postdec2	equ	0xFDD
  7411                           fsr2h	equ	0xFDA
  7412                           fsr2l	equ	0xFD9
  7413                           status	equ	0xFD8
  7414                           
  7415 ;; *************** function ___lldiv *****************
  7416 ;; Defined at:
  7417 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
  7418 ;; Parameters:    Size  Location     Type
  7419 ;;  dividend        4   46[BANK0 ] unsigned long 
  7420 ;;  divisor         4   50[BANK0 ] unsigned long 
  7421 ;; Auto vars:     Size  Location     Type
  7422 ;;  quotient        4   54[BANK0 ] unsigned long 
  7423 ;;  counter         1   58[BANK0 ] unsigned char 
  7424 ;; Return value:  Size  Location     Type
  7425 ;;                  4   46[BANK0 ] unsigned long 
  7426 ;; Registers used:
  7427 ;;		wreg, status,2, status,0
  7428 ;; Tracked objects:
  7429 ;;		On entry : 0/0
  7430 ;;		On exit  : 0/0
  7431 ;;		Unchanged: 0/0
  7432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7433 ;;      Params:         0       8       0       0       0       0       0
  7434 ;;      Locals:         0       5       0       0       0       0       0
  7435 ;;      Temps:          0       0       0       0       0       0       0
  7436 ;;      Totals:         0      13       0       0       0       0       0
  7437 ;;Total ram usage:       13 bytes
  7438 ;; Hardware stack levels used:    1
  7439 ;; Hardware stack levels required when called:    7
  7440 ;; This function calls:
  7441 ;;		Nothing
  7442 ;; This function is called by:
  7443 ;;		__doprnt
  7444 ;; This function uses a non-reentrant model
  7445 ;;
  7446                           
  7447                           	psect	text16
  7448  004F4E                     __ptext16:
  7449                           	opt stack 0
  7450  004F4E                     ___lldiv:
  7451                           	opt stack 21
  7452                           
  7453                           ; BSR set to: 0
  7454                           ;incstack = 0
  7455  004F4E  0E00               	movlw	0
  7456  004F50  0100               	movlb	0	; () banked
  7457  004F52  6F96               	movwf	___lldiv@quotient& (0+255),b
  7458  004F54  0E00               	movlw	0
  7459  004F56  6F97               	movwf	(___lldiv@quotient+1)& (0+255),b
  7460  004F58  0E00               	movlw	0
  7461  004F5A  6F98               	movwf	(___lldiv@quotient+2)& (0+255),b
  7462  004F5C  0E00               	movlw	0
  7463  004F5E  6F99               	movwf	(___lldiv@quotient+3)& (0+255),b
  7464                           
  7465                           ; BSR set to: 0
  7466  004F60  0100               	movlb	0	; () banked
  7467  004F62  5192               	movf	___lldiv@divisor& (0+255),w,b
  7468  004F64  0100               	movlb	0	; () banked
  7469  004F66  1193               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7470  004F68  0100               	movlb	0	; () banked
  7471  004F6A  1194               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7472  004F6C  0100               	movlb	0	; () banked
  7473  004F6E  1195               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  7474  004F70  B4D8               	btfsc	status,2,c
  7475  004F72  D042               	goto	l941
  7476                           
  7477                           ; BSR set to: 0
  7478  004F74  0E01               	movlw	1
  7479  004F76  0100               	movlb	0	; () banked
  7480  004F78  6F9A               	movwf	___lldiv@counter& (0+255),b
  7481  004F7A  D008               	goto	l4723
  7482  004F7C                     l4721:
  7483                           
  7484                           ; BSR set to: 0
  7485  004F7C  0100               	movlb	0	; () banked
  7486  004F7E  90D8               	bcf	status,0,c
  7487  004F80  3792               	rlcf	___lldiv@divisor& (0+255),f,b
  7488  004F82  3793               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7489  004F84  3794               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7490  004F86  3795               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7491  004F88  0100               	movlb	0	; () banked
  7492  004F8A  2B9A               	incf	___lldiv@counter& (0+255),f,b
  7493  004F8C                     l4723:
  7494                           
  7495                           ; BSR set to: 0
  7496  004F8C  0100               	movlb	0	; () banked
  7497  004F8E  AF95               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  7498  004F90  D7F5               	goto	l4721
  7499  004F92                     l4725:
  7500                           
  7501                           ; BSR set to: 0
  7502  004F92  0100               	movlb	0	; () banked
  7503  004F94  90D8               	bcf	status,0,c
  7504  004F96  3796               	rlcf	___lldiv@quotient& (0+255),f,b
  7505  004F98  3797               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  7506  004F9A  3798               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  7507  004F9C  3799               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  7508                           
  7509                           ; BSR set to: 0
  7510  004F9E  0100               	movlb	0	; () banked
  7511  004FA0  5192               	movf	___lldiv@divisor& (0+255),w,b
  7512  004FA2  0100               	movlb	0	; () banked
  7513  004FA4  5D8E               	subwf	___lldiv@dividend& (0+255),w,b
  7514  004FA6  0100               	movlb	0	; () banked
  7515  004FA8  5193               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7516  004FAA  0100               	movlb	0	; () banked
  7517  004FAC  598F               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7518  004FAE  0100               	movlb	0	; () banked
  7519  004FB0  5194               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7520  004FB2  0100               	movlb	0	; () banked
  7521  004FB4  5990               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7522  004FB6  0100               	movlb	0	; () banked
  7523  004FB8  5195               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7524  004FBA  0100               	movlb	0	; () banked
  7525  004FBC  5991               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7526  004FBE  A0D8               	btfss	status,0,c
  7527  004FC0  D012               	goto	l4733
  7528                           
  7529                           ; BSR set to: 0
  7530  004FC2  0100               	movlb	0	; () banked
  7531  004FC4  5192               	movf	___lldiv@divisor& (0+255),w,b
  7532  004FC6  0100               	movlb	0	; () banked
  7533  004FC8  5F8E               	subwf	___lldiv@dividend& (0+255),f,b
  7534  004FCA  0100               	movlb	0	; () banked
  7535  004FCC  5193               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7536  004FCE  0100               	movlb	0	; () banked
  7537  004FD0  5B8F               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7538  004FD2  0100               	movlb	0	; () banked
  7539  004FD4  5194               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7540  004FD6  0100               	movlb	0	; () banked
  7541  004FD8  5B90               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7542  004FDA  0100               	movlb	0	; () banked
  7543  004FDC  5195               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7544  004FDE  0100               	movlb	0	; () banked
  7545  004FE0  5B91               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7546                           
  7547                           ; BSR set to: 0
  7548  004FE2  0100               	movlb	0	; () banked
  7549  004FE4  8196               	bsf	___lldiv@quotient& (0+255),0,b
  7550  004FE6                     l4733:
  7551                           
  7552                           ; BSR set to: 0
  7553  004FE6  0100               	movlb	0	; () banked
  7554  004FE8  90D8               	bcf	status,0,c
  7555  004FEA  3395               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7556  004FEC  3394               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7557  004FEE  3393               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7558  004FF0  3392               	rrcf	___lldiv@divisor& (0+255),f,b
  7559                           
  7560                           ; BSR set to: 0
  7561  004FF2  0100               	movlb	0	; () banked
  7562  004FF4  2F9A               	decfsz	___lldiv@counter& (0+255),f,b
  7563  004FF6  D7CD               	goto	l4725
  7564  004FF8                     l941:
  7565                           
  7566                           ; BSR set to: 0
  7567  004FF8  C096  F08E         	movff	___lldiv@quotient,?___lldiv
  7568  004FFC  C097  F08F         	movff	___lldiv@quotient+1,?___lldiv+1
  7569  005000  C098  F090         	movff	___lldiv@quotient+2,?___lldiv+2
  7570  005004  C099  F091         	movff	___lldiv@quotient+3,?___lldiv+3
  7571                           
  7572                           ; BSR set to: 0
  7573  005008  0012               	return		;funcret
  7574  00500A                     __end_of___lldiv:
  7575                           	opt stack 0
  7576                           tosu	equ	0xFFF
  7577                           tosh	equ	0xFFE
  7578                           tosl	equ	0xFFD
  7579                           pclath	equ	0xFFA
  7580                           tblptru	equ	0xFF8
  7581                           tblptrh	equ	0xFF7
  7582                           tblptrl	equ	0xFF6
  7583                           tablat	equ	0xFF5
  7584                           prodh	equ	0xFF4
  7585                           prodl	equ	0xFF3
  7586                           intcon	equ	0xFF2
  7587                           postinc0	equ	0xFEE
  7588                           wreg	equ	0xFE8
  7589                           indf2	equ	0xFDF
  7590                           postinc2	equ	0xFDE
  7591                           postdec2	equ	0xFDD
  7592                           fsr2h	equ	0xFDA
  7593                           fsr2l	equ	0xFD9
  7594                           status	equ	0xFD8
  7595                           
  7596 ;; *************** function ___fttol *****************
  7597 ;; Defined at:
  7598 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  7599 ;; Parameters:    Size  Location     Type
  7600 ;;  f1              3    4[BANK1 ] float 
  7601 ;; Auto vars:     Size  Location     Type
  7602 ;;  lval            4   14[BANK1 ] unsigned long 
  7603 ;;  exp1            1   18[BANK1 ] unsigned char 
  7604 ;;  sign1           1   13[BANK1 ] unsigned char 
  7605 ;; Return value:  Size  Location     Type
  7606 ;;                  4    4[BANK1 ] long 
  7607 ;; Registers used:
  7608 ;;		wreg, status,2, status,0
  7609 ;; Tracked objects:
  7610 ;;		On entry : 0/0
  7611 ;;		On exit  : 0/0
  7612 ;;		Unchanged: 0/0
  7613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7614 ;;      Params:         0       0       4       0       0       0       0
  7615 ;;      Locals:         0       0       6       0       0       0       0
  7616 ;;      Temps:          0       0       5       0       0       0       0
  7617 ;;      Totals:         0       0      15       0       0       0       0
  7618 ;;Total ram usage:       15 bytes
  7619 ;; Hardware stack levels used:    1
  7620 ;; Hardware stack levels required when called:    7
  7621 ;; This function calls:
  7622 ;;		Nothing
  7623 ;; This function is called by:
  7624 ;;		__doprnt
  7625 ;; This function uses a non-reentrant model
  7626 ;;
  7627                           
  7628                           	psect	text17
  7629  004550                     __ptext17:
  7630                           	opt stack 0
  7631  004550                     ___fttol:
  7632                           	opt stack 21
  7633                           
  7634                           ; BSR set to: 0
  7635                           ;incstack = 0
  7636  004550  C106  F108         	movff	___fttol@f1+2,??___fttol
  7637  004554  0101               	movlb	1	; () banked
  7638  004556  6B09               	clrf	(??___fttol+1)& (0+255),b
  7639  004558  6B0A               	clrf	(??___fttol+2)& (0+255),b
  7640  00455A  0101               	movlb	1	; () banked
  7641  00455C  3505               	rlcf	(___fttol@f1+1)& (0+255),w,b
  7642  00455E  0101               	movlb	1	; () banked
  7643  004560  3708               	rlcf	??___fttol& (0+255),f,b
  7644  004562  E301               	bnc	u8821
  7645  004564  8109               	bsf	(??___fttol+1)& (0+255),0,b
  7646  004566                     u8821:
  7647  004566  0101               	movlb	1	; () banked
  7648  004568  5108               	movf	??___fttol& (0+255),w,b
  7649  00456A  0101               	movlb	1	; () banked
  7650  00456C  6F12               	movwf	___fttol@exp1& (0+255),b
  7651  00456E  0101               	movlb	1	; () banked
  7652  004570  5112               	movf	___fttol@exp1& (0+255),w,b
  7653  004572  A4D8               	btfss	status,2,c
  7654  004574  D00A               	goto	l6261
  7655                           
  7656                           ; BSR set to: 1
  7657  004576  0E00               	movlw	0
  7658  004578  0101               	movlb	1	; () banked
  7659  00457A  6F04               	movwf	?___fttol& (0+255),b
  7660  00457C  0E00               	movlw	0
  7661  00457E  6F05               	movwf	(?___fttol+1)& (0+255),b
  7662  004580  0E00               	movlw	0
  7663  004582  6F06               	movwf	(?___fttol+2)& (0+255),b
  7664  004584  0E00               	movlw	0
  7665  004586  6F07               	movwf	(?___fttol+3)& (0+255),b
  7666                           
  7667                           ; BSR set to: 1
  7668  004588  0012               	return	
  7669  00458A                     l6261:
  7670                           
  7671                           ; BSR set to: 1
  7672  00458A  0E17               	movlw	23
  7673  00458C  0101               	movlb	1	; () banked
  7674  00458E  6F08               	movwf	??___fttol& (0+255),b
  7675  004590  C104  F109         	movff	___fttol@f1,??___fttol+1
  7676  004594  C105  F10A         	movff	___fttol@f1+1,??___fttol+2
  7677  004598  C106  F10B         	movff	___fttol@f1+2,??___fttol+3
  7678  00459C  0101               	movlb	1	; () banked
  7679  00459E  2908               	incf	??___fttol& (0+255),w,b
  7680  0045A0  0101               	movlb	1	; () banked
  7681  0045A2  6F0C               	movwf	(??___fttol+4)& (0+255),b
  7682  0045A4  D005               	goto	u8840
  7683  0045A6                     u8845:
  7684  0045A6  0101               	movlb	1	; () banked
  7685  0045A8  90D8               	bcf	status,0,c
  7686  0045AA  330B               	rrcf	(??___fttol+3)& (0+255),f,b
  7687  0045AC  330A               	rrcf	(??___fttol+2)& (0+255),f,b
  7688  0045AE  3309               	rrcf	(??___fttol+1)& (0+255),f,b
  7689  0045B0                     u8840:
  7690  0045B0  0101               	movlb	1	; () banked
  7691  0045B2  2F0C               	decfsz	(??___fttol+4)& (0+255),f,b
  7692  0045B4  D7F8               	goto	u8845
  7693  0045B6  0101               	movlb	1	; () banked
  7694  0045B8  5109               	movf	(??___fttol+1)& (0+255),w,b
  7695  0045BA  0101               	movlb	1	; () banked
  7696  0045BC  6F0D               	movwf	___fttol@sign1& (0+255),b
  7697                           
  7698                           ; BSR set to: 1
  7699  0045BE  0101               	movlb	1	; () banked
  7700  0045C0  8F05               	bsf	(___fttol@f1+1)& (0+255),7,b
  7701                           
  7702                           ; BSR set to: 1
  7703  0045C2  0EFF               	movlw	255
  7704  0045C4  0101               	movlb	1	; () banked
  7705  0045C6  1704               	andwf	___fttol@f1& (0+255),f,b
  7706  0045C8  0EFF               	movlw	255
  7707  0045CA  0101               	movlb	1	; () banked
  7708  0045CC  1705               	andwf	(___fttol@f1+1)& (0+255),f,b
  7709  0045CE  0E00               	movlw	0
  7710  0045D0  0101               	movlb	1	; () banked
  7711  0045D2  1706               	andwf	(___fttol@f1+2)& (0+255),f,b
  7712                           
  7713                           ; BSR set to: 1
  7714  0045D4  0101               	movlb	1	; () banked
  7715  0045D6  5104               	movf	___fttol@f1& (0+255),w,b
  7716  0045D8  0101               	movlb	1	; () banked
  7717  0045DA  6F0E               	movwf	___fttol@lval& (0+255),b
  7718  0045DC  0101               	movlb	1	; () banked
  7719  0045DE  5105               	movf	(___fttol@f1+1)& (0+255),w,b
  7720  0045E0  0101               	movlb	1	; () banked
  7721  0045E2  6F0F               	movwf	(___fttol@lval+1)& (0+255),b
  7722  0045E4  0101               	movlb	1	; () banked
  7723  0045E6  5106               	movf	(___fttol@f1+2)& (0+255),w,b
  7724  0045E8  0101               	movlb	1	; () banked
  7725  0045EA  6F10               	movwf	(___fttol@lval+2)& (0+255),b
  7726  0045EC  0101               	movlb	1	; () banked
  7727  0045EE  6B11               	clrf	(___fttol@lval+3)& (0+255),b
  7728                           
  7729                           ; BSR set to: 1
  7730  0045F0  0E8E               	movlw	142
  7731  0045F2  0101               	movlb	1	; () banked
  7732  0045F4  5F12               	subwf	___fttol@exp1& (0+255),f,b
  7733                           
  7734                           ; BSR set to: 1
  7735  0045F6  0101               	movlb	1	; () banked
  7736  0045F8  AF12               	btfss	___fttol@exp1& (0+255),7,b
  7737  0045FA  D01A               	goto	l6283
  7738                           
  7739                           ; BSR set to: 1
  7740  0045FC  0101               	movlb	1	; () banked
  7741  0045FE  5112               	movf	___fttol@exp1& (0+255),w,b
  7742  004600  0A80               	xorlw	128
  7743  004602  0F8F               	addlw	143
  7744  004604  B0D8               	btfsc	status,0,c
  7745  004606  D00A               	goto	l6279
  7746                           
  7747                           ; BSR set to: 1
  7748  004608  0E00               	movlw	0
  7749  00460A  0101               	movlb	1	; () banked
  7750  00460C  6F04               	movwf	?___fttol& (0+255),b
  7751  00460E  0E00               	movlw	0
  7752  004610  6F05               	movwf	(?___fttol+1)& (0+255),b
  7753  004612  0E00               	movlw	0
  7754  004614  6F06               	movwf	(?___fttol+2)& (0+255),b
  7755  004616  0E00               	movlw	0
  7756  004618  6F07               	movwf	(?___fttol+3)& (0+255),b
  7757                           
  7758                           ; BSR set to: 1
  7759  00461A  0012               	return	
  7760  00461C                     l6279:
  7761                           
  7762                           ; BSR set to: 1
  7763  00461C  0101               	movlb	1	; () banked
  7764  00461E  90D8               	bcf	status,0,c
  7765  004620  3311               	rrcf	(___fttol@lval+3)& (0+255),f,b
  7766  004622  3310               	rrcf	(___fttol@lval+2)& (0+255),f,b
  7767  004624  330F               	rrcf	(___fttol@lval+1)& (0+255),f,b
  7768  004626  330E               	rrcf	___fttol@lval& (0+255),f,b
  7769                           
  7770                           ; BSR set to: 1
  7771  004628  0101               	movlb	1	; () banked
  7772  00462A  3F12               	incfsz	___fttol@exp1& (0+255),f,b
  7773  00462C  D7F7               	goto	l6279
  7774                           
  7775                           ; BSR set to: 1
  7776  00462E  D01B               	goto	l6293
  7777  004630                     l6283:
  7778                           
  7779                           ; BSR set to: 1
  7780  004630  0E17               	movlw	23
  7781  004632  0101               	movlb	1	; () banked
  7782  004634  6512               	cpfsgt	___fttol@exp1& (0+255),b
  7783  004636  D012               	goto	l6291
  7784                           
  7785                           ; BSR set to: 1
  7786  004638  0E00               	movlw	0
  7787  00463A  0101               	movlb	1	; () banked
  7788  00463C  6F04               	movwf	?___fttol& (0+255),b
  7789  00463E  0E00               	movlw	0
  7790  004640  6F05               	movwf	(?___fttol+1)& (0+255),b
  7791  004642  0E00               	movlw	0
  7792  004644  6F06               	movwf	(?___fttol+2)& (0+255),b
  7793  004646  0E00               	movlw	0
  7794  004648  6F07               	movwf	(?___fttol+3)& (0+255),b
  7795                           
  7796                           ; BSR set to: 1
  7797  00464A  0012               	return	
  7798  00464C                     l6289:
  7799                           
  7800                           ; BSR set to: 1
  7801  00464C  0101               	movlb	1	; () banked
  7802  00464E  90D8               	bcf	status,0,c
  7803  004650  370E               	rlcf	___fttol@lval& (0+255),f,b
  7804  004652  370F               	rlcf	(___fttol@lval+1)& (0+255),f,b
  7805  004654  3710               	rlcf	(___fttol@lval+2)& (0+255),f,b
  7806  004656  3711               	rlcf	(___fttol@lval+3)& (0+255),f,b
  7807  004658  0101               	movlb	1	; () banked
  7808  00465A  0712               	decf	___fttol@exp1& (0+255),f,b
  7809  00465C                     l6291:
  7810                           
  7811                           ; BSR set to: 1
  7812  00465C  0101               	movlb	1	; () banked
  7813  00465E  5112               	movf	___fttol@exp1& (0+255),w,b
  7814  004660  0101               	movlb	1	; () banked
  7815  004662  A4D8               	btfss	status,2,c
  7816  004664  D7F3               	goto	l6289
  7817  004666                     l6293:
  7818                           
  7819                           ; BSR set to: 1
  7820  004666  0101               	movlb	1	; () banked
  7821  004668  510D               	movf	___fttol@sign1& (0+255),w,b
  7822  00466A  0101               	movlb	1	; () banked
  7823  00466C  B4D8               	btfsc	status,2,c
  7824  00466E  D009               	goto	l6297
  7825                           
  7826                           ; BSR set to: 1
  7827  004670  0101               	movlb	1	; () banked
  7828  004672  1F11               	comf	(___fttol@lval+3)& (0+255),f,b
  7829  004674  1F10               	comf	(___fttol@lval+2)& (0+255),f,b
  7830  004676  1F0F               	comf	(___fttol@lval+1)& (0+255),f,b
  7831  004678  6D0E               	negf	___fttol@lval& (0+255),b
  7832  00467A  0E00               	movlw	0
  7833  00467C  230F               	addwfc	(___fttol@lval+1)& (0+255),f,b
  7834  00467E  2310               	addwfc	(___fttol@lval+2)& (0+255),f,b
  7835  004680  2311               	addwfc	(___fttol@lval+3)& (0+255),f,b
  7836  004682                     l6297:
  7837                           
  7838                           ; BSR set to: 1
  7839  004682  C10E  F104         	movff	___fttol@lval,?___fttol
  7840  004686  C10F  F105         	movff	___fttol@lval+1,?___fttol+1
  7841  00468A  C110  F106         	movff	___fttol@lval+2,?___fttol+2
  7842  00468E  C111  F107         	movff	___fttol@lval+3,?___fttol+3
  7843  004692  0012               	return	
  7844  004694                     __end_of___fttol:
  7845                           	opt stack 0
  7846                           tosu	equ	0xFFF
  7847                           tosh	equ	0xFFE
  7848                           tosl	equ	0xFFD
  7849                           pclath	equ	0xFFA
  7850                           tblptru	equ	0xFF8
  7851                           tblptrh	equ	0xFF7
  7852                           tblptrl	equ	0xFF6
  7853                           tablat	equ	0xFF5
  7854                           prodh	equ	0xFF4
  7855                           prodl	equ	0xFF3
  7856                           intcon	equ	0xFF2
  7857                           postinc0	equ	0xFEE
  7858                           wreg	equ	0xFE8
  7859                           indf2	equ	0xFDF
  7860                           postinc2	equ	0xFDE
  7861                           postdec2	equ	0xFDD
  7862                           fsr2h	equ	0xFDA
  7863                           fsr2l	equ	0xFD9
  7864                           status	equ	0xFD8
  7865                           
  7866 ;; *************** function ___ftsub *****************
  7867 ;; Defined at:
  7868 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  7869 ;; Parameters:    Size  Location     Type
  7870 ;;  f1              3   16[BANK1 ] float 
  7871 ;;  f2              3   19[BANK1 ] float 
  7872 ;; Auto vars:     Size  Location     Type
  7873 ;;		None
  7874 ;; Return value:  Size  Location     Type
  7875 ;;                  3   16[BANK1 ] float 
  7876 ;; Registers used:
  7877 ;;		wreg, status,2, status,0, cstack
  7878 ;; Tracked objects:
  7879 ;;		On entry : 0/0
  7880 ;;		On exit  : 0/0
  7881 ;;		Unchanged: 0/0
  7882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7883 ;;      Params:         0       0       6       0       0       0       0
  7884 ;;      Locals:         0       0       0       0       0       0       0
  7885 ;;      Temps:          0       0       0       0       0       0       0
  7886 ;;      Totals:         0       0       6       0       0       0       0
  7887 ;;Total ram usage:        6 bytes
  7888 ;; Hardware stack levels used:    1
  7889 ;; Hardware stack levels required when called:    9
  7890 ;; This function calls:
  7891 ;;		___ftadd
  7892 ;; This function is called by:
  7893 ;;		__doprnt
  7894 ;; This function uses a non-reentrant model
  7895 ;;
  7896                           
  7897                           	psect	text18
  7898  005650                     __ptext18:
  7899                           	opt stack 0
  7900  005650                     ___ftsub:
  7901                           	opt stack 19
  7902                           
  7903                           ; BSR set to: 1
  7904                           ;incstack = 0
  7905  005650  0101               	movlb	1	; () banked
  7906  005652  5113               	movf	___ftsub@f2& (0+255),w,b
  7907  005654  0101               	movlb	1	; () banked
  7908  005656  1114               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  7909  005658  0101               	movlb	1	; () banked
  7910  00565A  1115               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  7911  00565C  B4D8               	btfsc	status,2,c
  7912  00565E  D009               	goto	l6251
  7913                           
  7914                           ; BSR set to: 1
  7915  005660  0E00               	movlw	0
  7916  005662  0101               	movlb	1	; () banked
  7917  005664  1B13               	xorwf	___ftsub@f2& (0+255),f,b
  7918  005666  0E00               	movlw	0
  7919  005668  0101               	movlb	1	; () banked
  7920  00566A  1B14               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  7921  00566C  0E80               	movlw	128
  7922  00566E  0101               	movlb	1	; () banked
  7923  005670  1B15               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  7924  005672                     l6251:
  7925                           
  7926                           ; BSR set to: 1
  7927  005672  C110  F107         	movff	___ftsub@f1,___ftadd@f1
  7928  005676  C111  F108         	movff	___ftsub@f1+1,___ftadd@f1+1
  7929  00567A  C112  F109         	movff	___ftsub@f1+2,___ftadd@f1+2
  7930  00567E  C113  F10A         	movff	___ftsub@f2,___ftadd@f2
  7931  005682  C114  F10B         	movff	___ftsub@f2+1,___ftadd@f2+1
  7932  005686  C115  F10C         	movff	___ftsub@f2+2,___ftadd@f2+2
  7933  00568A  EC0E  F01B         	call	___ftadd	;wreg free
  7934  00568E  C107  F110         	movff	?___ftadd,?___ftsub
  7935  005692  C108  F111         	movff	?___ftadd+1,?___ftsub+1
  7936  005696  C109  F112         	movff	?___ftadd+2,?___ftsub+2
  7937  00569A  0012               	return	
  7938  00569C                     __end_of___ftsub:
  7939                           	opt stack 0
  7940                           tosu	equ	0xFFF
  7941                           tosh	equ	0xFFE
  7942                           tosl	equ	0xFFD
  7943                           pclath	equ	0xFFA
  7944                           tblptru	equ	0xFF8
  7945                           tblptrh	equ	0xFF7
  7946                           tblptrl	equ	0xFF6
  7947                           tablat	equ	0xFF5
  7948                           prodh	equ	0xFF4
  7949                           prodl	equ	0xFF3
  7950                           intcon	equ	0xFF2
  7951                           postinc0	equ	0xFEE
  7952                           wreg	equ	0xFE8
  7953                           indf2	equ	0xFDF
  7954                           postinc2	equ	0xFDE
  7955                           postdec2	equ	0xFDD
  7956                           fsr2h	equ	0xFDA
  7957                           fsr2l	equ	0xFD9
  7958                           status	equ	0xFD8
  7959                           
  7960 ;; *************** function ___ftadd *****************
  7961 ;; Defined at:
  7962 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  7963 ;; Parameters:    Size  Location     Type
  7964 ;;  f1              3    7[BANK1 ] float 
  7965 ;;  f2              3   10[BANK1 ] float 
  7966 ;; Auto vars:     Size  Location     Type
  7967 ;;  exp1            1   15[BANK1 ] unsigned char 
  7968 ;;  exp2            1   14[BANK1 ] unsigned char 
  7969 ;;  sign            1   13[BANK1 ] unsigned char 
  7970 ;; Return value:  Size  Location     Type
  7971 ;;                  3    7[BANK1 ] float 
  7972 ;; Registers used:
  7973 ;;		wreg, status,2, status,0, cstack
  7974 ;; Tracked objects:
  7975 ;;		On entry : 0/0
  7976 ;;		On exit  : 0/0
  7977 ;;		Unchanged: 0/0
  7978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7979 ;;      Params:         0       0       6       0       0       0       0
  7980 ;;      Locals:         0       0       3       0       0       0       0
  7981 ;;      Temps:          0       3       0       0       0       0       0
  7982 ;;      Totals:         0       3       9       0       0       0       0
  7983 ;;Total ram usage:       12 bytes
  7984 ;; Hardware stack levels used:    1
  7985 ;; Hardware stack levels required when called:    8
  7986 ;; This function calls:
  7987 ;;		___ftpack
  7988 ;; This function is called by:
  7989 ;;		__doprnt
  7990 ;;		___ftsub
  7991 ;; This function uses a non-reentrant model
  7992 ;;
  7993                           
  7994                           	psect	text19
  7995  00361C                     __ptext19:
  7996                           	opt stack 0
  7997  00361C                     ___ftadd:
  7998                           	opt stack 19
  7999                           
  8000                           ;incstack = 0
  8001  00361C  C109  F0B4         	movff	___ftadd@f1+2,??___ftadd
  8002  003620  0100               	movlb	0	; () banked
  8003  003622  6BB5               	clrf	(??___ftadd+1)& (0+255),b
  8004  003624  6BB6               	clrf	(??___ftadd+2)& (0+255),b
  8005  003626  0101               	movlb	1	; () banked
  8006  003628  3508               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  8007  00362A  0100               	movlb	0	; () banked
  8008  00362C  37B4               	rlcf	??___ftadd& (0+255),f,b
  8009  00362E  E301               	bnc	u8351
  8010  003630  81B5               	bsf	(??___ftadd+1)& (0+255),0,b
  8011  003632                     u8351:
  8012  003632  0100               	movlb	0	; () banked
  8013  003634  51B4               	movf	??___ftadd& (0+255),w,b
  8014  003636  0101               	movlb	1	; () banked
  8015  003638  6F0F               	movwf	___ftadd@exp1& (0+255),b
  8016  00363A  C10C  F0B4         	movff	___ftadd@f2+2,??___ftadd
  8017  00363E  0100               	movlb	0	; () banked
  8018  003640  6BB5               	clrf	(??___ftadd+1)& (0+255),b
  8019  003642  6BB6               	clrf	(??___ftadd+2)& (0+255),b
  8020  003644  0101               	movlb	1	; () banked
  8021  003646  350B               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  8022  003648  0100               	movlb	0	; () banked
  8023  00364A  37B4               	rlcf	??___ftadd& (0+255),f,b
  8024  00364C  E301               	bnc	u8361
  8025  00364E  81B5               	bsf	(??___ftadd+1)& (0+255),0,b
  8026  003650                     u8361:
  8027  003650  0100               	movlb	0	; () banked
  8028  003652  51B4               	movf	??___ftadd& (0+255),w,b
  8029  003654  0101               	movlb	1	; () banked
  8030  003656  6F0E               	movwf	___ftadd@exp2& (0+255),b
  8031                           
  8032                           ; BSR set to: 1
  8033  003658  0101               	movlb	1	; () banked
  8034  00365A  510F               	movf	___ftadd@exp1& (0+255),w,b
  8035  00365C  0101               	movlb	1	; () banked
  8036  00365E  B4D8               	btfsc	status,2,c
  8037  003660  D011               	goto	l795
  8038                           
  8039                           ; BSR set to: 1
  8040  003662  0101               	movlb	1	; () banked
  8041  003664  510E               	movf	___ftadd@exp2& (0+255),w,b
  8042  003666  0101               	movlb	1	; () banked
  8043  003668  5D0F               	subwf	___ftadd@exp1& (0+255),w,b
  8044  00366A  B0D8               	btfsc	status,0,c
  8045  00366C  D012               	goto	l5997
  8046                           
  8047                           ; BSR set to: 1
  8048  00366E  0101               	movlb	1	; () banked
  8049  003670  510F               	movf	___ftadd@exp1& (0+255),w,b
  8050  003672  0800               	sublw	0
  8051  003674  0101               	movlb	1	; () banked
  8052  003676  250E               	addwf	___ftadd@exp2& (0+255),w,b
  8053  003678  0100               	movlb	0	; () banked
  8054  00367A  6FB4               	movwf	??___ftadd& (0+255),b
  8055  00367C  0E18               	movlw	24
  8056  00367E  0100               	movlb	0	; () banked
  8057  003680  65B4               	cpfsgt	??___ftadd& (0+255),b
  8058  003682  D007               	goto	l5997
  8059  003684                     l795:
  8060  003684  C10A  F107         	movff	___ftadd@f2,?___ftadd
  8061  003688  C10B  F108         	movff	___ftadd@f2+1,?___ftadd+1
  8062  00368C  C10C  F109         	movff	___ftadd@f2+2,?___ftadd+2
  8063  003690  0012               	return	
  8064  003692                     l5997:
  8065  003692  0101               	movlb	1	; () banked
  8066  003694  510E               	movf	___ftadd@exp2& (0+255),w,b
  8067  003696  0101               	movlb	1	; () banked
  8068  003698  B4D8               	btfsc	status,2,c
  8069  00369A  D011               	goto	l799
  8070                           
  8071                           ; BSR set to: 1
  8072  00369C  0101               	movlb	1	; () banked
  8073  00369E  510F               	movf	___ftadd@exp1& (0+255),w,b
  8074  0036A0  0101               	movlb	1	; () banked
  8075  0036A2  5D0E               	subwf	___ftadd@exp2& (0+255),w,b
  8076  0036A4  B0D8               	btfsc	status,0,c
  8077  0036A6  D012               	goto	l6003
  8078                           
  8079                           ; BSR set to: 1
  8080  0036A8  0101               	movlb	1	; () banked
  8081  0036AA  510E               	movf	___ftadd@exp2& (0+255),w,b
  8082  0036AC  0800               	sublw	0
  8083  0036AE  0101               	movlb	1	; () banked
  8084  0036B0  250F               	addwf	___ftadd@exp1& (0+255),w,b
  8085  0036B2  0100               	movlb	0	; () banked
  8086  0036B4  6FB4               	movwf	??___ftadd& (0+255),b
  8087  0036B6  0E18               	movlw	24
  8088  0036B8  0100               	movlb	0	; () banked
  8089  0036BA  65B4               	cpfsgt	??___ftadd& (0+255),b
  8090  0036BC  D007               	goto	l6003
  8091  0036BE                     l799:
  8092  0036BE  C107  F107         	movff	___ftadd@f1,?___ftadd
  8093  0036C2  C108  F108         	movff	___ftadd@f1+1,?___ftadd+1
  8094  0036C6  C109  F109         	movff	___ftadd@f1+2,?___ftadd+2
  8095  0036CA  0012               	return	
  8096  0036CC                     l6003:
  8097  0036CC  0E06               	movlw	6
  8098  0036CE  0101               	movlb	1	; () banked
  8099  0036D0  6F0D               	movwf	___ftadd@sign& (0+255),b
  8100                           
  8101                           ; BSR set to: 1
  8102  0036D2  0101               	movlb	1	; () banked
  8103  0036D4  AF09               	btfss	(___ftadd@f1+2)& (0+255),7,b
  8104  0036D6  D002               	goto	l6009
  8105                           
  8106                           ; BSR set to: 1
  8107  0036D8  0101               	movlb	1	; () banked
  8108  0036DA  8F0D               	bsf	___ftadd@sign& (0+255),7,b
  8109  0036DC                     l6009:
  8110                           
  8111                           ; BSR set to: 1
  8112  0036DC  0101               	movlb	1	; () banked
  8113  0036DE  AF0C               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8114  0036E0  D002               	goto	l801
  8115                           
  8116                           ; BSR set to: 1
  8117  0036E2  0101               	movlb	1	; () banked
  8118  0036E4  8D0D               	bsf	___ftadd@sign& (0+255),6,b
  8119  0036E6                     l801:
  8120                           
  8121                           ; BSR set to: 1
  8122  0036E6  0101               	movlb	1	; () banked
  8123  0036E8  8F08               	bsf	(___ftadd@f1+1)& (0+255),7,b
  8124                           
  8125                           ; BSR set to: 1
  8126  0036EA  0EFF               	movlw	255
  8127  0036EC  0101               	movlb	1	; () banked
  8128  0036EE  1707               	andwf	___ftadd@f1& (0+255),f,b
  8129  0036F0  0EFF               	movlw	255
  8130  0036F2  0101               	movlb	1	; () banked
  8131  0036F4  1708               	andwf	(___ftadd@f1+1)& (0+255),f,b
  8132  0036F6  0E00               	movlw	0
  8133  0036F8  0101               	movlb	1	; () banked
  8134  0036FA  1709               	andwf	(___ftadd@f1+2)& (0+255),f,b
  8135  0036FC  0101               	movlb	1	; () banked
  8136  0036FE  8F0B               	bsf	(___ftadd@f2+1)& (0+255),7,b
  8137                           
  8138                           ; BSR set to: 1
  8139  003700  0EFF               	movlw	255
  8140  003702  0101               	movlb	1	; () banked
  8141  003704  170A               	andwf	___ftadd@f2& (0+255),f,b
  8142  003706  0EFF               	movlw	255
  8143  003708  0101               	movlb	1	; () banked
  8144  00370A  170B               	andwf	(___ftadd@f2+1)& (0+255),f,b
  8145  00370C  0E00               	movlw	0
  8146  00370E  0101               	movlb	1	; () banked
  8147  003710  170C               	andwf	(___ftadd@f2+2)& (0+255),f,b
  8148                           
  8149                           ; BSR set to: 1
  8150  003712  0101               	movlb	1	; () banked
  8151  003714  510E               	movf	___ftadd@exp2& (0+255),w,b
  8152  003716  0101               	movlb	1	; () banked
  8153  003718  5D0F               	subwf	___ftadd@exp1& (0+255),w,b
  8154  00371A  B0D8               	btfsc	status,0,c
  8155  00371C  D025               	goto	l6029
  8156  00371E                     l6019:
  8157  00371E  0101               	movlb	1	; () banked
  8158  003720  90D8               	bcf	status,0,c
  8159  003722  370A               	rlcf	___ftadd@f2& (0+255),f,b
  8160  003724  370B               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  8161  003726  370C               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  8162  003728  0101               	movlb	1	; () banked
  8163  00372A  070E               	decf	___ftadd@exp2& (0+255),f,b
  8164                           
  8165                           ; BSR set to: 1
  8166  00372C  0101               	movlb	1	; () banked
  8167  00372E  510F               	movf	___ftadd@exp1& (0+255),w,b
  8168  003730  0101               	movlb	1	; () banked
  8169  003732  190E               	xorwf	___ftadd@exp2& (0+255),w,b
  8170  003734  B4D8               	btfsc	status,2,c
  8171  003736  D011               	goto	l6027
  8172                           
  8173                           ; BSR set to: 1
  8174  003738  0101               	movlb	1	; () banked
  8175  00373A  070D               	decf	___ftadd@sign& (0+255),f,b
  8176  00373C  C10D  F0B4         	movff	___ftadd@sign,??___ftadd
  8177  003740  0E07               	movlw	7
  8178  003742  0100               	movlb	0	; () banked
  8179  003744  17B4               	andwf	??___ftadd& (0+255),f,b
  8180  003746  B4D8               	btfsc	status,2,c
  8181  003748  D008               	goto	l6027
  8182  00374A  D7E9               	goto	l6019
  8183  00374C                     l6025:
  8184  00374C  0101               	movlb	1	; () banked
  8185  00374E  90D8               	bcf	status,0,c
  8186  003750  3309               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  8187  003752  3308               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  8188  003754  3307               	rrcf	___ftadd@f1& (0+255),f,b
  8189  003756  0101               	movlb	1	; () banked
  8190  003758  2B0F               	incf	___ftadd@exp1& (0+255),f,b
  8191  00375A                     l6027:
  8192  00375A  0101               	movlb	1	; () banked
  8193  00375C  510E               	movf	___ftadd@exp2& (0+255),w,b
  8194  00375E  0101               	movlb	1	; () banked
  8195  003760  190F               	xorwf	___ftadd@exp1& (0+255),w,b
  8196  003762  B4D8               	btfsc	status,2,c
  8197  003764  D02B               	goto	l810
  8198  003766  D7F2               	goto	l6025
  8199  003768                     l6029:
  8200                           
  8201                           ; BSR set to: 1
  8202  003768  0101               	movlb	1	; () banked
  8203  00376A  510F               	movf	___ftadd@exp1& (0+255),w,b
  8204  00376C  0101               	movlb	1	; () banked
  8205  00376E  5D0E               	subwf	___ftadd@exp2& (0+255),w,b
  8206  003770  B0D8               	btfsc	status,0,c
  8207  003772  D024               	goto	l810
  8208  003774                     l6031:
  8209  003774  0101               	movlb	1	; () banked
  8210  003776  90D8               	bcf	status,0,c
  8211  003778  3707               	rlcf	___ftadd@f1& (0+255),f,b
  8212  00377A  3708               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  8213  00377C  3709               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  8214  00377E  0101               	movlb	1	; () banked
  8215  003780  070F               	decf	___ftadd@exp1& (0+255),f,b
  8216                           
  8217                           ; BSR set to: 1
  8218  003782  0101               	movlb	1	; () banked
  8219  003784  510F               	movf	___ftadd@exp1& (0+255),w,b
  8220  003786  0101               	movlb	1	; () banked
  8221  003788  190E               	xorwf	___ftadd@exp2& (0+255),w,b
  8222  00378A  B4D8               	btfsc	status,2,c
  8223  00378C  D011               	goto	l6039
  8224                           
  8225                           ; BSR set to: 1
  8226  00378E  0101               	movlb	1	; () banked
  8227  003790  070D               	decf	___ftadd@sign& (0+255),f,b
  8228  003792  C10D  F0B4         	movff	___ftadd@sign,??___ftadd
  8229  003796  0E07               	movlw	7
  8230  003798  0100               	movlb	0	; () banked
  8231  00379A  17B4               	andwf	??___ftadd& (0+255),f,b
  8232  00379C  B4D8               	btfsc	status,2,c
  8233  00379E  D008               	goto	l6039
  8234  0037A0  D7E9               	goto	l6031
  8235  0037A2                     l6037:
  8236  0037A2  0101               	movlb	1	; () banked
  8237  0037A4  90D8               	bcf	status,0,c
  8238  0037A6  330C               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  8239  0037A8  330B               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  8240  0037AA  330A               	rrcf	___ftadd@f2& (0+255),f,b
  8241  0037AC  0101               	movlb	1	; () banked
  8242  0037AE  2B0E               	incf	___ftadd@exp2& (0+255),f,b
  8243  0037B0                     l6039:
  8244  0037B0  0101               	movlb	1	; () banked
  8245  0037B2  510E               	movf	___ftadd@exp2& (0+255),w,b
  8246  0037B4  0101               	movlb	1	; () banked
  8247  0037B6  190F               	xorwf	___ftadd@exp1& (0+255),w,b
  8248  0037B8  A4D8               	btfss	status,2,c
  8249  0037BA  D7F3               	goto	l6037
  8250  0037BC                     l810:
  8251                           
  8252                           ; BSR set to: 1
  8253  0037BC  0101               	movlb	1	; () banked
  8254  0037BE  AF0D               	btfss	___ftadd@sign& (0+255),7,b
  8255  0037C0  D012               	goto	l819
  8256                           
  8257                           ; BSR set to: 1
  8258  0037C2  0EFF               	movlw	255
  8259  0037C4  0101               	movlb	1	; () banked
  8260  0037C6  1B07               	xorwf	___ftadd@f1& (0+255),f,b
  8261  0037C8  0EFF               	movlw	255
  8262  0037CA  0101               	movlb	1	; () banked
  8263  0037CC  1B08               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  8264  0037CE  0EFF               	movlw	255
  8265  0037D0  0101               	movlb	1	; () banked
  8266  0037D2  1B09               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  8267  0037D4  0E01               	movlw	1
  8268  0037D6  0101               	movlb	1	; () banked
  8269  0037D8  2707               	addwf	___ftadd@f1& (0+255),f,b
  8270  0037DA  0E00               	movlw	0
  8271  0037DC  0101               	movlb	1	; () banked
  8272  0037DE  2308               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  8273  0037E0  0E00               	movlw	0
  8274  0037E2  0101               	movlb	1	; () banked
  8275  0037E4  2309               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  8276  0037E6                     l819:
  8277                           
  8278                           ; BSR set to: 1
  8279  0037E6  0101               	movlb	1	; () banked
  8280  0037E8  AD0D               	btfss	___ftadd@sign& (0+255),6,b
  8281  0037EA  D012               	goto	l6045
  8282                           
  8283                           ; BSR set to: 1
  8284  0037EC  0EFF               	movlw	255
  8285  0037EE  0101               	movlb	1	; () banked
  8286  0037F0  1B0A               	xorwf	___ftadd@f2& (0+255),f,b
  8287  0037F2  0EFF               	movlw	255
  8288  0037F4  0101               	movlb	1	; () banked
  8289  0037F6  1B0B               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8290  0037F8  0EFF               	movlw	255
  8291  0037FA  0101               	movlb	1	; () banked
  8292  0037FC  1B0C               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8293  0037FE  0E01               	movlw	1
  8294  003800  0101               	movlb	1	; () banked
  8295  003802  270A               	addwf	___ftadd@f2& (0+255),f,b
  8296  003804  0E00               	movlw	0
  8297  003806  0101               	movlb	1	; () banked
  8298  003808  230B               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8299  00380A  0E00               	movlw	0
  8300  00380C  0101               	movlb	1	; () banked
  8301  00380E  230C               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8302  003810                     l6045:
  8303                           
  8304                           ; BSR set to: 1
  8305  003810  0E00               	movlw	0
  8306  003812  0101               	movlb	1	; () banked
  8307  003814  6F0D               	movwf	___ftadd@sign& (0+255),b
  8308                           
  8309                           ; BSR set to: 1
  8310  003816  0101               	movlb	1	; () banked
  8311  003818  5107               	movf	___ftadd@f1& (0+255),w,b
  8312  00381A  0101               	movlb	1	; () banked
  8313  00381C  270A               	addwf	___ftadd@f2& (0+255),f,b
  8314  00381E  0101               	movlb	1	; () banked
  8315  003820  5108               	movf	(___ftadd@f1+1)& (0+255),w,b
  8316  003822  0101               	movlb	1	; () banked
  8317  003824  230B               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8318  003826  0101               	movlb	1	; () banked
  8319  003828  5109               	movf	(___ftadd@f1+2)& (0+255),w,b
  8320  00382A  0101               	movlb	1	; () banked
  8321  00382C  230C               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8322                           
  8323                           ; BSR set to: 1
  8324  00382E  0101               	movlb	1	; () banked
  8325  003830  AF0C               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8326  003832  D015               	goto	l6055
  8327                           
  8328                           ; BSR set to: 1
  8329  003834  0EFF               	movlw	255
  8330  003836  0101               	movlb	1	; () banked
  8331  003838  1B0A               	xorwf	___ftadd@f2& (0+255),f,b
  8332  00383A  0EFF               	movlw	255
  8333  00383C  0101               	movlb	1	; () banked
  8334  00383E  1B0B               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8335  003840  0EFF               	movlw	255
  8336  003842  0101               	movlb	1	; () banked
  8337  003844  1B0C               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8338  003846  0E01               	movlw	1
  8339  003848  0101               	movlb	1	; () banked
  8340  00384A  270A               	addwf	___ftadd@f2& (0+255),f,b
  8341  00384C  0E00               	movlw	0
  8342  00384E  0101               	movlb	1	; () banked
  8343  003850  230B               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8344  003852  0E00               	movlw	0
  8345  003854  0101               	movlb	1	; () banked
  8346  003856  230C               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8347                           
  8348                           ; BSR set to: 1
  8349  003858  0E01               	movlw	1
  8350  00385A  0101               	movlb	1	; () banked
  8351  00385C  6F0D               	movwf	___ftadd@sign& (0+255),b
  8352  00385E                     l6055:
  8353                           
  8354                           ; BSR set to: 1
  8355  00385E  C10A  F08E         	movff	___ftadd@f2,___ftpack@arg
  8356  003862  C10B  F08F         	movff	___ftadd@f2+1,___ftpack@arg+1
  8357  003866  C10C  F090         	movff	___ftadd@f2+2,___ftpack@arg+2
  8358  00386A  C10F  F091         	movff	___ftadd@exp1,___ftpack@exp
  8359  00386E  C10D  F092         	movff	___ftadd@sign,___ftpack@sign
  8360  003872  EC77  F024         	call	___ftpack	;wreg free
  8361  003876  C08E  F107         	movff	?___ftpack,?___ftadd
  8362  00387A  C08F  F108         	movff	?___ftpack+1,?___ftadd+1
  8363  00387E  C090  F109         	movff	?___ftpack+2,?___ftadd+2
  8364  003882  0012               	return	
  8365  003884                     __end_of___ftadd:
  8366                           	opt stack 0
  8367                           tosu	equ	0xFFF
  8368                           tosh	equ	0xFFE
  8369                           tosl	equ	0xFFD
  8370                           pclath	equ	0xFFA
  8371                           tblptru	equ	0xFF8
  8372                           tblptrh	equ	0xFF7
  8373                           tblptrl	equ	0xFF6
  8374                           tablat	equ	0xFF5
  8375                           prodh	equ	0xFF4
  8376                           prodl	equ	0xFF3
  8377                           intcon	equ	0xFF2
  8378                           postinc0	equ	0xFEE
  8379                           wreg	equ	0xFE8
  8380                           indf2	equ	0xFDF
  8381                           postinc2	equ	0xFDE
  8382                           postdec2	equ	0xFDD
  8383                           fsr2h	equ	0xFDA
  8384                           fsr2l	equ	0xFD9
  8385                           status	equ	0xFD8
  8386                           
  8387 ;; *************** function ___ftneg *****************
  8388 ;; Defined at:
  8389 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;  f1              3   46[BANK0 ] float 
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;		None
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  3   46[BANK0 ] float 
  8396 ;; Registers used:
  8397 ;;		wreg, status,2, status,0
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8403 ;;      Params:         0       3       0       0       0       0       0
  8404 ;;      Locals:         0       0       0       0       0       0       0
  8405 ;;      Temps:          0       0       0       0       0       0       0
  8406 ;;      Totals:         0       3       0       0       0       0       0
  8407 ;;Total ram usage:        3 bytes
  8408 ;; Hardware stack levels used:    1
  8409 ;; Hardware stack levels required when called:    7
  8410 ;; This function calls:
  8411 ;;		Nothing
  8412 ;; This function is called by:
  8413 ;;		__doprnt
  8414 ;; This function uses a non-reentrant model
  8415 ;;
  8416                           
  8417                           	psect	text20
  8418  005892                     __ptext20:
  8419                           	opt stack 0
  8420  005892                     ___ftneg:
  8421                           	opt stack 21
  8422                           
  8423                           ;incstack = 0
  8424  005892  0100               	movlb	0	; () banked
  8425  005894  518E               	movf	___ftneg@f1& (0+255),w,b
  8426  005896  0100               	movlb	0	; () banked
  8427  005898  118F               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  8428  00589A  0100               	movlb	0	; () banked
  8429  00589C  1190               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  8430  00589E  B4D8               	btfsc	status,2,c
  8431  0058A0  D009               	goto	l869
  8432                           
  8433                           ; BSR set to: 0
  8434  0058A2  0E00               	movlw	0
  8435  0058A4  0100               	movlb	0	; () banked
  8436  0058A6  1B8E               	xorwf	___ftneg@f1& (0+255),f,b
  8437  0058A8  0E00               	movlw	0
  8438  0058AA  0100               	movlb	0	; () banked
  8439  0058AC  1B8F               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  8440  0058AE  0E80               	movlw	128
  8441  0058B0  0100               	movlb	0	; () banked
  8442  0058B2  1B90               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  8443  0058B4                     l869:
  8444                           
  8445                           ; BSR set to: 0
  8446  0058B4  C08E  F08E         	movff	___ftneg@f1,?___ftneg
  8447  0058B8  C08F  F08F         	movff	___ftneg@f1+1,?___ftneg+1
  8448  0058BC  C090  F090         	movff	___ftneg@f1+2,?___ftneg+2
  8449                           
  8450                           ; BSR set to: 0
  8451  0058C0  0012               	return		;funcret
  8452  0058C2                     __end_of___ftneg:
  8453                           	opt stack 0
  8454                           tosu	equ	0xFFF
  8455                           tosh	equ	0xFFE
  8456                           tosl	equ	0xFFD
  8457                           pclath	equ	0xFFA
  8458                           tblptru	equ	0xFF8
  8459                           tblptrh	equ	0xFF7
  8460                           tblptrl	equ	0xFF6
  8461                           tablat	equ	0xFF5
  8462                           prodh	equ	0xFF4
  8463                           prodl	equ	0xFF3
  8464                           intcon	equ	0xFF2
  8465                           postinc0	equ	0xFEE
  8466                           wreg	equ	0xFE8
  8467                           indf2	equ	0xFDF
  8468                           postinc2	equ	0xFDE
  8469                           postdec2	equ	0xFDD
  8470                           fsr2h	equ	0xFDA
  8471                           fsr2l	equ	0xFD9
  8472                           status	equ	0xFD8
  8473                           
  8474 ;; *************** function ___ftge *****************
  8475 ;; Defined at:
  8476 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  8477 ;; Parameters:    Size  Location     Type
  8478 ;;  ff1             3   46[BANK0 ] float 
  8479 ;;  ff2             3   49[BANK0 ] float 
  8480 ;; Auto vars:     Size  Location     Type
  8481 ;;		None
  8482 ;; Return value:  Size  Location     Type
  8483 ;;		None               void
  8484 ;; Registers used:
  8485 ;;		wreg, status,2, status,0
  8486 ;; Tracked objects:
  8487 ;;		On entry : 0/0
  8488 ;;		On exit  : 0/0
  8489 ;;		Unchanged: 0/0
  8490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8491 ;;      Params:         0       6       0       0       0       0       0
  8492 ;;      Locals:         0       0       0       0       0       0       0
  8493 ;;      Temps:          0       3       0       0       0       0       0
  8494 ;;      Totals:         0       9       0       0       0       0       0
  8495 ;;Total ram usage:        9 bytes
  8496 ;; Hardware stack levels used:    1
  8497 ;; Hardware stack levels required when called:    7
  8498 ;; This function calls:
  8499 ;;		Nothing
  8500 ;; This function is called by:
  8501 ;;		_main
  8502 ;;		__doprnt
  8503 ;; This function uses a non-reentrant model
  8504 ;;
  8505                           
  8506                           	psect	text21
  8507  004DC8                     __ptext21:
  8508                           	opt stack 0
  8509  004DC8                     ___ftge:
  8510                           	opt stack 21
  8511                           
  8512                           ; BSR set to: 0
  8513                           ;incstack = 0
  8514  004DC8  0100               	movlb	0	; () banked
  8515  004DCA  AF90               	btfss	(___ftge@ff1+2)& (0+255),7,b
  8516  004DCC  D01D               	goto	l4651
  8517                           
  8518                           ; BSR set to: 0
  8519  004DCE  C08E  F094         	movff	___ftge@ff1,??___ftge
  8520  004DD2  C08F  F095         	movff	___ftge@ff1+1,??___ftge+1
  8521  004DD6  C090  F096         	movff	___ftge@ff1+2,??___ftge+2
  8522  004DDA  0100               	movlb	0	; () banked
  8523  004DDC  1F94               	comf	??___ftge& (0+255),f,b
  8524  004DDE  1F95               	comf	(??___ftge+1)& (0+255),f,b
  8525  004DE0  1F96               	comf	(??___ftge+2)& (0+255),f,b
  8526  004DE2  2B94               	incf	??___ftge& (0+255),f,b
  8527  004DE4  0E00               	movlw	0
  8528  004DE6  2395               	addwfc	(??___ftge+1)& (0+255),f,b
  8529  004DE8  2396               	addwfc	(??___ftge+2)& (0+255),f,b
  8530  004DEA  0E00               	movlw	0
  8531  004DEC  0100               	movlb	0	; () banked
  8532  004DEE  2594               	addwf	??___ftge& (0+255),w,b
  8533  004DF0  0100               	movlb	0	; () banked
  8534  004DF2  6F8E               	movwf	___ftge@ff1& (0+255),b
  8535  004DF4  0E00               	movlw	0
  8536  004DF6  0100               	movlb	0	; () banked
  8537  004DF8  2195               	addwfc	(??___ftge+1)& (0+255),w,b
  8538  004DFA  0100               	movlb	0	; () banked
  8539  004DFC  6F8F               	movwf	(___ftge@ff1+1)& (0+255),b
  8540  004DFE  0E80               	movlw	128
  8541  004E00  0100               	movlb	0	; () banked
  8542  004E02  2196               	addwfc	(??___ftge+2)& (0+255),w,b
  8543  004E04  0100               	movlb	0	; () banked
  8544  004E06  6F90               	movwf	(___ftge@ff1+2)& (0+255),b
  8545  004E08                     l4651:
  8546                           
  8547                           ; BSR set to: 0
  8548  004E08  0100               	movlb	0	; () banked
  8549  004E0A  AF93               	btfss	(___ftge@ff2+2)& (0+255),7,b
  8550  004E0C  D01D               	goto	l4655
  8551                           
  8552                           ; BSR set to: 0
  8553  004E0E  C091  F094         	movff	___ftge@ff2,??___ftge
  8554  004E12  C092  F095         	movff	___ftge@ff2+1,??___ftge+1
  8555  004E16  C093  F096         	movff	___ftge@ff2+2,??___ftge+2
  8556  004E1A  0100               	movlb	0	; () banked
  8557  004E1C  1F94               	comf	??___ftge& (0+255),f,b
  8558  004E1E  1F95               	comf	(??___ftge+1)& (0+255),f,b
  8559  004E20  1F96               	comf	(??___ftge+2)& (0+255),f,b
  8560  004E22  2B94               	incf	??___ftge& (0+255),f,b
  8561  004E24  0E00               	movlw	0
  8562  004E26  2395               	addwfc	(??___ftge+1)& (0+255),f,b
  8563  004E28  2396               	addwfc	(??___ftge+2)& (0+255),f,b
  8564  004E2A  0E00               	movlw	0
  8565  004E2C  0100               	movlb	0	; () banked
  8566  004E2E  2594               	addwf	??___ftge& (0+255),w,b
  8567  004E30  0100               	movlb	0	; () banked
  8568  004E32  6F91               	movwf	___ftge@ff2& (0+255),b
  8569  004E34  0E00               	movlw	0
  8570  004E36  0100               	movlb	0	; () banked
  8571  004E38  2195               	addwfc	(??___ftge+1)& (0+255),w,b
  8572  004E3A  0100               	movlb	0	; () banked
  8573  004E3C  6F92               	movwf	(___ftge@ff2+1)& (0+255),b
  8574  004E3E  0E80               	movlw	128
  8575  004E40  0100               	movlb	0	; () banked
  8576  004E42  2196               	addwfc	(??___ftge+2)& (0+255),w,b
  8577  004E44  0100               	movlb	0	; () banked
  8578  004E46  6F93               	movwf	(___ftge@ff2+2)& (0+255),b
  8579  004E48                     l4655:
  8580                           
  8581                           ; BSR set to: 0
  8582  004E48  0E00               	movlw	0
  8583  004E4A  0100               	movlb	0	; () banked
  8584  004E4C  1B8E               	xorwf	___ftge@ff1& (0+255),f,b
  8585  004E4E  0E00               	movlw	0
  8586  004E50  0100               	movlb	0	; () banked
  8587  004E52  1B8F               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  8588  004E54  0E80               	movlw	128
  8589  004E56  0100               	movlb	0	; () banked
  8590  004E58  1B90               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  8591                           
  8592                           ; BSR set to: 0
  8593  004E5A  0E00               	movlw	0
  8594  004E5C  0100               	movlb	0	; () banked
  8595  004E5E  1B91               	xorwf	___ftge@ff2& (0+255),f,b
  8596  004E60  0E00               	movlw	0
  8597  004E62  0100               	movlb	0	; () banked
  8598  004E64  1B92               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  8599  004E66  0E80               	movlw	128
  8600  004E68  0100               	movlb	0	; () banked
  8601  004E6A  1B93               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  8602  004E6C  0100               	movlb	0	; () banked
  8603  004E6E  5191               	movf	___ftge@ff2& (0+255),w,b
  8604  004E70  0100               	movlb	0	; () banked
  8605  004E72  5D8E               	subwf	___ftge@ff1& (0+255),w,b
  8606  004E74  0100               	movlb	0	; () banked
  8607  004E76  5192               	movf	(___ftge@ff2+1)& (0+255),w,b
  8608  004E78  0100               	movlb	0	; () banked
  8609  004E7A  598F               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  8610  004E7C  0100               	movlb	0	; () banked
  8611  004E7E  5193               	movf	(___ftge@ff2+2)& (0+255),w,b
  8612  004E80  0100               	movlb	0	; () banked
  8613  004E82  5990               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  8614  004E84  B0D8               	btfsc	status,0,c
  8615  004E86  D002               	goto	l4661
  8616                           
  8617                           ; BSR set to: 0
  8618  004E88  90D8               	bcf	status,0,c
  8619  004E8A  0012               	return	
  8620  004E8C                     l4661:
  8621                           
  8622                           ; BSR set to: 0
  8623  004E8C  80D8               	bsf	status,0,c
  8624                           
  8625                           ; BSR set to: 0
  8626  004E8E  0012               	return	
  8627  004E90                     __end_of___ftge:
  8628                           	opt stack 0
  8629                           tosu	equ	0xFFF
  8630                           tosh	equ	0xFFE
  8631                           tosl	equ	0xFFD
  8632                           pclath	equ	0xFFA
  8633                           tblptru	equ	0xFF8
  8634                           tblptrh	equ	0xFF7
  8635                           tblptrl	equ	0xFF6
  8636                           tablat	equ	0xFF5
  8637                           prodh	equ	0xFF4
  8638                           prodl	equ	0xFF3
  8639                           intcon	equ	0xFF2
  8640                           postinc0	equ	0xFEE
  8641                           wreg	equ	0xFE8
  8642                           indf2	equ	0xFDF
  8643                           postinc2	equ	0xFDE
  8644                           postdec2	equ	0xFDD
  8645                           fsr2h	equ	0xFDA
  8646                           fsr2l	equ	0xFD9
  8647                           status	equ	0xFD8
  8648                           
  8649 ;; *************** function _lcd_sendString *****************
  8650 ;; Defined at:
  8651 ;;		line 74 in file "lcd.c"
  8652 ;; Parameters:    Size  Location     Type
  8653 ;;  a               2   50[BANK0 ] PTR const unsigned char 
  8654 ;;		 -> ftoa@buf(17), lcd_sendUInt@displayString(10), lcd_sendInt@displayString(10), main@cap_string(16), 
  8655 ;; Auto vars:     Size  Location     Type
  8656 ;;  i               2   52[BANK0 ] int 
  8657 ;; Return value:  Size  Location     Type
  8658 ;;                  1    wreg      void 
  8659 ;; Registers used:
  8660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8661 ;; Tracked objects:
  8662 ;;		On entry : 0/0
  8663 ;;		On exit  : 0/0
  8664 ;;		Unchanged: 0/0
  8665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8666 ;;      Params:         0       2       0       0       0       0       0
  8667 ;;      Locals:         0       2       0       0       0       0       0
  8668 ;;      Temps:          0       0       0       0       0       0       0
  8669 ;;      Totals:         0       4       0       0       0       0       0
  8670 ;;Total ram usage:        4 bytes
  8671 ;; Hardware stack levels used:    1
  8672 ;; Hardware stack levels required when called:    9
  8673 ;; This function calls:
  8674 ;;		_lcd_sendChar
  8675 ;; This function is called by:
  8676 ;;		_main
  8677 ;;		_lcd_sendStringToPos
  8678 ;;		_lcd_sendInt
  8679 ;;		_lcd_sendFloat
  8680 ;;		_lcd_sendUInt
  8681 ;; This function uses a non-reentrant model
  8682 ;;
  8683                           
  8684                           	psect	text22
  8685  00569C                     __ptext22:
  8686                           	opt stack 0
  8687  00569C                     _lcd_sendString:
  8688                           	opt stack 21
  8689                           
  8690                           ;lcd.c: 76: int i;
  8691                           ;lcd.c: 77: for(i=0;a[i]!='\0';i++)
  8692                           
  8693                           ; BSR set to: 0
  8694                           ;incstack = 0
  8695  00569C  0E00               	movlw	0
  8696  00569E  0100               	movlb	0	; () banked
  8697  0056A0  6F95               	movwf	(lcd_sendString@i+1)& (0+255),b
  8698  0056A2  0E00               	movlw	0
  8699  0056A4  6F94               	movwf	lcd_sendString@i& (0+255),b
  8700  0056A6  D010               	goto	l5801
  8701  0056A8                     l5797:
  8702                           
  8703                           ; BSR set to: 0
  8704                           ;lcd.c: 78: lcd_sendChar(a[i]);
  8705  0056A8  0100               	movlb	0	; () banked
  8706  0056AA  5194               	movf	lcd_sendString@i& (0+255),w,b
  8707  0056AC  0100               	movlb	0	; () banked
  8708  0056AE  2592               	addwf	lcd_sendString@a& (0+255),w,b
  8709  0056B0  6ED9               	movwf	fsr2l,c
  8710  0056B2  0100               	movlb	0	; () banked
  8711  0056B4  5195               	movf	(lcd_sendString@i+1)& (0+255),w,b
  8712  0056B6  0100               	movlb	0	; () banked
  8713  0056B8  2193               	addwfc	(lcd_sendString@a+1)& (0+255),w,b
  8714  0056BA  6EDA               	movwf	fsr2h,c
  8715  0056BC  50DF               	movf	indf2,w,c
  8716  0056BE  EC72  F02B         	call	_lcd_sendChar
  8717  0056C2  0100               	movlb	0	; () banked
  8718  0056C4  4B94               	infsnz	lcd_sendString@i& (0+255),f,b
  8719  0056C6  2B95               	incf	(lcd_sendString@i+1)& (0+255),f,b
  8720  0056C8                     l5801:
  8721                           
  8722                           ; BSR set to: 0
  8723  0056C8  0100               	movlb	0	; () banked
  8724  0056CA  5194               	movf	lcd_sendString@i& (0+255),w,b
  8725  0056CC  0100               	movlb	0	; () banked
  8726  0056CE  2592               	addwf	lcd_sendString@a& (0+255),w,b
  8727  0056D0  6ED9               	movwf	fsr2l,c
  8728  0056D2  0100               	movlb	0	; () banked
  8729  0056D4  5195               	movf	(lcd_sendString@i+1)& (0+255),w,b
  8730  0056D6  0100               	movlb	0	; () banked
  8731  0056D8  2193               	addwfc	(lcd_sendString@a+1)& (0+255),w,b
  8732  0056DA  6EDA               	movwf	fsr2h,c
  8733  0056DC  50DF               	movf	indf2,w,c
  8734  0056DE  B4D8               	btfsc	status,2,c
  8735  0056E0  0012               	return	
  8736  0056E2  D7E2               	goto	l5797
  8737  0056E4                     __end_of_lcd_sendString:
  8738                           	opt stack 0
  8739                           tosu	equ	0xFFF
  8740                           tosh	equ	0xFFE
  8741                           tosl	equ	0xFFD
  8742                           pclath	equ	0xFFA
  8743                           tblptru	equ	0xFF8
  8744                           tblptrh	equ	0xFF7
  8745                           tblptrl	equ	0xFF6
  8746                           tablat	equ	0xFF5
  8747                           prodh	equ	0xFF4
  8748                           prodl	equ	0xFF3
  8749                           intcon	equ	0xFF2
  8750                           postinc0	equ	0xFEE
  8751                           wreg	equ	0xFE8
  8752                           indf2	equ	0xFDF
  8753                           postinc2	equ	0xFDE
  8754                           postdec2	equ	0xFDD
  8755                           fsr2h	equ	0xFDA
  8756                           fsr2l	equ	0xFD9
  8757                           status	equ	0xFD8
  8758                           
  8759 ;; *************** function _lcd_sendChar *****************
  8760 ;; Defined at:
  8761 ;;		line 58 in file "lcd.c"
  8762 ;; Parameters:    Size  Location     Type
  8763 ;;  a               1    wreg     const unsigned char 
  8764 ;; Auto vars:     Size  Location     Type
  8765 ;;  a               1   49[BANK0 ] const unsigned char 
  8766 ;;  y               1   48[BANK0 ] unsigned char 
  8767 ;;  temp            1   47[BANK0 ] unsigned char 
  8768 ;; Return value:  Size  Location     Type
  8769 ;;                  1    wreg      void 
  8770 ;; Registers used:
  8771 ;;		wreg, status,2, status,0, cstack
  8772 ;; Tracked objects:
  8773 ;;		On entry : 0/0
  8774 ;;		On exit  : 0/0
  8775 ;;		Unchanged: 0/0
  8776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8777 ;;      Params:         0       0       0       0       0       0       0
  8778 ;;      Locals:         0       3       0       0       0       0       0
  8779 ;;      Temps:          0       0       0       0       0       0       0
  8780 ;;      Totals:         0       3       0       0       0       0       0
  8781 ;;Total ram usage:        3 bytes
  8782 ;; Hardware stack levels used:    1
  8783 ;; Hardware stack levels required when called:    8
  8784 ;; This function calls:
  8785 ;;		__lcd_Port
  8786 ;; This function is called by:
  8787 ;;		_lcd_sendString
  8788 ;; This function uses a non-reentrant model
  8789 ;;
  8790                           
  8791                           	psect	text23
  8792  0056E4                     __ptext23:
  8793                           	opt stack 0
  8794  0056E4                     _lcd_sendChar:
  8795                           	opt stack 21
  8796                           
  8797                           ; BSR set to: 0
  8798                           ;incstack = 0
  8799                           ;lcd_sendChar@a stored from wreg
  8800  0056E4  0100               	movlb	0	; () banked
  8801  0056E6  6F91               	movwf	lcd_sendChar@a& (0+255),b
  8802                           
  8803                           ;lcd.c: 60: char temp,y;
  8804                           ;lcd.c: 61: temp = a&0x0F;
  8805  0056E8  0100               	movlb	0	; () banked
  8806  0056EA  5191               	movf	lcd_sendChar@a& (0+255),w,b
  8807  0056EC  0B0F               	andlw	15
  8808  0056EE  0100               	movlb	0	; () banked
  8809  0056F0  6F8F               	movwf	lcd_sendChar@temp& (0+255),b
  8810                           
  8811                           ;lcd.c: 62: y = a&0xF0;
  8812  0056F2  0100               	movlb	0	; () banked
  8813  0056F4  5191               	movf	lcd_sendChar@a& (0+255),w,b
  8814  0056F6  0BF0               	andlw	240
  8815  0056F8  0100               	movlb	0	; () banked
  8816  0056FA  6F90               	movwf	lcd_sendChar@y& (0+255),b
  8817                           
  8818                           ; BSR set to: 0
  8819                           ;lcd.c: 63: LATAbits.LA5 = 1;
  8820  0056FC  8A89               	bsf	3977,5,c	;volatile
  8821                           
  8822                           ; BSR set to: 0
  8823                           ;lcd.c: 64: _lcd_Port(y>>4);
  8824  0056FE  0100               	movlb	0	; () banked
  8825  005700  3990               	swapf	lcd_sendChar@y& (0+255),w,b
  8826  005702  0B0F               	andlw	15
  8827  005704  EC13  F02C         	call	__lcd_Port
  8828                           
  8829                           ;lcd.c: 65: LATAbits.LA4 = 1;
  8830  005708  8889               	bsf	3977,4,c	;volatile
  8831                           
  8832                           ;lcd.c: 66: _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  8833  00570A  0E35               	movlw	53
  8834  00570C                     u16767:
  8835  00570C  2EE8               	decfsz	wreg,f,c
  8836  00570E  D7FE               	goto	u16767
  8837  005710  F000               	nop	
  8838                           
  8839                           ;lcd.c: 67: LATAbits.LA4 = 0;
  8840  005712  9889               	bcf	3977,4,c	;volatile
  8841                           
  8842                           ;lcd.c: 68: _lcd_Port(temp);
  8843  005714  0100               	movlb	0	; () banked
  8844  005716  518F               	movf	lcd_sendChar@temp& (0+255),w,b
  8845  005718  EC13  F02C         	call	__lcd_Port
  8846                           
  8847                           ;lcd.c: 69: LATAbits.LA4 = 1;
  8848  00571C  8889               	bsf	3977,4,c	;volatile
  8849                           
  8850                           ;lcd.c: 70: _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  8851  00571E  0E35               	movlw	53
  8852  005720                     u16777:
  8853  005720  2EE8               	decfsz	wreg,f,c
  8854  005722  D7FE               	goto	u16777
  8855  005724  F000               	nop	
  8856                           
  8857                           ;lcd.c: 71: LATAbits.LA4 = 0;
  8858  005726  9889               	bcf	3977,4,c	;volatile
  8859  005728  0012               	return		;funcret
  8860  00572A                     __end_of_lcd_sendChar:
  8861                           	opt stack 0
  8862                           tosu	equ	0xFFF
  8863                           tosh	equ	0xFFE
  8864                           tosl	equ	0xFFD
  8865                           pclath	equ	0xFFA
  8866                           tblptru	equ	0xFF8
  8867                           tblptrh	equ	0xFF7
  8868                           tblptrl	equ	0xFF6
  8869                           tablat	equ	0xFF5
  8870                           prodh	equ	0xFF4
  8871                           prodl	equ	0xFF3
  8872                           intcon	equ	0xFF2
  8873                           postinc0	equ	0xFEE
  8874                           wreg	equ	0xFE8
  8875                           indf2	equ	0xFDF
  8876                           postinc2	equ	0xFDE
  8877                           postdec2	equ	0xFDD
  8878                           fsr2h	equ	0xFDA
  8879                           fsr2l	equ	0xFD9
  8880                           status	equ	0xFD8
  8881                           
  8882 ;; *************** function _lcd_init *****************
  8883 ;; Defined at:
  8884 ;;		line 39 in file "lcd.c"
  8885 ;; Parameters:    Size  Location     Type
  8886 ;;		None
  8887 ;; Auto vars:     Size  Location     Type
  8888 ;;		None
  8889 ;; Return value:  Size  Location     Type
  8890 ;;                  1    wreg      void 
  8891 ;; Registers used:
  8892 ;;		wreg, status,2, cstack
  8893 ;; Tracked objects:
  8894 ;;		On entry : 0/0
  8895 ;;		On exit  : 0/0
  8896 ;;		Unchanged: 0/0
  8897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8898 ;;      Params:         0       0       0       0       0       0       0
  8899 ;;      Locals:         0       0       0       0       0       0       0
  8900 ;;      Temps:          0       1       0       0       0       0       0
  8901 ;;      Totals:         0       1       0       0       0       0       0
  8902 ;;Total ram usage:        1 bytes
  8903 ;; Hardware stack levels used:    1
  8904 ;; Hardware stack levels required when called:    9
  8905 ;; This function calls:
  8906 ;;		__lcd_Port
  8907 ;;		_lcd_sendCommand
  8908 ;; This function is called by:
  8909 ;;		_main
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913                           	psect	text24
  8914  005406                     __ptext24:
  8915                           	opt stack 0
  8916  005406                     _lcd_init:
  8917                           	opt stack 21
  8918                           
  8919                           ;lcd.c: 41: _lcd_Port(0x00);
  8920                           
  8921                           ;incstack = 0
  8922  005406  0E00               	movlw	0
  8923  005408  EC13  F02C         	call	__lcd_Port
  8924                           
  8925                           ;lcd.c: 42: _delay((unsigned long)((20)*(16000000UL/4000.0)));
  8926  00540C  0E68               	movlw	104
  8927  00540E  0100               	movlb	0	; () banked
  8928  005410  6F91               	movwf	??_lcd_init& (0+255),b
  8929  005412  0EE4               	movlw	228
  8930  005414                     u16787:
  8931  005414  2EE8               	decfsz	wreg,f,c
  8932  005416  D7FE               	goto	u16787
  8933  005418  2F91               	decfsz	??_lcd_init& (0+255),f,b
  8934  00541A  D7FC               	goto	u16787
  8935  00541C  D000               	nop2	
  8936                           
  8937                           ;lcd.c: 43: lcd_sendCommand(0x03);
  8938  00541E  0E03               	movlw	3
  8939  005420  ECD3  F02C         	call	_lcd_sendCommand
  8940                           
  8941                           ;lcd.c: 44: _delay((unsigned long)((5)*(16000000UL/4000.0)));
  8942  005424  0E1A               	movlw	26
  8943  005426  0100               	movlb	0	; () banked
  8944  005428  6F91               	movwf	??_lcd_init& (0+255),b
  8945  00542A  0EF8               	movlw	248
  8946  00542C                     u16797:
  8947  00542C  2EE8               	decfsz	wreg,f,c
  8948  00542E  D7FE               	goto	u16797
  8949  005430  2F91               	decfsz	??_lcd_init& (0+255),f,b
  8950  005432  D7FC               	goto	u16797
  8951  005434  D000               	nop2	
  8952                           
  8953                           ;lcd.c: 45: lcd_sendCommand(0x03);
  8954  005436  0E03               	movlw	3
  8955  005438  ECD3  F02C         	call	_lcd_sendCommand
  8956                           
  8957                           ;lcd.c: 46: _delay((unsigned long)((11)*(16000000UL/4000.0)));
  8958  00543C  0E3A               	movlw	58
  8959  00543E  0100               	movlb	0	; () banked
  8960  005440  6F91               	movwf	??_lcd_init& (0+255),b
  8961  005442  0E23               	movlw	35
  8962  005444                     u16807:
  8963  005444  2EE8               	decfsz	wreg,f,c
  8964  005446  D7FE               	goto	u16807
  8965  005448  2F91               	decfsz	??_lcd_init& (0+255),f,b
  8966  00544A  D7FC               	goto	u16807
  8967  00544C  F000               	nop	
  8968                           
  8969                           ;lcd.c: 47: lcd_sendCommand(0x03);
  8970  00544E  0E03               	movlw	3
  8971  005450  ECD3  F02C         	call	_lcd_sendCommand
  8972                           
  8973                           ;lcd.c: 49: lcd_sendCommand(0x02);
  8974  005454  0E02               	movlw	2
  8975  005456  ECD3  F02C         	call	_lcd_sendCommand
  8976                           
  8977                           ;lcd.c: 50: lcd_sendCommand(0x02);
  8978  00545A  0E02               	movlw	2
  8979  00545C  ECD3  F02C         	call	_lcd_sendCommand
  8980                           
  8981                           ;lcd.c: 51: lcd_sendCommand(0x08);
  8982  005460  0E08               	movlw	8
  8983  005462  ECD3  F02C         	call	_lcd_sendCommand
  8984                           
  8985                           ;lcd.c: 52: lcd_sendCommand(0x00);
  8986  005466  0E00               	movlw	0
  8987  005468  ECD3  F02C         	call	_lcd_sendCommand
  8988                           
  8989                           ;lcd.c: 53: lcd_sendCommand(0x0C);
  8990  00546C  0E0C               	movlw	12
  8991  00546E  ECD3  F02C         	call	_lcd_sendCommand
  8992                           
  8993                           ;lcd.c: 54: lcd_sendCommand(0x00);
  8994  005472  0E00               	movlw	0
  8995  005474  ECD3  F02C         	call	_lcd_sendCommand
  8996                           
  8997                           ;lcd.c: 55: lcd_sendCommand(0x06);
  8998  005478  0E06               	movlw	6
  8999  00547A  ECD3  F02C         	call	_lcd_sendCommand
  9000  00547E  0012               	return		;funcret
  9001  005480                     __end_of_lcd_init:
  9002                           	opt stack 0
  9003                           tosu	equ	0xFFF
  9004                           tosh	equ	0xFFE
  9005                           tosl	equ	0xFFD
  9006                           pclath	equ	0xFFA
  9007                           tblptru	equ	0xFF8
  9008                           tblptrh	equ	0xFF7
  9009                           tblptrl	equ	0xFF6
  9010                           tablat	equ	0xFF5
  9011                           prodh	equ	0xFF4
  9012                           prodl	equ	0xFF3
  9013                           intcon	equ	0xFF2
  9014                           postinc0	equ	0xFEE
  9015                           wreg	equ	0xFE8
  9016                           indf2	equ	0xFDF
  9017                           postinc2	equ	0xFDE
  9018                           postdec2	equ	0xFDD
  9019                           fsr2h	equ	0xFDA
  9020                           fsr2l	equ	0xFD9
  9021                           status	equ	0xFD8
  9022                           
  9023 ;; *************** function _lcd_clear *****************
  9024 ;; Defined at:
  9025 ;;		line 12 in file "lcd.c"
  9026 ;; Parameters:    Size  Location     Type
  9027 ;;		None
  9028 ;; Auto vars:     Size  Location     Type
  9029 ;;		None
  9030 ;; Return value:  Size  Location     Type
  9031 ;;                  1    wreg      void 
  9032 ;; Registers used:
  9033 ;;		wreg, status,2, cstack
  9034 ;; Tracked objects:
  9035 ;;		On entry : 0/0
  9036 ;;		On exit  : 0/0
  9037 ;;		Unchanged: 0/0
  9038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9039 ;;      Params:         0       0       0       0       0       0       0
  9040 ;;      Locals:         0       0       0       0       0       0       0
  9041 ;;      Temps:          0       0       0       0       0       0       0
  9042 ;;      Totals:         0       0       0       0       0       0       0
  9043 ;;Total ram usage:        0 bytes
  9044 ;; Hardware stack levels used:    1
  9045 ;; Hardware stack levels required when called:    9
  9046 ;; This function calls:
  9047 ;;		_lcd_sendCommand
  9048 ;; This function is called by:
  9049 ;;		_main
  9050 ;; This function uses a non-reentrant model
  9051 ;;
  9052                           
  9053                           	psect	text25
  9054  005AC2                     __ptext25:
  9055                           	opt stack 0
  9056  005AC2                     _lcd_clear:
  9057                           	opt stack 21
  9058                           
  9059                           ;lcd.c: 14: lcd_sendCommand(0);
  9060                           
  9061                           ;incstack = 0
  9062  005AC2  0E00               	movlw	0
  9063  005AC4  ECD3  F02C         	call	_lcd_sendCommand
  9064                           
  9065                           ;lcd.c: 15: lcd_sendCommand(1);
  9066  005AC8  0E01               	movlw	1
  9067  005ACA  ECD3  F02C         	call	_lcd_sendCommand
  9068  005ACE  0012               	return		;funcret
  9069  005AD0                     __end_of_lcd_clear:
  9070                           	opt stack 0
  9071                           tosu	equ	0xFFF
  9072                           tosh	equ	0xFFE
  9073                           tosl	equ	0xFFD
  9074                           pclath	equ	0xFFA
  9075                           tblptru	equ	0xFF8
  9076                           tblptrh	equ	0xFF7
  9077                           tblptrl	equ	0xFF6
  9078                           tablat	equ	0xFF5
  9079                           prodh	equ	0xFF4
  9080                           prodl	equ	0xFF3
  9081                           intcon	equ	0xFF2
  9082                           postinc0	equ	0xFEE
  9083                           wreg	equ	0xFE8
  9084                           indf2	equ	0xFDF
  9085                           postinc2	equ	0xFDE
  9086                           postdec2	equ	0xFDD
  9087                           fsr2h	equ	0xFDA
  9088                           fsr2l	equ	0xFD9
  9089                           status	equ	0xFD8
  9090                           
  9091 ;; *************** function _lcd_sendCommand *****************
  9092 ;; Defined at:
  9093 ;;		line 3 in file "lcd.c"
  9094 ;; Parameters:    Size  Location     Type
  9095 ;;  a               1    wreg     unsigned char 
  9096 ;; Auto vars:     Size  Location     Type
  9097 ;;  a               1   48[BANK0 ] unsigned char 
  9098 ;; Return value:  Size  Location     Type
  9099 ;;                  1    wreg      void 
  9100 ;; Registers used:
  9101 ;;		wreg, status,2, cstack
  9102 ;; Tracked objects:
  9103 ;;		On entry : 0/0
  9104 ;;		On exit  : 0/0
  9105 ;;		Unchanged: 0/0
  9106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9107 ;;      Params:         0       0       0       0       0       0       0
  9108 ;;      Locals:         0       1       0       0       0       0       0
  9109 ;;      Temps:          0       1       0       0       0       0       0
  9110 ;;      Totals:         0       2       0       0       0       0       0
  9111 ;;Total ram usage:        2 bytes
  9112 ;; Hardware stack levels used:    1
  9113 ;; Hardware stack levels required when called:    8
  9114 ;; This function calls:
  9115 ;;		__lcd_Port
  9116 ;; This function is called by:
  9117 ;;		_lcd_clear
  9118 ;;		_lcd_init
  9119 ;;		_lcd_setPosition
  9120 ;;		_lcd_shiftRight
  9121 ;;		_lcd_shiftLeft
  9122 ;; This function uses a non-reentrant model
  9123 ;;
  9124                           
  9125                           	psect	text26
  9126  0059A6                     __ptext26:
  9127                           	opt stack 0
  9128  0059A6                     _lcd_sendCommand:
  9129                           	opt stack 21
  9130                           
  9131                           ;incstack = 0
  9132                           ;lcd_sendCommand@a stored from wreg
  9133  0059A6  0100               	movlb	0	; () banked
  9134  0059A8  6F90               	movwf	lcd_sendCommand@a& (0+255),b
  9135                           
  9136                           ;lcd.c: 5: LATAbits.LA5 = 0;
  9137  0059AA  9A89               	bcf	3977,5,c	;volatile
  9138                           
  9139                           ;lcd.c: 6: _lcd_Port(a);
  9140  0059AC  0100               	movlb	0	; () banked
  9141  0059AE  5190               	movf	lcd_sendCommand@a& (0+255),w,b
  9142  0059B0  EC13  F02C         	call	__lcd_Port
  9143                           
  9144                           ;lcd.c: 7: LATAbits.LA4 = 1;
  9145  0059B4  8889               	bsf	3977,4,c	;volatile
  9146                           
  9147                           ;lcd.c: 8: _delay((unsigned long)((4)*(16000000UL/4000.0)));
  9148  0059B6  0E15               	movlw	21
  9149  0059B8  0100               	movlb	0	; () banked
  9150  0059BA  6F8F               	movwf	??_lcd_sendCommand& (0+255),b
  9151  0059BC  0EC6               	movlw	198
  9152  0059BE                     u16817:
  9153  0059BE  2EE8               	decfsz	wreg,f,c
  9154  0059C0  D7FE               	goto	u16817
  9155  0059C2  2F8F               	decfsz	??_lcd_sendCommand& (0+255),f,b
  9156  0059C4  D7FC               	goto	u16817
  9157  0059C6  D000               	nop2	
  9158                           
  9159                           ;lcd.c: 9: LATAbits.LA4 = 0;
  9160  0059C8  9889               	bcf	3977,4,c	;volatile
  9161  0059CA  0012               	return		;funcret
  9162  0059CC                     __end_of_lcd_sendCommand:
  9163                           	opt stack 0
  9164                           tosu	equ	0xFFF
  9165                           tosh	equ	0xFFE
  9166                           tosl	equ	0xFFD
  9167                           pclath	equ	0xFFA
  9168                           tblptru	equ	0xFF8
  9169                           tblptrh	equ	0xFF7
  9170                           tblptrl	equ	0xFF6
  9171                           tablat	equ	0xFF5
  9172                           prodh	equ	0xFF4
  9173                           prodl	equ	0xFF3
  9174                           intcon	equ	0xFF2
  9175                           postinc0	equ	0xFEE
  9176                           wreg	equ	0xFE8
  9177                           indf2	equ	0xFDF
  9178                           postinc2	equ	0xFDE
  9179                           postdec2	equ	0xFDD
  9180                           fsr2h	equ	0xFDA
  9181                           fsr2l	equ	0xFD9
  9182                           status	equ	0xFD8
  9183                           
  9184 ;; *************** function __lcd_Port *****************
  9185 ;; Defined at:
  9186 ;;		line 139 in file "lcd.c"
  9187 ;; Parameters:    Size  Location     Type
  9188 ;;  a               1    wreg     unsigned char 
  9189 ;; Auto vars:     Size  Location     Type
  9190 ;;  a               1   46[BANK0 ] unsigned char 
  9191 ;; Return value:  Size  Location     Type
  9192 ;;                  1    wreg      void 
  9193 ;; Registers used:
  9194 ;;		wreg
  9195 ;; Tracked objects:
  9196 ;;		On entry : 0/0
  9197 ;;		On exit  : 0/0
  9198 ;;		Unchanged: 0/0
  9199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9200 ;;      Params:         0       0       0       0       0       0       0
  9201 ;;      Locals:         0       1       0       0       0       0       0
  9202 ;;      Temps:          0       0       0       0       0       0       0
  9203 ;;      Totals:         0       1       0       0       0       0       0
  9204 ;;Total ram usage:        1 bytes
  9205 ;; Hardware stack levels used:    1
  9206 ;; Hardware stack levels required when called:    7
  9207 ;; This function calls:
  9208 ;;		Nothing
  9209 ;; This function is called by:
  9210 ;;		_lcd_sendCommand
  9211 ;;		_lcd_init
  9212 ;;		_lcd_sendChar
  9213 ;; This function uses a non-reentrant model
  9214 ;;
  9215                           
  9216                           	psect	text27
  9217  005826                     __ptext27:
  9218                           	opt stack 0
  9219  005826                     __lcd_Port:
  9220                           	opt stack 21
  9221                           
  9222                           ;incstack = 0
  9223                           ;__lcd_Port@a stored from wreg
  9224  005826  0100               	movlb	0	; () banked
  9225  005828  6F8E               	movwf	__lcd_Port@a& (0+255),b
  9226                           
  9227                           ;lcd.c: 141: if(a & 1)
  9228  00582A  0100               	movlb	0	; () banked
  9229  00582C  A18E               	btfss	__lcd_Port@a& (0+255),0,b
  9230  00582E  D002               	goto	l348
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;lcd.c: 142: LATAbits.LA0 = 1;
  9234  005830  8089               	bsf	3977,0,c	;volatile
  9235  005832  D001               	goto	l4439
  9236  005834                     l348:
  9237                           
  9238                           ; BSR set to: 0
  9239                           ;lcd.c: 143: else
  9240                           ;lcd.c: 144: LATAbits.LA0 = 0;
  9241  005834  9089               	bcf	3977,0,c	;volatile
  9242  005836                     l4439:
  9243                           
  9244                           ; BSR set to: 0
  9245                           ;lcd.c: 146: if(a & 2)
  9246  005836  0100               	movlb	0	; () banked
  9247  005838  A38E               	btfss	__lcd_Port@a& (0+255),1,b
  9248  00583A  D002               	goto	l350
  9249                           
  9250                           ; BSR set to: 0
  9251                           ;lcd.c: 147: LATAbits.LA1 = 1;
  9252  00583C  8289               	bsf	3977,1,c	;volatile
  9253  00583E  D001               	goto	l4443
  9254  005840                     l350:
  9255                           
  9256                           ; BSR set to: 0
  9257                           ;lcd.c: 148: else
  9258                           ;lcd.c: 149: LATAbits.LA1 = 0;
  9259  005840  9289               	bcf	3977,1,c	;volatile
  9260  005842                     l4443:
  9261                           
  9262                           ; BSR set to: 0
  9263                           ;lcd.c: 151: if(a & 4)
  9264  005842  0100               	movlb	0	; () banked
  9265  005844  A58E               	btfss	__lcd_Port@a& (0+255),2,b
  9266  005846  D002               	goto	l352
  9267                           
  9268                           ; BSR set to: 0
  9269                           ;lcd.c: 152: LATAbits.LA2 = 1;
  9270  005848  8489               	bsf	3977,2,c	;volatile
  9271  00584A  D001               	goto	l4447
  9272  00584C                     l352:
  9273                           
  9274                           ; BSR set to: 0
  9275                           ;lcd.c: 153: else
  9276                           ;lcd.c: 154: LATAbits.LA2 = 0;
  9277  00584C  9489               	bcf	3977,2,c	;volatile
  9278  00584E                     l4447:
  9279                           
  9280                           ; BSR set to: 0
  9281                           ;lcd.c: 156: if(a & 8)
  9282  00584E  0100               	movlb	0	; () banked
  9283  005850  A78E               	btfss	__lcd_Port@a& (0+255),3,b
  9284  005852  D002               	goto	l354
  9285                           
  9286                           ; BSR set to: 0
  9287                           ;lcd.c: 157: LATAbits.LA3 = 1;
  9288  005854  8689               	bsf	3977,3,c	;volatile
  9289  005856  0012               	return	
  9290  005858                     l354:
  9291                           
  9292                           ; BSR set to: 0
  9293                           ;lcd.c: 158: else
  9294                           ;lcd.c: 159: LATAbits.LA3 = 0;
  9295  005858  9689               	bcf	3977,3,c	;volatile
  9296  00585A  0012               	return	
  9297  00585C                     __end_of__lcd_Port:
  9298                           	opt stack 0
  9299                           tosu	equ	0xFFF
  9300                           tosh	equ	0xFFE
  9301                           tosl	equ	0xFFD
  9302                           pclath	equ	0xFFA
  9303                           tblptru	equ	0xFF8
  9304                           tblptrh	equ	0xFF7
  9305                           tblptrl	equ	0xFF6
  9306                           tablat	equ	0xFF5
  9307                           prodh	equ	0xFF4
  9308                           prodl	equ	0xFF3
  9309                           intcon	equ	0xFF2
  9310                           postinc0	equ	0xFEE
  9311                           wreg	equ	0xFE8
  9312                           indf2	equ	0xFDF
  9313                           postinc2	equ	0xFDE
  9314                           postdec2	equ	0xFDD
  9315                           fsr2h	equ	0xFDA
  9316                           fsr2l	equ	0xFD9
  9317                           status	equ	0xFD8
  9318                           
  9319 ;; *************** function ___ftdiv *****************
  9320 ;; Defined at:
  9321 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  9322 ;; Parameters:    Size  Location     Type
  9323 ;;  f1              3   54[BANK0 ] float 
  9324 ;;  f2              3   57[BANK0 ] float 
  9325 ;; Auto vars:     Size  Location     Type
  9326 ;;  f3              3   64[BANK0 ] float 
  9327 ;;  sign            1   68[BANK0 ] unsigned char 
  9328 ;;  exp             1   67[BANK0 ] unsigned char 
  9329 ;;  cntr            1   63[BANK0 ] unsigned char 
  9330 ;; Return value:  Size  Location     Type
  9331 ;;                  3   54[BANK0 ] float 
  9332 ;; Registers used:
  9333 ;;		wreg, status,2, status,0, cstack
  9334 ;; Tracked objects:
  9335 ;;		On entry : 0/0
  9336 ;;		On exit  : 0/0
  9337 ;;		Unchanged: 0/0
  9338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9339 ;;      Params:         0       6       0       0       0       0       0
  9340 ;;      Locals:         0       6       0       0       0       0       0
  9341 ;;      Temps:          0       3       0       0       0       0       0
  9342 ;;      Totals:         0      15       0       0       0       0       0
  9343 ;;Total ram usage:       15 bytes
  9344 ;; Hardware stack levels used:    1
  9345 ;; Hardware stack levels required when called:    8
  9346 ;; This function calls:
  9347 ;;		___ftpack
  9348 ;; This function is called by:
  9349 ;;		_main
  9350 ;; This function uses a non-reentrant model
  9351 ;;
  9352                           
  9353                           	psect	text28
  9354  004404                     __ptext28:
  9355                           	opt stack 0
  9356  004404                     ___ftdiv:
  9357                           	opt stack 22
  9358                           
  9359                           ; BSR set to: 0
  9360                           ;incstack = 0
  9361  004404  C098  F09C         	movff	___ftdiv@f1+2,??___ftdiv
  9362  004408  0100               	movlb	0	; () banked
  9363  00440A  6B9D               	clrf	(??___ftdiv+1)& (0+255),b
  9364  00440C  6B9E               	clrf	(??___ftdiv+2)& (0+255),b
  9365  00440E  0100               	movlb	0	; () banked
  9366  004410  3597               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  9367  004412  0100               	movlb	0	; () banked
  9368  004414  379C               	rlcf	??___ftdiv& (0+255),f,b
  9369  004416  E301               	bnc	u10751
  9370  004418  819D               	bsf	(??___ftdiv+1)& (0+255),0,b
  9371  00441A                     u10751:
  9372  00441A  0100               	movlb	0	; () banked
  9373  00441C  519C               	movf	??___ftdiv& (0+255),w,b
  9374  00441E  0100               	movlb	0	; () banked
  9375  004420  6FA3               	movwf	___ftdiv@exp& (0+255),b
  9376  004422  0100               	movlb	0	; () banked
  9377  004424  51A3               	movf	___ftdiv@exp& (0+255),w,b
  9378  004426  A4D8               	btfss	status,2,c
  9379  004428  D00A               	goto	l7159
  9380                           
  9381                           ; BSR set to: 0
  9382  00442A  0E00               	movlw	0
  9383  00442C  0100               	movlb	0	; () banked
  9384  00442E  6F96               	movwf	?___ftdiv& (0+255),b
  9385  004430  0E00               	movlw	0
  9386  004432  0100               	movlb	0	; () banked
  9387  004434  6F97               	movwf	(?___ftdiv+1)& (0+255),b
  9388  004436  0E00               	movlw	0
  9389  004438  0100               	movlb	0	; () banked
  9390  00443A  6F98               	movwf	(?___ftdiv+2)& (0+255),b
  9391                           
  9392                           ; BSR set to: 0
  9393  00443C  0012               	return	
  9394  00443E                     l7159:
  9395                           
  9396                           ; BSR set to: 0
  9397  00443E  C09B  F09C         	movff	___ftdiv@f2+2,??___ftdiv
  9398  004442  0100               	movlb	0	; () banked
  9399  004444  6B9D               	clrf	(??___ftdiv+1)& (0+255),b
  9400  004446  6B9E               	clrf	(??___ftdiv+2)& (0+255),b
  9401  004448  0100               	movlb	0	; () banked
  9402  00444A  359A               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  9403  00444C  0100               	movlb	0	; () banked
  9404  00444E  379C               	rlcf	??___ftdiv& (0+255),f,b
  9405  004450  E301               	bnc	u10771
  9406  004452  819D               	bsf	(??___ftdiv+1)& (0+255),0,b
  9407  004454                     u10771:
  9408  004454  0100               	movlb	0	; () banked
  9409  004456  519C               	movf	??___ftdiv& (0+255),w,b
  9410  004458  0100               	movlb	0	; () banked
  9411  00445A  6FA4               	movwf	___ftdiv@sign& (0+255),b
  9412  00445C  0100               	movlb	0	; () banked
  9413  00445E  51A4               	movf	___ftdiv@sign& (0+255),w,b
  9414  004460  A4D8               	btfss	status,2,c
  9415  004462  D00A               	goto	l7165
  9416                           
  9417                           ; BSR set to: 0
  9418  004464  0E00               	movlw	0
  9419  004466  0100               	movlb	0	; () banked
  9420  004468  6F96               	movwf	?___ftdiv& (0+255),b
  9421  00446A  0E00               	movlw	0
  9422  00446C  0100               	movlb	0	; () banked
  9423  00446E  6F97               	movwf	(?___ftdiv+1)& (0+255),b
  9424  004470  0E00               	movlw	0
  9425  004472  0100               	movlb	0	; () banked
  9426  004474  6F98               	movwf	(?___ftdiv+2)& (0+255),b
  9427                           
  9428                           ; BSR set to: 0
  9429  004476  0012               	return	
  9430  004478                     l7165:
  9431                           
  9432                           ; BSR set to: 0
  9433  004478  0E00               	movlw	0
  9434  00447A  0100               	movlb	0	; () banked
  9435  00447C  6FA0               	movwf	___ftdiv@f3& (0+255),b
  9436  00447E  0E00               	movlw	0
  9437  004480  0100               	movlb	0	; () banked
  9438  004482  6FA1               	movwf	(___ftdiv@f3+1)& (0+255),b
  9439  004484  0E00               	movlw	0
  9440  004486  0100               	movlb	0	; () banked
  9441  004488  6FA2               	movwf	(___ftdiv@f3+2)& (0+255),b
  9442                           
  9443                           ; BSR set to: 0
  9444  00448A  0100               	movlb	0	; () banked
  9445  00448C  51A4               	movf	___ftdiv@sign& (0+255),w,b
  9446  00448E  0F89               	addlw	137
  9447  004490  0100               	movlb	0	; () banked
  9448  004492  5FA3               	subwf	___ftdiv@exp& (0+255),f,b
  9449                           
  9450                           ; BSR set to: 0
  9451  004494  C098  F0A4         	movff	___ftdiv@f1+2,___ftdiv@sign
  9452                           
  9453                           ; BSR set to: 0
  9454  004498  0100               	movlb	0	; () banked
  9455  00449A  519B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9456  00449C  0100               	movlb	0	; () banked
  9457  00449E  1BA4               	xorwf	___ftdiv@sign& (0+255),f,b
  9458                           
  9459                           ; BSR set to: 0
  9460  0044A0  0E80               	movlw	128
  9461  0044A2  0100               	movlb	0	; () banked
  9462  0044A4  17A4               	andwf	___ftdiv@sign& (0+255),f,b
  9463                           
  9464                           ; BSR set to: 0
  9465  0044A6  0100               	movlb	0	; () banked
  9466  0044A8  8F97               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  9467                           
  9468                           ; BSR set to: 0
  9469  0044AA  0EFF               	movlw	255
  9470  0044AC  0100               	movlb	0	; () banked
  9471  0044AE  1796               	andwf	___ftdiv@f1& (0+255),f,b
  9472  0044B0  0EFF               	movlw	255
  9473  0044B2  0100               	movlb	0	; () banked
  9474  0044B4  1797               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  9475  0044B6  0E00               	movlw	0
  9476  0044B8  0100               	movlb	0	; () banked
  9477  0044BA  1798               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  9478                           
  9479                           ; BSR set to: 0
  9480  0044BC  0100               	movlb	0	; () banked
  9481  0044BE  8F9A               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  9482                           
  9483                           ; BSR set to: 0
  9484  0044C0  0EFF               	movlw	255
  9485  0044C2  0100               	movlb	0	; () banked
  9486  0044C4  1799               	andwf	___ftdiv@f2& (0+255),f,b
  9487  0044C6  0EFF               	movlw	255
  9488  0044C8  0100               	movlb	0	; () banked
  9489  0044CA  179A               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  9490  0044CC  0E00               	movlw	0
  9491  0044CE  0100               	movlb	0	; () banked
  9492  0044D0  179B               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  9493                           
  9494                           ; BSR set to: 0
  9495  0044D2  0E18               	movlw	24
  9496  0044D4  0100               	movlb	0	; () banked
  9497  0044D6  6F9F               	movwf	___ftdiv@cntr& (0+255),b
  9498  0044D8                     l7185:
  9499                           
  9500                           ; BSR set to: 0
  9501  0044D8  0100               	movlb	0	; () banked
  9502  0044DA  90D8               	bcf	status,0,c
  9503  0044DC  37A0               	rlcf	___ftdiv@f3& (0+255),f,b
  9504  0044DE  37A1               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  9505  0044E0  37A2               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  9506                           
  9507                           ; BSR set to: 0
  9508  0044E2  0100               	movlb	0	; () banked
  9509  0044E4  5199               	movf	___ftdiv@f2& (0+255),w,b
  9510  0044E6  0100               	movlb	0	; () banked
  9511  0044E8  5D96               	subwf	___ftdiv@f1& (0+255),w,b
  9512  0044EA  0100               	movlb	0	; () banked
  9513  0044EC  519A               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9514  0044EE  0100               	movlb	0	; () banked
  9515  0044F0  5997               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  9516  0044F2  0100               	movlb	0	; () banked
  9517  0044F4  519B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9518  0044F6  0100               	movlb	0	; () banked
  9519  0044F8  5998               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  9520  0044FA  A0D8               	btfss	status,0,c
  9521  0044FC  D00E               	goto	l830
  9522                           
  9523                           ; BSR set to: 0
  9524  0044FE  0100               	movlb	0	; () banked
  9525  004500  5199               	movf	___ftdiv@f2& (0+255),w,b
  9526  004502  0100               	movlb	0	; () banked
  9527  004504  5F96               	subwf	___ftdiv@f1& (0+255),f,b
  9528  004506  0100               	movlb	0	; () banked
  9529  004508  519A               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9530  00450A  0100               	movlb	0	; () banked
  9531  00450C  5B97               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  9532  00450E  0100               	movlb	0	; () banked
  9533  004510  519B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9534  004512  0100               	movlb	0	; () banked
  9535  004514  5B98               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  9536                           
  9537                           ; BSR set to: 0
  9538  004516  0100               	movlb	0	; () banked
  9539  004518  81A0               	bsf	___ftdiv@f3& (0+255),0,b
  9540  00451A                     l830:
  9541                           
  9542                           ; BSR set to: 0
  9543  00451A  0100               	movlb	0	; () banked
  9544  00451C  90D8               	bcf	status,0,c
  9545  00451E  3796               	rlcf	___ftdiv@f1& (0+255),f,b
  9546  004520  3797               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  9547  004522  3798               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  9548                           
  9549                           ; BSR set to: 0
  9550  004524  0100               	movlb	0	; () banked
  9551  004526  2F9F               	decfsz	___ftdiv@cntr& (0+255),f,b
  9552  004528  D7D7               	goto	l7185
  9553                           
  9554                           ; BSR set to: 0
  9555                           
  9556                           ; BSR set to: 0
  9557  00452A  C0A0  F08E         	movff	___ftdiv@f3,___ftpack@arg
  9558  00452E  C0A1  F08F         	movff	___ftdiv@f3+1,___ftpack@arg+1
  9559  004532  C0A2  F090         	movff	___ftdiv@f3+2,___ftpack@arg+2
  9560  004536  C0A3  F091         	movff	___ftdiv@exp,___ftpack@exp
  9561  00453A  C0A4  F092         	movff	___ftdiv@sign,___ftpack@sign
  9562  00453E  EC77  F024         	call	___ftpack	;wreg free
  9563  004542  C08E  F096         	movff	?___ftpack,?___ftdiv
  9564  004546  C08F  F097         	movff	?___ftpack+1,?___ftdiv+1
  9565  00454A  C090  F098         	movff	?___ftpack+2,?___ftdiv+2
  9566  00454E  0012               	return	
  9567  004550                     __end_of___ftdiv:
  9568                           	opt stack 0
  9569                           tosu	equ	0xFFF
  9570                           tosh	equ	0xFFE
  9571                           tosl	equ	0xFFD
  9572                           pclath	equ	0xFFA
  9573                           tblptru	equ	0xFF8
  9574                           tblptrh	equ	0xFF7
  9575                           tblptrl	equ	0xFF6
  9576                           tablat	equ	0xFF5
  9577                           prodh	equ	0xFF4
  9578                           prodl	equ	0xFF3
  9579                           intcon	equ	0xFF2
  9580                           postinc0	equ	0xFEE
  9581                           wreg	equ	0xFE8
  9582                           indf2	equ	0xFDF
  9583                           postinc2	equ	0xFDE
  9584                           postdec2	equ	0xFDD
  9585                           fsr2h	equ	0xFDA
  9586                           fsr2l	equ	0xFD9
  9587                           status	equ	0xFD8
  9588                           
  9589 ;; *************** function ___ftpack *****************
  9590 ;; Defined at:
  9591 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  9592 ;; Parameters:    Size  Location     Type
  9593 ;;  arg             3   46[BANK0 ] unsigned um
  9594 ;;  exp             1   49[BANK0 ] unsigned char 
  9595 ;;  sign            1   50[BANK0 ] unsigned char 
  9596 ;; Auto vars:     Size  Location     Type
  9597 ;;		None
  9598 ;; Return value:  Size  Location     Type
  9599 ;;                  3   46[BANK0 ] float 
  9600 ;; Registers used:
  9601 ;;		wreg, status,2, status,0
  9602 ;; Tracked objects:
  9603 ;;		On entry : 0/0
  9604 ;;		On exit  : 0/0
  9605 ;;		Unchanged: 0/0
  9606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9607 ;;      Params:         0       5       0       0       0       0       0
  9608 ;;      Locals:         0       0       0       0       0       0       0
  9609 ;;      Temps:          0       3       0       0       0       0       0
  9610 ;;      Totals:         0       8       0       0       0       0       0
  9611 ;;Total ram usage:        8 bytes
  9612 ;; Hardware stack levels used:    1
  9613 ;; Hardware stack levels required when called:    7
  9614 ;; This function calls:
  9615 ;;		Nothing
  9616 ;; This function is called by:
  9617 ;;		___ftadd
  9618 ;;		___ftdiv
  9619 ;;		___ftmul
  9620 ;;		___lltoft
  9621 ;; This function uses a non-reentrant model
  9622 ;;
  9623                           
  9624                           	psect	text29
  9625  0048EE                     __ptext29:
  9626                           	opt stack 0
  9627  0048EE                     ___ftpack:
  9628                           	opt stack 19
  9629                           
  9630                           ;incstack = 0
  9631  0048EE  0100               	movlb	0	; () banked
  9632  0048F0  5191               	movf	___ftpack@exp& (0+255),w,b
  9633  0048F2  0100               	movlb	0	; () banked
  9634  0048F4  B4D8               	btfsc	status,2,c
  9635  0048F6  D008               	goto	l5951
  9636                           
  9637                           ; BSR set to: 0
  9638  0048F8  0100               	movlb	0	; () banked
  9639  0048FA  518E               	movf	___ftpack@arg& (0+255),w,b
  9640  0048FC  0100               	movlb	0	; () banked
  9641  0048FE  118F               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  9642  004900  0100               	movlb	0	; () banked
  9643  004902  1190               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  9644  004904  A4D8               	btfss	status,2,c
  9645  004906  D011               	goto	l5957
  9646  004908                     l5951:
  9647                           
  9648                           ; BSR set to: 0
  9649  004908  0E00               	movlw	0
  9650  00490A  0100               	movlb	0	; () banked
  9651  00490C  6F8E               	movwf	?___ftpack& (0+255),b
  9652  00490E  0E00               	movlw	0
  9653  004910  0100               	movlb	0	; () banked
  9654  004912  6F8F               	movwf	(?___ftpack+1)& (0+255),b
  9655  004914  0E00               	movlw	0
  9656  004916  0100               	movlb	0	; () banked
  9657  004918  6F90               	movwf	(?___ftpack+2)& (0+255),b
  9658                           
  9659                           ; BSR set to: 0
  9660  00491A  0012               	return	
  9661  00491C                     l5955:
  9662                           
  9663                           ; BSR set to: 0
  9664  00491C  0100               	movlb	0	; () banked
  9665  00491E  2B91               	incf	___ftpack@exp& (0+255),f,b
  9666  004920  0100               	movlb	0	; () banked
  9667  004922  90D8               	bcf	status,0,c
  9668  004924  3390               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9669  004926  338F               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9670  004928  338E               	rrcf	___ftpack@arg& (0+255),f,b
  9671  00492A                     l5957:
  9672                           
  9673                           ; BSR set to: 0
  9674  00492A  0E00               	movlw	0
  9675  00492C  0100               	movlb	0	; () banked
  9676  00492E  158E               	andwf	___ftpack@arg& (0+255),w,b
  9677  004930  0100               	movlb	0	; () banked
  9678  004932  6F93               	movwf	??___ftpack& (0+255),b
  9679  004934  0E00               	movlw	0
  9680  004936  0100               	movlb	0	; () banked
  9681  004938  158F               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9682  00493A  0100               	movlb	0	; () banked
  9683  00493C  6F94               	movwf	(??___ftpack+1)& (0+255),b
  9684  00493E  0EFE               	movlw	254
  9685  004940  0100               	movlb	0	; () banked
  9686  004942  1590               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9687  004944  0100               	movlb	0	; () banked
  9688  004946  6F95               	movwf	(??___ftpack+2)& (0+255),b
  9689  004948  0100               	movlb	0	; () banked
  9690  00494A  5193               	movf	??___ftpack& (0+255),w,b
  9691  00494C  0100               	movlb	0	; () banked
  9692  00494E  1194               	iorwf	(??___ftpack+1)& (0+255),w,b
  9693  004950  0100               	movlb	0	; () banked
  9694  004952  1195               	iorwf	(??___ftpack+2)& (0+255),w,b
  9695  004954  B4D8               	btfsc	status,2,c
  9696  004956  D011               	goto	l5963
  9697  004958  D7E1               	goto	l5955
  9698  00495A                     l5959:
  9699                           
  9700                           ; BSR set to: 0
  9701  00495A  0100               	movlb	0	; () banked
  9702  00495C  2B91               	incf	___ftpack@exp& (0+255),f,b
  9703                           
  9704                           ; BSR set to: 0
  9705  00495E  0E01               	movlw	1
  9706  004960  0100               	movlb	0	; () banked
  9707  004962  278E               	addwf	___ftpack@arg& (0+255),f,b
  9708  004964  0E00               	movlw	0
  9709  004966  0100               	movlb	0	; () banked
  9710  004968  238F               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  9711  00496A  0E00               	movlw	0
  9712  00496C  0100               	movlb	0	; () banked
  9713  00496E  2390               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  9714  004970  0100               	movlb	0	; () banked
  9715  004972  90D8               	bcf	status,0,c
  9716  004974  3390               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9717  004976  338F               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9718  004978  338E               	rrcf	___ftpack@arg& (0+255),f,b
  9719  00497A                     l5963:
  9720                           
  9721                           ; BSR set to: 0
  9722  00497A  0E00               	movlw	0
  9723  00497C  0100               	movlb	0	; () banked
  9724  00497E  158E               	andwf	___ftpack@arg& (0+255),w,b
  9725  004980  0100               	movlb	0	; () banked
  9726  004982  6F93               	movwf	??___ftpack& (0+255),b
  9727  004984  0E00               	movlw	0
  9728  004986  0100               	movlb	0	; () banked
  9729  004988  158F               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9730  00498A  0100               	movlb	0	; () banked
  9731  00498C  6F94               	movwf	(??___ftpack+1)& (0+255),b
  9732  00498E  0EFF               	movlw	255
  9733  004990  0100               	movlb	0	; () banked
  9734  004992  1590               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9735  004994  0100               	movlb	0	; () banked
  9736  004996  6F95               	movwf	(??___ftpack+2)& (0+255),b
  9737  004998  0100               	movlb	0	; () banked
  9738  00499A  5193               	movf	??___ftpack& (0+255),w,b
  9739  00499C  0100               	movlb	0	; () banked
  9740  00499E  1194               	iorwf	(??___ftpack+1)& (0+255),w,b
  9741  0049A0  0100               	movlb	0	; () banked
  9742  0049A2  1195               	iorwf	(??___ftpack+2)& (0+255),w,b
  9743  0049A4  B4D8               	btfsc	status,2,c
  9744  0049A6  D008               	goto	l5967
  9745  0049A8  D7D8               	goto	l5959
  9746  0049AA                     l5965:
  9747                           
  9748                           ; BSR set to: 0
  9749  0049AA  0100               	movlb	0	; () banked
  9750  0049AC  0791               	decf	___ftpack@exp& (0+255),f,b
  9751  0049AE  0100               	movlb	0	; () banked
  9752  0049B0  90D8               	bcf	status,0,c
  9753  0049B2  378E               	rlcf	___ftpack@arg& (0+255),f,b
  9754  0049B4  378F               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  9755  0049B6  3790               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  9756  0049B8                     l5967:
  9757                           
  9758                           ; BSR set to: 0
  9759  0049B8  0100               	movlb	0	; () banked
  9760  0049BA  BF8F               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  9761  0049BC  D004               	goto	l772
  9762                           
  9763                           ; BSR set to: 0
  9764  0049BE  0E02               	movlw	2
  9765  0049C0  0100               	movlb	0	; () banked
  9766  0049C2  6191               	cpfslt	___ftpack@exp& (0+255),b
  9767  0049C4  D7F2               	goto	l5965
  9768  0049C6                     l772:
  9769                           
  9770                           ; BSR set to: 0
  9771  0049C6  0100               	movlb	0	; () banked
  9772  0049C8  B191               	btfsc	___ftpack@exp& (0+255),0,b
  9773  0049CA  D002               	goto	l5973
  9774                           
  9775                           ; BSR set to: 0
  9776  0049CC  0100               	movlb	0	; () banked
  9777  0049CE  9F8F               	bcf	(___ftpack@arg+1)& (0+255),7,b
  9778  0049D0                     l5973:
  9779                           
  9780                           ; BSR set to: 0
  9781  0049D0  0100               	movlb	0	; () banked
  9782  0049D2  90D8               	bcf	status,0,c
  9783  0049D4  3391               	rrcf	___ftpack@exp& (0+255),f,b
  9784  0049D6  0100               	movlb	0	; () banked
  9785  0049D8  5191               	movf	___ftpack@exp& (0+255),w,b
  9786  0049DA  0100               	movlb	0	; () banked
  9787  0049DC  1390               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  9788                           
  9789                           ; BSR set to: 0
  9790  0049DE  0100               	movlb	0	; () banked
  9791  0049E0  5192               	movf	___ftpack@sign& (0+255),w,b
  9792  0049E2  0100               	movlb	0	; () banked
  9793  0049E4  B4D8               	btfsc	status,2,c
  9794  0049E6  D002               	goto	l5979
  9795                           
  9796                           ; BSR set to: 0
  9797  0049E8  0100               	movlb	0	; () banked
  9798  0049EA  8F90               	bsf	(___ftpack@arg+2)& (0+255),7,b
  9799  0049EC                     l5979:
  9800                           
  9801                           ; BSR set to: 0
  9802  0049EC  C08E  F08E         	movff	___ftpack@arg,?___ftpack
  9803  0049F0  C08F  F08F         	movff	___ftpack@arg+1,?___ftpack+1
  9804  0049F4  C090  F090         	movff	___ftpack@arg+2,?___ftpack+2
  9805  0049F8  0012               	return	
  9806  0049FA                     __end_of___ftpack:
  9807                           	opt stack 0
  9808                           tosu	equ	0xFFF
  9809                           tosh	equ	0xFFE
  9810                           tosl	equ	0xFFD
  9811                           pclath	equ	0xFFA
  9812                           tblptru	equ	0xFF8
  9813                           tblptrh	equ	0xFF7
  9814                           tblptrl	equ	0xFF6
  9815                           tablat	equ	0xFF5
  9816                           prodh	equ	0xFF4
  9817                           prodl	equ	0xFF3
  9818                           intcon	equ	0xFF2
  9819                           postinc0	equ	0xFEE
  9820                           wreg	equ	0xFE8
  9821                           indf2	equ	0xFDF
  9822                           postinc2	equ	0xFDE
  9823                           postdec2	equ	0xFDD
  9824                           fsr2h	equ	0xFDA
  9825                           fsr2l	equ	0xFD9
  9826                           status	equ	0xFD8
  9827                           
  9828 ;; *************** function _SYSTEM_Initialize *****************
  9829 ;; Defined at:
  9830 ;;		line 111 in file "mcc_generated_files/mcc.c"
  9831 ;; Parameters:    Size  Location     Type
  9832 ;;		None
  9833 ;; Auto vars:     Size  Location     Type
  9834 ;;		None
  9835 ;; Return value:  Size  Location     Type
  9836 ;;                  1    wreg      void 
  9837 ;; Registers used:
  9838 ;;		wreg, status,2, status,0, cstack
  9839 ;; Tracked objects:
  9840 ;;		On entry : 0/0
  9841 ;;		On exit  : 0/0
  9842 ;;		Unchanged: 0/0
  9843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9844 ;;      Params:         0       0       0       0       0       0       0
  9845 ;;      Locals:         0       0       0       0       0       0       0
  9846 ;;      Temps:          0       0       0       0       0       0       0
  9847 ;;      Totals:         0       0       0       0       0       0       0
  9848 ;;Total ram usage:        0 bytes
  9849 ;; Hardware stack levels used:    1
  9850 ;; Hardware stack levels required when called:    9
  9851 ;; This function calls:
  9852 ;;		_EUSART1_Initialize
  9853 ;;		_EXT_INT_Initialize
  9854 ;;		_INTERRUPT_Initialize
  9855 ;;		_OSCILLATOR_Initialize
  9856 ;;		_PIN_MANAGER_Initialize
  9857 ;;		_TMR0_Initialize
  9858 ;; This function is called by:
  9859 ;;		_main
  9860 ;; This function uses a non-reentrant model
  9861 ;;
  9862                           
  9863                           	psect	text30
  9864  005A58                     __ptext30:
  9865                           	opt stack 0
  9866  005A58                     _SYSTEM_Initialize:
  9867                           	opt stack 21
  9868                           
  9869                           ;mcc.c: 114: INTERRUPT_Initialize();
  9870                           
  9871                           ; BSR set to: 0
  9872                           ;incstack = 0
  9873  005A58  EC90  F02D         	call	_INTERRUPT_Initialize	;wreg free
  9874                           
  9875                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  9876  005A5C  EC61  F02C         	call	_PIN_MANAGER_Initialize	;wreg free
  9877                           
  9878                           ;mcc.c: 116: OSCILLATOR_Initialize();
  9879  005A60  EC68  F02D         	call	_OSCILLATOR_Initialize	;wreg free
  9880                           
  9881                           ;mcc.c: 117: EXT_INT_Initialize();
  9882  005A64  EC91  F02C         	call	_EXT_INT_Initialize	;wreg free
  9883                           
  9884                           ;mcc.c: 118: TMR0_Initialize();
  9885  005A68  EC95  F02B         	call	_TMR0_Initialize	;wreg free
  9886                           
  9887                           ;mcc.c: 119: EUSART1_Initialize();
  9888  005A6C  EC45  F02D         	call	_EUSART1_Initialize	;wreg free
  9889  005A70  0012               	return		;funcret
  9890  005A72                     __end_of_SYSTEM_Initialize:
  9891                           	opt stack 0
  9892                           tosu	equ	0xFFF
  9893                           tosh	equ	0xFFE
  9894                           tosl	equ	0xFFD
  9895                           pclath	equ	0xFFA
  9896                           tblptru	equ	0xFF8
  9897                           tblptrh	equ	0xFF7
  9898                           tblptrl	equ	0xFF6
  9899                           tablat	equ	0xFF5
  9900                           prodh	equ	0xFF4
  9901                           prodl	equ	0xFF3
  9902                           intcon	equ	0xFF2
  9903                           postinc0	equ	0xFEE
  9904                           wreg	equ	0xFE8
  9905                           indf2	equ	0xFDF
  9906                           postinc2	equ	0xFDE
  9907                           postdec2	equ	0xFDD
  9908                           fsr2h	equ	0xFDA
  9909                           fsr2l	equ	0xFD9
  9910                           status	equ	0xFD8
  9911                           
  9912 ;; *************** function _TMR0_Initialize *****************
  9913 ;; Defined at:
  9914 ;;		line 18 in file "mcc_generated_files/tmr0.c"
  9915 ;; Parameters:    Size  Location     Type
  9916 ;;		None
  9917 ;; Auto vars:     Size  Location     Type
  9918 ;;		None
  9919 ;; Return value:  Size  Location     Type
  9920 ;;                  1    wreg      void 
  9921 ;; Registers used:
  9922 ;;		wreg, status,2, status,0, cstack
  9923 ;; Tracked objects:
  9924 ;;		On entry : 0/0
  9925 ;;		On exit  : 0/0
  9926 ;;		Unchanged: 0/0
  9927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9928 ;;      Params:         0       0       0       0       0       0       0
  9929 ;;      Locals:         0       0       0       0       0       0       0
  9930 ;;      Temps:          0       2       0       0       0       0       0
  9931 ;;      Totals:         0       2       0       0       0       0       0
  9932 ;;Total ram usage:        2 bytes
  9933 ;; Hardware stack levels used:    1
  9934 ;; Hardware stack levels required when called:    8
  9935 ;; This function calls:
  9936 ;;		_TMR0_SetInterruptHandler
  9937 ;;		_TMR0_StartTimer
  9938 ;; This function is called by:
  9939 ;;		_SYSTEM_Initialize
  9940 ;; This function uses a non-reentrant model
  9941 ;;
  9942                           
  9943                           	psect	text31
  9944  00572A                     __ptext31:
  9945                           	opt stack 0
  9946  00572A                     _TMR0_Initialize:
  9947                           	opt stack 21
  9948                           
  9949                           ;tmr0.c: 23: T0CON = 0x11;
  9950                           
  9951                           ;incstack = 0
  9952  00572A  0E11               	movlw	17
  9953  00572C  6ED5               	movwf	4053,c	;volatile
  9954                           
  9955                           ;tmr0.c: 26: TMR0H = 0x15;
  9956  00572E  0E15               	movlw	21
  9957  005730  6ED7               	movwf	4055,c	;volatile
  9958                           
  9959                           ;tmr0.c: 29: TMR0L = 0x9F;
  9960  005732  0E9F               	movlw	159
  9961  005734  6ED6               	movwf	4054,c	;volatile
  9962                           
  9963                           ;tmr0.c: 32: timer0ReloadVal = (TMR0H << 8) | TMR0L;
  9964  005736  50D6               	movf	4054,w,c	;volatile
  9965  005738  CFD7 F090          	movff	4055,??_TMR0_Initialize	;volatile
  9966  00573C  0100               	movlb	0	; () banked
  9967  00573E  6B91               	clrf	(??_TMR0_Initialize+1)& (0+255),b
  9968  005740  C090  F091         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  9969  005744  0100               	movlb	0	; () banked
  9970  005746  6B90               	clrf	??_TMR0_Initialize& (0+255),b
  9971  005748  0100               	movlb	0	; () banked
  9972  00574A  1190               	iorwf	??_TMR0_Initialize& (0+255),w,b
  9973  00574C  6E5C               	movwf	_timer0ReloadVal,c	;volatile
  9974  00574E  0100               	movlb	0	; () banked
  9975  005750  5191               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
  9976  005752  6E5D               	movwf	_timer0ReloadVal+1,c	;volatile
  9977                           
  9978                           ; BSR set to: 0
  9979                           ;tmr0.c: 35: INTCONbits.TMR0IF = 0;
  9980  005754  94F2               	bcf	intcon,2,c	;volatile
  9981                           
  9982                           ; BSR set to: 0
  9983                           ;tmr0.c: 38: INTCONbits.TMR0IE = 1;
  9984  005756  8AF2               	bsf	intcon,5,c	;volatile
  9985                           
  9986                           ; BSR set to: 0
  9987                           ;tmr0.c: 41: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  9988  005758  0E50               	movlw	low _TMR0_DefaultInterruptHandler
  9989  00575A  0100               	movlb	0	; () banked
  9990  00575C  6F8E               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  9991  00575E  0E59               	movlw	high _TMR0_DefaultInterruptHandler
  9992  005760  0100               	movlb	0	; () banked
  9993  005762  6F8F               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9994  005764  EC75  F02D         	call	_TMR0_SetInterruptHandler	;wreg free
  9995                           
  9996                           ;tmr0.c: 44: TMR0_StartTimer();
  9997  005768  EC8E  F02D         	call	_TMR0_StartTimer	;wreg free
  9998  00576C  0012               	return		;funcret
  9999  00576E                     __end_of_TMR0_Initialize:
 10000                           	opt stack 0
 10001                           tosu	equ	0xFFF
 10002                           tosh	equ	0xFFE
 10003                           tosl	equ	0xFFD
 10004                           pclath	equ	0xFFA
 10005                           tblptru	equ	0xFF8
 10006                           tblptrh	equ	0xFF7
 10007                           tblptrl	equ	0xFF6
 10008                           tablat	equ	0xFF5
 10009                           prodh	equ	0xFF4
 10010                           prodl	equ	0xFF3
 10011                           intcon	equ	0xFF2
 10012                           postinc0	equ	0xFEE
 10013                           wreg	equ	0xFE8
 10014                           indf2	equ	0xFDF
 10015                           postinc2	equ	0xFDE
 10016                           postdec2	equ	0xFDD
 10017                           fsr2h	equ	0xFDA
 10018                           fsr2l	equ	0xFD9
 10019                           status	equ	0xFD8
 10020                           
 10021 ;; *************** function _TMR0_StartTimer *****************
 10022 ;; Defined at:
 10023 ;;		line 47 in file "mcc_generated_files/tmr0.c"
 10024 ;; Parameters:    Size  Location     Type
 10025 ;;		None
 10026 ;; Auto vars:     Size  Location     Type
 10027 ;;		None
 10028 ;; Return value:  Size  Location     Type
 10029 ;;                  1    wreg      void 
 10030 ;; Registers used:
 10031 ;;		None
 10032 ;; Tracked objects:
 10033 ;;		On entry : 0/0
 10034 ;;		On exit  : 0/0
 10035 ;;		Unchanged: 0/0
 10036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10037 ;;      Params:         0       0       0       0       0       0       0
 10038 ;;      Locals:         0       0       0       0       0       0       0
 10039 ;;      Temps:          0       0       0       0       0       0       0
 10040 ;;      Totals:         0       0       0       0       0       0       0
 10041 ;;Total ram usage:        0 bytes
 10042 ;; Hardware stack levels used:    1
 10043 ;; Hardware stack levels required when called:    7
 10044 ;; This function calls:
 10045 ;;		Nothing
 10046 ;; This function is called by:
 10047 ;;		_TMR0_Initialize
 10048 ;; This function uses a non-reentrant model
 10049 ;;
 10050                           
 10051                           	psect	text32
 10052  005B1C                     __ptext32:
 10053                           	opt stack 0
 10054  005B1C                     _TMR0_StartTimer:
 10055                           	opt stack 21
 10056                           
 10057                           ;tmr0.c: 50: T0CONbits.TMR0ON = 1;
 10058                           
 10059                           ;incstack = 0
 10060  005B1C  8ED5               	bsf	4053,7,c	;volatile
 10061  005B1E  0012               	return		;funcret
 10062  005B20                     __end_of_TMR0_StartTimer:
 10063                           	opt stack 0
 10064                           tosu	equ	0xFFF
 10065                           tosh	equ	0xFFE
 10066                           tosl	equ	0xFFD
 10067                           pclath	equ	0xFFA
 10068                           tblptru	equ	0xFF8
 10069                           tblptrh	equ	0xFF7
 10070                           tblptrl	equ	0xFF6
 10071                           tablat	equ	0xFF5
 10072                           prodh	equ	0xFF4
 10073                           prodl	equ	0xFF3
 10074                           intcon	equ	0xFF2
 10075                           postinc0	equ	0xFEE
 10076                           wreg	equ	0xFE8
 10077                           indf2	equ	0xFDF
 10078                           postinc2	equ	0xFDE
 10079                           postdec2	equ	0xFDD
 10080                           fsr2h	equ	0xFDA
 10081                           fsr2l	equ	0xFD9
 10082                           status	equ	0xFD8
 10083                           
 10084 ;; *************** function _TMR0_SetInterruptHandler *****************
 10085 ;; Defined at:
 10086 ;;		line 105 in file "mcc_generated_files/tmr0.c"
 10087 ;; Parameters:    Size  Location     Type
 10088 ;;  InterruptHan    2   46[BANK0 ] PTR void 
 10089 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 10090 ;; Auto vars:     Size  Location     Type
 10091 ;;		None
 10092 ;; Return value:  Size  Location     Type
 10093 ;;                  1    wreg      void 
 10094 ;; Registers used:
 10095 ;;		wreg, status,2, status,0
 10096 ;; Tracked objects:
 10097 ;;		On entry : 0/0
 10098 ;;		On exit  : 0/0
 10099 ;;		Unchanged: 0/0
 10100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10101 ;;      Params:         0       2       0       0       0       0       0
 10102 ;;      Locals:         0       0       0       0       0       0       0
 10103 ;;      Temps:          0       0       0       0       0       0       0
 10104 ;;      Totals:         0       2       0       0       0       0       0
 10105 ;;Total ram usage:        2 bytes
 10106 ;; Hardware stack levels used:    1
 10107 ;; Hardware stack levels required when called:    7
 10108 ;; This function calls:
 10109 ;;		Nothing
 10110 ;; This function is called by:
 10111 ;;		_TMR0_Initialize
 10112 ;; This function uses a non-reentrant model
 10113 ;;
 10114                           
 10115                           	psect	text33
 10116  005AEA                     __ptext33:
 10117                           	opt stack 0
 10118  005AEA                     _TMR0_SetInterruptHandler:
 10119                           	opt stack 21
 10120                           
 10121                           ;tmr0.c: 106: TMR0_InterruptHandler = InterruptHandler;
 10122                           
 10123                           ;incstack = 0
 10124  005AEA  C08E  F0CE         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 10125  005AEE  C08F  F0CF         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 10126  005AF2  0012               	return		;funcret
 10127  005AF4                     __end_of_TMR0_SetInterruptHandler:
 10128                           	opt stack 0
 10129                           tosu	equ	0xFFF
 10130                           tosh	equ	0xFFE
 10131                           tosl	equ	0xFFD
 10132                           pclath	equ	0xFFA
 10133                           tblptru	equ	0xFF8
 10134                           tblptrh	equ	0xFF7
 10135                           tblptrl	equ	0xFF6
 10136                           tablat	equ	0xFF5
 10137                           prodh	equ	0xFF4
 10138                           prodl	equ	0xFF3
 10139                           intcon	equ	0xFF2
 10140                           postinc0	equ	0xFEE
 10141                           wreg	equ	0xFE8
 10142                           indf2	equ	0xFDF
 10143                           postinc2	equ	0xFDE
 10144                           postdec2	equ	0xFDD
 10145                           fsr2h	equ	0xFDA
 10146                           fsr2l	equ	0xFD9
 10147                           status	equ	0xFD8
 10148                           
 10149 ;; *************** function _PIN_MANAGER_Initialize *****************
 10150 ;; Defined at:
 10151 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
 10152 ;; Parameters:    Size  Location     Type
 10153 ;;		None
 10154 ;; Auto vars:     Size  Location     Type
 10155 ;;		None
 10156 ;; Return value:  Size  Location     Type
 10157 ;;                  1    wreg      void 
 10158 ;; Registers used:
 10159 ;;		wreg, status,2
 10160 ;; Tracked objects:
 10161 ;;		On entry : 0/0
 10162 ;;		On exit  : 0/0
 10163 ;;		Unchanged: 0/0
 10164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10165 ;;      Params:         0       0       0       0       0       0       0
 10166 ;;      Locals:         0       0       0       0       0       0       0
 10167 ;;      Temps:          0       0       0       0       0       0       0
 10168 ;;      Totals:         0       0       0       0       0       0       0
 10169 ;;Total ram usage:        0 bytes
 10170 ;; Hardware stack levels used:    1
 10171 ;; Hardware stack levels required when called:    7
 10172 ;; This function calls:
 10173 ;;		Nothing
 10174 ;; This function is called by:
 10175 ;;		_SYSTEM_Initialize
 10176 ;; This function uses a non-reentrant model
 10177 ;;
 10178                           
 10179                           	psect	text34
 10180  0058C2                     __ptext34:
 10181                           	opt stack 0
 10182  0058C2                     _PIN_MANAGER_Initialize:
 10183                           	opt stack 22
 10184                           
 10185                           ;pin_manager.c: 56: LATA = 0x00;
 10186                           
 10187                           ;incstack = 0
 10188  0058C2  0E00               	movlw	0
 10189  0058C4  6E89               	movwf	3977,c	;volatile
 10190                           
 10191                           ;pin_manager.c: 57: LATB = 0x3C;
 10192  0058C6  0E3C               	movlw	60
 10193  0058C8  6E8A               	movwf	3978,c	;volatile
 10194                           
 10195                           ;pin_manager.c: 58: LATC = 0x1F;
 10196  0058CA  0E1F               	movlw	31
 10197  0058CC  6E8B               	movwf	3979,c	;volatile
 10198                           
 10199                           ;pin_manager.c: 63: TRISA = 0xC0;
 10200  0058CE  0EC0               	movlw	192
 10201  0058D0  6E92               	movwf	3986,c	;volatile
 10202                           
 10203                           ;pin_manager.c: 64: TRISB = 0xC3;
 10204  0058D2  0EC3               	movlw	195
 10205  0058D4  6E93               	movwf	3987,c	;volatile
 10206                           
 10207                           ;pin_manager.c: 65: TRISC = 0x20;
 10208  0058D6  0E20               	movlw	32
 10209  0058D8  6E94               	movwf	3988,c	;volatile
 10210                           
 10211                           ;pin_manager.c: 70: ANSELC = 0x20;
 10212  0058DA  0E20               	movlw	32
 10213  0058DC  010F               	movlb	15	; () banked
 10214  0058DE  6F3A               	movwf	58,b	;volatile
 10215                           
 10216                           ;pin_manager.c: 71: ANSELB = 0x00;
 10217  0058E0  0E00               	movlw	0
 10218  0058E2  010F               	movlb	15	; () banked
 10219  0058E4  6F39               	movwf	57,b	;volatile
 10220                           
 10221                           ;pin_manager.c: 72: ANSELA = 0x00;
 10222  0058E6  0E00               	movlw	0
 10223  0058E8  010F               	movlb	15	; () banked
 10224  0058EA  6F38               	movwf	56,b	;volatile
 10225                           
 10226                           ; BSR set to: 15
 10227                           ;pin_manager.c: 77: WPUB = 0xFF;
 10228  0058EC  6861               	setf	3937,c	;volatile
 10229                           
 10230                           ; BSR set to: 15
 10231                           ;pin_manager.c: 78: INTCON2bits.nRBPU = 0;
 10232  0058EE  9EF1               	bcf	intcon2,7,c	;volatile
 10233                           
 10234                           ; BSR set to: 15
 10235  0058F0  0012               	return		;funcret
 10236  0058F2                     __end_of_PIN_MANAGER_Initialize:
 10237                           	opt stack 0
 10238                           tosu	equ	0xFFF
 10239                           tosh	equ	0xFFE
 10240                           tosl	equ	0xFFD
 10241                           pclath	equ	0xFFA
 10242                           tblptru	equ	0xFF8
 10243                           tblptrh	equ	0xFF7
 10244                           tblptrl	equ	0xFF6
 10245                           tablat	equ	0xFF5
 10246                           prodh	equ	0xFF4
 10247                           prodl	equ	0xFF3
 10248                           intcon	equ	0xFF2
 10249                           intcon2	equ	0xFF1
 10250                           postinc0	equ	0xFEE
 10251                           wreg	equ	0xFE8
 10252                           indf2	equ	0xFDF
 10253                           postinc2	equ	0xFDE
 10254                           postdec2	equ	0xFDD
 10255                           fsr2h	equ	0xFDA
 10256                           fsr2l	equ	0xFD9
 10257                           status	equ	0xFD8
 10258                           
 10259 ;; *************** function _OSCILLATOR_Initialize *****************
 10260 ;; Defined at:
 10261 ;;		line 122 in file "mcc_generated_files/mcc.c"
 10262 ;; Parameters:    Size  Location     Type
 10263 ;;		None
 10264 ;; Auto vars:     Size  Location     Type
 10265 ;;		None
 10266 ;; Return value:  Size  Location     Type
 10267 ;;                  1    wreg      void 
 10268 ;; Registers used:
 10269 ;;		wreg, status,2
 10270 ;; Tracked objects:
 10271 ;;		On entry : 0/0
 10272 ;;		On exit  : 0/0
 10273 ;;		Unchanged: 0/0
 10274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10275 ;;      Params:         0       0       0       0       0       0       0
 10276 ;;      Locals:         0       0       0       0       0       0       0
 10277 ;;      Temps:          0       0       0       0       0       0       0
 10278 ;;      Totals:         0       0       0       0       0       0       0
 10279 ;;Total ram usage:        0 bytes
 10280 ;; Hardware stack levels used:    1
 10281 ;; Hardware stack levels required when called:    7
 10282 ;; This function calls:
 10283 ;;		Nothing
 10284 ;; This function is called by:
 10285 ;;		_SYSTEM_Initialize
 10286 ;; This function uses a non-reentrant model
 10287 ;;
 10288                           
 10289                           	psect	text35
 10290  005AD0                     __ptext35:
 10291                           	opt stack 0
 10292  005AD0                     _OSCILLATOR_Initialize:
 10293                           	opt stack 22
 10294                           
 10295                           ;mcc.c: 125: OSCCON = 0x70;
 10296                           
 10297                           ; BSR set to: 15
 10298                           ;incstack = 0
 10299  005AD0  0E70               	movlw	112
 10300  005AD2  6ED3               	movwf	4051,c	;volatile
 10301                           
 10302                           ;mcc.c: 127: OSCCON2 = 0x04;
 10303  005AD4  0E04               	movlw	4
 10304  005AD6  6ED2               	movwf	4050,c	;volatile
 10305                           
 10306                           ;mcc.c: 129: OSCTUNE = 0x00;
 10307  005AD8  0E00               	movlw	0
 10308  005ADA  6E9B               	movwf	3995,c	;volatile
 10309  005ADC  0012               	return		;funcret
 10310  005ADE                     __end_of_OSCILLATOR_Initialize:
 10311                           	opt stack 0
 10312                           tosu	equ	0xFFF
 10313                           tosh	equ	0xFFE
 10314                           tosl	equ	0xFFD
 10315                           pclath	equ	0xFFA
 10316                           tblptru	equ	0xFF8
 10317                           tblptrh	equ	0xFF7
 10318                           tblptrl	equ	0xFF6
 10319                           tablat	equ	0xFF5
 10320                           prodh	equ	0xFF4
 10321                           prodl	equ	0xFF3
 10322                           intcon	equ	0xFF2
 10323                           intcon2	equ	0xFF1
 10324                           postinc0	equ	0xFEE
 10325                           wreg	equ	0xFE8
 10326                           indf2	equ	0xFDF
 10327                           postinc2	equ	0xFDE
 10328                           postdec2	equ	0xFDD
 10329                           fsr2h	equ	0xFDA
 10330                           fsr2l	equ	0xFD9
 10331                           status	equ	0xFD8
 10332                           
 10333 ;; *************** function _INTERRUPT_Initialize *****************
 10334 ;; Defined at:
 10335 ;;		line 4 in file "mcc_generated_files/interrupt_manager.c"
 10336 ;; Parameters:    Size  Location     Type
 10337 ;;		None
 10338 ;; Auto vars:     Size  Location     Type
 10339 ;;		None
 10340 ;; Return value:  Size  Location     Type
 10341 ;;                  1    wreg      void 
 10342 ;; Registers used:
 10343 ;;		None
 10344 ;; Tracked objects:
 10345 ;;		On entry : 0/0
 10346 ;;		On exit  : 0/0
 10347 ;;		Unchanged: 0/0
 10348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10349 ;;      Params:         0       0       0       0       0       0       0
 10350 ;;      Locals:         0       0       0       0       0       0       0
 10351 ;;      Temps:          0       0       0       0       0       0       0
 10352 ;;      Totals:         0       0       0       0       0       0       0
 10353 ;;Total ram usage:        0 bytes
 10354 ;; Hardware stack levels used:    1
 10355 ;; Hardware stack levels required when called:    7
 10356 ;; This function calls:
 10357 ;;		Nothing
 10358 ;; This function is called by:
 10359 ;;		_SYSTEM_Initialize
 10360 ;; This function uses a non-reentrant model
 10361 ;;
 10362                           
 10363                           	psect	text36
 10364  005B20                     __ptext36:
 10365                           	opt stack 0
 10366  005B20                     _INTERRUPT_Initialize:
 10367                           	opt stack 22
 10368                           
 10369                           ;interrupt_manager.c: 7: RCONbits.IPEN = 0;
 10370                           
 10371                           ;incstack = 0
 10372  005B20  9ED0               	bcf	4048,7,c	;volatile
 10373  005B22  0012               	return		;funcret
 10374  005B24                     __end_of_INTERRUPT_Initialize:
 10375                           	opt stack 0
 10376                           tosu	equ	0xFFF
 10377                           tosh	equ	0xFFE
 10378                           tosl	equ	0xFFD
 10379                           pclath	equ	0xFFA
 10380                           tblptru	equ	0xFF8
 10381                           tblptrh	equ	0xFF7
 10382                           tblptrl	equ	0xFF6
 10383                           tablat	equ	0xFF5
 10384                           prodh	equ	0xFF4
 10385                           prodl	equ	0xFF3
 10386                           intcon	equ	0xFF2
 10387                           intcon2	equ	0xFF1
 10388                           postinc0	equ	0xFEE
 10389                           wreg	equ	0xFE8
 10390                           indf2	equ	0xFDF
 10391                           postinc2	equ	0xFDE
 10392                           postdec2	equ	0xFDD
 10393                           fsr2h	equ	0xFDA
 10394                           fsr2l	equ	0xFD9
 10395                           status	equ	0xFD8
 10396                           
 10397 ;; *************** function _EXT_INT_Initialize *****************
 10398 ;; Defined at:
 10399 ;;		line 161 in file "mcc_generated_files/ext_int.c"
 10400 ;; Parameters:    Size  Location     Type
 10401 ;;		None
 10402 ;; Auto vars:     Size  Location     Type
 10403 ;;		None
 10404 ;; Return value:  Size  Location     Type
 10405 ;;                  1    wreg      void 
 10406 ;; Registers used:
 10407 ;;		wreg, status,2, status,0, cstack
 10408 ;; Tracked objects:
 10409 ;;		On entry : 0/0
 10410 ;;		On exit  : 0/0
 10411 ;;		Unchanged: 0/0
 10412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10413 ;;      Params:         0       0       0       0       0       0       0
 10414 ;;      Locals:         0       0       0       0       0       0       0
 10415 ;;      Temps:          0       0       0       0       0       0       0
 10416 ;;      Totals:         0       0       0       0       0       0       0
 10417 ;;Total ram usage:        0 bytes
 10418 ;; Hardware stack levels used:    1
 10419 ;; Hardware stack levels required when called:    8
 10420 ;; This function calls:
 10421 ;;		_INT0_SetInterruptHandler
 10422 ;;		_INT1_SetInterruptHandler
 10423 ;; This function is called by:
 10424 ;;		_SYSTEM_Initialize
 10425 ;; This function uses a non-reentrant model
 10426 ;;
 10427                           
 10428                           	psect	text37
 10429  005922                     __ptext37:
 10430                           	opt stack 0
 10431  005922                     _EXT_INT_Initialize:
 10432                           	opt stack 21
 10433                           
 10434                           ;ext_int.c: 170: (INTCON3bits.INT1IF = 0);
 10435                           
 10436                           ;incstack = 0
 10437  005922  90F0               	bcf	intcon3,0,c	;volatile
 10438                           
 10439                           ;ext_int.c: 171: (INTCON2bits.INTEDG1 = 0);
 10440  005924  9AF1               	bcf	intcon2,5,c	;volatile
 10441                           
 10442                           ;ext_int.c: 173: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
 10443  005926  0E00               	movlw	0
 10444  005928  0100               	movlb	0	; () banked
 10445  00592A  6F8E               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
 10446  00592C  0E00               	movlw	0
 10447  00592E  0100               	movlb	0	; () banked
 10448  005930  6F8F               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 10449  005932  EC7A  F02D         	call	_INT1_SetInterruptHandler	;wreg free
 10450                           
 10451                           ;ext_int.c: 174: (INTCON3bits.INT1IE = 1);
 10452  005936  86F0               	bsf	intcon3,3,c	;volatile
 10453                           
 10454                           ;ext_int.c: 185: (INTCONbits.INT0IF = 0);
 10455  005938  92F2               	bcf	intcon,1,c	;volatile
 10456                           
 10457                           ;ext_int.c: 186: (INTCON2bits.INTEDG0 = 0);
 10458  00593A  9CF1               	bcf	intcon2,6,c	;volatile
 10459                           
 10460                           ;ext_int.c: 188: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
 10461  00593C  0E00               	movlw	0
 10462  00593E  0100               	movlb	0	; () banked
 10463  005940  6F8E               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
 10464  005942  0E00               	movlw	0
 10465  005944  0100               	movlb	0	; () banked
 10466  005946  6F8F               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 10467  005948  EC7F  F02D         	call	_INT0_SetInterruptHandler	;wreg free
 10468                           
 10469                           ;ext_int.c: 189: (INTCONbits.INT0IE = 1);
 10470  00594C  88F2               	bsf	intcon,4,c	;volatile
 10471  00594E  0012               	return		;funcret
 10472  005950                     __end_of_EXT_INT_Initialize:
 10473                           	opt stack 0
 10474                           tosu	equ	0xFFF
 10475                           tosh	equ	0xFFE
 10476                           tosl	equ	0xFFD
 10477                           pclath	equ	0xFFA
 10478                           tblptru	equ	0xFF8
 10479                           tblptrh	equ	0xFF7
 10480                           tblptrl	equ	0xFF6
 10481                           tablat	equ	0xFF5
 10482                           prodh	equ	0xFF4
 10483                           prodl	equ	0xFF3
 10484                           intcon	equ	0xFF2
 10485                           intcon2	equ	0xFF1
 10486                           intcon3	equ	0xFF0
 10487                           postinc0	equ	0xFEE
 10488                           wreg	equ	0xFE8
 10489                           indf2	equ	0xFDF
 10490                           postinc2	equ	0xFDE
 10491                           postdec2	equ	0xFDD
 10492                           fsr2h	equ	0xFDA
 10493                           fsr2l	equ	0xFD9
 10494                           status	equ	0xFD8
 10495                           
 10496 ;; *************** function _INT1_SetInterruptHandler *****************
 10497 ;; Defined at:
 10498 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 10499 ;; Parameters:    Size  Location     Type
 10500 ;;  InterruptHan    2   46[BANK0 ] PTR void 
 10501 ;;		 -> INT1_DefaultInterruptHandler(1), 
 10502 ;; Auto vars:     Size  Location     Type
 10503 ;;		None
 10504 ;; Return value:  Size  Location     Type
 10505 ;;                  1    wreg      void 
 10506 ;; Registers used:
 10507 ;;		wreg, status,2, status,0
 10508 ;; Tracked objects:
 10509 ;;		On entry : 0/0
 10510 ;;		On exit  : 0/0
 10511 ;;		Unchanged: 0/0
 10512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10513 ;;      Params:         0       2       0       0       0       0       0
 10514 ;;      Locals:         0       0       0       0       0       0       0
 10515 ;;      Temps:          0       0       0       0       0       0       0
 10516 ;;      Totals:         0       2       0       0       0       0       0
 10517 ;;Total ram usage:        2 bytes
 10518 ;; Hardware stack levels used:    1
 10519 ;; Hardware stack levels required when called:    7
 10520 ;; This function calls:
 10521 ;;		Nothing
 10522 ;; This function is called by:
 10523 ;;		_EXT_INT_Initialize
 10524 ;; This function uses a non-reentrant model
 10525 ;;
 10526                           
 10527                           	psect	text38
 10528  005AF4                     __ptext38:
 10529                           	opt stack 0
 10530  005AF4                     _INT1_SetInterruptHandler:
 10531                           	opt stack 21
 10532                           
 10533                           ;ext_int.c: 79: INT1_InterruptHandler = InterruptHandler;
 10534                           
 10535                           ;incstack = 0
 10536  005AF4  C08E  F0CC         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
 10537  005AF8  C08F  F0CD         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
 10538  005AFC  0012               	return		;funcret
 10539  005AFE                     __end_of_INT1_SetInterruptHandler:
 10540                           	opt stack 0
 10541                           tosu	equ	0xFFF
 10542                           tosh	equ	0xFFE
 10543                           tosl	equ	0xFFD
 10544                           pclath	equ	0xFFA
 10545                           tblptru	equ	0xFF8
 10546                           tblptrh	equ	0xFF7
 10547                           tblptrl	equ	0xFF6
 10548                           tablat	equ	0xFF5
 10549                           prodh	equ	0xFF4
 10550                           prodl	equ	0xFF3
 10551                           intcon	equ	0xFF2
 10552                           intcon2	equ	0xFF1
 10553                           intcon3	equ	0xFF0
 10554                           postinc0	equ	0xFEE
 10555                           wreg	equ	0xFE8
 10556                           indf2	equ	0xFDF
 10557                           postinc2	equ	0xFDE
 10558                           postdec2	equ	0xFDD
 10559                           fsr2h	equ	0xFDA
 10560                           fsr2l	equ	0xFD9
 10561                           status	equ	0xFD8
 10562                           
 10563 ;; *************** function _INT0_SetInterruptHandler *****************
 10564 ;; Defined at:
 10565 ;;		line 140 in file "mcc_generated_files/ext_int.c"
 10566 ;; Parameters:    Size  Location     Type
 10567 ;;  InterruptHan    2   46[BANK0 ] PTR void 
 10568 ;;		 -> INT0_DefaultInterruptHandler(1), 
 10569 ;; Auto vars:     Size  Location     Type
 10570 ;;		None
 10571 ;; Return value:  Size  Location     Type
 10572 ;;                  1    wreg      void 
 10573 ;; Registers used:
 10574 ;;		wreg, status,2, status,0
 10575 ;; Tracked objects:
 10576 ;;		On entry : 0/0
 10577 ;;		On exit  : 0/0
 10578 ;;		Unchanged: 0/0
 10579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10580 ;;      Params:         0       2       0       0       0       0       0
 10581 ;;      Locals:         0       0       0       0       0       0       0
 10582 ;;      Temps:          0       0       0       0       0       0       0
 10583 ;;      Totals:         0       2       0       0       0       0       0
 10584 ;;Total ram usage:        2 bytes
 10585 ;; Hardware stack levels used:    1
 10586 ;; Hardware stack levels required when called:    7
 10587 ;; This function calls:
 10588 ;;		Nothing
 10589 ;; This function is called by:
 10590 ;;		_EXT_INT_Initialize
 10591 ;; This function uses a non-reentrant model
 10592 ;;
 10593                           
 10594                           	psect	text39
 10595  005AFE                     __ptext39:
 10596                           	opt stack 0
 10597  005AFE                     _INT0_SetInterruptHandler:
 10598                           	opt stack 21
 10599                           
 10600                           ;ext_int.c: 141: INT0_InterruptHandler = InterruptHandler;
 10601                           
 10602                           ;incstack = 0
 10603  005AFE  C08E  F0CA         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 10604  005B02  C08F  F0CB         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 10605  005B06  0012               	return		;funcret
 10606  005B08                     __end_of_INT0_SetInterruptHandler:
 10607                           	opt stack 0
 10608                           tosu	equ	0xFFF
 10609                           tosh	equ	0xFFE
 10610                           tosl	equ	0xFFD
 10611                           pclath	equ	0xFFA
 10612                           tblptru	equ	0xFF8
 10613                           tblptrh	equ	0xFF7
 10614                           tblptrl	equ	0xFF6
 10615                           tablat	equ	0xFF5
 10616                           prodh	equ	0xFF4
 10617                           prodl	equ	0xFF3
 10618                           intcon	equ	0xFF2
 10619                           intcon2	equ	0xFF1
 10620                           intcon3	equ	0xFF0
 10621                           postinc0	equ	0xFEE
 10622                           wreg	equ	0xFE8
 10623                           indf2	equ	0xFDF
 10624                           postinc2	equ	0xFDE
 10625                           postdec2	equ	0xFDD
 10626                           fsr2h	equ	0xFDA
 10627                           fsr2l	equ	0xFD9
 10628                           status	equ	0xFD8
 10629                           
 10630 ;; *************** function _EUSART1_Initialize *****************
 10631 ;; Defined at:
 10632 ;;		line 55 in file "mcc_generated_files/eusart1.c"
 10633 ;; Parameters:    Size  Location     Type
 10634 ;;		None
 10635 ;; Auto vars:     Size  Location     Type
 10636 ;;		None
 10637 ;; Return value:  Size  Location     Type
 10638 ;;                  1    wreg      void 
 10639 ;; Registers used:
 10640 ;;		wreg, status,2
 10641 ;; Tracked objects:
 10642 ;;		On entry : 0/0
 10643 ;;		On exit  : 0/0
 10644 ;;		Unchanged: 0/0
 10645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10646 ;;      Params:         0       0       0       0       0       0       0
 10647 ;;      Locals:         0       0       0       0       0       0       0
 10648 ;;      Temps:          0       0       0       0       0       0       0
 10649 ;;      Totals:         0       0       0       0       0       0       0
 10650 ;;Total ram usage:        0 bytes
 10651 ;; Hardware stack levels used:    1
 10652 ;; Hardware stack levels required when called:    7
 10653 ;; This function calls:
 10654 ;;		Nothing
 10655 ;; This function is called by:
 10656 ;;		_SYSTEM_Initialize
 10657 ;; This function uses a non-reentrant model
 10658 ;;
 10659                           
 10660                           	psect	text40
 10661  005A8A                     __ptext40:
 10662                           	opt stack 0
 10663  005A8A                     _EUSART1_Initialize:
 10664                           	opt stack 22
 10665                           
 10666                           ;eusart1.c: 60: BAUDCON1 = 0x08;
 10667                           
 10668                           ;incstack = 0
 10669  005A8A  0E08               	movlw	8
 10670  005A8C  6EB8               	movwf	4024,c	;volatile
 10671                           
 10672                           ;eusart1.c: 63: RCSTA1 = 0x80;
 10673  005A8E  0E80               	movlw	128
 10674  005A90  6EAB               	movwf	4011,c	;volatile
 10675                           
 10676                           ;eusart1.c: 66: TXSTA1 = 0x24;
 10677  005A92  0E24               	movlw	36
 10678  005A94  6EAC               	movwf	4012,c	;volatile
 10679                           
 10680                           ;eusart1.c: 69: SPBRG1 = 0xA0;
 10681  005A96  0EA0               	movlw	160
 10682  005A98  6EAF               	movwf	4015,c	;volatile
 10683                           
 10684                           ;eusart1.c: 72: SPBRGH1 = 0x01;
 10685  005A9A  0E01               	movlw	1
 10686  005A9C  6EB0               	movwf	4016,c	;volatile
 10687  005A9E  0012               	return		;funcret
 10688  005AA0                     __end_of_EUSART1_Initialize:
 10689                           	opt stack 0
 10690                           tosu	equ	0xFFF
 10691                           tosh	equ	0xFFE
 10692                           tosl	equ	0xFFD
 10693                           pclath	equ	0xFFA
 10694                           tblptru	equ	0xFF8
 10695                           tblptrh	equ	0xFF7
 10696                           tblptrl	equ	0xFF6
 10697                           tablat	equ	0xFF5
 10698                           prodh	equ	0xFF4
 10699                           prodl	equ	0xFF3
 10700                           intcon	equ	0xFF2
 10701                           intcon2	equ	0xFF1
 10702                           intcon3	equ	0xFF0
 10703                           postinc0	equ	0xFEE
 10704                           wreg	equ	0xFE8
 10705                           indf2	equ	0xFDF
 10706                           postinc2	equ	0xFDE
 10707                           postdec2	equ	0xFDD
 10708                           fsr2h	equ	0xFDA
 10709                           fsr2l	equ	0xFD9
 10710                           status	equ	0xFD8
 10711                           
 10712 ;; *************** function _INTERRUPT_InterruptManager *****************
 10713 ;; Defined at:
 10714 ;;		line 10 in file "mcc_generated_files/interrupt_manager.c"
 10715 ;; Parameters:    Size  Location     Type
 10716 ;;		None
 10717 ;; Auto vars:     Size  Location     Type
 10718 ;;		None
 10719 ;; Return value:  Size  Location     Type
 10720 ;;                  1    wreg      void 
 10721 ;; Registers used:
 10722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10723 ;; Tracked objects:
 10724 ;;		On entry : 0/0
 10725 ;;		On exit  : 0/0
 10726 ;;		Unchanged: 0/0
 10727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10728 ;;      Params:         0       0       0       0       0       0       0
 10729 ;;      Locals:         0       0       0       0       0       0       0
 10730 ;;      Temps:          0      14       0       0       0       0       0
 10731 ;;      Totals:         0      14       0       0       0       0       0
 10732 ;;Total ram usage:       14 bytes
 10733 ;; Hardware stack levels used:    1
 10734 ;; Hardware stack levels required when called:    6
 10735 ;; This function calls:
 10736 ;;		_INT0_ISR
 10737 ;;		_INT1_ISR
 10738 ;;		_TMR0_ISR
 10739 ;; This function is called by:
 10740 ;;		Interrupt level 2
 10741 ;; This function uses a non-reentrant model
 10742 ;;
 10743                           
 10744                           	psect	intcode
 10745  000008                     __pintcode:
 10746                           	opt stack 0
 10747  000008                     _INTERRUPT_InterruptManager:
 10748                           	opt stack 19
 10749                           
 10750                           ;incstack = 0
 10751  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10752  00000A  CFFA F080          	movff	pclath,??_INTERRUPT_InterruptManager
 10753  00000E  CFFB F081          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 10754  000012  CFE9 F082          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 10755  000016  CFEA F083          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 10756  00001A  CFE1 F084          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 10757  00001E  CFE2 F085          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 10758  000022  CFD9 F086          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 10759  000026  CFDA F087          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 10760  00002A  CFF3 F088          	movff	prodl,??_INTERRUPT_InterruptManager+8
 10761  00002E  CFF4 F089          	movff	prodh,??_INTERRUPT_InterruptManager+9
 10762  000032  CFF6 F08A          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 10763  000036  CFF7 F08B          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 10764  00003A  CFF8 F08C          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 10765  00003E  CFF5 F08D          	movff	tablat,??_INTERRUPT_InterruptManager+13
 10766                           
 10767                           ;interrupt_manager.c: 13: if(INTCONbits.INT0IE == 1 && INTCONbits.INT0IF == 1)
 10768  000042  B8F2               	btfsc	intcon,4,c	;volatile
 10769  000044  A2F2               	btfss	intcon,1,c	;volatile
 10770  000046  D003               	goto	i2l121
 10771                           
 10772                           ;interrupt_manager.c: 14: {
 10773                           ;interrupt_manager.c: 15: INT0_ISR();
 10774  000048  ECFD  F024         	call	_INT0_ISR	;wreg free
 10775                           
 10776                           ;interrupt_manager.c: 16: }
 10777  00004C  D00B               	goto	i2l127
 10778  00004E                     i2l121:
 10779                           
 10780                           ;interrupt_manager.c: 17: else if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 10781  00004E  B6F0               	btfsc	intcon3,3,c	;volatile
 10782  000050  A0F0               	btfss	intcon3,0,c	;volatile
 10783  000052  D003               	goto	i2l123
 10784                           
 10785                           ;interrupt_manager.c: 18: {
 10786                           ;interrupt_manager.c: 19: INT1_ISR();
 10787  000054  EC39  F02D         	call	_INT1_ISR	;wreg free
 10788                           
 10789                           ;interrupt_manager.c: 20: }
 10790  000058  D005               	goto	i2l127
 10791  00005A                     i2l123:
 10792                           
 10793                           ;interrupt_manager.c: 21: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 10794  00005A  BAF2               	btfsc	intcon,5,c	;volatile
 10795  00005C  A4F2               	btfss	intcon,2,c	;volatile
 10796  00005E  D002               	goto	i2l127
 10797                           
 10798                           ;interrupt_manager.c: 22: {
 10799                           ;interrupt_manager.c: 23: TMR0_ISR();
 10800  000060  EC79  F02C         	call	_TMR0_ISR	;wreg free
 10801  000064                     i2l127:
 10802  000064  C08D  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 10803  000068  C08C  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 10804  00006C  C08B  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 10805  000070  C08A  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 10806  000074  C089  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 10807  000078  C088  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 10808  00007C  C087  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 10809  000080  C086  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 10810  000084  C085  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 10811  000088  C084  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 10812  00008C  C083  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 10813  000090  C082  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 10814  000094  C081  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 10815  000098  C080  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 10816  00009C  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10817  00009E  0011               	retfie		f
 10818  0000A0                     __end_of_INTERRUPT_InterruptManager:
 10819                           	opt stack 0
 10820                           tosu	equ	0xFFF
 10821                           tosh	equ	0xFFE
 10822                           tosl	equ	0xFFD
 10823                           pclatu	equ	0xFFB
 10824                           pclath	equ	0xFFA
 10825                           tblptru	equ	0xFF8
 10826                           tblptrh	equ	0xFF7
 10827                           tblptrl	equ	0xFF6
 10828                           tablat	equ	0xFF5
 10829                           prodh	equ	0xFF4
 10830                           prodl	equ	0xFF3
 10831                           intcon	equ	0xFF2
 10832                           intcon2	equ	0xFF1
 10833                           intcon3	equ	0xFF0
 10834                           postinc0	equ	0xFEE
 10835                           fsr0h	equ	0xFEA
 10836                           fsr0l	equ	0xFE9
 10837                           wreg	equ	0xFE8
 10838                           fsr1h	equ	0xFE2
 10839                           fsr1l	equ	0xFE1
 10840                           indf2	equ	0xFDF
 10841                           postinc2	equ	0xFDE
 10842                           postdec2	equ	0xFDD
 10843                           fsr2h	equ	0xFDA
 10844                           fsr2l	equ	0xFD9
 10845                           status	equ	0xFD8
 10846                           
 10847 ;; *************** function _TMR0_ISR *****************
 10848 ;; Defined at:
 10849 ;;		line 88 in file "mcc_generated_files/tmr0.c"
 10850 ;; Parameters:    Size  Location     Type
 10851 ;;		None
 10852 ;; Auto vars:     Size  Location     Type
 10853 ;;		None
 10854 ;; Return value:  Size  Location     Type
 10855 ;;                  1    wreg      void 
 10856 ;; Registers used:
 10857 ;;		wreg, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 10858 ;; Tracked objects:
 10859 ;;		On entry : 0/0
 10860 ;;		On exit  : 0/0
 10861 ;;		Unchanged: 0/0
 10862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10863 ;;      Params:         0       0       0       0       0       0       0
 10864 ;;      Locals:         0       0       0       0       0       0       0
 10865 ;;      Temps:          0       0       0       0       0       0       0
 10866 ;;      Totals:         0       0       0       0       0       0       0
 10867 ;;Total ram usage:        0 bytes
 10868 ;; Hardware stack levels used:    1
 10869 ;; Hardware stack levels required when called:    2
 10870 ;; This function calls:
 10871 ;;		Absolute function
 10872 ;;		_TMR0_DefaultInterruptHandler
 10873 ;; This function is called by:
 10874 ;;		_INTERRUPT_InterruptManager
 10875 ;; This function uses a non-reentrant model
 10876 ;;
 10877                           
 10878                           	psect	text42
 10879  0058F2                     __ptext42:
 10880                           	opt stack 0
 10881  0058F2                     _TMR0_ISR:
 10882                           	opt stack 22
 10883                           
 10884                           ;tmr0.c: 91: INTCONbits.TMR0IF = 0;
 10885                           
 10886                           ;incstack = 0
 10887  0058F2  94F2               	bcf	intcon,2,c	;volatile
 10888                           
 10889                           ;tmr0.c: 95: TMR0H = timer0ReloadVal >> 8;
 10890  0058F4  505D               	movf	_timer0ReloadVal+1,w,c	;volatile
 10891  0058F6  6ED7               	movwf	4055,c	;volatile
 10892                           
 10893                           ;tmr0.c: 96: TMR0L = (uint8_t) timer0ReloadVal;
 10894  0058F8  C05C  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 10895                           
 10896                           ;tmr0.c: 98: if(TMR0_InterruptHandler)
 10897  0058FC  0100               	movlb	0	; () banked
 10898  0058FE  51CE               	movf	_TMR0_InterruptHandler& (0+255),w,b
 10899  005900  0100               	movlb	0	; () banked
 10900  005902  11CF               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 10901  005904  B4D8               	btfsc	status,2,c
 10902  005906  0012               	return	
 10903                           
 10904                           ; BSR set to: 0
 10905                           ;tmr0.c: 99: {
 10906                           ;tmr0.c: 100: TMR0_InterruptHandler();
 10907  005908  D801               	call	i2u1664_48
 10908  00590A  0012               	return	
 10909  00590C                     i2u1664_48:
 10910  00590C  0005               	push	
 10911  00590E  0100               	movlb	0	; () banked
 10912  005910  6EFA               	movwf	pclath,c
 10913  005912  51CE               	movf	_TMR0_InterruptHandler& (0+255),w,b
 10914  005914  6EFD               	movwf	tosl,c
 10915  005916  51CF               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 10916  005918  6EFE               	movwf	tosh,c
 10917  00591A  50F8               	movf	tblptru,w,c
 10918  00591C  6EFF               	movwf	tosu,c
 10919  00591E  50FA               	movf	pclath,w,c
 10920  005920  0012               	return		;indir
 10921  005922                     __end_of_TMR0_ISR:
 10922                           	opt stack 0
 10923                           tosu	equ	0xFFF
 10924                           tosh	equ	0xFFE
 10925                           tosl	equ	0xFFD
 10926                           pclatu	equ	0xFFB
 10927                           pclath	equ	0xFFA
 10928                           tblptru	equ	0xFF8
 10929                           tblptrh	equ	0xFF7
 10930                           tblptrl	equ	0xFF6
 10931                           tablat	equ	0xFF5
 10932                           prodh	equ	0xFF4
 10933                           prodl	equ	0xFF3
 10934                           intcon	equ	0xFF2
 10935                           intcon2	equ	0xFF1
 10936                           intcon3	equ	0xFF0
 10937                           postinc0	equ	0xFEE
 10938                           fsr0h	equ	0xFEA
 10939                           fsr0l	equ	0xFE9
 10940                           wreg	equ	0xFE8
 10941                           fsr1h	equ	0xFE2
 10942                           fsr1l	equ	0xFE1
 10943                           indf2	equ	0xFDF
 10944                           postinc2	equ	0xFDE
 10945                           postdec2	equ	0xFDD
 10946                           fsr2h	equ	0xFDA
 10947                           fsr2l	equ	0xFD9
 10948                           status	equ	0xFD8
 10949                           
 10950 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 10951 ;; Defined at:
 10952 ;;		line 109 in file "mcc_generated_files/tmr0.c"
 10953 ;; Parameters:    Size  Location     Type
 10954 ;;		None
 10955 ;; Auto vars:     Size  Location     Type
 10956 ;;		None
 10957 ;; Return value:  Size  Location     Type
 10958 ;;                  1    wreg      void 
 10959 ;; Registers used:
 10960 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10961 ;; Tracked objects:
 10962 ;;		On entry : 0/0
 10963 ;;		On exit  : 0/0
 10964 ;;		Unchanged: 0/0
 10965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10966 ;;      Params:         0       0       0       0       0       0       0
 10967 ;;      Locals:         0       0       0       0       0       0       0
 10968 ;;      Temps:          1       0       0       0       0       0       0
 10969 ;;      Totals:         1       0       0       0       0       0       0
 10970 ;;Total ram usage:        1 bytes
 10971 ;; Hardware stack levels used:    1
 10972 ;; Hardware stack levels required when called:    1
 10973 ;; This function calls:
 10974 ;;		_SetRange
 10975 ;; This function is called by:
 10976 ;;		_TMR0_Initialize
 10977 ;;		_TMR0_ISR
 10978 ;; This function uses a non-reentrant model
 10979 ;;
 10980                           
 10981                           	psect	text43
 10982  005950                     __ptext43:
 10983                           	opt stack 0
 10984  005950                     _TMR0_DefaultInterruptHandler:
 10985                           	opt stack 22
 10986                           
 10987                           ;incstack = 0
 10988                           ;tmr0.c: 113: do { LATCbits.LATC7 = ~LATCbits.LATC7; } while(0);
 10989  005950  AE8B               	btfss	3979,7,c	;volatile
 10990  005952  D002               	goto	i2u706_40
 10991  005954  0E01               	movlw	1
 10992  005956  D001               	goto	i2u706_46
 10993  005958                     i2u706_40:
 10994  005958  0E00               	movlw	0
 10995  00595A                     i2u706_46:
 10996  00595A  0AFF               	xorlw	255
 10997  00595C  6E0C               	movwf	??_TMR0_DefaultInterruptHandler& (0+255),c
 10998  00595E  320C               	rrcf	??_TMR0_DefaultInterruptHandler,f,c
 10999  005960  320C               	rrcf	??_TMR0_DefaultInterruptHandler,f,c
 11000  005962  508B               	movf	3979,w,c	;volatile
 11001  005964  180C               	xorwf	??_TMR0_DefaultInterruptHandler,w,c
 11002  005966  0B7F               	andlw	-129
 11003  005968  180C               	xorwf	??_TMR0_DefaultInterruptHandler,w,c
 11004  00596A  6E8B               	movwf	3979,c	;volatile
 11005                           
 11006                           ;tmr0.c: 115: if (range < 5)
 11007  00596C  0E05               	movlw	5
 11008  00596E  605E               	cpfslt	_range,c
 11009  005970  0012               	return	
 11010                           
 11011                           ;tmr0.c: 116: {
 11012                           ;tmr0.c: 117: range += 1;
 11013  005972  2A5E               	incf	_range,f,c
 11014                           
 11015                           ;tmr0.c: 118: SetRange(range);
 11016  005974  505E               	movf	_range,w,c
 11017  005976  EC3B  F01E         	call	_SetRange
 11018  00597A  0012               	return	
 11019  00597C                     __end_of_TMR0_DefaultInterruptHandler:
 11020                           	opt stack 0
 11021                           tosu	equ	0xFFF
 11022                           tosh	equ	0xFFE
 11023                           tosl	equ	0xFFD
 11024                           pclatu	equ	0xFFB
 11025                           pclath	equ	0xFFA
 11026                           tblptru	equ	0xFF8
 11027                           tblptrh	equ	0xFF7
 11028                           tblptrl	equ	0xFF6
 11029                           tablat	equ	0xFF5
 11030                           prodh	equ	0xFF4
 11031                           prodl	equ	0xFF3
 11032                           intcon	equ	0xFF2
 11033                           intcon2	equ	0xFF1
 11034                           intcon3	equ	0xFF0
 11035                           postinc0	equ	0xFEE
 11036                           fsr0h	equ	0xFEA
 11037                           fsr0l	equ	0xFE9
 11038                           wreg	equ	0xFE8
 11039                           fsr1h	equ	0xFE2
 11040                           fsr1l	equ	0xFE1
 11041                           indf2	equ	0xFDF
 11042                           postinc2	equ	0xFDE
 11043                           postdec2	equ	0xFDD
 11044                           fsr2h	equ	0xFDA
 11045                           fsr2l	equ	0xFD9
 11046                           status	equ	0xFD8
 11047                           
 11048 ;; *************** function _INT1_ISR *****************
 11049 ;; Defined at:
 11050 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 11051 ;; Parameters:    Size  Location     Type
 11052 ;;		None
 11053 ;; Auto vars:     Size  Location     Type
 11054 ;;		None
 11055 ;; Return value:  Size  Location     Type
 11056 ;;                  1    wreg      void 
 11057 ;; Registers used:
 11058 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11059 ;; Tracked objects:
 11060 ;;		On entry : 0/0
 11061 ;;		On exit  : 0/0
 11062 ;;		Unchanged: 0/0
 11063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11064 ;;      Params:         0       0       0       0       0       0       0
 11065 ;;      Locals:         0       0       0       0       0       0       0
 11066 ;;      Temps:          0       0       0       0       0       0       0
 11067 ;;      Totals:         0       0       0       0       0       0       0
 11068 ;;Total ram usage:        0 bytes
 11069 ;; Hardware stack levels used:    1
 11070 ;; Hardware stack levels required when called:    1
 11071 ;; This function calls:
 11072 ;;		_SetRange
 11073 ;; This function is called by:
 11074 ;;		_INTERRUPT_InterruptManager
 11075 ;; This function uses a non-reentrant model
 11076 ;;
 11077                           
 11078                           	psect	text44
 11079  005A72                     __ptext44:
 11080                           	opt stack 0
 11081  005A72                     _INT1_ISR:
 11082                           	opt stack 23
 11083                           
 11084                           ;ext_int.c: 47: if (range < 5)
 11085                           
 11086                           ;incstack = 0
 11087  005A72  0E05               	movlw	5
 11088  005A74  605E               	cpfslt	_range,c
 11089  005A76  D002               	goto	i2l5703
 11090                           
 11091                           ;ext_int.c: 48: {
 11092                           ;ext_int.c: 49: range += 1;
 11093  005A78  2A5E               	incf	_range,f,c
 11094                           
 11095                           ;ext_int.c: 50: }
 11096  005A7A  D002               	goto	i2l5705
 11097  005A7C                     i2l5703:
 11098                           
 11099                           ;ext_int.c: 51: else
 11100                           ;ext_int.c: 52: {
 11101                           ;ext_int.c: 53: range -= 3;
 11102  005A7C  0E03               	movlw	3
 11103  005A7E  5E5E               	subwf	_range,f,c
 11104  005A80                     i2l5705:
 11105                           
 11106                           ;ext_int.c: 54: }
 11107                           ;ext_int.c: 56: SetRange(range);
 11108  005A80  505E               	movf	_range,w,c
 11109  005A82  EC3B  F01E         	call	_SetRange
 11110                           
 11111                           ;ext_int.c: 60: (INTCON3bits.INT1IF = 0);
 11112  005A86  90F0               	bcf	intcon3,0,c	;volatile
 11113  005A88  0012               	return		;funcret
 11114  005A8A                     __end_of_INT1_ISR:
 11115                           	opt stack 0
 11116                           tosu	equ	0xFFF
 11117                           tosh	equ	0xFFE
 11118                           tosl	equ	0xFFD
 11119                           pclatu	equ	0xFFB
 11120                           pclath	equ	0xFFA
 11121                           tblptru	equ	0xFF8
 11122                           tblptrh	equ	0xFF7
 11123                           tblptrl	equ	0xFF6
 11124                           tablat	equ	0xFF5
 11125                           prodh	equ	0xFF4
 11126                           prodl	equ	0xFF3
 11127                           intcon	equ	0xFF2
 11128                           intcon2	equ	0xFF1
 11129                           intcon3	equ	0xFF0
 11130                           postinc0	equ	0xFEE
 11131                           fsr0h	equ	0xFEA
 11132                           fsr0l	equ	0xFE9
 11133                           wreg	equ	0xFE8
 11134                           fsr1h	equ	0xFE2
 11135                           fsr1l	equ	0xFE1
 11136                           indf2	equ	0xFDF
 11137                           postinc2	equ	0xFDE
 11138                           postdec2	equ	0xFDD
 11139                           fsr2h	equ	0xFDA
 11140                           fsr2l	equ	0xFD9
 11141                           status	equ	0xFD8
 11142                           
 11143 ;; *************** function _INT0_ISR *****************
 11144 ;; Defined at:
 11145 ;;		line 92 in file "mcc_generated_files/ext_int.c"
 11146 ;; Parameters:    Size  Location     Type
 11147 ;;		None
 11148 ;; Auto vars:     Size  Location     Type
 11149 ;;		None
 11150 ;; Return value:  Size  Location     Type
 11151 ;;                  1    wreg      void 
 11152 ;; Registers used:
 11153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11154 ;; Tracked objects:
 11155 ;;		On entry : 0/0
 11156 ;;		On exit  : 0/0
 11157 ;;		Unchanged: 0/0
 11158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11159 ;;      Params:         0       0       0       0       0       0       0
 11160 ;;      Locals:         0       0       0       0       0       0       0
 11161 ;;      Temps:          0       0       0       0       0       0       0
 11162 ;;      Totals:         0       0       0       0       0       0       0
 11163 ;;Total ram usage:        0 bytes
 11164 ;; Hardware stack levels used:    1
 11165 ;; Hardware stack levels required when called:    5
 11166 ;; This function calls:
 11167 ;;		_SetRange
 11168 ;;		_TMR0_ReadTimer
 11169 ;;		_TMR0_Reload
 11170 ;;		_TMR0_StopTimer
 11171 ;;		___lwtoft
 11172 ;;		_printf
 11173 ;;		i2_TMR0_StartTimer
 11174 ;;		i2___ftadd
 11175 ;;		i2___ftdiv
 11176 ;;		i2___ftmul
 11177 ;;		i2___wmul
 11178 ;; This function is called by:
 11179 ;;		_INTERRUPT_InterruptManager
 11180 ;; This function uses a non-reentrant model
 11181 ;;
 11182                           
 11183                           	psect	text45
 11184  0049FA                     __ptext45:
 11185                           	opt stack 0
 11186  0049FA                     _INT0_ISR:
 11187                           	opt stack 19
 11188                           
 11189                           ;ext_int.c: 95: TMR0_StopTimer();
 11190                           
 11191                           ;incstack = 0
 11192  0049FA  EC94  F02D         	call	_TMR0_StopTimer	;wreg free
 11193                           
 11194                           ;ext_int.c: 96: reading = TMR0_ReadTimer();
 11195  0049FE  ECB7  F02B         	call	_TMR0_ReadTimer	;wreg free
 11196  004A02  C001  F0B7         	movff	?_TMR0_ReadTimer,_reading
 11197  004A06  C002  F0B8         	movff	?_TMR0_ReadTimer+1,_reading+1
 11198                           
 11199                           ;ext_int.c: 99: do { LATCbits.LATC7 = 1; } while(0);
 11200  004A0A  8E8B               	bsf	3979,7,c	;volatile
 11201                           
 11202                           ;ext_int.c: 103: result = cal_current[range - 1] * ((float)reading - 27) / 3.01004;
 11203  004A0C  0E00               	movlw	0
 11204  004A0E  6E12               	movwf	i2___wmul@multiplicand+1,c
 11205  004A10  0E03               	movlw	3
 11206  004A12  6E11               	movwf	i2___wmul@multiplicand,c
 11207  004A14  0EFF               	movlw	255
 11208  004A16  245E               	addwf	_range,w,c
 11209  004A18  6E0F               	movwf	i2___wmul@multiplier,c
 11210  004A1A  6A10               	clrf	i2___wmul@multiplier+1,c
 11211  004A1C  0EFF               	movlw	255
 11212  004A1E  2210               	addwfc	i2___wmul@multiplier+1,f,c
 11213  004A20  ECE6  F02C         	call	i2___wmul	;wreg free
 11214  004A24  0E77               	movlw	low _cal_current
 11215  004A26  240F               	addwf	?i2___wmul,w,c
 11216  004A28  6EF6               	movwf	tblptrl,c
 11217  004A2A  0E06               	movlw	high _cal_current
 11218  004A2C  2010               	addwfc	?i2___wmul+1,w,c
 11219  004A2E  6EF7               	movwf	tblptrh,c
 11220  004A30                     	if	0	;There are less than 3 active tblptr bytes
 11221  004A30                     	endif
 11222  004A30  0009               	tblrd		*+
 11223  004A32  CFF5 F024          	movff	tablat,i2___ftmul@f2
 11224  004A36  0009               	tblrd		*+
 11225  004A38  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 11226  004A3C  000A               	tblrd		*-
 11227  004A3E  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 11228  004A42  0E00               	movlw	0
 11229  004A44  6E18               	movwf	i2___ftadd@f2,c
 11230  004A46  0ED8               	movlw	216
 11231  004A48  6E19               	movwf	i2___ftadd@f2+1,c
 11232  004A4A  0EC1               	movlw	193
 11233  004A4C  6E1A               	movwf	i2___ftadd@f2+2,c
 11234  004A4E  C0B7  F009         	movff	_reading,___lwtoft@c
 11235  004A52  C0B8  F00A         	movff	_reading+1,___lwtoft@c+1
 11236  004A56  EC0B  F02D         	call	___lwtoft	;wreg free
 11237  004A5A  C009  F015         	movff	?___lwtoft,i2___ftadd@f1
 11238  004A5E  C00A  F016         	movff	?___lwtoft+1,i2___ftadd@f1+1
 11239  004A62  C00B  F017         	movff	?___lwtoft+2,i2___ftadd@f1+2
 11240  004A66  EC65  F01D         	call	i2___ftadd	;wreg free
 11241  004A6A  C015  F021         	movff	?i2___ftadd,i2___ftmul@f1
 11242  004A6E  C016  F022         	movff	?i2___ftadd+1,i2___ftmul@f1+1
 11243  004A72  C017  F023         	movff	?i2___ftadd+2,i2___ftmul@f1+2
 11244  004A76  EC7D  F025         	call	i2___ftmul	;wreg free
 11245  004A7A  C021  F030         	movff	?i2___ftmul,i2___ftdiv@f1
 11246  004A7E  C022  F031         	movff	?i2___ftmul+1,i2___ftdiv@f1+1
 11247  004A82  C023  F032         	movff	?i2___ftmul+2,i2___ftdiv@f1+2
 11248  004A86  0EA4               	movlw	164
 11249  004A88  6E33               	movwf	i2___ftdiv@f2,c
 11250  004A8A  0E40               	movlw	64
 11251  004A8C  6E34               	movwf	i2___ftdiv@f2+1,c
 11252  004A8E  0E40               	movlw	64
 11253  004A90  6E35               	movwf	i2___ftdiv@f2+2,c
 11254  004A92  EC71  F026         	call	i2___ftdiv	;wreg free
 11255  004A96  C030  F058         	movff	?i2___ftdiv,_result
 11256  004A9A  C031  F059         	movff	?i2___ftdiv+1,_result+1
 11257  004A9E  C032  F05A         	movff	?i2___ftdiv+2,_result+2
 11258                           
 11259                           ;ext_int.c: 106: printf("Capacitance: %0.2f pF (Count: %u) - Range: %d\r\n", result, rea
      +                          ding, range);
 11260  004AA2  0E90               	movlw	low STR_1
 11261  004AA4  0100               	movlb	0	; () banked
 11262  004AA6  6F77               	movwf	printf@f& (0+255),b
 11263  004AA8  0E06               	movlw	high STR_1
 11264  004AAA  0100               	movlb	0	; () banked
 11265  004AAC  6F78               	movwf	(printf@f+1)& (0+255),b
 11266  004AAE  C058  F079         	movff	_result,?_printf+2
 11267  004AB2  C059  F07A         	movff	_result+1,?_printf+3
 11268  004AB6  C05A  F07B         	movff	_result+2,?_printf+4
 11269  004ABA  C0B7  F07C         	movff	_reading,?_printf+5
 11270  004ABE  C0B8  F07D         	movff	_reading+1,?_printf+6
 11271  004AC2  C05E  F07E         	movff	_range,?_printf+7
 11272  004AC6  0100               	movlb	0	; () banked
 11273  004AC8  6B7F               	clrf	(?_printf+8)& (0+255),b
 11274  004ACA  EC2E  F02C         	call	_printf	;wreg free
 11275                           
 11276                           ;ext_int.c: 108: if (reading < 1000 && range > 2)
 11277  004ACE  0EE8               	movlw	232
 11278  004AD0  0100               	movlb	0	; () banked
 11279  004AD2  5DB7               	subwf	_reading& (0+255),w,b
 11280  004AD4  0E03               	movlw	3
 11281  004AD6  0100               	movlb	0	; () banked
 11282  004AD8  59B8               	subwfb	(_reading+1)& (0+255),w,b
 11283  004ADA  B0D8               	btfsc	status,0,c
 11284  004ADC  D007               	goto	i2l9843
 11285                           
 11286                           ; BSR set to: 0
 11287  004ADE  0E02               	movlw	2
 11288  004AE0  645E               	cpfsgt	_range,c
 11289  004AE2  D004               	goto	i2l9843
 11290                           
 11291                           ; BSR set to: 0
 11292                           ;ext_int.c: 109: {
 11293                           ;ext_int.c: 110: range -= 1;
 11294  004AE4  065E               	decf	_range,f,c
 11295                           
 11296                           ; BSR set to: 0
 11297                           ;ext_int.c: 111: SetRange(range);
 11298  004AE6  505E               	movf	_range,w,c
 11299  004AE8  EC3B  F01E         	call	_SetRange
 11300  004AEC                     i2l9843:
 11301                           
 11302                           ;ext_int.c: 112: }
 11303                           ;ext_int.c: 115: TMR0_Reload();
 11304  004AEC  EC89  F02D         	call	_TMR0_Reload	;wreg free
 11305                           
 11306                           ;ext_int.c: 118: do { LATCbits.LATC7 = 0; } while(0);
 11307  004AF0  9E8B               	bcf	3979,7,c	;volatile
 11308                           
 11309                           ;ext_int.c: 119: TMR0_StartTimer();
 11310  004AF2  EC92  F02D         	call	i2_TMR0_StartTimer	;wreg free
 11311                           
 11312                           ;ext_int.c: 122: (INTCONbits.INT0IF = 0);
 11313  004AF6  92F2               	bcf	intcon,1,c	;volatile
 11314  004AF8  0012               	return		;funcret
 11315  004AFA                     __end_of_INT0_ISR:
 11316                           	opt stack 0
 11317                           tosu	equ	0xFFF
 11318                           tosh	equ	0xFFE
 11319                           tosl	equ	0xFFD
 11320                           pclatu	equ	0xFFB
 11321                           pclath	equ	0xFFA
 11322                           tblptru	equ	0xFF8
 11323                           tblptrh	equ	0xFF7
 11324                           tblptrl	equ	0xFF6
 11325                           tablat	equ	0xFF5
 11326                           prodh	equ	0xFF4
 11327                           prodl	equ	0xFF3
 11328                           intcon	equ	0xFF2
 11329                           intcon2	equ	0xFF1
 11330                           intcon3	equ	0xFF0
 11331                           postinc0	equ	0xFEE
 11332                           fsr0h	equ	0xFEA
 11333                           fsr0l	equ	0xFE9
 11334                           wreg	equ	0xFE8
 11335                           fsr1h	equ	0xFE2
 11336                           fsr1l	equ	0xFE1
 11337                           indf2	equ	0xFDF
 11338                           postinc2	equ	0xFDE
 11339                           postdec2	equ	0xFDD
 11340                           fsr2h	equ	0xFDA
 11341                           fsr2l	equ	0xFD9
 11342                           status	equ	0xFD8
 11343                           
 11344 ;; *************** function i2___ftdiv *****************
 11345 ;; Defined at:
 11346 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
 11347 ;; Parameters:    Size  Location     Type
 11348 ;;  f1              3   47[COMRAM] float 
 11349 ;;  f2              3   50[COMRAM] float 
 11350 ;; Auto vars:     Size  Location     Type
 11351 ;;  __ftdiv         3   57[COMRAM] float 
 11352 ;;  __ftdiv         1   61[COMRAM] unsigned char 
 11353 ;;  __ftdiv         1   60[COMRAM] unsigned char 
 11354 ;;  __ftdiv         1   56[COMRAM] unsigned char 
 11355 ;; Return value:  Size  Location     Type
 11356 ;;                  3   47[COMRAM] float 
 11357 ;; Registers used:
 11358 ;;		wreg, status,2, status,0, cstack
 11359 ;; Tracked objects:
 11360 ;;		On entry : 0/0
 11361 ;;		On exit  : 0/0
 11362 ;;		Unchanged: 0/0
 11363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11364 ;;      Params:         6       0       0       0       0       0       0
 11365 ;;      Locals:         6       0       0       0       0       0       0
 11366 ;;      Temps:          3       0       0       0       0       0       0
 11367 ;;      Totals:        15       0       0       0       0       0       0
 11368 ;;Total ram usage:       15 bytes
 11369 ;; Hardware stack levels used:    1
 11370 ;; Hardware stack levels required when called:    1
 11371 ;; This function calls:
 11372 ;;		i2___ftpack
 11373 ;; This function is called by:
 11374 ;;		_INT0_ISR
 11375 ;; This function uses a non-reentrant model
 11376 ;;
 11377                           
 11378                           	psect	text46
 11379  004CE2                     __ptext46:
 11380                           	opt stack 0
 11381  004CE2                     i2___ftdiv:
 11382                           	opt stack 22
 11383                           
 11384                           ;incstack = 0
 11385  004CE2  C032  F036         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 11386  004CE6  6A37               	clrf	(??i2___ftdiv+1)& (0+255),c
 11387  004CE8  6A38               	clrf	(??i2___ftdiv+2)& (0+255),c
 11388  004CEA  3431               	rlcf	i2___ftdiv@f1+1,w,c
 11389  004CEC  3636               	rlcf	??i2___ftdiv& (0+255),f,c
 11390  004CEE  E301               	bnc	u798_41
 11391  004CF0  8037               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 11392  004CF2                     u798_41:
 11393  004CF2  5036               	movf	??i2___ftdiv,w,c
 11394  004CF4  6E3D               	movwf	i2___ftdiv@exp,c
 11395  004CF6  503D               	movf	i2___ftdiv@exp,w,c
 11396  004CF8  A4D8               	btfss	status,2,c
 11397  004CFA  D007               	goto	i2l5659
 11398  004CFC  0E00               	movlw	0
 11399  004CFE  6E30               	movwf	?i2___ftdiv,c
 11400  004D00  0E00               	movlw	0
 11401  004D02  6E31               	movwf	?i2___ftdiv+1,c
 11402  004D04  0E00               	movlw	0
 11403  004D06  6E32               	movwf	?i2___ftdiv+2,c
 11404  004D08  0012               	return	
 11405  004D0A                     i2l5659:
 11406  004D0A  C035  F036         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 11407  004D0E  6A37               	clrf	(??i2___ftdiv+1)& (0+255),c
 11408  004D10  6A38               	clrf	(??i2___ftdiv+2)& (0+255),c
 11409  004D12  3434               	rlcf	i2___ftdiv@f2+1,w,c
 11410  004D14  3636               	rlcf	??i2___ftdiv& (0+255),f,c
 11411  004D16  E301               	bnc	u800_41
 11412  004D18  8037               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 11413  004D1A                     u800_41:
 11414  004D1A  5036               	movf	??i2___ftdiv,w,c
 11415  004D1C  6E3E               	movwf	i2___ftdiv@sign,c
 11416  004D1E  503E               	movf	i2___ftdiv@sign,w,c
 11417  004D20  A4D8               	btfss	status,2,c
 11418  004D22  D007               	goto	i2l5665
 11419  004D24  0E00               	movlw	0
 11420  004D26  6E30               	movwf	?i2___ftdiv,c
 11421  004D28  0E00               	movlw	0
 11422  004D2A  6E31               	movwf	?i2___ftdiv+1,c
 11423  004D2C  0E00               	movlw	0
 11424  004D2E  6E32               	movwf	?i2___ftdiv+2,c
 11425  004D30  0012               	return	
 11426  004D32                     i2l5665:
 11427  004D32  0E00               	movlw	0
 11428  004D34  6E3A               	movwf	i2___ftdiv@f3,c
 11429  004D36  0E00               	movlw	0
 11430  004D38  6E3B               	movwf	i2___ftdiv@f3+1,c
 11431  004D3A  0E00               	movlw	0
 11432  004D3C  6E3C               	movwf	i2___ftdiv@f3+2,c
 11433  004D3E  503E               	movf	i2___ftdiv@sign,w,c
 11434  004D40  0F89               	addlw	137
 11435  004D42  5E3D               	subwf	i2___ftdiv@exp,f,c
 11436  004D44  C032  F03E         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 11437  004D48  5035               	movf	i2___ftdiv@f2+2,w,c
 11438  004D4A  1A3E               	xorwf	i2___ftdiv@sign,f,c
 11439  004D4C  0E80               	movlw	128
 11440  004D4E  163E               	andwf	i2___ftdiv@sign,f,c
 11441  004D50  8E31               	bsf	i2___ftdiv@f1+1,7,c
 11442  004D52  0EFF               	movlw	255
 11443  004D54  1630               	andwf	i2___ftdiv@f1,f,c
 11444  004D56  0EFF               	movlw	255
 11445  004D58  1631               	andwf	i2___ftdiv@f1+1,f,c
 11446  004D5A  0E00               	movlw	0
 11447  004D5C  1632               	andwf	i2___ftdiv@f1+2,f,c
 11448  004D5E  8E34               	bsf	i2___ftdiv@f2+1,7,c
 11449  004D60  0EFF               	movlw	255
 11450  004D62  1633               	andwf	i2___ftdiv@f2,f,c
 11451  004D64  0EFF               	movlw	255
 11452  004D66  1634               	andwf	i2___ftdiv@f2+1,f,c
 11453  004D68  0E00               	movlw	0
 11454  004D6A  1635               	andwf	i2___ftdiv@f2+2,f,c
 11455  004D6C  0E18               	movlw	24
 11456  004D6E  6E39               	movwf	i2___ftdiv@cntr,c
 11457  004D70                     i2l5685:
 11458  004D70  90D8               	bcf	status,0,c
 11459  004D72  363A               	rlcf	i2___ftdiv@f3,f,c
 11460  004D74  363B               	rlcf	i2___ftdiv@f3+1,f,c
 11461  004D76  363C               	rlcf	i2___ftdiv@f3+2,f,c
 11462  004D78  5033               	movf	i2___ftdiv@f2,w,c
 11463  004D7A  5C30               	subwf	i2___ftdiv@f1,w,c
 11464  004D7C  5034               	movf	i2___ftdiv@f2+1,w,c
 11465  004D7E  5831               	subwfb	i2___ftdiv@f1+1,w,c
 11466  004D80  5035               	movf	i2___ftdiv@f2+2,w,c
 11467  004D82  5832               	subwfb	i2___ftdiv@f1+2,w,c
 11468  004D84  A0D8               	btfss	status,0,c
 11469  004D86  D007               	goto	i2l830
 11470  004D88  5033               	movf	i2___ftdiv@f2,w,c
 11471  004D8A  5E30               	subwf	i2___ftdiv@f1,f,c
 11472  004D8C  5034               	movf	i2___ftdiv@f2+1,w,c
 11473  004D8E  5A31               	subwfb	i2___ftdiv@f1+1,f,c
 11474  004D90  5035               	movf	i2___ftdiv@f2+2,w,c
 11475  004D92  5A32               	subwfb	i2___ftdiv@f1+2,f,c
 11476  004D94  803A               	bsf	i2___ftdiv@f3,0,c
 11477  004D96                     i2l830:
 11478  004D96  90D8               	bcf	status,0,c
 11479  004D98  3630               	rlcf	i2___ftdiv@f1,f,c
 11480  004D9A  3631               	rlcf	i2___ftdiv@f1+1,f,c
 11481  004D9C  3632               	rlcf	i2___ftdiv@f1+2,f,c
 11482  004D9E  2E39               	decfsz	i2___ftdiv@cntr,f,c
 11483  004DA0  D7E7               	goto	i2l5685
 11484  004DA2  C03A  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 11485  004DA6  C03B  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 11486  004DAA  C03C  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 11487  004DAE  C03D  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 11488  004DB2  C03E  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 11489  004DB6  EC05  F028         	call	i2___ftpack	;wreg free
 11490  004DBA  C001  F030         	movff	?i2___ftpack,?i2___ftdiv
 11491  004DBE  C002  F031         	movff	?i2___ftpack+1,?i2___ftdiv+1
 11492  004DC2  C003  F032         	movff	?i2___ftpack+2,?i2___ftdiv+2
 11493  004DC6  0012               	return	
 11494  004DC8                     __end_ofi2___ftdiv:
 11495                           	opt stack 0
 11496                           tosu	equ	0xFFF
 11497                           tosh	equ	0xFFE
 11498                           tosl	equ	0xFFD
 11499                           pclatu	equ	0xFFB
 11500                           pclath	equ	0xFFA
 11501                           tblptru	equ	0xFF8
 11502                           tblptrh	equ	0xFF7
 11503                           tblptrl	equ	0xFF6
 11504                           tablat	equ	0xFF5
 11505                           prodh	equ	0xFF4
 11506                           prodl	equ	0xFF3
 11507                           intcon	equ	0xFF2
 11508                           intcon2	equ	0xFF1
 11509                           intcon3	equ	0xFF0
 11510                           postinc0	equ	0xFEE
 11511                           fsr0h	equ	0xFEA
 11512                           fsr0l	equ	0xFE9
 11513                           wreg	equ	0xFE8
 11514                           fsr1h	equ	0xFE2
 11515                           fsr1l	equ	0xFE1
 11516                           indf2	equ	0xFDF
 11517                           postinc2	equ	0xFDE
 11518                           postdec2	equ	0xFDD
 11519                           fsr2h	equ	0xFDA
 11520                           fsr2l	equ	0xFD9
 11521                           status	equ	0xFD8
 11522                           
 11523 ;; *************** function i2_TMR0_StartTimer *****************
 11524 ;; Defined at:
 11525 ;;		line 47 in file "mcc_generated_files/tmr0.c"
 11526 ;; Parameters:    Size  Location     Type
 11527 ;;		None
 11528 ;; Auto vars:     Size  Location     Type
 11529 ;;		None
 11530 ;; Return value:  Size  Location     Type
 11531 ;;                  1    wreg      void 
 11532 ;; Registers used:
 11533 ;;		None
 11534 ;; Tracked objects:
 11535 ;;		On entry : 0/0
 11536 ;;		On exit  : 0/0
 11537 ;;		Unchanged: 0/0
 11538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11539 ;;      Params:         0       0       0       0       0       0       0
 11540 ;;      Locals:         0       0       0       0       0       0       0
 11541 ;;      Temps:          0       0       0       0       0       0       0
 11542 ;;      Totals:         0       0       0       0       0       0       0
 11543 ;;Total ram usage:        0 bytes
 11544 ;; Hardware stack levels used:    1
 11545 ;; This function calls:
 11546 ;;		Nothing
 11547 ;; This function is called by:
 11548 ;;		_INT0_ISR
 11549 ;; This function uses a non-reentrant model
 11550 ;;
 11551                           
 11552                           	psect	text47
 11553  005B24                     __ptext47:
 11554                           	opt stack 0
 11555  005B24                     i2_TMR0_StartTimer:
 11556                           	opt stack 23
 11557                           
 11558                           ;tmr0.c: 50: T0CONbits.TMR0ON = 1;
 11559                           
 11560                           ;incstack = 0
 11561  005B24  8ED5               	bsf	4053,7,c	;volatile
 11562  005B26  0012               	return		;funcret
 11563  005B28                     __end_ofi2_TMR0_StartTimer:
 11564                           	opt stack 0
 11565                           tosu	equ	0xFFF
 11566                           tosh	equ	0xFFE
 11567                           tosl	equ	0xFFD
 11568                           pclatu	equ	0xFFB
 11569                           pclath	equ	0xFFA
 11570                           tblptru	equ	0xFF8
 11571                           tblptrh	equ	0xFF7
 11572                           tblptrl	equ	0xFF6
 11573                           tablat	equ	0xFF5
 11574                           prodh	equ	0xFF4
 11575                           prodl	equ	0xFF3
 11576                           intcon	equ	0xFF2
 11577                           intcon2	equ	0xFF1
 11578                           intcon3	equ	0xFF0
 11579                           postinc0	equ	0xFEE
 11580                           fsr0h	equ	0xFEA
 11581                           fsr0l	equ	0xFE9
 11582                           wreg	equ	0xFE8
 11583                           fsr1h	equ	0xFE2
 11584                           fsr1l	equ	0xFE1
 11585                           indf2	equ	0xFDF
 11586                           postinc2	equ	0xFDE
 11587                           postdec2	equ	0xFDD
 11588                           fsr2h	equ	0xFDA
 11589                           fsr2l	equ	0xFD9
 11590                           status	equ	0xFD8
 11591                           
 11592 ;; *************** function _printf *****************
 11593 ;; Defined at:
 11594 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\printf.c"
 11595 ;; Parameters:    Size  Location     Type
 11596 ;;  f               2   23[BANK0 ] PTR const unsigned char 
 11597 ;;		 -> STR_1(48), 
 11598 ;; Auto vars:     Size  Location     Type
 11599 ;;  pb              4   83[COMRAM] struct __prbuf
 11600 ;;  ap              2   81[COMRAM] PTR void [1]
 11601 ;;		 -> ?_sprintf(2), ?_printf(2), 
 11602 ;; Return value:  Size  Location     Type
 11603 ;;                  2   23[BANK0 ] int 
 11604 ;; Registers used:
 11605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11606 ;; Tracked objects:
 11607 ;;		On entry : 0/0
 11608 ;;		On exit  : 0/0
 11609 ;;		Unchanged: 0/0
 11610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11611 ;;      Params:         0       9       0       0       0       0       0
 11612 ;;      Locals:         6       0       0       0       0       0       0
 11613 ;;      Temps:          0       0       0       0       0       0       0
 11614 ;;      Totals:         6       9       0       0       0       0       0
 11615 ;;Total ram usage:       15 bytes
 11616 ;; Hardware stack levels used:    1
 11617 ;; Hardware stack levels required when called:    4
 11618 ;; This function calls:
 11619 ;;		i2__doprnt
 11620 ;; This function is called by:
 11621 ;;		_INT0_ISR
 11622 ;; This function uses a non-reentrant model
 11623 ;;
 11624                           
 11625                           	psect	text48
 11626  00585C                     __ptext48:
 11627                           	opt stack 0
 11628  00585C                     _printf:
 11629                           	opt stack 19
 11630                           
 11631                           ;incstack = 0
 11632  00585C  0E00               	movlw	0
 11633  00585E  6E54               	movwf	printf@pb,c
 11634  005860  0E00               	movlw	0
 11635  005862  6E55               	movwf	printf@pb+1,c
 11636  005864  0E08               	movlw	low i2_putch
 11637  005866  6E56               	movwf	printf@pb+2,c
 11638  005868  0E5B               	movlw	high i2_putch
 11639  00586A  6E57               	movwf	printf@pb+3,c
 11640  00586C  0E79               	movlw	low (?_printf+2)
 11641  00586E  6E52               	movwf	printf@ap,c
 11642  005870  0E00               	movlw	high (?_printf+2)
 11643  005872  6E53               	movwf	printf@ap+1,c
 11644                           
 11645                           ;	Return value of _printf is never used
 11646  005874  0E54               	movlw	low printf@pb
 11647  005876  6E46               	movwf	i2__doprnt@pb,c
 11648  005878  0E00               	movlw	high printf@pb
 11649  00587A  6E47               	movwf	i2__doprnt@pb+1,c
 11650  00587C  C077  F048         	movff	printf@f,i2__doprnt@f
 11651  005880  C078  F049         	movff	printf@f+1,i2__doprnt@f+1
 11652  005884  0E52               	movlw	low printf@ap
 11653  005886  6E4A               	movwf	i2__doprnt@ap,c
 11654  005888  0E00               	movlw	high printf@ap
 11655  00588A  6E4B               	movwf	i2__doprnt@ap+1,c
 11656  00588C  ECAD  F00C         	call	i2__doprnt	;wreg free
 11657  005890  0012               	return	
 11658  005892                     __end_of_printf:
 11659                           	opt stack 0
 11660                           tosu	equ	0xFFF
 11661                           tosh	equ	0xFFE
 11662                           tosl	equ	0xFFD
 11663                           pclatu	equ	0xFFB
 11664                           pclath	equ	0xFFA
 11665                           tblptru	equ	0xFF8
 11666                           tblptrh	equ	0xFF7
 11667                           tblptrl	equ	0xFF6
 11668                           tablat	equ	0xFF5
 11669                           prodh	equ	0xFF4
 11670                           prodl	equ	0xFF3
 11671                           intcon	equ	0xFF2
 11672                           intcon2	equ	0xFF1
 11673                           intcon3	equ	0xFF0
 11674                           postinc0	equ	0xFEE
 11675                           fsr0h	equ	0xFEA
 11676                           fsr0l	equ	0xFE9
 11677                           wreg	equ	0xFE8
 11678                           fsr1h	equ	0xFE2
 11679                           fsr1l	equ	0xFE1
 11680                           indf2	equ	0xFDF
 11681                           postinc2	equ	0xFDE
 11682                           postdec2	equ	0xFDD
 11683                           fsr2h	equ	0xFDA
 11684                           fsr2l	equ	0xFD9
 11685                           status	equ	0xFD8
 11686                           
 11687 ;; *************** function i2__doprnt *****************
 11688 ;; Defined at:
 11689 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 11690 ;; Parameters:    Size  Location     Type
 11691 ;;  pb              2   69[COMRAM] PTR struct __prbuf
 11692 ;;		 -> sprintf@pb(4), printf@pb(4), 
 11693 ;;  f               2   71[COMRAM] PTR const unsigned char 
 11694 ;;		 -> STR_5(11), STR_4(11), STR_3(11), STR_2(11), 
 11695 ;;		 -> STR_1(48), 
 11696 ;;  ap              2   73[COMRAM] PTR PTR void 
 11697 ;;		 -> sprintf@ap(2), printf@ap(2), 
 11698 ;; Auto vars:     Size  Location     Type
 11699 ;;  _doprnt         4    9[BANK0 ] struct .
 11700 ;;  _doprnt         4    5[BANK0 ] unsigned long 
 11701 ;;  _doprnt         3   13[BANK0 ] unsigned long 
 11702 ;;  _doprnt         3    0        PTR const unsigned char 
 11703 ;;  _doprnt         2   20[BANK0 ] int 
 11704 ;;  _doprnt         2   18[BANK0 ] unsigned short 
 11705 ;;  _doprnt         2   16[BANK0 ] int 
 11706 ;;  _doprnt         2    3[BANK0 ] int 
 11707 ;;  _doprnt         2    0        unsigned int 
 11708 ;;  _doprnt         1   22[BANK0 ] char 
 11709 ;;  _doprnt         1    0        unsigned char 
 11710 ;; Return value:  Size  Location     Type
 11711 ;;                  2   69[COMRAM] int 
 11712 ;; Registers used:
 11713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11714 ;; Tracked objects:
 11715 ;;		On entry : 0/0
 11716 ;;		On exit  : 0/0
 11717 ;;		Unchanged: 0/0
 11718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11719 ;;      Params:         6       0       0       0       0       0       0
 11720 ;;      Locals:         0      23       0       0       0       0       0
 11721 ;;      Temps:          6       0       0       0       0       0       0
 11722 ;;      Totals:        12      23       0       0       0       0       0
 11723 ;;Total ram usage:       35 bytes
 11724 ;; Hardware stack levels used:    1
 11725 ;; Hardware stack levels required when called:    3
 11726 ;; This function calls:
 11727 ;;		Absolute function
 11728 ;;		i2___awdiv
 11729 ;;		i2___ftadd
 11730 ;;		i2___ftge
 11731 ;;		i2___ftmul
 11732 ;;		i2___ftneg
 11733 ;;		i2___ftsub
 11734 ;;		i2___fttol
 11735 ;;		i2___lldiv
 11736 ;;		i2___llmod
 11737 ;;		i2___lltoft
 11738 ;;		i2___wmul
 11739 ;;		i2__div_to_l_
 11740 ;;		i2__tdiv_to_l_
 11741 ;;		i2_fround
 11742 ;;		i2_isdigit
 11743 ;;		i2_putch
 11744 ;;		i2_scale
 11745 ;; This function is called by:
 11746 ;;		_printf
 11747 ;; This function uses a non-reentrant model
 11748 ;;
 11749                           
 11750                           	psect	text49
 11751  00195A                     __ptext49:
 11752                           	opt stack 0
 11753  00195A                     i2__doprnt:
 11754                           	opt stack 19
 11755                           
 11756                           ;doprnt.c: 499: signed char c;
 11757                           ;doprnt.c: 501: int width;
 11758                           ;doprnt.c: 504: int prec;
 11759                           ;doprnt.c: 508: unsigned short flag;
 11760                           ;doprnt.c: 515: char d;
 11761                           ;doprnt.c: 516: double fval;
 11762                           ;doprnt.c: 517: int exp;
 11763                           ;doprnt.c: 523: union {
 11764                           ;doprnt.c: 524: unsigned long vd;
 11765                           ;doprnt.c: 525: double integ;
 11766                           ;doprnt.c: 526: } tmpval;
 11767                           ;doprnt.c: 528: unsigned long val;
 11768                           ;doprnt.c: 529: unsigned len;
 11769                           ;doprnt.c: 530: const char * cp;
 11770                           ;doprnt.c: 536: while(c = *f++) {
 11771                           
 11772                           ;incstack = 0
 11773  00195A  EF56  F015         	goto	i2l9417
 11774  00195E                     i2l9029:
 11775                           
 11776                           ;doprnt.c: 538: if(c != '%')
 11777  00195E  0E25               	movlw	37
 11778  001960  0100               	movlb	0	; () banked
 11779  001962  1976               	xorwf	i2__doprnt@c& (0+255),w,b
 11780  001964  B4D8               	btfsc	status,2,c
 11781  001966  D036               	goto	i2l9039
 11782                           
 11783                           ; BSR set to: 0
 11784                           ;doprnt.c: 540: {
 11785                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 11786  001968  EE20 F002          	lfsr	2,2
 11787  00196C  5046               	movf	i2__doprnt@pb,w,c
 11788  00196E  26D9               	addwf	fsr2l,f,c
 11789  001970  5047               	movf	i2__doprnt@pb+1,w,c
 11790  001972  22DA               	addwfc	fsr2h,f,c
 11791  001974  50DE               	movf	postinc2,w,c
 11792  001976  10DE               	iorwf	postinc2,w,c
 11793  001978  B4D8               	btfsc	status,2,c
 11794  00197A  D015               	goto	i2l9035
 11795                           
 11796                           ; BSR set to: 0
 11797  00197C  EE20 F002          	lfsr	2,2
 11798  001980  5046               	movf	i2__doprnt@pb,w,c
 11799  001982  26D9               	addwf	fsr2l,f,c
 11800  001984  5047               	movf	i2__doprnt@pb+1,w,c
 11801  001986  22DA               	addwfc	fsr2h,f,c
 11802  001988  D802               	call	i2u1483_48
 11803  00198A  EF56  F015         	goto	i2l9417
 11804  00198E                     i2u1483_48:
 11805  00198E  0005               	push	
 11806  001990  6EFA               	movwf	pclath,c
 11807  001992  50DE               	movf	postinc2,w,c
 11808  001994  6EFD               	movwf	tosl,c
 11809  001996  50DE               	movf	postinc2,w,c
 11810  001998  6EFE               	movwf	tosh,c
 11811  00199A  50F8               	movf	tblptru,w,c
 11812  00199C  6EFF               	movwf	tosu,c
 11813  00199E  50FA               	movf	pclath,w,c
 11814  0019A0  0100               	movlb	0	; () banked
 11815  0019A2  5176               	movf	i2__doprnt@c& (0+255),w,b
 11816  0019A4  0012               	return		;indir
 11817  0019A6                     i2l9035:
 11818  0019A6  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 11819  0019AA  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 11820  0019AE  CFDE F04C          	movff	postinc2,??i2__doprnt
 11821  0019B2  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 11822  0019B6  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 11823  0019BA  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 11824  0019BE  C076  FFDF         	movff	i2__doprnt@c,indf2
 11825  0019C2  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 11826  0019C6  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 11827  0019CA  2ADE               	incf	postinc2,f,c
 11828  0019CC  0E00               	movlw	0
 11829  0019CE  22DD               	addwfc	postdec2,f,c
 11830                           
 11831                           ;doprnt.c: 542: continue;
 11832  0019D0  EF56  F015         	goto	i2l9417
 11833  0019D4                     i2l9039:
 11834                           
 11835                           ;doprnt.c: 543: }
 11836                           ;doprnt.c: 546: width = 0;
 11837  0019D4  0E00               	movlw	0
 11838  0019D6  0100               	movlb	0	; () banked
 11839  0019D8  6F71               	movwf	(i2__doprnt@width+1)& (0+255),b
 11840  0019DA  0E00               	movlw	0
 11841  0019DC  6F70               	movwf	i2__doprnt@width& (0+255),b
 11842                           
 11843                           ;doprnt.c: 548: flag = 0;
 11844  0019DE  0E00               	movlw	0
 11845  0019E0  0100               	movlb	0	; () banked
 11846  0019E2  6F73               	movwf	(i2__doprnt@flag+1)& (0+255),b
 11847  0019E4  0E00               	movlw	0
 11848  0019E6  6F72               	movwf	i2__doprnt@flag& (0+255),b
 11849                           
 11850                           ; BSR set to: 0
 11851                           ;doprnt.c: 551: switch(*f) {
 11852                           
 11853                           ;doprnt.c: 550: for(;;) {
 11854  0019E8  D004               	goto	i2l9045
 11855  0019EA                     i2l9041:
 11856                           
 11857                           ;doprnt.c: 580: flag |= 0x04;
 11858  0019EA  0100               	movlb	0	; () banked
 11859  0019EC  8572               	bsf	i2__doprnt@flag& (0+255),2,b
 11860                           
 11861                           ;doprnt.c: 581: f++;
 11862  0019EE  4A48               	infsnz	i2__doprnt@f,f,c
 11863  0019F0  2A49               	incf	i2__doprnt@f+1,f,c
 11864  0019F2                     i2l9045:
 11865  0019F2  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 11866  0019F6  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 11867  0019FA                     	if	0	;tblptru may be non-zero
 11868  0019FA                     	endif
 11869  0019FA                     	if	0	;tblptru may be non-zero
 11870  0019FA                     	endif
 11871  0019FA  0008               	tblrd		*
 11872  0019FC  50F5               	movf	tablat,w,c
 11873                           
 11874                           ; Switch size 1, requested type "space"
 11875                           ; Number of cases is 1, Range of values is 48 to 48
 11876                           ; switch strategies available:
 11877                           ; Name         Instructions Cycles
 11878                           ; simple_byte            4     3 (average)
 11879                           ;	Chosen strategy is simple_byte
 11880  0019FE  0A30               	xorlw	48	; case 48
 11881  001A00  B4D8               	btfsc	status,2,c
 11882  001A02  D7F3               	goto	i2l9041
 11883                           
 11884                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 11885                           
 11886                           ;doprnt.c: 586: }
 11887                           
 11888                           ;doprnt.c: 585: break;
 11889  001A04  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 11890  001A08  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 11891  001A0C                     	if	0	;tblptru may be non-zero
 11892  001A0C                     	endif
 11893  001A0C                     	if	0	;tblptru may be non-zero
 11894  001A0C                     	endif
 11895  001A0C  0008               	tblrd		*
 11896  001A0E  50F5               	movf	tablat,w,c
 11897  001A10  EC1D  F02D         	call	i2_isdigit
 11898  001A14  A0D8               	btfss	status,0,c
 11899  001A16  D035               	goto	i2l9059
 11900                           
 11901                           ;doprnt.c: 598: width = 0;
 11902  001A18  0E00               	movlw	0
 11903  001A1A  0100               	movlb	0	; () banked
 11904  001A1C  6F71               	movwf	(i2__doprnt@width+1)& (0+255),b
 11905  001A1E  0E00               	movlw	0
 11906  001A20  6F70               	movwf	i2__doprnt@width& (0+255),b
 11907  001A22                     i2l9051:
 11908                           
 11909                           ;doprnt.c: 600: width *= 10;
 11910  001A22  C070  F00F         	movff	i2__doprnt@width,i2___wmul@multiplier
 11911  001A26  C071  F010         	movff	i2__doprnt@width+1,i2___wmul@multiplier+1
 11912  001A2A  0E00               	movlw	0
 11913  001A2C  6E12               	movwf	i2___wmul@multiplicand+1,c
 11914  001A2E  0E0A               	movlw	10
 11915  001A30  6E11               	movwf	i2___wmul@multiplicand,c
 11916  001A32  ECE6  F02C         	call	i2___wmul	;wreg free
 11917  001A36  C00F  F070         	movff	?i2___wmul,i2__doprnt@width
 11918  001A3A  C010  F071         	movff	?i2___wmul+1,i2__doprnt@width+1
 11919                           
 11920                           ;doprnt.c: 601: width += *f++ - '0';
 11921  001A3E  0ED0               	movlw	208
 11922  001A40  6E4C               	movwf	??i2__doprnt& (0+255),c
 11923  001A42  0EFF               	movlw	255
 11924  001A44  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 11925  001A46  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 11926  001A4A  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 11927  001A4E                     	if	0	;tblptru may be non-zero
 11928  001A4E                     	endif
 11929  001A4E                     	if	0	;tblptru may be non-zero
 11930  001A4E                     	endif
 11931  001A4E  0008               	tblrd		*
 11932  001A50  50F5               	movf	tablat,w,c
 11933  001A52  6E4E               	movwf	(??i2__doprnt+2)& (0+255),c
 11934  001A54  6A4F               	clrf	(??i2__doprnt+3)& (0+255),c
 11935  001A56  504C               	movf	??i2__doprnt,w,c
 11936  001A58  264E               	addwf	??i2__doprnt+2,f,c
 11937  001A5A  504D               	movf	??i2__doprnt+1,w,c
 11938  001A5C  224F               	addwfc	??i2__doprnt+3,f,c
 11939  001A5E  504E               	movf	??i2__doprnt+2,w,c
 11940  001A60  0100               	movlb	0	; () banked
 11941  001A62  2770               	addwf	i2__doprnt@width& (0+255),f,b
 11942  001A64  504F               	movf	??i2__doprnt+3,w,c
 11943  001A66  0100               	movlb	0	; () banked
 11944  001A68  2371               	addwfc	(i2__doprnt@width+1)& (0+255),f,b
 11945                           
 11946                           ; BSR set to: 0
 11947  001A6A  4A48               	infsnz	i2__doprnt@f,f,c
 11948  001A6C  2A49               	incf	i2__doprnt@f+1,f,c
 11949                           
 11950                           ; BSR set to: 0
 11951                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 11952  001A6E  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 11953  001A72  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 11954  001A76                     	if	0	;tblptru may be non-zero
 11955  001A76                     	endif
 11956  001A76                     	if	0	;tblptru may be non-zero
 11957  001A76                     	endif
 11958  001A76  0008               	tblrd		*
 11959  001A78  50F5               	movf	tablat,w,c
 11960  001A7A  EC1D  F02D         	call	i2_isdigit
 11961  001A7E  B0D8               	btfsc	status,0,c
 11962  001A80  D7D0               	goto	i2l9051
 11963  001A82                     i2l9059:
 11964                           
 11965                           ;doprnt.c: 608: }
 11966                           ;doprnt.c: 611: if(*f == '.') {
 11967  001A82  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 11968  001A86  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 11969  001A8A                     	if	0	;tblptru may be non-zero
 11970  001A8A                     	endif
 11971  001A8A                     	if	0	;tblptru may be non-zero
 11972  001A8A                     	endif
 11973  001A8A  0008               	tblrd		*
 11974  001A8C  50F5               	movf	tablat,w,c
 11975  001A8E  0A2E               	xorlw	46
 11976  001A90  A4D8               	btfss	status,2,c
 11977  001A92  D032               	goto	i2l9071
 11978                           
 11979                           ;doprnt.c: 612: flag |= 0x4000;
 11980  001A94  0100               	movlb	0	; () banked
 11981  001A96  8D73               	bsf	(i2__doprnt@flag+1)& (0+255),6,b
 11982                           
 11983                           ;doprnt.c: 613: f++;
 11984  001A98  4A48               	infsnz	i2__doprnt@f,f,c
 11985  001A9A  2A49               	incf	i2__doprnt@f+1,f,c
 11986                           
 11987                           ; BSR set to: 0
 11988                           ;doprnt.c: 620: {
 11989                           ;doprnt.c: 621: prec = 0;
 11990  001A9C  0E00               	movlw	0
 11991  001A9E  0100               	movlb	0	; () banked
 11992  001AA0  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 11993  001AA2  0E00               	movlw	0
 11994  001AA4  6F74               	movwf	i2__doprnt@prec& (0+255),b
 11995                           
 11996                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 11997  001AA6  D01D               	goto	i2l9069
 11998  001AA8                     i2l9065:
 11999                           
 12000                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 12001  001AA8  C074  F00F         	movff	i2__doprnt@prec,i2___wmul@multiplier
 12002  001AAC  C075  F010         	movff	i2__doprnt@prec+1,i2___wmul@multiplier+1
 12003  001AB0  0E00               	movlw	0
 12004  001AB2  6E12               	movwf	i2___wmul@multiplicand+1,c
 12005  001AB4  0E0A               	movlw	10
 12006  001AB6  6E11               	movwf	i2___wmul@multiplicand,c
 12007  001AB8  ECE6  F02C         	call	i2___wmul	;wreg free
 12008  001ABC  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12009  001AC0  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12010  001AC4                     	if	0	;tblptru may be non-zero
 12011  001AC4                     	endif
 12012  001AC4                     	if	0	;tblptru may be non-zero
 12013  001AC4                     	endif
 12014  001AC4  0008               	tblrd		*
 12015  001AC6  50F5               	movf	tablat,w,c
 12016  001AC8  260F               	addwf	?i2___wmul,f,c
 12017  001ACA  0E00               	movlw	0
 12018  001ACC  2210               	addwfc	?i2___wmul+1,f,c
 12019  001ACE  0ED0               	movlw	208
 12020  001AD0  240F               	addwf	?i2___wmul,w,c
 12021  001AD2  0100               	movlb	0	; () banked
 12022  001AD4  6F74               	movwf	i2__doprnt@prec& (0+255),b
 12023  001AD6  0EFF               	movlw	255
 12024  001AD8  2010               	addwfc	?i2___wmul+1,w,c
 12025  001ADA  0100               	movlb	0	; () banked
 12026  001ADC  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 12027                           
 12028                           ; BSR set to: 0
 12029  001ADE  4A48               	infsnz	i2__doprnt@f,f,c
 12030  001AE0  2A49               	incf	i2__doprnt@f+1,f,c
 12031  001AE2                     i2l9069:
 12032                           
 12033                           ; BSR set to: 0
 12034  001AE2  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12035  001AE6  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12036  001AEA                     	if	0	;tblptru may be non-zero
 12037  001AEA                     	endif
 12038  001AEA                     	if	0	;tblptru may be non-zero
 12039  001AEA                     	endif
 12040  001AEA  0008               	tblrd		*
 12041  001AEC  50F5               	movf	tablat,w,c
 12042  001AEE  EC1D  F02D         	call	i2_isdigit
 12043  001AF2  A0D8               	btfss	status,0,c
 12044  001AF4  D012               	goto	i2l9083
 12045  001AF6  D7D8               	goto	i2l9065
 12046  001AF8                     i2l9071:
 12047                           
 12048                           ;doprnt.c: 626: prec = 0;
 12049  001AF8  0E00               	movlw	0
 12050  001AFA  0100               	movlb	0	; () banked
 12051  001AFC  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 12052  001AFE  0E00               	movlw	0
 12053  001B00  6F74               	movwf	i2__doprnt@prec& (0+255),b
 12054                           
 12055                           ; BSR set to: 0
 12056                           ;doprnt.c: 628: flag |= 0x1000;
 12057  001B02  0100               	movlb	0	; () banked
 12058  001B04  8973               	bsf	(i2__doprnt@flag+1)& (0+255),4,b
 12059                           
 12060                           ; BSR set to: 0
 12061                           ;doprnt.c: 635: switch(c = *f++) {
 12062                           
 12063                           ;doprnt.c: 630: }
 12064                           ;doprnt.c: 633: loop:
 12065                           
 12066                           ; BSR set to: 0
 12067  001B06  D009               	goto	i2l9083
 12068  001B08                     i2l9075:
 12069                           
 12070                           ; BSR set to: 0
 12071                           ;doprnt.c: 643: flag |= 0x10;
 12072  001B08  0100               	movlb	0	; () banked
 12073  001B0A  8972               	bsf	i2__doprnt@flag& (0+255),4,b
 12074                           
 12075                           ;doprnt.c: 644: goto loop;
 12076  001B0C  D006               	goto	i2l9083
 12077  001B0E                     i2l9077:
 12078                           
 12079                           ; BSR set to: 0
 12080                           ;doprnt.c: 663: flag |= 0x400;
 12081  001B0E  0100               	movlb	0	; () banked
 12082  001B10  8573               	bsf	(i2__doprnt@flag+1)& (0+255),2,b
 12083                           
 12084                           ; BSR set to: 0
 12085                           ;doprnt.c: 698: case 'i':
 12086                           ;doprnt.c: 699: break;
 12087                           
 12088                           ; BSR set to: 0
 12089                           
 12090                           ;doprnt.c: 697: case 'd':
 12091                           
 12092                           ;doprnt.c: 664: break;
 12093  001B12  D023               	goto	i2l9085
 12094  001B14                     i2l9079:
 12095                           
 12096                           ; BSR set to: 0
 12097                           ;doprnt.c: 818: flag |= 0x40;
 12098  001B14  0100               	movlb	0	; () banked
 12099  001B16  8D72               	bsf	i2__doprnt@flag& (0+255),6,b
 12100                           
 12101                           ; BSR set to: 0
 12102                           ;doprnt.c: 822: }
 12103                           
 12104                           ;doprnt.c: 819: break;
 12105  001B18  D020               	goto	i2l9085
 12106  001B1A                     i2l9083:
 12107  001B1A  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12108  001B1E  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12109  001B22  4A48               	infsnz	i2__doprnt@f,f,c
 12110  001B24  2A49               	incf	i2__doprnt@f+1,f,c
 12111  001B26                     	if	0	;tblptru may be non-zero
 12112  001B26                     	endif
 12113  001B26                     	if	0	;tblptru may be non-zero
 12114  001B26                     	endif
 12115  001B26  0008               	tblrd		*
 12116  001B28  CFF5 F076          	movff	tablat,i2__doprnt@c
 12117  001B2C  0100               	movlb	0	; () banked
 12118  001B2E  5176               	movf	i2__doprnt@c& (0+255),w,b
 12119                           
 12120                           ; Switch size 1, requested type "space"
 12121                           ; Number of cases is 6, Range of values is 0 to 117
 12122                           ; switch strategies available:
 12123                           ; Name         Instructions Cycles
 12124                           ; simple_byte           19    10 (average)
 12125                           ;	Chosen strategy is simple_byte
 12126  001B30  0A00               	xorlw	0	; case 0
 12127  001B32  B4D8               	btfsc	status,2,c
 12128  001B34  EF64  F015         	goto	i2l9419
 12129  001B38  0A64               	xorlw	100	; case 100
 12130  001B3A  B4D8               	btfsc	status,2,c
 12131  001B3C  D00E               	goto	i2l9085
 12132  001B3E  0A02               	xorlw	2	; case 102
 12133  001B40  B4D8               	btfsc	status,2,c
 12134  001B42  D7E5               	goto	i2l9077
 12135  001B44  0A0F               	xorlw	15	; case 105
 12136  001B46  B4D8               	btfsc	status,2,c
 12137  001B48  D008               	goto	i2l9085
 12138  001B4A  0A05               	xorlw	5	; case 108
 12139  001B4C  B4D8               	btfsc	status,2,c
 12140  001B4E  D7DC               	goto	i2l9075
 12141  001B50  0A19               	xorlw	25	; case 117
 12142  001B52  B4D8               	btfsc	status,2,c
 12143  001B54  D7DF               	goto	i2l9079
 12144  001B56  EF56  F015         	goto	i2l9417
 12145  001B5A                     i2l9085:
 12146                           
 12147                           ; BSR set to: 0
 12148                           ;doprnt.c: 825: if(flag & (0x700)) {
 12149  001B5A  0E07               	movlw	7
 12150  001B5C  0100               	movlb	0	; () banked
 12151  001B5E  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 12152  001B60  B4D8               	btfsc	status,2,c
 12153  001B62  EFAF  F012         	goto	i2l419
 12154                           
 12155                           ; BSR set to: 0
 12156                           ;doprnt.c: 827: if(flag & 0x1000)
 12157  001B66  0100               	movlb	0	; () banked
 12158  001B68  A973               	btfss	(i2__doprnt@flag+1)& (0+255),4,b
 12159  001B6A  D005               	goto	i2l9091
 12160                           
 12161                           ; BSR set to: 0
 12162                           ;doprnt.c: 829: prec = 6;
 12163  001B6C  0E00               	movlw	0
 12164  001B6E  0100               	movlb	0	; () banked
 12165  001B70  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 12166  001B72  0E06               	movlw	6
 12167  001B74  6F74               	movwf	i2__doprnt@prec& (0+255),b
 12168  001B76                     i2l9091:
 12169                           
 12170                           ; BSR set to: 0
 12171                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 12172  001B76  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 12173  001B7A  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 12174  001B7E  CFDF F04C          	movff	indf2,??i2__doprnt
 12175  001B82  0E03               	movlw	3
 12176  001B84  26DE               	addwf	postinc2,f,c
 12177  001B86  CFDF F04D          	movff	indf2,??i2__doprnt+1
 12178  001B8A  0E00               	movlw	0
 12179  001B8C  22DD               	addwfc	postdec2,f,c
 12180  001B8E  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12181  001B92  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12182  001B96  CFDE F06D          	movff	postinc2,i2__doprnt@fval
 12183  001B9A  CFDE F06E          	movff	postinc2,i2__doprnt@fval+1
 12184  001B9E  CFDD F06F          	movff	postdec2,i2__doprnt@fval+2
 12185                           
 12186                           ; BSR set to: 0
 12187                           ;doprnt.c: 831: if(fval < 0.0) {
 12188  001BA2  0100               	movlb	0	; () banked
 12189  001BA4  AF6F               	btfss	(i2__doprnt@fval+2)& (0+255),7,b
 12190  001BA6  D011               	goto	i2l9099
 12191                           
 12192                           ; BSR set to: 0
 12193                           ;doprnt.c: 832: fval = -fval;
 12194  001BA8  C06D  F001         	movff	i2__doprnt@fval,i2___ftneg@f1
 12195  001BAC  C06E  F002         	movff	i2__doprnt@fval+1,i2___ftneg@f1+1
 12196  001BB0  C06F  F003         	movff	i2__doprnt@fval+2,i2___ftneg@f1+2
 12197  001BB4  ECF9  F02C         	call	i2___ftneg	;wreg free
 12198  001BB8  C001  F06D         	movff	?i2___ftneg,i2__doprnt@fval
 12199  001BBC  C002  F06E         	movff	?i2___ftneg+1,i2__doprnt@fval+1
 12200  001BC0  C003  F06F         	movff	?i2___ftneg+2,i2__doprnt@fval+2
 12201                           
 12202                           ;doprnt.c: 833: flag |= 0x03;
 12203  001BC4  0E03               	movlw	3
 12204  001BC6  0100               	movlb	0	; () banked
 12205  001BC8  1372               	iorwf	i2__doprnt@flag& (0+255),f,b
 12206  001BCA                     i2l9099:
 12207                           
 12208                           ; BSR set to: 0
 12209                           ;doprnt.c: 834: }
 12210                           ;doprnt.c: 835: exp = 0;
 12211  001BCA  0E00               	movlw	0
 12212  001BCC  0100               	movlb	0	; () banked
 12213  001BCE  6F64               	movwf	(i2__doprnt@exp+1)& (0+255),b
 12214  001BD0  0E00               	movlw	0
 12215  001BD2  6F63               	movwf	i2__doprnt@exp& (0+255),b
 12216                           
 12217                           ; BSR set to: 0
 12218                           ;doprnt.c: 836: if( fval!=0) {
 12219  001BD4  0100               	movlb	0	; () banked
 12220  001BD6  516D               	movf	i2__doprnt@fval& (0+255),w,b
 12221  001BD8  0100               	movlb	0	; () banked
 12222  001BDA  116E               	iorwf	(i2__doprnt@fval+1)& (0+255),w,b
 12223  001BDC  0100               	movlb	0	; () banked
 12224  001BDE  116F               	iorwf	(i2__doprnt@fval+2)& (0+255),w,b
 12225  001BE0  B4D8               	btfsc	status,2,c
 12226  001BE2  D08B               	goto	i2l9127
 12227                           
 12228                           ; BSR set to: 0
 12229                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 12230  001BE4  0E82               	movlw	130
 12231  001BE6  6E4C               	movwf	??i2__doprnt& (0+255),c
 12232  001BE8  0EFF               	movlw	255
 12233  001BEA  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 12234  001BEC  C06D  F04E         	movff	i2__doprnt@fval,??i2__doprnt+2
 12235  001BF0  C06E  F04F         	movff	i2__doprnt@fval+1,??i2__doprnt+3
 12236  001BF4  C06F  F050         	movff	i2__doprnt@fval+2,??i2__doprnt+4
 12237  001BF8  C070  F051         	movff	i2__doprnt@fval+3,??i2__doprnt+5
 12238  001BFC  0E10               	movlw	16
 12239  001BFE  D005               	goto	i2u1492_40
 12240  001C00                     i2u1492_45:
 12241  001C00  90D8               	bcf	status,0,c
 12242  001C02  3251               	rrcf	??i2__doprnt+5,f,c
 12243  001C04  3250               	rrcf	??i2__doprnt+4,f,c
 12244  001C06  324F               	rrcf	??i2__doprnt+3,f,c
 12245  001C08  324E               	rrcf	??i2__doprnt+2,f,c
 12246  001C0A                     i2u1492_40:
 12247  001C0A  2EE8               	decfsz	wreg,f,c
 12248  001C0C  D7F9               	goto	i2u1492_45
 12249  001C0E  504E               	movf	??i2__doprnt+2,w,c
 12250  001C10  244C               	addwf	??i2__doprnt,w,c
 12251  001C12  0100               	movlb	0	; () banked
 12252  001C14  6F63               	movwf	i2__doprnt@exp& (0+255),b
 12253  001C16  0E00               	movlw	0
 12254  001C18  204D               	addwfc	??i2__doprnt+1,w,c
 12255  001C1A  0100               	movlb	0	; () banked
 12256  001C1C  6F64               	movwf	(i2__doprnt@exp+1)& (0+255),b
 12257                           
 12258                           ; BSR set to: 0
 12259                           ;doprnt.c: 838: exp--;
 12260  001C1E  0100               	movlb	0	; () banked
 12261  001C20  0763               	decf	i2__doprnt@exp& (0+255),f,b
 12262  001C22  A0D8               	btfss	status,0,c
 12263  001C24  0764               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 12264                           
 12265                           ; BSR set to: 0
 12266                           ;doprnt.c: 839: exp *= 3;
 12267  001C26  C063  F00F         	movff	i2__doprnt@exp,i2___wmul@multiplier
 12268  001C2A  C064  F010         	movff	i2__doprnt@exp+1,i2___wmul@multiplier+1
 12269  001C2E  0E00               	movlw	0
 12270  001C30  6E12               	movwf	i2___wmul@multiplicand+1,c
 12271  001C32  0E03               	movlw	3
 12272  001C34  6E11               	movwf	i2___wmul@multiplicand,c
 12273  001C36  ECE6  F02C         	call	i2___wmul	;wreg free
 12274  001C3A  C00F  F063         	movff	?i2___wmul,i2__doprnt@exp
 12275  001C3E  C010  F064         	movff	?i2___wmul+1,i2__doprnt@exp+1
 12276                           
 12277                           ;doprnt.c: 840: exp /= 10;
 12278  001C42  C063  F007         	movff	i2__doprnt@exp,i2___awdiv@dividend
 12279  001C46  C064  F008         	movff	i2__doprnt@exp+1,i2___awdiv@dividend+1
 12280  001C4A  0E00               	movlw	0
 12281  001C4C  6E0A               	movwf	i2___awdiv@divisor+1,c
 12282  001C4E  0E0A               	movlw	10
 12283  001C50  6E09               	movwf	i2___awdiv@divisor,c
 12284  001C52  EC42  F029         	call	i2___awdiv	;wreg free
 12285  001C56  C007  F063         	movff	?i2___awdiv,i2__doprnt@exp
 12286  001C5A  C008  F064         	movff	?i2___awdiv+1,i2__doprnt@exp+1
 12287                           
 12288                           ;doprnt.c: 841: if(exp < 0)
 12289  001C5E  0100               	movlb	0	; () banked
 12290  001C60  AF64               	btfss	(i2__doprnt@exp+1)& (0+255),7,b
 12291  001C62  D004               	goto	i2l9115
 12292                           
 12293                           ; BSR set to: 0
 12294                           ;doprnt.c: 842: exp--;
 12295  001C64  0100               	movlb	0	; () banked
 12296  001C66  0763               	decf	i2__doprnt@exp& (0+255),f,b
 12297  001C68  A0D8               	btfss	status,0,c
 12298  001C6A  0764               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 12299  001C6C                     i2l9115:
 12300                           
 12301                           ; BSR set to: 0
 12302                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 12303  001C6C  0100               	movlb	0	; () banked
 12304  001C6E  5163               	movf	i2__doprnt@exp& (0+255),w,b
 12305  001C70  0800               	sublw	0
 12306  001C72  ECC0  F017         	call	i2_scale
 12307  001C76  C030  F069         	movff	?i2_scale,i2__doprnt@tmpval
 12308  001C7A  C031  F06A         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 12309  001C7E  C032  F06B         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 12310                           
 12311                           ;doprnt.c: 847: tmpval.integ *= fval;
 12312  001C82  C069  F021         	movff	i2__doprnt@tmpval,i2___ftmul@f1
 12313  001C86  C06A  F022         	movff	i2__doprnt@tmpval+1,i2___ftmul@f1+1
 12314  001C8A  C06B  F023         	movff	i2__doprnt@tmpval+2,i2___ftmul@f1+2
 12315  001C8E  C06D  F024         	movff	i2__doprnt@fval,i2___ftmul@f2
 12316  001C92  C06E  F025         	movff	i2__doprnt@fval+1,i2___ftmul@f2+1
 12317  001C96  C06F  F026         	movff	i2__doprnt@fval+2,i2___ftmul@f2+2
 12318  001C9A  EC7D  F025         	call	i2___ftmul	;wreg free
 12319  001C9E  C021  F069         	movff	?i2___ftmul,i2__doprnt@tmpval
 12320  001CA2  C022  F06A         	movff	?i2___ftmul+1,i2__doprnt@tmpval+1
 12321  001CA6  C023  F06B         	movff	?i2___ftmul+2,i2__doprnt@tmpval+2
 12322                           
 12323                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 12324  001CAA  C069  F001         	movff	i2__doprnt@tmpval,i2___ftge@ff1
 12325  001CAE  C06A  F002         	movff	i2__doprnt@tmpval+1,i2___ftge@ff1+1
 12326  001CB2  C06B  F003         	movff	i2__doprnt@tmpval+2,i2___ftge@ff1+2
 12327  001CB6  0E00               	movlw	0
 12328  001CB8  6E04               	movwf	i2___ftge@ff2,c
 12329  001CBA  0E80               	movlw	128
 12330  001CBC  6E05               	movwf	i2___ftge@ff2+1,c
 12331  001CBE  0E3F               	movlw	63
 12332  001CC0  6E06               	movwf	i2___ftge@ff2+2,c
 12333  001CC2  ECFA  F028         	call	i2___ftge	;wreg free
 12334  001CC6  B0D8               	btfsc	status,0,c
 12335  001CC8  D005               	goto	i2l9123
 12336                           
 12337                           ;doprnt.c: 849: exp--;
 12338  001CCA  0100               	movlb	0	; () banked
 12339  001CCC  0763               	decf	i2__doprnt@exp& (0+255),f,b
 12340  001CCE  A0D8               	btfss	status,0,c
 12341  001CD0  0764               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 12342  001CD2  D013               	goto	i2l9127
 12343  001CD4                     i2l9123:
 12344                           
 12345                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 12346  001CD4  C069  F001         	movff	i2__doprnt@tmpval,i2___ftge@ff1
 12347  001CD8  C06A  F002         	movff	i2__doprnt@tmpval+1,i2___ftge@ff1+1
 12348  001CDC  C06B  F003         	movff	i2__doprnt@tmpval+2,i2___ftge@ff1+2
 12349  001CE0  0E00               	movlw	0
 12350  001CE2  6E04               	movwf	i2___ftge@ff2,c
 12351  001CE4  0E20               	movlw	32
 12352  001CE6  6E05               	movwf	i2___ftge@ff2+1,c
 12353  001CE8  0E41               	movlw	65
 12354  001CEA  6E06               	movwf	i2___ftge@ff2+2,c
 12355  001CEC  ECFA  F028         	call	i2___ftge	;wreg free
 12356  001CF0  A0D8               	btfss	status,0,c
 12357  001CF2  D003               	goto	i2l9127
 12358                           
 12359                           ;doprnt.c: 851: exp++;
 12360  001CF4  0100               	movlb	0	; () banked
 12361  001CF6  4B63               	infsnz	i2__doprnt@exp& (0+255),f,b
 12362  001CF8  2B64               	incf	(i2__doprnt@exp+1)& (0+255),f,b
 12363  001CFA                     i2l9127:
 12364                           
 12365                           ;doprnt.c: 852: }
 12366                           ;doprnt.c: 1112: if(prec <= 12)
 12367  001CFA  0100               	movlb	0	; () banked
 12368  001CFC  BF75               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 12369  001CFE  D008               	goto	i2l9129
 12370  001D00  0100               	movlb	0	; () banked
 12371  001D02  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 12372  001D04  E11D               	bnz	i2l9131
 12373  001D06  0E0D               	movlw	13
 12374  001D08  0100               	movlb	0	; () banked
 12375  001D0A  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 12376  001D0C  B0D8               	btfsc	status,0,c
 12377  001D0E  D018               	goto	i2l9131
 12378  001D10                     i2l9129:
 12379                           
 12380                           ; BSR set to: 0
 12381                           ;doprnt.c: 1113: fval += fround(prec);
 12382  001D10  C06D  F015         	movff	i2__doprnt@fval,i2___ftadd@f1
 12383  001D14  C06E  F016         	movff	i2__doprnt@fval+1,i2___ftadd@f1+1
 12384  001D18  C06F  F017         	movff	i2__doprnt@fval+2,i2___ftadd@f1+2
 12385  001D1C  0100               	movlb	0	; () banked
 12386  001D1E  5174               	movf	i2__doprnt@prec& (0+255),w,b
 12387  001D20  EC42  F01C         	call	i2_fround
 12388  001D24  C030  F018         	movff	?i2_fround,i2___ftadd@f2
 12389  001D28  C031  F019         	movff	?i2_fround+1,i2___ftadd@f2+1
 12390  001D2C  C032  F01A         	movff	?i2_fround+2,i2___ftadd@f2+2
 12391  001D30  EC65  F01D         	call	i2___ftadd	;wreg free
 12392  001D34  C015  F06D         	movff	?i2___ftadd,i2__doprnt@fval
 12393  001D38  C016  F06E         	movff	?i2___ftadd+1,i2__doprnt@fval+1
 12394  001D3C  C017  F06F         	movff	?i2___ftadd+2,i2__doprnt@fval+2
 12395  001D40                     i2l9131:
 12396                           
 12397                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 12398  001D40  0100               	movlb	0	; () banked
 12399  001D42  BF64               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 12400  001D44  D008               	goto	i2l9133
 12401  001D46  0100               	movlb	0	; () banked
 12402  001D48  5164               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 12403  001D4A  E126               	bnz	i2l9139
 12404  001D4C  0E0A               	movlw	10
 12405  001D4E  0100               	movlb	0	; () banked
 12406  001D50  5D63               	subwf	i2__doprnt@exp& (0+255),w,b
 12407  001D52  B0D8               	btfsc	status,0,c
 12408  001D54  D021               	goto	i2l9139
 12409  001D56                     i2l9133:
 12410                           
 12411                           ; BSR set to: 0
 12412  001D56  0100               	movlb	0	; () banked
 12413  001D58  516D               	movf	i2__doprnt@fval& (0+255),w,b
 12414  001D5A  0100               	movlb	0	; () banked
 12415  001D5C  116E               	iorwf	(i2__doprnt@fval+1)& (0+255),w,b
 12416  001D5E  0100               	movlb	0	; () banked
 12417  001D60  116F               	iorwf	(i2__doprnt@fval+2)& (0+255),w,b
 12418  001D62  B4D8               	btfsc	status,2,c
 12419  001D64  D05B               	goto	i2l9153
 12420                           
 12421                           ; BSR set to: 0
 12422  001D66  C06D  F037         	movff	i2__doprnt@fval,i2___fttol@f1
 12423  001D6A  C06E  F038         	movff	i2__doprnt@fval+1,i2___fttol@f1+1
 12424  001D6E  C06F  F039         	movff	i2__doprnt@fval+2,i2___fttol@f1+2
 12425  001D72  ECF7  F025         	call	i2___fttol	;wreg free
 12426  001D76  5037               	movf	?i2___fttol,w,c
 12427  001D78  1038               	iorwf	?i2___fttol+1,w,c
 12428  001D7A  1039               	iorwf	?i2___fttol+2,w,c
 12429  001D7C  103A               	iorwf	?i2___fttol+3,w,c
 12430  001D7E  A4D8               	btfss	status,2,c
 12431  001D80  D04D               	goto	i2l9153
 12432  001D82  0100               	movlb	0	; () banked
 12433  001D84  BF64               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 12434  001D86  D04A               	goto	i2l9153
 12435  001D88  0100               	movlb	0	; () banked
 12436  001D8A  5164               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 12437  001D8C  E105               	bnz	i2l9139
 12438  001D8E  0E02               	movlw	2
 12439  001D90  0100               	movlb	0	; () banked
 12440  001D92  5D63               	subwf	i2__doprnt@exp& (0+255),w,b
 12441  001D94  A0D8               	btfss	status,0,c
 12442  001D96  D042               	goto	i2l9153
 12443  001D98                     i2l9139:
 12444                           
 12445                           ; BSR set to: 0
 12446                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 12447  001D98  C069  F001         	movff	i2__doprnt@tmpval,i2___ftge@ff1
 12448  001D9C  C06A  F002         	movff	i2__doprnt@tmpval+1,i2___ftge@ff1+1
 12449  001DA0  C06B  F003         	movff	i2__doprnt@tmpval+2,i2___ftge@ff1+2
 12450  001DA4  0E70               	movlw	112
 12451  001DA6  6E04               	movwf	i2___ftge@ff2,c
 12452  001DA8  0E89               	movlw	137
 12453  001DAA  6E05               	movwf	i2___ftge@ff2+1,c
 12454  001DAC  0E40               	movlw	64
 12455  001DAE  6E06               	movwf	i2___ftge@ff2+2,c
 12456  001DB0  ECFA  F028         	call	i2___ftge	;wreg free
 12457  001DB4  B0D8               	btfsc	status,0,c
 12458  001DB6  D003               	goto	i2l9143
 12459                           
 12460                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 12461  001DB8  0100               	movlb	0	; () banked
 12462  001DBA  0EF7               	movlw	247
 12463  001DBC  D002               	goto	L6
 12464  001DBE                     i2l9143:
 12465                           
 12466                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 12467  001DBE  0100               	movlb	0	; () banked
 12468  001DC0  0EF8               	movlw	248
 12469  001DC2                     L6:
 12470  001DC2  2763               	addwf	i2__doprnt@exp& (0+255),f,b
 12471  001DC4  0EFF               	movlw	255
 12472  001DC6  2364               	addwfc	(i2__doprnt@exp+1)& (0+255),f,b
 12473                           
 12474                           ; BSR set to: 0
 12475                           ;doprnt.c: 1124: }
 12476                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 12477                           
 12478                           ; BSR set to: 0
 12479  001DC8  0100               	movlb	0	; () banked
 12480  001DCA  5163               	movf	i2__doprnt@exp& (0+255),w,b
 12481  001DCC  ECC0  F017         	call	i2_scale
 12482  001DD0  C030  F069         	movff	?i2_scale,i2__doprnt@tmpval
 12483  001DD4  C031  F06A         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 12484  001DD8  C032  F06B         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 12485                           
 12486                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 12487  001DDC  C06D  F001         	movff	i2__doprnt@fval,i2__tdiv_to_l_@f1
 12488  001DE0  C06E  F002         	movff	i2__doprnt@fval+1,i2__tdiv_to_l_@f1+1
 12489  001DE4  C06F  F003         	movff	i2__doprnt@fval+2,i2__tdiv_to_l_@f1+2
 12490  001DE8  C069  F004         	movff	i2__doprnt@tmpval,i2__tdiv_to_l_@f2
 12491  001DEC  C06A  F005         	movff	i2__doprnt@tmpval+1,i2__tdiv_to_l_@f2+1
 12492  001DF0  C06B  F006         	movff	i2__doprnt@tmpval+2,i2__tdiv_to_l_@f2+2
 12493  001DF4  EC4A  F023         	call	i2__tdiv_to_l_	;wreg free
 12494  001DF8  C001  F065         	movff	?i2__tdiv_to_l_,i2__doprnt@val
 12495  001DFC  C002  F066         	movff	?i2__tdiv_to_l_+1,i2__doprnt@val+1
 12496  001E00  C003  F067         	movff	?i2__tdiv_to_l_+2,i2__doprnt@val+2
 12497  001E04  C004  F068         	movff	?i2__tdiv_to_l_+3,i2__doprnt@val+3
 12498                           
 12499                           ;doprnt.c: 1129: fval = 0.0;
 12500  001E08  0E00               	movlw	0
 12501  001E0A  0100               	movlb	0	; () banked
 12502  001E0C  6F6D               	movwf	i2__doprnt@fval& (0+255),b
 12503  001E0E  0E00               	movlw	0
 12504  001E10  0100               	movlb	0	; () banked
 12505  001E12  6F6E               	movwf	(i2__doprnt@fval+1)& (0+255),b
 12506  001E14  0E00               	movlw	0
 12507  001E16  0100               	movlb	0	; () banked
 12508  001E18  6F6F               	movwf	(i2__doprnt@fval+2)& (0+255),b
 12509                           
 12510                           ;doprnt.c: 1130: } else {
 12511  001E1A  D033               	goto	i2l9157
 12512  001E1C                     i2l9153:
 12513                           
 12514                           ;doprnt.c: 1131: val = (unsigned long)fval;
 12515  001E1C  C06D  F037         	movff	i2__doprnt@fval,i2___fttol@f1
 12516  001E20  C06E  F038         	movff	i2__doprnt@fval+1,i2___fttol@f1+1
 12517  001E24  C06F  F039         	movff	i2__doprnt@fval+2,i2___fttol@f1+2
 12518  001E28  ECF7  F025         	call	i2___fttol	;wreg free
 12519  001E2C  C037  F065         	movff	?i2___fttol,i2__doprnt@val
 12520  001E30  C038  F066         	movff	?i2___fttol+1,i2__doprnt@val+1
 12521  001E34  C039  F067         	movff	?i2___fttol+2,i2__doprnt@val+2
 12522  001E38  C03A  F068         	movff	?i2___fttol+3,i2__doprnt@val+3
 12523                           
 12524                           ;doprnt.c: 1132: fval -= (double)val;
 12525  001E3C  C06D  F021         	movff	i2__doprnt@fval,i2___ftsub@f1
 12526  001E40  C06E  F022         	movff	i2__doprnt@fval+1,i2___ftsub@f1+1
 12527  001E44  C06F  F023         	movff	i2__doprnt@fval+2,i2___ftsub@f1+2
 12528  001E48  C065  F009         	movff	i2__doprnt@val,i2___lltoft@c
 12529  001E4C  C066  F00A         	movff	i2__doprnt@val+1,i2___lltoft@c+1
 12530  001E50  C067  F00B         	movff	i2__doprnt@val+2,i2___lltoft@c+2
 12531  001E54  C068  F00C         	movff	i2__doprnt@val+3,i2___lltoft@c+3
 12532  001E58  ECAB  F02A         	call	i2___lltoft	;wreg free
 12533  001E5C  C009  F024         	movff	?i2___lltoft,i2___ftsub@f2
 12534  001E60  C00A  F025         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 12535  001E64  C00B  F026         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 12536  001E68  ECD8  F02B         	call	i2___ftsub	;wreg free
 12537  001E6C  C021  F06D         	movff	?i2___ftsub,i2__doprnt@fval
 12538  001E70  C022  F06E         	movff	?i2___ftsub+1,i2__doprnt@fval+1
 12539  001E74  C023  F06F         	movff	?i2___ftsub+2,i2__doprnt@fval+2
 12540                           
 12541                           ;doprnt.c: 1133: exp = 0;
 12542  001E78  0E00               	movlw	0
 12543  001E7A  0100               	movlb	0	; () banked
 12544  001E7C  6F64               	movwf	(i2__doprnt@exp+1)& (0+255),b
 12545  001E7E  0E00               	movlw	0
 12546  001E80  6F63               	movwf	i2__doprnt@exp& (0+255),b
 12547  001E82                     i2l9157:
 12548                           
 12549                           ; BSR set to: 0
 12550                           ;doprnt.c: 1134: }
 12551                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 12552  001E82  0E01               	movlw	1
 12553  001E84  0100               	movlb	0	; () banked
 12554  001E86  6F76               	movwf	i2__doprnt@c& (0+255),b
 12555  001E88                     i2l9159:
 12556                           
 12557                           ; BSR set to: 0
 12558  001E88  0E0A               	movlw	10
 12559  001E8A  0100               	movlb	0	; () banked
 12560  001E8C  1976               	xorwf	i2__doprnt@c& (0+255),w,b
 12561  001E8E  B4D8               	btfsc	status,2,c
 12562  001E90  D01E               	goto	i2l9171
 12563                           
 12564                           ; BSR set to: 0
 12565                           ;doprnt.c: 1137: if(val < dpowers[c])
 12566                           
 12567                           ; BSR set to: 0
 12568                           
 12569                           ; BSR set to: 0
 12570  001E92  0100               	movlb	0	; () banked
 12571  001E94  5176               	movf	i2__doprnt@c& (0+255),w,b
 12572  001E96  0D04               	mullw	4
 12573  001E98  0E01               	movlw	low _dpowers
 12574  001E9A  24F3               	addwf	prodl,w,c
 12575  001E9C  6EF6               	movwf	tblptrl,c
 12576  001E9E  0E06               	movlw	high _dpowers
 12577  001EA0  20F4               	addwfc	prodh,w,c
 12578  001EA2  6EF7               	movwf	tblptrh,c
 12579  001EA4                     	if	0	;There are less than 3 active tblptr bytes
 12580  001EA4                     	endif
 12581  001EA4  0009               	tblrd		*+
 12582  001EA6  50F5               	movf	tablat,w,c
 12583  001EA8  0100               	movlb	0	; () banked
 12584  001EAA  5D65               	subwf	i2__doprnt@val& (0+255),w,b
 12585  001EAC  0009               	tblrd		*+
 12586  001EAE  50F5               	movf	tablat,w,c
 12587  001EB0  0100               	movlb	0	; () banked
 12588  001EB2  5966               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 12589  001EB4  0009               	tblrd		*+
 12590  001EB6  50F5               	movf	tablat,w,c
 12591  001EB8  0100               	movlb	0	; () banked
 12592  001EBA  5967               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 12593  001EBC  0009               	tblrd		*+
 12594  001EBE  50F5               	movf	tablat,w,c
 12595  001EC0  0100               	movlb	0	; () banked
 12596  001EC2  5968               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 12597  001EC4  A0D8               	btfss	status,0,c
 12598  001EC6  D003               	goto	i2l9171
 12599                           
 12600                           ; BSR set to: 0
 12601                           
 12602                           ; BSR set to: 0
 12603                           
 12604                           ; BSR set to: 0
 12605                           ;doprnt.c: 1138: break;
 12606  001EC8  0100               	movlb	0	; () banked
 12607  001ECA  2B76               	incf	i2__doprnt@c& (0+255),f,b
 12608  001ECC  D7DD               	goto	i2l9159
 12609  001ECE                     i2l9171:
 12610                           
 12611                           ; BSR set to: 0
 12612                           ;doprnt.c: 1142: width -= prec + c + exp;
 12613  001ECE  C076  F04C         	movff	i2__doprnt@c,??i2__doprnt
 12614  001ED2  6A4D               	clrf	(??i2__doprnt+1)& (0+255),c
 12615  001ED4  BE4C               	btfsc	??i2__doprnt& (0+255),7,c
 12616  001ED6  064D               	decf	(??i2__doprnt+1)& (0+255),f,c
 12617  001ED8  0100               	movlb	0	; () banked
 12618  001EDA  5174               	movf	i2__doprnt@prec& (0+255),w,b
 12619  001EDC  264C               	addwf	??i2__doprnt,f,c
 12620  001EDE  0100               	movlb	0	; () banked
 12621  001EE0  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 12622  001EE2  224D               	addwfc	??i2__doprnt+1,f,c
 12623  001EE4  0100               	movlb	0	; () banked
 12624  001EE6  5163               	movf	i2__doprnt@exp& (0+255),w,b
 12625  001EE8  264C               	addwf	??i2__doprnt,f,c
 12626  001EEA  0100               	movlb	0	; () banked
 12627  001EEC  5164               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 12628  001EEE  224D               	addwfc	??i2__doprnt+1,f,c
 12629  001EF0  504C               	movf	??i2__doprnt,w,c
 12630  001EF2  0100               	movlb	0	; () banked
 12631  001EF4  5F70               	subwf	i2__doprnt@width& (0+255),f,b
 12632  001EF6  504D               	movf	??i2__doprnt+1,w,c
 12633  001EF8  0100               	movlb	0	; () banked
 12634  001EFA  5B71               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 12635                           
 12636                           ;doprnt.c: 1143: if(
 12637                           ;doprnt.c: 1147: prec)
 12638  001EFC  0100               	movlb	0	; () banked
 12639  001EFE  5174               	movf	i2__doprnt@prec& (0+255),w,b
 12640  001F00  0100               	movlb	0	; () banked
 12641  001F02  1175               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 12642  001F04  B4D8               	btfsc	status,2,c
 12643  001F06  D004               	goto	i2l9175
 12644                           
 12645                           ; BSR set to: 0
 12646                           ;doprnt.c: 1148: width--;
 12647  001F08  0100               	movlb	0	; () banked
 12648  001F0A  0770               	decf	i2__doprnt@width& (0+255),f,b
 12649  001F0C  A0D8               	btfss	status,0,c
 12650  001F0E  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 12651  001F10                     i2l9175:
 12652                           
 12653                           ; BSR set to: 0
 12654                           ;doprnt.c: 1149: if(flag & 0x03)
 12655  001F10  0E03               	movlw	3
 12656  001F12  0100               	movlb	0	; () banked
 12657  001F14  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 12658  001F16  6E4C               	movwf	??i2__doprnt& (0+255),c
 12659  001F18  0E00               	movlw	0
 12660  001F1A  0100               	movlb	0	; () banked
 12661  001F1C  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 12662  001F1E  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 12663  001F20  504C               	movf	??i2__doprnt,w,c
 12664  001F22  104D               	iorwf	??i2__doprnt+1,w,c
 12665  001F24  B4D8               	btfsc	status,2,c
 12666  001F26  D004               	goto	i2l9179
 12667                           
 12668                           ; BSR set to: 0
 12669                           ;doprnt.c: 1150: width--;
 12670  001F28  0100               	movlb	0	; () banked
 12671  001F2A  0770               	decf	i2__doprnt@width& (0+255),f,b
 12672  001F2C  A0D8               	btfss	status,0,c
 12673  001F2E  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 12674  001F30                     i2l9179:
 12675                           
 12676                           ; BSR set to: 0
 12677                           ;doprnt.c: 1153: if(flag & 0x04) {
 12678  001F30  0100               	movlb	0	; () banked
 12679  001F32  A572               	btfss	i2__doprnt@flag& (0+255),2,b
 12680  001F34  D0B6               	goto	i2l9213
 12681                           
 12682                           ; BSR set to: 0
 12683                           ;doprnt.c: 1157: if(flag & 0x03)
 12684  001F36  0E03               	movlw	3
 12685  001F38  0100               	movlb	0	; () banked
 12686  001F3A  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 12687  001F3C  6E4C               	movwf	??i2__doprnt& (0+255),c
 12688  001F3E  0E00               	movlw	0
 12689  001F40  0100               	movlb	0	; () banked
 12690  001F42  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 12691  001F44  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 12692  001F46  504C               	movf	??i2__doprnt,w,c
 12693  001F48  104D               	iorwf	??i2__doprnt+1,w,c
 12694  001F4A  B4D8               	btfsc	status,2,c
 12695  001F4C  D069               	goto	i2l9201
 12696                           
 12697                           ; BSR set to: 0
 12698                           ;doprnt.c: 1159: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 12699  001F4E  EE20 F002          	lfsr	2,2
 12700  001F52  5046               	movf	i2__doprnt@pb,w,c
 12701  001F54  26D9               	addwf	fsr2l,f,c
 12702  001F56  5047               	movf	i2__doprnt@pb+1,w,c
 12703  001F58  22DA               	addwfc	fsr2h,f,c
 12704  001F5A  50DE               	movf	postinc2,w,c
 12705  001F5C  10DE               	iorwf	postinc2,w,c
 12706  001F5E  B4D8               	btfsc	status,2,c
 12707  001F60  D013               	goto	i2l9187
 12708                           
 12709                           ; BSR set to: 0
 12710  001F62  EE20 F002          	lfsr	2,2
 12711  001F66  5046               	movf	i2__doprnt@pb,w,c
 12712  001F68  26D9               	addwf	fsr2l,f,c
 12713  001F6A  5047               	movf	i2__doprnt@pb+1,w,c
 12714  001F6C  22DA               	addwfc	fsr2h,f,c
 12715  001F6E  D801               	call	i2u1510_48
 12716  001F70  D057               	goto	i2l9201
 12717  001F72                     i2u1510_48:
 12718  001F72  0005               	push	
 12719  001F74  6EFA               	movwf	pclath,c
 12720  001F76  50DE               	movf	postinc2,w,c
 12721  001F78  6EFD               	movwf	tosl,c
 12722  001F7A  50DE               	movf	postinc2,w,c
 12723  001F7C  6EFE               	movwf	tosh,c
 12724  001F7E  50F8               	movf	tblptru,w,c
 12725  001F80  6EFF               	movwf	tosu,c
 12726  001F82  50FA               	movf	pclath,w,c
 12727  001F84  0E2D               	movlw	45
 12728  001F86  0012               	return		;indir
 12729  001F88                     i2l9187:
 12730  001F88  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12731  001F8C  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12732  001F90  CFDE F04C          	movff	postinc2,??i2__doprnt
 12733  001F94  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12734  001F98  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12735  001F9C  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12736  001FA0  0E2D               	movlw	45
 12737  001FA2  6EDF               	movwf	indf2,c
 12738  001FA4  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12739  001FA8  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12740  001FAC  2ADE               	incf	postinc2,f,c
 12741  001FAE  0E00               	movlw	0
 12742  001FB0  22DD               	addwfc	postdec2,f,c
 12743                           
 12744                           ;doprnt.c: 1168: while(width > 0) {
 12745  001FB2  D036               	goto	i2l9201
 12746  001FB4                     i2l9191:
 12747                           
 12748                           ;doprnt.c: 1169: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 12749  001FB4  EE20 F002          	lfsr	2,2
 12750  001FB8  5046               	movf	i2__doprnt@pb,w,c
 12751  001FBA  26D9               	addwf	fsr2l,f,c
 12752  001FBC  5047               	movf	i2__doprnt@pb+1,w,c
 12753  001FBE  22DA               	addwfc	fsr2h,f,c
 12754  001FC0  50DE               	movf	postinc2,w,c
 12755  001FC2  10DE               	iorwf	postinc2,w,c
 12756  001FC4  B4D8               	btfsc	status,2,c
 12757  001FC6  D013               	goto	i2l9195
 12758  001FC8  EE20 F002          	lfsr	2,2
 12759  001FCC  5046               	movf	i2__doprnt@pb,w,c
 12760  001FCE  26D9               	addwf	fsr2l,f,c
 12761  001FD0  5047               	movf	i2__doprnt@pb+1,w,c
 12762  001FD2  22DA               	addwfc	fsr2h,f,c
 12763  001FD4  D801               	call	i2u1512_48
 12764  001FD6  D020               	goto	i2l9199
 12765  001FD8                     i2u1512_48:
 12766  001FD8  0005               	push	
 12767  001FDA  6EFA               	movwf	pclath,c
 12768  001FDC  50DE               	movf	postinc2,w,c
 12769  001FDE  6EFD               	movwf	tosl,c
 12770  001FE0  50DE               	movf	postinc2,w,c
 12771  001FE2  6EFE               	movwf	tosh,c
 12772  001FE4  50F8               	movf	tblptru,w,c
 12773  001FE6  6EFF               	movwf	tosu,c
 12774  001FE8  50FA               	movf	pclath,w,c
 12775  001FEA  0E30               	movlw	48
 12776  001FEC  0012               	return		;indir
 12777  001FEE                     i2l9195:
 12778  001FEE  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12779  001FF2  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12780  001FF6  CFDE F04C          	movff	postinc2,??i2__doprnt
 12781  001FFA  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12782  001FFE  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12783  002002  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12784  002006  0E30               	movlw	48
 12785  002008  6EDF               	movwf	indf2,c
 12786  00200A  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12787  00200E  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12788  002012  2ADE               	incf	postinc2,f,c
 12789  002014  0E00               	movlw	0
 12790  002016  22DD               	addwfc	postdec2,f,c
 12791  002018                     i2l9199:
 12792                           
 12793                           ;doprnt.c: 1170: width--;
 12794  002018  0100               	movlb	0	; () banked
 12795  00201A  0770               	decf	i2__doprnt@width& (0+255),f,b
 12796  00201C  A0D8               	btfss	status,0,c
 12797  00201E  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 12798  002020                     i2l9201:
 12799  002020  0100               	movlb	0	; () banked
 12800  002022  BF71               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 12801  002024  D0F8               	goto	i2l9235
 12802  002026  0100               	movlb	0	; () banked
 12803  002028  5171               	movf	(i2__doprnt@width+1)& (0+255),w,b
 12804  00202A  E1C4               	bnz	i2l9191
 12805  00202C  0100               	movlb	0	; () banked
 12806  00202E  0570               	decf	i2__doprnt@width& (0+255),w,b
 12807  002030  A0D8               	btfss	status,0,c
 12808  002032  D0F1               	goto	i2l9235
 12809  002034  D7BF               	goto	i2l9191
 12810  002036                     i2l9203:
 12811                           
 12812                           ; BSR set to: 0
 12813                           ;doprnt.c: 1181: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 12814  002036  EE20 F002          	lfsr	2,2
 12815  00203A  5046               	movf	i2__doprnt@pb,w,c
 12816  00203C  26D9               	addwf	fsr2l,f,c
 12817  00203E  5047               	movf	i2__doprnt@pb+1,w,c
 12818  002040  22DA               	addwfc	fsr2h,f,c
 12819  002042  50DE               	movf	postinc2,w,c
 12820  002044  10DE               	iorwf	postinc2,w,c
 12821  002046  B4D8               	btfsc	status,2,c
 12822  002048  D013               	goto	i2l9207
 12823                           
 12824                           ; BSR set to: 0
 12825  00204A  EE20 F002          	lfsr	2,2
 12826  00204E  5046               	movf	i2__doprnt@pb,w,c
 12827  002050  26D9               	addwf	fsr2l,f,c
 12828  002052  5047               	movf	i2__doprnt@pb+1,w,c
 12829  002054  22DA               	addwfc	fsr2h,f,c
 12830  002056  D801               	call	i2u1515_48
 12831  002058  D020               	goto	i2l9211
 12832  00205A                     i2u1515_48:
 12833  00205A  0005               	push	
 12834  00205C  6EFA               	movwf	pclath,c
 12835  00205E  50DE               	movf	postinc2,w,c
 12836  002060  6EFD               	movwf	tosl,c
 12837  002062  50DE               	movf	postinc2,w,c
 12838  002064  6EFE               	movwf	tosh,c
 12839  002066  50F8               	movf	tblptru,w,c
 12840  002068  6EFF               	movwf	tosu,c
 12841  00206A  50FA               	movf	pclath,w,c
 12842  00206C  0E20               	movlw	32
 12843  00206E  0012               	return		;indir
 12844  002070                     i2l9207:
 12845  002070  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12846  002074  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12847  002078  CFDE F04C          	movff	postinc2,??i2__doprnt
 12848  00207C  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12849  002080  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12850  002084  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12851  002088  0E20               	movlw	32
 12852  00208A  6EDF               	movwf	indf2,c
 12853  00208C  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12854  002090  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12855  002094  2ADE               	incf	postinc2,f,c
 12856  002096  0E00               	movlw	0
 12857  002098  22DD               	addwfc	postdec2,f,c
 12858  00209A                     i2l9211:
 12859                           
 12860                           ;doprnt.c: 1182: width--;
 12861  00209A  0100               	movlb	0	; () banked
 12862  00209C  0770               	decf	i2__doprnt@width& (0+255),f,b
 12863  00209E  A0D8               	btfss	status,0,c
 12864  0020A0  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 12865  0020A2                     i2l9213:
 12866                           
 12867                           ; BSR set to: 0
 12868  0020A2  0100               	movlb	0	; () banked
 12869  0020A4  BF71               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 12870  0020A6  D007               	goto	i2l9215
 12871  0020A8  0100               	movlb	0	; () banked
 12872  0020AA  5171               	movf	(i2__doprnt@width+1)& (0+255),w,b
 12873  0020AC  E1C4               	bnz	i2l9203
 12874  0020AE  0100               	movlb	0	; () banked
 12875  0020B0  0570               	decf	i2__doprnt@width& (0+255),w,b
 12876  0020B2  B0D8               	btfsc	status,0,c
 12877  0020B4  D7C0               	goto	i2l9203
 12878  0020B6                     i2l9215:
 12879                           
 12880                           ; BSR set to: 0
 12881                           ;doprnt.c: 1183: }
 12882                           ;doprnt.c: 1188: if(flag & 0x03)
 12883  0020B6  0E03               	movlw	3
 12884  0020B8  0100               	movlb	0	; () banked
 12885  0020BA  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 12886  0020BC  6E4C               	movwf	??i2__doprnt& (0+255),c
 12887  0020BE  0E00               	movlw	0
 12888  0020C0  0100               	movlb	0	; () banked
 12889  0020C2  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 12890  0020C4  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 12891  0020C6  504C               	movf	??i2__doprnt,w,c
 12892  0020C8  104D               	iorwf	??i2__doprnt+1,w,c
 12893  0020CA  B4D8               	btfsc	status,2,c
 12894  0020CC  D0A4               	goto	i2l9235
 12895                           
 12896                           ; BSR set to: 0
 12897                           ;doprnt.c: 1190: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 12898  0020CE  EE20 F002          	lfsr	2,2
 12899  0020D2  5046               	movf	i2__doprnt@pb,w,c
 12900  0020D4  26D9               	addwf	fsr2l,f,c
 12901  0020D6  5047               	movf	i2__doprnt@pb+1,w,c
 12902  0020D8  22DA               	addwfc	fsr2h,f,c
 12903  0020DA  50DE               	movf	postinc2,w,c
 12904  0020DC  10DE               	iorwf	postinc2,w,c
 12905  0020DE  B4D8               	btfsc	status,2,c
 12906  0020E0  D013               	goto	i2l9221
 12907                           
 12908                           ; BSR set to: 0
 12909  0020E2  EE20 F002          	lfsr	2,2
 12910  0020E6  5046               	movf	i2__doprnt@pb,w,c
 12911  0020E8  26D9               	addwf	fsr2l,f,c
 12912  0020EA  5047               	movf	i2__doprnt@pb+1,w,c
 12913  0020EC  22DA               	addwfc	fsr2h,f,c
 12914  0020EE  D801               	call	i2u1519_48
 12915  0020F0  D092               	goto	i2l9235
 12916  0020F2                     i2u1519_48:
 12917  0020F2  0005               	push	
 12918  0020F4  6EFA               	movwf	pclath,c
 12919  0020F6  50DE               	movf	postinc2,w,c
 12920  0020F8  6EFD               	movwf	tosl,c
 12921  0020FA  50DE               	movf	postinc2,w,c
 12922  0020FC  6EFE               	movwf	tosh,c
 12923  0020FE  50F8               	movf	tblptru,w,c
 12924  002100  6EFF               	movwf	tosu,c
 12925  002102  50FA               	movf	pclath,w,c
 12926  002104  0E2D               	movlw	45
 12927  002106  0012               	return		;indir
 12928  002108                     i2l9221:
 12929  002108  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12930  00210C  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12931  002110  CFDE F04C          	movff	postinc2,??i2__doprnt
 12932  002114  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12933  002118  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12934  00211C  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12935  002120  0E2D               	movlw	45
 12936  002122  D077               	goto	L7
 12937  002124                     i2l9223:
 12938  002124  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12939  002128  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12940  00212C  2ADE               	incf	postinc2,f,c
 12941  00212E  0E00               	movlw	0
 12942  002130  22DD               	addwfc	postdec2,f,c
 12943                           
 12944                           ;doprnt.c: 1195: }
 12945                           ;doprnt.c: 1196: while(c--) {
 12946  002132  D071               	goto	i2l9235
 12947  002134                     i2l9225:
 12948                           
 12949                           ;doprnt.c: 1200: {
 12950                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 12951  002134  C065  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 12952  002138  C066  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 12953  00213C  C067  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 12954  002140  C068  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 12955  002144  0100               	movlb	0	; () banked
 12956  002146  5176               	movf	i2__doprnt@c& (0+255),w,b
 12957  002148  0D04               	mullw	4
 12958  00214A  0E01               	movlw	low _dpowers
 12959  00214C  24F3               	addwf	prodl,w,c
 12960  00214E  6EF6               	movwf	tblptrl,c
 12961  002150  0E06               	movlw	high _dpowers
 12962  002152  20F4               	addwfc	prodh,w,c
 12963  002154  6EF7               	movwf	tblptrh,c
 12964  002156                     	if	0	;There are less than 3 active tblptr bytes
 12965  002156                     	endif
 12966  002156  0009               	tblrd		*+
 12967  002158  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 12968  00215C  0009               	tblrd		*+
 12969  00215E  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 12970  002162  0009               	tblrd		*+
 12971  002164  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 12972  002168  000A               	tblrd		*-
 12973  00216A  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 12974  00216E  EC84  F029         	call	i2___lldiv
 12975  002172  C001  F069         	movff	?i2___lldiv,i2__doprnt@tmpval
 12976  002176  C002  F06A         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 12977  00217A  C003  F06B         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 12978  00217E  C004  F06C         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 12979                           
 12980                           ;doprnt.c: 1202: tmpval.vd %= 10;
 12981  002182  C069  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 12982  002186  C06A  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 12983  00218A  C06B  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 12984  00218E  C06C  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 12985  002192  0E0A               	movlw	10
 12986  002194  6E12               	movwf	i2___llmod@divisor,c
 12987  002196  0E00               	movlw	0
 12988  002198  6E13               	movwf	i2___llmod@divisor+1,c
 12989  00219A  0E00               	movlw	0
 12990  00219C  6E14               	movwf	i2___llmod@divisor+2,c
 12991  00219E  0E00               	movlw	0
 12992  0021A0  6E15               	movwf	i2___llmod@divisor+3,c
 12993  0021A2  EC78  F02A         	call	i2___llmod	;wreg free
 12994  0021A6  C00E  F069         	movff	?i2___llmod,i2__doprnt@tmpval
 12995  0021AA  C00F  F06A         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 12996  0021AE  C010  F06B         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 12997  0021B2  C011  F06C         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 12998                           
 12999                           ;doprnt.c: 1203: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 13000  0021B6  EE20 F002          	lfsr	2,2
 13001  0021BA  5046               	movf	i2__doprnt@pb,w,c
 13002  0021BC  26D9               	addwf	fsr2l,f,c
 13003  0021BE  5047               	movf	i2__doprnt@pb+1,w,c
 13004  0021C0  22DA               	addwfc	fsr2h,f,c
 13005  0021C2  50DE               	movf	postinc2,w,c
 13006  0021C4  10DE               	iorwf	postinc2,w,c
 13007  0021C6  B4D8               	btfsc	status,2,c
 13008  0021C8  D015               	goto	i2l9233
 13009  0021CA  EE20 F002          	lfsr	2,2
 13010  0021CE  5046               	movf	i2__doprnt@pb,w,c
 13011  0021D0  26D9               	addwf	fsr2l,f,c
 13012  0021D2  5047               	movf	i2__doprnt@pb+1,w,c
 13013  0021D4  22DA               	addwfc	fsr2h,f,c
 13014  0021D6  D801               	call	i2u1521_48
 13015  0021D8  D01E               	goto	i2l9235
 13016  0021DA                     i2u1521_48:
 13017  0021DA  0005               	push	
 13018  0021DC  6EFA               	movwf	pclath,c
 13019  0021DE  50DE               	movf	postinc2,w,c
 13020  0021E0  6EFD               	movwf	tosl,c
 13021  0021E2  50DE               	movf	postinc2,w,c
 13022  0021E4  6EFE               	movwf	tosh,c
 13023  0021E6  50F8               	movf	tblptru,w,c
 13024  0021E8  6EFF               	movwf	tosu,c
 13025  0021EA  50FA               	movf	pclath,w,c
 13026  0021EC  0100               	movlb	0	; () banked
 13027  0021EE  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 13028  0021F0  0F30               	addlw	48
 13029  0021F2  0012               	return		;indir
 13030  0021F4                     i2l9233:
 13031  0021F4  0100               	movlb	0	; () banked
 13032  0021F6  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 13033  0021F8  0F30               	addlw	48
 13034  0021FA  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13035  0021FE  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13036  002202  CFDE F04C          	movff	postinc2,??i2__doprnt
 13037  002206  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13038  00220A  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13039  00220E  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13040  002212                     L7:
 13041  002212  6EDF               	movwf	indf2,c
 13042  002214  D787               	goto	i2l9223
 13043  002216                     i2l9235:
 13044  002216  0100               	movlb	0	; () banked
 13045  002218  0776               	decf	i2__doprnt@c& (0+255),f,b
 13046  00221A  0100               	movlb	0	; () banked
 13047  00221C  2976               	incf	i2__doprnt@c& (0+255),w,b
 13048  00221E  B4D8               	btfsc	status,2,c
 13049  002220  D037               	goto	i2l9247
 13050  002222  D788               	goto	i2l9225
 13051  002224                     i2l9237:
 13052                           
 13053                           ; BSR set to: 0
 13054                           ;doprnt.c: 1208: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 13055  002224  EE20 F002          	lfsr	2,2
 13056  002228  5046               	movf	i2__doprnt@pb,w,c
 13057  00222A  26D9               	addwf	fsr2l,f,c
 13058  00222C  5047               	movf	i2__doprnt@pb+1,w,c
 13059  00222E  22DA               	addwfc	fsr2h,f,c
 13060  002230  50DE               	movf	postinc2,w,c
 13061  002232  10DE               	iorwf	postinc2,w,c
 13062  002234  B4D8               	btfsc	status,2,c
 13063  002236  D013               	goto	i2l9241
 13064                           
 13065                           ; BSR set to: 0
 13066  002238  EE20 F002          	lfsr	2,2
 13067  00223C  5046               	movf	i2__doprnt@pb,w,c
 13068  00223E  26D9               	addwf	fsr2l,f,c
 13069  002240  5047               	movf	i2__doprnt@pb+1,w,c
 13070  002242  22DA               	addwfc	fsr2h,f,c
 13071  002244  D801               	call	i2u1524_48
 13072  002246  D020               	goto	i2l9245
 13073  002248                     i2u1524_48:
 13074  002248  0005               	push	
 13075  00224A  6EFA               	movwf	pclath,c
 13076  00224C  50DE               	movf	postinc2,w,c
 13077  00224E  6EFD               	movwf	tosl,c
 13078  002250  50DE               	movf	postinc2,w,c
 13079  002252  6EFE               	movwf	tosh,c
 13080  002254  50F8               	movf	tblptru,w,c
 13081  002256  6EFF               	movwf	tosu,c
 13082  002258  50FA               	movf	pclath,w,c
 13083  00225A  0E30               	movlw	48
 13084  00225C  0012               	return		;indir
 13085  00225E                     i2l9241:
 13086  00225E  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13087  002262  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13088  002266  CFDE F04C          	movff	postinc2,??i2__doprnt
 13089  00226A  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13090  00226E  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13091  002272  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13092  002276  0E30               	movlw	48
 13093  002278  6EDF               	movwf	indf2,c
 13094  00227A  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13095  00227E  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13096  002282  2ADE               	incf	postinc2,f,c
 13097  002284  0E00               	movlw	0
 13098  002286  22DD               	addwfc	postdec2,f,c
 13099  002288                     i2l9245:
 13100                           
 13101                           ;doprnt.c: 1209: exp--;
 13102  002288  0100               	movlb	0	; () banked
 13103  00228A  0763               	decf	i2__doprnt@exp& (0+255),f,b
 13104  00228C  A0D8               	btfss	status,0,c
 13105  00228E  0764               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 13106  002290                     i2l9247:
 13107                           
 13108                           ; BSR set to: 0
 13109  002290  0100               	movlb	0	; () banked
 13110  002292  BF64               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 13111  002294  D007               	goto	i2l9249
 13112  002296  0100               	movlb	0	; () banked
 13113  002298  5164               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 13114  00229A  E1C4               	bnz	i2l9237
 13115  00229C  0100               	movlb	0	; () banked
 13116  00229E  0563               	decf	i2__doprnt@exp& (0+255),w,b
 13117  0022A0  B0D8               	btfsc	status,0,c
 13118  0022A2  D7C0               	goto	i2l9237
 13119  0022A4                     i2l9249:
 13120                           
 13121                           ; BSR set to: 0
 13122                           ;doprnt.c: 1210: }
 13123                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 13124  0022A4  0100               	movlb	0	; () banked
 13125  0022A6  BF75               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 13126  0022A8  D00C               	goto	i2l471
 13127  0022AA  0100               	movlb	0	; () banked
 13128  0022AC  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 13129  0022AE  E105               	bnz	i2u1526_40
 13130  0022B0  0E09               	movlw	9
 13131  0022B2  0100               	movlb	0	; () banked
 13132  0022B4  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 13133  0022B6  A0D8               	btfss	status,0,c
 13134  0022B8  D004               	goto	i2l471
 13135  0022BA                     i2u1526_40:
 13136                           
 13137                           ; BSR set to: 0
 13138                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 13139  0022BA  0E08               	movlw	8
 13140  0022BC  0100               	movlb	0	; () banked
 13141  0022BE  6F76               	movwf	i2__doprnt@c& (0+255),b
 13142  0022C0  D002               	goto	i2l9253
 13143  0022C2                     i2l471:
 13144                           
 13145                           ; BSR set to: 0
 13146                           ;doprnt.c: 1213: else
 13147                           ;doprnt.c: 1214: c = prec;
 13148  0022C2  C074  F076         	movff	i2__doprnt@prec,i2__doprnt@c
 13149  0022C6                     i2l9253:
 13150                           
 13151                           ; BSR set to: 0
 13152                           ;doprnt.c: 1215: prec -= c;
 13153  0022C6  0100               	movlb	0	; () banked
 13154  0022C8  5176               	movf	i2__doprnt@c& (0+255),w,b
 13155  0022CA  0100               	movlb	0	; () banked
 13156  0022CC  5F74               	subwf	i2__doprnt@prec& (0+255),f,b
 13157  0022CE  0E00               	movlw	0
 13158  0022D0  0100               	movlb	0	; () banked
 13159  0022D2  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 13160  0022D4  0EFF               	movlw	255
 13161  0022D6  0100               	movlb	0	; () banked
 13162  0022D8  5B75               	subwfb	(i2__doprnt@prec+1)& (0+255),f,b
 13163                           
 13164                           ; BSR set to: 0
 13165                           ;doprnt.c: 1219: if(c)
 13166  0022DA  0100               	movlb	0	; () banked
 13167  0022DC  5176               	movf	i2__doprnt@c& (0+255),w,b
 13168  0022DE  0100               	movlb	0	; () banked
 13169  0022E0  B4D8               	btfsc	status,2,c
 13170  0022E2  D032               	goto	i2l9265
 13171                           
 13172                           ; BSR set to: 0
 13173                           ;doprnt.c: 1221: if(pb->func) (pb->func('.')); else ((*pb->ptr++ = '.'));
 13174  0022E4  EE20 F002          	lfsr	2,2
 13175  0022E8  5046               	movf	i2__doprnt@pb,w,c
 13176  0022EA  26D9               	addwf	fsr2l,f,c
 13177  0022EC  5047               	movf	i2__doprnt@pb+1,w,c
 13178  0022EE  22DA               	addwfc	fsr2h,f,c
 13179  0022F0  50DE               	movf	postinc2,w,c
 13180  0022F2  10DE               	iorwf	postinc2,w,c
 13181  0022F4  B4D8               	btfsc	status,2,c
 13182  0022F6  D013               	goto	i2l9261
 13183                           
 13184                           ; BSR set to: 0
 13185  0022F8  EE20 F002          	lfsr	2,2
 13186  0022FC  5046               	movf	i2__doprnt@pb,w,c
 13187  0022FE  26D9               	addwf	fsr2l,f,c
 13188  002300  5047               	movf	i2__doprnt@pb+1,w,c
 13189  002302  22DA               	addwfc	fsr2h,f,c
 13190  002304  D801               	call	i2u1529_48
 13191  002306  D020               	goto	i2l9265
 13192  002308                     i2u1529_48:
 13193  002308  0005               	push	
 13194  00230A  6EFA               	movwf	pclath,c
 13195  00230C  50DE               	movf	postinc2,w,c
 13196  00230E  6EFD               	movwf	tosl,c
 13197  002310  50DE               	movf	postinc2,w,c
 13198  002312  6EFE               	movwf	tosh,c
 13199  002314  50F8               	movf	tblptru,w,c
 13200  002316  6EFF               	movwf	tosu,c
 13201  002318  50FA               	movf	pclath,w,c
 13202  00231A  0E2E               	movlw	46
 13203  00231C  0012               	return		;indir
 13204  00231E                     i2l9261:
 13205  00231E  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13206  002322  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13207  002326  CFDE F04C          	movff	postinc2,??i2__doprnt
 13208  00232A  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13209  00232E  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13210  002332  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13211  002336  0E2E               	movlw	46
 13212  002338  6EDF               	movwf	indf2,c
 13213  00233A  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13214  00233E  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13215  002342  2ADE               	incf	postinc2,f,c
 13216  002344  0E00               	movlw	0
 13217  002346  22DD               	addwfc	postdec2,f,c
 13218  002348                     i2l9265:
 13219                           
 13220                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 13221  002348  0100               	movlb	0	; () banked
 13222  00234A  5176               	movf	i2__doprnt@c& (0+255),w,b
 13223  00234C  ECC0  F017         	call	i2_scale
 13224  002350  C030  F060         	movff	?i2_scale,i2__doprnt$1953
 13225  002354  C031  F061         	movff	?i2_scale+1,i2__doprnt$1953+1
 13226  002358  C032  F062         	movff	?i2_scale+2,i2__doprnt$1953+2
 13227                           
 13228                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 13229  00235C  C06D  F024         	movff	i2__doprnt@fval,i2___ftmul@f2
 13230  002360  C06E  F025         	movff	i2__doprnt@fval+1,i2___ftmul@f2+1
 13231  002364  C06F  F026         	movff	i2__doprnt@fval+2,i2___ftmul@f2+2
 13232  002368  C060  F021         	movff	i2__doprnt$1953,i2___ftmul@f1
 13233  00236C  C061  F022         	movff	i2__doprnt$1953+1,i2___ftmul@f1+1
 13234  002370  C062  F023         	movff	i2__doprnt$1953+2,i2___ftmul@f1+2
 13235  002374  EC7D  F025         	call	i2___ftmul	;wreg free
 13236  002378  C021  F037         	movff	?i2___ftmul,i2___fttol@f1
 13237  00237C  C022  F038         	movff	?i2___ftmul+1,i2___fttol@f1+1
 13238  002380  C023  F039         	movff	?i2___ftmul+2,i2___fttol@f1+2
 13239  002384  ECF7  F025         	call	i2___fttol	;wreg free
 13240  002388  C037  F065         	movff	?i2___fttol,i2__doprnt@val
 13241  00238C  C038  F066         	movff	?i2___fttol+1,i2__doprnt@val+1
 13242  002390  C039  F067         	movff	?i2___fttol+2,i2__doprnt@val+2
 13243  002394  C03A  F068         	movff	?i2___fttol+3,i2__doprnt@val+3
 13244                           
 13245                           ;doprnt.c: 1228: while(c--) {
 13246  002398  D09E               	goto	i2l9281
 13247  00239A                     i2l9269:
 13248                           
 13249                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 13250  00239A  C065  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 13251  00239E  C066  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 13252  0023A2  C067  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 13253  0023A6  C068  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 13254  0023AA  0100               	movlb	0	; () banked
 13255  0023AC  5176               	movf	i2__doprnt@c& (0+255),w,b
 13256  0023AE  0D04               	mullw	4
 13257  0023B0  0E01               	movlw	low _dpowers
 13258  0023B2  24F3               	addwf	prodl,w,c
 13259  0023B4  6EF6               	movwf	tblptrl,c
 13260  0023B6  0E06               	movlw	high _dpowers
 13261  0023B8  20F4               	addwfc	prodh,w,c
 13262  0023BA  6EF7               	movwf	tblptrh,c
 13263  0023BC                     	if	0	;There are less than 3 active tblptr bytes
 13264  0023BC                     	endif
 13265  0023BC  0009               	tblrd		*+
 13266  0023BE  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 13267  0023C2  0009               	tblrd		*+
 13268  0023C4  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 13269  0023C8  0009               	tblrd		*+
 13270  0023CA  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 13271  0023CE  000A               	tblrd		*-
 13272  0023D0  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 13273  0023D4  EC84  F029         	call	i2___lldiv	;wreg free
 13274  0023D8  C001  F069         	movff	?i2___lldiv,i2__doprnt@tmpval
 13275  0023DC  C002  F06A         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 13276  0023E0  C003  F06B         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 13277  0023E4  C004  F06C         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 13278                           
 13279                           ;doprnt.c: 1230: tmpval.vd %= 10;
 13280  0023E8  C069  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 13281  0023EC  C06A  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 13282  0023F0  C06B  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 13283  0023F4  C06C  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 13284  0023F8  0E0A               	movlw	10
 13285  0023FA  6E12               	movwf	i2___llmod@divisor,c
 13286  0023FC  0E00               	movlw	0
 13287  0023FE  6E13               	movwf	i2___llmod@divisor+1,c
 13288  002400  0E00               	movlw	0
 13289  002402  6E14               	movwf	i2___llmod@divisor+2,c
 13290  002404  0E00               	movlw	0
 13291  002406  6E15               	movwf	i2___llmod@divisor+3,c
 13292  002408  EC78  F02A         	call	i2___llmod	;wreg free
 13293  00240C  C00E  F069         	movff	?i2___llmod,i2__doprnt@tmpval
 13294  002410  C00F  F06A         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 13295  002414  C010  F06B         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 13296  002418  C011  F06C         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 13297                           
 13298                           ;doprnt.c: 1231: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 13299  00241C  EE20 F002          	lfsr	2,2
 13300  002420  5046               	movf	i2__doprnt@pb,w,c
 13301  002422  26D9               	addwf	fsr2l,f,c
 13302  002424  5047               	movf	i2__doprnt@pb+1,w,c
 13303  002426  22DA               	addwfc	fsr2h,f,c
 13304  002428  50DE               	movf	postinc2,w,c
 13305  00242A  10DE               	iorwf	postinc2,w,c
 13306  00242C  B4D8               	btfsc	status,2,c
 13307  00242E  D015               	goto	i2l9277
 13308  002430  EE20 F002          	lfsr	2,2
 13309  002434  5046               	movf	i2__doprnt@pb,w,c
 13310  002436  26D9               	addwf	fsr2l,f,c
 13311  002438  5047               	movf	i2__doprnt@pb+1,w,c
 13312  00243A  22DA               	addwfc	fsr2h,f,c
 13313  00243C  D801               	call	i2u1531_48
 13314  00243E  D024               	goto	i2l9279
 13315  002440                     i2u1531_48:
 13316  002440  0005               	push	
 13317  002442  6EFA               	movwf	pclath,c
 13318  002444  50DE               	movf	postinc2,w,c
 13319  002446  6EFD               	movwf	tosl,c
 13320  002448  50DE               	movf	postinc2,w,c
 13321  00244A  6EFE               	movwf	tosh,c
 13322  00244C  50F8               	movf	tblptru,w,c
 13323  00244E  6EFF               	movwf	tosu,c
 13324  002450  50FA               	movf	pclath,w,c
 13325  002452  0100               	movlb	0	; () banked
 13326  002454  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 13327  002456  0F30               	addlw	48
 13328  002458  0012               	return		;indir
 13329  00245A                     i2l9277:
 13330  00245A  0100               	movlb	0	; () banked
 13331  00245C  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 13332  00245E  0F30               	addlw	48
 13333  002460  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13334  002464  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13335  002468  CFDE F04C          	movff	postinc2,??i2__doprnt
 13336  00246C  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13337  002470  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13338  002474  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13339  002478  6EDF               	movwf	indf2,c
 13340  00247A  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13341  00247E  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13342  002482  2ADE               	incf	postinc2,f,c
 13343  002484  0E00               	movlw	0
 13344  002486  22DD               	addwfc	postdec2,f,c
 13345  002488                     i2l9279:
 13346                           
 13347                           ;doprnt.c: 1232: val %= dpowers[c];
 13348  002488  C065  F00E         	movff	i2__doprnt@val,i2___llmod@dividend
 13349  00248C  C066  F00F         	movff	i2__doprnt@val+1,i2___llmod@dividend+1
 13350  002490  C067  F010         	movff	i2__doprnt@val+2,i2___llmod@dividend+2
 13351  002494  C068  F011         	movff	i2__doprnt@val+3,i2___llmod@dividend+3
 13352  002498  0100               	movlb	0	; () banked
 13353  00249A  5176               	movf	i2__doprnt@c& (0+255),w,b
 13354  00249C  0D04               	mullw	4
 13355  00249E  0E01               	movlw	low _dpowers
 13356  0024A0  24F3               	addwf	prodl,w,c
 13357  0024A2  6EF6               	movwf	tblptrl,c
 13358  0024A4  0E06               	movlw	high _dpowers
 13359  0024A6  20F4               	addwfc	prodh,w,c
 13360  0024A8  6EF7               	movwf	tblptrh,c
 13361  0024AA                     	if	0	;There are less than 3 active tblptr bytes
 13362  0024AA                     	endif
 13363  0024AA  0009               	tblrd		*+
 13364  0024AC  CFF5 F012          	movff	tablat,i2___llmod@divisor
 13365  0024B0  0009               	tblrd		*+
 13366  0024B2  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 13367  0024B6  0009               	tblrd		*+
 13368  0024B8  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 13369  0024BC  000A               	tblrd		*-
 13370  0024BE  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 13371  0024C2  EC78  F02A         	call	i2___llmod
 13372  0024C6  C00E  F065         	movff	?i2___llmod,i2__doprnt@val
 13373  0024CA  C00F  F066         	movff	?i2___llmod+1,i2__doprnt@val+1
 13374  0024CE  C010  F067         	movff	?i2___llmod+2,i2__doprnt@val+2
 13375  0024D2  C011  F068         	movff	?i2___llmod+3,i2__doprnt@val+3
 13376  0024D6                     i2l9281:
 13377  0024D6  0100               	movlb	0	; () banked
 13378  0024D8  0776               	decf	i2__doprnt@c& (0+255),f,b
 13379  0024DA  0100               	movlb	0	; () banked
 13380  0024DC  2976               	incf	i2__doprnt@c& (0+255),w,b
 13381  0024DE  B4D8               	btfsc	status,2,c
 13382  0024E0  D037               	goto	i2l9293
 13383  0024E2  D75B               	goto	i2l9269
 13384  0024E4                     i2l9283:
 13385                           
 13386                           ; BSR set to: 0
 13387                           ;doprnt.c: 1236: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 13388  0024E4  EE20 F002          	lfsr	2,2
 13389  0024E8  5046               	movf	i2__doprnt@pb,w,c
 13390  0024EA  26D9               	addwf	fsr2l,f,c
 13391  0024EC  5047               	movf	i2__doprnt@pb+1,w,c
 13392  0024EE  22DA               	addwfc	fsr2h,f,c
 13393  0024F0  50DE               	movf	postinc2,w,c
 13394  0024F2  10DE               	iorwf	postinc2,w,c
 13395  0024F4  B4D8               	btfsc	status,2,c
 13396  0024F6  D013               	goto	i2l9287
 13397                           
 13398                           ; BSR set to: 0
 13399  0024F8  EE20 F002          	lfsr	2,2
 13400  0024FC  5046               	movf	i2__doprnt@pb,w,c
 13401  0024FE  26D9               	addwf	fsr2l,f,c
 13402  002500  5047               	movf	i2__doprnt@pb+1,w,c
 13403  002502  22DA               	addwfc	fsr2h,f,c
 13404  002504  D801               	call	i2u1534_48
 13405  002506  D020               	goto	i2l9291
 13406  002508                     i2u1534_48:
 13407  002508  0005               	push	
 13408  00250A  6EFA               	movwf	pclath,c
 13409  00250C  50DE               	movf	postinc2,w,c
 13410  00250E  6EFD               	movwf	tosl,c
 13411  002510  50DE               	movf	postinc2,w,c
 13412  002512  6EFE               	movwf	tosh,c
 13413  002514  50F8               	movf	tblptru,w,c
 13414  002516  6EFF               	movwf	tosu,c
 13415  002518  50FA               	movf	pclath,w,c
 13416  00251A  0E30               	movlw	48
 13417  00251C  0012               	return		;indir
 13418  00251E                     i2l9287:
 13419  00251E  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13420  002522  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13421  002526  CFDE F04C          	movff	postinc2,??i2__doprnt
 13422  00252A  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13423  00252E  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13424  002532  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13425  002536  0E30               	movlw	48
 13426  002538  6EDF               	movwf	indf2,c
 13427  00253A  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13428  00253E  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13429  002542  2ADE               	incf	postinc2,f,c
 13430  002544  0E00               	movlw	0
 13431  002546  22DD               	addwfc	postdec2,f,c
 13432  002548                     i2l9291:
 13433                           
 13434                           ;doprnt.c: 1237: prec--;
 13435  002548  0100               	movlb	0	; () banked
 13436  00254A  0774               	decf	i2__doprnt@prec& (0+255),f,b
 13437  00254C  A0D8               	btfss	status,0,c
 13438  00254E  0775               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 13439  002550                     i2l9293:
 13440                           
 13441                           ; BSR set to: 0
 13442  002550  0100               	movlb	0	; () banked
 13443  002552  5174               	movf	i2__doprnt@prec& (0+255),w,b
 13444  002554  0100               	movlb	0	; () banked
 13445  002556  1175               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 13446  002558  B4D8               	btfsc	status,2,c
 13447  00255A  D2A8               	goto	i2l9417
 13448  00255C  D7C3               	goto	i2l9283
 13449  00255E                     i2l419:
 13450                           
 13451                           ; BSR set to: 0
 13452                           ;doprnt.c: 1246: }
 13453                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
 13454  00255E  0100               	movlb	0	; () banked
 13455  002560  BD72               	btfsc	i2__doprnt@flag& (0+255),6,b
 13456  002562  D046               	goto	i2l486
 13457                           
 13458                           ; BSR set to: 0
 13459                           ;doprnt.c: 1253: {
 13460                           ;doprnt.c: 1255: if(flag & 0x10)
 13461  002564  0100               	movlb	0	; () banked
 13462  002566  A972               	btfss	i2__doprnt@flag& (0+255),4,b
 13463  002568  D019               	goto	i2l9299
 13464                           
 13465                           ; BSR set to: 0
 13466                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 13467  00256A  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 13468  00256E  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 13469  002572  CFDF F04C          	movff	indf2,??i2__doprnt
 13470  002576  0E04               	movlw	4
 13471  002578  26DE               	addwf	postinc2,f,c
 13472  00257A  CFDF F04D          	movff	indf2,??i2__doprnt+1
 13473  00257E  0E00               	movlw	0
 13474  002580  22DD               	addwfc	postdec2,f,c
 13475  002582  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13476  002586  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13477  00258A  CFDE F065          	movff	postinc2,i2__doprnt@val
 13478  00258E  CFDE F066          	movff	postinc2,i2__doprnt@val+1
 13479  002592  CFDE F067          	movff	postinc2,i2__doprnt@val+2
 13480  002596  CFDE F068          	movff	postinc2,i2__doprnt@val+3
 13481  00259A  D01A               	goto	i2l9301
 13482  00259C                     i2l9299:
 13483                           
 13484                           ; BSR set to: 0
 13485                           ;doprnt.c: 1257: else
 13486                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 13487  00259C  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 13488  0025A0  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 13489  0025A4  CFDF F04C          	movff	indf2,??i2__doprnt
 13490  0025A8  0E02               	movlw	2
 13491  0025AA  26DE               	addwf	postinc2,f,c
 13492  0025AC  CFDF F04D          	movff	indf2,??i2__doprnt+1
 13493  0025B0  0E00               	movlw	0
 13494  0025B2  22DD               	addwfc	postdec2,f,c
 13495  0025B4  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13496  0025B8  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13497  0025BC  CFDE F065          	movff	postinc2,i2__doprnt@val
 13498  0025C0  CFDD F066          	movff	postdec2,i2__doprnt@val+1
 13499  0025C4  0100               	movlb	0	; () banked
 13500  0025C6  0E00               	movlw	0
 13501  0025C8  BF66               	btfsc	(i2__doprnt@val+1)& (0+255),7,b
 13502  0025CA  0EFF               	movlw	-1
 13503  0025CC  6F67               	movwf	(i2__doprnt@val+2)& (0+255),b
 13504  0025CE  6F68               	movwf	(i2__doprnt@val+3)& (0+255),b
 13505  0025D0                     i2l9301:
 13506                           
 13507                           ; BSR set to: 0
 13508                           ;doprnt.c: 1261: if((long)val < 0) {
 13509  0025D0  0100               	movlb	0	; () banked
 13510  0025D2  AF68               	btfss	(i2__doprnt@val+3)& (0+255),7,b
 13511  0025D4  D044               	goto	i2l9311
 13512                           
 13513                           ; BSR set to: 0
 13514                           ;doprnt.c: 1262: flag |= 0x03;
 13515  0025D6  0E03               	movlw	3
 13516  0025D8  0100               	movlb	0	; () banked
 13517  0025DA  1372               	iorwf	i2__doprnt@flag& (0+255),f,b
 13518                           
 13519                           ; BSR set to: 0
 13520                           ;doprnt.c: 1263: val = -val;
 13521  0025DC  0100               	movlb	0	; () banked
 13522  0025DE  1F68               	comf	(i2__doprnt@val+3)& (0+255),f,b
 13523  0025E0  1F67               	comf	(i2__doprnt@val+2)& (0+255),f,b
 13524  0025E2  1F66               	comf	(i2__doprnt@val+1)& (0+255),f,b
 13525  0025E4  6D65               	negf	i2__doprnt@val& (0+255),b
 13526  0025E6  0E00               	movlw	0
 13527  0025E8  2366               	addwfc	(i2__doprnt@val+1)& (0+255),f,b
 13528  0025EA  2367               	addwfc	(i2__doprnt@val+2)& (0+255),f,b
 13529  0025EC  2368               	addwfc	(i2__doprnt@val+3)& (0+255),f,b
 13530                           
 13531                           ; BSR set to: 0
 13532                           ;doprnt.c: 1264: }
 13533                           ;doprnt.c: 1266: }
 13534  0025EE  D037               	goto	i2l9311
 13535  0025F0                     i2l486:
 13536                           
 13537                           ; BSR set to: 0
 13538                           ;doprnt.c: 1268: else
 13539                           ;doprnt.c: 1273: {
 13540                           ;doprnt.c: 1281: if(flag & 0x10)
 13541  0025F0  0100               	movlb	0	; () banked
 13542  0025F2  A972               	btfss	i2__doprnt@flag& (0+255),4,b
 13543  0025F4  D019               	goto	i2l9309
 13544                           
 13545                           ; BSR set to: 0
 13546                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 13547  0025F6  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 13548  0025FA  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 13549  0025FE  CFDF F04C          	movff	indf2,??i2__doprnt
 13550  002602  0E04               	movlw	4
 13551  002604  26DE               	addwf	postinc2,f,c
 13552  002606  CFDF F04D          	movff	indf2,??i2__doprnt+1
 13553  00260A  0E00               	movlw	0
 13554  00260C  22DD               	addwfc	postdec2,f,c
 13555  00260E  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13556  002612  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13557  002616  CFDE F065          	movff	postinc2,i2__doprnt@val
 13558  00261A  CFDE F066          	movff	postinc2,i2__doprnt@val+1
 13559  00261E  CFDE F067          	movff	postinc2,i2__doprnt@val+2
 13560  002622  CFDE F068          	movff	postinc2,i2__doprnt@val+3
 13561  002626  D01B               	goto	i2l9311
 13562  002628                     i2l9309:
 13563                           
 13564                           ; BSR set to: 0
 13565                           ;doprnt.c: 1283: else
 13566                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 13567  002628  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 13568  00262C  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 13569  002630  CFDF F04C          	movff	indf2,??i2__doprnt
 13570  002634  0E02               	movlw	2
 13571  002636  26DE               	addwf	postinc2,f,c
 13572  002638  CFDF F04D          	movff	indf2,??i2__doprnt+1
 13573  00263C  0E00               	movlw	0
 13574  00263E  22DD               	addwfc	postdec2,f,c
 13575  002640  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13576  002644  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13577  002648  CFDE F04E          	movff	postinc2,??i2__doprnt+2
 13578  00264C  CFDD F04F          	movff	postdec2,??i2__doprnt+3
 13579  002650  C04E  F065         	movff	??i2__doprnt+2,i2__doprnt@val
 13580  002654  C04F  F066         	movff	??i2__doprnt+3,i2__doprnt@val+1
 13581  002658  0100               	movlb	0	; () banked
 13582  00265A  6B67               	clrf	(i2__doprnt@val+2)& (0+255),b
 13583  00265C  6B68               	clrf	(i2__doprnt@val+3)& (0+255),b
 13584  00265E                     i2l9311:
 13585                           
 13586                           ; BSR set to: 0
 13587                           ;doprnt.c: 1287: }
 13588                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 13589  00265E  0100               	movlb	0	; () banked
 13590  002660  5174               	movf	i2__doprnt@prec& (0+255),w,b
 13591  002662  0100               	movlb	0	; () banked
 13592  002664  1175               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 13593  002666  A4D8               	btfss	status,2,c
 13594  002668  D00D               	goto	i2l9317
 13595                           
 13596                           ; BSR set to: 0
 13597  00266A  0100               	movlb	0	; () banked
 13598  00266C  5165               	movf	i2__doprnt@val& (0+255),w,b
 13599  00266E  0100               	movlb	0	; () banked
 13600  002670  1166               	iorwf	(i2__doprnt@val+1)& (0+255),w,b
 13601  002672  0100               	movlb	0	; () banked
 13602  002674  1167               	iorwf	(i2__doprnt@val+2)& (0+255),w,b
 13603  002676  0100               	movlb	0	; () banked
 13604  002678  1168               	iorwf	(i2__doprnt@val+3)& (0+255),w,b
 13605  00267A  A4D8               	btfss	status,2,c
 13606  00267C  D003               	goto	i2l9317
 13607                           
 13608                           ; BSR set to: 0
 13609                           ;doprnt.c: 1291: prec++;
 13610  00267E  0100               	movlb	0	; () banked
 13611  002680  4B74               	infsnz	i2__doprnt@prec& (0+255),f,b
 13612  002682  2B75               	incf	(i2__doprnt@prec+1)& (0+255),f,b
 13613  002684                     i2l9317:
 13614                           
 13615                           ; BSR set to: 0
 13616                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 13617  002684  0E01               	movlw	1
 13618  002686  0100               	movlb	0	; () banked
 13619  002688  6F76               	movwf	i2__doprnt@c& (0+255),b
 13620  00268A                     i2l9319:
 13621                           
 13622                           ; BSR set to: 0
 13623  00268A  0E0A               	movlw	10
 13624  00268C  0100               	movlb	0	; () banked
 13625  00268E  1976               	xorwf	i2__doprnt@c& (0+255),w,b
 13626  002690  B4D8               	btfsc	status,2,c
 13627  002692  D01E               	goto	i2l9331
 13628                           
 13629                           ; BSR set to: 0
 13630                           ;doprnt.c: 1306: if(val < dpowers[c])
 13631                           
 13632                           ; BSR set to: 0
 13633                           
 13634                           ; BSR set to: 0
 13635  002694  0100               	movlb	0	; () banked
 13636  002696  5176               	movf	i2__doprnt@c& (0+255),w,b
 13637  002698  0D04               	mullw	4
 13638  00269A  0E01               	movlw	low _dpowers
 13639  00269C  24F3               	addwf	prodl,w,c
 13640  00269E  6EF6               	movwf	tblptrl,c
 13641  0026A0  0E06               	movlw	high _dpowers
 13642  0026A2  20F4               	addwfc	prodh,w,c
 13643  0026A4  6EF7               	movwf	tblptrh,c
 13644  0026A6                     	if	0	;There are less than 3 active tblptr bytes
 13645  0026A6                     	endif
 13646  0026A6  0009               	tblrd		*+
 13647  0026A8  50F5               	movf	tablat,w,c
 13648  0026AA  0100               	movlb	0	; () banked
 13649  0026AC  5D65               	subwf	i2__doprnt@val& (0+255),w,b
 13650  0026AE  0009               	tblrd		*+
 13651  0026B0  50F5               	movf	tablat,w,c
 13652  0026B2  0100               	movlb	0	; () banked
 13653  0026B4  5966               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 13654  0026B6  0009               	tblrd		*+
 13655  0026B8  50F5               	movf	tablat,w,c
 13656  0026BA  0100               	movlb	0	; () banked
 13657  0026BC  5967               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 13658  0026BE  0009               	tblrd		*+
 13659  0026C0  50F5               	movf	tablat,w,c
 13660  0026C2  0100               	movlb	0	; () banked
 13661  0026C4  5968               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 13662  0026C6  A0D8               	btfss	status,0,c
 13663  0026C8  D003               	goto	i2l9331
 13664                           
 13665                           ; BSR set to: 0
 13666                           
 13667                           ; BSR set to: 0
 13668                           
 13669                           ; BSR set to: 0
 13670                           ;doprnt.c: 1307: break;
 13671  0026CA  0100               	movlb	0	; () banked
 13672  0026CC  2B76               	incf	i2__doprnt@c& (0+255),f,b
 13673  0026CE  D7DD               	goto	i2l9319
 13674  0026D0                     i2l9331:
 13675                           
 13676                           ; BSR set to: 0
 13677                           ;doprnt.c: 1339: if(c < prec)
 13678  0026D0  0E80               	movlw	128
 13679  0026D2  0100               	movlb	0	; () banked
 13680  0026D4  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 13681  0026D6  0E7F               	movlw	127
 13682  0026D8  6E4C               	movwf	??i2__doprnt& (0+255),c
 13683  0026DA  0100               	movlb	0	; () banked
 13684  0026DC  5174               	movf	i2__doprnt@prec& (0+255),w,b
 13685  0026DE  0100               	movlb	0	; () banked
 13686  0026E0  5D76               	subwf	i2__doprnt@c& (0+255),w,b
 13687  0026E2  0100               	movlb	0	; () banked
 13688  0026E4  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 13689  0026E6  0A80               	xorlw	128
 13690  0026E8  584C               	subwfb	??i2__doprnt& (0+255),w,c
 13691  0026EA  B0D8               	btfsc	status,0,c
 13692  0026EC  D003               	goto	i2l9335
 13693                           
 13694                           ; BSR set to: 0
 13695                           ;doprnt.c: 1340: c = prec;
 13696  0026EE  C074  F076         	movff	i2__doprnt@prec,i2__doprnt@c
 13697  0026F2  D016               	goto	i2l9339
 13698  0026F4                     i2l9335:
 13699                           
 13700                           ; BSR set to: 0
 13701                           ;doprnt.c: 1341: else if(prec < c)
 13702  0026F4  0100               	movlb	0	; () banked
 13703  0026F6  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 13704  0026F8  0A80               	xorlw	128
 13705  0026FA  6E4C               	movwf	??i2__doprnt& (0+255),c
 13706  0026FC  0100               	movlb	0	; () banked
 13707  0026FE  5176               	movf	i2__doprnt@c& (0+255),w,b
 13708  002700  0100               	movlb	0	; () banked
 13709  002702  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 13710  002704  0E80               	movlw	128
 13711  002706  0100               	movlb	0	; () banked
 13712  002708  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 13713  00270A  0E7F               	movlw	127
 13714  00270C  584C               	subwfb	??i2__doprnt& (0+255),w,c
 13715  00270E  B0D8               	btfsc	status,0,c
 13716  002710  D007               	goto	i2l9339
 13717                           
 13718                           ; BSR set to: 0
 13719                           ;doprnt.c: 1342: prec = c;
 13720  002712  0100               	movlb	0	; () banked
 13721  002714  5176               	movf	i2__doprnt@c& (0+255),w,b
 13722  002716  0100               	movlb	0	; () banked
 13723  002718  6F74               	movwf	i2__doprnt@prec& (0+255),b
 13724  00271A  6B75               	clrf	(i2__doprnt@prec+1)& (0+255),b
 13725  00271C  BF74               	btfsc	i2__doprnt@prec& (0+255),7,b
 13726  00271E  0775               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 13727  002720                     i2l9339:
 13728                           
 13729                           ; BSR set to: 0
 13730                           ;doprnt.c: 1345: if(width && flag & 0x03)
 13731  002720  0100               	movlb	0	; () banked
 13732  002722  5170               	movf	i2__doprnt@width& (0+255),w,b
 13733  002724  0100               	movlb	0	; () banked
 13734  002726  1171               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 13735  002728  B4D8               	btfsc	status,2,c
 13736  00272A  D010               	goto	i2l9345
 13737                           
 13738                           ; BSR set to: 0
 13739  00272C  0E03               	movlw	3
 13740  00272E  0100               	movlb	0	; () banked
 13741  002730  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 13742  002732  6E4C               	movwf	??i2__doprnt& (0+255),c
 13743  002734  0E00               	movlw	0
 13744  002736  0100               	movlb	0	; () banked
 13745  002738  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 13746  00273A  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 13747  00273C  504C               	movf	??i2__doprnt,w,c
 13748  00273E  104D               	iorwf	??i2__doprnt+1,w,c
 13749  002740  B4D8               	btfsc	status,2,c
 13750  002742  D004               	goto	i2l9345
 13751                           
 13752                           ; BSR set to: 0
 13753                           ;doprnt.c: 1346: width--;
 13754  002744  0100               	movlb	0	; () banked
 13755  002746  0770               	decf	i2__doprnt@width& (0+255),f,b
 13756  002748  A0D8               	btfss	status,0,c
 13757  00274A  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 13758  00274C                     i2l9345:
 13759                           
 13760                           ; BSR set to: 0
 13761                           ;doprnt.c: 1348: if(flag & 0x4000) {
 13762  00274C  0100               	movlb	0	; () banked
 13763  00274E  AD73               	btfss	(i2__doprnt@flag+1)& (0+255),6,b
 13764  002750  D01C               	goto	i2l9353
 13765                           
 13766                           ; BSR set to: 0
 13767                           ;doprnt.c: 1349: if(width > prec)
 13768  002752  0100               	movlb	0	; () banked
 13769  002754  5170               	movf	i2__doprnt@width& (0+255),w,b
 13770  002756  0100               	movlb	0	; () banked
 13771  002758  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 13772  00275A  0100               	movlb	0	; () banked
 13773  00275C  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 13774  00275E  0A80               	xorlw	128
 13775  002760  6E4C               	movwf	??i2__doprnt& (0+255),c
 13776  002762  0100               	movlb	0	; () banked
 13777  002764  5171               	movf	(i2__doprnt@width+1)& (0+255),w,b
 13778  002766  0A80               	xorlw	128
 13779  002768  584C               	subwfb	??i2__doprnt& (0+255),w,c
 13780  00276A  B0D8               	btfsc	status,0,c
 13781  00276C  D009               	goto	i2l9351
 13782                           
 13783                           ; BSR set to: 0
 13784                           ;doprnt.c: 1350: width -= prec;
 13785  00276E  0100               	movlb	0	; () banked
 13786  002770  5174               	movf	i2__doprnt@prec& (0+255),w,b
 13787  002772  0100               	movlb	0	; () banked
 13788  002774  5F70               	subwf	i2__doprnt@width& (0+255),f,b
 13789  002776  0100               	movlb	0	; () banked
 13790  002778  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 13791  00277A  0100               	movlb	0	; () banked
 13792  00277C  5B71               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 13793  00277E  D005               	goto	i2l9353
 13794  002780                     i2l9351:
 13795                           
 13796                           ; BSR set to: 0
 13797                           ;doprnt.c: 1351: else
 13798                           ;doprnt.c: 1352: width = 0;
 13799  002780  0E00               	movlw	0
 13800  002782  0100               	movlb	0	; () banked
 13801  002784  6F71               	movwf	(i2__doprnt@width+1)& (0+255),b
 13802  002786  0E00               	movlw	0
 13803  002788  6F70               	movwf	i2__doprnt@width& (0+255),b
 13804  00278A                     i2l9353:
 13805                           
 13806                           ; BSR set to: 0
 13807                           ;doprnt.c: 1353: }
 13808                           ;doprnt.c: 1381: if(width > c)
 13809  00278A  0E80               	movlw	128
 13810  00278C  0100               	movlb	0	; () banked
 13811  00278E  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 13812  002790  0E7F               	movlw	127
 13813  002792  6E4C               	movwf	??i2__doprnt& (0+255),c
 13814  002794  0100               	movlb	0	; () banked
 13815  002796  5170               	movf	i2__doprnt@width& (0+255),w,b
 13816  002798  0100               	movlb	0	; () banked
 13817  00279A  5D76               	subwf	i2__doprnt@c& (0+255),w,b
 13818  00279C  0100               	movlb	0	; () banked
 13819  00279E  5171               	movf	(i2__doprnt@width+1)& (0+255),w,b
 13820  0027A0  0A80               	xorlw	128
 13821  0027A2  584C               	subwfb	??i2__doprnt& (0+255),w,c
 13822  0027A4  B0D8               	btfsc	status,0,c
 13823  0027A6  D00B               	goto	i2l9357
 13824                           
 13825                           ; BSR set to: 0
 13826                           ;doprnt.c: 1382: width -= c;
 13827  0027A8  0100               	movlb	0	; () banked
 13828  0027AA  5176               	movf	i2__doprnt@c& (0+255),w,b
 13829  0027AC  0100               	movlb	0	; () banked
 13830  0027AE  5F70               	subwf	i2__doprnt@width& (0+255),f,b
 13831  0027B0  0E00               	movlw	0
 13832  0027B2  0100               	movlb	0	; () banked
 13833  0027B4  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 13834  0027B6  0EFF               	movlw	255
 13835  0027B8  0100               	movlb	0	; () banked
 13836  0027BA  5B71               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 13837  0027BC  D005               	goto	i2l9359
 13838  0027BE                     i2l9357:
 13839                           
 13840                           ; BSR set to: 0
 13841                           ;doprnt.c: 1383: else
 13842                           ;doprnt.c: 1384: width = 0;
 13843  0027BE  0E00               	movlw	0
 13844  0027C0  0100               	movlb	0	; () banked
 13845  0027C2  6F71               	movwf	(i2__doprnt@width+1)& (0+255),b
 13846  0027C4  0E00               	movlw	0
 13847  0027C6  6F70               	movwf	i2__doprnt@width& (0+255),b
 13848  0027C8                     i2l9359:
 13849                           
 13850                           ; BSR set to: 0
 13851                           ;doprnt.c: 1387: if(flag & 0x04) {
 13852  0027C8  0100               	movlb	0	; () banked
 13853  0027CA  A572               	btfss	i2__doprnt@flag& (0+255),2,b
 13854  0027CC  D07B               	goto	i2l9383
 13855                           
 13856                           ; BSR set to: 0
 13857                           ;doprnt.c: 1392: if(flag & 0x03)
 13858  0027CE  0E03               	movlw	3
 13859  0027D0  0100               	movlb	0	; () banked
 13860  0027D2  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 13861  0027D4  6E4C               	movwf	??i2__doprnt& (0+255),c
 13862  0027D6  0E00               	movlw	0
 13863  0027D8  0100               	movlb	0	; () banked
 13864  0027DA  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 13865  0027DC  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 13866  0027DE  504C               	movf	??i2__doprnt,w,c
 13867  0027E0  104D               	iorwf	??i2__doprnt+1,w,c
 13868  0027E2  B4D8               	btfsc	status,2,c
 13869  0027E4  D032               	goto	i2l9371
 13870                           
 13871                           ; BSR set to: 0
 13872                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 13873  0027E6  EE20 F002          	lfsr	2,2
 13874  0027EA  5046               	movf	i2__doprnt@pb,w,c
 13875  0027EC  26D9               	addwf	fsr2l,f,c
 13876  0027EE  5047               	movf	i2__doprnt@pb+1,w,c
 13877  0027F0  22DA               	addwfc	fsr2h,f,c
 13878  0027F2  50DE               	movf	postinc2,w,c
 13879  0027F4  10DE               	iorwf	postinc2,w,c
 13880  0027F6  B4D8               	btfsc	status,2,c
 13881  0027F8  D013               	goto	i2l9367
 13882                           
 13883                           ; BSR set to: 0
 13884  0027FA  EE20 F002          	lfsr	2,2
 13885  0027FE  5046               	movf	i2__doprnt@pb,w,c
 13886  002800  26D9               	addwf	fsr2l,f,c
 13887  002802  5047               	movf	i2__doprnt@pb+1,w,c
 13888  002804  22DA               	addwfc	fsr2h,f,c
 13889  002806  D801               	call	i2u1555_48
 13890  002808  D020               	goto	i2l9371
 13891  00280A                     i2u1555_48:
 13892  00280A  0005               	push	
 13893  00280C  6EFA               	movwf	pclath,c
 13894  00280E  50DE               	movf	postinc2,w,c
 13895  002810  6EFD               	movwf	tosl,c
 13896  002812  50DE               	movf	postinc2,w,c
 13897  002814  6EFE               	movwf	tosh,c
 13898  002816  50F8               	movf	tblptru,w,c
 13899  002818  6EFF               	movwf	tosu,c
 13900  00281A  50FA               	movf	pclath,w,c
 13901  00281C  0E2D               	movlw	45
 13902  00281E  0012               	return		;indir
 13903  002820                     i2l9367:
 13904  002820  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13905  002824  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13906  002828  CFDE F04C          	movff	postinc2,??i2__doprnt
 13907  00282C  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13908  002830  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13909  002834  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13910  002838  0E2D               	movlw	45
 13911  00283A  6EDF               	movwf	indf2,c
 13912  00283C  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13913  002840  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13914  002844  2ADE               	incf	postinc2,f,c
 13915  002846  0E00               	movlw	0
 13916  002848  22DD               	addwfc	postdec2,f,c
 13917  00284A                     i2l9371:
 13918                           
 13919                           ;doprnt.c: 1415: if(width)
 13920  00284A  0100               	movlb	0	; () banked
 13921  00284C  5170               	movf	i2__doprnt@width& (0+255),w,b
 13922  00284E  0100               	movlb	0	; () banked
 13923  002850  1171               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 13924  002852  B4D8               	btfsc	status,2,c
 13925  002854  D120               	goto	i2l9415
 13926                           
 13927                           ; BSR set to: 0
 13928                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 13929                           
 13930                           ; BSR set to: 0
 13931                           
 13932                           ;doprnt.c: 1416: do
 13933  002856  EE20 F002          	lfsr	2,2
 13934  00285A  5046               	movf	i2__doprnt@pb,w,c
 13935  00285C  26D9               	addwf	fsr2l,f,c
 13936  00285E  5047               	movf	i2__doprnt@pb+1,w,c
 13937  002860  22DA               	addwfc	fsr2h,f,c
 13938  002862  50DE               	movf	postinc2,w,c
 13939  002864  10DE               	iorwf	postinc2,w,c
 13940  002866  B4D8               	btfsc	status,2,c
 13941  002868  D013               	goto	i2l9377
 13942                           
 13943                           ; BSR set to: 0
 13944  00286A  EE20 F002          	lfsr	2,2
 13945  00286E  5046               	movf	i2__doprnt@pb,w,c
 13946  002870  26D9               	addwf	fsr2l,f,c
 13947  002872  5047               	movf	i2__doprnt@pb+1,w,c
 13948  002874  22DA               	addwfc	fsr2h,f,c
 13949  002876  D801               	call	i2u1558_48
 13950  002878  D020               	goto	i2l9381
 13951  00287A                     i2u1558_48:
 13952  00287A  0005               	push	
 13953  00287C  6EFA               	movwf	pclath,c
 13954  00287E  50DE               	movf	postinc2,w,c
 13955  002880  6EFD               	movwf	tosl,c
 13956  002882  50DE               	movf	postinc2,w,c
 13957  002884  6EFE               	movwf	tosh,c
 13958  002886  50F8               	movf	tblptru,w,c
 13959  002888  6EFF               	movwf	tosu,c
 13960  00288A  50FA               	movf	pclath,w,c
 13961  00288C  0E30               	movlw	48
 13962  00288E  0012               	return		;indir
 13963  002890                     i2l9377:
 13964  002890  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13965  002894  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13966  002898  CFDE F04C          	movff	postinc2,??i2__doprnt
 13967  00289C  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13968  0028A0  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13969  0028A4  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13970  0028A8  0E30               	movlw	48
 13971  0028AA  6EDF               	movwf	indf2,c
 13972  0028AC  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13973  0028B0  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13974  0028B4  2ADE               	incf	postinc2,f,c
 13975  0028B6  0E00               	movlw	0
 13976  0028B8  22DD               	addwfc	postdec2,f,c
 13977  0028BA                     i2l9381:
 13978                           
 13979                           ;doprnt.c: 1418: while(--width);
 13980  0028BA  0100               	movlb	0	; () banked
 13981  0028BC  0770               	decf	i2__doprnt@width& (0+255),f,b
 13982  0028BE  A0D8               	btfss	status,0,c
 13983  0028C0  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 13984  0028C2  D7C3               	goto	i2l9371
 13985  0028C4                     i2l9383:
 13986                           
 13987                           ; BSR set to: 0
 13988                           ;doprnt.c: 1422: {
 13989                           ;doprnt.c: 1424: if(width
 13990                           ;doprnt.c: 1428: )
 13991  0028C4  0100               	movlb	0	; () banked
 13992  0028C6  5170               	movf	i2__doprnt@width& (0+255),w,b
 13993  0028C8  0100               	movlb	0	; () banked
 13994  0028CA  1171               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 13995  0028CC  B4D8               	btfsc	status,2,c
 13996  0028CE  D03C               	goto	i2l9395
 13997  0028D0                     i2l9385:
 13998                           
 13999                           ; BSR set to: 0
 14000                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 14001  0028D0  EE20 F002          	lfsr	2,2
 14002  0028D4  5046               	movf	i2__doprnt@pb,w,c
 14003  0028D6  26D9               	addwf	fsr2l,f,c
 14004  0028D8  5047               	movf	i2__doprnt@pb+1,w,c
 14005  0028DA  22DA               	addwfc	fsr2h,f,c
 14006  0028DC  50DE               	movf	postinc2,w,c
 14007  0028DE  10DE               	iorwf	postinc2,w,c
 14008  0028E0  B4D8               	btfsc	status,2,c
 14009  0028E2  D013               	goto	i2l9389
 14010                           
 14011                           ; BSR set to: 0
 14012  0028E4  EE20 F002          	lfsr	2,2
 14013  0028E8  5046               	movf	i2__doprnt@pb,w,c
 14014  0028EA  26D9               	addwf	fsr2l,f,c
 14015  0028EC  5047               	movf	i2__doprnt@pb+1,w,c
 14016  0028EE  22DA               	addwfc	fsr2h,f,c
 14017  0028F0  D801               	call	i2u1562_48
 14018  0028F2  D020               	goto	i2l9393
 14019  0028F4                     i2u1562_48:
 14020  0028F4  0005               	push	
 14021  0028F6  6EFA               	movwf	pclath,c
 14022  0028F8  50DE               	movf	postinc2,w,c
 14023  0028FA  6EFD               	movwf	tosl,c
 14024  0028FC  50DE               	movf	postinc2,w,c
 14025  0028FE  6EFE               	movwf	tosh,c
 14026  002900  50F8               	movf	tblptru,w,c
 14027  002902  6EFF               	movwf	tosu,c
 14028  002904  50FA               	movf	pclath,w,c
 14029  002906  0E20               	movlw	32
 14030  002908  0012               	return		;indir
 14031  00290A                     i2l9389:
 14032  00290A  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14033  00290E  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14034  002912  CFDE F04C          	movff	postinc2,??i2__doprnt
 14035  002916  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 14036  00291A  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 14037  00291E  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 14038  002922  0E20               	movlw	32
 14039  002924  6EDF               	movwf	indf2,c
 14040  002926  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14041  00292A  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14042  00292E  2ADE               	incf	postinc2,f,c
 14043  002930  0E00               	movlw	0
 14044  002932  22DD               	addwfc	postdec2,f,c
 14045  002934                     i2l9393:
 14046                           
 14047                           ;doprnt.c: 1431: while(--width);
 14048  002934  0100               	movlb	0	; () banked
 14049  002936  0770               	decf	i2__doprnt@width& (0+255),f,b
 14050  002938  A0D8               	btfss	status,0,c
 14051  00293A  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 14052  00293C  0100               	movlb	0	; () banked
 14053  00293E  5170               	movf	i2__doprnt@width& (0+255),w,b
 14054  002940  0100               	movlb	0	; () banked
 14055  002942  1171               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 14056  002944  A4D8               	btfss	status,2,c
 14057  002946  D7C4               	goto	i2l9385
 14058  002948                     i2l9395:
 14059                           
 14060                           ; BSR set to: 0
 14061                           ;doprnt.c: 1438: if(flag & 0x03)
 14062  002948  0E03               	movlw	3
 14063  00294A  0100               	movlb	0	; () banked
 14064  00294C  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 14065  00294E  6E4C               	movwf	??i2__doprnt& (0+255),c
 14066  002950  0E00               	movlw	0
 14067  002952  0100               	movlb	0	; () banked
 14068  002954  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 14069  002956  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 14070  002958  504C               	movf	??i2__doprnt,w,c
 14071  00295A  104D               	iorwf	??i2__doprnt+1,w,c
 14072  00295C  B4D8               	btfsc	status,2,c
 14073  00295E  D09B               	goto	i2l9415
 14074                           
 14075                           ; BSR set to: 0
 14076                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 14077  002960  EE20 F002          	lfsr	2,2
 14078  002964  5046               	movf	i2__doprnt@pb,w,c
 14079  002966  26D9               	addwf	fsr2l,f,c
 14080  002968  5047               	movf	i2__doprnt@pb+1,w,c
 14081  00296A  22DA               	addwfc	fsr2h,f,c
 14082  00296C  50DE               	movf	postinc2,w,c
 14083  00296E  10DE               	iorwf	postinc2,w,c
 14084  002970  B4D8               	btfsc	status,2,c
 14085  002972  D013               	goto	i2l9401
 14086                           
 14087                           ; BSR set to: 0
 14088  002974  EE20 F002          	lfsr	2,2
 14089  002978  5046               	movf	i2__doprnt@pb,w,c
 14090  00297A  26D9               	addwf	fsr2l,f,c
 14091  00297C  5047               	movf	i2__doprnt@pb+1,w,c
 14092  00297E  22DA               	addwfc	fsr2h,f,c
 14093  002980  D801               	call	i2u1566_48
 14094  002982  D089               	goto	i2l9415
 14095  002984                     i2u1566_48:
 14096  002984  0005               	push	
 14097  002986  6EFA               	movwf	pclath,c
 14098  002988  50DE               	movf	postinc2,w,c
 14099  00298A  6EFD               	movwf	tosl,c
 14100  00298C  50DE               	movf	postinc2,w,c
 14101  00298E  6EFE               	movwf	tosh,c
 14102  002990  50F8               	movf	tblptru,w,c
 14103  002992  6EFF               	movwf	tosu,c
 14104  002994  50FA               	movf	pclath,w,c
 14105  002996  0E2D               	movlw	45
 14106  002998  0012               	return		;indir
 14107  00299A                     i2l9401:
 14108  00299A  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14109  00299E  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14110  0029A2  CFDE F04C          	movff	postinc2,??i2__doprnt
 14111  0029A6  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 14112  0029AA  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 14113  0029AE  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 14114  0029B2  0E2D               	movlw	45
 14115  0029B4  6EDF               	movwf	indf2,c
 14116  0029B6  D068               	goto	i2l9413
 14117  0029B8                     i2l9405:
 14118                           
 14119                           ;doprnt.c: 1478: {
 14120                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 14121  0029B8  C074  F04C         	movff	i2__doprnt@prec,??i2__doprnt
 14122  0029BC  C075  F04D         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 14123  0029C0  90D8               	bcf	status,0,c
 14124  0029C2  364C               	rlcf	??i2__doprnt,f,c
 14125  0029C4  364D               	rlcf	??i2__doprnt+1,f,c
 14126  0029C6  90D8               	bcf	status,0,c
 14127  0029C8  364C               	rlcf	??i2__doprnt,f,c
 14128  0029CA  364D               	rlcf	??i2__doprnt+1,f,c
 14129  0029CC  0E01               	movlw	low _dpowers
 14130  0029CE  244C               	addwf	??i2__doprnt,w,c
 14131  0029D0  6EF6               	movwf	tblptrl,c
 14132  0029D2  0E06               	movlw	high _dpowers
 14133  0029D4  204D               	addwfc	??i2__doprnt+1,w,c
 14134  0029D6  6EF7               	movwf	tblptrh,c
 14135  0029D8                     	if	0	;There are less than 3 active tblptr bytes
 14136  0029D8                     	endif
 14137  0029D8  0009               	tblrd		*+
 14138  0029DA  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 14139  0029DE  0009               	tblrd		*+
 14140  0029E0  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 14141  0029E4  0009               	tblrd		*+
 14142  0029E6  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 14143  0029EA  000A               	tblrd		*-
 14144  0029EC  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 14145  0029F0  C065  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 14146  0029F4  C066  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 14147  0029F8  C067  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 14148  0029FC  C068  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 14149  002A00  EC84  F029         	call	i2___lldiv
 14150  002A04  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 14151  002A08  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 14152  002A0C  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 14153  002A10  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 14154  002A14  0E0A               	movlw	10
 14155  002A16  6E12               	movwf	i2___llmod@divisor,c
 14156  002A18  0E00               	movlw	0
 14157  002A1A  6E13               	movwf	i2___llmod@divisor+1,c
 14158  002A1C  0E00               	movlw	0
 14159  002A1E  6E14               	movwf	i2___llmod@divisor+2,c
 14160  002A20  0E00               	movlw	0
 14161  002A22  6E15               	movwf	i2___llmod@divisor+3,c
 14162  002A24  EC78  F02A         	call	i2___llmod	;wreg free
 14163  002A28  500E               	movf	?i2___llmod,w,c
 14164  002A2A  0F30               	addlw	48
 14165  002A2C  0100               	movlb	0	; () banked
 14166  002A2E  6F76               	movwf	i2__doprnt@c& (0+255),b
 14167                           
 14168                           ; BSR set to: 0
 14169                           ;doprnt.c: 1523: }
 14170                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 14171  002A30  EE20 F002          	lfsr	2,2
 14172  002A34  5046               	movf	i2__doprnt@pb,w,c
 14173  002A36  26D9               	addwf	fsr2l,f,c
 14174  002A38  5047               	movf	i2__doprnt@pb+1,w,c
 14175  002A3A  22DA               	addwfc	fsr2h,f,c
 14176  002A3C  50DE               	movf	postinc2,w,c
 14177  002A3E  10DE               	iorwf	postinc2,w,c
 14178  002A40  B4D8               	btfsc	status,2,c
 14179  002A42  D014               	goto	i2l9411
 14180                           
 14181                           ; BSR set to: 0
 14182  002A44  EE20 F002          	lfsr	2,2
 14183  002A48  5046               	movf	i2__doprnt@pb,w,c
 14184  002A4A  26D9               	addwf	fsr2l,f,c
 14185  002A4C  5047               	movf	i2__doprnt@pb+1,w,c
 14186  002A4E  22DA               	addwfc	fsr2h,f,c
 14187  002A50  D801               	call	i2u1568_48
 14188  002A52  D021               	goto	i2l9415
 14189  002A54                     i2u1568_48:
 14190  002A54  0005               	push	
 14191  002A56  6EFA               	movwf	pclath,c
 14192  002A58  50DE               	movf	postinc2,w,c
 14193  002A5A  6EFD               	movwf	tosl,c
 14194  002A5C  50DE               	movf	postinc2,w,c
 14195  002A5E  6EFE               	movwf	tosh,c
 14196  002A60  50F8               	movf	tblptru,w,c
 14197  002A62  6EFF               	movwf	tosu,c
 14198  002A64  50FA               	movf	pclath,w,c
 14199  002A66  0100               	movlb	0	; () banked
 14200  002A68  5176               	movf	i2__doprnt@c& (0+255),w,b
 14201  002A6A  0012               	return		;indir
 14202  002A6C                     i2l9411:
 14203  002A6C  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14204  002A70  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14205  002A74  CFDE F04C          	movff	postinc2,??i2__doprnt
 14206  002A78  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 14207  002A7C  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 14208  002A80  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 14209  002A84  C076  FFDF         	movff	i2__doprnt@c,indf2
 14210  002A88                     i2l9413:
 14211  002A88  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14212  002A8C  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14213  002A90  2ADE               	incf	postinc2,f,c
 14214  002A92  0E00               	movlw	0
 14215  002A94  22DD               	addwfc	postdec2,f,c
 14216  002A96                     i2l9415:
 14217  002A96  0100               	movlb	0	; () banked
 14218  002A98  0774               	decf	i2__doprnt@prec& (0+255),f,b
 14219  002A9A  A0D8               	btfss	status,0,c
 14220  002A9C  0775               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 14221  002A9E  0100               	movlb	0	; () banked
 14222  002AA0  2974               	incf	i2__doprnt@prec& (0+255),w,b
 14223  002AA2  E18A               	bnz	i2l9405
 14224  002AA4  0100               	movlb	0	; () banked
 14225  002AA6  2975               	incf	(i2__doprnt@prec+1)& (0+255),w,b
 14226  002AA8  A4D8               	btfss	status,2,c
 14227  002AAA  D786               	goto	i2l9405
 14228  002AAC                     i2l9417:
 14229  002AAC  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 14230  002AB0  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 14231  002AB4  4A48               	infsnz	i2__doprnt@f,f,c
 14232  002AB6  2A49               	incf	i2__doprnt@f+1,f,c
 14233  002AB8                     	if	0	;tblptru may be non-zero
 14234  002AB8                     	endif
 14235  002AB8                     	if	0	;tblptru may be non-zero
 14236  002AB8                     	endif
 14237  002AB8  0008               	tblrd		*
 14238  002ABA  CFF5 F076          	movff	tablat,i2__doprnt@c
 14239  002ABE  0100               	movlb	0	; () banked
 14240  002AC0  5176               	movf	i2__doprnt@c& (0+255),w,b
 14241  002AC2  A4D8               	btfss	status,2,c
 14242  002AC4  EFAF  F00C         	goto	i2l9029
 14243  002AC8                     i2l9419:
 14244                           
 14245                           ; BSR set to: 0
 14246                           ;doprnt.c: 1540: return 0;
 14247  002AC8  0E00               	movlw	0
 14248  002ACA  6E47               	movwf	?i2__doprnt+1,c
 14249  002ACC  0E00               	movlw	0
 14250  002ACE  6E46               	movwf	?i2__doprnt,c
 14251  002AD0  0012               	return	
 14252  002AD2                     __end_ofi2__doprnt:
 14253                           	opt stack 0
 14254                           tosu	equ	0xFFF
 14255                           tosh	equ	0xFFE
 14256                           tosl	equ	0xFFD
 14257                           pclatu	equ	0xFFB
 14258                           pclath	equ	0xFFA
 14259                           tblptru	equ	0xFF8
 14260                           tblptrh	equ	0xFF7
 14261                           tblptrl	equ	0xFF6
 14262                           tablat	equ	0xFF5
 14263                           prodh	equ	0xFF4
 14264                           prodl	equ	0xFF3
 14265                           intcon	equ	0xFF2
 14266                           intcon2	equ	0xFF1
 14267                           intcon3	equ	0xFF0
 14268                           postinc0	equ	0xFEE
 14269                           fsr0h	equ	0xFEA
 14270                           fsr0l	equ	0xFE9
 14271                           wreg	equ	0xFE8
 14272                           fsr1h	equ	0xFE2
 14273                           fsr1l	equ	0xFE1
 14274                           indf2	equ	0xFDF
 14275                           postinc2	equ	0xFDE
 14276                           postdec2	equ	0xFDD
 14277                           fsr2h	equ	0xFDA
 14278                           fsr2l	equ	0xFD9
 14279                           status	equ	0xFD8
 14280                           
 14281 ;; *************** function i2_scale *****************
 14282 ;; Defined at:
 14283 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 14284 ;; Parameters:    Size  Location     Type
 14285 ;;  scl             1    wreg     char 
 14286 ;; Auto vars:     Size  Location     Type
 14287 ;;  scl             1   53[COMRAM] char 
 14288 ;; Return value:  Size  Location     Type
 14289 ;;                  3   47[COMRAM] char 
 14290 ;; Registers used:
 14291 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14292 ;; Tracked objects:
 14293 ;;		On entry : 0/0
 14294 ;;		On exit  : 0/0
 14295 ;;		Unchanged: 0/0
 14296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14297 ;;      Params:         3       0       0       0       0       0       0
 14298 ;;      Locals:         4       0       0       0       0       0       0
 14299 ;;      Temps:          0       0       0       0       0       0       0
 14300 ;;      Totals:         7       0       0       0       0       0       0
 14301 ;;Total ram usage:        7 bytes
 14302 ;; Hardware stack levels used:    1
 14303 ;; Hardware stack levels required when called:    2
 14304 ;; This function calls:
 14305 ;;		i2___awdiv
 14306 ;;		i2___awmod
 14307 ;;		i2___ftmul
 14308 ;;		i2___wmul
 14309 ;; This function is called by:
 14310 ;;		i2__doprnt
 14311 ;; This function uses a non-reentrant model
 14312 ;;
 14313                           
 14314                           	psect	text50
 14315  002F80                     __ptext50:
 14316                           	opt stack 0
 14317  002F80                     i2_scale:
 14318                           	opt stack 19
 14319                           
 14320                           ; BSR set to: 0
 14321                           ;incstack = 0
 14322                           ;i2scale@scl stored from wreg
 14323  002F80  6E36               	movwf	i2scale@scl,c
 14324                           
 14325                           ;doprnt.c: 428: if(scl < 0) {
 14326  002F82  AE36               	btfss	i2scale@scl,7,c
 14327  002F84  D0FB               	goto	i2l4153
 14328                           
 14329                           ;doprnt.c: 429: scl = -scl;
 14330  002F86  6C36               	negf	i2scale@scl,c
 14331                           
 14332                           ;doprnt.c: 430: if(scl>=110)
 14333  002F88  5036               	movf	i2scale@scl,w,c
 14334  002F8A  0A80               	xorlw	128
 14335  002F8C  0F12               	addlw	-238
 14336  002F8E  A0D8               	btfss	status,0,c
 14337  002F90  D091               	goto	i2l4143
 14338                           
 14339                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 14340  002F92  0E00               	movlw	0
 14341  002F94  6E12               	movwf	i2___wmul@multiplicand+1,c
 14342  002F96  0E03               	movlw	3
 14343  002F98  6E11               	movwf	i2___wmul@multiplicand,c
 14344  002F9A  0E00               	movlw	0
 14345  002F9C  6E0A               	movwf	i2___awdiv@divisor+1,c
 14346  002F9E  0E0A               	movlw	10
 14347  002FA0  6E09               	movwf	i2___awdiv@divisor,c
 14348  002FA2  0E00               	movlw	0
 14349  002FA4  6E04               	movwf	i2___awmod@divisor+1,c
 14350  002FA6  0E64               	movlw	100
 14351  002FA8  6E03               	movwf	i2___awmod@divisor,c
 14352  002FAA  5036               	movf	i2scale@scl,w,c
 14353  002FAC  6E01               	movwf	i2___awmod@dividend,c
 14354  002FAE  6A02               	clrf	i2___awmod@dividend+1,c
 14355  002FB0  BE01               	btfsc	i2___awmod@dividend,7,c
 14356  002FB2  0602               	decf	i2___awmod@dividend+1,f,c
 14357  002FB4  EC40  F02A         	call	i2___awmod
 14358  002FB8  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 14359  002FBC  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 14360  002FC0  EC42  F029         	call	i2___awdiv	;wreg free
 14361  002FC4  0E09               	movlw	9
 14362  002FC6  2407               	addwf	?i2___awdiv,w,c
 14363  002FC8  6E0F               	movwf	i2___wmul@multiplier,c
 14364  002FCA  0E00               	movlw	0
 14365  002FCC  2008               	addwfc	?i2___awdiv+1,w,c
 14366  002FCE  6E10               	movwf	i2___wmul@multiplier+1,c
 14367  002FD0  ECE6  F02C         	call	i2___wmul	;wreg free
 14368  002FD4  0E29               	movlw	low __npowers_
 14369  002FD6  240F               	addwf	?i2___wmul,w,c
 14370  002FD8  6EF6               	movwf	tblptrl,c
 14371  002FDA  0E06               	movlw	high __npowers_
 14372  002FDC  2010               	addwfc	?i2___wmul+1,w,c
 14373  002FDE  6EF7               	movwf	tblptrh,c
 14374  002FE0                     	if	0	;There are less than 3 active tblptr bytes
 14375  002FE0                     	endif
 14376  002FE0  0009               	tblrd		*+
 14377  002FE2  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14378  002FE6  0009               	tblrd		*+
 14379  002FE8  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14380  002FEC  000A               	tblrd		*-
 14381  002FEE  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14382  002FF2  0E00               	movlw	0
 14383  002FF4  6E0A               	movwf	i2___awdiv@divisor+1,c
 14384  002FF6  0E64               	movlw	100
 14385  002FF8  6E09               	movwf	i2___awdiv@divisor,c
 14386  002FFA  5036               	movf	i2scale@scl,w,c
 14387  002FFC  6E07               	movwf	i2___awdiv@dividend,c
 14388  002FFE  6A08               	clrf	i2___awdiv@dividend+1,c
 14389  003000  BE07               	btfsc	i2___awdiv@dividend,7,c
 14390  003002  0608               	decf	i2___awdiv@dividend+1,f,c
 14391  003004  EC42  F029         	call	i2___awdiv	;wreg free
 14392  003008  0E12               	movlw	18
 14393  00300A  2407               	addwf	?i2___awdiv,w,c
 14394  00300C  6E0F               	movwf	i2___wmul@multiplier,c
 14395  00300E  0E00               	movlw	0
 14396  003010  2008               	addwfc	?i2___awdiv+1,w,c
 14397  003012  6E10               	movwf	i2___wmul@multiplier+1,c
 14398  003014  0E00               	movlw	0
 14399  003016  6E12               	movwf	i2___wmul@multiplicand+1,c
 14400  003018  0E03               	movlw	3
 14401  00301A  6E11               	movwf	i2___wmul@multiplicand,c
 14402  00301C  ECE6  F02C         	call	i2___wmul	;wreg free
 14403  003020  0E29               	movlw	low __npowers_
 14404  003022  240F               	addwf	?i2___wmul,w,c
 14405  003024  6EF6               	movwf	tblptrl,c
 14406  003026  0E06               	movlw	high __npowers_
 14407  003028  2010               	addwfc	?i2___wmul+1,w,c
 14408  00302A  6EF7               	movwf	tblptrh,c
 14409  00302C                     	if	0	;There are less than 3 active tblptr bytes
 14410  00302C                     	endif
 14411  00302C  0009               	tblrd		*+
 14412  00302E  CFF5 F021          	movff	tablat,i2___ftmul@f1
 14413  003032  0009               	tblrd		*+
 14414  003034  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 14415  003038  000A               	tblrd		*-
 14416  00303A  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 14417  00303E  EC7D  F025         	call	i2___ftmul	;wreg free
 14418  003042  C021  F033         	movff	?i2___ftmul,i2_scale$1952
 14419  003046  C022  F034         	movff	?i2___ftmul+1,i2_scale$1952+1
 14420  00304A  C023  F035         	movff	?i2___ftmul+2,i2_scale$1952+2
 14421                           
 14422                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 14423  00304E  C033  F021         	movff	i2_scale$1952,i2___ftmul@f1
 14424  003052  C034  F022         	movff	i2_scale$1952+1,i2___ftmul@f1+1
 14425  003056  C035  F023         	movff	i2_scale$1952+2,i2___ftmul@f1+2
 14426  00305A  0E00               	movlw	0
 14427  00305C  6E12               	movwf	i2___wmul@multiplicand+1,c
 14428  00305E  0E03               	movlw	3
 14429  003060  6E11               	movwf	i2___wmul@multiplicand,c
 14430  003062  0E00               	movlw	0
 14431  003064  6E04               	movwf	i2___awmod@divisor+1,c
 14432  003066  0E0A               	movlw	10
 14433  003068  6E03               	movwf	i2___awmod@divisor,c
 14434  00306A  5036               	movf	i2scale@scl,w,c
 14435  00306C  6E01               	movwf	i2___awmod@dividend,c
 14436  00306E  6A02               	clrf	i2___awmod@dividend+1,c
 14437  003070  BE01               	btfsc	i2___awmod@dividend,7,c
 14438  003072  0602               	decf	i2___awmod@dividend+1,f,c
 14439  003074  EC40  F02A         	call	i2___awmod	;wreg free
 14440  003078  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 14441  00307C  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14442  003080  ECE6  F02C         	call	i2___wmul	;wreg free
 14443  003084  0E29               	movlw	low __npowers_
 14444  003086  240F               	addwf	?i2___wmul,w,c
 14445  003088  6EF6               	movwf	tblptrl,c
 14446  00308A  0E06               	movlw	high __npowers_
 14447  00308C  2010               	addwfc	?i2___wmul+1,w,c
 14448  00308E  6EF7               	movwf	tblptrh,c
 14449  003090                     	if	0	;There are less than 3 active tblptr bytes
 14450  003090                     	endif
 14451  003090  0009               	tblrd		*+
 14452  003092  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14453  003096  0009               	tblrd		*+
 14454  003098  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14455  00309C  000A               	tblrd		*-
 14456  00309E  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14457  0030A2  EC7D  F025         	call	i2___ftmul	;wreg free
 14458  0030A6  C021  F030         	movff	?i2___ftmul,?i2_scale
 14459  0030AA  C022  F031         	movff	?i2___ftmul+1,?i2_scale+1
 14460  0030AE  C023  F032         	movff	?i2___ftmul+2,?i2_scale+2
 14461  0030B2  0012               	return	
 14462  0030B4                     i2l4143:
 14463                           
 14464                           ;doprnt.c: 432: else if(scl > 10)
 14465  0030B4  5036               	movf	i2scale@scl,w,c
 14466  0030B6  0A80               	xorlw	128
 14467  0030B8  0F75               	addlw	-139
 14468  0030BA  A0D8               	btfss	status,0,c
 14469  0030BC  D04D               	goto	i2l4149
 14470                           
 14471                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 14472  0030BE  0E00               	movlw	0
 14473  0030C0  6E0A               	movwf	i2___awdiv@divisor+1,c
 14474  0030C2  0E0A               	movlw	10
 14475  0030C4  6E09               	movwf	i2___awdiv@divisor,c
 14476  0030C6  5036               	movf	i2scale@scl,w,c
 14477  0030C8  6E07               	movwf	i2___awdiv@dividend,c
 14478  0030CA  6A08               	clrf	i2___awdiv@dividend+1,c
 14479  0030CC  BE07               	btfsc	i2___awdiv@dividend,7,c
 14480  0030CE  0608               	decf	i2___awdiv@dividend+1,f,c
 14481  0030D0  EC42  F029         	call	i2___awdiv	;wreg free
 14482  0030D4  0E09               	movlw	9
 14483  0030D6  2407               	addwf	?i2___awdiv,w,c
 14484  0030D8  6E0F               	movwf	i2___wmul@multiplier,c
 14485  0030DA  0E00               	movlw	0
 14486  0030DC  2008               	addwfc	?i2___awdiv+1,w,c
 14487  0030DE  6E10               	movwf	i2___wmul@multiplier+1,c
 14488  0030E0  0E00               	movlw	0
 14489  0030E2  6E12               	movwf	i2___wmul@multiplicand+1,c
 14490  0030E4  0E03               	movlw	3
 14491  0030E6  6E11               	movwf	i2___wmul@multiplicand,c
 14492  0030E8  ECE6  F02C         	call	i2___wmul	;wreg free
 14493  0030EC  0E29               	movlw	low __npowers_
 14494  0030EE  240F               	addwf	?i2___wmul,w,c
 14495  0030F0  6EF6               	movwf	tblptrl,c
 14496  0030F2  0E06               	movlw	high __npowers_
 14497  0030F4  2010               	addwfc	?i2___wmul+1,w,c
 14498  0030F6  6EF7               	movwf	tblptrh,c
 14499  0030F8                     	if	0	;There are less than 3 active tblptr bytes
 14500  0030F8                     	endif
 14501  0030F8  0009               	tblrd		*+
 14502  0030FA  CFF5 F021          	movff	tablat,i2___ftmul@f1
 14503  0030FE  0009               	tblrd		*+
 14504  003100  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 14505  003104  000A               	tblrd		*-
 14506  003106  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 14507  00310A  0E00               	movlw	0
 14508  00310C  6E12               	movwf	i2___wmul@multiplicand+1,c
 14509  00310E  0E03               	movlw	3
 14510  003110  6E11               	movwf	i2___wmul@multiplicand,c
 14511  003112  0E00               	movlw	0
 14512  003114  6E04               	movwf	i2___awmod@divisor+1,c
 14513  003116  0E0A               	movlw	10
 14514  003118  6E03               	movwf	i2___awmod@divisor,c
 14515  00311A  5036               	movf	i2scale@scl,w,c
 14516  00311C  6E01               	movwf	i2___awmod@dividend,c
 14517  00311E  6A02               	clrf	i2___awmod@dividend+1,c
 14518  003120  BE01               	btfsc	i2___awmod@dividend,7,c
 14519  003122  0602               	decf	i2___awmod@dividend+1,f,c
 14520  003124  EC40  F02A         	call	i2___awmod	;wreg free
 14521  003128  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 14522  00312C  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14523  003130  ECE6  F02C         	call	i2___wmul	;wreg free
 14524  003134  0E29               	movlw	low __npowers_
 14525  003136  240F               	addwf	?i2___wmul,w,c
 14526  003138  6EF6               	movwf	tblptrl,c
 14527  00313A  0E06               	movlw	high __npowers_
 14528  00313C  2010               	addwfc	?i2___wmul+1,w,c
 14529  00313E  6EF7               	movwf	tblptrh,c
 14530  003140                     	if	0	;There are less than 3 active tblptr bytes
 14531  003140                     	endif
 14532  003140  0009               	tblrd		*+
 14533  003142  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14534  003146  0009               	tblrd		*+
 14535  003148  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14536  00314C  000A               	tblrd		*-
 14537  00314E  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14538  003152  EC7D  F025         	call	i2___ftmul	;wreg free
 14539  003156  D7A7               	goto	L8
 14540  003158                     i2l4149:
 14541                           
 14542                           ;doprnt.c: 434: return _npowers_[scl];
 14543  003158  5036               	movf	i2scale@scl,w,c
 14544  00315A  0D03               	mullw	3
 14545  00315C  0E29               	movlw	low __npowers_
 14546  00315E  24F3               	addwf	prodl,w,c
 14547  003160  6EF6               	movwf	tblptrl,c
 14548  003162  0E06               	movlw	high __npowers_
 14549  003164  20F4               	addwfc	prodh,w,c
 14550  003166  6EF7               	movwf	tblptrh,c
 14551  003168                     	if	0	;There are less than 3 active tblptr bytes
 14552  003168                     	endif
 14553  003168  0009               	tblrd		*+
 14554  00316A  CFF5 F030          	movff	tablat,?i2_scale
 14555  00316E  0009               	tblrd		*+
 14556  003170  CFF5 F031          	movff	tablat,?i2_scale+1
 14557  003174  000A               	tblrd		*-
 14558  003176  CFF5 F032          	movff	tablat,?i2_scale+2
 14559  00317A  0012               	return	
 14560  00317C                     i2l4153:
 14561                           
 14562                           ;doprnt.c: 435: }
 14563                           ;doprnt.c: 436: if(scl>=110)
 14564  00317C  5036               	movf	i2scale@scl,w,c
 14565  00317E  0A80               	xorlw	128
 14566  003180  0F12               	addlw	-238
 14567  003182  A0D8               	btfss	status,0,c
 14568  003184  D091               	goto	i2l4161
 14569                           
 14570                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 14571  003186  0E00               	movlw	0
 14572  003188  6E12               	movwf	i2___wmul@multiplicand+1,c
 14573  00318A  0E03               	movlw	3
 14574  00318C  6E11               	movwf	i2___wmul@multiplicand,c
 14575  00318E  0E00               	movlw	0
 14576  003190  6E0A               	movwf	i2___awdiv@divisor+1,c
 14577  003192  0E0A               	movlw	10
 14578  003194  6E09               	movwf	i2___awdiv@divisor,c
 14579  003196  0E00               	movlw	0
 14580  003198  6E04               	movwf	i2___awmod@divisor+1,c
 14581  00319A  0E64               	movlw	100
 14582  00319C  6E03               	movwf	i2___awmod@divisor,c
 14583  00319E  5036               	movf	i2scale@scl,w,c
 14584  0031A0  6E01               	movwf	i2___awmod@dividend,c
 14585  0031A2  6A02               	clrf	i2___awmod@dividend+1,c
 14586  0031A4  BE01               	btfsc	i2___awmod@dividend,7,c
 14587  0031A6  0602               	decf	i2___awmod@dividend+1,f,c
 14588  0031A8  EC40  F02A         	call	i2___awmod	;wreg free
 14589  0031AC  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 14590  0031B0  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 14591  0031B4  EC42  F029         	call	i2___awdiv	;wreg free
 14592  0031B8  0E09               	movlw	9
 14593  0031BA  2407               	addwf	?i2___awdiv,w,c
 14594  0031BC  6E0F               	movwf	i2___wmul@multiplier,c
 14595  0031BE  0E00               	movlw	0
 14596  0031C0  2008               	addwfc	?i2___awdiv+1,w,c
 14597  0031C2  6E10               	movwf	i2___wmul@multiplier+1,c
 14598  0031C4  ECE6  F02C         	call	i2___wmul	;wreg free
 14599  0031C8  0E50               	movlw	low __powers_
 14600  0031CA  240F               	addwf	?i2___wmul,w,c
 14601  0031CC  6EF6               	movwf	tblptrl,c
 14602  0031CE  0E06               	movlw	high __powers_
 14603  0031D0  2010               	addwfc	?i2___wmul+1,w,c
 14604  0031D2  6EF7               	movwf	tblptrh,c
 14605  0031D4                     	if	0	;There are less than 3 active tblptr bytes
 14606  0031D4                     	endif
 14607  0031D4  0009               	tblrd		*+
 14608  0031D6  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14609  0031DA  0009               	tblrd		*+
 14610  0031DC  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14611  0031E0  000A               	tblrd		*-
 14612  0031E2  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14613  0031E6  0E00               	movlw	0
 14614  0031E8  6E0A               	movwf	i2___awdiv@divisor+1,c
 14615  0031EA  0E64               	movlw	100
 14616  0031EC  6E09               	movwf	i2___awdiv@divisor,c
 14617  0031EE  5036               	movf	i2scale@scl,w,c
 14618  0031F0  6E07               	movwf	i2___awdiv@dividend,c
 14619  0031F2  6A08               	clrf	i2___awdiv@dividend+1,c
 14620  0031F4  BE07               	btfsc	i2___awdiv@dividend,7,c
 14621  0031F6  0608               	decf	i2___awdiv@dividend+1,f,c
 14622  0031F8  EC42  F029         	call	i2___awdiv	;wreg free
 14623  0031FC  0E12               	movlw	18
 14624  0031FE  2407               	addwf	?i2___awdiv,w,c
 14625  003200  6E0F               	movwf	i2___wmul@multiplier,c
 14626  003202  0E00               	movlw	0
 14627  003204  2008               	addwfc	?i2___awdiv+1,w,c
 14628  003206  6E10               	movwf	i2___wmul@multiplier+1,c
 14629  003208  0E00               	movlw	0
 14630  00320A  6E12               	movwf	i2___wmul@multiplicand+1,c
 14631  00320C  0E03               	movlw	3
 14632  00320E  6E11               	movwf	i2___wmul@multiplicand,c
 14633  003210  ECE6  F02C         	call	i2___wmul	;wreg free
 14634  003214  0E50               	movlw	low __powers_
 14635  003216  240F               	addwf	?i2___wmul,w,c
 14636  003218  6EF6               	movwf	tblptrl,c
 14637  00321A  0E06               	movlw	high __powers_
 14638  00321C  2010               	addwfc	?i2___wmul+1,w,c
 14639  00321E  6EF7               	movwf	tblptrh,c
 14640  003220                     	if	0	;There are less than 3 active tblptr bytes
 14641  003220                     	endif
 14642  003220  0009               	tblrd		*+
 14643  003222  CFF5 F021          	movff	tablat,i2___ftmul@f1
 14644  003226  0009               	tblrd		*+
 14645  003228  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 14646  00322C  000A               	tblrd		*-
 14647  00322E  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 14648  003232  EC7D  F025         	call	i2___ftmul	;wreg free
 14649  003236  C021  F033         	movff	?i2___ftmul,i2_scale$1952
 14650  00323A  C022  F034         	movff	?i2___ftmul+1,i2_scale$1952+1
 14651  00323E  C023  F035         	movff	?i2___ftmul+2,i2_scale$1952+2
 14652                           
 14653                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 14654  003242  C033  F021         	movff	i2_scale$1952,i2___ftmul@f1
 14655  003246  C034  F022         	movff	i2_scale$1952+1,i2___ftmul@f1+1
 14656  00324A  C035  F023         	movff	i2_scale$1952+2,i2___ftmul@f1+2
 14657  00324E  0E00               	movlw	0
 14658  003250  6E12               	movwf	i2___wmul@multiplicand+1,c
 14659  003252  0E03               	movlw	3
 14660  003254  6E11               	movwf	i2___wmul@multiplicand,c
 14661  003256  0E00               	movlw	0
 14662  003258  6E04               	movwf	i2___awmod@divisor+1,c
 14663  00325A  0E0A               	movlw	10
 14664  00325C  6E03               	movwf	i2___awmod@divisor,c
 14665  00325E  5036               	movf	i2scale@scl,w,c
 14666  003260  6E01               	movwf	i2___awmod@dividend,c
 14667  003262  6A02               	clrf	i2___awmod@dividend+1,c
 14668  003264  BE01               	btfsc	i2___awmod@dividend,7,c
 14669  003266  0602               	decf	i2___awmod@dividend+1,f,c
 14670  003268  EC40  F02A         	call	i2___awmod	;wreg free
 14671  00326C  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 14672  003270  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14673  003274  ECE6  F02C         	call	i2___wmul	;wreg free
 14674  003278  0E50               	movlw	low __powers_
 14675  00327A  240F               	addwf	?i2___wmul,w,c
 14676  00327C  6EF6               	movwf	tblptrl,c
 14677  00327E  0E06               	movlw	high __powers_
 14678  003280  2010               	addwfc	?i2___wmul+1,w,c
 14679  003282  6EF7               	movwf	tblptrh,c
 14680  003284                     	if	0	;There are less than 3 active tblptr bytes
 14681  003284                     	endif
 14682  003284  0009               	tblrd		*+
 14683  003286  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14684  00328A  0009               	tblrd		*+
 14685  00328C  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14686  003290  000A               	tblrd		*-
 14687  003292  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14688  003296  EC7D  F025         	call	i2___ftmul	;wreg free
 14689  00329A  C021  F030         	movff	?i2___ftmul,?i2_scale
 14690  00329E  C022  F031         	movff	?i2___ftmul+1,?i2_scale+1
 14691  0032A2  C023  F032         	movff	?i2___ftmul+2,?i2_scale+2
 14692  0032A6  0012               	return	
 14693  0032A8                     i2l4161:
 14694                           
 14695                           ;doprnt.c: 438: else if(scl > 10)
 14696  0032A8  5036               	movf	i2scale@scl,w,c
 14697  0032AA  0A80               	xorlw	128
 14698  0032AC  0F75               	addlw	-139
 14699  0032AE  A0D8               	btfss	status,0,c
 14700  0032B0  D04D               	goto	i2l4167
 14701                           
 14702                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 14703  0032B2  0E00               	movlw	0
 14704  0032B4  6E0A               	movwf	i2___awdiv@divisor+1,c
 14705  0032B6  0E0A               	movlw	10
 14706  0032B8  6E09               	movwf	i2___awdiv@divisor,c
 14707  0032BA  5036               	movf	i2scale@scl,w,c
 14708  0032BC  6E07               	movwf	i2___awdiv@dividend,c
 14709  0032BE  6A08               	clrf	i2___awdiv@dividend+1,c
 14710  0032C0  BE07               	btfsc	i2___awdiv@dividend,7,c
 14711  0032C2  0608               	decf	i2___awdiv@dividend+1,f,c
 14712  0032C4  EC42  F029         	call	i2___awdiv	;wreg free
 14713  0032C8  0E09               	movlw	9
 14714  0032CA  2407               	addwf	?i2___awdiv,w,c
 14715  0032CC  6E0F               	movwf	i2___wmul@multiplier,c
 14716  0032CE  0E00               	movlw	0
 14717  0032D0  2008               	addwfc	?i2___awdiv+1,w,c
 14718  0032D2  6E10               	movwf	i2___wmul@multiplier+1,c
 14719  0032D4  0E00               	movlw	0
 14720  0032D6  6E12               	movwf	i2___wmul@multiplicand+1,c
 14721  0032D8  0E03               	movlw	3
 14722  0032DA  6E11               	movwf	i2___wmul@multiplicand,c
 14723  0032DC  ECE6  F02C         	call	i2___wmul	;wreg free
 14724  0032E0  0E50               	movlw	low __powers_
 14725  0032E2  240F               	addwf	?i2___wmul,w,c
 14726  0032E4  6EF6               	movwf	tblptrl,c
 14727  0032E6  0E06               	movlw	high __powers_
 14728  0032E8  2010               	addwfc	?i2___wmul+1,w,c
 14729  0032EA  6EF7               	movwf	tblptrh,c
 14730  0032EC                     	if	0	;There are less than 3 active tblptr bytes
 14731  0032EC                     	endif
 14732  0032EC  0009               	tblrd		*+
 14733  0032EE  CFF5 F021          	movff	tablat,i2___ftmul@f1
 14734  0032F2  0009               	tblrd		*+
 14735  0032F4  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 14736  0032F8  000A               	tblrd		*-
 14737  0032FA  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 14738  0032FE  0E00               	movlw	0
 14739  003300  6E12               	movwf	i2___wmul@multiplicand+1,c
 14740  003302  0E03               	movlw	3
 14741  003304  6E11               	movwf	i2___wmul@multiplicand,c
 14742  003306  0E00               	movlw	0
 14743  003308  6E04               	movwf	i2___awmod@divisor+1,c
 14744  00330A  0E0A               	movlw	10
 14745  00330C  6E03               	movwf	i2___awmod@divisor,c
 14746  00330E  5036               	movf	i2scale@scl,w,c
 14747  003310  6E01               	movwf	i2___awmod@dividend,c
 14748  003312  6A02               	clrf	i2___awmod@dividend+1,c
 14749  003314  BE01               	btfsc	i2___awmod@dividend,7,c
 14750  003316  0602               	decf	i2___awmod@dividend+1,f,c
 14751  003318  EC40  F02A         	call	i2___awmod	;wreg free
 14752  00331C  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 14753  003320  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14754  003324  ECE6  F02C         	call	i2___wmul	;wreg free
 14755  003328  0E50               	movlw	low __powers_
 14756  00332A  240F               	addwf	?i2___wmul,w,c
 14757  00332C  6EF6               	movwf	tblptrl,c
 14758  00332E  0E06               	movlw	high __powers_
 14759  003330  2010               	addwfc	?i2___wmul+1,w,c
 14760  003332  6EF7               	movwf	tblptrh,c
 14761  003334                     	if	0	;There are less than 3 active tblptr bytes
 14762  003334                     	endif
 14763  003334  0009               	tblrd		*+
 14764  003336  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14765  00333A  0009               	tblrd		*+
 14766  00333C  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14767  003340  000A               	tblrd		*-
 14768  003342  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14769  003346  EC7D  F025         	call	i2___ftmul	;wreg free
 14770  00334A  D7A7               	goto	L9
 14771  00334C                     i2l4167:
 14772                           
 14773                           ;doprnt.c: 440: return _powers_[scl];
 14774  00334C  5036               	movf	i2scale@scl,w,c
 14775  00334E  0D03               	mullw	3
 14776  003350  0E50               	movlw	low __powers_
 14777  003352  24F3               	addwf	prodl,w,c
 14778  003354  6EF6               	movwf	tblptrl,c
 14779  003356  0E06               	movlw	high __powers_
 14780  003358  20F4               	addwfc	prodh,w,c
 14781  00335A  6EF7               	movwf	tblptrh,c
 14782  00335C                     	if	0	;There are less than 3 active tblptr bytes
 14783  00335C                     	endif
 14784  00335C  0009               	tblrd		*+
 14785  00335E  CFF5 F030          	movff	tablat,?i2_scale
 14786  003362  0009               	tblrd		*+
 14787  003364  CFF5 F031          	movff	tablat,?i2_scale+1
 14788  003368  000A               	tblrd		*-
 14789  00336A  CFF5 F032          	movff	tablat,?i2_scale+2
 14790  00336E  0012               	return	
 14791  003370                     __end_ofi2_scale:
 14792                           	opt stack 0
 14793                           tosu	equ	0xFFF
 14794                           tosh	equ	0xFFE
 14795                           tosl	equ	0xFFD
 14796                           pclatu	equ	0xFFB
 14797                           pclath	equ	0xFFA
 14798                           tblptru	equ	0xFF8
 14799                           tblptrh	equ	0xFF7
 14800                           tblptrl	equ	0xFF6
 14801                           tablat	equ	0xFF5
 14802                           prodh	equ	0xFF4
 14803                           prodl	equ	0xFF3
 14804                           intcon	equ	0xFF2
 14805                           intcon2	equ	0xFF1
 14806                           intcon3	equ	0xFF0
 14807                           postinc0	equ	0xFEE
 14808                           fsr0h	equ	0xFEA
 14809                           fsr0l	equ	0xFE9
 14810                           wreg	equ	0xFE8
 14811                           fsr1h	equ	0xFE2
 14812                           fsr1l	equ	0xFE1
 14813                           indf2	equ	0xFDF
 14814                           postinc2	equ	0xFDE
 14815                           postdec2	equ	0xFDD
 14816                           fsr2h	equ	0xFDA
 14817                           fsr2l	equ	0xFD9
 14818                           status	equ	0xFD8
 14819                           
 14820 ;; *************** function i2_putch *****************
 14821 ;; Defined at:
 14822 ;;		line 111 in file "mcc_generated_files/eusart1.c"
 14823 ;; Parameters:    Size  Location     Type
 14824 ;;  txData          1    wreg     unsigned char 
 14825 ;; Auto vars:     Size  Location     Type
 14826 ;;  txData          1    1[COMRAM] unsigned char 
 14827 ;; Return value:  Size  Location     Type
 14828 ;;                  1    wreg      void 
 14829 ;; Registers used:
 14830 ;;		wreg, status,2, cstack
 14831 ;; Tracked objects:
 14832 ;;		On entry : 0/0
 14833 ;;		On exit  : 0/0
 14834 ;;		Unchanged: 0/0
 14835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14836 ;;      Params:         0       0       0       0       0       0       0
 14837 ;;      Locals:         1       0       0       0       0       0       0
 14838 ;;      Temps:          0       0       0       0       0       0       0
 14839 ;;      Totals:         1       0       0       0       0       0       0
 14840 ;;Total ram usage:        1 bytes
 14841 ;; Hardware stack levels used:    1
 14842 ;; Hardware stack levels required when called:    1
 14843 ;; This function calls:
 14844 ;;		i2_EUSART1_Write
 14845 ;; This function is called by:
 14846 ;;		_printf
 14847 ;; This function uses a non-reentrant model
 14848 ;;
 14849                           
 14850                           	psect	text51
 14851  005B08                     __ptext51:
 14852                           	opt stack 0
 14853  005B08                     i2_putch:
 14854                           	opt stack 20
 14855                           
 14856                           ;incstack = 0
 14857                           ;i2putch@txData stored from wreg
 14858  005B08  6E02               	movwf	i2putch@txData,c
 14859                           
 14860                           ;eusart1.c: 113: EUSART1_Write(txData);
 14861  005B0A  5002               	movf	i2putch@txData,w,c
 14862  005B0C  EC6F  F02D         	call	i2_EUSART1_Write
 14863  005B10  0012               	return		;funcret
 14864  005B12                     __end_ofi2_putch:
 14865                           	opt stack 0
 14866                           tosu	equ	0xFFF
 14867                           tosh	equ	0xFFE
 14868                           tosl	equ	0xFFD
 14869                           pclatu	equ	0xFFB
 14870                           pclath	equ	0xFFA
 14871                           tblptru	equ	0xFF8
 14872                           tblptrh	equ	0xFF7
 14873                           tblptrl	equ	0xFF6
 14874                           tablat	equ	0xFF5
 14875                           prodh	equ	0xFF4
 14876                           prodl	equ	0xFF3
 14877                           intcon	equ	0xFF2
 14878                           intcon2	equ	0xFF1
 14879                           intcon3	equ	0xFF0
 14880                           postinc0	equ	0xFEE
 14881                           fsr0h	equ	0xFEA
 14882                           fsr0l	equ	0xFE9
 14883                           wreg	equ	0xFE8
 14884                           fsr1h	equ	0xFE2
 14885                           fsr1l	equ	0xFE1
 14886                           indf2	equ	0xFDF
 14887                           postinc2	equ	0xFDE
 14888                           postdec2	equ	0xFDD
 14889                           fsr2h	equ	0xFDA
 14890                           fsr2l	equ	0xFD9
 14891                           status	equ	0xFD8
 14892                           
 14893 ;; *************** function i2_EUSART1_Write *****************
 14894 ;; Defined at:
 14895 ;;		line 97 in file "mcc_generated_files/eusart1.c"
 14896 ;; Parameters:    Size  Location     Type
 14897 ;;  txData          1    wreg     unsigned char 
 14898 ;; Auto vars:     Size  Location     Type
 14899 ;;  txData          1    0[COMRAM] unsigned char 
 14900 ;; Return value:  Size  Location     Type
 14901 ;;                  1    wreg      void 
 14902 ;; Registers used:
 14903 ;;		wreg
 14904 ;; Tracked objects:
 14905 ;;		On entry : 0/0
 14906 ;;		On exit  : 0/0
 14907 ;;		Unchanged: 0/0
 14908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14909 ;;      Params:         0       0       0       0       0       0       0
 14910 ;;      Locals:         1       0       0       0       0       0       0
 14911 ;;      Temps:          0       0       0       0       0       0       0
 14912 ;;      Totals:         1       0       0       0       0       0       0
 14913 ;;Total ram usage:        1 bytes
 14914 ;; Hardware stack levels used:    1
 14915 ;; This function calls:
 14916 ;;		Nothing
 14917 ;; This function is called by:
 14918 ;;		i2_putch
 14919 ;; This function uses a non-reentrant model
 14920 ;;
 14921                           
 14922                           	psect	text52
 14923  005ADE                     __ptext52:
 14924                           	opt stack 0
 14925  005ADE                     i2_EUSART1_Write:
 14926                           	opt stack 20
 14927                           
 14928                           ;incstack = 0
 14929                           ;i2EUSART1_Write@txData stored from wreg
 14930  005ADE  6E01               	movwf	i2EUSART1_Write@txData,c
 14931  005AE0                     i2l243:
 14932  005AE0  A89E               	btfss	3998,4,c	;volatile
 14933  005AE2  D7FE               	goto	i2l243
 14934                           
 14935                           ;eusart1.c: 101: }
 14936                           ;eusart1.c: 103: TXREG1 = txData;
 14937  005AE4  C001  FFAD         	movff	i2EUSART1_Write@txData,4013	;volatile
 14938  005AE8  0012               	return		;funcret
 14939  005AEA                     __end_ofi2_EUSART1_Write:
 14940                           	opt stack 0
 14941                           tosu	equ	0xFFF
 14942                           tosh	equ	0xFFE
 14943                           tosl	equ	0xFFD
 14944                           pclatu	equ	0xFFB
 14945                           pclath	equ	0xFFA
 14946                           tblptru	equ	0xFF8
 14947                           tblptrh	equ	0xFF7
 14948                           tblptrl	equ	0xFF6
 14949                           tablat	equ	0xFF5
 14950                           prodh	equ	0xFF4
 14951                           prodl	equ	0xFF3
 14952                           intcon	equ	0xFF2
 14953                           intcon2	equ	0xFF1
 14954                           intcon3	equ	0xFF0
 14955                           postinc0	equ	0xFEE
 14956                           fsr0h	equ	0xFEA
 14957                           fsr0l	equ	0xFE9
 14958                           wreg	equ	0xFE8
 14959                           fsr1h	equ	0xFE2
 14960                           fsr1l	equ	0xFE1
 14961                           indf2	equ	0xFDF
 14962                           postinc2	equ	0xFDE
 14963                           postdec2	equ	0xFDD
 14964                           fsr2h	equ	0xFDA
 14965                           fsr2l	equ	0xFD9
 14966                           status	equ	0xFD8
 14967                           
 14968 ;; *************** function i2_isdigit *****************
 14969 ;; Defined at:
 14970 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
 14971 ;; Parameters:    Size  Location     Type
 14972 ;;  c               1    wreg     unsigned char 
 14973 ;; Auto vars:     Size  Location     Type
 14974 ;;  c               1    2[COMRAM] unsigned char 
 14975 ;; Return value:  Size  Location     Type
 14976 ;;		None               void
 14977 ;; Registers used:
 14978 ;;		wreg, status,2, status,0
 14979 ;; Tracked objects:
 14980 ;;		On entry : 0/0
 14981 ;;		On exit  : 0/0
 14982 ;;		Unchanged: 0/0
 14983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14984 ;;      Params:         0       0       0       0       0       0       0
 14985 ;;      Locals:         2       0       0       0       0       0       0
 14986 ;;      Temps:          1       0       0       0       0       0       0
 14987 ;;      Totals:         3       0       0       0       0       0       0
 14988 ;;Total ram usage:        3 bytes
 14989 ;; Hardware stack levels used:    1
 14990 ;; This function calls:
 14991 ;;		Nothing
 14992 ;; This function is called by:
 14993 ;;		i2__doprnt
 14994 ;; This function uses a non-reentrant model
 14995 ;;
 14996                           
 14997                           	psect	text53
 14998  005A3A                     __ptext53:
 14999                           	opt stack 0
 15000  005A3A                     i2_isdigit:
 15001                           	opt stack 21
 15002                           
 15003                           ;incstack = 0
 15004                           ;i2isdigit@c stored from wreg
 15005  005A3A  6E03               	movwf	i2isdigit@c,c
 15006  005A3C  0E00               	movlw	0
 15007  005A3E  6E02               	movwf	i2_isdigit$1301,c
 15008  005A40  0E3A               	movlw	58
 15009  005A42  6003               	cpfslt	i2isdigit@c,c
 15010  005A44  D005               	goto	i2l4371
 15011  005A46  0E2F               	movlw	47
 15012  005A48  6403               	cpfsgt	i2isdigit@c,c
 15013  005A4A  D002               	goto	i2l4371
 15014  005A4C  0E01               	movlw	1
 15015  005A4E  6E02               	movwf	i2_isdigit$1301,c
 15016  005A50                     i2l4371:
 15017  005A50  C002  F001         	movff	i2_isdigit$1301,??i2_isdigit
 15018  005A54  3001               	rrcf	??i2_isdigit,w,c
 15019  005A56  0012               	return	
 15020  005A58                     __end_ofi2_isdigit:
 15021                           	opt stack 0
 15022                           tosu	equ	0xFFF
 15023                           tosh	equ	0xFFE
 15024                           tosl	equ	0xFFD
 15025                           pclatu	equ	0xFFB
 15026                           pclath	equ	0xFFA
 15027                           tblptru	equ	0xFF8
 15028                           tblptrh	equ	0xFF7
 15029                           tblptrl	equ	0xFF6
 15030                           tablat	equ	0xFF5
 15031                           prodh	equ	0xFF4
 15032                           prodl	equ	0xFF3
 15033                           intcon	equ	0xFF2
 15034                           intcon2	equ	0xFF1
 15035                           intcon3	equ	0xFF0
 15036                           postinc0	equ	0xFEE
 15037                           fsr0h	equ	0xFEA
 15038                           fsr0l	equ	0xFE9
 15039                           wreg	equ	0xFE8
 15040                           fsr1h	equ	0xFE2
 15041                           fsr1l	equ	0xFE1
 15042                           indf2	equ	0xFDF
 15043                           postinc2	equ	0xFDE
 15044                           postdec2	equ	0xFDD
 15045                           fsr2h	equ	0xFDA
 15046                           fsr2l	equ	0xFD9
 15047                           status	equ	0xFD8
 15048                           
 15049 ;; *************** function i2_fround *****************
 15050 ;; Defined at:
 15051 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 15052 ;; Parameters:    Size  Location     Type
 15053 ;;  prec            1    wreg     unsigned char 
 15054 ;; Auto vars:     Size  Location     Type
 15055 ;;  prec            1   56[COMRAM] unsigned char 
 15056 ;; Return value:  Size  Location     Type
 15057 ;;                  3   47[COMRAM] unsigned char 
 15058 ;; Registers used:
 15059 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15060 ;; Tracked objects:
 15061 ;;		On entry : 0/0
 15062 ;;		On exit  : 0/0
 15063 ;;		Unchanged: 0/0
 15064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15065 ;;      Params:         3       0       0       0       0       0       0
 15066 ;;      Locals:         7       0       0       0       0       0       0
 15067 ;;      Temps:          0       0       0       0       0       0       0
 15068 ;;      Totals:        10       0       0       0       0       0       0
 15069 ;;Total ram usage:       10 bytes
 15070 ;; Hardware stack levels used:    1
 15071 ;; Hardware stack levels required when called:    2
 15072 ;; This function calls:
 15073 ;;		i2___awdiv
 15074 ;;		i2___awmod
 15075 ;;		i2___ftmul
 15076 ;;		i2___wmul
 15077 ;; This function is called by:
 15078 ;;		i2__doprnt
 15079 ;; This function uses a non-reentrant model
 15080 ;;
 15081                           
 15082                           	psect	text54
 15083  003884                     __ptext54:
 15084                           	opt stack 0
 15085  003884                     i2_fround:
 15086                           	opt stack 19
 15087                           
 15088                           ;incstack = 0
 15089                           ;i2fround@prec stored from wreg
 15090  003884  6E39               	movwf	i2fround@prec,c
 15091                           
 15092                           ;doprnt.c: 413: if(prec>=110)
 15093  003886  0E6D               	movlw	109
 15094  003888  6439               	cpfsgt	i2fround@prec,c
 15095  00388A  D09F               	goto	i2l4121
 15096                           
 15097                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15098  00388C  0E00               	movlw	0
 15099  00388E  6E12               	movwf	i2___wmul@multiplicand+1,c
 15100  003890  0E03               	movlw	3
 15101  003892  6E11               	movwf	i2___wmul@multiplicand,c
 15102  003894  0E00               	movlw	0
 15103  003896  6E0A               	movwf	i2___awdiv@divisor+1,c
 15104  003898  0E0A               	movlw	10
 15105  00389A  6E09               	movwf	i2___awdiv@divisor,c
 15106  00389C  0E00               	movlw	0
 15107  00389E  6E04               	movwf	i2___awmod@divisor+1,c
 15108  0038A0  0E64               	movlw	100
 15109  0038A2  6E03               	movwf	i2___awmod@divisor,c
 15110  0038A4  C039  F001         	movff	i2fround@prec,i2___awmod@dividend
 15111  0038A8  6A02               	clrf	i2___awmod@dividend+1,c
 15112  0038AA  EC40  F02A         	call	i2___awmod	;wreg free
 15113  0038AE  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 15114  0038B2  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 15115  0038B6  EC42  F029         	call	i2___awdiv	;wreg free
 15116  0038BA  0E09               	movlw	9
 15117  0038BC  2407               	addwf	?i2___awdiv,w,c
 15118  0038BE  6E0F               	movwf	i2___wmul@multiplier,c
 15119  0038C0  0E00               	movlw	0
 15120  0038C2  2008               	addwfc	?i2___awdiv+1,w,c
 15121  0038C4  6E10               	movwf	i2___wmul@multiplier+1,c
 15122  0038C6  ECE6  F02C         	call	i2___wmul	;wreg free
 15123  0038CA  0E29               	movlw	low __npowers_
 15124  0038CC  240F               	addwf	?i2___wmul,w,c
 15125  0038CE  6EF6               	movwf	tblptrl,c
 15126  0038D0  0E06               	movlw	high __npowers_
 15127  0038D2  2010               	addwfc	?i2___wmul+1,w,c
 15128  0038D4  6EF7               	movwf	tblptrh,c
 15129  0038D6                     	if	0	;There are less than 3 active tblptr bytes
 15130  0038D6                     	endif
 15131  0038D6  0009               	tblrd		*+
 15132  0038D8  CFF5 F024          	movff	tablat,i2___ftmul@f2
 15133  0038DC  0009               	tblrd		*+
 15134  0038DE  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 15135  0038E2  000A               	tblrd		*-
 15136  0038E4  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 15137  0038E8  0E00               	movlw	0
 15138  0038EA  6E0A               	movwf	i2___awdiv@divisor+1,c
 15139  0038EC  0E64               	movlw	100
 15140  0038EE  6E09               	movwf	i2___awdiv@divisor,c
 15141  0038F0  C039  F007         	movff	i2fround@prec,i2___awdiv@dividend
 15142  0038F4  6A08               	clrf	i2___awdiv@dividend+1,c
 15143  0038F6  EC42  F029         	call	i2___awdiv	;wreg free
 15144  0038FA  0E12               	movlw	18
 15145  0038FC  2407               	addwf	?i2___awdiv,w,c
 15146  0038FE  6E0F               	movwf	i2___wmul@multiplier,c
 15147  003900  0E00               	movlw	0
 15148  003902  2008               	addwfc	?i2___awdiv+1,w,c
 15149  003904  6E10               	movwf	i2___wmul@multiplier+1,c
 15150  003906  0E00               	movlw	0
 15151  003908  6E12               	movwf	i2___wmul@multiplicand+1,c
 15152  00390A  0E03               	movlw	3
 15153  00390C  6E11               	movwf	i2___wmul@multiplicand,c
 15154  00390E  ECE6  F02C         	call	i2___wmul	;wreg free
 15155  003912  0E29               	movlw	low __npowers_
 15156  003914  240F               	addwf	?i2___wmul,w,c
 15157  003916  6EF6               	movwf	tblptrl,c
 15158  003918  0E06               	movlw	high __npowers_
 15159  00391A  2010               	addwfc	?i2___wmul+1,w,c
 15160  00391C  6EF7               	movwf	tblptrh,c
 15161  00391E                     	if	0	;There are less than 3 active tblptr bytes
 15162  00391E                     	endif
 15163  00391E  0009               	tblrd		*+
 15164  003920  CFF5 F021          	movff	tablat,i2___ftmul@f1
 15165  003924  0009               	tblrd		*+
 15166  003926  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 15167  00392A  000A               	tblrd		*-
 15168  00392C  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 15169  003930  EC7D  F025         	call	i2___ftmul	;wreg free
 15170  003934  C021  F036         	movff	?i2___ftmul,i2_fround$1950
 15171  003938  C022  F037         	movff	?i2___ftmul+1,i2_fround$1950+1
 15172  00393C  C023  F038         	movff	?i2___ftmul+2,i2_fround$1950+2
 15173                           
 15174                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15175  003940  0E00               	movlw	0
 15176  003942  6E12               	movwf	i2___wmul@multiplicand+1,c
 15177  003944  0E03               	movlw	3
 15178  003946  6E11               	movwf	i2___wmul@multiplicand,c
 15179  003948  0E00               	movlw	0
 15180  00394A  6E04               	movwf	i2___awmod@divisor+1,c
 15181  00394C  0E0A               	movlw	10
 15182  00394E  6E03               	movwf	i2___awmod@divisor,c
 15183  003950  C039  F001         	movff	i2fround@prec,i2___awmod@dividend
 15184  003954  6A02               	clrf	i2___awmod@dividend+1,c
 15185  003956  EC40  F02A         	call	i2___awmod	;wreg free
 15186  00395A  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 15187  00395E  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15188  003962  ECE6  F02C         	call	i2___wmul	;wreg free
 15189  003966  0E29               	movlw	low __npowers_
 15190  003968  240F               	addwf	?i2___wmul,w,c
 15191  00396A  6EF6               	movwf	tblptrl,c
 15192  00396C  0E06               	movlw	high __npowers_
 15193  00396E  2010               	addwfc	?i2___wmul+1,w,c
 15194  003970  6EF7               	movwf	tblptrh,c
 15195  003972                     	if	0	;There are less than 3 active tblptr bytes
 15196  003972                     	endif
 15197  003972  0009               	tblrd		*+
 15198  003974  CFF5 F024          	movff	tablat,i2___ftmul@f2
 15199  003978  0009               	tblrd		*+
 15200  00397A  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 15201  00397E  000A               	tblrd		*-
 15202  003980  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 15203  003984  C036  F021         	movff	i2_fround$1950,i2___ftmul@f1
 15204  003988  C037  F022         	movff	i2_fround$1950+1,i2___ftmul@f1+1
 15205  00398C  C038  F023         	movff	i2_fround$1950+2,i2___ftmul@f1+2
 15206  003990  EC7D  F025         	call	i2___ftmul	;wreg free
 15207  003994  C021  F033         	movff	?i2___ftmul,i2_fround$1951
 15208  003998  C022  F034         	movff	?i2___ftmul+1,i2_fround$1951+1
 15209  00399C  C023  F035         	movff	?i2___ftmul+2,i2_fround$1951+2
 15210                           
 15211                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15212  0039A0  C033  F021         	movff	i2_fround$1951,i2___ftmul@f1
 15213  0039A4  C034  F022         	movff	i2_fround$1951+1,i2___ftmul@f1+1
 15214  0039A8  C035  F023         	movff	i2_fround$1951+2,i2___ftmul@f1+2
 15215  0039AC  0E00               	movlw	0
 15216  0039AE  6E24               	movwf	i2___ftmul@f2,c
 15217  0039B0  0E00               	movlw	0
 15218  0039B2  6E25               	movwf	i2___ftmul@f2+1,c
 15219  0039B4  0E3F               	movlw	63
 15220  0039B6  6E26               	movwf	i2___ftmul@f2+2,c
 15221  0039B8  EC7D  F025         	call	i2___ftmul	;wreg free
 15222  0039BC  C021  F030         	movff	?i2___ftmul,?i2_fround
 15223  0039C0  C022  F031         	movff	?i2___ftmul+1,?i2_fround+1
 15224  0039C4  C023  F032         	movff	?i2___ftmul+2,?i2_fround+2
 15225  0039C8  0012               	return	
 15226  0039CA                     i2l4121:
 15227                           
 15228                           ;doprnt.c: 415: else if(prec > 10)
 15229  0039CA  0E0A               	movlw	10
 15230  0039CC  6439               	cpfsgt	i2fround@prec,c
 15231  0039CE  D05D               	goto	i2l4129
 15232                           
 15233                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 15234  0039D0  0E00               	movlw	0
 15235  0039D2  6E12               	movwf	i2___wmul@multiplicand+1,c
 15236  0039D4  0E03               	movlw	3
 15237  0039D6  6E11               	movwf	i2___wmul@multiplicand,c
 15238  0039D8  0E00               	movlw	0
 15239  0039DA  6E04               	movwf	i2___awmod@divisor+1,c
 15240  0039DC  0E0A               	movlw	10
 15241  0039DE  6E03               	movwf	i2___awmod@divisor,c
 15242  0039E0  C039  F001         	movff	i2fround@prec,i2___awmod@dividend
 15243  0039E4  6A02               	clrf	i2___awmod@dividend+1,c
 15244  0039E6  EC40  F02A         	call	i2___awmod	;wreg free
 15245  0039EA  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 15246  0039EE  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15247  0039F2  ECE6  F02C         	call	i2___wmul	;wreg free
 15248  0039F6  0E29               	movlw	low __npowers_
 15249  0039F8  240F               	addwf	?i2___wmul,w,c
 15250  0039FA  6EF6               	movwf	tblptrl,c
 15251  0039FC  0E06               	movlw	high __npowers_
 15252  0039FE  2010               	addwfc	?i2___wmul+1,w,c
 15253  003A00  6EF7               	movwf	tblptrh,c
 15254  003A02                     	if	0	;There are less than 3 active tblptr bytes
 15255  003A02                     	endif
 15256  003A02  0009               	tblrd		*+
 15257  003A04  CFF5 F024          	movff	tablat,i2___ftmul@f2
 15258  003A08  0009               	tblrd		*+
 15259  003A0A  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 15260  003A0E  000A               	tblrd		*-
 15261  003A10  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 15262  003A14  0E00               	movlw	0
 15263  003A16  6E0A               	movwf	i2___awdiv@divisor+1,c
 15264  003A18  0E0A               	movlw	10
 15265  003A1A  6E09               	movwf	i2___awdiv@divisor,c
 15266  003A1C  C039  F007         	movff	i2fround@prec,i2___awdiv@dividend
 15267  003A20  6A08               	clrf	i2___awdiv@dividend+1,c
 15268  003A22  EC42  F029         	call	i2___awdiv	;wreg free
 15269  003A26  0E09               	movlw	9
 15270  003A28  2407               	addwf	?i2___awdiv,w,c
 15271  003A2A  6E0F               	movwf	i2___wmul@multiplier,c
 15272  003A2C  0E00               	movlw	0
 15273  003A2E  2008               	addwfc	?i2___awdiv+1,w,c
 15274  003A30  6E10               	movwf	i2___wmul@multiplier+1,c
 15275  003A32  0E00               	movlw	0
 15276  003A34  6E12               	movwf	i2___wmul@multiplicand+1,c
 15277  003A36  0E03               	movlw	3
 15278  003A38  6E11               	movwf	i2___wmul@multiplicand,c
 15279  003A3A  ECE6  F02C         	call	i2___wmul	;wreg free
 15280  003A3E  0E29               	movlw	low __npowers_
 15281  003A40  240F               	addwf	?i2___wmul,w,c
 15282  003A42  6EF6               	movwf	tblptrl,c
 15283  003A44  0E06               	movlw	high __npowers_
 15284  003A46  2010               	addwfc	?i2___wmul+1,w,c
 15285  003A48  6EF7               	movwf	tblptrh,c
 15286  003A4A                     	if	0	;There are less than 3 active tblptr bytes
 15287  003A4A                     	endif
 15288  003A4A  0009               	tblrd		*+
 15289  003A4C  CFF5 F021          	movff	tablat,i2___ftmul@f1
 15290  003A50  0009               	tblrd		*+
 15291  003A52  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 15292  003A56  000A               	tblrd		*-
 15293  003A58  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 15294  003A5C  EC7D  F025         	call	i2___ftmul	;wreg free
 15295  003A60  C021  F036         	movff	?i2___ftmul,i2_fround$1950
 15296  003A64  C022  F037         	movff	?i2___ftmul+1,i2_fround$1950+1
 15297  003A68  C023  F038         	movff	?i2___ftmul+2,i2_fround$1950+2
 15298                           
 15299                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 15300  003A6C  C036  F021         	movff	i2_fround$1950,i2___ftmul@f1
 15301  003A70  C037  F022         	movff	i2_fround$1950+1,i2___ftmul@f1+1
 15302  003A74  C038  F023         	movff	i2_fround$1950+2,i2___ftmul@f1+2
 15303  003A78  0E00               	movlw	0
 15304  003A7A  6E24               	movwf	i2___ftmul@f2,c
 15305  003A7C  0E00               	movlw	0
 15306  003A7E  6E25               	movwf	i2___ftmul@f2+1,c
 15307  003A80  0E3F               	movlw	63
 15308  003A82  6E26               	movwf	i2___ftmul@f2+2,c
 15309  003A84  EC7D  F025         	call	i2___ftmul	;wreg free
 15310  003A88  D799               	goto	L10
 15311  003A8A                     i2l4129:
 15312                           
 15313                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 15314  003A8A  5039               	movf	i2fround@prec,w,c
 15315  003A8C  0D03               	mullw	3
 15316  003A8E  0E29               	movlw	low __npowers_
 15317  003A90  24F3               	addwf	prodl,w,c
 15318  003A92  6EF6               	movwf	tblptrl,c
 15319  003A94  0E06               	movlw	high __npowers_
 15320  003A96  20F4               	addwfc	prodh,w,c
 15321  003A98  6EF7               	movwf	tblptrh,c
 15322  003A9A                     	if	0	;There are less than 3 active tblptr bytes
 15323  003A9A                     	endif
 15324  003A9A  0009               	tblrd		*+
 15325  003A9C  CFF5 F021          	movff	tablat,i2___ftmul@f1
 15326  003AA0  0009               	tblrd		*+
 15327  003AA2  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 15328  003AA6  000A               	tblrd		*-
 15329  003AA8  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 15330  003AAC  0E00               	movlw	0
 15331  003AAE  6E24               	movwf	i2___ftmul@f2,c
 15332  003AB0  0E00               	movlw	0
 15333  003AB2  6E25               	movwf	i2___ftmul@f2+1,c
 15334  003AB4  0E3F               	movlw	63
 15335  003AB6  6E26               	movwf	i2___ftmul@f2+2,c
 15336  003AB8  EC7D  F025         	call	i2___ftmul	;wreg free
 15337  003ABC  C021  F030         	movff	?i2___ftmul,?i2_fround
 15338  003AC0  C022  F031         	movff	?i2___ftmul+1,?i2_fround+1
 15339  003AC4  C023  F032         	movff	?i2___ftmul+2,?i2_fround+2
 15340  003AC8  0012               	return	
 15341  003ACA                     __end_ofi2_fround:
 15342                           	opt stack 0
 15343                           tosu	equ	0xFFF
 15344                           tosh	equ	0xFFE
 15345                           tosl	equ	0xFFD
 15346                           pclatu	equ	0xFFB
 15347                           pclath	equ	0xFFA
 15348                           tblptru	equ	0xFF8
 15349                           tblptrh	equ	0xFF7
 15350                           tblptrl	equ	0xFF6
 15351                           tablat	equ	0xFF5
 15352                           prodh	equ	0xFF4
 15353                           prodl	equ	0xFF3
 15354                           intcon	equ	0xFF2
 15355                           intcon2	equ	0xFF1
 15356                           intcon3	equ	0xFF0
 15357                           postinc0	equ	0xFEE
 15358                           fsr0h	equ	0xFEA
 15359                           fsr0l	equ	0xFE9
 15360                           wreg	equ	0xFE8
 15361                           fsr1h	equ	0xFE2
 15362                           fsr1l	equ	0xFE1
 15363                           indf2	equ	0xFDF
 15364                           postinc2	equ	0xFDE
 15365                           postdec2	equ	0xFDD
 15366                           fsr2h	equ	0xFDA
 15367                           fsr2l	equ	0xFD9
 15368                           status	equ	0xFD8
 15369                           
 15370 ;; *************** function i2___wmul *****************
 15371 ;; Defined at:
 15372 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 15373 ;; Parameters:    Size  Location     Type
 15374 ;;  multiplier      2   14[COMRAM] unsigned int 
 15375 ;;  multiplicand    2   16[COMRAM] unsigned int 
 15376 ;; Auto vars:     Size  Location     Type
 15377 ;;  __wmul          2   18[COMRAM] unsigned int 
 15378 ;; Return value:  Size  Location     Type
 15379 ;;                  2   14[COMRAM] unsigned int 
 15380 ;; Registers used:
 15381 ;;		wreg, status,2, status,0, prodl, prodh
 15382 ;; Tracked objects:
 15383 ;;		On entry : 0/0
 15384 ;;		On exit  : 0/0
 15385 ;;		Unchanged: 0/0
 15386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15387 ;;      Params:         4       0       0       0       0       0       0
 15388 ;;      Locals:         2       0       0       0       0       0       0
 15389 ;;      Temps:          0       0       0       0       0       0       0
 15390 ;;      Totals:         6       0       0       0       0       0       0
 15391 ;;Total ram usage:        6 bytes
 15392 ;; Hardware stack levels used:    1
 15393 ;; This function calls:
 15394 ;;		Nothing
 15395 ;; This function is called by:
 15396 ;;		_INT0_ISR
 15397 ;;		i2_fround
 15398 ;;		i2_scale
 15399 ;;		i2__doprnt
 15400 ;; This function uses a non-reentrant model
 15401 ;;
 15402                           
 15403                           	psect	text55
 15404  0059CC                     __ptext55:
 15405                           	opt stack 0
 15406  0059CC                     i2___wmul:
 15407                           	opt stack 23
 15408                           
 15409                           ;incstack = 0
 15410  0059CC  500F               	movf	i2___wmul@multiplier,w,c
 15411  0059CE  0211               	mulwf	i2___wmul@multiplicand,c
 15412  0059D0  CFF3 F013          	movff	prodl,i2___wmul@product
 15413  0059D4  CFF4 F014          	movff	prodh,i2___wmul@product+1
 15414  0059D8  500F               	movf	i2___wmul@multiplier,w,c
 15415  0059DA  0212               	mulwf	i2___wmul@multiplicand+1,c
 15416  0059DC  50F3               	movf	prodl,w,c
 15417  0059DE  2614               	addwf	i2___wmul@product+1,f,c
 15418  0059E0  5010               	movf	i2___wmul@multiplier+1,w,c
 15419  0059E2  0211               	mulwf	i2___wmul@multiplicand,c
 15420  0059E4  50F3               	movf	prodl,w,c
 15421  0059E6  2614               	addwf	i2___wmul@product+1,f,c
 15422  0059E8  C013  F00F         	movff	i2___wmul@product,?i2___wmul
 15423  0059EC  C014  F010         	movff	i2___wmul@product+1,?i2___wmul+1
 15424  0059F0  0012               	return	
 15425  0059F2                     __end_ofi2___wmul:
 15426                           	opt stack 0
 15427                           tosu	equ	0xFFF
 15428                           tosh	equ	0xFFE
 15429                           tosl	equ	0xFFD
 15430                           pclatu	equ	0xFFB
 15431                           pclath	equ	0xFFA
 15432                           tblptru	equ	0xFF8
 15433                           tblptrh	equ	0xFF7
 15434                           tblptrl	equ	0xFF6
 15435                           tablat	equ	0xFF5
 15436                           prodh	equ	0xFF4
 15437                           prodl	equ	0xFF3
 15438                           intcon	equ	0xFF2
 15439                           intcon2	equ	0xFF1
 15440                           intcon3	equ	0xFF0
 15441                           postinc0	equ	0xFEE
 15442                           fsr0h	equ	0xFEA
 15443                           fsr0l	equ	0xFE9
 15444                           wreg	equ	0xFE8
 15445                           fsr1h	equ	0xFE2
 15446                           fsr1l	equ	0xFE1
 15447                           indf2	equ	0xFDF
 15448                           postinc2	equ	0xFDE
 15449                           postdec2	equ	0xFDD
 15450                           fsr2h	equ	0xFDA
 15451                           fsr2l	equ	0xFD9
 15452                           status	equ	0xFD8
 15453                           
 15454 ;; *************** function i2___ftmul *****************
 15455 ;; Defined at:
 15456 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
 15457 ;; Parameters:    Size  Location     Type
 15458 ;;  f1              3   32[COMRAM] float 
 15459 ;;  f2              3   35[COMRAM] float 
 15460 ;; Auto vars:     Size  Location     Type
 15461 ;;  __ftmul         3   42[COMRAM] unsigned um
 15462 ;;  __ftmul         1   46[COMRAM] unsigned char 
 15463 ;;  __ftmul         1   45[COMRAM] unsigned char 
 15464 ;;  __ftmul         1   41[COMRAM] unsigned char 
 15465 ;; Return value:  Size  Location     Type
 15466 ;;                  3   32[COMRAM] float 
 15467 ;; Registers used:
 15468 ;;		wreg, status,2, status,0, cstack
 15469 ;; Tracked objects:
 15470 ;;		On entry : 0/0
 15471 ;;		On exit  : 0/0
 15472 ;;		Unchanged: 0/0
 15473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15474 ;;      Params:         6       0       0       0       0       0       0
 15475 ;;      Locals:         6       0       0       0       0       0       0
 15476 ;;      Temps:          3       0       0       0       0       0       0
 15477 ;;      Totals:        15       0       0       0       0       0       0
 15478 ;;Total ram usage:       15 bytes
 15479 ;; Hardware stack levels used:    1
 15480 ;; Hardware stack levels required when called:    1
 15481 ;; This function calls:
 15482 ;;		i2___ftpack
 15483 ;; This function is called by:
 15484 ;;		_INT0_ISR
 15485 ;;		i2_fround
 15486 ;;		i2_scale
 15487 ;;		i2__doprnt
 15488 ;; This function uses a non-reentrant model
 15489 ;;
 15490                           
 15491                           	psect	text56
 15492  004AFA                     __ptext56:
 15493                           	opt stack 0
 15494  004AFA                     i2___ftmul:
 15495                           	opt stack 22
 15496                           
 15497                           ;incstack = 0
 15498  004AFA  C023  F027         	movff	i2___ftmul@f1+2,??i2___ftmul
 15499  004AFE  6A28               	clrf	(??i2___ftmul+1)& (0+255),c
 15500  004B00  6A29               	clrf	(??i2___ftmul+2)& (0+255),c
 15501  004B02  3422               	rlcf	i2___ftmul@f1+1,w,c
 15502  004B04  3627               	rlcf	??i2___ftmul& (0+255),f,c
 15503  004B06  E301               	bnc	u465_41
 15504  004B08  8028               	bsf	(??i2___ftmul+1)& (0+255),0,c
 15505  004B0A                     u465_41:
 15506  004B0A  5027               	movf	??i2___ftmul,w,c
 15507  004B0C  6E2A               	movwf	i2___ftmul@exp,c
 15508  004B0E  502A               	movf	i2___ftmul@exp,w,c
 15509  004B10  A4D8               	btfss	status,2,c
 15510  004B12  D007               	goto	i2l3859
 15511  004B14  0E00               	movlw	0
 15512  004B16  6E21               	movwf	?i2___ftmul,c
 15513  004B18  0E00               	movlw	0
 15514  004B1A  6E22               	movwf	?i2___ftmul+1,c
 15515  004B1C  0E00               	movlw	0
 15516  004B1E  6E23               	movwf	?i2___ftmul+2,c
 15517  004B20  0012               	return	
 15518  004B22                     i2l3859:
 15519  004B22  C026  F027         	movff	i2___ftmul@f2+2,??i2___ftmul
 15520  004B26  6A28               	clrf	(??i2___ftmul+1)& (0+255),c
 15521  004B28  6A29               	clrf	(??i2___ftmul+2)& (0+255),c
 15522  004B2A  3425               	rlcf	i2___ftmul@f2+1,w,c
 15523  004B2C  3627               	rlcf	??i2___ftmul& (0+255),f,c
 15524  004B2E  E301               	bnc	u467_41
 15525  004B30  8028               	bsf	(??i2___ftmul+1)& (0+255),0,c
 15526  004B32                     u467_41:
 15527  004B32  5027               	movf	??i2___ftmul,w,c
 15528  004B34  6E2F               	movwf	i2___ftmul@sign,c
 15529  004B36  502F               	movf	i2___ftmul@sign,w,c
 15530  004B38  A4D8               	btfss	status,2,c
 15531  004B3A  D007               	goto	i2l3865
 15532  004B3C  0E00               	movlw	0
 15533  004B3E  6E21               	movwf	?i2___ftmul,c
 15534  004B40  0E00               	movlw	0
 15535  004B42  6E22               	movwf	?i2___ftmul+1,c
 15536  004B44  0E00               	movlw	0
 15537  004B46  6E23               	movwf	?i2___ftmul+2,c
 15538  004B48  0012               	return	
 15539  004B4A                     i2l3865:
 15540  004B4A  502F               	movf	i2___ftmul@sign,w,c
 15541  004B4C  0F7B               	addlw	123
 15542  004B4E  262A               	addwf	i2___ftmul@exp,f,c
 15543  004B50  C023  F02F         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 15544  004B54  5026               	movf	i2___ftmul@f2+2,w,c
 15545  004B56  1A2F               	xorwf	i2___ftmul@sign,f,c
 15546  004B58  0E80               	movlw	128
 15547  004B5A  162F               	andwf	i2___ftmul@sign,f,c
 15548  004B5C  8E22               	bsf	i2___ftmul@f1+1,7,c
 15549  004B5E  8E25               	bsf	i2___ftmul@f2+1,7,c
 15550  004B60  0EFF               	movlw	255
 15551  004B62  1624               	andwf	i2___ftmul@f2,f,c
 15552  004B64  0EFF               	movlw	255
 15553  004B66  1625               	andwf	i2___ftmul@f2+1,f,c
 15554  004B68  0E00               	movlw	0
 15555  004B6A  1626               	andwf	i2___ftmul@f2+2,f,c
 15556  004B6C  0E00               	movlw	0
 15557  004B6E  6E2B               	movwf	i2___ftmul@f3_as_product,c
 15558  004B70  0E00               	movlw	0
 15559  004B72  6E2C               	movwf	i2___ftmul@f3_as_product+1,c
 15560  004B74  0E00               	movlw	0
 15561  004B76  6E2D               	movwf	i2___ftmul@f3_as_product+2,c
 15562  004B78  0E07               	movlw	7
 15563  004B7A  6E2E               	movwf	i2___ftmul@cntr,c
 15564  004B7C                     i2l3879:
 15565  004B7C  A021               	btfss	i2___ftmul@f1,0,c
 15566  004B7E  D006               	goto	i2l3883
 15567  004B80  5024               	movf	i2___ftmul@f2,w,c
 15568  004B82  262B               	addwf	i2___ftmul@f3_as_product,f,c
 15569  004B84  5025               	movf	i2___ftmul@f2+1,w,c
 15570  004B86  222C               	addwfc	i2___ftmul@f3_as_product+1,f,c
 15571  004B88  5026               	movf	i2___ftmul@f2+2,w,c
 15572  004B8A  222D               	addwfc	i2___ftmul@f3_as_product+2,f,c
 15573  004B8C                     i2l3883:
 15574  004B8C  90D8               	bcf	status,0,c
 15575  004B8E  3223               	rrcf	i2___ftmul@f1+2,f,c
 15576  004B90  3222               	rrcf	i2___ftmul@f1+1,f,c
 15577  004B92  3221               	rrcf	i2___ftmul@f1,f,c
 15578  004B94  90D8               	bcf	status,0,c
 15579  004B96  3624               	rlcf	i2___ftmul@f2,f,c
 15580  004B98  3625               	rlcf	i2___ftmul@f2+1,f,c
 15581  004B9A  3626               	rlcf	i2___ftmul@f2+2,f,c
 15582  004B9C  2E2E               	decfsz	i2___ftmul@cntr,f,c
 15583  004B9E  D7EE               	goto	i2l3879
 15584  004BA0  0E09               	movlw	9
 15585  004BA2  6E2E               	movwf	i2___ftmul@cntr,c
 15586  004BA4                     i2l3889:
 15587  004BA4  A021               	btfss	i2___ftmul@f1,0,c
 15588  004BA6  D006               	goto	i2l3893
 15589  004BA8  5024               	movf	i2___ftmul@f2,w,c
 15590  004BAA  262B               	addwf	i2___ftmul@f3_as_product,f,c
 15591  004BAC  5025               	movf	i2___ftmul@f2+1,w,c
 15592  004BAE  222C               	addwfc	i2___ftmul@f3_as_product+1,f,c
 15593  004BB0  5026               	movf	i2___ftmul@f2+2,w,c
 15594  004BB2  222D               	addwfc	i2___ftmul@f3_as_product+2,f,c
 15595  004BB4                     i2l3893:
 15596  004BB4  90D8               	bcf	status,0,c
 15597  004BB6  3223               	rrcf	i2___ftmul@f1+2,f,c
 15598  004BB8  3222               	rrcf	i2___ftmul@f1+1,f,c
 15599  004BBA  3221               	rrcf	i2___ftmul@f1,f,c
 15600  004BBC  90D8               	bcf	status,0,c
 15601  004BBE  322D               	rrcf	i2___ftmul@f3_as_product+2,f,c
 15602  004BC0  322C               	rrcf	i2___ftmul@f3_as_product+1,f,c
 15603  004BC2  322B               	rrcf	i2___ftmul@f3_as_product,f,c
 15604  004BC4  2E2E               	decfsz	i2___ftmul@cntr,f,c
 15605  004BC6  D7EE               	goto	i2l3889
 15606  004BC8  C02B  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 15607  004BCC  C02C  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 15608  004BD0  C02D  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 15609  004BD4  C02A  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 15610  004BD8  C02F  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 15611  004BDC  EC05  F028         	call	i2___ftpack	;wreg free
 15612  004BE0  C001  F021         	movff	?i2___ftpack,?i2___ftmul
 15613  004BE4  C002  F022         	movff	?i2___ftpack+1,?i2___ftmul+1
 15614  004BE8  C003  F023         	movff	?i2___ftpack+2,?i2___ftmul+2
 15615  004BEC  0012               	return	
 15616  004BEE                     __end_ofi2___ftmul:
 15617                           	opt stack 0
 15618                           tosu	equ	0xFFF
 15619                           tosh	equ	0xFFE
 15620                           tosl	equ	0xFFD
 15621                           pclatu	equ	0xFFB
 15622                           pclath	equ	0xFFA
 15623                           tblptru	equ	0xFF8
 15624                           tblptrh	equ	0xFF7
 15625                           tblptrl	equ	0xFF6
 15626                           tablat	equ	0xFF5
 15627                           prodh	equ	0xFF4
 15628                           prodl	equ	0xFF3
 15629                           intcon	equ	0xFF2
 15630                           intcon2	equ	0xFF1
 15631                           intcon3	equ	0xFF0
 15632                           postinc0	equ	0xFEE
 15633                           fsr0h	equ	0xFEA
 15634                           fsr0l	equ	0xFE9
 15635                           wreg	equ	0xFE8
 15636                           fsr1h	equ	0xFE2
 15637                           fsr1l	equ	0xFE1
 15638                           indf2	equ	0xFDF
 15639                           postinc2	equ	0xFDE
 15640                           postdec2	equ	0xFDD
 15641                           fsr2h	equ	0xFDA
 15642                           fsr2l	equ	0xFD9
 15643                           status	equ	0xFD8
 15644                           
 15645 ;; *************** function i2___awmod *****************
 15646 ;; Defined at:
 15647 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 15648 ;; Parameters:    Size  Location     Type
 15649 ;;  dividend        2    0[COMRAM] int 
 15650 ;;  divisor         2    2[COMRAM] int 
 15651 ;; Auto vars:     Size  Location     Type
 15652 ;;  __awmod         1    5[COMRAM] unsigned char 
 15653 ;;  __awmod         1    4[COMRAM] unsigned char 
 15654 ;; Return value:  Size  Location     Type
 15655 ;;                  2    0[COMRAM] int 
 15656 ;; Registers used:
 15657 ;;		wreg, status,2, status,0
 15658 ;; Tracked objects:
 15659 ;;		On entry : 0/0
 15660 ;;		On exit  : 0/0
 15661 ;;		Unchanged: 0/0
 15662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15663 ;;      Params:         4       0       0       0       0       0       0
 15664 ;;      Locals:         2       0       0       0       0       0       0
 15665 ;;      Temps:          0       0       0       0       0       0       0
 15666 ;;      Totals:         6       0       0       0       0       0       0
 15667 ;;Total ram usage:        6 bytes
 15668 ;; Hardware stack levels used:    1
 15669 ;; This function calls:
 15670 ;;		Nothing
 15671 ;; This function is called by:
 15672 ;;		i2_fround
 15673 ;;		i2_scale
 15674 ;; This function uses a non-reentrant model
 15675 ;;
 15676                           
 15677                           	psect	text57
 15678  005480                     __ptext57:
 15679                           	opt stack 0
 15680  005480                     i2___awmod:
 15681                           	opt stack 20
 15682                           
 15683                           ;incstack = 0
 15684  005480  0E00               	movlw	0
 15685  005482  6E06               	movwf	i2___awmod@sign,c
 15686  005484  AE02               	btfss	i2___awmod@dividend+1,7,c
 15687  005486  D006               	goto	i2l3755
 15688  005488  6C01               	negf	i2___awmod@dividend,c
 15689  00548A  1E02               	comf	i2___awmod@dividend+1,f,c
 15690  00548C  B0D8               	btfsc	status,0,c
 15691  00548E  2A02               	incf	i2___awmod@dividend+1,f,c
 15692  005490  0E01               	movlw	1
 15693  005492  6E06               	movwf	i2___awmod@sign,c
 15694  005494                     i2l3755:
 15695  005494  AE04               	btfss	i2___awmod@divisor+1,7,c
 15696  005496  D004               	goto	i2l3759
 15697  005498  6C03               	negf	i2___awmod@divisor,c
 15698  00549A  1E04               	comf	i2___awmod@divisor+1,f,c
 15699  00549C  B0D8               	btfsc	status,0,c
 15700  00549E  2A04               	incf	i2___awmod@divisor+1,f,c
 15701  0054A0                     i2l3759:
 15702  0054A0  5003               	movf	i2___awmod@divisor,w,c
 15703  0054A2  1004               	iorwf	i2___awmod@divisor+1,w,c
 15704  0054A4  B4D8               	btfsc	status,2,c
 15705  0054A6  D018               	goto	i2l3775
 15706  0054A8  0E01               	movlw	1
 15707  0054AA  6E05               	movwf	i2___awmod@counter,c
 15708  0054AC  D004               	goto	i2l3765
 15709  0054AE                     i2l3763:
 15710  0054AE  90D8               	bcf	status,0,c
 15711  0054B0  3603               	rlcf	i2___awmod@divisor,f,c
 15712  0054B2  3604               	rlcf	i2___awmod@divisor+1,f,c
 15713  0054B4  2A05               	incf	i2___awmod@counter,f,c
 15714  0054B6                     i2l3765:
 15715  0054B6  AE04               	btfss	i2___awmod@divisor+1,7,c
 15716  0054B8  D7FA               	goto	i2l3763
 15717  0054BA                     i2l3767:
 15718  0054BA  5003               	movf	i2___awmod@divisor,w,c
 15719  0054BC  5C01               	subwf	i2___awmod@dividend,w,c
 15720  0054BE  5004               	movf	i2___awmod@divisor+1,w,c
 15721  0054C0  5802               	subwfb	i2___awmod@dividend+1,w,c
 15722  0054C2  A0D8               	btfss	status,0,c
 15723  0054C4  D004               	goto	i2l3771
 15724  0054C6  5003               	movf	i2___awmod@divisor,w,c
 15725  0054C8  5E01               	subwf	i2___awmod@dividend,f,c
 15726  0054CA  5004               	movf	i2___awmod@divisor+1,w,c
 15727  0054CC  5A02               	subwfb	i2___awmod@dividend+1,f,c
 15728  0054CE                     i2l3771:
 15729  0054CE  90D8               	bcf	status,0,c
 15730  0054D0  3204               	rrcf	i2___awmod@divisor+1,f,c
 15731  0054D2  3203               	rrcf	i2___awmod@divisor,f,c
 15732  0054D4  2E05               	decfsz	i2___awmod@counter,f,c
 15733  0054D6  D7F1               	goto	i2l3767
 15734  0054D8                     i2l3775:
 15735  0054D8  5006               	movf	i2___awmod@sign,w,c
 15736  0054DA  B4D8               	btfsc	status,2,c
 15737  0054DC  D004               	goto	i2l3779
 15738  0054DE  6C01               	negf	i2___awmod@dividend,c
 15739  0054E0  1E02               	comf	i2___awmod@dividend+1,f,c
 15740  0054E2  B0D8               	btfsc	status,0,c
 15741  0054E4  2A02               	incf	i2___awmod@dividend+1,f,c
 15742  0054E6                     i2l3779:
 15743  0054E6  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 15744  0054EA  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 15745  0054EE  0012               	return	
 15746  0054F0                     __end_ofi2___awmod:
 15747                           	opt stack 0
 15748                           tosu	equ	0xFFF
 15749                           tosh	equ	0xFFE
 15750                           tosl	equ	0xFFD
 15751                           pclatu	equ	0xFFB
 15752                           pclath	equ	0xFFA
 15753                           tblptru	equ	0xFF8
 15754                           tblptrh	equ	0xFF7
 15755                           tblptrl	equ	0xFF6
 15756                           tablat	equ	0xFF5
 15757                           prodh	equ	0xFF4
 15758                           prodl	equ	0xFF3
 15759                           intcon	equ	0xFF2
 15760                           intcon2	equ	0xFF1
 15761                           intcon3	equ	0xFF0
 15762                           postinc0	equ	0xFEE
 15763                           fsr0h	equ	0xFEA
 15764                           fsr0l	equ	0xFE9
 15765                           wreg	equ	0xFE8
 15766                           fsr1h	equ	0xFE2
 15767                           fsr1l	equ	0xFE1
 15768                           indf2	equ	0xFDF
 15769                           postinc2	equ	0xFDE
 15770                           postdec2	equ	0xFDD
 15771                           fsr2h	equ	0xFDA
 15772                           fsr2l	equ	0xFD9
 15773                           status	equ	0xFD8
 15774                           
 15775 ;; *************** function i2___awdiv *****************
 15776 ;; Defined at:
 15777 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 15778 ;; Parameters:    Size  Location     Type
 15779 ;;  dividend        2    6[COMRAM] int 
 15780 ;;  divisor         2    8[COMRAM] int 
 15781 ;; Auto vars:     Size  Location     Type
 15782 ;;  __awdiv         2   12[COMRAM] int 
 15783 ;;  __awdiv         1   11[COMRAM] unsigned char 
 15784 ;;  __awdiv         1   10[COMRAM] unsigned char 
 15785 ;; Return value:  Size  Location     Type
 15786 ;;                  2    6[COMRAM] int 
 15787 ;; Registers used:
 15788 ;;		wreg, status,2, status,0
 15789 ;; Tracked objects:
 15790 ;;		On entry : 0/0
 15791 ;;		On exit  : 0/0
 15792 ;;		Unchanged: 0/0
 15793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15794 ;;      Params:         4       0       0       0       0       0       0
 15795 ;;      Locals:         4       0       0       0       0       0       0
 15796 ;;      Temps:          0       0       0       0       0       0       0
 15797 ;;      Totals:         8       0       0       0       0       0       0
 15798 ;;Total ram usage:        8 bytes
 15799 ;; Hardware stack levels used:    1
 15800 ;; This function calls:
 15801 ;;		Nothing
 15802 ;; This function is called by:
 15803 ;;		i2_fround
 15804 ;;		i2_scale
 15805 ;;		i2__doprnt
 15806 ;; This function uses a non-reentrant model
 15807 ;;
 15808                           
 15809                           	psect	text58
 15810  005284                     __ptext58:
 15811                           	opt stack 0
 15812  005284                     i2___awdiv:
 15813                           	opt stack 20
 15814                           
 15815                           ;incstack = 0
 15816  005284  0E00               	movlw	0
 15817  005286  6E0C               	movwf	i2___awdiv@sign,c
 15818  005288  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 15819  00528A  D006               	goto	i2l3711
 15820  00528C  6C09               	negf	i2___awdiv@divisor,c
 15821  00528E  1E0A               	comf	i2___awdiv@divisor+1,f,c
 15822  005290  B0D8               	btfsc	status,0,c
 15823  005292  2A0A               	incf	i2___awdiv@divisor+1,f,c
 15824  005294  0E01               	movlw	1
 15825  005296  6E0C               	movwf	i2___awdiv@sign,c
 15826  005298                     i2l3711:
 15827  005298  AE08               	btfss	i2___awdiv@dividend+1,7,c
 15828  00529A  D006               	goto	i2l3717
 15829  00529C  6C07               	negf	i2___awdiv@dividend,c
 15830  00529E  1E08               	comf	i2___awdiv@dividend+1,f,c
 15831  0052A0  B0D8               	btfsc	status,0,c
 15832  0052A2  2A08               	incf	i2___awdiv@dividend+1,f,c
 15833  0052A4  0E01               	movlw	1
 15834  0052A6  1A0C               	xorwf	i2___awdiv@sign,f,c
 15835  0052A8                     i2l3717:
 15836  0052A8  0E00               	movlw	0
 15837  0052AA  6E0E               	movwf	i2___awdiv@quotient+1,c
 15838  0052AC  0E00               	movlw	0
 15839  0052AE  6E0D               	movwf	i2___awdiv@quotient,c
 15840  0052B0  5009               	movf	i2___awdiv@divisor,w,c
 15841  0052B2  100A               	iorwf	i2___awdiv@divisor+1,w,c
 15842  0052B4  B4D8               	btfsc	status,2,c
 15843  0052B6  D01C               	goto	i2l3739
 15844  0052B8  0E01               	movlw	1
 15845  0052BA  6E0B               	movwf	i2___awdiv@counter,c
 15846  0052BC  D004               	goto	i2l3725
 15847  0052BE                     i2l3723:
 15848  0052BE  90D8               	bcf	status,0,c
 15849  0052C0  3609               	rlcf	i2___awdiv@divisor,f,c
 15850  0052C2  360A               	rlcf	i2___awdiv@divisor+1,f,c
 15851  0052C4  2A0B               	incf	i2___awdiv@counter,f,c
 15852  0052C6                     i2l3725:
 15853  0052C6  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 15854  0052C8  D7FA               	goto	i2l3723
 15855  0052CA                     i2l3727:
 15856  0052CA  90D8               	bcf	status,0,c
 15857  0052CC  360D               	rlcf	i2___awdiv@quotient,f,c
 15858  0052CE  360E               	rlcf	i2___awdiv@quotient+1,f,c
 15859  0052D0  5009               	movf	i2___awdiv@divisor,w,c
 15860  0052D2  5C07               	subwf	i2___awdiv@dividend,w,c
 15861  0052D4  500A               	movf	i2___awdiv@divisor+1,w,c
 15862  0052D6  5808               	subwfb	i2___awdiv@dividend+1,w,c
 15863  0052D8  A0D8               	btfss	status,0,c
 15864  0052DA  D005               	goto	i2l3735
 15865  0052DC  5009               	movf	i2___awdiv@divisor,w,c
 15866  0052DE  5E07               	subwf	i2___awdiv@dividend,f,c
 15867  0052E0  500A               	movf	i2___awdiv@divisor+1,w,c
 15868  0052E2  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 15869  0052E4  800D               	bsf	i2___awdiv@quotient,0,c
 15870  0052E6                     i2l3735:
 15871  0052E6  90D8               	bcf	status,0,c
 15872  0052E8  320A               	rrcf	i2___awdiv@divisor+1,f,c
 15873  0052EA  3209               	rrcf	i2___awdiv@divisor,f,c
 15874  0052EC  2E0B               	decfsz	i2___awdiv@counter,f,c
 15875  0052EE  D7ED               	goto	i2l3727
 15876  0052F0                     i2l3739:
 15877  0052F0  500C               	movf	i2___awdiv@sign,w,c
 15878  0052F2  B4D8               	btfsc	status,2,c
 15879  0052F4  D004               	goto	i2l3743
 15880  0052F6  6C0D               	negf	i2___awdiv@quotient,c
 15881  0052F8  1E0E               	comf	i2___awdiv@quotient+1,f,c
 15882  0052FA  B0D8               	btfsc	status,0,c
 15883  0052FC  2A0E               	incf	i2___awdiv@quotient+1,f,c
 15884  0052FE                     i2l3743:
 15885  0052FE  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 15886  005302  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 15887  005306  0012               	return	
 15888  005308                     __end_ofi2___awdiv:
 15889                           	opt stack 0
 15890                           tosu	equ	0xFFF
 15891                           tosh	equ	0xFFE
 15892                           tosl	equ	0xFFD
 15893                           pclatu	equ	0xFFB
 15894                           pclath	equ	0xFFA
 15895                           tblptru	equ	0xFF8
 15896                           tblptrh	equ	0xFF7
 15897                           tblptrl	equ	0xFF6
 15898                           tablat	equ	0xFF5
 15899                           prodh	equ	0xFF4
 15900                           prodl	equ	0xFF3
 15901                           intcon	equ	0xFF2
 15902                           intcon2	equ	0xFF1
 15903                           intcon3	equ	0xFF0
 15904                           postinc0	equ	0xFEE
 15905                           fsr0h	equ	0xFEA
 15906                           fsr0l	equ	0xFE9
 15907                           wreg	equ	0xFE8
 15908                           fsr1h	equ	0xFE2
 15909                           fsr1l	equ	0xFE1
 15910                           indf2	equ	0xFDF
 15911                           postinc2	equ	0xFDE
 15912                           postdec2	equ	0xFDD
 15913                           fsr2h	equ	0xFDA
 15914                           fsr2l	equ	0xFD9
 15915                           status	equ	0xFD8
 15916                           
 15917 ;; *************** function i2__tdiv_to_l_ *****************
 15918 ;; Defined at:
 15919 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdivl.c"
 15920 ;; Parameters:    Size  Location     Type
 15921 ;;  f1              3    0[COMRAM] float 
 15922 ;;  f2              3    3[COMRAM] float 
 15923 ;; Auto vars:     Size  Location     Type
 15924 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 15925 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 15926 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 15927 ;; Return value:  Size  Location     Type
 15928 ;;                  4    0[COMRAM] unsigned long 
 15929 ;; Registers used:
 15930 ;;		wreg, status,2, status,0
 15931 ;; Tracked objects:
 15932 ;;		On entry : 0/0
 15933 ;;		On exit  : 0/0
 15934 ;;		Unchanged: 0/0
 15935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15936 ;;      Params:         6       0       0       0       0       0       0
 15937 ;;      Locals:         6       0       0       0       0       0       0
 15938 ;;      Temps:          3       0       0       0       0       0       0
 15939 ;;      Totals:        15       0       0       0       0       0       0
 15940 ;;Total ram usage:       15 bytes
 15941 ;; Hardware stack levels used:    1
 15942 ;; This function calls:
 15943 ;;		Nothing
 15944 ;; This function is called by:
 15945 ;;		i2__doprnt
 15946 ;; This function uses a non-reentrant model
 15947 ;;
 15948                           
 15949                           	psect	text59
 15950  004694                     __ptext59:
 15951                           	opt stack 0
 15952  004694                     i2__tdiv_to_l_:
 15953                           	opt stack 21
 15954                           
 15955                           ;incstack = 0
 15956  004694  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 15957  004698  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 15958  00469A  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 15959  00469C  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 15960  00469E  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 15961  0046A0  E301               	bnc	u525_41
 15962  0046A2  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 15963  0046A4                     u525_41:
 15964  0046A4  5007               	movf	??i2__tdiv_to_l_,w,c
 15965  0046A6  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 15966  0046A8  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 15967  0046AA  A4D8               	btfss	status,2,c
 15968  0046AC  D009               	goto	i2l4237
 15969  0046AE  0E00               	movlw	0
 15970  0046B0  6E01               	movwf	?i2__tdiv_to_l_,c
 15971  0046B2  0E00               	movlw	0
 15972  0046B4  6E02               	movwf	?i2__tdiv_to_l_+1,c
 15973  0046B6  0E00               	movlw	0
 15974  0046B8  6E03               	movwf	?i2__tdiv_to_l_+2,c
 15975  0046BA  0E00               	movlw	0
 15976  0046BC  6E04               	movwf	?i2__tdiv_to_l_+3,c
 15977  0046BE  0012               	return	
 15978  0046C0                     i2l4237:
 15979  0046C0  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 15980  0046C4  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 15981  0046C6  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 15982  0046C8  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 15983  0046CA  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 15984  0046CC  E301               	bnc	u527_41
 15985  0046CE  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 15986  0046D0                     u527_41:
 15987  0046D0  5007               	movf	??i2__tdiv_to_l_,w,c
 15988  0046D2  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 15989  0046D4  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 15990  0046D6  A4D8               	btfss	status,2,c
 15991  0046D8  D009               	goto	i2l4243
 15992  0046DA  0E00               	movlw	0
 15993  0046DC  6E01               	movwf	?i2__tdiv_to_l_,c
 15994  0046DE  0E00               	movlw	0
 15995  0046E0  6E02               	movwf	?i2__tdiv_to_l_+1,c
 15996  0046E2  0E00               	movlw	0
 15997  0046E4  6E03               	movwf	?i2__tdiv_to_l_+2,c
 15998  0046E6  0E00               	movlw	0
 15999  0046E8  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16000  0046EA  0012               	return	
 16001  0046EC                     i2l4243:
 16002  0046EC  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 16003  0046EE  0EFF               	movlw	255
 16004  0046F0  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 16005  0046F2  0EFF               	movlw	255
 16006  0046F4  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 16007  0046F6  0E00               	movlw	0
 16008  0046F8  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 16009  0046FA  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 16010  0046FC  0EFF               	movlw	255
 16011  0046FE  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 16012  004700  0EFF               	movlw	255
 16013  004702  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 16014  004704  0E00               	movlw	0
 16015  004706  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 16016  004708  0E00               	movlw	0
 16017  00470A  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 16018  00470C  0E00               	movlw	0
 16019  00470E  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 16020  004710  0E00               	movlw	0
 16021  004712  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 16022  004714  0E00               	movlw	0
 16023  004716  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 16024  004718  0E7F               	movlw	127
 16025  00471A  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 16026  00471C  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 16027  00471E  0F98               	addlw	152
 16028  004720  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 16029  004722  0E18               	movlw	24
 16030  004724  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 16031  004726                     i2l837:
 16032  004726  90D8               	bcf	status,0,c
 16033  004728  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 16034  00472A  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 16035  00472C  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 16036  00472E  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 16037  004730  5004               	movf	i2__tdiv_to_l_@f2,w,c
 16038  004732  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 16039  004734  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 16040  004736  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 16041  004738  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 16042  00473A  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 16043  00473C  A0D8               	btfss	status,0,c
 16044  00473E  D007               	goto	i2l838
 16045  004740  5004               	movf	i2__tdiv_to_l_@f2,w,c
 16046  004742  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 16047  004744  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 16048  004746  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 16049  004748  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 16050  00474A  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 16051  00474C  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 16052  00474E                     i2l838:
 16053  00474E  90D8               	bcf	status,0,c
 16054  004750  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 16055  004752  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 16056  004754  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 16057  004756  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 16058  004758  D7E6               	goto	i2l837
 16059  00475A  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 16060  00475C  D016               	goto	i2l4277
 16061  00475E  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 16062  004760  0A80               	xorlw	128
 16063  004762  0F97               	addlw	151
 16064  004764  B0D8               	btfsc	status,0,c
 16065  004766  D009               	goto	i2l4273
 16066  004768  0E00               	movlw	0
 16067  00476A  6E01               	movwf	?i2__tdiv_to_l_,c
 16068  00476C  0E00               	movlw	0
 16069  00476E  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16070  004770  0E00               	movlw	0
 16071  004772  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16072  004774  0E00               	movlw	0
 16073  004776  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16074  004778  0012               	return	
 16075  00477A                     i2l4273:
 16076  00477A  90D8               	bcf	status,0,c
 16077  00477C  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 16078  00477E  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 16079  004780  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 16080  004782  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 16081  004784  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 16082  004786  D7F9               	goto	i2l4273
 16083  004788  D015               	goto	i2l844
 16084  00478A                     i2l4277:
 16085  00478A  0E17               	movlw	23
 16086  00478C  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 16087  00478E  D00F               	goto	i2l4285
 16088  004790  0E00               	movlw	0
 16089  004792  6E01               	movwf	?i2__tdiv_to_l_,c
 16090  004794  0E00               	movlw	0
 16091  004796  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16092  004798  0E00               	movlw	0
 16093  00479A  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16094  00479C  0E00               	movlw	0
 16095  00479E  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16096  0047A0  0012               	return	
 16097  0047A2                     i2l4283:
 16098  0047A2  90D8               	bcf	status,0,c
 16099  0047A4  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 16100  0047A6  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 16101  0047A8  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 16102  0047AA  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 16103  0047AC  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 16104  0047AE                     i2l4285:
 16105  0047AE  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 16106  0047B0  A4D8               	btfss	status,2,c
 16107  0047B2  D7F7               	goto	i2l4283
 16108  0047B4                     i2l844:
 16109  0047B4  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 16110  0047B8  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 16111  0047BC  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 16112  0047C0  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 16113  0047C4  0012               	return		;funcret
 16114  0047C6                     __end_ofi2__tdiv_to_l_:
 16115                           	opt stack 0
 16116                           tosu	equ	0xFFF
 16117                           tosh	equ	0xFFE
 16118                           tosl	equ	0xFFD
 16119                           pclatu	equ	0xFFB
 16120                           pclath	equ	0xFFA
 16121                           tblptru	equ	0xFF8
 16122                           tblptrh	equ	0xFF7
 16123                           tblptrl	equ	0xFF6
 16124                           tablat	equ	0xFF5
 16125                           prodh	equ	0xFF4
 16126                           prodl	equ	0xFF3
 16127                           intcon	equ	0xFF2
 16128                           intcon2	equ	0xFF1
 16129                           intcon3	equ	0xFF0
 16130                           postinc0	equ	0xFEE
 16131                           fsr0h	equ	0xFEA
 16132                           fsr0l	equ	0xFE9
 16133                           wreg	equ	0xFE8
 16134                           fsr1h	equ	0xFE2
 16135                           fsr1l	equ	0xFE1
 16136                           indf2	equ	0xFDF
 16137                           postinc2	equ	0xFDE
 16138                           postdec2	equ	0xFDD
 16139                           fsr2h	equ	0xFDA
 16140                           fsr2l	equ	0xFD9
 16141                           status	equ	0xFD8
 16142                           
 16143 ;; *************** function i2__div_to_l_ *****************
 16144 ;; Defined at:
 16145 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fldivl.c"
 16146 ;; Parameters:    Size  Location     Type
 16147 ;;  f1              3    0[COMRAM] unsigned long 
 16148 ;;  f2              3    3[COMRAM] unsigned long 
 16149 ;; Auto vars:     Size  Location     Type
 16150 ;;  _div_to_l_      4    6[COMRAM] unsigned long 
 16151 ;;  _div_to_l_      1   11[COMRAM] unsigned char 
 16152 ;;  _div_to_l_      1   10[COMRAM] unsigned char 
 16153 ;; Return value:  Size  Location     Type
 16154 ;;                  4    0[COMRAM] unsigned long 
 16155 ;; Registers used:
 16156 ;;		wreg, status,2, status,0
 16157 ;; Tracked objects:
 16158 ;;		On entry : 0/0
 16159 ;;		On exit  : 0/0
 16160 ;;		Unchanged: 0/0
 16161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16162 ;;      Params:         6       0       0       0       0       0       0
 16163 ;;      Locals:         6       0       0       0       0       0       0
 16164 ;;      Temps:          0       0       0       0       0       0       0
 16165 ;;      Totals:        12       0       0       0       0       0       0
 16166 ;;Total ram usage:       12 bytes
 16167 ;; Hardware stack levels used:    1
 16168 ;; This function calls:
 16169 ;;		Nothing
 16170 ;; This function is called by:
 16171 ;;		i2__doprnt
 16172 ;; This function uses a non-reentrant model
 16173 ;;
 16174                           
 16175                           	psect	text60
 16176  0047C6                     __ptext60:
 16177                           	opt stack 0
 16178  0047C6                     i2__div_to_l_:
 16179                           	opt stack 21
 16180                           
 16181                           ;incstack = 0
 16182  0047C6  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 16183  0047C8  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 16184  0047CA  6E0C               	movwf	i2__div_to_l_@exp1,c
 16185  0047CC  500C               	movf	i2__div_to_l_@exp1,w,c
 16186  0047CE  A4D8               	btfss	status,2,c
 16187  0047D0  D009               	goto	i2l4177
 16188  0047D2  0E00               	movlw	0
 16189  0047D4  6E01               	movwf	?i2__div_to_l_,c
 16190  0047D6  0E00               	movlw	0
 16191  0047D8  6E02               	movwf	?i2__div_to_l_+1,c
 16192  0047DA  0E00               	movlw	0
 16193  0047DC  6E03               	movwf	?i2__div_to_l_+2,c
 16194  0047DE  0E00               	movlw	0
 16195  0047E0  6E04               	movwf	?i2__div_to_l_+3,c
 16196  0047E2  0012               	return	
 16197  0047E4                     i2l4177:
 16198  0047E4  3406               	rlcf	i2__div_to_l_@f2+2,w,c
 16199  0047E6  3407               	rlcf	i2__div_to_l_@f2+3,w,c
 16200  0047E8  6E0B               	movwf	i2__div_to_l_@cntr,c
 16201  0047EA  500B               	movf	i2__div_to_l_@cntr,w,c
 16202  0047EC  A4D8               	btfss	status,2,c
 16203  0047EE  D009               	goto	i2l4183
 16204  0047F0  0E00               	movlw	0
 16205  0047F2  6E01               	movwf	?i2__div_to_l_,c
 16206  0047F4  0E00               	movlw	0
 16207  0047F6  6E02               	movwf	?i2__div_to_l_+1,c
 16208  0047F8  0E00               	movlw	0
 16209  0047FA  6E03               	movwf	?i2__div_to_l_+2,c
 16210  0047FC  0E00               	movlw	0
 16211  0047FE  6E04               	movwf	?i2__div_to_l_+3,c
 16212  004800  0012               	return	
 16213  004802                     i2l4183:
 16214  004802  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 16215  004804  0EFF               	movlw	255
 16216  004806  1601               	andwf	i2__div_to_l_@f1,f,c
 16217  004808  0EFF               	movlw	255
 16218  00480A  1602               	andwf	i2__div_to_l_@f1+1,f,c
 16219  00480C  0EFF               	movlw	255
 16220  00480E  1603               	andwf	i2__div_to_l_@f1+2,f,c
 16221  004810  0E00               	movlw	0
 16222  004812  1604               	andwf	i2__div_to_l_@f1+3,f,c
 16223  004814  8E06               	bsf	i2__div_to_l_@f2+2,7,c
 16224  004816  0EFF               	movlw	255
 16225  004818  1604               	andwf	i2__div_to_l_@f2,f,c
 16226  00481A  0EFF               	movlw	255
 16227  00481C  1605               	andwf	i2__div_to_l_@f2+1,f,c
 16228  00481E  0EFF               	movlw	255
 16229  004820  1606               	andwf	i2__div_to_l_@f2+2,f,c
 16230  004822  0E00               	movlw	0
 16231  004824  1607               	andwf	i2__div_to_l_@f2+3,f,c
 16232  004826  0E00               	movlw	0
 16233  004828  6E07               	movwf	i2__div_to_l_@quot,c
 16234  00482A  0E00               	movlw	0
 16235  00482C  6E08               	movwf	i2__div_to_l_@quot+1,c
 16236  00482E  0E00               	movlw	0
 16237  004830  6E09               	movwf	i2__div_to_l_@quot+2,c
 16238  004832  0E00               	movlw	0
 16239  004834  6E0A               	movwf	i2__div_to_l_@quot+3,c
 16240  004836  0E7F               	movlw	127
 16241  004838  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 16242  00483A  500B               	movf	i2__div_to_l_@cntr,w,c
 16243  00483C  0FA0               	addlw	160
 16244  00483E  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 16245  004840  0E20               	movlw	32
 16246  004842  6E0B               	movwf	i2__div_to_l_@cntr,c
 16247  004844                     i2l4197:
 16248  004844  90D8               	bcf	status,0,c
 16249  004846  3607               	rlcf	i2__div_to_l_@quot,f,c
 16250  004848  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 16251  00484A  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 16252  00484C  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 16253  00484E  5004               	movf	i2__div_to_l_@f2,w,c
 16254  004850  5C01               	subwf	i2__div_to_l_@f1,w,c
 16255  004852  5005               	movf	i2__div_to_l_@f2+1,w,c
 16256  004854  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 16257  004856  5006               	movf	i2__div_to_l_@f2+2,w,c
 16258  004858  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 16259  00485A  5007               	movf	i2__div_to_l_@f2+3,w,c
 16260  00485C  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 16261  00485E  A0D8               	btfss	status,0,c
 16262  004860  D009               	goto	i2l4205
 16263  004862  5004               	movf	i2__div_to_l_@f2,w,c
 16264  004864  5E01               	subwf	i2__div_to_l_@f1,f,c
 16265  004866  5005               	movf	i2__div_to_l_@f2+1,w,c
 16266  004868  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 16267  00486A  5006               	movf	i2__div_to_l_@f2+2,w,c
 16268  00486C  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 16269  00486E  5007               	movf	i2__div_to_l_@f2+3,w,c
 16270  004870  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 16271  004872  8007               	bsf	i2__div_to_l_@quot,0,c
 16272  004874                     i2l4205:
 16273  004874  90D8               	bcf	status,0,c
 16274  004876  3601               	rlcf	i2__div_to_l_@f1,f,c
 16275  004878  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 16276  00487A  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 16277  00487C  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 16278  00487E  2E0B               	decfsz	i2__div_to_l_@cntr,f,c
 16279  004880  D7E1               	goto	i2l4197
 16280  004882  AE0C               	btfss	i2__div_to_l_@exp1,7,c
 16281  004884  D016               	goto	i2l4221
 16282  004886  500C               	movf	i2__div_to_l_@exp1,w,c
 16283  004888  0A80               	xorlw	128
 16284  00488A  0F9F               	addlw	159
 16285  00488C  B0D8               	btfsc	status,0,c
 16286  00488E  D009               	goto	i2l4217
 16287  004890  0E00               	movlw	0
 16288  004892  6E01               	movwf	?i2__div_to_l_,c
 16289  004894  0E00               	movlw	0
 16290  004896  6E02               	movwf	?i2__div_to_l_+1,c
 16291  004898  0E00               	movlw	0
 16292  00489A  6E03               	movwf	?i2__div_to_l_+2,c
 16293  00489C  0E00               	movlw	0
 16294  00489E  6E04               	movwf	?i2__div_to_l_+3,c
 16295  0048A0  0012               	return	
 16296  0048A2                     i2l4217:
 16297  0048A2  90D8               	bcf	status,0,c
 16298  0048A4  320A               	rrcf	i2__div_to_l_@quot+3,f,c
 16299  0048A6  3209               	rrcf	i2__div_to_l_@quot+2,f,c
 16300  0048A8  3208               	rrcf	i2__div_to_l_@quot+1,f,c
 16301  0048AA  3207               	rrcf	i2__div_to_l_@quot,f,c
 16302  0048AC  3E0C               	incfsz	i2__div_to_l_@exp1,f,c
 16303  0048AE  D7F9               	goto	i2l4217
 16304  0048B0  D015               	goto	i2l740
 16305  0048B2                     i2l4221:
 16306  0048B2  0E1F               	movlw	31
 16307  0048B4  640C               	cpfsgt	i2__div_to_l_@exp1,c
 16308  0048B6  D00F               	goto	i2l4229
 16309  0048B8  0E00               	movlw	0
 16310  0048BA  6E01               	movwf	?i2__div_to_l_,c
 16311  0048BC  0E00               	movlw	0
 16312  0048BE  6E02               	movwf	?i2__div_to_l_+1,c
 16313  0048C0  0E00               	movlw	0
 16314  0048C2  6E03               	movwf	?i2__div_to_l_+2,c
 16315  0048C4  0E00               	movlw	0
 16316  0048C6  6E04               	movwf	?i2__div_to_l_+3,c
 16317  0048C8  0012               	return	
 16318  0048CA                     i2l4227:
 16319  0048CA  90D8               	bcf	status,0,c
 16320  0048CC  3607               	rlcf	i2__div_to_l_@quot,f,c
 16321  0048CE  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 16322  0048D0  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 16323  0048D2  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 16324  0048D4  060C               	decf	i2__div_to_l_@exp1,f,c
 16325  0048D6                     i2l4229:
 16326  0048D6  500C               	movf	i2__div_to_l_@exp1,w,c
 16327  0048D8  A4D8               	btfss	status,2,c
 16328  0048DA  D7F7               	goto	i2l4227
 16329  0048DC                     i2l740:
 16330  0048DC  C007  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 16331  0048E0  C008  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 16332  0048E4  C009  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 16333  0048E8  C00A  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 16334  0048EC  0012               	return		;funcret
 16335  0048EE                     __end_ofi2__div_to_l_:
 16336                           	opt stack 0
 16337                           tosu	equ	0xFFF
 16338                           tosh	equ	0xFFE
 16339                           tosl	equ	0xFFD
 16340                           pclatu	equ	0xFFB
 16341                           pclath	equ	0xFFA
 16342                           tblptru	equ	0xFF8
 16343                           tblptrh	equ	0xFF7
 16344                           tblptrl	equ	0xFF6
 16345                           tablat	equ	0xFF5
 16346                           prodh	equ	0xFF4
 16347                           prodl	equ	0xFF3
 16348                           intcon	equ	0xFF2
 16349                           intcon2	equ	0xFF1
 16350                           intcon3	equ	0xFF0
 16351                           postinc0	equ	0xFEE
 16352                           fsr0h	equ	0xFEA
 16353                           fsr0l	equ	0xFE9
 16354                           wreg	equ	0xFE8
 16355                           fsr1h	equ	0xFE2
 16356                           fsr1l	equ	0xFE1
 16357                           indf2	equ	0xFDF
 16358                           postinc2	equ	0xFDE
 16359                           postdec2	equ	0xFDD
 16360                           fsr2h	equ	0xFDA
 16361                           fsr2l	equ	0xFD9
 16362                           status	equ	0xFD8
 16363                           
 16364 ;; *************** function i2___lltoft *****************
 16365 ;; Defined at:
 16366 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lltoft.c"
 16367 ;; Parameters:    Size  Location     Type
 16368 ;;  c               4    8[COMRAM] unsigned long 
 16369 ;; Auto vars:     Size  Location     Type
 16370 ;;  __lltoft        1   16[COMRAM] unsigned char 
 16371 ;; Return value:  Size  Location     Type
 16372 ;;                  3    8[COMRAM] float 
 16373 ;; Registers used:
 16374 ;;		wreg, status,2, status,0, cstack
 16375 ;; Tracked objects:
 16376 ;;		On entry : 0/0
 16377 ;;		On exit  : 0/0
 16378 ;;		Unchanged: 0/0
 16379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16380 ;;      Params:         4       0       0       0       0       0       0
 16381 ;;      Locals:         1       0       0       0       0       0       0
 16382 ;;      Temps:          4       0       0       0       0       0       0
 16383 ;;      Totals:         9       0       0       0       0       0       0
 16384 ;;Total ram usage:        9 bytes
 16385 ;; Hardware stack levels used:    1
 16386 ;; Hardware stack levels required when called:    1
 16387 ;; This function calls:
 16388 ;;		i2___ftpack
 16389 ;; This function is called by:
 16390 ;;		i2__doprnt
 16391 ;; This function uses a non-reentrant model
 16392 ;;
 16393                           
 16394                           	psect	text61
 16395  005556                     __ptext61:
 16396                           	opt stack 0
 16397  005556                     i2___lltoft:
 16398                           	opt stack 20
 16399                           
 16400                           ;incstack = 0
 16401  005556  0E8E               	movlw	142
 16402  005558  6E11               	movwf	i2___lltoft@exp,c
 16403  00555A  D006               	goto	i2l4417
 16404  00555C                     i2l4415:
 16405  00555C  90D8               	bcf	status,0,c
 16406  00555E  320C               	rrcf	i2___lltoft@c+3,f,c
 16407  005560  320B               	rrcf	i2___lltoft@c+2,f,c
 16408  005562  320A               	rrcf	i2___lltoft@c+1,f,c
 16409  005564  3209               	rrcf	i2___lltoft@c,f,c
 16410  005566  2A11               	incf	i2___lltoft@exp,f,c
 16411  005568                     i2l4417:
 16412  005568  0E00               	movlw	0
 16413  00556A  1409               	andwf	i2___lltoft@c,w,c
 16414  00556C  6E0D               	movwf	??i2___lltoft& (0+255),c
 16415  00556E  0E00               	movlw	0
 16416  005570  140A               	andwf	i2___lltoft@c+1,w,c
 16417  005572  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 16418  005574  0E00               	movlw	0
 16419  005576  140B               	andwf	i2___lltoft@c+2,w,c
 16420  005578  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 16421  00557A  0EFF               	movlw	255
 16422  00557C  140C               	andwf	i2___lltoft@c+3,w,c
 16423  00557E  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 16424  005580  500D               	movf	??i2___lltoft,w,c
 16425  005582  100E               	iorwf	??i2___lltoft+1,w,c
 16426  005584  100F               	iorwf	??i2___lltoft+2,w,c
 16427  005586  1010               	iorwf	??i2___lltoft+3,w,c
 16428  005588  A4D8               	btfss	status,2,c
 16429  00558A  D7E8               	goto	i2l4415
 16430  00558C  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 16431  005590  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 16432  005594  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 16433  005598  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 16434  00559C  0E00               	movlw	0
 16435  00559E  6E05               	movwf	i2___ftpack@sign,c
 16436  0055A0  EC05  F028         	call	i2___ftpack	;wreg free
 16437  0055A4  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 16438  0055A8  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 16439  0055AC  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 16440  0055B0  0012               	return	
 16441  0055B2                     __end_ofi2___lltoft:
 16442                           	opt stack 0
 16443                           tosu	equ	0xFFF
 16444                           tosh	equ	0xFFE
 16445                           tosl	equ	0xFFD
 16446                           pclatu	equ	0xFFB
 16447                           pclath	equ	0xFFA
 16448                           tblptru	equ	0xFF8
 16449                           tblptrh	equ	0xFF7
 16450                           tblptrl	equ	0xFF6
 16451                           tablat	equ	0xFF5
 16452                           prodh	equ	0xFF4
 16453                           prodl	equ	0xFF3
 16454                           intcon	equ	0xFF2
 16455                           intcon2	equ	0xFF1
 16456                           intcon3	equ	0xFF0
 16457                           postinc0	equ	0xFEE
 16458                           fsr0h	equ	0xFEA
 16459                           fsr0l	equ	0xFE9
 16460                           wreg	equ	0xFE8
 16461                           fsr1h	equ	0xFE2
 16462                           fsr1l	equ	0xFE1
 16463                           indf2	equ	0xFDF
 16464                           postinc2	equ	0xFDE
 16465                           postdec2	equ	0xFDD
 16466                           fsr2h	equ	0xFDA
 16467                           fsr2l	equ	0xFD9
 16468                           status	equ	0xFD8
 16469                           
 16470 ;; *************** function i2___llmod *****************
 16471 ;; Defined at:
 16472 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
 16473 ;; Parameters:    Size  Location     Type
 16474 ;;  dividend        4   13[COMRAM] unsigned long 
 16475 ;;  divisor         4   17[COMRAM] unsigned long 
 16476 ;; Auto vars:     Size  Location     Type
 16477 ;;  __llmod         1   21[COMRAM] unsigned char 
 16478 ;; Return value:  Size  Location     Type
 16479 ;;                  4   13[COMRAM] unsigned long 
 16480 ;; Registers used:
 16481 ;;		wreg, status,2, status,0
 16482 ;; Tracked objects:
 16483 ;;		On entry : 0/0
 16484 ;;		On exit  : 0/0
 16485 ;;		Unchanged: 0/0
 16486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16487 ;;      Params:         8       0       0       0       0       0       0
 16488 ;;      Locals:         1       0       0       0       0       0       0
 16489 ;;      Temps:          0       0       0       0       0       0       0
 16490 ;;      Totals:         9       0       0       0       0       0       0
 16491 ;;Total ram usage:        9 bytes
 16492 ;; Hardware stack levels used:    1
 16493 ;; This function calls:
 16494 ;;		Nothing
 16495 ;; This function is called by:
 16496 ;;		i2__doprnt
 16497 ;; This function uses a non-reentrant model
 16498 ;;
 16499                           
 16500                           	psect	text62
 16501  0054F0                     __ptext62:
 16502                           	opt stack 0
 16503  0054F0                     i2___llmod:
 16504                           	opt stack 21
 16505                           
 16506                           ;incstack = 0
 16507  0054F0  5012               	movf	i2___llmod@divisor,w,c
 16508  0054F2  1013               	iorwf	i2___llmod@divisor+1,w,c
 16509  0054F4  1014               	iorwf	i2___llmod@divisor+2,w,c
 16510  0054F6  1015               	iorwf	i2___llmod@divisor+3,w,c
 16511  0054F8  B4D8               	btfsc	status,2,c
 16512  0054FA  D024               	goto	i2l951
 16513  0054FC  0E01               	movlw	1
 16514  0054FE  6E16               	movwf	i2___llmod@counter,c
 16515  005500  D006               	goto	i2l4403
 16516  005502                     i2l4401:
 16517  005502  90D8               	bcf	status,0,c
 16518  005504  3612               	rlcf	i2___llmod@divisor,f,c
 16519  005506  3613               	rlcf	i2___llmod@divisor+1,f,c
 16520  005508  3614               	rlcf	i2___llmod@divisor+2,f,c
 16521  00550A  3615               	rlcf	i2___llmod@divisor+3,f,c
 16522  00550C  2A16               	incf	i2___llmod@counter,f,c
 16523  00550E                     i2l4403:
 16524  00550E  AE15               	btfss	i2___llmod@divisor+3,7,c
 16525  005510  D7F8               	goto	i2l4401
 16526  005512                     i2l4405:
 16527  005512  5012               	movf	i2___llmod@divisor,w,c
 16528  005514  5C0E               	subwf	i2___llmod@dividend,w,c
 16529  005516  5013               	movf	i2___llmod@divisor+1,w,c
 16530  005518  580F               	subwfb	i2___llmod@dividend+1,w,c
 16531  00551A  5014               	movf	i2___llmod@divisor+2,w,c
 16532  00551C  5810               	subwfb	i2___llmod@dividend+2,w,c
 16533  00551E  5015               	movf	i2___llmod@divisor+3,w,c
 16534  005520  5811               	subwfb	i2___llmod@dividend+3,w,c
 16535  005522  A0D8               	btfss	status,0,c
 16536  005524  D008               	goto	i2l4409
 16537  005526  5012               	movf	i2___llmod@divisor,w,c
 16538  005528  5E0E               	subwf	i2___llmod@dividend,f,c
 16539  00552A  5013               	movf	i2___llmod@divisor+1,w,c
 16540  00552C  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 16541  00552E  5014               	movf	i2___llmod@divisor+2,w,c
 16542  005530  5A10               	subwfb	i2___llmod@dividend+2,f,c
 16543  005532  5015               	movf	i2___llmod@divisor+3,w,c
 16544  005534  5A11               	subwfb	i2___llmod@dividend+3,f,c
 16545  005536                     i2l4409:
 16546  005536  90D8               	bcf	status,0,c
 16547  005538  3215               	rrcf	i2___llmod@divisor+3,f,c
 16548  00553A  3214               	rrcf	i2___llmod@divisor+2,f,c
 16549  00553C  3213               	rrcf	i2___llmod@divisor+1,f,c
 16550  00553E  3212               	rrcf	i2___llmod@divisor,f,c
 16551  005540  2E16               	decfsz	i2___llmod@counter,f,c
 16552  005542  D7E7               	goto	i2l4405
 16553  005544                     i2l951:
 16554  005544  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 16555  005548  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 16556  00554C  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 16557  005550  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 16558  005554  0012               	return		;funcret
 16559  005556                     __end_ofi2___llmod:
 16560                           	opt stack 0
 16561                           tosu	equ	0xFFF
 16562                           tosh	equ	0xFFE
 16563                           tosl	equ	0xFFD
 16564                           pclatu	equ	0xFFB
 16565                           pclath	equ	0xFFA
 16566                           tblptru	equ	0xFF8
 16567                           tblptrh	equ	0xFF7
 16568                           tblptrl	equ	0xFF6
 16569                           tablat	equ	0xFF5
 16570                           prodh	equ	0xFF4
 16571                           prodl	equ	0xFF3
 16572                           intcon	equ	0xFF2
 16573                           intcon2	equ	0xFF1
 16574                           intcon3	equ	0xFF0
 16575                           postinc0	equ	0xFEE
 16576                           fsr0h	equ	0xFEA
 16577                           fsr0l	equ	0xFE9
 16578                           wreg	equ	0xFE8
 16579                           fsr1h	equ	0xFE2
 16580                           fsr1l	equ	0xFE1
 16581                           indf2	equ	0xFDF
 16582                           postinc2	equ	0xFDE
 16583                           postdec2	equ	0xFDD
 16584                           fsr2h	equ	0xFDA
 16585                           fsr2l	equ	0xFD9
 16586                           status	equ	0xFD8
 16587                           
 16588 ;; *************** function i2___lldiv *****************
 16589 ;; Defined at:
 16590 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
 16591 ;; Parameters:    Size  Location     Type
 16592 ;;  dividend        4    0[COMRAM] unsigned long 
 16593 ;;  divisor         4    4[COMRAM] unsigned long 
 16594 ;; Auto vars:     Size  Location     Type
 16595 ;;  __lldiv         4    8[COMRAM] unsigned long 
 16596 ;;  __lldiv         1   12[COMRAM] unsigned char 
 16597 ;; Return value:  Size  Location     Type
 16598 ;;                  4    0[COMRAM] unsigned long 
 16599 ;; Registers used:
 16600 ;;		wreg, status,2, status,0
 16601 ;; Tracked objects:
 16602 ;;		On entry : 0/0
 16603 ;;		On exit  : 0/0
 16604 ;;		Unchanged: 0/0
 16605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16606 ;;      Params:         8       0       0       0       0       0       0
 16607 ;;      Locals:         5       0       0       0       0       0       0
 16608 ;;      Temps:          0       0       0       0       0       0       0
 16609 ;;      Totals:        13       0       0       0       0       0       0
 16610 ;;Total ram usage:       13 bytes
 16611 ;; Hardware stack levels used:    1
 16612 ;; This function calls:
 16613 ;;		Nothing
 16614 ;; This function is called by:
 16615 ;;		i2__doprnt
 16616 ;; This function uses a non-reentrant model
 16617 ;;
 16618                           
 16619                           	psect	text63
 16620  005308                     __ptext63:
 16621                           	opt stack 0
 16622  005308                     i2___lldiv:
 16623                           	opt stack 21
 16624                           
 16625                           ;incstack = 0
 16626  005308  0E00               	movlw	0
 16627  00530A  6E09               	movwf	i2___lldiv@quotient,c
 16628  00530C  0E00               	movlw	0
 16629  00530E  6E0A               	movwf	i2___lldiv@quotient+1,c
 16630  005310  0E00               	movlw	0
 16631  005312  6E0B               	movwf	i2___lldiv@quotient+2,c
 16632  005314  0E00               	movlw	0
 16633  005316  6E0C               	movwf	i2___lldiv@quotient+3,c
 16634  005318  5005               	movf	i2___lldiv@divisor,w,c
 16635  00531A  1006               	iorwf	i2___lldiv@divisor+1,w,c
 16636  00531C  1007               	iorwf	i2___lldiv@divisor+2,w,c
 16637  00531E  1008               	iorwf	i2___lldiv@divisor+3,w,c
 16638  005320  B4D8               	btfsc	status,2,c
 16639  005322  D02A               	goto	i2l941
 16640  005324  0E01               	movlw	1
 16641  005326  6E0D               	movwf	i2___lldiv@counter,c
 16642  005328  D006               	goto	i2l4383
 16643  00532A                     i2l4381:
 16644  00532A  90D8               	bcf	status,0,c
 16645  00532C  3605               	rlcf	i2___lldiv@divisor,f,c
 16646  00532E  3606               	rlcf	i2___lldiv@divisor+1,f,c
 16647  005330  3607               	rlcf	i2___lldiv@divisor+2,f,c
 16648  005332  3608               	rlcf	i2___lldiv@divisor+3,f,c
 16649  005334  2A0D               	incf	i2___lldiv@counter,f,c
 16650  005336                     i2l4383:
 16651  005336  AE08               	btfss	i2___lldiv@divisor+3,7,c
 16652  005338  D7F8               	goto	i2l4381
 16653  00533A                     i2l4385:
 16654  00533A  90D8               	bcf	status,0,c
 16655  00533C  3609               	rlcf	i2___lldiv@quotient,f,c
 16656  00533E  360A               	rlcf	i2___lldiv@quotient+1,f,c
 16657  005340  360B               	rlcf	i2___lldiv@quotient+2,f,c
 16658  005342  360C               	rlcf	i2___lldiv@quotient+3,f,c
 16659  005344  5005               	movf	i2___lldiv@divisor,w,c
 16660  005346  5C01               	subwf	i2___lldiv@dividend,w,c
 16661  005348  5006               	movf	i2___lldiv@divisor+1,w,c
 16662  00534A  5802               	subwfb	i2___lldiv@dividend+1,w,c
 16663  00534C  5007               	movf	i2___lldiv@divisor+2,w,c
 16664  00534E  5803               	subwfb	i2___lldiv@dividend+2,w,c
 16665  005350  5008               	movf	i2___lldiv@divisor+3,w,c
 16666  005352  5804               	subwfb	i2___lldiv@dividend+3,w,c
 16667  005354  A0D8               	btfss	status,0,c
 16668  005356  D009               	goto	i2l4393
 16669  005358  5005               	movf	i2___lldiv@divisor,w,c
 16670  00535A  5E01               	subwf	i2___lldiv@dividend,f,c
 16671  00535C  5006               	movf	i2___lldiv@divisor+1,w,c
 16672  00535E  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 16673  005360  5007               	movf	i2___lldiv@divisor+2,w,c
 16674  005362  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 16675  005364  5008               	movf	i2___lldiv@divisor+3,w,c
 16676  005366  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 16677  005368  8009               	bsf	i2___lldiv@quotient,0,c
 16678  00536A                     i2l4393:
 16679  00536A  90D8               	bcf	status,0,c
 16680  00536C  3208               	rrcf	i2___lldiv@divisor+3,f,c
 16681  00536E  3207               	rrcf	i2___lldiv@divisor+2,f,c
 16682  005370  3206               	rrcf	i2___lldiv@divisor+1,f,c
 16683  005372  3205               	rrcf	i2___lldiv@divisor,f,c
 16684  005374  2E0D               	decfsz	i2___lldiv@counter,f,c
 16685  005376  D7E1               	goto	i2l4385
 16686  005378                     i2l941:
 16687  005378  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 16688  00537C  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 16689  005380  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 16690  005384  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 16691  005388  0012               	return		;funcret
 16692  00538A                     __end_ofi2___lldiv:
 16693                           	opt stack 0
 16694                           tosu	equ	0xFFF
 16695                           tosh	equ	0xFFE
 16696                           tosl	equ	0xFFD
 16697                           pclatu	equ	0xFFB
 16698                           pclath	equ	0xFFA
 16699                           tblptru	equ	0xFF8
 16700                           tblptrh	equ	0xFF7
 16701                           tblptrl	equ	0xFF6
 16702                           tablat	equ	0xFF5
 16703                           prodh	equ	0xFF4
 16704                           prodl	equ	0xFF3
 16705                           intcon	equ	0xFF2
 16706                           intcon2	equ	0xFF1
 16707                           intcon3	equ	0xFF0
 16708                           postinc0	equ	0xFEE
 16709                           fsr0h	equ	0xFEA
 16710                           fsr0l	equ	0xFE9
 16711                           wreg	equ	0xFE8
 16712                           fsr1h	equ	0xFE2
 16713                           fsr1l	equ	0xFE1
 16714                           indf2	equ	0xFDF
 16715                           postinc2	equ	0xFDE
 16716                           postdec2	equ	0xFDD
 16717                           fsr2h	equ	0xFDA
 16718                           fsr2l	equ	0xFD9
 16719                           status	equ	0xFD8
 16720                           
 16721 ;; *************** function i2___fttol *****************
 16722 ;; Defined at:
 16723 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
 16724 ;; Parameters:    Size  Location     Type
 16725 ;;  f1              3   54[COMRAM] float 
 16726 ;; Auto vars:     Size  Location     Type
 16727 ;;  __fttol         4   64[COMRAM] unsigned long 
 16728 ;;  __fttol         1   68[COMRAM] unsigned char 
 16729 ;;  __fttol         1   63[COMRAM] unsigned char 
 16730 ;; Return value:  Size  Location     Type
 16731 ;;                  4   54[COMRAM] long 
 16732 ;; Registers used:
 16733 ;;		wreg, status,2, status,0
 16734 ;; Tracked objects:
 16735 ;;		On entry : 0/0
 16736 ;;		On exit  : 0/0
 16737 ;;		Unchanged: 0/0
 16738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16739 ;;      Params:         4       0       0       0       0       0       0
 16740 ;;      Locals:         6       0       0       0       0       0       0
 16741 ;;      Temps:          5       0       0       0       0       0       0
 16742 ;;      Totals:        15       0       0       0       0       0       0
 16743 ;;Total ram usage:       15 bytes
 16744 ;; Hardware stack levels used:    1
 16745 ;; This function calls:
 16746 ;;		Nothing
 16747 ;; This function is called by:
 16748 ;;		i2__doprnt
 16749 ;; This function uses a non-reentrant model
 16750 ;;
 16751                           
 16752                           	psect	text64
 16753  004BEE                     __ptext64:
 16754                           	opt stack 0
 16755  004BEE                     i2___fttol:
 16756                           	opt stack 21
 16757                           
 16758                           ;incstack = 0
 16759  004BEE  C039  F03B         	movff	i2___fttol@f1+2,??i2___fttol
 16760  004BF2  6A3C               	clrf	(??i2___fttol+1)& (0+255),c
 16761  004BF4  6A3D               	clrf	(??i2___fttol+2)& (0+255),c
 16762  004BF6  3438               	rlcf	i2___fttol@f1+1,w,c
 16763  004BF8  363B               	rlcf	??i2___fttol& (0+255),f,c
 16764  004BFA  E301               	bnc	u539_41
 16765  004BFC  803C               	bsf	(??i2___fttol+1)& (0+255),0,c
 16766  004BFE                     u539_41:
 16767  004BFE  503B               	movf	??i2___fttol,w,c
 16768  004C00  6E45               	movwf	i2___fttol@exp1,c
 16769  004C02  5045               	movf	i2___fttol@exp1,w,c
 16770  004C04  A4D8               	btfss	status,2,c
 16771  004C06  D009               	goto	i2l4323
 16772  004C08  0E00               	movlw	0
 16773  004C0A  6E37               	movwf	?i2___fttol,c
 16774  004C0C  0E00               	movlw	0
 16775  004C0E  6E38               	movwf	?i2___fttol+1,c
 16776  004C10  0E00               	movlw	0
 16777  004C12  6E39               	movwf	?i2___fttol+2,c
 16778  004C14  0E00               	movlw	0
 16779  004C16  6E3A               	movwf	?i2___fttol+3,c
 16780  004C18  0012               	return	
 16781  004C1A                     i2l4323:
 16782  004C1A  0E17               	movlw	23
 16783  004C1C  6E3B               	movwf	??i2___fttol& (0+255),c
 16784  004C1E  C037  F03C         	movff	i2___fttol@f1,??i2___fttol+1
 16785  004C22  C038  F03D         	movff	i2___fttol@f1+1,??i2___fttol+2
 16786  004C26  C039  F03E         	movff	i2___fttol@f1+2,??i2___fttol+3
 16787  004C2A  283B               	incf	??i2___fttol,w,c
 16788  004C2C  6E3F               	movwf	(??i2___fttol+4)& (0+255),c
 16789  004C2E  D004               	goto	i2u541_40
 16790  004C30                     i2u541_45:
 16791  004C30  90D8               	bcf	status,0,c
 16792  004C32  323E               	rrcf	??i2___fttol+3,f,c
 16793  004C34  323D               	rrcf	??i2___fttol+2,f,c
 16794  004C36  323C               	rrcf	??i2___fttol+1,f,c
 16795  004C38                     i2u541_40:
 16796  004C38  2E3F               	decfsz	(??i2___fttol+4)& (0+255),f,c
 16797  004C3A  D7FA               	goto	i2u541_45
 16798  004C3C  503C               	movf	??i2___fttol+1,w,c
 16799  004C3E  6E40               	movwf	i2___fttol@sign1,c
 16800  004C40  8E38               	bsf	i2___fttol@f1+1,7,c
 16801  004C42  0EFF               	movlw	255
 16802  004C44  1637               	andwf	i2___fttol@f1,f,c
 16803  004C46  0EFF               	movlw	255
 16804  004C48  1638               	andwf	i2___fttol@f1+1,f,c
 16805  004C4A  0E00               	movlw	0
 16806  004C4C  1639               	andwf	i2___fttol@f1+2,f,c
 16807  004C4E  5037               	movf	i2___fttol@f1,w,c
 16808  004C50  6E41               	movwf	i2___fttol@lval,c
 16809  004C52  5038               	movf	i2___fttol@f1+1,w,c
 16810  004C54  6E42               	movwf	i2___fttol@lval+1,c
 16811  004C56  5039               	movf	i2___fttol@f1+2,w,c
 16812  004C58  6E43               	movwf	i2___fttol@lval+2,c
 16813  004C5A  6A44               	clrf	i2___fttol@lval+3,c
 16814  004C5C  0E8E               	movlw	142
 16815  004C5E  5E45               	subwf	i2___fttol@exp1,f,c
 16816  004C60  AE45               	btfss	i2___fttol@exp1,7,c
 16817  004C62  D016               	goto	i2l4345
 16818  004C64  5045               	movf	i2___fttol@exp1,w,c
 16819  004C66  0A80               	xorlw	128
 16820  004C68  0F8F               	addlw	143
 16821  004C6A  B0D8               	btfsc	status,0,c
 16822  004C6C  D009               	goto	i2l4341
 16823  004C6E  0E00               	movlw	0
 16824  004C70  6E37               	movwf	?i2___fttol,c
 16825  004C72  0E00               	movlw	0
 16826  004C74  6E38               	movwf	?i2___fttol+1,c
 16827  004C76  0E00               	movlw	0
 16828  004C78  6E39               	movwf	?i2___fttol+2,c
 16829  004C7A  0E00               	movlw	0
 16830  004C7C  6E3A               	movwf	?i2___fttol+3,c
 16831  004C7E  0012               	return	
 16832  004C80                     i2l4341:
 16833  004C80  90D8               	bcf	status,0,c
 16834  004C82  3244               	rrcf	i2___fttol@lval+3,f,c
 16835  004C84  3243               	rrcf	i2___fttol@lval+2,f,c
 16836  004C86  3242               	rrcf	i2___fttol@lval+1,f,c
 16837  004C88  3241               	rrcf	i2___fttol@lval,f,c
 16838  004C8A  3E45               	incfsz	i2___fttol@exp1,f,c
 16839  004C8C  D7F9               	goto	i2l4341
 16840  004C8E  D015               	goto	i2l4355
 16841  004C90                     i2l4345:
 16842  004C90  0E17               	movlw	23
 16843  004C92  6445               	cpfsgt	i2___fttol@exp1,c
 16844  004C94  D00F               	goto	i2l4353
 16845  004C96  0E00               	movlw	0
 16846  004C98  6E37               	movwf	?i2___fttol,c
 16847  004C9A  0E00               	movlw	0
 16848  004C9C  6E38               	movwf	?i2___fttol+1,c
 16849  004C9E  0E00               	movlw	0
 16850  004CA0  6E39               	movwf	?i2___fttol+2,c
 16851  004CA2  0E00               	movlw	0
 16852  004CA4  6E3A               	movwf	?i2___fttol+3,c
 16853  004CA6  0012               	return	
 16854  004CA8                     i2l4351:
 16855  004CA8  90D8               	bcf	status,0,c
 16856  004CAA  3641               	rlcf	i2___fttol@lval,f,c
 16857  004CAC  3642               	rlcf	i2___fttol@lval+1,f,c
 16858  004CAE  3643               	rlcf	i2___fttol@lval+2,f,c
 16859  004CB0  3644               	rlcf	i2___fttol@lval+3,f,c
 16860  004CB2  0645               	decf	i2___fttol@exp1,f,c
 16861  004CB4                     i2l4353:
 16862  004CB4  5045               	movf	i2___fttol@exp1,w,c
 16863  004CB6  A4D8               	btfss	status,2,c
 16864  004CB8  D7F7               	goto	i2l4351
 16865  004CBA                     i2l4355:
 16866  004CBA  5040               	movf	i2___fttol@sign1,w,c
 16867  004CBC  B4D8               	btfsc	status,2,c
 16868  004CBE  D008               	goto	i2l4359
 16869  004CC0  1E44               	comf	i2___fttol@lval+3,f,c
 16870  004CC2  1E43               	comf	i2___fttol@lval+2,f,c
 16871  004CC4  1E42               	comf	i2___fttol@lval+1,f,c
 16872  004CC6  6C41               	negf	i2___fttol@lval,c
 16873  004CC8  0E00               	movlw	0
 16874  004CCA  2242               	addwfc	i2___fttol@lval+1,f,c
 16875  004CCC  2243               	addwfc	i2___fttol@lval+2,f,c
 16876  004CCE  2244               	addwfc	i2___fttol@lval+3,f,c
 16877  004CD0                     i2l4359:
 16878  004CD0  C041  F037         	movff	i2___fttol@lval,?i2___fttol
 16879  004CD4  C042  F038         	movff	i2___fttol@lval+1,?i2___fttol+1
 16880  004CD8  C043  F039         	movff	i2___fttol@lval+2,?i2___fttol+2
 16881  004CDC  C044  F03A         	movff	i2___fttol@lval+3,?i2___fttol+3
 16882  004CE0  0012               	return	
 16883  004CE2                     __end_ofi2___fttol:
 16884                           	opt stack 0
 16885                           tosu	equ	0xFFF
 16886                           tosh	equ	0xFFE
 16887                           tosl	equ	0xFFD
 16888                           pclatu	equ	0xFFB
 16889                           pclath	equ	0xFFA
 16890                           tblptru	equ	0xFF8
 16891                           tblptrh	equ	0xFF7
 16892                           tblptrl	equ	0xFF6
 16893                           tablat	equ	0xFF5
 16894                           prodh	equ	0xFF4
 16895                           prodl	equ	0xFF3
 16896                           intcon	equ	0xFF2
 16897                           intcon2	equ	0xFF1
 16898                           intcon3	equ	0xFF0
 16899                           postinc0	equ	0xFEE
 16900                           fsr0h	equ	0xFEA
 16901                           fsr0l	equ	0xFE9
 16902                           wreg	equ	0xFE8
 16903                           fsr1h	equ	0xFE2
 16904                           fsr1l	equ	0xFE1
 16905                           indf2	equ	0xFDF
 16906                           postinc2	equ	0xFDE
 16907                           postdec2	equ	0xFDD
 16908                           fsr2h	equ	0xFDA
 16909                           fsr2l	equ	0xFD9
 16910                           status	equ	0xFD8
 16911                           
 16912 ;; *************** function i2___ftsub *****************
 16913 ;; Defined at:
 16914 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
 16915 ;; Parameters:    Size  Location     Type
 16916 ;;  f1              3   32[COMRAM] float 
 16917 ;;  f2              3   35[COMRAM] float 
 16918 ;; Auto vars:     Size  Location     Type
 16919 ;;		None
 16920 ;; Return value:  Size  Location     Type
 16921 ;;                  3   32[COMRAM] float 
 16922 ;; Registers used:
 16923 ;;		wreg, status,2, status,0, cstack
 16924 ;; Tracked objects:
 16925 ;;		On entry : 0/0
 16926 ;;		On exit  : 0/0
 16927 ;;		Unchanged: 0/0
 16928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16929 ;;      Params:         6       0       0       0       0       0       0
 16930 ;;      Locals:         0       0       0       0       0       0       0
 16931 ;;      Temps:          0       0       0       0       0       0       0
 16932 ;;      Totals:         6       0       0       0       0       0       0
 16933 ;;Total ram usage:        6 bytes
 16934 ;; Hardware stack levels used:    1
 16935 ;; Hardware stack levels required when called:    2
 16936 ;; This function calls:
 16937 ;;		i2___ftadd
 16938 ;; This function is called by:
 16939 ;;		i2__doprnt
 16940 ;; This function uses a non-reentrant model
 16941 ;;
 16942                           
 16943                           	psect	text65
 16944  0057B0                     __ptext65:
 16945                           	opt stack 0
 16946  0057B0                     i2___ftsub:
 16947                           	opt stack 19
 16948                           
 16949                           ;incstack = 0
 16950  0057B0  5024               	movf	i2___ftsub@f2,w,c
 16951  0057B2  1025               	iorwf	i2___ftsub@f2+1,w,c
 16952  0057B4  1026               	iorwf	i2___ftsub@f2+2,w,c
 16953  0057B6  B4D8               	btfsc	status,2,c
 16954  0057B8  D006               	goto	i2l4313
 16955  0057BA  0E00               	movlw	0
 16956  0057BC  1A24               	xorwf	i2___ftsub@f2,f,c
 16957  0057BE  0E00               	movlw	0
 16958  0057C0  1A25               	xorwf	i2___ftsub@f2+1,f,c
 16959  0057C2  0E80               	movlw	128
 16960  0057C4  1A26               	xorwf	i2___ftsub@f2+2,f,c
 16961  0057C6                     i2l4313:
 16962  0057C6  C021  F015         	movff	i2___ftsub@f1,i2___ftadd@f1
 16963  0057CA  C022  F016         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 16964  0057CE  C023  F017         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 16965  0057D2  C024  F018         	movff	i2___ftsub@f2,i2___ftadd@f2
 16966  0057D6  C025  F019         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 16967  0057DA  C026  F01A         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 16968  0057DE  EC65  F01D         	call	i2___ftadd	;wreg free
 16969  0057E2  C015  F021         	movff	?i2___ftadd,?i2___ftsub
 16970  0057E6  C016  F022         	movff	?i2___ftadd+1,?i2___ftsub+1
 16971  0057EA  C017  F023         	movff	?i2___ftadd+2,?i2___ftsub+2
 16972  0057EE  0012               	return	
 16973  0057F0                     __end_ofi2___ftsub:
 16974                           	opt stack 0
 16975                           tosu	equ	0xFFF
 16976                           tosh	equ	0xFFE
 16977                           tosl	equ	0xFFD
 16978                           pclatu	equ	0xFFB
 16979                           pclath	equ	0xFFA
 16980                           tblptru	equ	0xFF8
 16981                           tblptrh	equ	0xFF7
 16982                           tblptrl	equ	0xFF6
 16983                           tablat	equ	0xFF5
 16984                           prodh	equ	0xFF4
 16985                           prodl	equ	0xFF3
 16986                           intcon	equ	0xFF2
 16987                           intcon2	equ	0xFF1
 16988                           intcon3	equ	0xFF0
 16989                           postinc0	equ	0xFEE
 16990                           fsr0h	equ	0xFEA
 16991                           fsr0l	equ	0xFE9
 16992                           wreg	equ	0xFE8
 16993                           fsr1h	equ	0xFE2
 16994                           fsr1l	equ	0xFE1
 16995                           indf2	equ	0xFDF
 16996                           postinc2	equ	0xFDE
 16997                           postdec2	equ	0xFDD
 16998                           fsr2h	equ	0xFDA
 16999                           fsr2l	equ	0xFD9
 17000                           status	equ	0xFD8
 17001                           
 17002 ;; *************** function i2___ftadd *****************
 17003 ;; Defined at:
 17004 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
 17005 ;; Parameters:    Size  Location     Type
 17006 ;;  f1              3   20[COMRAM] float 
 17007 ;;  f2              3   23[COMRAM] float 
 17008 ;; Auto vars:     Size  Location     Type
 17009 ;;  __ftadd         1   31[COMRAM] unsigned char 
 17010 ;;  __ftadd         1   30[COMRAM] unsigned char 
 17011 ;;  __ftadd         1   29[COMRAM] unsigned char 
 17012 ;; Return value:  Size  Location     Type
 17013 ;;                  3   20[COMRAM] float 
 17014 ;; Registers used:
 17015 ;;		wreg, status,2, status,0, cstack
 17016 ;; Tracked objects:
 17017 ;;		On entry : 0/0
 17018 ;;		On exit  : 0/0
 17019 ;;		Unchanged: 0/0
 17020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17021 ;;      Params:         6       0       0       0       0       0       0
 17022 ;;      Locals:         3       0       0       0       0       0       0
 17023 ;;      Temps:          3       0       0       0       0       0       0
 17024 ;;      Totals:        12       0       0       0       0       0       0
 17025 ;;Total ram usage:       12 bytes
 17026 ;; Hardware stack levels used:    1
 17027 ;; Hardware stack levels required when called:    1
 17028 ;; This function calls:
 17029 ;;		i2___ftpack
 17030 ;; This function is called by:
 17031 ;;		_INT0_ISR
 17032 ;;		i2__doprnt
 17033 ;;		i2___ftsub
 17034 ;; This function uses a non-reentrant model
 17035 ;;
 17036                           
 17037                           	psect	text66
 17038  003ACA                     __ptext66:
 17039                           	opt stack 0
 17040  003ACA                     i2___ftadd:
 17041                           	opt stack 22
 17042                           
 17043                           ;incstack = 0
 17044  003ACA  C017  F01B         	movff	i2___ftadd@f1+2,??i2___ftadd
 17045  003ACE  6A1C               	clrf	(??i2___ftadd+1)& (0+255),c
 17046  003AD0  6A1D               	clrf	(??i2___ftadd+2)& (0+255),c
 17047  003AD2  3416               	rlcf	i2___ftadd@f1+1,w,c
 17048  003AD4  361B               	rlcf	??i2___ftadd& (0+255),f,c
 17049  003AD6  E301               	bnc	u444_41
 17050  003AD8  801C               	bsf	(??i2___ftadd+1)& (0+255),0,c
 17051  003ADA                     u444_41:
 17052  003ADA  501B               	movf	??i2___ftadd,w,c
 17053  003ADC  6E20               	movwf	i2___ftadd@exp1,c
 17054  003ADE  C01A  F01B         	movff	i2___ftadd@f2+2,??i2___ftadd
 17055  003AE2  6A1C               	clrf	(??i2___ftadd+1)& (0+255),c
 17056  003AE4  6A1D               	clrf	(??i2___ftadd+2)& (0+255),c
 17057  003AE6  3419               	rlcf	i2___ftadd@f2+1,w,c
 17058  003AE8  361B               	rlcf	??i2___ftadd& (0+255),f,c
 17059  003AEA  E301               	bnc	u445_41
 17060  003AEC  801C               	bsf	(??i2___ftadd+1)& (0+255),0,c
 17061  003AEE                     u445_41:
 17062  003AEE  501B               	movf	??i2___ftadd,w,c
 17063  003AF0  6E1F               	movwf	i2___ftadd@exp2,c
 17064  003AF2  5020               	movf	i2___ftadd@exp1,w,c
 17065  003AF4  B4D8               	btfsc	status,2,c
 17066  003AF6  D00B               	goto	i2l795
 17067  003AF8  501F               	movf	i2___ftadd@exp2,w,c
 17068  003AFA  5C20               	subwf	i2___ftadd@exp1,w,c
 17069  003AFC  B0D8               	btfsc	status,0,c
 17070  003AFE  D00E               	goto	i2l3791
 17071  003B00  5020               	movf	i2___ftadd@exp1,w,c
 17072  003B02  0800               	sublw	0
 17073  003B04  241F               	addwf	i2___ftadd@exp2,w,c
 17074  003B06  6E1B               	movwf	??i2___ftadd& (0+255),c
 17075  003B08  0E18               	movlw	24
 17076  003B0A  641B               	cpfsgt	??i2___ftadd,c
 17077  003B0C  D007               	goto	i2l3791
 17078  003B0E                     i2l795:
 17079  003B0E  C018  F015         	movff	i2___ftadd@f2,?i2___ftadd
 17080  003B12  C019  F016         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 17081  003B16  C01A  F017         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 17082  003B1A  0012               	return	
 17083  003B1C                     i2l3791:
 17084  003B1C  501F               	movf	i2___ftadd@exp2,w,c
 17085  003B1E  B4D8               	btfsc	status,2,c
 17086  003B20  D00B               	goto	i2l799
 17087  003B22  5020               	movf	i2___ftadd@exp1,w,c
 17088  003B24  5C1F               	subwf	i2___ftadd@exp2,w,c
 17089  003B26  B0D8               	btfsc	status,0,c
 17090  003B28  D00E               	goto	i2l3797
 17091  003B2A  501F               	movf	i2___ftadd@exp2,w,c
 17092  003B2C  0800               	sublw	0
 17093  003B2E  2420               	addwf	i2___ftadd@exp1,w,c
 17094  003B30  6E1B               	movwf	??i2___ftadd& (0+255),c
 17095  003B32  0E18               	movlw	24
 17096  003B34  641B               	cpfsgt	??i2___ftadd,c
 17097  003B36  D007               	goto	i2l3797
 17098  003B38                     i2l799:
 17099  003B38  C015  F015         	movff	i2___ftadd@f1,?i2___ftadd
 17100  003B3C  C016  F016         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 17101  003B40  C017  F017         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 17102  003B44  0012               	return	
 17103  003B46                     i2l3797:
 17104  003B46  0E06               	movlw	6
 17105  003B48  6E1E               	movwf	i2___ftadd@sign,c
 17106  003B4A  BE17               	btfsc	i2___ftadd@f1+2,7,c
 17107  003B4C  8E1E               	bsf	i2___ftadd@sign,7,c
 17108  003B4E  BE1A               	btfsc	i2___ftadd@f2+2,7,c
 17109  003B50  8C1E               	bsf	i2___ftadd@sign,6,c
 17110  003B52  8E16               	bsf	i2___ftadd@f1+1,7,c
 17111  003B54  0EFF               	movlw	255
 17112  003B56  1615               	andwf	i2___ftadd@f1,f,c
 17113  003B58  0EFF               	movlw	255
 17114  003B5A  1616               	andwf	i2___ftadd@f1+1,f,c
 17115  003B5C  0E00               	movlw	0
 17116  003B5E  1617               	andwf	i2___ftadd@f1+2,f,c
 17117  003B60  8E19               	bsf	i2___ftadd@f2+1,7,c
 17118  003B62  0EFF               	movlw	255
 17119  003B64  1618               	andwf	i2___ftadd@f2,f,c
 17120  003B66  0EFF               	movlw	255
 17121  003B68  1619               	andwf	i2___ftadd@f2+1,f,c
 17122  003B6A  0E00               	movlw	0
 17123  003B6C  161A               	andwf	i2___ftadd@f2+2,f,c
 17124  003B6E  501F               	movf	i2___ftadd@exp2,w,c
 17125  003B70  5C20               	subwf	i2___ftadd@exp1,w,c
 17126  003B72  B0D8               	btfsc	status,0,c
 17127  003B74  D01B               	goto	i2l3823
 17128  003B76                     i2l3813:
 17129  003B76  90D8               	bcf	status,0,c
 17130  003B78  3618               	rlcf	i2___ftadd@f2,f,c
 17131  003B7A  3619               	rlcf	i2___ftadd@f2+1,f,c
 17132  003B7C  361A               	rlcf	i2___ftadd@f2+2,f,c
 17133  003B7E  061F               	decf	i2___ftadd@exp2,f,c
 17134  003B80  5020               	movf	i2___ftadd@exp1,w,c
 17135  003B82  181F               	xorwf	i2___ftadd@exp2,w,c
 17136  003B84  B4D8               	btfsc	status,2,c
 17137  003B86  D00D               	goto	i2l3821
 17138  003B88  061E               	decf	i2___ftadd@sign,f,c
 17139  003B8A  C01E  F01B         	movff	i2___ftadd@sign,??i2___ftadd
 17140  003B8E  0E07               	movlw	7
 17141  003B90  161B               	andwf	??i2___ftadd,f,c
 17142  003B92  B4D8               	btfsc	status,2,c
 17143  003B94  D006               	goto	i2l3821
 17144  003B96  D7EF               	goto	i2l3813
 17145  003B98                     i2l3819:
 17146  003B98  90D8               	bcf	status,0,c
 17147  003B9A  3217               	rrcf	i2___ftadd@f1+2,f,c
 17148  003B9C  3216               	rrcf	i2___ftadd@f1+1,f,c
 17149  003B9E  3215               	rrcf	i2___ftadd@f1,f,c
 17150  003BA0  2A20               	incf	i2___ftadd@exp1,f,c
 17151  003BA2                     i2l3821:
 17152  003BA2  501F               	movf	i2___ftadd@exp2,w,c
 17153  003BA4  1820               	xorwf	i2___ftadd@exp1,w,c
 17154  003BA6  B4D8               	btfsc	status,2,c
 17155  003BA8  D01F               	goto	i2l810
 17156  003BAA  D7F6               	goto	i2l3819
 17157  003BAC                     i2l3823:
 17158  003BAC  5020               	movf	i2___ftadd@exp1,w,c
 17159  003BAE  5C1F               	subwf	i2___ftadd@exp2,w,c
 17160  003BB0  B0D8               	btfsc	status,0,c
 17161  003BB2  D01A               	goto	i2l810
 17162  003BB4                     i2l3825:
 17163  003BB4  90D8               	bcf	status,0,c
 17164  003BB6  3615               	rlcf	i2___ftadd@f1,f,c
 17165  003BB8  3616               	rlcf	i2___ftadd@f1+1,f,c
 17166  003BBA  3617               	rlcf	i2___ftadd@f1+2,f,c
 17167  003BBC  0620               	decf	i2___ftadd@exp1,f,c
 17168  003BBE  5020               	movf	i2___ftadd@exp1,w,c
 17169  003BC0  181F               	xorwf	i2___ftadd@exp2,w,c
 17170  003BC2  B4D8               	btfsc	status,2,c
 17171  003BC4  D00D               	goto	i2l3833
 17172  003BC6  061E               	decf	i2___ftadd@sign,f,c
 17173  003BC8  C01E  F01B         	movff	i2___ftadd@sign,??i2___ftadd
 17174  003BCC  0E07               	movlw	7
 17175  003BCE  161B               	andwf	??i2___ftadd,f,c
 17176  003BD0  B4D8               	btfsc	status,2,c
 17177  003BD2  D006               	goto	i2l3833
 17178  003BD4  D7EF               	goto	i2l3825
 17179  003BD6                     i2l3831:
 17180  003BD6  90D8               	bcf	status,0,c
 17181  003BD8  321A               	rrcf	i2___ftadd@f2+2,f,c
 17182  003BDA  3219               	rrcf	i2___ftadd@f2+1,f,c
 17183  003BDC  3218               	rrcf	i2___ftadd@f2,f,c
 17184  003BDE  2A1F               	incf	i2___ftadd@exp2,f,c
 17185  003BE0                     i2l3833:
 17186  003BE0  501F               	movf	i2___ftadd@exp2,w,c
 17187  003BE2  1820               	xorwf	i2___ftadd@exp1,w,c
 17188  003BE4  A4D8               	btfss	status,2,c
 17189  003BE6  D7F7               	goto	i2l3831
 17190  003BE8                     i2l810:
 17191  003BE8  AE1E               	btfss	i2___ftadd@sign,7,c
 17192  003BEA  D00C               	goto	i2l819
 17193  003BEC  0EFF               	movlw	255
 17194  003BEE  1A15               	xorwf	i2___ftadd@f1,f,c
 17195  003BF0  0EFF               	movlw	255
 17196  003BF2  1A16               	xorwf	i2___ftadd@f1+1,f,c
 17197  003BF4  0EFF               	movlw	255
 17198  003BF6  1A17               	xorwf	i2___ftadd@f1+2,f,c
 17199  003BF8  0E01               	movlw	1
 17200  003BFA  2615               	addwf	i2___ftadd@f1,f,c
 17201  003BFC  0E00               	movlw	0
 17202  003BFE  2216               	addwfc	i2___ftadd@f1+1,f,c
 17203  003C00  0E00               	movlw	0
 17204  003C02  2217               	addwfc	i2___ftadd@f1+2,f,c
 17205  003C04                     i2l819:
 17206  003C04  AC1E               	btfss	i2___ftadd@sign,6,c
 17207  003C06  D00C               	goto	i2l3839
 17208  003C08  0EFF               	movlw	255
 17209  003C0A  1A18               	xorwf	i2___ftadd@f2,f,c
 17210  003C0C  0EFF               	movlw	255
 17211  003C0E  1A19               	xorwf	i2___ftadd@f2+1,f,c
 17212  003C10  0EFF               	movlw	255
 17213  003C12  1A1A               	xorwf	i2___ftadd@f2+2,f,c
 17214  003C14  0E01               	movlw	1
 17215  003C16  2618               	addwf	i2___ftadd@f2,f,c
 17216  003C18  0E00               	movlw	0
 17217  003C1A  2219               	addwfc	i2___ftadd@f2+1,f,c
 17218  003C1C  0E00               	movlw	0
 17219  003C1E  221A               	addwfc	i2___ftadd@f2+2,f,c
 17220  003C20                     i2l3839:
 17221  003C20  0E00               	movlw	0
 17222  003C22  6E1E               	movwf	i2___ftadd@sign,c
 17223  003C24  5015               	movf	i2___ftadd@f1,w,c
 17224  003C26  2618               	addwf	i2___ftadd@f2,f,c
 17225  003C28  5016               	movf	i2___ftadd@f1+1,w,c
 17226  003C2A  2219               	addwfc	i2___ftadd@f2+1,f,c
 17227  003C2C  5017               	movf	i2___ftadd@f1+2,w,c
 17228  003C2E  221A               	addwfc	i2___ftadd@f2+2,f,c
 17229  003C30  AE1A               	btfss	i2___ftadd@f2+2,7,c
 17230  003C32  D00E               	goto	i2l3849
 17231  003C34  0EFF               	movlw	255
 17232  003C36  1A18               	xorwf	i2___ftadd@f2,f,c
 17233  003C38  0EFF               	movlw	255
 17234  003C3A  1A19               	xorwf	i2___ftadd@f2+1,f,c
 17235  003C3C  0EFF               	movlw	255
 17236  003C3E  1A1A               	xorwf	i2___ftadd@f2+2,f,c
 17237  003C40  0E01               	movlw	1
 17238  003C42  2618               	addwf	i2___ftadd@f2,f,c
 17239  003C44  0E00               	movlw	0
 17240  003C46  2219               	addwfc	i2___ftadd@f2+1,f,c
 17241  003C48  0E00               	movlw	0
 17242  003C4A  221A               	addwfc	i2___ftadd@f2+2,f,c
 17243  003C4C  0E01               	movlw	1
 17244  003C4E  6E1E               	movwf	i2___ftadd@sign,c
 17245  003C50                     i2l3849:
 17246  003C50  C018  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 17247  003C54  C019  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 17248  003C58  C01A  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 17249  003C5C  C020  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 17250  003C60  C01E  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 17251  003C64  EC05  F028         	call	i2___ftpack	;wreg free
 17252  003C68  C001  F015         	movff	?i2___ftpack,?i2___ftadd
 17253  003C6C  C002  F016         	movff	?i2___ftpack+1,?i2___ftadd+1
 17254  003C70  C003  F017         	movff	?i2___ftpack+2,?i2___ftadd+2
 17255  003C74  0012               	return	
 17256  003C76                     __end_ofi2___ftadd:
 17257                           	opt stack 0
 17258                           tosu	equ	0xFFF
 17259                           tosh	equ	0xFFE
 17260                           tosl	equ	0xFFD
 17261                           pclatu	equ	0xFFB
 17262                           pclath	equ	0xFFA
 17263                           tblptru	equ	0xFF8
 17264                           tblptrh	equ	0xFF7
 17265                           tblptrl	equ	0xFF6
 17266                           tablat	equ	0xFF5
 17267                           prodh	equ	0xFF4
 17268                           prodl	equ	0xFF3
 17269                           intcon	equ	0xFF2
 17270                           intcon2	equ	0xFF1
 17271                           intcon3	equ	0xFF0
 17272                           postinc0	equ	0xFEE
 17273                           fsr0h	equ	0xFEA
 17274                           fsr0l	equ	0xFE9
 17275                           wreg	equ	0xFE8
 17276                           fsr1h	equ	0xFE2
 17277                           fsr1l	equ	0xFE1
 17278                           indf2	equ	0xFDF
 17279                           postinc2	equ	0xFDE
 17280                           postdec2	equ	0xFDD
 17281                           fsr2h	equ	0xFDA
 17282                           fsr2l	equ	0xFD9
 17283                           status	equ	0xFD8
 17284                           
 17285 ;; *************** function i2___ftneg *****************
 17286 ;; Defined at:
 17287 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
 17288 ;; Parameters:    Size  Location     Type
 17289 ;;  f1              3    0[COMRAM] float 
 17290 ;; Auto vars:     Size  Location     Type
 17291 ;;		None
 17292 ;; Return value:  Size  Location     Type
 17293 ;;                  3    0[COMRAM] float 
 17294 ;; Registers used:
 17295 ;;		wreg, status,2, status,0
 17296 ;; Tracked objects:
 17297 ;;		On entry : 0/0
 17298 ;;		On exit  : 0/0
 17299 ;;		Unchanged: 0/0
 17300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17301 ;;      Params:         3       0       0       0       0       0       0
 17302 ;;      Locals:         0       0       0       0       0       0       0
 17303 ;;      Temps:          0       0       0       0       0       0       0
 17304 ;;      Totals:         3       0       0       0       0       0       0
 17305 ;;Total ram usage:        3 bytes
 17306 ;; Hardware stack levels used:    1
 17307 ;; This function calls:
 17308 ;;		Nothing
 17309 ;; This function is called by:
 17310 ;;		i2__doprnt
 17311 ;; This function uses a non-reentrant model
 17312 ;;
 17313                           
 17314                           	psect	text67
 17315  0059F2                     __ptext67:
 17316                           	opt stack 0
 17317  0059F2                     i2___ftneg:
 17318                           	opt stack 21
 17319                           
 17320                           ;incstack = 0
 17321  0059F2  5001               	movf	i2___ftneg@f1,w,c
 17322  0059F4  1002               	iorwf	i2___ftneg@f1+1,w,c
 17323  0059F6  1003               	iorwf	i2___ftneg@f1+2,w,c
 17324  0059F8  B4D8               	btfsc	status,2,c
 17325  0059FA  D006               	goto	i2l869
 17326  0059FC  0E00               	movlw	0
 17327  0059FE  1A01               	xorwf	i2___ftneg@f1,f,c
 17328  005A00  0E00               	movlw	0
 17329  005A02  1A02               	xorwf	i2___ftneg@f1+1,f,c
 17330  005A04  0E80               	movlw	128
 17331  005A06  1A03               	xorwf	i2___ftneg@f1+2,f,c
 17332  005A08                     i2l869:
 17333  005A08  C001  F001         	movff	i2___ftneg@f1,?i2___ftneg
 17334  005A0C  C002  F002         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 17335  005A10  C003  F003         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 17336  005A14  0012               	return		;funcret
 17337  005A16                     __end_ofi2___ftneg:
 17338                           	opt stack 0
 17339                           tosu	equ	0xFFF
 17340                           tosh	equ	0xFFE
 17341                           tosl	equ	0xFFD
 17342                           pclatu	equ	0xFFB
 17343                           pclath	equ	0xFFA
 17344                           tblptru	equ	0xFF8
 17345                           tblptrh	equ	0xFF7
 17346                           tblptrl	equ	0xFF6
 17347                           tablat	equ	0xFF5
 17348                           prodh	equ	0xFF4
 17349                           prodl	equ	0xFF3
 17350                           intcon	equ	0xFF2
 17351                           intcon2	equ	0xFF1
 17352                           intcon3	equ	0xFF0
 17353                           postinc0	equ	0xFEE
 17354                           fsr0h	equ	0xFEA
 17355                           fsr0l	equ	0xFE9
 17356                           wreg	equ	0xFE8
 17357                           fsr1h	equ	0xFE2
 17358                           fsr1l	equ	0xFE1
 17359                           indf2	equ	0xFDF
 17360                           postinc2	equ	0xFDE
 17361                           postdec2	equ	0xFDD
 17362                           fsr2h	equ	0xFDA
 17363                           fsr2l	equ	0xFD9
 17364                           status	equ	0xFD8
 17365                           
 17366 ;; *************** function i2___ftge *****************
 17367 ;; Defined at:
 17368 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
 17369 ;; Parameters:    Size  Location     Type
 17370 ;;  ff1             3    0[COMRAM] float 
 17371 ;;  ff2             3    3[COMRAM] float 
 17372 ;; Auto vars:     Size  Location     Type
 17373 ;;		None
 17374 ;; Return value:  Size  Location     Type
 17375 ;;		None               void
 17376 ;; Registers used:
 17377 ;;		wreg, status,2, status,0
 17378 ;; Tracked objects:
 17379 ;;		On entry : 0/0
 17380 ;;		On exit  : 0/0
 17381 ;;		Unchanged: 0/0
 17382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17383 ;;      Params:         6       0       0       0       0       0       0
 17384 ;;      Locals:         0       0       0       0       0       0       0
 17385 ;;      Temps:          3       0       0       0       0       0       0
 17386 ;;      Totals:         9       0       0       0       0       0       0
 17387 ;;Total ram usage:        9 bytes
 17388 ;; Hardware stack levels used:    1
 17389 ;; This function calls:
 17390 ;;		Nothing
 17391 ;; This function is called by:
 17392 ;;		i2__doprnt
 17393 ;; This function uses a non-reentrant model
 17394 ;;
 17395                           
 17396                           	psect	text68
 17397  0051F4                     __ptext68:
 17398                           	opt stack 0
 17399  0051F4                     i2___ftge:
 17400                           	opt stack 21
 17401                           
 17402                           ;incstack = 0
 17403  0051F4  AE03               	btfss	i2___ftge@ff1+2,7,c
 17404  0051F6  D016               	goto	i2l4291
 17405  0051F8  C001  F007         	movff	i2___ftge@ff1,??i2___ftge
 17406  0051FC  C002  F008         	movff	i2___ftge@ff1+1,??i2___ftge+1
 17407  005200  C003  F009         	movff	i2___ftge@ff1+2,??i2___ftge+2
 17408  005204  1E07               	comf	??i2___ftge,f,c
 17409  005206  1E08               	comf	??i2___ftge+1,f,c
 17410  005208  1E09               	comf	??i2___ftge+2,f,c
 17411  00520A  2A07               	incf	??i2___ftge,f,c
 17412  00520C  0E00               	movlw	0
 17413  00520E  2208               	addwfc	??i2___ftge+1,f,c
 17414  005210  2209               	addwfc	??i2___ftge+2,f,c
 17415  005212  0E00               	movlw	0
 17416  005214  2407               	addwf	??i2___ftge,w,c
 17417  005216  6E01               	movwf	i2___ftge@ff1,c
 17418  005218  0E00               	movlw	0
 17419  00521A  2008               	addwfc	??i2___ftge+1,w,c
 17420  00521C  6E02               	movwf	i2___ftge@ff1+1,c
 17421  00521E  0E80               	movlw	128
 17422  005220  2009               	addwfc	??i2___ftge+2,w,c
 17423  005222  6E03               	movwf	i2___ftge@ff1+2,c
 17424  005224                     i2l4291:
 17425  005224  AE06               	btfss	i2___ftge@ff2+2,7,c
 17426  005226  D016               	goto	i2l4295
 17427  005228  C004  F007         	movff	i2___ftge@ff2,??i2___ftge
 17428  00522C  C005  F008         	movff	i2___ftge@ff2+1,??i2___ftge+1
 17429  005230  C006  F009         	movff	i2___ftge@ff2+2,??i2___ftge+2
 17430  005234  1E07               	comf	??i2___ftge,f,c
 17431  005236  1E08               	comf	??i2___ftge+1,f,c
 17432  005238  1E09               	comf	??i2___ftge+2,f,c
 17433  00523A  2A07               	incf	??i2___ftge,f,c
 17434  00523C  0E00               	movlw	0
 17435  00523E  2208               	addwfc	??i2___ftge+1,f,c
 17436  005240  2209               	addwfc	??i2___ftge+2,f,c
 17437  005242  0E00               	movlw	0
 17438  005244  2407               	addwf	??i2___ftge,w,c
 17439  005246  6E04               	movwf	i2___ftge@ff2,c
 17440  005248  0E00               	movlw	0
 17441  00524A  2008               	addwfc	??i2___ftge+1,w,c
 17442  00524C  6E05               	movwf	i2___ftge@ff2+1,c
 17443  00524E  0E80               	movlw	128
 17444  005250  2009               	addwfc	??i2___ftge+2,w,c
 17445  005252  6E06               	movwf	i2___ftge@ff2+2,c
 17446  005254                     i2l4295:
 17447  005254  0E00               	movlw	0
 17448  005256  1A01               	xorwf	i2___ftge@ff1,f,c
 17449  005258  0E00               	movlw	0
 17450  00525A  1A02               	xorwf	i2___ftge@ff1+1,f,c
 17451  00525C  0E80               	movlw	128
 17452  00525E  1A03               	xorwf	i2___ftge@ff1+2,f,c
 17453  005260  0E00               	movlw	0
 17454  005262  1A04               	xorwf	i2___ftge@ff2,f,c
 17455  005264  0E00               	movlw	0
 17456  005266  1A05               	xorwf	i2___ftge@ff2+1,f,c
 17457  005268  0E80               	movlw	128
 17458  00526A  1A06               	xorwf	i2___ftge@ff2+2,f,c
 17459  00526C  5004               	movf	i2___ftge@ff2,w,c
 17460  00526E  5C01               	subwf	i2___ftge@ff1,w,c
 17461  005270  5005               	movf	i2___ftge@ff2+1,w,c
 17462  005272  5802               	subwfb	i2___ftge@ff1+1,w,c
 17463  005274  5006               	movf	i2___ftge@ff2+2,w,c
 17464  005276  5803               	subwfb	i2___ftge@ff1+2,w,c
 17465  005278  B0D8               	btfsc	status,0,c
 17466  00527A  D002               	goto	i2l4301
 17467  00527C  90D8               	bcf	status,0,c
 17468  00527E  0012               	return	
 17469  005280                     i2l4301:
 17470  005280  80D8               	bsf	status,0,c
 17471  005282  0012               	return	
 17472  005284                     __end_ofi2___ftge:
 17473                           	opt stack 0
 17474                           tosu	equ	0xFFF
 17475                           tosh	equ	0xFFE
 17476                           tosl	equ	0xFFD
 17477                           pclatu	equ	0xFFB
 17478                           pclath	equ	0xFFA
 17479                           tblptru	equ	0xFF8
 17480                           tblptrh	equ	0xFF7
 17481                           tblptrl	equ	0xFF6
 17482                           tablat	equ	0xFF5
 17483                           prodh	equ	0xFF4
 17484                           prodl	equ	0xFF3
 17485                           intcon	equ	0xFF2
 17486                           intcon2	equ	0xFF1
 17487                           intcon3	equ	0xFF0
 17488                           postinc0	equ	0xFEE
 17489                           fsr0h	equ	0xFEA
 17490                           fsr0l	equ	0xFE9
 17491                           wreg	equ	0xFE8
 17492                           fsr1h	equ	0xFE2
 17493                           fsr1l	equ	0xFE1
 17494                           indf2	equ	0xFDF
 17495                           postinc2	equ	0xFDE
 17496                           postdec2	equ	0xFDD
 17497                           fsr2h	equ	0xFDA
 17498                           fsr2l	equ	0xFD9
 17499                           status	equ	0xFD8
 17500                           
 17501 ;; *************** function ___lwtoft *****************
 17502 ;; Defined at:
 17503 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
 17504 ;; Parameters:    Size  Location     Type
 17505 ;;  c               2    8[COMRAM] unsigned int 
 17506 ;; Auto vars:     Size  Location     Type
 17507 ;;		None
 17508 ;; Return value:  Size  Location     Type
 17509 ;;                  3    8[COMRAM] float 
 17510 ;; Registers used:
 17511 ;;		wreg, status,2, status,0, cstack
 17512 ;; Tracked objects:
 17513 ;;		On entry : 0/0
 17514 ;;		On exit  : 0/0
 17515 ;;		Unchanged: 0/0
 17516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17517 ;;      Params:         3       0       0       0       0       0       0
 17518 ;;      Locals:         0       0       0       0       0       0       0
 17519 ;;      Temps:          0       0       0       0       0       0       0
 17520 ;;      Totals:         3       0       0       0       0       0       0
 17521 ;;Total ram usage:        3 bytes
 17522 ;; Hardware stack levels used:    1
 17523 ;; Hardware stack levels required when called:    1
 17524 ;; This function calls:
 17525 ;;		i2___ftpack
 17526 ;; This function is called by:
 17527 ;;		_INT0_ISR
 17528 ;; This function uses a non-reentrant model
 17529 ;;
 17530                           
 17531                           	psect	text69
 17532  005A16                     __ptext69:
 17533                           	opt stack 0
 17534  005A16                     ___lwtoft:
 17535                           	opt stack 22
 17536                           
 17537                           ;incstack = 0
 17538  005A16  C009  F001         	movff	___lwtoft@c,i2___ftpack@arg
 17539  005A1A  C00A  F002         	movff	___lwtoft@c+1,i2___ftpack@arg+1
 17540  005A1E  6A03               	clrf	i2___ftpack@arg+2,c
 17541  005A20  0E8E               	movlw	142
 17542  005A22  6E04               	movwf	i2___ftpack@exp,c
 17543  005A24  0E00               	movlw	0
 17544  005A26  6E05               	movwf	i2___ftpack@sign,c
 17545  005A28  EC05  F028         	call	i2___ftpack	;wreg free
 17546  005A2C  C001  F009         	movff	?i2___ftpack,?___lwtoft
 17547  005A30  C002  F00A         	movff	?i2___ftpack+1,?___lwtoft+1
 17548  005A34  C003  F00B         	movff	?i2___ftpack+2,?___lwtoft+2
 17549  005A38  0012               	return	
 17550  005A3A                     __end_of___lwtoft:
 17551                           	opt stack 0
 17552                           tosu	equ	0xFFF
 17553                           tosh	equ	0xFFE
 17554                           tosl	equ	0xFFD
 17555                           pclatu	equ	0xFFB
 17556                           pclath	equ	0xFFA
 17557                           tblptru	equ	0xFF8
 17558                           tblptrh	equ	0xFF7
 17559                           tblptrl	equ	0xFF6
 17560                           tablat	equ	0xFF5
 17561                           prodh	equ	0xFF4
 17562                           prodl	equ	0xFF3
 17563                           intcon	equ	0xFF2
 17564                           intcon2	equ	0xFF1
 17565                           intcon3	equ	0xFF0
 17566                           postinc0	equ	0xFEE
 17567                           fsr0h	equ	0xFEA
 17568                           fsr0l	equ	0xFE9
 17569                           wreg	equ	0xFE8
 17570                           fsr1h	equ	0xFE2
 17571                           fsr1l	equ	0xFE1
 17572                           indf2	equ	0xFDF
 17573                           postinc2	equ	0xFDE
 17574                           postdec2	equ	0xFDD
 17575                           fsr2h	equ	0xFDA
 17576                           fsr2l	equ	0xFD9
 17577                           status	equ	0xFD8
 17578                           
 17579 ;; *************** function i2___ftpack *****************
 17580 ;; Defined at:
 17581 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
 17582 ;; Parameters:    Size  Location     Type
 17583 ;;  arg             3    0[COMRAM] unsigned um
 17584 ;;  exp             1    3[COMRAM] unsigned char 
 17585 ;;  sign            1    4[COMRAM] unsigned char 
 17586 ;; Auto vars:     Size  Location     Type
 17587 ;;		None
 17588 ;; Return value:  Size  Location     Type
 17589 ;;                  3    0[COMRAM] float 
 17590 ;; Registers used:
 17591 ;;		wreg, status,2, status,0
 17592 ;; Tracked objects:
 17593 ;;		On entry : 0/0
 17594 ;;		On exit  : 0/0
 17595 ;;		Unchanged: 0/0
 17596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17597 ;;      Params:         5       0       0       0       0       0       0
 17598 ;;      Locals:         0       0       0       0       0       0       0
 17599 ;;      Temps:          3       0       0       0       0       0       0
 17600 ;;      Totals:         8       0       0       0       0       0       0
 17601 ;;Total ram usage:        8 bytes
 17602 ;; Hardware stack levels used:    1
 17603 ;; This function calls:
 17604 ;;		Nothing
 17605 ;; This function is called by:
 17606 ;;		___lwtoft
 17607 ;;		i2___ftadd
 17608 ;;		i2___ftdiv
 17609 ;;		i2___ftmul
 17610 ;;		i2___lltoft
 17611 ;; This function uses a non-reentrant model
 17612 ;;
 17613                           
 17614                           	psect	text70
 17615  00500A                     __ptext70:
 17616                           	opt stack 0
 17617  00500A                     i2___ftpack:
 17618                           	opt stack 22
 17619                           
 17620                           ;incstack = 0
 17621  00500A  5004               	movf	i2___ftpack@exp,w,c
 17622  00500C  B4D8               	btfsc	status,2,c
 17623  00500E  D005               	goto	i2l3625
 17624  005010  5001               	movf	i2___ftpack@arg,w,c
 17625  005012  1002               	iorwf	i2___ftpack@arg+1,w,c
 17626  005014  1003               	iorwf	i2___ftpack@arg+2,w,c
 17627  005016  A4D8               	btfss	status,2,c
 17628  005018  D00C               	goto	i2l3631
 17629  00501A                     i2l3625:
 17630  00501A  0E00               	movlw	0
 17631  00501C  6E01               	movwf	?i2___ftpack,c
 17632  00501E  0E00               	movlw	0
 17633  005020  6E02               	movwf	?i2___ftpack+1,c
 17634  005022  0E00               	movlw	0
 17635  005024  6E03               	movwf	?i2___ftpack+2,c
 17636  005026  0012               	return	
 17637  005028                     i2l3629:
 17638  005028  2A04               	incf	i2___ftpack@exp,f,c
 17639  00502A  90D8               	bcf	status,0,c
 17640  00502C  3203               	rrcf	i2___ftpack@arg+2,f,c
 17641  00502E  3202               	rrcf	i2___ftpack@arg+1,f,c
 17642  005030  3201               	rrcf	i2___ftpack@arg,f,c
 17643  005032                     i2l3631:
 17644  005032  0E00               	movlw	0
 17645  005034  1401               	andwf	i2___ftpack@arg,w,c
 17646  005036  6E06               	movwf	??i2___ftpack& (0+255),c
 17647  005038  0E00               	movlw	0
 17648  00503A  1402               	andwf	i2___ftpack@arg+1,w,c
 17649  00503C  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 17650  00503E  0EFE               	movlw	254
 17651  005040  1403               	andwf	i2___ftpack@arg+2,w,c
 17652  005042  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 17653  005044  5006               	movf	??i2___ftpack,w,c
 17654  005046  1007               	iorwf	??i2___ftpack+1,w,c
 17655  005048  1008               	iorwf	??i2___ftpack+2,w,c
 17656  00504A  B4D8               	btfsc	status,2,c
 17657  00504C  D00C               	goto	i2l3637
 17658  00504E  D7EC               	goto	i2l3629
 17659  005050                     i2l3633:
 17660  005050  2A04               	incf	i2___ftpack@exp,f,c
 17661  005052  0E01               	movlw	1
 17662  005054  2601               	addwf	i2___ftpack@arg,f,c
 17663  005056  0E00               	movlw	0
 17664  005058  2202               	addwfc	i2___ftpack@arg+1,f,c
 17665  00505A  0E00               	movlw	0
 17666  00505C  2203               	addwfc	i2___ftpack@arg+2,f,c
 17667  00505E  90D8               	bcf	status,0,c
 17668  005060  3203               	rrcf	i2___ftpack@arg+2,f,c
 17669  005062  3202               	rrcf	i2___ftpack@arg+1,f,c
 17670  005064  3201               	rrcf	i2___ftpack@arg,f,c
 17671  005066                     i2l3637:
 17672  005066  0E00               	movlw	0
 17673  005068  1401               	andwf	i2___ftpack@arg,w,c
 17674  00506A  6E06               	movwf	??i2___ftpack& (0+255),c
 17675  00506C  0E00               	movlw	0
 17676  00506E  1402               	andwf	i2___ftpack@arg+1,w,c
 17677  005070  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 17678  005072  0EFF               	movlw	255
 17679  005074  1403               	andwf	i2___ftpack@arg+2,w,c
 17680  005076  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 17681  005078  5006               	movf	??i2___ftpack,w,c
 17682  00507A  1007               	iorwf	??i2___ftpack+1,w,c
 17683  00507C  1008               	iorwf	??i2___ftpack+2,w,c
 17684  00507E  B4D8               	btfsc	status,2,c
 17685  005080  D006               	goto	i2l3641
 17686  005082  D7E6               	goto	i2l3633
 17687  005084                     i2l3639:
 17688  005084  0604               	decf	i2___ftpack@exp,f,c
 17689  005086  90D8               	bcf	status,0,c
 17690  005088  3601               	rlcf	i2___ftpack@arg,f,c
 17691  00508A  3602               	rlcf	i2___ftpack@arg+1,f,c
 17692  00508C  3603               	rlcf	i2___ftpack@arg+2,f,c
 17693  00508E                     i2l3641:
 17694  00508E  BE02               	btfsc	i2___ftpack@arg+1,7,c
 17695  005090  D003               	goto	i2l772
 17696  005092  0E02               	movlw	2
 17697  005094  6004               	cpfslt	i2___ftpack@exp,c
 17698  005096  D7F6               	goto	i2l3639
 17699  005098                     i2l772:
 17700  005098  A004               	btfss	i2___ftpack@exp,0,c
 17701  00509A  9E02               	bcf	i2___ftpack@arg+1,7,c
 17702  00509C  90D8               	bcf	status,0,c
 17703  00509E  3204               	rrcf	i2___ftpack@exp,f,c
 17704  0050A0  5004               	movf	i2___ftpack@exp,w,c
 17705  0050A2  1203               	iorwf	i2___ftpack@arg+2,f,c
 17706  0050A4  5005               	movf	i2___ftpack@sign,w,c
 17707  0050A6  A4D8               	btfss	status,2,c
 17708  0050A8  8E03               	bsf	i2___ftpack@arg+2,7,c
 17709  0050AA  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 17710  0050AE  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 17711  0050B2  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 17712  0050B6  0012               	return	
 17713  0050B8                     __end_ofi2___ftpack:
 17714                           	opt stack 0
 17715                           tosu	equ	0xFFF
 17716                           tosh	equ	0xFFE
 17717                           tosl	equ	0xFFD
 17718                           pclatu	equ	0xFFB
 17719                           pclath	equ	0xFFA
 17720                           tblptru	equ	0xFF8
 17721                           tblptrh	equ	0xFF7
 17722                           tblptrl	equ	0xFF6
 17723                           tablat	equ	0xFF5
 17724                           prodh	equ	0xFF4
 17725                           prodl	equ	0xFF3
 17726                           intcon	equ	0xFF2
 17727                           intcon2	equ	0xFF1
 17728                           intcon3	equ	0xFF0
 17729                           postinc0	equ	0xFEE
 17730                           fsr0h	equ	0xFEA
 17731                           fsr0l	equ	0xFE9
 17732                           wreg	equ	0xFE8
 17733                           fsr1h	equ	0xFE2
 17734                           fsr1l	equ	0xFE1
 17735                           indf2	equ	0xFDF
 17736                           postinc2	equ	0xFDE
 17737                           postdec2	equ	0xFDD
 17738                           fsr2h	equ	0xFDA
 17739                           fsr2l	equ	0xFD9
 17740                           status	equ	0xFD8
 17741                           
 17742 ;; *************** function _TMR0_StopTimer *****************
 17743 ;; Defined at:
 17744 ;;		line 53 in file "mcc_generated_files/tmr0.c"
 17745 ;; Parameters:    Size  Location     Type
 17746 ;;		None
 17747 ;; Auto vars:     Size  Location     Type
 17748 ;;		None
 17749 ;; Return value:  Size  Location     Type
 17750 ;;                  1    wreg      void 
 17751 ;; Registers used:
 17752 ;;		None
 17753 ;; Tracked objects:
 17754 ;;		On entry : 0/0
 17755 ;;		On exit  : 0/0
 17756 ;;		Unchanged: 0/0
 17757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17758 ;;      Params:         0       0       0       0       0       0       0
 17759 ;;      Locals:         0       0       0       0       0       0       0
 17760 ;;      Temps:          0       0       0       0       0       0       0
 17761 ;;      Totals:         0       0       0       0       0       0       0
 17762 ;;Total ram usage:        0 bytes
 17763 ;; Hardware stack levels used:    1
 17764 ;; This function calls:
 17765 ;;		Nothing
 17766 ;; This function is called by:
 17767 ;;		_INT0_ISR
 17768 ;; This function uses a non-reentrant model
 17769 ;;
 17770                           
 17771                           	psect	text71
 17772  005B28                     __ptext71:
 17773                           	opt stack 0
 17774  005B28                     _TMR0_StopTimer:
 17775                           	opt stack 23
 17776                           
 17777                           ;tmr0.c: 56: T0CONbits.TMR0ON = 0;
 17778                           
 17779                           ;incstack = 0
 17780  005B28  9ED5               	bcf	4053,7,c	;volatile
 17781  005B2A  0012               	return		;funcret
 17782  005B2C                     __end_of_TMR0_StopTimer:
 17783                           	opt stack 0
 17784                           tosu	equ	0xFFF
 17785                           tosh	equ	0xFFE
 17786                           tosl	equ	0xFFD
 17787                           pclatu	equ	0xFFB
 17788                           pclath	equ	0xFFA
 17789                           tblptru	equ	0xFF8
 17790                           tblptrh	equ	0xFF7
 17791                           tblptrl	equ	0xFF6
 17792                           tablat	equ	0xFF5
 17793                           prodh	equ	0xFF4
 17794                           prodl	equ	0xFF3
 17795                           intcon	equ	0xFF2
 17796                           intcon2	equ	0xFF1
 17797                           intcon3	equ	0xFF0
 17798                           postinc0	equ	0xFEE
 17799                           fsr0h	equ	0xFEA
 17800                           fsr0l	equ	0xFE9
 17801                           wreg	equ	0xFE8
 17802                           fsr1h	equ	0xFE2
 17803                           fsr1l	equ	0xFE1
 17804                           indf2	equ	0xFDF
 17805                           postinc2	equ	0xFDE
 17806                           postdec2	equ	0xFDD
 17807                           fsr2h	equ	0xFDA
 17808                           fsr2l	equ	0xFD9
 17809                           status	equ	0xFD8
 17810                           
 17811 ;; *************** function _TMR0_Reload *****************
 17812 ;; Defined at:
 17813 ;;		line 81 in file "mcc_generated_files/tmr0.c"
 17814 ;; Parameters:    Size  Location     Type
 17815 ;;		None
 17816 ;; Auto vars:     Size  Location     Type
 17817 ;;		None
 17818 ;; Return value:  Size  Location     Type
 17819 ;;                  1    wreg      void 
 17820 ;; Registers used:
 17821 ;;		wreg, status,2
 17822 ;; Tracked objects:
 17823 ;;		On entry : 0/0
 17824 ;;		On exit  : 0/0
 17825 ;;		Unchanged: 0/0
 17826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17827 ;;      Params:         0       0       0       0       0       0       0
 17828 ;;      Locals:         0       0       0       0       0       0       0
 17829 ;;      Temps:          0       0       0       0       0       0       0
 17830 ;;      Totals:         0       0       0       0       0       0       0
 17831 ;;Total ram usage:        0 bytes
 17832 ;; Hardware stack levels used:    1
 17833 ;; This function calls:
 17834 ;;		Nothing
 17835 ;; This function is called by:
 17836 ;;		_INT0_ISR
 17837 ;; This function uses a non-reentrant model
 17838 ;;
 17839                           
 17840                           	psect	text72
 17841  005B12                     __ptext72:
 17842                           	opt stack 0
 17843  005B12                     _TMR0_Reload:
 17844                           	opt stack 23
 17845                           
 17846                           ;tmr0.c: 84: TMR0H = timer0ReloadVal >> 8;
 17847                           
 17848                           ;incstack = 0
 17849  005B12  505D               	movf	_timer0ReloadVal+1,w,c	;volatile
 17850  005B14  6ED7               	movwf	4055,c	;volatile
 17851                           
 17852                           ;tmr0.c: 85: TMR0L = (uint8_t) timer0ReloadVal;
 17853  005B16  C05C  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 17854  005B1A  0012               	return		;funcret
 17855  005B1C                     __end_of_TMR0_Reload:
 17856                           	opt stack 0
 17857                           tosu	equ	0xFFF
 17858                           tosh	equ	0xFFE
 17859                           tosl	equ	0xFFD
 17860                           pclatu	equ	0xFFB
 17861                           pclath	equ	0xFFA
 17862                           tblptru	equ	0xFF8
 17863                           tblptrh	equ	0xFF7
 17864                           tblptrl	equ	0xFF6
 17865                           tablat	equ	0xFF5
 17866                           prodh	equ	0xFF4
 17867                           prodl	equ	0xFF3
 17868                           intcon	equ	0xFF2
 17869                           intcon2	equ	0xFF1
 17870                           intcon3	equ	0xFF0
 17871                           postinc0	equ	0xFEE
 17872                           fsr0h	equ	0xFEA
 17873                           fsr0l	equ	0xFE9
 17874                           wreg	equ	0xFE8
 17875                           fsr1h	equ	0xFE2
 17876                           fsr1l	equ	0xFE1
 17877                           indf2	equ	0xFDF
 17878                           postinc2	equ	0xFDE
 17879                           postdec2	equ	0xFDD
 17880                           fsr2h	equ	0xFDA
 17881                           fsr2l	equ	0xFD9
 17882                           status	equ	0xFD8
 17883                           
 17884 ;; *************** function _TMR0_ReadTimer *****************
 17885 ;; Defined at:
 17886 ;;		line 59 in file "mcc_generated_files/tmr0.c"
 17887 ;; Parameters:    Size  Location     Type
 17888 ;;		None
 17889 ;; Auto vars:     Size  Location     Type
 17890 ;;  readVal         2    6[COMRAM] unsigned int 
 17891 ;;  readValHigh     1    9[COMRAM] unsigned char 
 17892 ;;  readValLow      1    8[COMRAM] unsigned char 
 17893 ;; Return value:  Size  Location     Type
 17894 ;;                  2    0[COMRAM] unsigned int 
 17895 ;; Registers used:
 17896 ;;		wreg, status,2, status,0
 17897 ;; Tracked objects:
 17898 ;;		On entry : 0/0
 17899 ;;		On exit  : 0/0
 17900 ;;		Unchanged: 0/0
 17901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17902 ;;      Params:         2       0       0       0       0       0       0
 17903 ;;      Locals:         4       0       0       0       0       0       0
 17904 ;;      Temps:          4       0       0       0       0       0       0
 17905 ;;      Totals:        10       0       0       0       0       0       0
 17906 ;;Total ram usage:       10 bytes
 17907 ;; Hardware stack levels used:    1
 17908 ;; This function calls:
 17909 ;;		Nothing
 17910 ;; This function is called by:
 17911 ;;		_INT0_ISR
 17912 ;; This function uses a non-reentrant model
 17913 ;;
 17914                           
 17915                           	psect	text73
 17916  00576E                     __ptext73:
 17917                           	opt stack 0
 17918  00576E                     _TMR0_ReadTimer:
 17919                           	opt stack 23
 17920                           
 17921                           ;tmr0.c: 61: uint16_t readVal;
 17922                           ;tmr0.c: 62: uint8_t readValLow;
 17923                           ;tmr0.c: 63: uint8_t readValHigh;
 17924                           ;tmr0.c: 65: readValLow = TMR0L;
 17925                           
 17926                           ;incstack = 0
 17927  00576E  CFD6 F009          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
 17928                           
 17929                           ;tmr0.c: 66: readValHigh = TMR0H;
 17930  005772  CFD7 F00A          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
 17931                           
 17932                           ;tmr0.c: 69: readVal = ((uint16_t)readValHigh << 8) + readValLow - (timer0ReloadVal);
 17933  005776  C05C  F003         	movff	_timer0ReloadVal,??_TMR0_ReadTimer	;volatile
 17934  00577A  C05D  F004         	movff	_timer0ReloadVal+1,??_TMR0_ReadTimer+1	;volatile
 17935  00577E  1E03               	comf	??_TMR0_ReadTimer,f,c
 17936  005780  1E04               	comf	??_TMR0_ReadTimer+1,f,c
 17937  005782  4A03               	infsnz	??_TMR0_ReadTimer,f,c
 17938  005784  2A04               	incf	??_TMR0_ReadTimer+1,f,c
 17939  005786  5009               	movf	TMR0_ReadTimer@readValLow,w,c
 17940  005788  C00A  F005         	movff	TMR0_ReadTimer@readValHigh,??_TMR0_ReadTimer+2
 17941  00578C  6A06               	clrf	(??_TMR0_ReadTimer+3)& (0+255),c
 17942  00578E  C005  F006         	movff	??_TMR0_ReadTimer+2,??_TMR0_ReadTimer+3
 17943  005792  6A05               	clrf	??_TMR0_ReadTimer+2,c
 17944  005794  2605               	addwf	??_TMR0_ReadTimer+2,f,c
 17945  005796  0E00               	movlw	0
 17946  005798  2206               	addwfc	??_TMR0_ReadTimer+3,f,c
 17947  00579A  5003               	movf	??_TMR0_ReadTimer,w,c
 17948  00579C  2405               	addwf	??_TMR0_ReadTimer+2,w,c
 17949  00579E  6E07               	movwf	TMR0_ReadTimer@readVal,c
 17950  0057A0  5004               	movf	??_TMR0_ReadTimer+1,w,c
 17951  0057A2  2006               	addwfc	??_TMR0_ReadTimer+3,w,c
 17952  0057A4  6E08               	movwf	TMR0_ReadTimer@readVal+1,c
 17953                           
 17954                           ;tmr0.c: 71: return readVal;
 17955  0057A6  C007  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
 17956  0057AA  C008  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
 17957  0057AE  0012               	return	
 17958  0057B0                     __end_of_TMR0_ReadTimer:
 17959                           	opt stack 0
 17960                           tosu	equ	0xFFF
 17961                           tosh	equ	0xFFE
 17962                           tosl	equ	0xFFD
 17963                           pclatu	equ	0xFFB
 17964                           pclath	equ	0xFFA
 17965                           tblptru	equ	0xFF8
 17966                           tblptrh	equ	0xFF7
 17967                           tblptrl	equ	0xFF6
 17968                           tablat	equ	0xFF5
 17969                           prodh	equ	0xFF4
 17970                           prodl	equ	0xFF3
 17971                           intcon	equ	0xFF2
 17972                           intcon2	equ	0xFF1
 17973                           intcon3	equ	0xFF0
 17974                           postinc0	equ	0xFEE
 17975                           fsr0h	equ	0xFEA
 17976                           fsr0l	equ	0xFE9
 17977                           wreg	equ	0xFE8
 17978                           fsr1h	equ	0xFE2
 17979                           fsr1l	equ	0xFE1
 17980                           indf2	equ	0xFDF
 17981                           postinc2	equ	0xFDE
 17982                           postdec2	equ	0xFDD
 17983                           fsr2h	equ	0xFDA
 17984                           fsr2l	equ	0xFD9
 17985                           status	equ	0xFD8
 17986                           
 17987 ;; *************** function _SetRange *****************
 17988 ;; Defined at:
 17989 ;;		line 18 in file "mcc_generated_files/ext_int.c"
 17990 ;; Parameters:    Size  Location     Type
 17991 ;;  new_range       1    wreg     unsigned char 
 17992 ;; Auto vars:     Size  Location     Type
 17993 ;;  new_range       1   10[COMRAM] unsigned char 
 17994 ;; Return value:  Size  Location     Type
 17995 ;;                  1    wreg      void 
 17996 ;; Registers used:
 17997 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 17998 ;; Tracked objects:
 17999 ;;		On entry : 0/0
 18000 ;;		On exit  : 0/0
 18001 ;;		Unchanged: 0/0
 18002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18003 ;;      Params:         0       0       0       0       0       0       0
 18004 ;;      Locals:         1       0       0       0       0       0       0
 18005 ;;      Temps:         10       0       0       0       0       0       0
 18006 ;;      Totals:        11       0       0       0       0       0       0
 18007 ;;Total ram usage:       11 bytes
 18008 ;; Hardware stack levels used:    1
 18009 ;; This function calls:
 18010 ;;		Nothing
 18011 ;; This function is called by:
 18012 ;;		_INT1_ISR
 18013 ;;		_INT0_ISR
 18014 ;;		_TMR0_DefaultInterruptHandler
 18015 ;; This function uses a non-reentrant model
 18016 ;;
 18017                           
 18018                           	psect	text74
 18019  003C76                     __ptext74:
 18020                           	opt stack 0
 18021  003C76                     _SetRange:
 18022                           	opt stack 22
 18023                           
 18024                           ;incstack = 0
 18025                           ;SetRange@new_range stored from wreg
 18026  003C76  6E0B               	movwf	SetRange@new_range,c
 18027                           
 18028                           ;ext_int.c: 21: LATC |= (1 << R1_BIT[0]) | (1 << R1_BIT[1]) | (1 << R1_BIT[2]) | (1 << R
      +                          1_BIT[3]) | (1 << R1_BIT[4]);
 18029  003C78  0E8A               	movlw	low (_R1_BIT+4)
 18030  003C7A  6EF6               	movwf	tblptrl,c
 18031  003C7C  0E06               	movlw	high (_R1_BIT+4)
 18032  003C7E  6EF7               	movwf	tblptrh,c
 18033  003C80                     	if	0	;tblptru may be non-zero
 18034  003C80                     	endif
 18035  003C80                     	if	0	;tblptru may be non-zero
 18036  003C80                     	endif
 18037  003C80  0008               	tblrd		*
 18038  003C82  CFF5 F001          	movff	tablat,??_SetRange
 18039  003C86  0E01               	movlw	1
 18040  003C88  6E02               	movwf	(??_SetRange+1)& (0+255),c
 18041  003C8A  2A01               	incf	??_SetRange,f,c
 18042  003C8C  D002               	goto	i2u556_44
 18043  003C8E                     i2u556_45:
 18044  003C8E  90D8               	bcf	status,0,c
 18045  003C90  3602               	rlcf	??_SetRange+1,f,c
 18046  003C92                     i2u556_44:
 18047  003C92  2E01               	decfsz	??_SetRange,f,c
 18048  003C94  D7FC               	goto	i2u556_45
 18049  003C96  0E89               	movlw	low (_R1_BIT+3)
 18050  003C98  6EF6               	movwf	tblptrl,c
 18051  003C9A  0E06               	movlw	high (_R1_BIT+3)
 18052  003C9C  6EF7               	movwf	tblptrh,c
 18053  003C9E                     	if	0	;tblptru may be non-zero
 18054  003C9E                     	endif
 18055  003C9E                     	if	0	;tblptru may be non-zero
 18056  003C9E                     	endif
 18057  003C9E  0008               	tblrd		*
 18058  003CA0  CFF5 F003          	movff	tablat,??_SetRange+2
 18059  003CA4  0E01               	movlw	1
 18060  003CA6  6E04               	movwf	(??_SetRange+3)& (0+255),c
 18061  003CA8  2A03               	incf	??_SetRange+2,f,c
 18062  003CAA  D002               	goto	i2u557_44
 18063  003CAC                     i2u557_45:
 18064  003CAC  90D8               	bcf	status,0,c
 18065  003CAE  3604               	rlcf	??_SetRange+3,f,c
 18066  003CB0                     i2u557_44:
 18067  003CB0  2E03               	decfsz	??_SetRange+2,f,c
 18068  003CB2  D7FC               	goto	i2u557_45
 18069  003CB4  0E88               	movlw	low (_R1_BIT+2)
 18070  003CB6  6EF6               	movwf	tblptrl,c
 18071  003CB8  0E06               	movlw	high (_R1_BIT+2)
 18072  003CBA  6EF7               	movwf	tblptrh,c
 18073  003CBC                     	if	0	;tblptru may be non-zero
 18074  003CBC                     	endif
 18075  003CBC                     	if	0	;tblptru may be non-zero
 18076  003CBC                     	endif
 18077  003CBC  0008               	tblrd		*
 18078  003CBE  CFF5 F005          	movff	tablat,??_SetRange+4
 18079  003CC2  0E01               	movlw	1
 18080  003CC4  6E06               	movwf	(??_SetRange+5)& (0+255),c
 18081  003CC6  2A05               	incf	??_SetRange+4,f,c
 18082  003CC8  D002               	goto	i2u558_44
 18083  003CCA                     i2u558_45:
 18084  003CCA  90D8               	bcf	status,0,c
 18085  003CCC  3606               	rlcf	??_SetRange+5,f,c
 18086  003CCE                     i2u558_44:
 18087  003CCE  2E05               	decfsz	??_SetRange+4,f,c
 18088  003CD0  D7FC               	goto	i2u558_45
 18089  003CD2  0E87               	movlw	low (_R1_BIT+1)
 18090  003CD4  6EF6               	movwf	tblptrl,c
 18091  003CD6  0E06               	movlw	high (_R1_BIT+1)
 18092  003CD8  6EF7               	movwf	tblptrh,c
 18093  003CDA                     	if	0	;tblptru may be non-zero
 18094  003CDA                     	endif
 18095  003CDA                     	if	0	;tblptru may be non-zero
 18096  003CDA                     	endif
 18097  003CDA  0008               	tblrd		*
 18098  003CDC  CFF5 F007          	movff	tablat,??_SetRange+6
 18099  003CE0  0E01               	movlw	1
 18100  003CE2  6E08               	movwf	(??_SetRange+7)& (0+255),c
 18101  003CE4  2A07               	incf	??_SetRange+6,f,c
 18102  003CE6  D002               	goto	i2u559_44
 18103  003CE8                     i2u559_45:
 18104  003CE8  90D8               	bcf	status,0,c
 18105  003CEA  3608               	rlcf	??_SetRange+7,f,c
 18106  003CEC                     i2u559_44:
 18107  003CEC  2E07               	decfsz	??_SetRange+6,f,c
 18108  003CEE  D7FC               	goto	i2u559_45
 18109  003CF0  0E86               	movlw	low _R1_BIT
 18110  003CF2  6EF6               	movwf	tblptrl,c
 18111  003CF4                     	if	1	;There is more than 1 active tblptr byte
 18112  003CF4  0E06               	movlw	high _R1_BIT
 18113  003CF6  6EF7               	movwf	tblptrh,c
 18114  003CF8                     	endif
 18115  003CF8                     	if	0	;There are less than 3 active tblptr bytes
 18116  003CF8                     	endif
 18117  003CF8  0008               	tblrd		*
 18118  003CFA  CFF5 F009          	movff	tablat,??_SetRange+8
 18119  003CFE  0E01               	movlw	1
 18120  003D00  6E0A               	movwf	(??_SetRange+9)& (0+255),c
 18121  003D02  2A09               	incf	??_SetRange+8,f,c
 18122  003D04  D002               	goto	i2u560_44
 18123  003D06                     i2u560_45:
 18124  003D06  90D8               	bcf	status,0,c
 18125  003D08  360A               	rlcf	??_SetRange+9,f,c
 18126  003D0A                     i2u560_44:
 18127  003D0A  2E09               	decfsz	??_SetRange+8,f,c
 18128  003D0C  D7FC               	goto	i2u560_45
 18129  003D0E  500A               	movf	??_SetRange+9,w,c
 18130  003D10  1008               	iorwf	??_SetRange+7,w,c
 18131  003D12  1006               	iorwf	??_SetRange+5,w,c
 18132  003D14  1004               	iorwf	??_SetRange+3,w,c
 18133  003D16  1002               	iorwf	??_SetRange+1,w,c
 18134  003D18  128B               	iorwf	3979,f,c	;volatile
 18135                           
 18136                           ;ext_int.c: 22: LATB |= (1 << RSET_BIT[0]) | (1 << RSET_BIT[1]) | (1 << RSET_BIT[3]) | (
      +                          1 << RSET_BIT[4]);
 18137  003D1A  0E8F               	movlw	low (_RSET_BIT+4)
 18138  003D1C  6EF6               	movwf	tblptrl,c
 18139  003D1E  0E06               	movlw	high (_RSET_BIT+4)
 18140  003D20  6EF7               	movwf	tblptrh,c
 18141  003D22                     	if	0	;tblptru may be non-zero
 18142  003D22                     	endif
 18143  003D22                     	if	0	;tblptru may be non-zero
 18144  003D22                     	endif
 18145  003D22  0008               	tblrd		*
 18146  003D24  CFF5 F001          	movff	tablat,??_SetRange
 18147  003D28  0E01               	movlw	1
 18148  003D2A  6E02               	movwf	(??_SetRange+1)& (0+255),c
 18149  003D2C  2A01               	incf	??_SetRange,f,c
 18150  003D2E  D002               	goto	i2u561_44
 18151  003D30                     i2u561_45:
 18152  003D30  90D8               	bcf	status,0,c
 18153  003D32  3602               	rlcf	??_SetRange+1,f,c
 18154  003D34                     i2u561_44:
 18155  003D34  2E01               	decfsz	??_SetRange,f,c
 18156  003D36  D7FC               	goto	i2u561_45
 18157  003D38  0E8E               	movlw	low (_RSET_BIT+3)
 18158  003D3A  6EF6               	movwf	tblptrl,c
 18159  003D3C  0E06               	movlw	high (_RSET_BIT+3)
 18160  003D3E  6EF7               	movwf	tblptrh,c
 18161  003D40                     	if	0	;tblptru may be non-zero
 18162  003D40                     	endif
 18163  003D40                     	if	0	;tblptru may be non-zero
 18164  003D40                     	endif
 18165  003D40  0008               	tblrd		*
 18166  003D42  CFF5 F003          	movff	tablat,??_SetRange+2
 18167  003D46  0E01               	movlw	1
 18168  003D48  6E04               	movwf	(??_SetRange+3)& (0+255),c
 18169  003D4A  2A03               	incf	??_SetRange+2,f,c
 18170  003D4C  D002               	goto	i2u562_44
 18171  003D4E                     i2u562_45:
 18172  003D4E  90D8               	bcf	status,0,c
 18173  003D50  3604               	rlcf	??_SetRange+3,f,c
 18174  003D52                     i2u562_44:
 18175  003D52  2E03               	decfsz	??_SetRange+2,f,c
 18176  003D54  D7FC               	goto	i2u562_45
 18177  003D56  0E8C               	movlw	low (_RSET_BIT+1)
 18178  003D58  6EF6               	movwf	tblptrl,c
 18179  003D5A  0E06               	movlw	high (_RSET_BIT+1)
 18180  003D5C  6EF7               	movwf	tblptrh,c
 18181  003D5E                     	if	0	;tblptru may be non-zero
 18182  003D5E                     	endif
 18183  003D5E                     	if	0	;tblptru may be non-zero
 18184  003D5E                     	endif
 18185  003D5E  0008               	tblrd		*
 18186  003D60  CFF5 F005          	movff	tablat,??_SetRange+4
 18187  003D64  0E01               	movlw	1
 18188  003D66  6E06               	movwf	(??_SetRange+5)& (0+255),c
 18189  003D68  2A05               	incf	??_SetRange+4,f,c
 18190  003D6A  D002               	goto	i2u563_44
 18191  003D6C                     i2u563_45:
 18192  003D6C  90D8               	bcf	status,0,c
 18193  003D6E  3606               	rlcf	??_SetRange+5,f,c
 18194  003D70                     i2u563_44:
 18195  003D70  2E05               	decfsz	??_SetRange+4,f,c
 18196  003D72  D7FC               	goto	i2u563_45
 18197  003D74  0E8B               	movlw	low _RSET_BIT
 18198  003D76  6EF6               	movwf	tblptrl,c
 18199  003D78                     	if	1	;There is more than 1 active tblptr byte
 18200  003D78  0E06               	movlw	high _RSET_BIT
 18201  003D7A  6EF7               	movwf	tblptrh,c
 18202  003D7C                     	endif
 18203  003D7C                     	if	0	;There are less than 3 active tblptr bytes
 18204  003D7C                     	endif
 18205  003D7C  0008               	tblrd		*
 18206  003D7E  CFF5 F007          	movff	tablat,??_SetRange+6
 18207  003D82  0E01               	movlw	1
 18208  003D84  6E08               	movwf	(??_SetRange+7)& (0+255),c
 18209  003D86  2A07               	incf	??_SetRange+6,f,c
 18210  003D88  D002               	goto	i2u564_44
 18211  003D8A                     i2u564_45:
 18212  003D8A  90D8               	bcf	status,0,c
 18213  003D8C  3608               	rlcf	??_SetRange+7,f,c
 18214  003D8E                     i2u564_44:
 18215  003D8E  2E07               	decfsz	??_SetRange+6,f,c
 18216  003D90  D7FC               	goto	i2u564_45
 18217  003D92  5008               	movf	??_SetRange+7,w,c
 18218  003D94  1006               	iorwf	??_SetRange+5,w,c
 18219  003D96  1004               	iorwf	??_SetRange+3,w,c
 18220  003D98  1002               	iorwf	??_SetRange+1,w,c
 18221  003D9A  128A               	iorwf	3978,f,c	;volatile
 18222                           
 18223                           ;ext_int.c: 24: LATC &= ~(1 << R1_BIT[new_range - 1]);
 18224  003D9C  0EFF               	movlw	255
 18225  003D9E  6E01               	movwf	??_SetRange& (0+255),c
 18226  003DA0  0EFF               	movlw	255
 18227  003DA2  6E02               	movwf	(??_SetRange+1)& (0+255),c
 18228  003DA4  500B               	movf	SetRange@new_range,w,c
 18229  003DA6  6E03               	movwf	(??_SetRange+2)& (0+255),c
 18230  003DA8  6A04               	clrf	(??_SetRange+3)& (0+255),c
 18231  003DAA  5001               	movf	??_SetRange,w,c
 18232  003DAC  2603               	addwf	??_SetRange+2,f,c
 18233  003DAE  5002               	movf	??_SetRange+1,w,c
 18234  003DB0  2204               	addwfc	??_SetRange+3,f,c
 18235  003DB2  0E86               	movlw	low _R1_BIT
 18236  003DB4  2403               	addwf	??_SetRange+2,w,c
 18237  003DB6  6EF6               	movwf	tblptrl,c
 18238  003DB8  0E06               	movlw	high _R1_BIT
 18239  003DBA  2004               	addwfc	??_SetRange+3,w,c
 18240  003DBC  6EF7               	movwf	tblptrh,c
 18241  003DBE                     	if	0	;There are less than 3 active tblptr bytes
 18242  003DBE                     	endif
 18243  003DBE  0008               	tblrd		*
 18244  003DC0  CFF5 F005          	movff	tablat,??_SetRange+4
 18245  003DC4  0E01               	movlw	1
 18246  003DC6  6E06               	movwf	(??_SetRange+5)& (0+255),c
 18247  003DC8  2A05               	incf	??_SetRange+4,f,c
 18248  003DCA  D002               	goto	i2u565_44
 18249  003DCC                     i2u565_45:
 18250  003DCC  90D8               	bcf	status,0,c
 18251  003DCE  3606               	rlcf	??_SetRange+5,f,c
 18252  003DD0                     i2u565_44:
 18253  003DD0  2E05               	decfsz	??_SetRange+4,f,c
 18254  003DD2  D7FC               	goto	i2u565_45
 18255  003DD4  5006               	movf	??_SetRange+5,w,c
 18256  003DD6  0AFF               	xorlw	255
 18257  003DD8  168B               	andwf	3979,f,c	;volatile
 18258                           
 18259                           ;ext_int.c: 25: LATB &= ~(1 << RSET_BIT[new_range - 1]);
 18260  003DDA  0EFF               	movlw	255
 18261  003DDC  6E01               	movwf	??_SetRange& (0+255),c
 18262  003DDE  0EFF               	movlw	255
 18263  003DE0  6E02               	movwf	(??_SetRange+1)& (0+255),c
 18264  003DE2  500B               	movf	SetRange@new_range,w,c
 18265  003DE4  6E03               	movwf	(??_SetRange+2)& (0+255),c
 18266  003DE6  6A04               	clrf	(??_SetRange+3)& (0+255),c
 18267  003DE8  5001               	movf	??_SetRange,w,c
 18268  003DEA  2603               	addwf	??_SetRange+2,f,c
 18269  003DEC  5002               	movf	??_SetRange+1,w,c
 18270  003DEE  2204               	addwfc	??_SetRange+3,f,c
 18271  003DF0  0E8B               	movlw	low _RSET_BIT
 18272  003DF2  2403               	addwf	??_SetRange+2,w,c
 18273  003DF4  6EF6               	movwf	tblptrl,c
 18274  003DF6  0E06               	movlw	high _RSET_BIT
 18275  003DF8  2004               	addwfc	??_SetRange+3,w,c
 18276  003DFA  6EF7               	movwf	tblptrh,c
 18277  003DFC                     	if	0	;There are less than 3 active tblptr bytes
 18278  003DFC                     	endif
 18279  003DFC  0008               	tblrd		*
 18280  003DFE  CFF5 F005          	movff	tablat,??_SetRange+4
 18281  003E02  0E01               	movlw	1
 18282  003E04  6E06               	movwf	(??_SetRange+5)& (0+255),c
 18283  003E06  2A05               	incf	??_SetRange+4,f,c
 18284  003E08  D002               	goto	i2u566_44
 18285  003E0A                     i2u566_45:
 18286  003E0A  90D8               	bcf	status,0,c
 18287  003E0C  3606               	rlcf	??_SetRange+5,f,c
 18288  003E0E                     i2u566_44:
 18289  003E0E  2E05               	decfsz	??_SetRange+4,f,c
 18290  003E10  D7FC               	goto	i2u566_45
 18291  003E12  5006               	movf	??_SetRange+5,w,c
 18292  003E14  0AFF               	xorlw	255
 18293  003E16  168A               	andwf	3978,f,c	;volatile
 18294  003E18  0012               	return		;funcret
 18295  003E1A                     __end_of_SetRange:
 18296                           	opt stack 0
 18297                           tosu	equ	0xFFF
 18298                           tosh	equ	0xFFE
 18299                           tosl	equ	0xFFD
 18300                           pclatu	equ	0xFFB
 18301                           pclath	equ	0xFFA
 18302                           tblptru	equ	0xFF8
 18303                           tblptrh	equ	0xFF7
 18304                           tblptrl	equ	0xFF6
 18305                           tablat	equ	0xFF5
 18306                           prodh	equ	0xFF4
 18307                           prodl	equ	0xFF3
 18308                           intcon	equ	0xFF2
 18309                           intcon2	equ	0xFF1
 18310                           intcon3	equ	0xFF0
 18311                           postinc0	equ	0xFEE
 18312                           fsr0h	equ	0xFEA
 18313                           fsr0l	equ	0xFE9
 18314                           wreg	equ	0xFE8
 18315                           fsr1h	equ	0xFE2
 18316                           fsr1l	equ	0xFE1
 18317                           indf2	equ	0xFDF
 18318                           postinc2	equ	0xFDE
 18319                           postdec2	equ	0xFDD
 18320                           fsr2h	equ	0xFDA
 18321                           fsr2l	equ	0xFD9
 18322                           status	equ	0xFD8
 18323                           tosu	equ	0xFFF
 18324                           tosh	equ	0xFFE
 18325                           tosl	equ	0xFFD
 18326                           pclatu	equ	0xFFB
 18327                           pclath	equ	0xFFA
 18328                           tblptru	equ	0xFF8
 18329                           tblptrh	equ	0xFF7
 18330                           tblptrl	equ	0xFF6
 18331                           tablat	equ	0xFF5
 18332                           prodh	equ	0xFF4
 18333                           prodl	equ	0xFF3
 18334                           intcon	equ	0xFF2
 18335                           intcon2	equ	0xFF1
 18336                           intcon3	equ	0xFF0
 18337                           postinc0	equ	0xFEE
 18338                           fsr0h	equ	0xFEA
 18339                           fsr0l	equ	0xFE9
 18340                           wreg	equ	0xFE8
 18341                           fsr1h	equ	0xFE2
 18342                           fsr1l	equ	0xFE1
 18343                           indf2	equ	0xFDF
 18344                           postinc2	equ	0xFDE
 18345                           postdec2	equ	0xFDD
 18346                           fsr2h	equ	0xFDA
 18347                           fsr2l	equ	0xFD9
 18348                           status	equ	0xFD8
 18349                           
 18350                           	psect	text75
 18351  000000                     __ptext75:
 18352                           	opt stack 0
 18353                           tosu	equ	0xFFF
 18354                           tosh	equ	0xFFE
 18355                           tosl	equ	0xFFD
 18356                           pclatu	equ	0xFFB
 18357                           pclath	equ	0xFFA
 18358                           tblptru	equ	0xFF8
 18359                           tblptrh	equ	0xFF7
 18360                           tblptrl	equ	0xFF6
 18361                           tablat	equ	0xFF5
 18362                           prodh	equ	0xFF4
 18363                           prodl	equ	0xFF3
 18364                           intcon	equ	0xFF2
 18365                           intcon2	equ	0xFF1
 18366                           intcon3	equ	0xFF0
 18367                           postinc0	equ	0xFEE
 18368                           fsr0h	equ	0xFEA
 18369                           fsr0l	equ	0xFE9
 18370                           wreg	equ	0xFE8
 18371                           fsr1h	equ	0xFE2
 18372                           fsr1l	equ	0xFE1
 18373                           indf2	equ	0xFDF
 18374                           postinc2	equ	0xFDE
 18375                           postdec2	equ	0xFDD
 18376                           fsr2h	equ	0xFDA
 18377                           fsr2l	equ	0xFD9
 18378                           status	equ	0xFD8
 18379                           
 18380                           	psect	rparam
 18381  0000                     tosu	equ	0xFFF
 18382                           tosh	equ	0xFFE
 18383                           tosl	equ	0xFFD
 18384                           pclatu	equ	0xFFB
 18385                           pclath	equ	0xFFA
 18386                           tblptru	equ	0xFF8
 18387                           tblptrh	equ	0xFF7
 18388                           tblptrl	equ	0xFF6
 18389                           tablat	equ	0xFF5
 18390                           prodh	equ	0xFF4
 18391                           prodl	equ	0xFF3
 18392                           intcon	equ	0xFF2
 18393                           intcon2	equ	0xFF1
 18394                           intcon3	equ	0xFF0
 18395                           postinc0	equ	0xFEE
 18396                           fsr0h	equ	0xFEA
 18397                           fsr0l	equ	0xFE9
 18398                           wreg	equ	0xFE8
 18399                           fsr1h	equ	0xFE2
 18400                           fsr1l	equ	0xFE1
 18401                           indf2	equ	0xFDF
 18402                           postinc2	equ	0xFDE
 18403                           postdec2	equ	0xFDD
 18404                           fsr2h	equ	0xFDA
 18405                           fsr2l	equ	0xFD9
 18406                           status	equ	0xFD8
 18407                           
 18408                           	psect	temp
 18409  00005F                     btemp:
 18410                           	opt stack 0
 18411  00005F                     	ds	1
 18412  0000                     int$flags	set	btemp
 18413                           tosu	equ	0xFFF
 18414                           tosh	equ	0xFFE
 18415                           tosl	equ	0xFFD
 18416                           pclatu	equ	0xFFB
 18417                           pclath	equ	0xFFA
 18418                           tblptru	equ	0xFF8
 18419                           tblptrh	equ	0xFF7
 18420                           tblptrl	equ	0xFF6
 18421                           tablat	equ	0xFF5
 18422                           prodh	equ	0xFF4
 18423                           prodl	equ	0xFF3
 18424                           intcon	equ	0xFF2
 18425                           intcon2	equ	0xFF1
 18426                           intcon3	equ	0xFF0
 18427                           postinc0	equ	0xFEE
 18428                           fsr0h	equ	0xFEA
 18429                           fsr0l	equ	0xFE9
 18430                           wreg	equ	0xFE8
 18431                           fsr1h	equ	0xFE2
 18432                           fsr1l	equ	0xFE1
 18433                           indf2	equ	0xFDF
 18434                           postinc2	equ	0xFDE
 18435                           postdec2	equ	0xFDD
 18436                           fsr2h	equ	0xFDA
 18437                           fsr2l	equ	0xFD9
 18438                           status	equ	0xFD8


Data Sizes:
    Strings     92
    Constant    143
    Data        3
    BSS         23
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      94
    BANK0           160     87     114
    BANK1           256     86      86
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[11]), STR_2(CODE[11]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 48
		 -> STR_1(CODE[48]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> i2_putch(), putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> lcd_sendInt@displayString(COMRAM[10]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), printf@ap(COMRAM[2]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 48
		 -> STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[11]), STR_2(CODE[11]), 
		 -> STR_1(CODE[48]), 

    S1009__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    S1009__prbuf$ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 5
		 -> sprintf@pb(BANK1[4]), printf@pb(COMRAM[4]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 10
		 -> lcd_sendUInt@displayString(COMRAM[10]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> lcd_sendInt@displayString(COMRAM[10]), 

    lcd_sendString@a	PTR const unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), lcd_sendUInt@displayString(COMRAM[10]), lcd_sendInt@displayString(COMRAM[10]), main@cap_string(BANK1[16]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_TMR0_DefaultInterruptHandler
    _TMR0_DefaultInterruptHandler->_SetRange
    _INT1_ISR->_SetRange
    _INT0_ISR->_printf
    i2___ftdiv->i2___ftmul
    _printf->i2__doprnt
    i2__doprnt->i2___fttol
    i2_scale->i2___ftmul
    i2_putch->i2_EUSART1_Write
    i2_fround->i2___ftmul
    i2___wmul->i2___awdiv
    i2___ftmul->i2___ftadd
    i2___awdiv->i2___awmod
    i2___lltoft->i2___ftpack
    i2___llmod->i2___lldiv
    i2___fttol->i2_scale
    i2___ftsub->i2___ftadd
    i2___ftadd->i2___wmul
    ___lwtoft->i2___ftpack

Critical Paths under _main in BANK0

    __doprnt->___ftadd
    _scale->___ftmul
    _putch->_EUSART1_Write
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _lcd_sendString->_lcd_sendChar
    _lcd_sendChar->__lcd_Port
    _lcd_init->_lcd_sendCommand
    _lcd_clear->_lcd_sendCommand
    _lcd_sendCommand->__lcd_Port
    ___ftdiv->___ftpack
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INT0_ISR->_printf
    _printf->i2__doprnt

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->__doprnt
    __doprnt->___ftsub
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   77240
                                             70 BANK1     16    16      0
                  _SYSTEM_Initialize
                            ___ftdiv
                             ___ftge
                          _lcd_clear
                           _lcd_init
                     _lcd_sendString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             13     6      7   70609
                                             57 BANK1     13     6      7
                            ___ftdiv (ARG)
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             41    35      6   66641
                                             22 BANK1     35    29      6
                   Absolute function *
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch *
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               10     7      3   12970
                                             81 BANK0      3     0      3
                                              0 BANK1      4     4      0
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      44
                                             47 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      22
                                             46 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                             46 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              13    10      3   12691
                                             81 BANK0      3     0      3
                                              0 BANK1      7     7      0
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    3094
                                             60 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    5375
                                             66 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             46 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             52 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         15     9      6     431
                                             46 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          12     6      6     591
                                             46 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2655
                                             54 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     773
                                             59 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     750
                                             46 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     716
                                              4 BANK1     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    4628
                                             16 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    4150
                                             84 BANK0      3     3      0
                                              7 BANK1      9     3      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     160
                                             46 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     904
                                             46 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_sendString                                       4     2      2     588
                                             50 BANK0      4     2      2
                       _lcd_sendChar
 ---------------------------------------------------------------------------------
 (2) _lcd_sendChar                                         3     3      0     178
                                             47 BANK0      3     3      0
                          __lcd_Port
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     198
                                             49 BANK0      1     1      0
                          __lcd_Port
                    _lcd_sendCommand
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0     110
                    _lcd_sendCommand
 ---------------------------------------------------------------------------------
 (2) _lcd_sendCommand                                      2     2      0     110
                                             47 BANK0      2     2      0
                          __lcd_Port
 ---------------------------------------------------------------------------------
 (3) __lcd_Port                                            1     1      0      88
                                             46 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    3345
                                             54 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2419
                                             46 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     258
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      86
                                             48 BANK0      2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      86
                                             46 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     172
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      86
                                             46 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      86
                                             46 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                          14    14      0   43449
                                             32 BANK0     14    14      0
                           _INT0_ISR
                           _INT1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0      44
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         1     1      0      44
                                             11 COMRAM     1     1      0
                           _SetRange
 ---------------------------------------------------------------------------------
 (7) _INT1_ISR                                             0     0      0      44
                           _SetRange
 ---------------------------------------------------------------------------------
 (7) _INT0_ISR                                             0     0      0   43361
                           _SetRange
                     _TMR0_ReadTimer
                        _TMR0_Reload
                     _TMR0_StopTimer
                           ___lwtoft
                             _printf
                  i2_TMR0_StartTimer
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (8) i2___ftdiv                                           15     9      6     953
                                             47 COMRAM    15     9      6
                           ___lwtoft (ARG)
                          i2___ftadd (ARG)
                          i2___ftmul (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) i2_TMR0_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _printf                                              15     6      9   37099
                                             81 COMRAM     6     6      0
                                             23 BANK0      9     0      9
                          i2__doprnt
 ---------------------------------------------------------------------------------
 (9) i2__doprnt                                           41    35      6   34081
                                             69 COMRAM    12     6      6
                                              0 BANK0     23    23      0
                   Absolute function *
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch *
                            i2_scale
 ---------------------------------------------------------------------------------
 (10) i2_scale                                            13    10      3    4945
                                             47 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (10) i2_putch                                             1     1      0      44
                                              1 COMRAM     1     1      0
                    i2_EUSART1_Write
 ---------------------------------------------------------------------------------
 (11) i2_EUSART1_Write                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) i2_isdigit                                           3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (10) i2_fround                                           16    13      3    4747
                                             47 COMRAM    10     7      3
                          i2___awdiv
                          i2___awmod
                          i2___ftadd (ARG)
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (8) i2___wmul                                             6     2      4    1145
                                             14 COMRAM     6     2      4
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (8) i2___ftmul                                           15     9      6    1727
                                             32 COMRAM    15     9      6
                           ___lwtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___ftadd (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___awmod                                           6     2      4     764
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (11) i2___awdiv                                           8     4      4     820
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (10) i2__tdiv_to_l_                                      15     9      6     355
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (10) i2__div_to_l_                                       12     6      6     481
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (10) i2___lltoft                                          9     5      4     716
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (10) i2___llmod                                           9     1      8     367
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___lldiv                                          13     5      8     318
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (10) i2___fttol                                          15    11      4     330
                                             54 COMRAM    15    11      4
                          i2___ftmul (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftsub                                           6     0      6    1736
                                             32 COMRAM     6     0      6
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (8) i2___ftadd                                           12     6      6    1617
                                             20 COMRAM    12     6      6
                           ___lwtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftneg                                           3     0      3      71
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (10) i2___ftge                                            9     3      6     292
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (8) ___lwtoft                                             3     0      3     707
                                              8 COMRAM     3     0      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (9) i2___ftpack                                           8     3      5     621
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (8) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ReadTimer                                      10     8      2      69
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (9) _SetRange                                            11    11      0      44
                                              0 COMRAM    11    11      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
   ___ftdiv
     ___ftpack
   ___ftge
   _lcd_clear
     _lcd_sendCommand
       __lcd_Port
   _lcd_init
     __lcd_Port
     _lcd_sendCommand
       __lcd_Port
   _lcd_sendString
     _lcd_sendChar
       __lcd_Port
   _sprintf
     ___ftdiv (ARG)
       ___ftpack
     __doprnt (ARG)
       Absolute function(Fake) *
       ___awdiv *
         ___awmod (ARG)
       ___ftadd *
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge *
       ___ftmul *
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg *
       ___ftsub *
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol *
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv *
       ___llmod *
         ___lldiv (ARG)
       ___lltoft *
         ___ftpack
       ___wmul *
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_ *
       __tdiv_to_l_ *
       _fround *
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit *
       _putch *
         _EUSART1_Write
       _scale *
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _INT0_ISR
     _SetRange
     _TMR0_ReadTimer
     _TMR0_Reload
     _TMR0_StopTimer
     ___lwtoft
       i2___ftpack
     _printf
       i2__doprnt
         Absolute function(Fake) *
         i2___awdiv *
           i2___awmod (ARG)
         i2___ftadd *
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftge *
         i2___ftmul *
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftadd (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg *
         i2___ftsub *
           i2___ftadd
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___lltoft (ARG)
             i2___ftpack
         i2___fttol *
           i2___ftmul (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftadd (ARG)
                 ___lwtoft (ARG)
                   i2___ftpack
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lldiv *
         i2___llmod *
           i2___lldiv (ARG)
         i2___lltoft *
           i2___ftpack
         i2___wmul *
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2__div_to_l_ *
         i2__tdiv_to_l_ *
         i2_fround *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftadd (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2_isdigit *
         i2_putch *
           i2_EUSART1_Write
         i2_scale *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
     i2_TMR0_StartTimer
     i2___ftadd
       ___lwtoft (ARG)
         i2___ftpack
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
       i2___ftpack (ARG)
       i2___ftpack (ARG)
       i2___wmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
     i2___ftdiv
       ___lwtoft (ARG)
         i2___ftpack
       i2___ftadd (ARG)
         ___lwtoft (ARG)
           i2___ftpack
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftmul (ARG)
         ___lwtoft (ARG)
           i2___ftpack
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftadd (ARG)
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftpack (ARG)
       i2___wmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
     i2___ftmul
       ___lwtoft (ARG)
         i2___ftpack
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
       i2___ftadd (ARG)
         ___lwtoft (ARG)
           i2___ftpack
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftpack (ARG)
       i2___wmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
     i2___wmul
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
   _INT1_ISR
     _SetRange
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
       _SetRange

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     56      56       6       33.6%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     57      72       4       71.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      5E       1      100.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     126       9        0.0%
DATA                 0      0     126      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat Jan 21 14:12:28 2017

                           ?_lcd_sendChar 0001                              ___awdiv@sign 0099  
                     ___wmul@multiplicand 009E                                i2___ftpack 500A  
                         _timer0ReloadVal 005C                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                              ___ftadd@exp1 010F  
                            ___ftadd@exp2 010E                                i2___lltoft 5556  
                             __CFG_LVP$ON 000000                              ___ftadd@sign 010D  
                         ?_lcd_sendString 0092                          ?_lcd_sendCommand 0001  
                                     l243 5AB8                                       l350 5840  
                                     l352 584C                                       l354 5858  
                                     l419 139C                                       l275 415C  
                                     l348 5834                                       l471 10F2  
                                     l801 36E6                                       l810 37BC  
                                     l740 412E                                       l830 451A  
                                     l486 142E                                       l819 37E6  
                                     l772 49C6                                       l844 3FA6  
                                     l941 4FF8                                       l837 3EE2  
                                     l838 3F26                                       l951 51E2  
                                     l795 3684                                       l869 58B4  
                                     l799 36BE                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                ??_INT0_SetInterruptHandler 0090  
                            ___awmod@sign 0093                                       tosl 000FFD  
                                     wreg 000FE8                              ___ftdiv@cntr 009F  
                            ___ftdiv@sign 00A4                                      l6003 36CC  
                                    l6031 3774                                      l6025 374C  
                                    l6009 36DC                                      l6121 4EC2  
                                    l4443 5842                                      l6027 375A  
                                    l6019 371E                                      l6131 4EF2  
                                    l6115 4EAC                                      l6045 3810  
                                    l6037 37A2                                      l6029 3768  
                                    l4613 40AC                                      l4605 4058  
                                    l6205 35D4                                      l4447 584E  
                                    l4439 5836                                      l6055 385E  
                                    l6039 37B0                                      l6303 5392  
                                    l4535 3E8E                                      l6127 4EE0  
                                    l6143 4F30                                      l6071 431A  
                                    l4519 599C                                      l4721 4F7C  
                                    l6305 53A2                                      l4625 40E4  
                                    l4529 3E54                                      l6129 4EEC  
                                    l6065 42E0                                      l6225 2D0A  
                                    l4651 4E08                                      l6251 5672  
                                    l4723 4F8C                                      l4635 4114  
                                    l6147 4F44                                      l6139 4F22  
                                    l6171 510A                                      l6163 50E4  
                                    l6243 2F5A                                      l6219 2C44  
                                    l4661 4E8C                                      l6261 458A  
                                    l4733 4FE6                                      l4725 4F92  
                                    l4741 5176                                      l4637 4124  
                                    l4629 40F8                                      l4565 3F5C  
                                    l6085 4368                                      l6237 2E94  
                                    l6229 2D30                                      l4655 4E48  
                                    l4743 5186                                      l4591 4004  
                                    l4575 3F8C                                      l6183 5150  
                                    l6175 512E                                      l6167 50F8  
                                    l6159 50D4                                      l6095 43A6  
                                    l5801 56C8                                      l4745 518C  
                                    l4585 3FDE                                      l4577 3F9C  
                                    l4569 3F70                                      l6169 5104  
                                    l6089 4386                                      l6291 465C  
                                    l6283 4630                                      l6179 513C  
                                    l6099 43C4                                      l7165 4478  
                                    l6293 4666                                      l4749 51D0  
                                    l6197 34F0                                      l7159 443E  
                                    l6279 461C                                      l7185 44D8  
                                    l6297 4682                                      l6289 464C  
                                    l5951 4908                                      l5963 497A  
                                    l5955 491C                                      l5973 49D0  
                                    l5965 49AA                                      l5957 492A  
                                    l5797 56A8                                      l9501 098A  
                                    l5967 49B8                                      l5959 495A  
                                    l9431 06F2                                      l9601 0E2E  
                                    l9441 076C                                      l5979 49EC  
                                    l9603 0E36                                      l9531 0AF0  
                                    l9443 0782                                      l5997 3692  
                                    l9701 13DA                                      l9613 0EB4  
                                    l9605 0E4C                                      l9541 0B80  
                                    l9533 0B20                                      l9525 0AAC  
                                    l9517 0A3C                                      l9453 07BC  
                                    l9461 0832                                      l9437 073E  
                                    l9711 1466                                      l9703 140E  
                                    l9623 0F2E                                      l9615 0EBC  
                                    l9535 0B36                                      l9471 08A0  
                                    l9447 078C                                      l9721 14C8  
                                    l9713 149C                                      l9625 0F4A  
                                    l9617 0ED0                                      l9609 0E8A  
                                    l9561 0C78                                      l9545 0BAE  
                                    l9529 0ADA                                      l9481 08D2  
                                    l9473 08B6                                      l9803 1810  
                                    l9651 10D4                                      l9643 108E  
                                    l9635 1020                                      l9627 0F5A  
                                    l9555 0C0C                                      l9467 085A  
                                    l9813 18F0                                      l9741 1566  
                                    l9733 150E                                      l9637 1042  
                                    l9581 0D36                                      l9573 0CBE  
                                    l9493 0936                                      l9477 08C6  
                                    l9821 194E                                      l9485 08D8  
                                    l9815 190C                                      l9807 182E  
                                    l9719 14C2                                      l9671 11CE  
                                    l9663 1152                                      l9655 10F6  
                                    l9647 10B8                                      l9639 1050  
                                    l9559 0C72                                      l9487 091A  
                                    l9479 08CC                                      l9817 191A  
                                    l9761 161E                                      l9753 15D2  
                                    l9737 1536                                      l9681 12C2  
                                    l9649 10C0                                      l9593 0DC6  
                                    l9577 0D0E                                      l9913 426C  
                                    l9755 15DC                                      l9747 159A  
                                    l9683 1310                                      l9667 117C  
                                    l9819 1930                                      l9915 4294  
                                    l9907 41D0                                      l9773 16AC  
                                    l9693 1386                                      l9685 131E  
                                    l9597 0E04                                      l9589 0D9A  
                   __size_ofi2__div_to_l_ 0128                                      l9791 1774  
                                    l9783 1720                                      l9759 1614  
                                    l9695 138E                                      l9679 1294  
                                    STR_1 0690                                      STR_2 06E1  
                                    l9769 1682                                      l9785 172A  
                                    l9689 135C                                      STR_3 06CB  
                                    STR_4 06D6                                      l9795 179E  
                                    l9787 1736                                      l9779 16F6  
                                    STR_5 06C0                                      l9797 17B2  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      u5801 3E30  
                                    u5821 3E6A                                      u8351 3632  
                                    u8361 3650                                      u8561 42BC  
                                    u8821 4566                                      u8581 42F6  
                                    u8840 45B0                                      u8845 45A6  
                                    _WPUB 000F61                             _EUSART1_Write 5AB4  
                                    _main 4140                               i2__doprnt@c 0076  
                            ___ftpack@arg 008E                               i2__doprnt@f 0048  
                            ___ftpack@exp 0091                           _TMR0_StartTimer 5B1C  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr0l 000FE9                                      fsr2h 000FDA  
                                    fsr1l 000FE1                                      indf2 000FDF  
                                    fsr2l 000FD9                                      btemp 005F  
                           __CFG_BORV$190 000000                              i2___ftadd@f1 0015  
                            i2___ftadd@f2 0018                                      pclat 000FFA  
                            i2___ftge@ff1 0001                              i2___ftge@ff2 0004  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00A0                             __CFG_IESO$OFF 000000  
                            i2___ftdiv@f1 0030                              i2___ftdiv@f2 0033  
                            i2___ftdiv@f3 003A                           __end_ofi2_scale 3370  
                            i2___ftneg@f1 0001                           __end_ofi2_putch 5B12  
                          ??_lcd_sendChar 008F                              ___ftmul@cntr 00AF  
                            i2___ftmul@f1 0021                              i2___ftmul@f2 0024  
                            ___param_bank 000010                              ___ftmul@sign 00B0  
                            i2___ftsub@f1 0021                              i2___ftsub@f2 0024  
                            i2___fttol@f1 0037                  __size_ofi2_EUSART1_Write 000C  
                            ___fttol@exp1 0112                              i2___lltoft@c 0009  
                            ___fttol@lval 010E                   __end_of_TMR0_Initialize 576E  
                        __end_of_INT0_ISR 4AFA                          __end_of_INT1_ISR 5A8A  
          ??_TMR0_DefaultInterruptHandler 000C            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 5ADE                                     ?_main 0001  
                         __end_of___awdiv 4F4E                           __end_of___ftadd 3884  
                         __end_of___awmod 515A                 TMR0_ReadTimer@readValHigh 000A  
                         __end_of___ftdiv 4550                           __end_of___ftneg 58C2  
                         __end_of___lldiv 500A                           __end_of___ftmul 4404  
                                   _T0CON 000FD5                           ___awdiv@divisor 0096  
                         __end_of___llmod 51F4                           __end_of___ftsub 569C  
                         __end_of___fttol 4694                                     u10751 441A  
                                   u10771 4454                                     u16008 0D84  
                                   u16028 0DEE                                     u16118 1006  
                                   u16160 10EA                                     u16218 127A  
                                   u16058 0E74                                     u16148 1078  
                                   u16248 1346                                     u16098 0F18  
                                   u15820 09D0                                     u16198 113C  
                          __CFG_DEBUG$OFF 000000                                     u16528 175E  
                                   u15825 09C4                                     u16458 166C  
                                   u15738 0726                                     u16807 5444  
                                   u16568 17FA                                     u16488 16E0  
                                   u16817 59BE                                     u16588 18D8  
                                   u16767 570C                                     u16777 5720  
                                   u16787 5414                                     u16797 542C  
                                   i2l121 004E                                     i2l123 005A  
                                   i2l127 0064                                     i2l243 5AE0  
                                   i2l419 255E                                     i2l471 22C2  
                                   i2l810 3BE8                                     i2l740 48DC  
                                   i2l486 25F0                                     i2l830 4D96  
                                   i2l819 3C04                                     i2l772 5098  
                                   i2l844 47B4                                     i2l941 5378  
                                   i2l837 4726                                     i2l838 474E  
                                   i2l951 5544                                     i2l795 3B0E  
                         ___awdiv@counter 0098                                     i2l869 5A08  
                                   i2l799 3B38                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                              i2__div_to_l_ 47C6  
                         __end_of__doprnt 195A                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
       __size_of_TMR0_SetInterruptHandler 000A                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
               ?_TMR0_SetInterruptHandler 008E                             __CFG_WRT3$OFF 000000  
                            ___lltoft@exp 009E                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                        __end_of_TMR0_ISR 5922                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                                i2isdigit@c 0003  
                        __end_of_RSET_BIT 0690                           __end_of_dpowers 0629  
                              i2scale@scl 0036                              i2__doprnt@ap 004A  
                            i2__doprnt@pb 0046                                     _scale 2AD2  
                                   _range 005E                           __end_of_isdigit 59A6  
                      __CFG_MCLRE$EXTMCLR 000000                             ___ftpack@sign 0092  
                                   _putch 5AA0                                     _units 00D0  
                _INT1_SetInterruptHandler 5AF4                            ?_EUSART1_Write 0001  
                                   pclath 000FFA                                     tablat 000FF5  
                        __end_ofi2___ftge 5284                          __end_ofi2___wmul 59F2  
                                   status 000FD8                           __end_of_sprintf 5604  
                          __CFG_HFOFST$ON 000000                            __CFG_FOSC$HSMP 000000  
                        __end_ofi2_fround 3ACA                             i2___ftdiv@exp 003D  
                      __size_ofi2___awdiv 0084                        __size_ofi2___ftadd 01AC  
                      __size_ofi2___awmod 0070                            __CFG_PBADEN$ON 000000  
                      __size_ofi2___ftdiv 00E6                        __size_ofi2___ftneg 0024  
                      __size_ofi2___lldiv 0082                        __size_ofi2___ftmul 00F4  
                      __size_ofi2___llmod 0066                        __size_ofi2___ftsub 0040  
                      __size_ofi2___fttol 00F4                        __size_ofi2__doprnt 1178  
                         __initialization 5604                         i2___lldiv@divisor 0005  
              __end_of_EUSART1_Initialize 5AA0                              __end_of_main 42A6  
                       i2___lldiv@counter 000D                             i2___ftmul@exp 002A  
                      __size_ofi2_isdigit 001E               ?_INTERRUPT_InterruptManager 0001  
                             ?i2___ftpack 0001                             lcd_sendChar@a 0091  
                           lcd_sendChar@y 0090                               ?i2___lltoft 0009  
                                  ??_main 00B7                             ___fttol@sign1 010D  
                        __end_of_SetRange 3E1A                             __activetblptr 000002  
                    __size_of__tdiv_to_l_ 019E                   __end_of_TMR0_StartTimer 5B20  
                        ___llmod@dividend 009B                                    ?_scale 00B1  
                        ___awdiv@dividend 0094                                    _ANSELA 000F38  
                                  ?_putch 0001                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                          __end_of___ftpack 49FA  
                        __end_of___lltoft 5406                                    _R1_BIT 0686  
                                  i2l4121 39CA                                    i2l4301 5280  
                                  i2l4221 48B2                                    i2l4205 4874  
                          __CFG_WDTEN$OFF 000000                                    i2l4143 30B4  
                                  i2l4313 57C6                                    i2l4401 5502  
                                  i2l4217 48A2                                    i2l4129 3A8A  
                                  i2l4161 32A8                                    i2l4153 317C  
                                  i2l4323 4C1A                                    i2l4403 550E  
                                  i2l4227 48CA                                    i2l4243 46EC  
                                  i2l4341 4C80                                    i2l4405 5512  
                                  i2l4229 48D6                                    i2l4237 46C0  
                                  i2l4149 3158                                    i2l3631 5032  
                                  i2l4351 4CA8                                    i2l4415 555C  
                                  i2l4183 4802                                    i2l3711 5298  
                                  i2l4167 334C                                    i2l3641 508E  
                                  i2l3633 5050                                    i2l3625 501A  
                                  i2l4353 4CB4                                    i2l4345 4C90  
                                  i2l4409 5536                                    i2l4417 5568  
                                  i2l4177 47E4                                    i2l4273 477A  
                                  i2l4291 5224                                    i2l4355 4CBA  
                                  i2l4283 47A2                                    i2l3723 52BE  
                                  i2l4371 5A50                                    i2l3637 5066  
                                  i2l3629 5028                                    i2l3821 3BA2  
                                  i2l3813 3B76                                    i2l4381 532A  
                                  i2l4197 4844                                    i2l4285 47AE  
                                  i2l4277 478A                                    i2l3725 52C6  
                                  i2l3717 52A8                                    i2l3639 5084  
                                  i2l4295 5254                                    i2l3831 3BD6  
                                  i2l3823 3BAC                                    i2l4359 4CD0  
                                  i2l4383 5336                                    i2l3743 52FE  
                                  i2l3735 52E6                                    i2l3727 52CA  
                                  i2l3833 3BE0                                    i2l3825 3BB4  
                                  i2l4393 536A                                    i2l4385 533A  
                                  i2l3819 3B98                                    i2l3739 52F0  
                                  i2l3771 54CE                                    i2l3763 54AE  
                                  i2l3755 5494                                    i2l3765 54B6  
                                  i2l3839 3C20                                    i2l3791 3B1C  
                                  i2l3767 54BA                                    i2l3775 54D8  
                                  i2l3759 54A0                                    i2l5703 5A7C  
                                  i2l3849 3C50                                    i2l3865 4B4A  
                                  i2l5705 5A80                                    i2l3779 54E6  
                                  i2l3883 4B8C                                    i2l3859 4B22  
                                  i2l3797 3B46                                    i2l3893 4BB4  
                                  i2l3879 4B7C                                    i2l3889 4BA4  
                                  i2l9201 2020                                    i2l9041 19EA  
                                  i2l5665 4D32                                    i2l9211 209A  
                                  i2l9203 2036                                    i2l9131 1D40  
                                  i2l9123 1CD4                                    i2l9115 1C6C  
                                  i2l9051 1A22                                    i2l9035 19A6  
                                  i2l5659 4D0A                                    i2l9301 25D0  
                                  i2l9221 2108                                    i2l9213 20A2  
                                  i2l9133 1D56                                    i2l9045 19F2  
                                  i2l9029 195E                                    i2l5685 4D70  
                                  i2l9311 265E                                    i2l9223 2124  
                                  i2l9215 20B6                                    i2l9207 2070  
                                  i2l9143 1DBE                                    i2l9127 1CFA  
                                  i2l9071 1AF8                                    i2l9039 19D4  
                           i2putch@txData 0002                                    i2l9401 299A  
                                  i2l9241 225E                                    i2l9233 21F4  
                                  i2l9225 2134                                    i2l9153 1E1C  
                                  i2l9129 1D10                                    i2l9065 1AA8  
                                  i2l9411 2A6C                                    i2l9331 26D0  
                                  i2l9235 2216                                    i2l9171 1ECE  
                                  i2l9139 1D98                                    i2l9091 1B76  
                                  i2l9075 1B08                                    i2l9083 1B1A  
                                  i2l9059 1A82                                    i2l9413 2A88  
                                  i2l9405 29B8                                    i2l9317 2684  
                                  i2l9309 2628                                    i2l9261 231E  
                                  i2l9253 22C6                                    i2l9245 2288  
                                  i2l9237 2224                                    i2l9157 1E82  
                                  i2l9085 1B5A                                    i2l9077 1B0E  
                                  i2l9069 1AE2                                    i2l9415 2A96  
                                  i2l9351 2780                                    i2l9335 26F4  
                                  i2l9319 268A                                    i2l9247 2290  
                                  i2l9191 1FB4                                    i2l9175 1F10  
                                  i2l9159 1E88                                    i2l9079 1B14  
                                  i2l9353 278A                                    i2l9345 274C  
                                  i2l9281 24D6                                    i2l9265 2348  
                                  i2l9249 22A4                                    i2l9417 2AAC  
                                  i2l9371 284A                                    i2l9339 2720  
                                  i2l9291 2548                                    i2l9283 24E4  
                                  i2l9195 1FEE                                    i2l9187 1F88  
                                  i2l9179 1F30                                    i2l9099 1BCA  
                                  i2l9419 2AC8                                    i2l9381 28BA  
                                  i2l9357 27BE                                    i2l9293 2550  
                                  i2l9277 245A                                    i2l9269 239A  
                                  i2l9367 2820                                    i2l9383 28C4  
                                  i2l9359 27C8                                    i2l9287 251E  
                                  i2l9279 2488                                    i2l9199 2018  
                                  i2l9393 2934                                    i2l9385 28D0  
                                  i2l9377 2890                                    i2l9395 2948  
                                  i2l9299 259C                                    i2l9389 290A  
                                  i2l9843 4AEC                                    _RCREG1 000FAE  
                               ??i2_scale 0033                          __end_of___lwtoft 5A3A  
                                  u444_41 3ADA                                    u445_41 3AEE  
                                  u525_41 46A4                                    _RCSTA1 000FAB  
                                  u527_41 46D0                                    u800_41 4D1A  
                                  u465_41 4B0A                                    _OSCCON 000FD3  
                                  u539_41 4BFE                                    u467_41 4B32  
                                  _SPBRG1 000FAF                                 ??i2_putch 0002  
                                  u798_41 4CF2                                    _TXREG1 000FAD  
                                  _TXSTA1 000FAC                    __size_ofi2__tdiv_to_l_ 0132  
                            __doprnt$1771 0122                            __CFG_XINST$OFF 000000  
                            i2_scale$1952 0033                          __end_of__powers_ 0677  
                        __end_of_lcd_init 5480                              ?_TMR0_Reload 0001  
                                  ___ftge 4DC8                          lcd_sendChar@temp 008F  
                                  ___wmul 57F0                                 ??___awdiv 0098  
                               ??___ftadd 00B4                            __CFG_STVREN$ON 000000  
                               ??___awmod 0092                                 ??___ftdiv 009C  
                               ??___ftneg 0091                                 ??___lldiv 0096  
                               ??___ftmul 00A8                                 ??___llmod 00A3  
                               ??___ftsub 00B7                                 ??___fttol 0108  
                               ??__doprnt 011C                          ?_TMR0_Initialize 0001  
                                  _fround 3370                             i2__doprnt@exp 0063  
                           i2__doprnt@val 0065                                    clear_0 5634  
                        ___awdiv@quotient 009A                           ___awmod@divisor 0090  
                                  _result 0058                              __doprnt@flag 0134  
                         ___awmod@counter 0092                                    _printf 585C  
                            __doprnt@fval 0131                              __doprnt@prec 0136  
                          i2___awdiv@sign 000C                     ___ftmul@f3_as_product 00AC  
                       ??i2_EUSART1_Write 0001                              __pdataCOMRAM 005E  
                               ??_isdigit 008E                         __end_ofi2___awdiv 5308  
                       __end_ofi2___ftadd 3C76                         __end_ofi2___awmod 54F0  
                       __end_ofi2___ftdiv 4DC8                            i2___ftadd@exp1 0020  
                          i2___ftadd@exp2 001F                         __end_ofi2___ftneg 5A16  
                       __end_ofi2___lldiv 538A                         __end_ofi2___ftmul 4BEE  
                       __end_ofi2___llmod 5556                         __end_ofi2___ftsub 57F0  
                       __end_ofi2___fttol 4CE2                            i2___ftadd@sign 001E  
                            __mediumconst 0000                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                       __end_ofi2__doprnt 2AD2                      __end_of_lcd_sendChar 572A  
                        lcd_sendCommand@a 0090                            i2___awmod@sign 0006  
                         ??_EUSART1_Write 008E  TMR0_SetInterruptHandler@InterruptHandler 008E  
INT0_SetInterruptHandler@InterruptHandler 008E  INT1_SetInterruptHandler@InterruptHandler 008E  
                               ??_sprintf 00B7             __size_of_INTERRUPT_Initialize 0004  
                       __end_ofi2_isdigit 5A58                         _SYSTEM_Initialize 5A58  
                          i2___ftdiv@cntr 0039                                __accesstop 0060  
                 __end_of__initialization 5642                            i2___ftdiv@sign 003E  
                               ?_INT0_ISR 0001                                 ?_INT1_ISR 0001  
                              ___ftadd@f1 0107                                ___ftadd@f2 010A  
                     __size_ofi2___ftpack 00AE                                ___ftge@ff1 008E  
                              ___ftge@ff2 0091                        ?_SYSTEM_Initialize 0001  
                     __size_ofi2___lltoft 005C                             ___rparam_used 000001  
                              ___ftdiv@f1 0096                                ___ftdiv@f2 0099  
                              ___ftdiv@f3 00A0                                ___ftneg@f1 008E  
                      __size_of__lcd_Port 0036                            i2___ftpack@arg 0001  
                      i2__tdiv_to_l_@exp1 000F                         i2___llmod@divisor 0012  
                          i2___ftpack@exp 0004                        i2__tdiv_to_l_@cntr 000E  
                       i2___llmod@counter 0016                        i2__tdiv_to_l_@quot 000A  
                              ___ftmul@f1 00A2                                ___ftmul@f2 00A5  
                              ___ftsub@f1 0110                                ___ftsub@f2 0113  
                              ___fttol@f1 0104                            __pcstackCOMRAM 0001  
                      i2___lldiv@dividend 0001                              __pidataBANK0 5B2C  
                     ??_SYSTEM_Initialize 0092                          ??_lcd_sendString 0094  
                               ?_TMR0_ISR 0001                                ___lltoft@c 0096  
                          i2___ftmul@cntr 002E                             __end_of_scale 2F80  
                          i2___ftmul@sign 002F                             __end_of_putch 5AB4  
                 __size_of_TMR0_ReadTimer 0042                            main@cap_string 0146  
                          i2___fttol@exp1 0045                                ___lwtoft@c 0009  
                          i2___fttol@lval 0041                                 ?i2___ftge 0001  
                               ?i2___wmul 000F                             i2__tdiv_to_l_ 4694  
             __size_of_EXT_INT_Initialize 002E                                __div_to_l_ 3FB8  
                               ?i2_fround 0030                        __size_of_lcd_clear 000E  
                              __doprnt@ap 011A                                __doprnt@pb 0116  
                   i2EUSART1_Write@txData 0001                           __div_to_l_@exp1 0099  
                        ?_TMR0_StartTimer 0001                           __div_to_l_@cntr 0098  
                                 ??_scale 00B4                 __end_of_SYSTEM_Initialize 5A72  
                          i2___lltoft@exp 0011                           __div_to_l_@quot 0094  
                                 ??_putch 008F                        i2___lldiv@quotient 0009  
                              __pbssBANK0 00B7                          i2__tdiv_to_l_@f1 0001  
                        i2__tdiv_to_l_@f2 0004                           __CFG_PLLCFG$OFF 000000  
                   _INT0_InterruptHandler 00CA                                ??_INT0_ISR 0058  
                              ??_INT1_ISR 000C                                __pnvCOMRAM 005C  
                           __div_to_l_@f1 008E                             __div_to_l_@f2 0091  
                               ?_SetRange 0001                        __CFG_CCP2MX$PORTC1 000000  
                                 ?___ftge 008E          __end_of_TMR0_SetInterruptHandler 5AF4  
                 __size_of_TMR0_StopTimer 0004                                   ?___wmul 009C  
                              ??_TMR0_ISR 000D                        __CFG_CCP3MX$PORTB5 000000  
                                 ?_fround 00B1                                 ?___ftpack 008E  
                                 ?_printf 0077                                 ?___lltoft 0096  
                          ?i2__tdiv_to_l_ 0001                                ??i2___ftge 0007  
                               ?___lwtoft 0009                                ??i2___wmul 0013  
              ??_INT1_SetInterruptHandler 0090                         __end_of__lcd_Port 585C  
                              ??i2_fround 0033                                   _OSCCON2 000FD2  
                                 _OSCTUNE 000F9B                                   _SPBRGH1 000FB0  
                __size_of_lcd_sendCommand 0026                                 ?_lcd_init 0001  
                                 i2_scale 2F80                                   i2_putch 5B08  
       __size_of_INT0_SetInterruptHandler 000A                 ?_INT0_SetInterruptHandler 008E  
                              ??_SetRange 0001                           __CFG_PWRTEN$OFF 000000  
                       __end_of__npowers_ 0650                                   __Hparam 0000  
                              _scale$1770 0100                                   __Lparam 0000  
                       __end_of_lcd_clear 5AD0                           __size_of___ftge 00C8  
                                 ___awdiv 4E90                                   ___ftadd 361C  
                          i2__doprnt$1953 0060                                   ___awmod 50B8  
                                 ___ftdiv 4404                                   ___ftneg 5892  
                                 ___lldiv 4F4E                           __size_of___wmul 0036  
                                 ___ftmul 42A6                                   ___llmod 515A  
                                 ___ftsub 5650                                   ___fttol 4550  
                            __psmallconst 0600                      __size_of_TMR0_Reload 000A  
                                 __doprnt 06EE                                   __pcinit 5604  
                            ??i2___ftpack 0006                                ??___ftpack 0093  
                         __size_of_fround 02AC                   i2___ftmul@f3_as_product 002B  
                                 __ramtop 0600                              ??i2___lltoft 000D  
                              ??___lltoft 009A                                   __ptext0 4140  
                                 __ptext1 55B2                                   __ptext2 06EE  
                                 __ptext3 2AD2                                   __ptext4 5AA0  
                                 __ptext5 5AB4                                   __ptext6 597C  
                                 __ptext7 3370                                   __ptext8 57F0  
                                 __ptext9 42A6                           __size_of_printf 0036  
                   __size_of_lcd_sendChar 0046                                ??___lwtoft 000C  
                               _T0CONbits 000FD5                             i2_fround$1950 0036  
                           i2_fround$1951 0033                               ?__div_to_l_ 008E  
                                 _dpowers 0601                     _OSCILLATOR_Initialize 5AD0  
                            i2fround@prec 0039                                   _isdigit 597C  
                          i2__doprnt@flag 0072                                   _reading 00B7  
                          i2__doprnt@fval 006D                          ___awmod@dividend 008E  
                          i2__doprnt@prec 0074                        _EUSART1_Initialize 5A8A  
                ??_PIN_MANAGER_Initialize 008E                __size_of_SYSTEM_Initialize 001A  
                                 _sprintf 55B2                             __doprnt@width 012F  
                              ??_lcd_init 0091                      end_of_initialization 5642  
                                 ftoa@buf 00B9                       ?_EUSART1_Initialize 0001  
                           __Lmediumconst 0000                       i2___wmul@multiplier 000F  
                               i2u1510_48 1F72                        __end_ofi2___ftpack 50B8  
                               i2u1512_48 1FD8                                 i2u1521_48 21DA  
                               i2u1531_48 2440                                 i2u1515_48 205A  
                               i2u1524_48 2248                                 i2u1526_40 22BA  
                               i2u1534_48 2508                                 i2u1519_48 20F2  
                               i2u1529_48 2308                                 i2u1562_48 28F4  
                               i2u1555_48 280A                                 i2u1492_40 1C0A  
                               i2u1483_48 198E                                 i2u1492_45 1C00  
                               i2u1566_48 2984                                 i2u1558_48 287A  
                               i2u1568_48 2A54                                 i2u1664_48 590C  
                      __end_ofi2___lltoft 55B2                           ___lldiv@divisor 0092  
                         ___lldiv@counter 009A                           i2_EUSART1_Write 5ADE  
                   TMR0_ReadTimer@readVal 0007                                   printf@f 0077  
                            _lcd_sendChar 56E4                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc2 000FDE  
                          __tdiv_to_l_@f1 008E                            __tdiv_to_l_@f2 0091  
                          _TMR0_ReadTimer 576E                      ??_EUSART1_Initialize 008E  
                         ??i2__tdiv_to_l_ 0007                       __end_of_cal_current 0686  
                           ??__tdiv_to_l_ 0094                  _TMR0_SetInterruptHandler 5AEA  
                   _INT1_InterruptHandler 00CC                                 i2___awdiv 5284  
                     EUSART1_Write@txData 008E                                 i2___ftadd 3ACA  
                               i2___awmod 5480                                 i2___ftdiv 4CE2  
                               i2___ftneg 59F2                                 i2___lldiv 5308  
                               i2___ftmul 4AFA                                 i2___llmod 54F0  
                               i2___ftsub 57B0                                 i2___fttol 4BEE  
                               i2__doprnt 195A                            __end_of_R1_BIT 068B  
                             ___ftdiv@exp 00A3                        i2___llmod@dividend 000E  
                      i2___awdiv@dividend 0007                         ??_lcd_sendCommand 008F  
                         i2___ftpack@sign 0005                                 i2_isdigit 5A3A  
                       __size_of_INT0_ISR 0100                       __size_of__div_to_l_ 0188  
                       __size_of_INT1_ISR 0018                               ___ftmul@exp 00AB  
                          _TMR0_StopTimer 5B28                    __end_of_TMR0_ReadTimer 57B0  
                       SetRange@new_range 000B              __end_of_INTERRUPT_Initialize 5B24  
            _INT0_DefaultInterruptHandler 000000                            __end_of___ftge 4E90  
                          __end_of___wmul 5826                             __pidataCOMRAM 5B2E  
                       __size_of_TMR0_ISR 0030                    ?_OSCILLATOR_Initialize 0001  
                          __end_of_fround 361C                          i2___wmul@product 0013  
                          __end_of_printf 5892                       start_initialization 5604  
                       __size_ofi2___ftge 0090                        i2___awdiv@quotient 000D  
                       __size_ofi2___wmul 0026                  __size_of_TMR0_Initialize 0044  
         __size_of_PIN_MANAGER_Initialize 0030                       __end_of__tdiv_to_l_ 3FB8  
                             __lcd_Port@a 008E                           i2___fttol@sign1 0040  
                       __size_ofi2_fround 0246                                ?i2___awdiv 0007  
                              ?i2___ftadd 0015                                ?i2___awmod 0001  
                              ?i2___ftdiv 0030                                ?i2___ftneg 0001  
                              ?i2___lldiv 0001                                ?i2___ftmul 0021  
                              ?i2___llmod 000E                                ?i2___ftsub 0021  
                              ?i2___fttol 0037                               putch@txData 008F  
                   __end_of_EUSART1_Write 5AC2                                ?i2__doprnt 0046  
                 __end_ofi2_EUSART1_Write 5AEA                           ___llmod@divisor 009F  
                         ___llmod@counter 00A3                    __end_of_TMR0_StopTimer 5B2C  
                              ?i2_isdigit 0001                               _cal_current 0677  
                                ??___ftge 0094                         __size_of_SetRange 01A4  
                         ?_TMR0_ReadTimer 0001                                  ??___wmul 00A0  
                             __doprnt@exp 0125                               __doprnt@val 0127  
                             __pdataBANK0 00D0                                  ??_fround 00B4  
              __end_of_EXT_INT_Initialize 5950                                  ??_printf 0052  
                              fround@prec 0106                             ?i2__div_to_l_ 0001  
                       __size_of___ftpack 010C                         __size_of___lltoft 007C  
                             __pbssCOMRAM 0058          __end_of_INT0_SetInterruptHandler 5B08  
                       __size_of___lwtoft 0024                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                              _isdigit$1301 008F  
                               __lcd_Port 5826                                  ?i2_scale 0030  
                       __size_of_lcd_init 007A                                  ?i2_putch 0001  
                               __doprnt@c 0138                                 __doprnt@f 0118  
                   _TMR0_InterruptHandler 00CE                                 __pnvBANK0 00CA  
                __size_of_TMR0_StartTimer 0004                           lcd_sendString@a 0092  
                         lcd_sendString@i 0094                           ?_TMR0_StopTimer 0001  
                  _PIN_MANAGER_Initialize 58C2                                 __pintcode 0008  
                                ?___awdiv 0094                                  ?___ftadd 0107  
                                ?___awmod 008E                                  ?___ftdiv 0096  
                                ?___ftneg 008E                                  ?___lldiv 008E  
                                ?___ftmul 00A2                                  ?___llmod 009B  
                                ?___ftsub 0110                                 __npowers_ 0629  
                                ?___fttol 0104                               _delta_range 005B  
                                ?__doprnt 0116                                 _lcd_clear 5AC2  
            ??_INTERRUPT_InterruptManager 0080                          __CFG_PRICLKEN$ON 000000  
                             __tdiv_to_l_ 3E1A                            ??i2__div_to_l_ 0007  
                            ??__div_to_l_ 0094                               __smallconst 0600  
                                _BAUDCON1 000FB8                                  ?_isdigit 0001  
                 __size_of_lcd_sendString 0048                               ??i2___awdiv 000B  
                             ??i2___ftadd 001B                               ??i2___awmod 0005  
                                ?_sprintf 0139                               ??i2___ftdiv 0036  
                             ??i2___ftneg 0004                               ??i2___lldiv 0009  
                             ??i2___ftmul 0027                            __size_of_scale 04AE  
                             ??i2___llmod 0016                               ??i2___ftsub 0027  
                             ??i2___fttol 003B                                ?__lcd_Port 0001  
                          __size_of_putch 0014                      _INTERRUPT_Initialize 5B20  
                             ??i2__doprnt 004C                         ??_TMR0_Initialize 0090  
                                _INT0_ISR 49FA                          ?i2_EUSART1_Write 0001  
                                _INT1_ISR 5A72                            ___wmul@product 00A0  
                        i2__doprnt@tmpval 0069                                  _LATAbits 000F89  
                                _LATCbits 000F8B         __size_of_INT1_SetInterruptHandler 000A  
               ?_INT1_SetInterruptHandler 008E                               ??i2_isdigit 0001  
                       i2_TMR0_StartTimer 5B24       __size_of_INTERRUPT_InterruptManager 0098  
              ??_TMR0_SetInterruptHandler 0090                                  _PIR1bits 000F9E  
                      __end_of__div_to_l_ 4140                                  i2u541_40 4C38  
                                i2u541_45 4C30                                  i2u560_44 3D0A  
                                i2u560_45 3D06                                  i2u561_44 3D34  
                                i2u561_45 3D30                                  i2u706_40 5958  
                                i2u562_44 3D52                                  i2u562_45 3D4E  
                                i2u706_46 595A                                  i2u563_44 3D70  
                                i2u563_45 3D6C                                  i2u564_44 3D8E  
                                i2u556_44 3C92                                  i2u564_45 3D8A  
                                i2u556_45 3C8E                                  i2u565_44 3DD0  
                                i2u557_44 3CB0                                  i2u565_45 3DCC  
                                i2u557_45 3CAC                                  i2u566_44 3E0E  
                                i2u558_44 3CCE                                  i2u566_45 3E0A  
                                i2u558_45 3CCA                                  i2u559_44 3CEC  
                                i2u559_45 3CE8                             ??_TMR0_Reload 0001  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                      ?i2_TMR0_StartTimer 0001                                  _TMR0_ISR 58F2  
                         i2__div_to_l_@f1 0001                           i2__div_to_l_@f2 0004  
                                _RSET_BIT 068B                                ?_lcd_clear 0001  
                TMR0_ReadTimer@readValLow 0009                       ??i2_TMR0_StartTimer 0001  
                       ___wmul@multiplier 009C                                  i2___ftge 51F4  
                                i2___wmul 59CC                         i2___awdiv@divisor 0009  
                                i2_fround 3884                         i2___awdiv@counter 000B  
                         _lcd_sendCommand 59A6                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                     ?_INTERRUPT_Initialize 0001  
                _INT0_SetInterruptHandler 5AFE                        i2___awmod@dividend 0001  
                        __size_ofi2_scale 03F0                 __end_ofi2_TMR0_StartTimer 5B28  
                        __size_ofi2_putch 000A                                  _SetRange 3C76  
                                __Hrparam 0000                                  __Lrparam 0000  
                      __CFG_BOREN$SBORDIS 000000                         __CFG_P2BMX$PORTB5 000000  
                 ??_OSCILLATOR_Initialize 008E                         ??_TMR0_StartTimer 008E  
                        __size_of___awdiv 00BE                          __size_of___ftadd 0268  
                        __size_of___awmod 00A2                          __size_of___ftdiv 014C  
                        __size_of___ftneg 0030                     i2___wmul@multiplicand 0011  
                        __size_of___lldiv 00BC                          __size_of___ftmul 015E  
                        __size_of___llmod 009A                          __size_of___ftsub 004C  
                        __size_of___fttol 0144               __size_of_EUSART1_Initialize 0016  
                                ___ftpack 48EE                          __size_of__doprnt 126C  
                             _fround$1768 0103                               _fround$1769 0100  
                                ___lltoft 538A                     __end_ofi2__tdiv_to_l_ 47C6  
                     __end_of_TMR0_Reload 5B1C                           _putch$intlevel0 5AA6  
                                ___lwtoft 5A16                          __size_of_isdigit 002A  
                                __ptext10 50B8                                  __ptext11 4E90  
                                __ptext20 5892                                  __ptext12 3E1A  
                                __ptext21 4DC8                                  __ptext13 3FB8  
                                __ptext30 5A58                                  __ptext22 569C  
                                __ptext14 538A                                  __ptext31 572A  
                                __ptext23 56E4                                  __ptext15 515A  
                                __ptext40 5A8A                                  __ptext32 5B1C  
                                __ptext24 5406                                  __ptext16 4F4E  
                                __ptext33 5AEA                                  __ptext25 5AC2  
                                __ptext17 4550                                  __ptext50 2F80  
                                __ptext42 58F2                                  __ptext34 58C2  
                                __ptext26 59A6                                  __ptext18 5650  
                                __ptext51 5B08                                  __ptext43 5950  
                                __ptext35 5AD0                                  __ptext27 5826  
                                __ptext19 361C                                  __ptext60 47C6  
                                __ptext52 5ADE                                  __ptext44 5A72  
                                __ptext36 5B20                                  __ptext28 4404  
                                __ptext61 5556                                  __ptext53 5A3A  
                                __ptext45 49FA                                  __ptext37 5922  
                                __ptext29 48EE                                  __ptext70 500A  
                                __ptext62 54F0                                  __ptext54 3884  
                                __ptext46 4CE2                                  __ptext38 5AF4  
                                __ptext71 5B28                                  __ptext63 5308  
                                __ptext55 59CC                                  __ptext47 5B24  
                                __ptext39 5AFE                                  __ptext72 5B12  
                                __ptext64 4BEE                                  __ptext56 4AFA  
                                __ptext48 585C                                  __ptext73 576E  
                                __ptext65 57B0                                  __ptext57 5480  
                                __ptext49 195A                                  __ptext74 3C76  
                                __ptext66 3ACA                                  __ptext58 5284  
                                __ptext75 0000                                  __ptext67 59F2  
                                __ptext59 4694                                  __ptext68 51F4  
                                __ptext69 5A16                                  __powers_ 0650  
                                _lcd_init 5406                               ??__lcd_Port 008E  
                        __size_of_sprintf 0052                            i2_isdigit$1301 0002  
                           __size_of_main 0166                          ??_TMR0_ReadTimer 0003  
                    __end_ofi2__div_to_l_ 48EE      __end_of_TMR0_DefaultInterruptHandler 597C  
   __size_of_TMR0_DefaultInterruptHandler 002C              _TMR0_DefaultInterruptHandler 5950  
                         i2__doprnt@width 0070                                  int$flags 005F  
      __end_of_INTERRUPT_InterruptManager 00A0                _INTERRUPT_InterruptManager 0008  
                             ??_lcd_clear 0091                            __doprnt@tmpval 012B  
            _INT1_DefaultInterruptHandler 000000                   __end_of_lcd_sendCommand 59CC  
                       i2___awmod@divisor 0003                         i2___awmod@counter 0005  
                              _INTCONbits 000FF2                            _lcd_sendString 569C  
                                isdigit@c 0090                    ??_INTERRUPT_Initialize 008E  
                                scale@scl 0103                        _EXT_INT_Initialize 5922  
                                intlevel2 0000                                 sprintf@ap 0140  
                               sprintf@pb 0142                          ??_TMR0_StopTimer 0001  
                        __tdiv_to_l_@exp1 009C                          __tdiv_to_l_@cntr 009B  
                               sprintf@wh 0139                          __tdiv_to_l_@quot 0097  
                        ___lldiv@dividend 008E                   ?_PIN_MANAGER_Initialize 0001  
              __size_ofi2_TMR0_StartTimer 0004                       ?_EXT_INT_Initialize 0001  
                              _RCSTA1bits 000FAB             ?_TMR0_DefaultInterruptHandler 0001  
                             _TMR0_Reload 5B12                                  printf@ap 0052  
                                printf@pb 0054                    __size_of_EUSART1_Write 000E  
                            ?__tdiv_to_l_ 008E                    __end_of_lcd_sendString 56E4  
                    ??_EXT_INT_Initialize 0090                                  sprintf@f 013B  
                        ___lldiv@quotient 0096                           _TMR0_Initialize 572A  
        __end_of_INT1_SetInterruptHandler 5AFE                         __CFG_T3CMX$PORTC0 000000  
          __end_of_PIN_MANAGER_Initialize 58F2                         i2__div_to_l_@exp1 000C  
                       i2__div_to_l_@cntr 000B                         i2__div_to_l_@quot 0007  
