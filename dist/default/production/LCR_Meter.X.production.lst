

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Wed Jan 18 19:23:51 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    89                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    90  0000                     
    91 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
    92  0000                     
    93                           	psect	idataBANK0
    94  00576C                     __pidataBANK0:
    95                           	opt stack 0
    96                           
    97                           ;initializer for _units
    98  00576C  70                 	db	112
    99  00576D  46                 	db	70
   100                           
   101                           	psect	smallconst
   102  000600                     __psmallconst:
   103                           	opt stack 0
   104  000600  00                 	db	0
   105  000601                     _dpowers:
   106                           	opt stack 0
   107  000601  0001               	dw	1
   108  000603  0000               	dw	0
   109  000605  000A               	dw	10
   110  000607  0000               	dw	0
   111  000609  0064               	dw	100
   112  00060B  0000               	dw	0
   113  00060D  03E8               	dw	1000
   114  00060F  0000               	dw	0
   115  000611  2710               	dw	10000
   116  000613  0000               	dw	0
   117  000615  86A0               	dw	34464
   118  000617  0001               	dw	1
   119  000619  4240               	dw	16960
   120  00061B  000F               	dw	15
   121  00061D  9680               	dw	38528
   122  00061F  0098               	dw	152
   123  000621  E100               	dw	57600
   124  000623  05F5               	dw	1525
   125  000625  CA00               	dw	51712
   126  000627  3B9A               	dw	15258
   127  000629                     __end_of_dpowers:
   128                           	opt stack 0
   129  000629                     __npowers_:
   130                           	opt stack 0
   131  000629  00                 	db	0
   132  00062A  80                 	db	128
   133  00062B  3F                 	db	63
   134  00062C  CD                 	db	205
   135  00062D  CC                 	db	204
   136  00062E  3D                 	db	61
   137  00062F  D7                 	db	215
   138  000630  23                 	db	35
   139  000631  3C                 	db	60
   140  000632  12                 	db	18
   141  000633  83                 	db	131
   142  000634  3A                 	db	58
   143  000635  B7                 	db	183
   144  000636  D1                 	db	209
   145  000637  38                 	db	56
   146  000638  C6                 	db	198
   147  000639  27                 	db	39
   148  00063A  37                 	db	55
   149  00063B  38                 	db	56
   150  00063C  86                 	db	134
   151  00063D  35                 	db	53
   152  00063E  C0                 	db	192
   153  00063F  D6                 	db	214
   154  000640  33                 	db	51
   155  000641  CC                 	db	204
   156  000642  2B                 	db	43
   157  000643  32                 	db	50
   158  000644  70                 	db	112
   159  000645  89                 	db	137
   160  000646  30                 	db	48
   161  000647  E7                 	db	231
   162  000648  DB                 	db	219
   163  000649  2E                 	db	46
   164  00064A  E5                 	db	229
   165  00064B  3C                 	db	60
   166  00064C  1E                 	db	30
   167  00064D  42                 	db	66
   168  00064E  A2                 	db	162
   169  00064F  0D                 	db	13
   170  000650                     __end_of__npowers_:
   171                           	opt stack 0
   172  000650                     __powers_:
   173                           	opt stack 0
   174  000650  00                 	db	0
   175  000651  80                 	db	128
   176  000652  3F                 	db	63
   177  000653  00                 	db	0
   178  000654  20                 	db	32
   179  000655  41                 	db	65
   180  000656  00                 	db	0
   181  000657  C8                 	db	200
   182  000658  42                 	db	66
   183  000659  00                 	db	0
   184  00065A  7A                 	db	122
   185  00065B  44                 	db	68
   186  00065C  40                 	db	64
   187  00065D  1C                 	db	28
   188  00065E  46                 	db	70
   189  00065F  50                 	db	80
   190  000660  C3                 	db	195
   191  000661  47                 	db	71
   192  000662  24                 	db	36
   193  000663  74                 	db	116
   194  000664  49                 	db	73
   195  000665  97                 	db	151
   196  000666  18                 	db	24
   197  000667  4B                 	db	75
   198  000668  BC                 	db	188
   199  000669  BE                 	db	190
   200  00066A  4C                 	db	76
   201  00066B  6B                 	db	107
   202  00066C  6E                 	db	110
   203  00066D  4E                 	db	78
   204  00066E  03                 	db	3
   205  00066F  15                 	db	21
   206  000670  50                 	db	80
   207  000671  79                 	db	121
   208  000672  AD                 	db	173
   209  000673  60                 	db	96
   210  000674  F3                 	db	243
   211  000675  49                 	db	73
   212  000676  71                 	db	113
   213  000677                     __end_of__powers_:
   214                           	opt stack 0
   215  000677                     STR_1:
   216  000677  43                 	db	67	;'C'
   217  000678  61                 	db	97	;'a'
   218  000679  70                 	db	112	;'p'
   219  00067A  61                 	db	97	;'a'
   220  00067B  63                 	db	99	;'c'
   221  00067C  69                 	db	105	;'i'
   222  00067D  74                 	db	116	;'t'
   223  00067E  61                 	db	97	;'a'
   224  00067F  6E                 	db	110	;'n'
   225  000680  63                 	db	99	;'c'
   226  000681  65                 	db	101	;'e'
   227  000682  3A                 	db	58	;':'
   228  000683  20                 	db	32
   229  000684  25                 	db	37
   230  000685  30                 	db	48	;'0'
   231  000686  2E                 	db	46
   232  000687  32                 	db	50	;'2'
   233  000688  66                 	db	102	;'f'
   234  000689  20                 	db	32
   235  00068A  70                 	db	112	;'p'
   236  00068B  46                 	db	70	;'F'
   237  00068C  20                 	db	32
   238  00068D  28                 	db	40
   239  00068E  43                 	db	67	;'C'
   240  00068F  6F                 	db	111	;'o'
   241  000690  75                 	db	117	;'u'
   242  000691  6E                 	db	110	;'n'
   243  000692  74                 	db	116	;'t'
   244  000693  3A                 	db	58	;':'
   245  000694  20                 	db	32
   246  000695  25                 	db	37
   247  000696  75                 	db	117	;'u'
   248  000697  29                 	db	41
   249  000698  0D                 	db	13
   250  000699  0A                 	db	10
   251  00069A  00                 	db	0
   252  00069B  25                 	db	37
   253  00069C  6C                 	db	108	;'l'
   254  00069D  75                 	db	117	;'u'
   255  00069E  2E                 	db	46
   256  00069F  25                 	db	37
   257  0006A0  36                 	db	54	;'6'
   258  0006A1  2E                 	db	46
   259  0006A2  36                 	db	54	;'6'
   260  0006A3  6C                 	db	108	;'l'
   261  0006A4  75                 	db	117	;'u'
   262  0006A5  00                 	db	0
   263  0006A6                     STR_3:
   264  0006A6  43                 	db	67	;'C'
   265  0006A7  3D                 	db	61	;'='
   266  0006A8  25                 	db	37
   267  0006A9  31                 	db	49	;'1'
   268  0006AA  32                 	db	50	;'2'
   269  0006AB  2E                 	db	46
   270  0006AC  33                 	db	51	;'3'
   271  0006AD  66                 	db	102	;'f'
   272  0006AE  6E                 	db	110	;'n'
   273  0006AF  46                 	db	70	;'F'
   274  0006B0  00                 	db	0
   275  0006B1                     STR_4:
   276  0006B1  43                 	db	67	;'C'
   277  0006B2  3D                 	db	61	;'='
   278  0006B3  25                 	db	37
   279  0006B4  31                 	db	49	;'1'
   280  0006B5  32                 	db	50	;'2'
   281  0006B6  2E                 	db	46
   282  0006B7  30                 	db	48	;'0'
   283  0006B8  66                 	db	102	;'f'
   284  0006B9  70                 	db	112	;'p'
   285  0006BA  46                 	db	70	;'F'
   286  0006BB  00                 	db	0
   287  0006BC                     STR_2:
   288  0006BC  43                 	db	67	;'C'
   289  0006BD  3D                 	db	61	;'='
   290  0006BE  25                 	db	37
   291  0006BF  31                 	db	49	;'1'
   292  0006C0  32                 	db	50	;'2'
   293  0006C1  2E                 	db	46
   294  0006C2  36                 	db	54	;'6'
   295  0006C3  66                 	db	102	;'f'
   296  0006C4  75                 	db	117	;'u'
   297  0006C5  46                 	db	70	;'F'
   298  0006C6  00                 	db	0
   299                           
   300                           ; #config settings
   301  0006C7  00                 	db	0	; dummy byte at the end
   302  0000                     
   303                           	psect	nvBANK0
   304  0000D1                     __pnvBANK0:
   305                           	opt stack 0
   306  0000D1                     _INT0_InterruptHandler:
   307                           	opt stack 0
   308  0000D1                     	ds	2
   309  0000D3                     _TMR0_InterruptHandler:
   310                           	opt stack 0
   311  0000D3                     	ds	2
   312  0000D5                     _timer0ReloadVal:
   313                           	opt stack 0
   314  0000D5                     	ds	2
   315  0000                     _ANSELA	set	3896
   316  0000                     _ANSELB	set	3897
   317  0000                     _ANSELC	set	3898
   318  0000                     _BAUDCON1	set	4024
   319  0000                     _INTCON2bits	set	4081
   320  0000                     _INTCONbits	set	4082
   321  0000                     _LATA	set	3977
   322  0000                     _LATAbits	set	3977
   323  0000                     _LATB	set	3978
   324  0000                     _LATBbits	set	3978
   325  0000                     _LATC	set	3979
   326  0000                     _OSCCON	set	4051
   327  0000                     _OSCCON2	set	4050
   328  0000                     _OSCTUNE	set	3995
   329  0000                     _PIR1bits	set	3998
   330  0000                     _RCONbits	set	4048
   331  0000                     _RCREG1	set	4014
   332  0000                     _RCSTA1	set	4011
   333  0000                     _RCSTA1bits	set	4011
   334  0000                     _SPBRG1	set	4015
   335  0000                     _SPBRGH1	set	4016
   336  0000                     _T0CON	set	4053
   337  0000                     _T0CONbits	set	4053
   338  0000                     _TMR0H	set	4055
   339  0000                     _TMR0L	set	4054
   340  0000                     _TRISA	set	3986
   341  0000                     _TRISB	set	3987
   342  0000                     _TRISC	set	3988
   343  0000                     _TXREG1	set	4013
   344  0000                     _TXSTA1	set	4012
   345  0000                     _WPUB	set	3937
   346                           
   347                           	psect	cinit
   348  0054E4                     __pcinit:
   349                           	opt stack 0
   350  0054E4                     start_initialization:
   351                           	opt stack 0
   352  0054E4                     __initialization:
   353                           	opt stack 0
   354                           
   355                           ; Initialize objects allocated to BANK0 (2 bytes)
   356                           ; load TBLPTR registers with __pidataBANK0
   357  0054E4  0E6C               	movlw	low __pidataBANK0
   358  0054E6  6EF6               	movwf	tblptrl,c
   359  0054E8  0E57               	movlw	high __pidataBANK0
   360  0054EA  6EF7               	movwf	tblptrh,c
   361  0054EC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   362  0054EE  6EF8               	movwf	tblptru,c
   363  0054F0  0009               	tblrd		*+	;fetch initializer
   364  0054F2  CFF5 F0D7          	movff	tablat,__pdataBANK0
   365  0054F6  0009               	tblrd		*+	;fetch initializer
   366  0054F8  CFF5 F0D8          	movff	tablat,__pdataBANK0+1
   367                           
   368                           ; Clear objects allocated to BANK0 (22 bytes)
   369  0054FC  EE00  F0BB         	lfsr	0,__pbssBANK0
   370  005500  0E16               	movlw	22
   371  005502                     clear_0:
   372  005502  6AEE               	clrf	postinc0,c
   373  005504  06E8               	decf	wreg,f,c
   374  005506  E1FD               	bnz	clear_0
   375  005508                     end_of_initialization:
   376                           	opt stack 0
   377  005508                     __end_of__initialization:
   378                           	opt stack 0
   379  005508  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   380  00550A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   381  00550C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   382  00550E  6EF8               	movwf	tblptru,c
   383  005510  0100               	movlb	0
   384  005512  EFCE  F01F         	goto	_main	;jump to C main() function
   385                           tblptru	equ	0xFF8
   386                           tblptrh	equ	0xFF7
   387                           tblptrl	equ	0xFF6
   388                           tablat	equ	0xFF5
   389                           postinc0	equ	0xFEE
   390                           wreg	equ	0xFE8
   391                           
   392                           	psect	bssBANK0
   393  0000BB                     __pbssBANK0:
   394                           	opt stack 0
   395  0000BB                     _result:
   396                           	opt stack 0
   397  0000BB                     	ds	3
   398  0000BE                     ftoa@buf:
   399                           	opt stack 0
   400  0000BE                     	ds	17
   401  0000CF                     _reading:
   402                           	opt stack 0
   403  0000CF                     	ds	2
   404                           tblptru	equ	0xFF8
   405                           tblptrh	equ	0xFF7
   406                           tblptrl	equ	0xFF6
   407                           tablat	equ	0xFF5
   408                           postinc0	equ	0xFEE
   409                           wreg	equ	0xFE8
   410                           
   411                           	psect	dataBANK0
   412  0000D7                     __pdataBANK0:
   413                           	opt stack 0
   414  0000D7                     _units:
   415                           	opt stack 0
   416  0000D7                     	ds	2
   417                           tblptru	equ	0xFF8
   418                           tblptrh	equ	0xFF7
   419                           tblptrl	equ	0xFF6
   420                           tablat	equ	0xFF5
   421                           postinc0	equ	0xFEE
   422                           wreg	equ	0xFE8
   423                           
   424                           	psect	cstackBANK1
   425  000100                     __pcstackBANK1:
   426                           	opt stack 0
   427  000100                     ___ftadd@sign:
   428                           	opt stack 0
   429  000100                     ___fttol@sign1:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0x0
   433  000100                     	ds	1
   434  000101                     ___ftadd@exp2:
   435                           	opt stack 0
   436  000101                     ___fttol@lval:
   437                           	opt stack 0
   438                           
   439                           ; 4 bytes @ 0x1
   440  000101                     	ds	1
   441  000102                     ___ftadd@exp1:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0x2
   445  000102                     	ds	1
   446  000103                     ?___ftsub:
   447                           	opt stack 0
   448  000103                     ___ftsub@f1:
   449                           	opt stack 0
   450                           
   451                           ; 3 bytes @ 0x3
   452  000103                     	ds	2
   453  000105                     ___fttol@exp1:
   454                           	opt stack 0
   455                           
   456                           ; 1 bytes @ 0x5
   457  000105                     	ds	1
   458  000106                     ___ftsub@f2:
   459                           	opt stack 0
   460                           
   461                           ; 3 bytes @ 0x6
   462  000106                     	ds	3
   463  000109                     ?__doprnt:
   464                           	opt stack 0
   465  000109                     __doprnt@pb:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x9
   469  000109                     	ds	2
   470  00010B                     __doprnt@f:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0xB
   474  00010B                     	ds	2
   475  00010D                     __doprnt@ap:
   476                           	opt stack 0
   477                           
   478                           ; 2 bytes @ 0xD
   479  00010D                     	ds	2
   480  00010F                     ??__doprnt:
   481                           
   482                           ; 1 bytes @ 0xF
   483  00010F                     	ds	6
   484  000115                     __doprnt$1622:
   485                           	opt stack 0
   486                           
   487                           ; 3 bytes @ 0x15
   488  000115                     	ds	3
   489  000118                     __doprnt@val:
   490                           	opt stack 0
   491                           
   492                           ; 4 bytes @ 0x18
   493  000118                     	ds	4
   494  00011C                     __doprnt@exp:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x1C
   498  00011C                     	ds	2
   499  00011E                     __doprnt@tmpval:
   500                           	opt stack 0
   501                           
   502                           ; 4 bytes @ 0x1E
   503  00011E                     	ds	4
   504  000122                     __doprnt@flag:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x22
   508  000122                     	ds	2
   509  000124                     __doprnt@width:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0x24
   513  000124                     	ds	2
   514  000126                     __doprnt@fval:
   515                           	opt stack 0
   516                           
   517                           ; 3 bytes @ 0x26
   518  000126                     	ds	3
   519  000129                     __doprnt@prec:
   520                           	opt stack 0
   521                           
   522                           ; 2 bytes @ 0x29
   523  000129                     	ds	2
   524  00012B                     __doprnt@c:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x2B
   528  00012B                     	ds	1
   529  00012C                     ?_sprintf:
   530                           	opt stack 0
   531  00012C                     sprintf@wh:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x2C
   535  00012C                     	ds	2
   536  00012E                     sprintf@f:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x2E
   540  00012E                     	ds	5
   541  000133                     sprintf@ap:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x33
   545  000133                     	ds	2
   546  000135                     sprintf@pb:
   547                           	opt stack 0
   548                           
   549                           ; 4 bytes @ 0x35
   550  000135                     	ds	4
   551  000139                     main@cap_string:
   552                           	opt stack 0
   553                           
   554                           ; 16 bytes @ 0x39
   555  000139                     	ds	16
   556                           tblptru	equ	0xFF8
   557                           tblptrh	equ	0xFF7
   558                           tblptrl	equ	0xFF6
   559                           tablat	equ	0xFF5
   560                           postinc0	equ	0xFEE
   561                           wreg	equ	0xFE8
   562                           
   563                           	psect	cstackBANK0
   564  000060                     __pcstackBANK0:
   565                           	opt stack 0
   566  000060                     i2__doprnt$1804:
   567                           	opt stack 0
   568                           
   569                           ; 3 bytes @ 0x0
   570  000060                     	ds	3
   571  000063                     i2__doprnt@val:
   572                           	opt stack 0
   573                           
   574                           ; 4 bytes @ 0x3
   575  000063                     	ds	4
   576  000067                     i2__doprnt@exp:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x7
   580  000067                     	ds	2
   581  000069                     i2__doprnt@tmpval:
   582                           	opt stack 0
   583                           
   584                           ; 4 bytes @ 0x9
   585  000069                     	ds	4
   586  00006D                     i2__doprnt@fval:
   587                           	opt stack 0
   588                           
   589                           ; 3 bytes @ 0xD
   590  00006D                     	ds	3
   591  000070                     i2__doprnt@flag:
   592                           	opt stack 0
   593                           
   594                           ; 2 bytes @ 0x10
   595  000070                     	ds	2
   596  000072                     i2__doprnt@width:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x12
   600  000072                     	ds	2
   601  000074                     i2__doprnt@prec:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x14
   605  000074                     	ds	2
   606  000076                     i2__doprnt@c:
   607                           	opt stack 0
   608                           
   609                           ; 1 bytes @ 0x16
   610  000076                     	ds	1
   611  000077                     ??_INTERRUPT_InterruptManager:
   612                           
   613                           ; 1 bytes @ 0x17
   614  000077                     	ds	14
   615  000085                     ??_isdigit:
   616  000085                     ?___awmod:
   617                           	opt stack 0
   618  000085                     ?___ftpack:
   619                           	opt stack 0
   620  000085                     ?___ftneg:
   621                           	opt stack 0
   622  000085                     ?__tdiv_to_l_:
   623                           	opt stack 0
   624  000085                     ?__div_to_l_:
   625                           	opt stack 0
   626  000085                     ?___lldiv:
   627                           	opt stack 0
   628  000085                     EUSART1_Write@txData:
   629                           	opt stack 0
   630  000085                     __lcd_Port@a:
   631                           	opt stack 0
   632  000085                     INT0_SetInterruptHandler@InterruptHandler:
   633                           	opt stack 0
   634  000085                     TMR0_SetInterruptHandler@InterruptHandler:
   635                           	opt stack 0
   636  000085                     ___awmod@dividend:
   637                           	opt stack 0
   638  000085                     __div_to_l_@f1:
   639                           	opt stack 0
   640  000085                     ___ftpack@arg:
   641                           	opt stack 0
   642  000085                     __tdiv_to_l_@f1:
   643                           	opt stack 0
   644  000085                     ___ftge@ff1:
   645                           	opt stack 0
   646  000085                     ___ftneg@f1:
   647                           	opt stack 0
   648  000085                     ___lldiv@dividend:
   649                           	opt stack 0
   650                           
   651                           ; 4 bytes @ 0x25
   652  000085                     	ds	1
   653  000086                     ??_lcd_sendCommand:
   654  000086                     putch@txData:
   655                           	opt stack 0
   656  000086                     lcd_sendChar@temp:
   657                           	opt stack 0
   658  000086                     _isdigit$1164:
   659                           	opt stack 0
   660                           
   661                           ; 1 bytes @ 0x26
   662  000086                     	ds	1
   663  000087                     ??_TMR0_Initialize:
   664  000087                     lcd_sendCommand@a:
   665                           	opt stack 0
   666  000087                     lcd_sendChar@y:
   667                           	opt stack 0
   668  000087                     isdigit@c:
   669                           	opt stack 0
   670  000087                     ___awmod@divisor:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x27
   674  000087                     	ds	1
   675  000088                     ??_lcd_init:
   676  000088                     lcd_sendChar@a:
   677                           	opt stack 0
   678  000088                     ___ftpack@exp:
   679                           	opt stack 0
   680  000088                     __div_to_l_@f2:
   681                           	opt stack 0
   682  000088                     __tdiv_to_l_@f2:
   683                           	opt stack 0
   684  000088                     ___ftge@ff2:
   685                           	opt stack 0
   686                           
   687                           ; 3 bytes @ 0x28
   688  000088                     	ds	1
   689  000089                     ___awmod@counter:
   690                           	opt stack 0
   691  000089                     ___ftpack@sign:
   692                           	opt stack 0
   693  000089                     lcd_sendString@a:
   694                           	opt stack 0
   695  000089                     ___lldiv@divisor:
   696                           	opt stack 0
   697                           
   698                           ; 4 bytes @ 0x29
   699  000089                     	ds	1
   700  00008A                     ??___ftpack:
   701  00008A                     ___awmod@sign:
   702                           	opt stack 0
   703                           
   704                           ; 1 bytes @ 0x2A
   705  00008A                     	ds	1
   706  00008B                     ??__tdiv_to_l_:
   707  00008B                     ??___ftge:
   708  00008B                     ?___awdiv:
   709                           	opt stack 0
   710  00008B                     lcd_sendString@i:
   711                           	opt stack 0
   712  00008B                     ___awdiv@dividend:
   713                           	opt stack 0
   714  00008B                     __div_to_l_@quot:
   715                           	opt stack 0
   716                           
   717                           ; 4 bytes @ 0x2B
   718  00008B                     	ds	2
   719  00008D                     ?___ftdiv:
   720                           	opt stack 0
   721  00008D                     ?___lltoft:
   722                           	opt stack 0
   723  00008D                     ___awdiv@divisor:
   724                           	opt stack 0
   725  00008D                     ___ftdiv@f1:
   726                           	opt stack 0
   727  00008D                     ___lldiv@quotient:
   728                           	opt stack 0
   729  00008D                     ___lltoft@c:
   730                           	opt stack 0
   731                           
   732                           ; 4 bytes @ 0x2D
   733  00008D                     	ds	1
   734  00008E                     __tdiv_to_l_@quot:
   735                           	opt stack 0
   736                           
   737                           ; 4 bytes @ 0x2E
   738  00008E                     	ds	1
   739  00008F                     ___awdiv@counter:
   740                           	opt stack 0
   741  00008F                     __div_to_l_@cntr:
   742                           	opt stack 0
   743                           
   744                           ; 1 bytes @ 0x2F
   745  00008F                     	ds	1
   746  000090                     ___awdiv@sign:
   747                           	opt stack 0
   748  000090                     __div_to_l_@exp1:
   749                           	opt stack 0
   750  000090                     ___ftdiv@f2:
   751                           	opt stack 0
   752                           
   753                           ; 3 bytes @ 0x30
   754  000090                     	ds	1
   755  000091                     ??___lltoft:
   756  000091                     ___lldiv@counter:
   757                           	opt stack 0
   758  000091                     ___awdiv@quotient:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0x31
   762  000091                     	ds	1
   763  000092                     ?___llmod:
   764                           	opt stack 0
   765  000092                     __tdiv_to_l_@cntr:
   766                           	opt stack 0
   767  000092                     ___llmod@dividend:
   768                           	opt stack 0
   769                           
   770                           ; 4 bytes @ 0x32
   771  000092                     	ds	1
   772  000093                     ??___ftdiv:
   773  000093                     ?___wmul:
   774                           	opt stack 0
   775  000093                     __tdiv_to_l_@exp1:
   776                           	opt stack 0
   777  000093                     ___wmul@multiplier:
   778                           	opt stack 0
   779                           
   780                           ; 2 bytes @ 0x33
   781  000093                     	ds	2
   782  000095                     ___lltoft@exp:
   783                           	opt stack 0
   784  000095                     ___wmul@multiplicand:
   785                           	opt stack 0
   786                           
   787                           ; 2 bytes @ 0x35
   788  000095                     	ds	1
   789  000096                     ___ftdiv@cntr:
   790                           	opt stack 0
   791  000096                     ___llmod@divisor:
   792                           	opt stack 0
   793                           
   794                           ; 4 bytes @ 0x36
   795  000096                     	ds	1
   796  000097                     ___wmul@product:
   797                           	opt stack 0
   798  000097                     ___ftdiv@f3:
   799                           	opt stack 0
   800                           
   801                           ; 3 bytes @ 0x37
   802  000097                     	ds	2
   803  000099                     ?___ftmul:
   804                           	opt stack 0
   805  000099                     ___ftmul@f1:
   806                           	opt stack 0
   807                           
   808                           ; 3 bytes @ 0x39
   809  000099                     	ds	1
   810  00009A                     ___ftdiv@exp:
   811                           	opt stack 0
   812  00009A                     ___llmod@counter:
   813                           	opt stack 0
   814                           
   815                           ; 1 bytes @ 0x3A
   816  00009A                     	ds	1
   817  00009B                     ___ftdiv@sign:
   818                           	opt stack 0
   819                           
   820                           ; 1 bytes @ 0x3B
   821  00009B                     	ds	1
   822  00009C                     ___ftmul@f2:
   823                           	opt stack 0
   824                           
   825                           ; 3 bytes @ 0x3C
   826  00009C                     	ds	3
   827  00009F                     ??___ftmul:
   828                           
   829                           ; 1 bytes @ 0x3F
   830  00009F                     	ds	3
   831  0000A2                     ___ftmul@exp:
   832                           	opt stack 0
   833                           
   834                           ; 1 bytes @ 0x42
   835  0000A2                     	ds	1
   836  0000A3                     ___ftmul@f3_as_product:
   837                           	opt stack 0
   838                           
   839                           ; 3 bytes @ 0x43
   840  0000A3                     	ds	3
   841  0000A6                     ___ftmul@cntr:
   842                           	opt stack 0
   843                           
   844                           ; 1 bytes @ 0x46
   845  0000A6                     	ds	1
   846  0000A7                     ___ftmul@sign:
   847                           	opt stack 0
   848                           
   849                           ; 1 bytes @ 0x47
   850  0000A7                     	ds	1
   851  0000A8                     ?_fround:
   852                           	opt stack 0
   853  0000A8                     ?_scale:
   854                           	opt stack 0
   855                           
   856                           ; 3 bytes @ 0x48
   857  0000A8                     	ds	3
   858  0000AB                     _fround$1620:
   859                           	opt stack 0
   860  0000AB                     _scale$1621:
   861                           	opt stack 0
   862                           
   863                           ; 3 bytes @ 0x4B
   864  0000AB                     	ds	3
   865  0000AE                     scale@scl:
   866                           	opt stack 0
   867  0000AE                     _fround$1619:
   868                           	opt stack 0
   869                           
   870                           ; 3 bytes @ 0x4E
   871  0000AE                     	ds	1
   872  0000AF                     ?___fttol:
   873                           	opt stack 0
   874  0000AF                     ___fttol@f1:
   875                           	opt stack 0
   876                           
   877                           ; 3 bytes @ 0x4F
   878  0000AF                     	ds	2
   879  0000B1                     fround@prec:
   880                           	opt stack 0
   881                           
   882                           ; 1 bytes @ 0x51
   883  0000B1                     	ds	1
   884  0000B2                     ?___ftadd:
   885                           	opt stack 0
   886  0000B2                     ___ftadd@f1:
   887                           	opt stack 0
   888                           
   889                           ; 3 bytes @ 0x52
   890  0000B2                     	ds	1
   891  0000B3                     ??___fttol:
   892                           
   893                           ; 1 bytes @ 0x53
   894  0000B3                     	ds	2
   895  0000B5                     ___ftadd@f2:
   896                           	opt stack 0
   897                           
   898                           ; 3 bytes @ 0x55
   899  0000B5                     	ds	3
   900  0000B8                     ??___ftadd:
   901                           
   902                           ; 1 bytes @ 0x58
   903  0000B8                     	ds	3
   904  0000BB                     tblptru	equ	0xFF8
   905                           tblptrh	equ	0xFF7
   906                           tblptrl	equ	0xFF6
   907                           tablat	equ	0xFF5
   908                           postinc0	equ	0xFEE
   909                           wreg	equ	0xFE8
   910                           
   911                           ; 1 bytes @ 0x5B
   912                           
   913                           	psect	cstackCOMRAM
   914  000001                     __pcstackCOMRAM:
   915                           	opt stack 0
   916  000001                     ??_TMR0_DefaultInterruptHandler:
   917  000001                     ??i2_isdigit:
   918  000001                     ?_TMR0_ReadTimer:
   919                           	opt stack 0
   920  000001                     ?i2___awmod:
   921                           	opt stack 0
   922  000001                     ?i2___ftpack:
   923                           	opt stack 0
   924  000001                     ?i2___ftneg:
   925                           	opt stack 0
   926  000001                     ?i2__div_to_l_:
   927                           	opt stack 0
   928  000001                     ?i2__tdiv_to_l_:
   929                           	opt stack 0
   930  000001                     ?i2___lldiv:
   931                           	opt stack 0
   932  000001                     i2EUSART1_Write@txData:
   933                           	opt stack 0
   934  000001                     i2___awmod@dividend:
   935                           	opt stack 0
   936  000001                     i2__div_to_l_@f1:
   937                           	opt stack 0
   938  000001                     i2___ftpack@arg:
   939                           	opt stack 0
   940  000001                     i2__tdiv_to_l_@f1:
   941                           	opt stack 0
   942  000001                     i2___ftge@ff1:
   943                           	opt stack 0
   944  000001                     i2___ftneg@f1:
   945                           	opt stack 0
   946  000001                     i2___lldiv@dividend:
   947                           	opt stack 0
   948                           
   949                           ; 4 bytes @ 0x0
   950  000001                     	ds	1
   951  000002                     i2putch@txData:
   952                           	opt stack 0
   953  000002                     i2_isdigit$1164:
   954                           	opt stack 0
   955                           
   956                           ; 1 bytes @ 0x1
   957  000002                     	ds	1
   958  000003                     ??_TMR0_ReadTimer:
   959  000003                     i2isdigit@c:
   960                           	opt stack 0
   961  000003                     i2___awmod@divisor:
   962                           	opt stack 0
   963                           
   964                           ; 2 bytes @ 0x2
   965  000003                     	ds	1
   966  000004                     i2___ftpack@exp:
   967                           	opt stack 0
   968  000004                     i2__div_to_l_@f2:
   969                           	opt stack 0
   970  000004                     i2__tdiv_to_l_@f2:
   971                           	opt stack 0
   972  000004                     i2___ftge@ff2:
   973                           	opt stack 0
   974                           
   975                           ; 3 bytes @ 0x3
   976  000004                     	ds	1
   977  000005                     i2___awmod@counter:
   978                           	opt stack 0
   979  000005                     i2___ftpack@sign:
   980                           	opt stack 0
   981  000005                     i2___lldiv@divisor:
   982                           	opt stack 0
   983                           
   984                           ; 4 bytes @ 0x4
   985  000005                     	ds	1
   986  000006                     ??i2___ftpack:
   987  000006                     i2___awmod@sign:
   988                           	opt stack 0
   989                           
   990                           ; 1 bytes @ 0x5
   991  000006                     	ds	1
   992  000007                     ??i2__tdiv_to_l_:
   993  000007                     ??i2___ftge:
   994  000007                     ?i2___awdiv:
   995                           	opt stack 0
   996  000007                     TMR0_ReadTimer@readVal:
   997                           	opt stack 0
   998  000007                     i2___awdiv@dividend:
   999                           	opt stack 0
  1000  000007                     i2__div_to_l_@quot:
  1001                           	opt stack 0
  1002                           
  1003                           ; 4 bytes @ 0x6
  1004  000007                     	ds	2
  1005  000009                     ?___lwtoft:
  1006                           	opt stack 0
  1007  000009                     ?i2___lltoft:
  1008                           	opt stack 0
  1009  000009                     TMR0_ReadTimer@readValLow:
  1010                           	opt stack 0
  1011  000009                     ___lwtoft@c:
  1012                           	opt stack 0
  1013  000009                     i2___awdiv@divisor:
  1014                           	opt stack 0
  1015  000009                     i2___lldiv@quotient:
  1016                           	opt stack 0
  1017  000009                     i2___lltoft@c:
  1018                           	opt stack 0
  1019                           
  1020                           ; 4 bytes @ 0x8
  1021  000009                     	ds	1
  1022  00000A                     TMR0_ReadTimer@readValHigh:
  1023                           	opt stack 0
  1024  00000A                     i2__tdiv_to_l_@quot:
  1025                           	opt stack 0
  1026                           
  1027                           ; 4 bytes @ 0x9
  1028  00000A                     	ds	1
  1029  00000B                     i2___awdiv@counter:
  1030                           	opt stack 0
  1031  00000B                     i2__div_to_l_@cntr:
  1032                           	opt stack 0
  1033                           
  1034                           ; 1 bytes @ 0xA
  1035  00000B                     	ds	1
  1036  00000C                     i2___awdiv@sign:
  1037                           	opt stack 0
  1038  00000C                     i2__div_to_l_@exp1:
  1039                           	opt stack 0
  1040                           
  1041                           ; 1 bytes @ 0xB
  1042  00000C                     	ds	1
  1043  00000D                     ??i2___lltoft:
  1044  00000D                     i2___lldiv@counter:
  1045                           	opt stack 0
  1046  00000D                     i2___awdiv@quotient:
  1047                           	opt stack 0
  1048                           
  1049                           ; 2 bytes @ 0xC
  1050  00000D                     	ds	1
  1051  00000E                     ?i2___llmod:
  1052                           	opt stack 0
  1053  00000E                     i2__tdiv_to_l_@cntr:
  1054                           	opt stack 0
  1055  00000E                     i2___llmod@dividend:
  1056                           	opt stack 0
  1057                           
  1058                           ; 4 bytes @ 0xD
  1059  00000E                     	ds	1
  1060  00000F                     ?i2___wmul:
  1061                           	opt stack 0
  1062  00000F                     i2__tdiv_to_l_@exp1:
  1063                           	opt stack 0
  1064  00000F                     i2___wmul@multiplier:
  1065                           	opt stack 0
  1066                           
  1067                           ; 2 bytes @ 0xE
  1068  00000F                     	ds	2
  1069  000011                     i2___lltoft@exp:
  1070                           	opt stack 0
  1071  000011                     i2___wmul@multiplicand:
  1072                           	opt stack 0
  1073                           
  1074                           ; 2 bytes @ 0x10
  1075  000011                     	ds	1
  1076  000012                     i2___llmod@divisor:
  1077                           	opt stack 0
  1078                           
  1079                           ; 4 bytes @ 0x11
  1080  000012                     	ds	1
  1081  000013                     i2___wmul@product:
  1082                           	opt stack 0
  1083                           
  1084                           ; 2 bytes @ 0x12
  1085  000013                     	ds	2
  1086  000015                     ?i2___ftadd:
  1087                           	opt stack 0
  1088  000015                     i2___ftadd@f1:
  1089                           	opt stack 0
  1090                           
  1091                           ; 3 bytes @ 0x14
  1092  000015                     	ds	1
  1093  000016                     i2___llmod@counter:
  1094                           	opt stack 0
  1095                           
  1096                           ; 1 bytes @ 0x15
  1097  000016                     	ds	2
  1098  000018                     i2___ftadd@f2:
  1099                           	opt stack 0
  1100                           
  1101                           ; 3 bytes @ 0x17
  1102  000018                     	ds	3
  1103  00001B                     ??i2___ftadd:
  1104                           
  1105                           ; 1 bytes @ 0x1A
  1106  00001B                     	ds	3
  1107  00001E                     i2___ftadd@sign:
  1108                           	opt stack 0
  1109                           
  1110                           ; 1 bytes @ 0x1D
  1111  00001E                     	ds	1
  1112  00001F                     i2___ftadd@exp2:
  1113                           	opt stack 0
  1114                           
  1115                           ; 1 bytes @ 0x1E
  1116  00001F                     	ds	1
  1117  000020                     i2___ftadd@exp1:
  1118                           	opt stack 0
  1119                           
  1120                           ; 1 bytes @ 0x1F
  1121  000020                     	ds	1
  1122  000021                     ?i2___ftmul:
  1123                           	opt stack 0
  1124  000021                     ?i2___ftsub:
  1125                           	opt stack 0
  1126  000021                     i2___ftmul@f1:
  1127                           	opt stack 0
  1128  000021                     i2___ftsub@f1:
  1129                           	opt stack 0
  1130                           
  1131                           ; 3 bytes @ 0x20
  1132  000021                     	ds	3
  1133  000024                     i2___ftmul@f2:
  1134                           	opt stack 0
  1135  000024                     i2___ftsub@f2:
  1136                           	opt stack 0
  1137                           
  1138                           ; 3 bytes @ 0x23
  1139  000024                     	ds	3
  1140  000027                     ??i2___ftmul:
  1141  000027                     
  1142                           ; 1 bytes @ 0x26
  1143  000027                     	ds	3
  1144  00002A                     i2___ftmul@exp:
  1145                           	opt stack 0
  1146                           
  1147                           ; 1 bytes @ 0x29
  1148  00002A                     	ds	1
  1149  00002B                     i2___ftmul@f3_as_product:
  1150                           	opt stack 0
  1151                           
  1152                           ; 3 bytes @ 0x2A
  1153  00002B                     	ds	3
  1154  00002E                     i2___ftmul@cntr:
  1155                           	opt stack 0
  1156                           
  1157                           ; 1 bytes @ 0x2D
  1158  00002E                     	ds	1
  1159  00002F                     i2___ftmul@sign:
  1160                           	opt stack 0
  1161                           
  1162                           ; 1 bytes @ 0x2E
  1163  00002F                     	ds	1
  1164  000030                     ?i2_fround:
  1165                           	opt stack 0
  1166  000030                     ?i2_scale:
  1167                           	opt stack 0
  1168  000030                     ?i2___ftdiv:
  1169                           	opt stack 0
  1170  000030                     i2___ftdiv@f1:
  1171                           	opt stack 0
  1172                           
  1173                           ; 3 bytes @ 0x2F
  1174  000030                     	ds	3
  1175  000033                     i2___ftdiv@f2:
  1176                           	opt stack 0
  1177  000033                     i2_fround$1802:
  1178                           	opt stack 0
  1179  000033                     i2_scale$1803:
  1180                           	opt stack 0
  1181                           
  1182                           ; 3 bytes @ 0x32
  1183  000033                     	ds	3
  1184  000036                     ??i2___ftdiv:
  1185  000036                     i2scale@scl:
  1186                           	opt stack 0
  1187  000036                     i2_fround$1801:
  1188                           	opt stack 0
  1189                           
  1190                           ; 3 bytes @ 0x35
  1191  000036                     	ds	1
  1192  000037                     ?i2___fttol:
  1193                           	opt stack 0
  1194  000037                     i2___fttol@f1:
  1195                           	opt stack 0
  1196                           
  1197                           ; 3 bytes @ 0x36
  1198  000037                     	ds	2
  1199  000039                     i2fround@prec:
  1200                           	opt stack 0
  1201  000039                     i2___ftdiv@cntr:
  1202                           	opt stack 0
  1203                           
  1204                           ; 1 bytes @ 0x38
  1205  000039                     	ds	1
  1206  00003A                     i2___ftdiv@f3:
  1207                           	opt stack 0
  1208                           
  1209                           ; 3 bytes @ 0x39
  1210  00003A                     	ds	1
  1211  00003B                     ??i2___fttol:
  1212                           
  1213                           ; 1 bytes @ 0x3A
  1214  00003B                     	ds	2
  1215  00003D                     i2___ftdiv@exp:
  1216                           	opt stack 0
  1217                           
  1218                           ; 1 bytes @ 0x3C
  1219  00003D                     	ds	1
  1220  00003E                     i2___ftdiv@sign:
  1221                           	opt stack 0
  1222                           
  1223                           ; 1 bytes @ 0x3D
  1224  00003E                     	ds	2
  1225  000040                     i2___fttol@sign1:
  1226                           	opt stack 0
  1227                           
  1228                           ; 1 bytes @ 0x3F
  1229  000040                     	ds	1
  1230  000041                     i2___fttol@lval:
  1231                           	opt stack 0
  1232                           
  1233                           ; 4 bytes @ 0x40
  1234  000041                     	ds	4
  1235  000045                     i2___fttol@exp1:
  1236                           	opt stack 0
  1237                           
  1238                           ; 1 bytes @ 0x44
  1239  000045                     	ds	1
  1240  000046                     ?i2__doprnt:
  1241                           	opt stack 0
  1242  000046                     i2__doprnt@pb:
  1243                           	opt stack 0
  1244                           
  1245                           ; 2 bytes @ 0x45
  1246  000046                     	ds	2
  1247  000048                     i2__doprnt@f:
  1248                           	opt stack 0
  1249                           
  1250                           ; 2 bytes @ 0x47
  1251  000048                     	ds	2
  1252  00004A                     i2__doprnt@ap:
  1253                           	opt stack 0
  1254                           
  1255                           ; 2 bytes @ 0x49
  1256  00004A                     	ds	2
  1257  00004C                     ??i2__doprnt:
  1258                           
  1259                           ; 1 bytes @ 0x4B
  1260  00004C                     	ds	6
  1261  000052                     ?_printf:
  1262                           	opt stack 0
  1263  000052                     printf@f:
  1264                           	opt stack 0
  1265                           
  1266                           ; 2 bytes @ 0x51
  1267  000052                     	ds	7
  1268  000059                     printf@ap:
  1269                           	opt stack 0
  1270                           
  1271                           ; 2 bytes @ 0x58
  1272  000059                     	ds	2
  1273  00005B                     printf@pb:
  1274                           	opt stack 0
  1275                           
  1276                           ; 4 bytes @ 0x5A
  1277  00005B                     	ds	4
  1278  00005F                     tblptru	equ	0xFF8
  1279                           tblptrh	equ	0xFF7
  1280                           tblptrl	equ	0xFF6
  1281                           tablat	equ	0xFF5
  1282                           postinc0	equ	0xFEE
  1283                           wreg	equ	0xFE8
  1284                           
  1285                           ; 1 bytes @ 0x5E
  1286 ;;
  1287 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1288 ;;
  1289 ;; *************** function _main *****************
  1290 ;; Defined at:
  1291 ;;		line 8 in file "main.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;		None
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;  cap_string     16   57[BANK1 ] unsigned char [16]
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  1    wreg      void 
  1298 ;; Registers used:
  1299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1305 ;;      Params:         0       0       0       0       0       0       0
  1306 ;;      Locals:         0       0      16       0       0       0       0
  1307 ;;      Temps:          0       0       0       0       0       0       0
  1308 ;;      Totals:         0       0      16       0       0       0       0
  1309 ;;Total ram usage:       16 bytes
  1310 ;; Hardware stack levels required when called:   12
  1311 ;; This function calls:
  1312 ;;		_SYSTEM_Initialize
  1313 ;;		___ftdiv
  1314 ;;		___ftge
  1315 ;;		_lcd_clear
  1316 ;;		_lcd_init
  1317 ;;		_lcd_sendString
  1318 ;;		_sprintf
  1319 ;; This function is called by:
  1320 ;;		Startup code after reset
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           	psect	text0
  1325  003F9C                     __ptext0:
  1326                           	opt stack 0
  1327  003F9C                     _main:
  1328                           	opt stack 19
  1329                           
  1330                           ;main.c: 11: SYSTEM_Initialize();
  1331                           
  1332                           ;incstack = 0
  1333  003F9C  EC50  F02B         	call	_SYSTEM_Initialize	;wreg free
  1334                           
  1335                           ;main.c: 30: (INTCONbits.GIE = 1);
  1336  003FA0  8EF2               	bsf	intcon,7,c	;volatile
  1337                           
  1338                           ;main.c: 33: (INTCONbits.PEIE = 1);
  1339  003FA2  8CF2               	bsf	intcon,6,c	;volatile
  1340                           
  1341                           ;main.c: 41: lcd_init();
  1342  003FA4  EC50  F028         	call	_lcd_init	;wreg free
  1343                           
  1344                           ;main.c: 42: lcd_clear();
  1345  003FA8  EC85  F02B         	call	_lcd_clear	;wreg free
  1346  003FAC                     l215:
  1347                           
  1348                           ;main.c: 45: {
  1349                           ;main.c: 47: char cap_string[16];
  1350                           ;main.c: 50: if (result >= 1000000.0)
  1351  003FAC  C0BB  F085         	movff	_result,___ftge@ff1
  1352  003FB0  C0BC  F086         	movff	_result+1,___ftge@ff1+1
  1353  003FB4  C0BD  F087         	movff	_result+2,___ftge@ff1+2
  1354  003FB8  0E24               	movlw	36
  1355  003FBA  0100               	movlb	0	; () banked
  1356  003FBC  6F88               	movwf	___ftge@ff2& (0+255),b
  1357  003FBE  0E74               	movlw	116
  1358  003FC0  0100               	movlb	0	; () banked
  1359  003FC2  6F89               	movwf	(___ftge@ff2+1)& (0+255),b
  1360  003FC4  0E49               	movlw	73
  1361  003FC6  0100               	movlb	0	; () banked
  1362  003FC8  6F8A               	movwf	(___ftge@ff2+2)& (0+255),b
  1363  003FCA  ECDD  F024         	call	___ftge	;wreg free
  1364  003FCE  0100               	movlb	0	; () banked
  1365  003FD0  A0D8               	btfss	status,0,c
  1366  003FD2  D026               	goto	l9414
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;main.c: 51: {
  1370                           ;main.c: 52: sprintf(cap_string, "C=%12.6fuF", result / 1000000.0);
  1371  003FD4  0E39               	movlw	low main@cap_string
  1372  003FD6  0101               	movlb	1	; () banked
  1373  003FD8  6F2C               	movwf	sprintf@wh& (0+255),b
  1374  003FDA  0E01               	movlw	high main@cap_string
  1375  003FDC  0101               	movlb	1	; () banked
  1376  003FDE  6F2D               	movwf	(sprintf@wh+1)& (0+255),b
  1377  003FE0  0EBC               	movlw	low STR_2
  1378  003FE2  0101               	movlb	1	; () banked
  1379  003FE4  6F2E               	movwf	sprintf@f& (0+255),b
  1380  003FE6  0E06               	movlw	high STR_2
  1381  003FE8  0101               	movlb	1	; () banked
  1382  003FEA  6F2F               	movwf	(sprintf@f+1)& (0+255),b
  1383  003FEC  C0BB  F08D         	movff	_result,___ftdiv@f1
  1384  003FF0  C0BC  F08E         	movff	_result+1,___ftdiv@f1+1
  1385  003FF4  C0BD  F08F         	movff	_result+2,___ftdiv@f1+2
  1386  003FF8  0E24               	movlw	36
  1387  003FFA  0100               	movlb	0	; () banked
  1388  003FFC  6F90               	movwf	___ftdiv@f2& (0+255),b
  1389  003FFE  0E74               	movlw	116
  1390  004000  0100               	movlb	0	; () banked
  1391  004002  6F91               	movwf	(___ftdiv@f2+1)& (0+255),b
  1392  004004  0E49               	movlw	73
  1393  004006  0100               	movlb	0	; () banked
  1394  004008  6F92               	movwf	(___ftdiv@f2+2)& (0+255),b
  1395  00400A  EC7B  F020         	call	___ftdiv	;wreg free
  1396  00400E  C08D  F130         	movff	?___ftdiv,?_sprintf+4
  1397  004012  C08E  F131         	movff	?___ftdiv+1,?_sprintf+5
  1398  004016  C08F  F132         	movff	?___ftdiv+2,?_sprintf+6
  1399  00401A  EC26  F029         	call	_sprintf	;wreg free
  1400                           
  1401                           ;main.c: 53: }
  1402  00401E  D062               	goto	l9422
  1403  004020                     l9414:
  1404                           
  1405                           ;main.c: 54: else if (result < 1000000 && result >= 1000.0)
  1406  004020  C0BB  F085         	movff	_result,___ftge@ff1
  1407  004024  C0BC  F086         	movff	_result+1,___ftge@ff1+1
  1408  004028  C0BD  F087         	movff	_result+2,___ftge@ff1+2
  1409  00402C  0E24               	movlw	36
  1410  00402E  0100               	movlb	0	; () banked
  1411  004030  6F88               	movwf	___ftge@ff2& (0+255),b
  1412  004032  0E74               	movlw	116
  1413  004034  0100               	movlb	0	; () banked
  1414  004036  6F89               	movwf	(___ftge@ff2+1)& (0+255),b
  1415  004038  0E49               	movlw	73
  1416  00403A  0100               	movlb	0	; () banked
  1417  00403C  6F8A               	movwf	(___ftge@ff2+2)& (0+255),b
  1418  00403E  ECDD  F024         	call	___ftge	;wreg free
  1419  004042  0100               	movlb	0	; () banked
  1420  004044  B0D8               	btfsc	status,0,c
  1421  004046  D03A               	goto	l9420
  1422                           
  1423                           ; BSR set to: 0
  1424  004048  C0BB  F085         	movff	_result,___ftge@ff1
  1425  00404C  C0BC  F086         	movff	_result+1,___ftge@ff1+1
  1426  004050  C0BD  F087         	movff	_result+2,___ftge@ff1+2
  1427  004054  0E00               	movlw	0
  1428  004056  0100               	movlb	0	; () banked
  1429  004058  6F88               	movwf	___ftge@ff2& (0+255),b
  1430  00405A  0E7A               	movlw	122
  1431  00405C  0100               	movlb	0	; () banked
  1432  00405E  6F89               	movwf	(___ftge@ff2+1)& (0+255),b
  1433  004060  0E44               	movlw	68
  1434  004062  0100               	movlb	0	; () banked
  1435  004064  6F8A               	movwf	(___ftge@ff2+2)& (0+255),b
  1436  004066  ECDD  F024         	call	___ftge	;wreg free
  1437  00406A  0100               	movlb	0	; () banked
  1438  00406C  A0D8               	btfss	status,0,c
  1439  00406E  D026               	goto	l9420
  1440                           
  1441                           ; BSR set to: 0
  1442                           ;main.c: 55: {
  1443                           ;main.c: 56: sprintf(cap_string, "C=%12.3fnF", result / 1000.0);
  1444  004070  0E39               	movlw	low main@cap_string
  1445  004072  0101               	movlb	1	; () banked
  1446  004074  6F2C               	movwf	sprintf@wh& (0+255),b
  1447  004076  0E01               	movlw	high main@cap_string
  1448  004078  0101               	movlb	1	; () banked
  1449  00407A  6F2D               	movwf	(sprintf@wh+1)& (0+255),b
  1450  00407C  0EA6               	movlw	low STR_3
  1451  00407E  0101               	movlb	1	; () banked
  1452  004080  6F2E               	movwf	sprintf@f& (0+255),b
  1453  004082  0E06               	movlw	high STR_3
  1454  004084  0101               	movlb	1	; () banked
  1455  004086  6F2F               	movwf	(sprintf@f+1)& (0+255),b
  1456  004088  C0BB  F08D         	movff	_result,___ftdiv@f1
  1457  00408C  C0BC  F08E         	movff	_result+1,___ftdiv@f1+1
  1458  004090  C0BD  F08F         	movff	_result+2,___ftdiv@f1+2
  1459  004094  0E00               	movlw	0
  1460  004096  0100               	movlb	0	; () banked
  1461  004098  6F90               	movwf	___ftdiv@f2& (0+255),b
  1462  00409A  0E7A               	movlw	122
  1463  00409C  0100               	movlb	0	; () banked
  1464  00409E  6F91               	movwf	(___ftdiv@f2+1)& (0+255),b
  1465  0040A0  0E44               	movlw	68
  1466  0040A2  0100               	movlb	0	; () banked
  1467  0040A4  6F92               	movwf	(___ftdiv@f2+2)& (0+255),b
  1468  0040A6  EC7B  F020         	call	___ftdiv	;wreg free
  1469  0040AA  C08D  F130         	movff	?___ftdiv,?_sprintf+4
  1470  0040AE  C08E  F131         	movff	?___ftdiv+1,?_sprintf+5
  1471  0040B2  C08F  F132         	movff	?___ftdiv+2,?_sprintf+6
  1472  0040B6  EC26  F029         	call	_sprintf	;wreg free
  1473                           
  1474                           ;main.c: 57: }
  1475  0040BA  D014               	goto	l9422
  1476  0040BC                     l9420:
  1477                           
  1478                           ;main.c: 58: else
  1479                           ;main.c: 59: {
  1480                           ;main.c: 60: sprintf(cap_string, "C=%12.0fpF", result);
  1481  0040BC  0E39               	movlw	low main@cap_string
  1482  0040BE  0101               	movlb	1	; () banked
  1483  0040C0  6F2C               	movwf	sprintf@wh& (0+255),b
  1484  0040C2  0E01               	movlw	high main@cap_string
  1485  0040C4  0101               	movlb	1	; () banked
  1486  0040C6  6F2D               	movwf	(sprintf@wh+1)& (0+255),b
  1487  0040C8  0EB1               	movlw	low STR_4
  1488  0040CA  0101               	movlb	1	; () banked
  1489  0040CC  6F2E               	movwf	sprintf@f& (0+255),b
  1490  0040CE  0E06               	movlw	high STR_4
  1491  0040D0  0101               	movlb	1	; () banked
  1492  0040D2  6F2F               	movwf	(sprintf@f+1)& (0+255),b
  1493  0040D4  C0BB  F130         	movff	_result,?_sprintf+4
  1494  0040D8  C0BC  F131         	movff	_result+1,?_sprintf+5
  1495  0040DC  C0BD  F132         	movff	_result+2,?_sprintf+6
  1496  0040E0  EC26  F029         	call	_sprintf	;wreg free
  1497  0040E4                     l9422:
  1498                           
  1499                           ;main.c: 61: }
  1500                           ;main.c: 63: lcd_sendString(cap_string);
  1501  0040E4  0E39               	movlw	low main@cap_string
  1502  0040E6  0100               	movlb	0	; () banked
  1503  0040E8  6F89               	movwf	lcd_sendString@a& (0+255),b
  1504  0040EA  0E01               	movlw	high main@cap_string
  1505  0040EC  0100               	movlb	0	; () banked
  1506  0040EE  6F8A               	movwf	(lcd_sendString@a+1)& (0+255),b
  1507  0040F0  EC75  F029         	call	_lcd_sendString	;wreg free
  1508  0040F4  D75B               	goto	l215
  1509  0040F6                     __end_of_main:
  1510                           	opt stack 0
  1511                           tblptru	equ	0xFF8
  1512                           tblptrh	equ	0xFF7
  1513                           tblptrl	equ	0xFF6
  1514                           tablat	equ	0xFF5
  1515                           intcon	equ	0xFF2
  1516                           postinc0	equ	0xFEE
  1517                           wreg	equ	0xFE8
  1518                           status	equ	0xFD8
  1519                           
  1520 ;; *************** function _sprintf *****************
  1521 ;; Defined at:
  1522 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprintf.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;  wh              2   44[BANK1 ] PTR unsigned char 
  1525 ;;		 -> ftoa@buf(17), main@cap_string(16), 
  1526 ;;  f               2   46[BANK1 ] PTR const unsigned char 
  1527 ;;		 -> STR_5(11), STR_4(11), STR_3(11), STR_2(11), 
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;  pb              4   53[BANK1 ] struct __prbuf
  1530 ;;  ap              2   51[BANK1 ] PTR void [1]
  1531 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  2   44[BANK1 ] int 
  1534 ;; Registers used:
  1535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1541 ;;      Params:         0       0       7       0       0       0       0
  1542 ;;      Locals:         0       0       6       0       0       0       0
  1543 ;;      Temps:          0       0       0       0       0       0       0
  1544 ;;      Totals:         0       0      13       0       0       0       0
  1545 ;;Total ram usage:       13 bytes
  1546 ;; Hardware stack levels used:    1
  1547 ;; Hardware stack levels required when called:   11
  1548 ;; This function calls:
  1549 ;;		__doprnt
  1550 ;; This function is called by:
  1551 ;;		_main
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           	psect	text1
  1556  00524C                     __ptext1:
  1557                           	opt stack 0
  1558  00524C                     _sprintf:
  1559                           	opt stack 19
  1560                           
  1561                           ;incstack = 0
  1562  00524C  C12C  F135         	movff	sprintf@wh,sprintf@pb
  1563  005250  C12D  F136         	movff	sprintf@wh+1,sprintf@pb+1
  1564  005254  0E00               	movlw	0
  1565  005256  0101               	movlb	1	; () banked
  1566  005258  6F37               	movwf	(sprintf@pb+2)& (0+255),b
  1567  00525A  0E00               	movlw	0
  1568  00525C  0101               	movlb	1	; () banked
  1569  00525E  6F38               	movwf	(sprintf@pb+3)& (0+255),b
  1570  005260  0E30               	movlw	low (?_sprintf+4)
  1571  005262  0101               	movlb	1	; () banked
  1572  005264  6F33               	movwf	sprintf@ap& (0+255),b
  1573  005266  0E01               	movlw	high (?_sprintf+4)
  1574  005268  0101               	movlb	1	; () banked
  1575  00526A  6F34               	movwf	(sprintf@ap+1)& (0+255),b
  1576                           
  1577                           ; BSR set to: 1
  1578  00526C  0E35               	movlw	low sprintf@pb
  1579  00526E  0101               	movlb	1	; () banked
  1580  005270  6F09               	movwf	__doprnt@pb& (0+255),b
  1581  005272  0E01               	movlw	high sprintf@pb
  1582  005274  0101               	movlb	1	; () banked
  1583  005276  6F0A               	movwf	(__doprnt@pb+1)& (0+255),b
  1584  005278  C12E  F10B         	movff	sprintf@f,__doprnt@f
  1585  00527C  C12F  F10C         	movff	sprintf@f+1,__doprnt@f+1
  1586  005280  0E33               	movlw	low sprintf@ap
  1587  005282  0101               	movlb	1	; () banked
  1588  005284  6F0D               	movwf	__doprnt@ap& (0+255),b
  1589  005286  0E01               	movlw	high sprintf@ap
  1590  005288  0101               	movlb	1	; () banked
  1591  00528A  6F0E               	movwf	(__doprnt@ap+1)& (0+255),b
  1592  00528C  EC64  F003         	call	__doprnt	;wreg free
  1593  005290  C135  FFD9         	movff	sprintf@pb,fsr2l
  1594  005294  C136  FFDA         	movff	sprintf@pb+1,fsr2h
  1595  005298  0E00               	movlw	0
  1596  00529A  6EDF               	movwf	indf2,c
  1597  00529C  0012               	return	
  1598  00529E                     __end_of_sprintf:
  1599                           	opt stack 0
  1600                           tblptru	equ	0xFF8
  1601                           tblptrh	equ	0xFF7
  1602                           tblptrl	equ	0xFF6
  1603                           tablat	equ	0xFF5
  1604                           intcon	equ	0xFF2
  1605                           postinc0	equ	0xFEE
  1606                           wreg	equ	0xFE8
  1607                           indf2	equ	0xFDF
  1608                           fsr2h	equ	0xFDA
  1609                           fsr2l	equ	0xFD9
  1610                           status	equ	0xFD8
  1611                           
  1612 ;; *************** function __doprnt *****************
  1613 ;; Defined at:
  1614 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;  pb              2    9[BANK1 ] PTR struct __prbuf
  1617 ;;		 -> sprintf@pb(4), printf@pb(4), 
  1618 ;;  f               2   11[BANK1 ] PTR const unsigned char 
  1619 ;;		 -> STR_5(11), STR_4(11), STR_3(11), STR_2(11), 
  1620 ;;		 -> STR_1(36), 
  1621 ;;  ap              2   13[BANK1 ] PTR PTR void 
  1622 ;;		 -> sprintf@ap(2), printf@ap(2), 
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;  tmpval          4   30[BANK1 ] struct .
  1625 ;;  val             4   24[BANK1 ] unsigned long 
  1626 ;;  fval            3   38[BANK1 ] unsigned long 
  1627 ;;  cp              3    0        PTR const unsigned char 
  1628 ;;  prec            2   41[BANK1 ] int 
  1629 ;;  width           2   36[BANK1 ] int 
  1630 ;;  flag            2   34[BANK1 ] unsigned short 
  1631 ;;  exp             2   28[BANK1 ] int 
  1632 ;;  len             2    0        unsigned int 
  1633 ;;  c               1   43[BANK1 ] char 
  1634 ;;  d               1    0        unsigned char 
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  2    9[BANK1 ] int 
  1637 ;; Registers used:
  1638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1644 ;;      Params:         0       0       6       0       0       0       0
  1645 ;;      Locals:         0       0      23       0       0       0       0
  1646 ;;      Temps:          0       0       6       0       0       0       0
  1647 ;;      Totals:         0       0      35       0       0       0       0
  1648 ;;Total ram usage:       35 bytes
  1649 ;; Hardware stack levels used:    1
  1650 ;; Hardware stack levels required when called:   10
  1651 ;; This function calls:
  1652 ;;		Absolute function
  1653 ;;		___awdiv
  1654 ;;		___ftadd
  1655 ;;		___ftge
  1656 ;;		___ftmul
  1657 ;;		___ftneg
  1658 ;;		___ftsub
  1659 ;;		___fttol
  1660 ;;		___lldiv
  1661 ;;		___llmod
  1662 ;;		___lltoft
  1663 ;;		___wmul
  1664 ;;		__div_to_l_
  1665 ;;		__tdiv_to_l_
  1666 ;;		_fround
  1667 ;;		_isdigit
  1668 ;;		_putch
  1669 ;;		_scale
  1670 ;; This function is called by:
  1671 ;;		_sprintf
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           	psect	text2
  1676  0006C8                     __ptext2:
  1677                           	opt stack 0
  1678  0006C8                     __doprnt:
  1679                           	opt stack 19
  1680                           
  1681                           ;doprnt.c: 499: signed char c;
  1682                           ;doprnt.c: 501: int width;
  1683                           ;doprnt.c: 504: int prec;
  1684                           ;doprnt.c: 508: unsigned short flag;
  1685                           ;doprnt.c: 515: char d;
  1686                           ;doprnt.c: 516: double fval;
  1687                           ;doprnt.c: 517: int exp;
  1688                           ;doprnt.c: 523: union {
  1689                           ;doprnt.c: 524: unsigned long vd;
  1690                           ;doprnt.c: 525: double integ;
  1691                           ;doprnt.c: 526: } tmpval;
  1692                           ;doprnt.c: 528: unsigned long val;
  1693                           ;doprnt.c: 529: unsigned len;
  1694                           ;doprnt.c: 530: const char * cp;
  1695                           ;doprnt.c: 536: while(c = *f++) {
  1696                           
  1697                           ;incstack = 0
  1698  0006C8  EF37  F00C         	goto	l9350
  1699  0006CC                     l8974:
  1700                           
  1701                           ;doprnt.c: 538: if(c != '%')
  1702  0006CC  0E25               	movlw	37
  1703  0006CE  0101               	movlb	1	; () banked
  1704  0006D0  192B               	xorwf	__doprnt@c& (0+255),w,b
  1705  0006D2  B4D8               	btfsc	status,2,c
  1706  0006D4  D038               	goto	l8984
  1707                           
  1708                           ; BSR set to: 1
  1709                           ;doprnt.c: 540: {
  1710                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  1711  0006D6  0101               	movlb	1	; () banked
  1712  0006D8  EE20 F002          	lfsr	2,2
  1713  0006DC  5109               	movf	__doprnt@pb& (0+255),w,b
  1714  0006DE  26D9               	addwf	fsr2l,f,c
  1715  0006E0  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  1716  0006E2  22DA               	addwfc	fsr2h,f,c
  1717  0006E4  50DE               	movf	postinc2,w,c
  1718  0006E6  10DE               	iorwf	postinc2,w,c
  1719  0006E8  B4D8               	btfsc	status,2,c
  1720  0006EA  D016               	goto	l8980
  1721                           
  1722                           ; BSR set to: 1
  1723  0006EC  0101               	movlb	1	; () banked
  1724  0006EE  EE20 F002          	lfsr	2,2
  1725  0006F2  5109               	movf	__doprnt@pb& (0+255),w,b
  1726  0006F4  26D9               	addwf	fsr2l,f,c
  1727  0006F6  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  1728  0006F8  22DA               	addwfc	fsr2h,f,c
  1729  0006FA  D802               	call	u14828
  1730  0006FC  EF37  F00C         	goto	l9350
  1731  000700                     u14828:
  1732  000700  0005               	push	
  1733  000702  6EFA               	movwf	pclath,c
  1734  000704  50DE               	movf	postinc2,w,c
  1735  000706  6EFD               	movwf	tosl,c
  1736  000708  50DE               	movf	postinc2,w,c
  1737  00070A  6EFE               	movwf	tosh,c
  1738  00070C  50F8               	movf	tblptru,w,c
  1739  00070E  6EFF               	movwf	tosu,c
  1740  000710  50FA               	movf	pclath,w,c
  1741  000712  0101               	movlb	1	; () banked
  1742  000714  512B               	movf	__doprnt@c& (0+255),w,b
  1743  000716  0012               	return		;indir
  1744  000718                     l8980:
  1745  000718  C109  FFD9         	movff	__doprnt@pb,fsr2l
  1746  00071C  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  1747  000720  CFDE F10F          	movff	postinc2,??__doprnt
  1748  000724  CFDD F110          	movff	postdec2,??__doprnt+1
  1749  000728  C10F  FFD9         	movff	??__doprnt,fsr2l
  1750  00072C  C110  FFDA         	movff	??__doprnt+1,fsr2h
  1751  000730  C12B  FFDF         	movff	__doprnt@c,indf2
  1752  000734  C109  FFD9         	movff	__doprnt@pb,fsr2l
  1753  000738  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  1754  00073C  2ADE               	incf	postinc2,f,c
  1755  00073E  0E00               	movlw	0
  1756  000740  22DD               	addwfc	postdec2,f,c
  1757                           
  1758                           ;doprnt.c: 542: continue;
  1759  000742  EF37  F00C         	goto	l9350
  1760  000746                     l8984:
  1761                           
  1762                           ;doprnt.c: 543: }
  1763                           ;doprnt.c: 546: width = 0;
  1764  000746  0E00               	movlw	0
  1765  000748  0101               	movlb	1	; () banked
  1766  00074A  6F25               	movwf	(__doprnt@width+1)& (0+255),b
  1767  00074C  0E00               	movlw	0
  1768  00074E  6F24               	movwf	__doprnt@width& (0+255),b
  1769                           
  1770                           ;doprnt.c: 548: flag = 0;
  1771  000750  0E00               	movlw	0
  1772  000752  0101               	movlb	1	; () banked
  1773  000754  6F23               	movwf	(__doprnt@flag+1)& (0+255),b
  1774  000756  0E00               	movlw	0
  1775  000758  6F22               	movwf	__doprnt@flag& (0+255),b
  1776                           
  1777                           ; BSR set to: 1
  1778                           ;doprnt.c: 551: switch(*f) {
  1779                           
  1780                           ;doprnt.c: 550: for(;;) {
  1781  00075A  D005               	goto	l8990
  1782  00075C                     l8986:
  1783                           
  1784                           ;doprnt.c: 580: flag |= 0x04;
  1785  00075C  0101               	movlb	1	; () banked
  1786  00075E  8522               	bsf	__doprnt@flag& (0+255),2,b
  1787                           
  1788                           ;doprnt.c: 581: f++;
  1789  000760  0101               	movlb	1	; () banked
  1790  000762  4B0B               	infsnz	__doprnt@f& (0+255),f,b
  1791  000764  2B0C               	incf	(__doprnt@f+1)& (0+255),f,b
  1792  000766                     l8990:
  1793  000766  C10B  FFF6         	movff	__doprnt@f,tblptrl
  1794  00076A  C10C  FFF7         	movff	__doprnt@f+1,tblptrh
  1795  00076E                     	if	0	;tblptru may be non-zero
  1796  00076E                     	endif
  1797  00076E                     	if	0	;tblptru may be non-zero
  1798  00076E                     	endif
  1799  00076E  0008               	tblrd		*
  1800  000770  50F5               	movf	tablat,w,c
  1801                           
  1802                           ; Switch size 1, requested type "space"
  1803                           ; Number of cases is 1, Range of values is 48 to 48
  1804                           ; switch strategies available:
  1805                           ; Name         Instructions Cycles
  1806                           ; simple_byte            4     3 (average)
  1807                           ;	Chosen strategy is simple_byte
  1808  000772  0A30               	xorlw	48	; case 48
  1809  000774  B4D8               	btfsc	status,2,c
  1810  000776  D7F2               	goto	l8986
  1811                           
  1812                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1813                           
  1814                           ;doprnt.c: 586: }
  1815                           
  1816                           ;doprnt.c: 585: break;
  1817  000778  C10B  FFF6         	movff	__doprnt@f,tblptrl
  1818  00077C  C10C  FFF7         	movff	__doprnt@f+1,tblptrh
  1819  000780                     	if	0	;tblptru may be non-zero
  1820  000780                     	endif
  1821  000780                     	if	0	;tblptru may be non-zero
  1822  000780                     	endif
  1823  000780  0008               	tblrd		*
  1824  000782  50F5               	movf	tablat,w,c
  1825  000784  ECD4  F02A         	call	_isdigit
  1826  000788  A0D8               	btfss	status,0,c
  1827  00078A  D040               	goto	l9004
  1828                           
  1829                           ;doprnt.c: 598: width = 0;
  1830  00078C  0E00               	movlw	0
  1831  00078E  0101               	movlb	1	; () banked
  1832  000790  6F25               	movwf	(__doprnt@width+1)& (0+255),b
  1833  000792  0E00               	movlw	0
  1834  000794  6F24               	movwf	__doprnt@width& (0+255),b
  1835  000796                     l8996:
  1836                           
  1837                           ;doprnt.c: 600: width *= 10;
  1838  000796  C124  F093         	movff	__doprnt@width,___wmul@multiplier
  1839  00079A  C125  F094         	movff	__doprnt@width+1,___wmul@multiplier+1
  1840  00079E  0E00               	movlw	0
  1841  0007A0  0100               	movlb	0	; () banked
  1842  0007A2  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1843  0007A4  0E0A               	movlw	10
  1844  0007A6  6F95               	movwf	___wmul@multiplicand& (0+255),b
  1845  0007A8  EC21  F02A         	call	___wmul	;wreg free
  1846  0007AC  C093  F124         	movff	?___wmul,__doprnt@width
  1847  0007B0  C094  F125         	movff	?___wmul+1,__doprnt@width+1
  1848                           
  1849                           ;doprnt.c: 601: width += *f++ - '0';
  1850  0007B4  0ED0               	movlw	208
  1851  0007B6  0101               	movlb	1	; () banked
  1852  0007B8  6F0F               	movwf	??__doprnt& (0+255),b
  1853  0007BA  0EFF               	movlw	255
  1854  0007BC  0101               	movlb	1	; () banked
  1855  0007BE  6F10               	movwf	(??__doprnt+1)& (0+255),b
  1856  0007C0  C10B  FFF6         	movff	__doprnt@f,tblptrl
  1857  0007C4  C10C  FFF7         	movff	__doprnt@f+1,tblptrh
  1858  0007C8                     	if	0	;tblptru may be non-zero
  1859  0007C8                     	endif
  1860  0007C8                     	if	0	;tblptru may be non-zero
  1861  0007C8                     	endif
  1862  0007C8  0008               	tblrd		*
  1863  0007CA  50F5               	movf	tablat,w,c
  1864  0007CC  0101               	movlb	1	; () banked
  1865  0007CE  6F11               	movwf	(??__doprnt+2)& (0+255),b
  1866  0007D0  6B12               	clrf	(??__doprnt+3)& (0+255),b
  1867  0007D2  0101               	movlb	1	; () banked
  1868  0007D4  510F               	movf	??__doprnt& (0+255),w,b
  1869  0007D6  0101               	movlb	1	; () banked
  1870  0007D8  2711               	addwf	(??__doprnt+2)& (0+255),f,b
  1871  0007DA  0101               	movlb	1	; () banked
  1872  0007DC  5110               	movf	(??__doprnt+1)& (0+255),w,b
  1873  0007DE  0101               	movlb	1	; () banked
  1874  0007E0  2312               	addwfc	(??__doprnt+3)& (0+255),f,b
  1875  0007E2  0101               	movlb	1	; () banked
  1876  0007E4  5111               	movf	(??__doprnt+2)& (0+255),w,b
  1877  0007E6  0101               	movlb	1	; () banked
  1878  0007E8  2724               	addwf	__doprnt@width& (0+255),f,b
  1879  0007EA  0101               	movlb	1	; () banked
  1880  0007EC  5112               	movf	(??__doprnt+3)& (0+255),w,b
  1881  0007EE  0101               	movlb	1	; () banked
  1882  0007F0  2325               	addwfc	(__doprnt@width+1)& (0+255),f,b
  1883                           
  1884                           ; BSR set to: 1
  1885  0007F2  0101               	movlb	1	; () banked
  1886  0007F4  4B0B               	infsnz	__doprnt@f& (0+255),f,b
  1887  0007F6  2B0C               	incf	(__doprnt@f+1)& (0+255),f,b
  1888                           
  1889                           ; BSR set to: 1
  1890                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1891  0007F8  C10B  FFF6         	movff	__doprnt@f,tblptrl
  1892  0007FC  C10C  FFF7         	movff	__doprnt@f+1,tblptrh
  1893  000800                     	if	0	;tblptru may be non-zero
  1894  000800                     	endif
  1895  000800                     	if	0	;tblptru may be non-zero
  1896  000800                     	endif
  1897  000800  0008               	tblrd		*
  1898  000802  50F5               	movf	tablat,w,c
  1899  000804  ECD4  F02A         	call	_isdigit
  1900  000808  B0D8               	btfsc	status,0,c
  1901  00080A  D7C5               	goto	l8996
  1902  00080C                     l9004:
  1903                           
  1904                           ;doprnt.c: 608: }
  1905                           ;doprnt.c: 611: if(*f == '.') {
  1906  00080C  C10B  FFF6         	movff	__doprnt@f,tblptrl
  1907  000810  C10C  FFF7         	movff	__doprnt@f+1,tblptrh
  1908  000814                     	if	0	;tblptru may be non-zero
  1909  000814                     	endif
  1910  000814                     	if	0	;tblptru may be non-zero
  1911  000814                     	endif
  1912  000814  0008               	tblrd		*
  1913  000816  50F5               	movf	tablat,w,c
  1914  000818  0A2E               	xorlw	46
  1915  00081A  A4D8               	btfss	status,2,c
  1916  00081C  D039               	goto	l9016
  1917                           
  1918                           ;doprnt.c: 612: flag |= 0x4000;
  1919  00081E  0101               	movlb	1	; () banked
  1920  000820  8D23               	bsf	(__doprnt@flag+1)& (0+255),6,b
  1921                           
  1922                           ;doprnt.c: 613: f++;
  1923  000822  0101               	movlb	1	; () banked
  1924  000824  4B0B               	infsnz	__doprnt@f& (0+255),f,b
  1925  000826  2B0C               	incf	(__doprnt@f+1)& (0+255),f,b
  1926                           
  1927                           ; BSR set to: 1
  1928                           ;doprnt.c: 620: {
  1929                           ;doprnt.c: 621: prec = 0;
  1930  000828  0E00               	movlw	0
  1931  00082A  0101               	movlb	1	; () banked
  1932  00082C  6F2A               	movwf	(__doprnt@prec+1)& (0+255),b
  1933  00082E  0E00               	movlw	0
  1934  000830  6F29               	movwf	__doprnt@prec& (0+255),b
  1935                           
  1936                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  1937  000832  D023               	goto	l9014
  1938  000834                     l9010:
  1939                           
  1940                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  1941  000834  C129  F093         	movff	__doprnt@prec,___wmul@multiplier
  1942  000838  C12A  F094         	movff	__doprnt@prec+1,___wmul@multiplier+1
  1943  00083C  0E00               	movlw	0
  1944  00083E  0100               	movlb	0	; () banked
  1945  000840  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1946  000842  0E0A               	movlw	10
  1947  000844  6F95               	movwf	___wmul@multiplicand& (0+255),b
  1948  000846  EC21  F02A         	call	___wmul	;wreg free
  1949  00084A  C10B  FFF6         	movff	__doprnt@f,tblptrl
  1950  00084E  C10C  FFF7         	movff	__doprnt@f+1,tblptrh
  1951  000852                     	if	0	;tblptru may be non-zero
  1952  000852                     	endif
  1953  000852                     	if	0	;tblptru may be non-zero
  1954  000852                     	endif
  1955  000852  0008               	tblrd		*
  1956  000854  50F5               	movf	tablat,w,c
  1957  000856  0100               	movlb	0	; () banked
  1958  000858  2793               	addwf	?___wmul& (0+255),f,b
  1959  00085A  0E00               	movlw	0
  1960  00085C  0100               	movlb	0	; () banked
  1961  00085E  2394               	addwfc	(?___wmul+1)& (0+255),f,b
  1962  000860  0ED0               	movlw	208
  1963  000862  0100               	movlb	0	; () banked
  1964  000864  2593               	addwf	?___wmul& (0+255),w,b
  1965  000866  0101               	movlb	1	; () banked
  1966  000868  6F29               	movwf	__doprnt@prec& (0+255),b
  1967  00086A  0EFF               	movlw	255
  1968  00086C  0100               	movlb	0	; () banked
  1969  00086E  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  1970  000870  0101               	movlb	1	; () banked
  1971  000872  6F2A               	movwf	(__doprnt@prec+1)& (0+255),b
  1972                           
  1973                           ; BSR set to: 1
  1974  000874  0101               	movlb	1	; () banked
  1975  000876  4B0B               	infsnz	__doprnt@f& (0+255),f,b
  1976  000878  2B0C               	incf	(__doprnt@f+1)& (0+255),f,b
  1977  00087A                     l9014:
  1978                           
  1979                           ; BSR set to: 1
  1980  00087A  C10B  FFF6         	movff	__doprnt@f,tblptrl
  1981  00087E  C10C  FFF7         	movff	__doprnt@f+1,tblptrh
  1982  000882                     	if	0	;tblptru may be non-zero
  1983  000882                     	endif
  1984  000882                     	if	0	;tblptru may be non-zero
  1985  000882                     	endif
  1986  000882  0008               	tblrd		*
  1987  000884  50F5               	movf	tablat,w,c
  1988  000886  ECD4  F02A         	call	_isdigit
  1989  00088A  A0D8               	btfss	status,0,c
  1990  00088C  D013               	goto	l9028
  1991  00088E  D7D2               	goto	l9010
  1992  000890                     l9016:
  1993                           
  1994                           ;doprnt.c: 626: prec = 0;
  1995  000890  0E00               	movlw	0
  1996  000892  0101               	movlb	1	; () banked
  1997  000894  6F2A               	movwf	(__doprnt@prec+1)& (0+255),b
  1998  000896  0E00               	movlw	0
  1999  000898  6F29               	movwf	__doprnt@prec& (0+255),b
  2000                           
  2001                           ; BSR set to: 1
  2002                           ;doprnt.c: 628: flag |= 0x1000;
  2003  00089A  0101               	movlb	1	; () banked
  2004  00089C  8923               	bsf	(__doprnt@flag+1)& (0+255),4,b
  2005                           
  2006                           ; BSR set to: 1
  2007                           ;doprnt.c: 635: switch(c = *f++) {
  2008                           
  2009                           ;doprnt.c: 630: }
  2010                           ;doprnt.c: 633: loop:
  2011                           
  2012                           ; BSR set to: 1
  2013  00089E  D00A               	goto	l9028
  2014  0008A0                     l9020:
  2015                           
  2016                           ; BSR set to: 1
  2017                           ;doprnt.c: 643: flag |= 0x10;
  2018  0008A0  0101               	movlb	1	; () banked
  2019  0008A2  8922               	bsf	__doprnt@flag& (0+255),4,b
  2020                           
  2021                           ;doprnt.c: 644: goto loop;
  2022  0008A4  D007               	goto	l9028
  2023  0008A6                     l9022:
  2024                           
  2025                           ; BSR set to: 1
  2026                           ;doprnt.c: 663: flag |= 0x400;
  2027  0008A6  0101               	movlb	1	; () banked
  2028  0008A8  8523               	bsf	(__doprnt@flag+1)& (0+255),2,b
  2029                           
  2030                           ;doprnt.c: 664: break;
  2031  0008AA  D01F               	goto	l9030
  2032  0008AC                     l9024:
  2033                           
  2034                           ; BSR set to: 1
  2035                           ;doprnt.c: 818: flag |= 0xC0;
  2036  0008AC  0EC0               	movlw	192
  2037  0008AE  0101               	movlb	1	; () banked
  2038  0008B0  1322               	iorwf	__doprnt@flag& (0+255),f,b
  2039                           
  2040                           ; BSR set to: 1
  2041                           ;doprnt.c: 822: }
  2042                           
  2043                           ;doprnt.c: 819: break;
  2044  0008B2  D01B               	goto	l9030
  2045  0008B4                     l9028:
  2046  0008B4  C10B  FFF6         	movff	__doprnt@f,tblptrl
  2047  0008B8  C10C  FFF7         	movff	__doprnt@f+1,tblptrh
  2048  0008BC  0101               	movlb	1	; () banked
  2049  0008BE  4B0B               	infsnz	__doprnt@f& (0+255),f,b
  2050  0008C0  2B0C               	incf	(__doprnt@f+1)& (0+255),f,b
  2051  0008C2                     	if	0	;tblptru may be non-zero
  2052  0008C2                     	endif
  2053  0008C2                     	if	0	;tblptru may be non-zero
  2054  0008C2                     	endif
  2055  0008C2  0008               	tblrd		*
  2056  0008C4  CFF5 F12B          	movff	tablat,__doprnt@c
  2057  0008C8  0101               	movlb	1	; () banked
  2058  0008CA  512B               	movf	__doprnt@c& (0+255),w,b
  2059                           
  2060                           ; Switch size 1, requested type "space"
  2061                           ; Number of cases is 4, Range of values is 0 to 117
  2062                           ; switch strategies available:
  2063                           ; Name         Instructions Cycles
  2064                           ; simple_byte           13     7 (average)
  2065                           ;	Chosen strategy is simple_byte
  2066  0008CC  0A00               	xorlw	0	; case 0
  2067  0008CE  B4D8               	btfsc	status,2,c
  2068  0008D0  EF46  F00C         	goto	l9352
  2069  0008D4  0A66               	xorlw	102	; case 102
  2070  0008D6  B4D8               	btfsc	status,2,c
  2071  0008D8  D7E6               	goto	l9022
  2072  0008DA  0A0A               	xorlw	10	; case 108
  2073  0008DC  B4D8               	btfsc	status,2,c
  2074  0008DE  D7E0               	goto	l9020
  2075  0008E0  0A19               	xorlw	25	; case 117
  2076  0008E2  B4D8               	btfsc	status,2,c
  2077  0008E4  D7E3               	goto	l9024
  2078  0008E6  EF37  F00C         	goto	l9350
  2079  0008EA                     l9030:
  2080                           
  2081                           ; BSR set to: 1
  2082                           ;doprnt.c: 825: if(flag & (0x700)) {
  2083  0008EA  0E07               	movlw	7
  2084  0008EC  0101               	movlb	1	; () banked
  2085  0008EE  1523               	andwf	(__doprnt@flag+1)& (0+255),w,b
  2086  0008F0  B4D8               	btfsc	status,2,c
  2087  0008F2  EFB6  F009         	goto	l357
  2088                           
  2089                           ; BSR set to: 1
  2090                           ;doprnt.c: 827: if(flag & 0x1000)
  2091  0008F6  0101               	movlb	1	; () banked
  2092  0008F8  A923               	btfss	(__doprnt@flag+1)& (0+255),4,b
  2093  0008FA  D005               	goto	l9036
  2094                           
  2095                           ; BSR set to: 1
  2096                           ;doprnt.c: 829: prec = 6;
  2097  0008FC  0E00               	movlw	0
  2098  0008FE  0101               	movlb	1	; () banked
  2099  000900  6F2A               	movwf	(__doprnt@prec+1)& (0+255),b
  2100  000902  0E06               	movlw	6
  2101  000904  6F29               	movwf	__doprnt@prec& (0+255),b
  2102  000906                     l9036:
  2103                           
  2104                           ; BSR set to: 1
  2105                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2106  000906  C10D  FFD9         	movff	__doprnt@ap,fsr2l
  2107  00090A  C10E  FFDA         	movff	__doprnt@ap+1,fsr2h
  2108  00090E  CFDF F10F          	movff	indf2,??__doprnt
  2109  000912  0E03               	movlw	3
  2110  000914  26DE               	addwf	postinc2,f,c
  2111  000916  CFDF F110          	movff	indf2,??__doprnt+1
  2112  00091A  0E00               	movlw	0
  2113  00091C  22DD               	addwfc	postdec2,f,c
  2114  00091E  C10F  FFD9         	movff	??__doprnt,fsr2l
  2115  000922  C110  FFDA         	movff	??__doprnt+1,fsr2h
  2116  000926  CFDE F126          	movff	postinc2,__doprnt@fval
  2117  00092A  CFDE F127          	movff	postinc2,__doprnt@fval+1
  2118  00092E  CFDD F128          	movff	postdec2,__doprnt@fval+2
  2119                           
  2120                           ; BSR set to: 1
  2121                           ;doprnt.c: 831: if(fval < 0.0) {
  2122  000932  0101               	movlb	1	; () banked
  2123  000934  AF28               	btfss	(__doprnt@fval+2)& (0+255),7,b
  2124  000936  D011               	goto	l9044
  2125                           
  2126                           ; BSR set to: 1
  2127                           ;doprnt.c: 832: fval = -fval;
  2128  000938  C126  F085         	movff	__doprnt@fval,___ftneg@f1
  2129  00093C  C127  F086         	movff	__doprnt@fval+1,___ftneg@f1+1
  2130  000940  C128  F087         	movff	__doprnt@fval+2,___ftneg@f1+2
  2131  000944  ECA4  F02A         	call	___ftneg	;wreg free
  2132  000948  C085  F126         	movff	?___ftneg,__doprnt@fval
  2133  00094C  C086  F127         	movff	?___ftneg+1,__doprnt@fval+1
  2134  000950  C087  F128         	movff	?___ftneg+2,__doprnt@fval+2
  2135                           
  2136                           ;doprnt.c: 833: flag |= 0x03;
  2137  000954  0E03               	movlw	3
  2138  000956  0101               	movlb	1	; () banked
  2139  000958  1322               	iorwf	__doprnt@flag& (0+255),f,b
  2140  00095A                     l9044:
  2141                           
  2142                           ; BSR set to: 1
  2143                           ;doprnt.c: 834: }
  2144                           ;doprnt.c: 835: exp = 0;
  2145  00095A  0E00               	movlw	0
  2146  00095C  0101               	movlb	1	; () banked
  2147  00095E  6F1D               	movwf	(__doprnt@exp+1)& (0+255),b
  2148  000960  0E00               	movlw	0
  2149  000962  6F1C               	movwf	__doprnt@exp& (0+255),b
  2150                           
  2151                           ; BSR set to: 1
  2152                           ;doprnt.c: 836: if( fval!=0) {
  2153  000964  0101               	movlb	1	; () banked
  2154  000966  5126               	movf	__doprnt@fval& (0+255),w,b
  2155  000968  0101               	movlb	1	; () banked
  2156  00096A  1127               	iorwf	(__doprnt@fval+1)& (0+255),w,b
  2157  00096C  0101               	movlb	1	; () banked
  2158  00096E  1128               	iorwf	(__doprnt@fval+2)& (0+255),w,b
  2159  000970  B4D8               	btfsc	status,2,c
  2160  000972  D09B               	goto	l9072
  2161                           
  2162                           ; BSR set to: 1
  2163                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2164  000974  0E82               	movlw	130
  2165  000976  0101               	movlb	1	; () banked
  2166  000978  6F0F               	movwf	??__doprnt& (0+255),b
  2167  00097A  0EFF               	movlw	255
  2168  00097C  0101               	movlb	1	; () banked
  2169  00097E  6F10               	movwf	(??__doprnt+1)& (0+255),b
  2170  000980  C126  F111         	movff	__doprnt@fval,??__doprnt+2
  2171  000984  C127  F112         	movff	__doprnt@fval+1,??__doprnt+3
  2172  000988  C128  F113         	movff	__doprnt@fval+2,??__doprnt+4
  2173  00098C  C129  F114         	movff	__doprnt@fval+3,??__doprnt+5
  2174  000990  0E10               	movlw	16
  2175  000992  D006               	goto	u14910
  2176  000994                     u14915:
  2177  000994  0101               	movlb	1	; () banked
  2178  000996  90D8               	bcf	status,0,c
  2179  000998  3314               	rrcf	(??__doprnt+5)& (0+255),f,b
  2180  00099A  3313               	rrcf	(??__doprnt+4)& (0+255),f,b
  2181  00099C  3312               	rrcf	(??__doprnt+3)& (0+255),f,b
  2182  00099E  3311               	rrcf	(??__doprnt+2)& (0+255),f,b
  2183  0009A0                     u14910:
  2184  0009A0  2EE8               	decfsz	wreg,f,c
  2185  0009A2  D7F8               	goto	u14915
  2186  0009A4  0101               	movlb	1	; () banked
  2187  0009A6  5111               	movf	(??__doprnt+2)& (0+255),w,b
  2188  0009A8  0101               	movlb	1	; () banked
  2189  0009AA  250F               	addwf	??__doprnt& (0+255),w,b
  2190  0009AC  0101               	movlb	1	; () banked
  2191  0009AE  6F1C               	movwf	__doprnt@exp& (0+255),b
  2192  0009B0  0E00               	movlw	0
  2193  0009B2  0101               	movlb	1	; () banked
  2194  0009B4  2110               	addwfc	(??__doprnt+1)& (0+255),w,b
  2195  0009B6  0101               	movlb	1	; () banked
  2196  0009B8  6F1D               	movwf	(__doprnt@exp+1)& (0+255),b
  2197                           
  2198                           ; BSR set to: 1
  2199                           ;doprnt.c: 838: exp--;
  2200  0009BA  0101               	movlb	1	; () banked
  2201  0009BC  071C               	decf	__doprnt@exp& (0+255),f,b
  2202  0009BE  A0D8               	btfss	status,0,c
  2203  0009C0  071D               	decf	(__doprnt@exp+1)& (0+255),f,b
  2204                           
  2205                           ; BSR set to: 1
  2206                           ;doprnt.c: 839: exp *= 3;
  2207  0009C2  C11C  F093         	movff	__doprnt@exp,___wmul@multiplier
  2208  0009C6  C11D  F094         	movff	__doprnt@exp+1,___wmul@multiplier+1
  2209  0009CA  0E00               	movlw	0
  2210  0009CC  0100               	movlb	0	; () banked
  2211  0009CE  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2212  0009D0  0E03               	movlw	3
  2213  0009D2  6F95               	movwf	___wmul@multiplicand& (0+255),b
  2214  0009D4  EC21  F02A         	call	___wmul	;wreg free
  2215  0009D8  C093  F11C         	movff	?___wmul,__doprnt@exp
  2216  0009DC  C094  F11D         	movff	?___wmul+1,__doprnt@exp+1
  2217                           
  2218                           ;doprnt.c: 840: exp /= 10;
  2219  0009E0  C11C  F08B         	movff	__doprnt@exp,___awdiv@dividend
  2220  0009E4  C11D  F08C         	movff	__doprnt@exp+1,___awdiv@dividend+1
  2221  0009E8  0E00               	movlw	0
  2222  0009EA  0100               	movlb	0	; () banked
  2223  0009EC  6F8E               	movwf	(___awdiv@divisor+1)& (0+255),b
  2224  0009EE  0E0A               	movlw	10
  2225  0009F0  6F8D               	movwf	___awdiv@divisor& (0+255),b
  2226  0009F2  EC41  F025         	call	___awdiv	;wreg free
  2227  0009F6  C08B  F11C         	movff	?___awdiv,__doprnt@exp
  2228  0009FA  C08C  F11D         	movff	?___awdiv+1,__doprnt@exp+1
  2229                           
  2230                           ;doprnt.c: 841: if(exp < 0)
  2231  0009FE  0101               	movlb	1	; () banked
  2232  000A00  AF1D               	btfss	(__doprnt@exp+1)& (0+255),7,b
  2233  000A02  D004               	goto	l9060
  2234                           
  2235                           ; BSR set to: 1
  2236                           ;doprnt.c: 842: exp--;
  2237  000A04  0101               	movlb	1	; () banked
  2238  000A06  071C               	decf	__doprnt@exp& (0+255),f,b
  2239  000A08  A0D8               	btfss	status,0,c
  2240  000A0A  071D               	decf	(__doprnt@exp+1)& (0+255),f,b
  2241  000A0C                     l9060:
  2242                           
  2243                           ; BSR set to: 1
  2244                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2245  000A0C  0101               	movlb	1	; () banked
  2246  000A0E  511C               	movf	__doprnt@exp& (0+255),w,b
  2247  000A10  0800               	sublw	0
  2248  000A12  ECBA  F014         	call	_scale
  2249  000A16  C0A8  F11E         	movff	?_scale,__doprnt@tmpval
  2250  000A1A  C0A9  F11F         	movff	?_scale+1,__doprnt@tmpval+1
  2251  000A1E  C0AA  F120         	movff	?_scale+2,__doprnt@tmpval+2
  2252                           
  2253                           ;doprnt.c: 847: tmpval.integ *= fval;
  2254  000A22  C11E  F099         	movff	__doprnt@tmpval,___ftmul@f1
  2255  000A26  C11F  F09A         	movff	__doprnt@tmpval+1,___ftmul@f1+1
  2256  000A2A  C120  F09B         	movff	__doprnt@tmpval+2,___ftmul@f1+2
  2257  000A2E  C126  F09C         	movff	__doprnt@fval,___ftmul@f2
  2258  000A32  C127  F09D         	movff	__doprnt@fval+1,___ftmul@f2+1
  2259  000A36  C128  F09E         	movff	__doprnt@fval+2,___ftmul@f2+2
  2260  000A3A  EC1F  F01F         	call	___ftmul	;wreg free
  2261  000A3E  C099  F11E         	movff	?___ftmul,__doprnt@tmpval
  2262  000A42  C09A  F11F         	movff	?___ftmul+1,__doprnt@tmpval+1
  2263  000A46  C09B  F120         	movff	?___ftmul+2,__doprnt@tmpval+2
  2264                           
  2265                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2266  000A4A  C11E  F085         	movff	__doprnt@tmpval,___ftge@ff1
  2267  000A4E  C11F  F086         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  2268  000A52  C120  F087         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  2269  000A56  0E00               	movlw	0
  2270  000A58  0100               	movlb	0	; () banked
  2271  000A5A  6F88               	movwf	___ftge@ff2& (0+255),b
  2272  000A5C  0E80               	movlw	128
  2273  000A5E  0100               	movlb	0	; () banked
  2274  000A60  6F89               	movwf	(___ftge@ff2+1)& (0+255),b
  2275  000A62  0E3F               	movlw	63
  2276  000A64  0100               	movlb	0	; () banked
  2277  000A66  6F8A               	movwf	(___ftge@ff2+2)& (0+255),b
  2278  000A68  ECDD  F024         	call	___ftge	;wreg free
  2279  000A6C  0100               	movlb	0	; () banked
  2280  000A6E  B0D8               	btfsc	status,0,c
  2281  000A70  D005               	goto	l9068
  2282                           
  2283                           ; BSR set to: 0
  2284                           ;doprnt.c: 849: exp--;
  2285  000A72  0101               	movlb	1	; () banked
  2286  000A74  071C               	decf	__doprnt@exp& (0+255),f,b
  2287  000A76  A0D8               	btfss	status,0,c
  2288  000A78  071D               	decf	(__doprnt@exp+1)& (0+255),f,b
  2289  000A7A  D017               	goto	l9072
  2290  000A7C                     l9068:
  2291                           
  2292                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2293  000A7C  C11E  F085         	movff	__doprnt@tmpval,___ftge@ff1
  2294  000A80  C11F  F086         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  2295  000A84  C120  F087         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  2296  000A88  0E00               	movlw	0
  2297  000A8A  0100               	movlb	0	; () banked
  2298  000A8C  6F88               	movwf	___ftge@ff2& (0+255),b
  2299  000A8E  0E20               	movlw	32
  2300  000A90  0100               	movlb	0	; () banked
  2301  000A92  6F89               	movwf	(___ftge@ff2+1)& (0+255),b
  2302  000A94  0E41               	movlw	65
  2303  000A96  0100               	movlb	0	; () banked
  2304  000A98  6F8A               	movwf	(___ftge@ff2+2)& (0+255),b
  2305  000A9A  ECDD  F024         	call	___ftge	;wreg free
  2306  000A9E  0100               	movlb	0	; () banked
  2307  000AA0  A0D8               	btfss	status,0,c
  2308  000AA2  D003               	goto	l9072
  2309                           
  2310                           ; BSR set to: 0
  2311                           ;doprnt.c: 851: exp++;
  2312  000AA4  0101               	movlb	1	; () banked
  2313  000AA6  4B1C               	infsnz	__doprnt@exp& (0+255),f,b
  2314  000AA8  2B1D               	incf	(__doprnt@exp+1)& (0+255),f,b
  2315  000AAA                     l9072:
  2316                           
  2317                           ;doprnt.c: 852: }
  2318                           ;doprnt.c: 1112: if(prec <= 12)
  2319  000AAA  0101               	movlb	1	; () banked
  2320  000AAC  BF2A               	btfsc	(__doprnt@prec+1)& (0+255),7,b
  2321  000AAE  D008               	goto	l9074
  2322  000AB0  0101               	movlb	1	; () banked
  2323  000AB2  512A               	movf	(__doprnt@prec+1)& (0+255),w,b
  2324  000AB4  E11D               	bnz	l9076
  2325  000AB6  0E0D               	movlw	13
  2326  000AB8  0101               	movlb	1	; () banked
  2327  000ABA  5D29               	subwf	__doprnt@prec& (0+255),w,b
  2328  000ABC  B0D8               	btfsc	status,0,c
  2329  000ABE  D018               	goto	l9076
  2330  000AC0                     l9074:
  2331                           
  2332                           ; BSR set to: 1
  2333                           ;doprnt.c: 1113: fval += fround(prec);
  2334  000AC0  C126  F0B2         	movff	__doprnt@fval,___ftadd@f1
  2335  000AC4  C127  F0B3         	movff	__doprnt@fval+1,___ftadd@f1+1
  2336  000AC8  C128  F0B4         	movff	__doprnt@fval+2,___ftadd@f1+2
  2337  000ACC  0101               	movlb	1	; () banked
  2338  000ACE  5129               	movf	__doprnt@prec& (0+255),w,b
  2339  000AD0  EC09  F019         	call	_fround
  2340  000AD4  C0A8  F0B5         	movff	?_fround,___ftadd@f2
  2341  000AD8  C0A9  F0B6         	movff	?_fround+1,___ftadd@f2+1
  2342  000ADC  C0AA  F0B7         	movff	?_fround+2,___ftadd@f2+2
  2343  000AE0  EC5F  F01A         	call	___ftadd	;wreg free
  2344  000AE4  C0B2  F126         	movff	?___ftadd,__doprnt@fval
  2345  000AE8  C0B3  F127         	movff	?___ftadd+1,__doprnt@fval+1
  2346  000AEC  C0B4  F128         	movff	?___ftadd+2,__doprnt@fval+2
  2347  000AF0                     l9076:
  2348                           
  2349                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2350  000AF0  0101               	movlb	1	; () banked
  2351  000AF2  BF1D               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  2352  000AF4  D008               	goto	l9078
  2353  000AF6  0101               	movlb	1	; () banked
  2354  000AF8  511D               	movf	(__doprnt@exp+1)& (0+255),w,b
  2355  000AFA  E12A               	bnz	l9084
  2356  000AFC  0E0A               	movlw	10
  2357  000AFE  0101               	movlb	1	; () banked
  2358  000B00  5D1C               	subwf	__doprnt@exp& (0+255),w,b
  2359  000B02  B0D8               	btfsc	status,0,c
  2360  000B04  D025               	goto	l9084
  2361  000B06                     l9078:
  2362                           
  2363                           ; BSR set to: 1
  2364  000B06  0101               	movlb	1	; () banked
  2365  000B08  5126               	movf	__doprnt@fval& (0+255),w,b
  2366  000B0A  0101               	movlb	1	; () banked
  2367  000B0C  1127               	iorwf	(__doprnt@fval+1)& (0+255),w,b
  2368  000B0E  0101               	movlb	1	; () banked
  2369  000B10  1128               	iorwf	(__doprnt@fval+2)& (0+255),w,b
  2370  000B12  B4D8               	btfsc	status,2,c
  2371  000B14  D063               	goto	l9098
  2372                           
  2373                           ; BSR set to: 1
  2374  000B16  C126  F0AF         	movff	__doprnt@fval,___fttol@f1
  2375  000B1A  C127  F0B0         	movff	__doprnt@fval+1,___fttol@f1+1
  2376  000B1E  C128  F0B1         	movff	__doprnt@fval+2,___fttol@f1+2
  2377  000B22  EC21  F021         	call	___fttol	;wreg free
  2378  000B26  0100               	movlb	0	; () banked
  2379  000B28  51AF               	movf	?___fttol& (0+255),w,b
  2380  000B2A  0100               	movlb	0	; () banked
  2381  000B2C  11B0               	iorwf	(?___fttol+1)& (0+255),w,b
  2382  000B2E  0100               	movlb	0	; () banked
  2383  000B30  11B1               	iorwf	(?___fttol+2)& (0+255),w,b
  2384  000B32  0100               	movlb	0	; () banked
  2385  000B34  11B2               	iorwf	(?___fttol+3)& (0+255),w,b
  2386  000B36  A4D8               	btfss	status,2,c
  2387  000B38  D051               	goto	l9098
  2388                           
  2389                           ; BSR set to: 0
  2390  000B3A  0101               	movlb	1	; () banked
  2391  000B3C  BF1D               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  2392  000B3E  D04E               	goto	l9098
  2393  000B40  0101               	movlb	1	; () banked
  2394  000B42  511D               	movf	(__doprnt@exp+1)& (0+255),w,b
  2395  000B44  E105               	bnz	l9084
  2396  000B46  0E02               	movlw	2
  2397  000B48  0101               	movlb	1	; () banked
  2398  000B4A  5D1C               	subwf	__doprnt@exp& (0+255),w,b
  2399  000B4C  A0D8               	btfss	status,0,c
  2400  000B4E  D046               	goto	l9098
  2401  000B50                     l9084:
  2402                           
  2403                           ; BSR set to: 1
  2404                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  2405  000B50  C11E  F085         	movff	__doprnt@tmpval,___ftge@ff1
  2406  000B54  C11F  F086         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  2407  000B58  C120  F087         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  2408  000B5C  0E70               	movlw	112
  2409  000B5E  0100               	movlb	0	; () banked
  2410  000B60  6F88               	movwf	___ftge@ff2& (0+255),b
  2411  000B62  0E89               	movlw	137
  2412  000B64  0100               	movlb	0	; () banked
  2413  000B66  6F89               	movwf	(___ftge@ff2+1)& (0+255),b
  2414  000B68  0E40               	movlw	64
  2415  000B6A  0100               	movlb	0	; () banked
  2416  000B6C  6F8A               	movwf	(___ftge@ff2+2)& (0+255),b
  2417  000B6E  ECDD  F024         	call	___ftge	;wreg free
  2418  000B72  0100               	movlb	0	; () banked
  2419  000B74  B0D8               	btfsc	status,0,c
  2420  000B76  D003               	goto	l9088
  2421                           
  2422                           ; BSR set to: 0
  2423                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2424  000B78  0101               	movlb	1	; () banked
  2425  000B7A  0EF7               	movlw	247
  2426  000B7C  D002               	goto	L1
  2427  000B7E                     l9088:
  2428                           
  2429                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2430  000B7E  0101               	movlb	1	; () banked
  2431  000B80  0EF8               	movlw	248
  2432  000B82                     L1:
  2433  000B82  271C               	addwf	__doprnt@exp& (0+255),f,b
  2434  000B84  0EFF               	movlw	255
  2435  000B86  231D               	addwfc	(__doprnt@exp+1)& (0+255),f,b
  2436                           
  2437                           ; BSR set to: 1
  2438                           ;doprnt.c: 1124: }
  2439                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  2440                           
  2441                           ; BSR set to: 1
  2442  000B88  0101               	movlb	1	; () banked
  2443  000B8A  511C               	movf	__doprnt@exp& (0+255),w,b
  2444  000B8C  ECBA  F014         	call	_scale
  2445  000B90  C0A8  F11E         	movff	?_scale,__doprnt@tmpval
  2446  000B94  C0A9  F11F         	movff	?_scale+1,__doprnt@tmpval+1
  2447  000B98  C0AA  F120         	movff	?_scale+2,__doprnt@tmpval+2
  2448                           
  2449                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2450  000B9C  C126  F085         	movff	__doprnt@fval,__tdiv_to_l_@f1
  2451  000BA0  C127  F086         	movff	__doprnt@fval+1,__tdiv_to_l_@f1+1
  2452  000BA4  C128  F087         	movff	__doprnt@fval+2,__tdiv_to_l_@f1+2
  2453  000BA8  C11E  F088         	movff	__doprnt@tmpval,__tdiv_to_l_@f2
  2454  000BAC  C11F  F089         	movff	__doprnt@tmpval+1,__tdiv_to_l_@f2+1
  2455  000BB0  C120  F08A         	movff	__doprnt@tmpval+2,__tdiv_to_l_@f2+2
  2456  000BB4  EC8C  F01D         	call	__tdiv_to_l_	;wreg free
  2457  000BB8  C085  F118         	movff	?__tdiv_to_l_,__doprnt@val
  2458  000BBC  C086  F119         	movff	?__tdiv_to_l_+1,__doprnt@val+1
  2459  000BC0  C087  F11A         	movff	?__tdiv_to_l_+2,__doprnt@val+2
  2460  000BC4  C088  F11B         	movff	?__tdiv_to_l_+3,__doprnt@val+3
  2461                           
  2462                           ;doprnt.c: 1129: fval = 0.0;
  2463  000BC8  0E00               	movlw	0
  2464  000BCA  0101               	movlb	1	; () banked
  2465  000BCC  6F26               	movwf	__doprnt@fval& (0+255),b
  2466  000BCE  0E00               	movlw	0
  2467  000BD0  0101               	movlb	1	; () banked
  2468  000BD2  6F27               	movwf	(__doprnt@fval+1)& (0+255),b
  2469  000BD4  0E00               	movlw	0
  2470  000BD6  0101               	movlb	1	; () banked
  2471  000BD8  6F28               	movwf	(__doprnt@fval+2)& (0+255),b
  2472                           
  2473                           ;doprnt.c: 1130: } else {
  2474  000BDA  D033               	goto	l9102
  2475  000BDC                     l9098:
  2476                           
  2477                           ;doprnt.c: 1131: val = (unsigned long)fval;
  2478  000BDC  C126  F0AF         	movff	__doprnt@fval,___fttol@f1
  2479  000BE0  C127  F0B0         	movff	__doprnt@fval+1,___fttol@f1+1
  2480  000BE4  C128  F0B1         	movff	__doprnt@fval+2,___fttol@f1+2
  2481  000BE8  EC21  F021         	call	___fttol	;wreg free
  2482  000BEC  C0AF  F118         	movff	?___fttol,__doprnt@val
  2483  000BF0  C0B0  F119         	movff	?___fttol+1,__doprnt@val+1
  2484  000BF4  C0B1  F11A         	movff	?___fttol+2,__doprnt@val+2
  2485  000BF8  C0B2  F11B         	movff	?___fttol+3,__doprnt@val+3
  2486                           
  2487                           ;doprnt.c: 1132: fval -= (double)val;
  2488  000BFC  C126  F103         	movff	__doprnt@fval,___ftsub@f1
  2489  000C00  C127  F104         	movff	__doprnt@fval+1,___ftsub@f1+1
  2490  000C04  C128  F105         	movff	__doprnt@fval+2,___ftsub@f1+2
  2491  000C08  C118  F08D         	movff	__doprnt@val,___lltoft@c
  2492  000C0C  C119  F08E         	movff	__doprnt@val+1,___lltoft@c+1
  2493  000C10  C11A  F08F         	movff	__doprnt@val+2,___lltoft@c+2
  2494  000C14  C11B  F090         	movff	__doprnt@val+3,___lltoft@c+3
  2495  000C18  EC12  F028         	call	___lltoft	;wreg free
  2496  000C1C  C08D  F106         	movff	?___lltoft,___ftsub@f2
  2497  000C20  C08E  F107         	movff	?___lltoft+1,___ftsub@f2+1
  2498  000C24  C08F  F108         	movff	?___lltoft+2,___ftsub@f2+2
  2499  000C28  EC4F  F029         	call	___ftsub	;wreg free
  2500  000C2C  C103  F126         	movff	?___ftsub,__doprnt@fval
  2501  000C30  C104  F127         	movff	?___ftsub+1,__doprnt@fval+1
  2502  000C34  C105  F128         	movff	?___ftsub+2,__doprnt@fval+2
  2503                           
  2504                           ;doprnt.c: 1133: exp = 0;
  2505  000C38  0E00               	movlw	0
  2506  000C3A  0101               	movlb	1	; () banked
  2507  000C3C  6F1D               	movwf	(__doprnt@exp+1)& (0+255),b
  2508  000C3E  0E00               	movlw	0
  2509  000C40  6F1C               	movwf	__doprnt@exp& (0+255),b
  2510  000C42                     l9102:
  2511                           
  2512                           ; BSR set to: 1
  2513                           ;doprnt.c: 1134: }
  2514                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2515  000C42  0E01               	movlw	1
  2516  000C44  0101               	movlb	1	; () banked
  2517  000C46  6F2B               	movwf	__doprnt@c& (0+255),b
  2518  000C48                     l9104:
  2519                           
  2520                           ; BSR set to: 1
  2521  000C48  0E0A               	movlw	10
  2522  000C4A  0101               	movlb	1	; () banked
  2523  000C4C  192B               	xorwf	__doprnt@c& (0+255),w,b
  2524  000C4E  B4D8               	btfsc	status,2,c
  2525  000C50  D01E               	goto	l9116
  2526                           
  2527                           ; BSR set to: 1
  2528                           ;doprnt.c: 1137: if(val < dpowers[c])
  2529                           
  2530                           ; BSR set to: 1
  2531                           
  2532                           ; BSR set to: 1
  2533  000C52  0101               	movlb	1	; () banked
  2534  000C54  512B               	movf	__doprnt@c& (0+255),w,b
  2535  000C56  0D04               	mullw	4
  2536  000C58  0E01               	movlw	low _dpowers
  2537  000C5A  24F3               	addwf	prodl,w,c
  2538  000C5C  6EF6               	movwf	tblptrl,c
  2539  000C5E  0E06               	movlw	high _dpowers
  2540  000C60  20F4               	addwfc	prodh,w,c
  2541  000C62  6EF7               	movwf	tblptrh,c
  2542  000C64                     	if	0	;There are less than 3 active tblptr bytes
  2543  000C64                     	endif
  2544  000C64  0009               	tblrd		*+
  2545  000C66  50F5               	movf	tablat,w,c
  2546  000C68  0101               	movlb	1	; () banked
  2547  000C6A  5D18               	subwf	__doprnt@val& (0+255),w,b
  2548  000C6C  0009               	tblrd		*+
  2549  000C6E  50F5               	movf	tablat,w,c
  2550  000C70  0101               	movlb	1	; () banked
  2551  000C72  5919               	subwfb	(__doprnt@val+1)& (0+255),w,b
  2552  000C74  0009               	tblrd		*+
  2553  000C76  50F5               	movf	tablat,w,c
  2554  000C78  0101               	movlb	1	; () banked
  2555  000C7A  591A               	subwfb	(__doprnt@val+2)& (0+255),w,b
  2556  000C7C  0009               	tblrd		*+
  2557  000C7E  50F5               	movf	tablat,w,c
  2558  000C80  0101               	movlb	1	; () banked
  2559  000C82  591B               	subwfb	(__doprnt@val+3)& (0+255),w,b
  2560  000C84  A0D8               	btfss	status,0,c
  2561  000C86  D003               	goto	l9116
  2562                           
  2563                           ; BSR set to: 1
  2564                           
  2565                           ; BSR set to: 1
  2566                           
  2567                           ; BSR set to: 1
  2568                           ;doprnt.c: 1138: break;
  2569  000C88  0101               	movlb	1	; () banked
  2570  000C8A  2B2B               	incf	__doprnt@c& (0+255),f,b
  2571  000C8C  D7DD               	goto	l9104
  2572  000C8E                     l9116:
  2573                           
  2574                           ; BSR set to: 1
  2575                           ;doprnt.c: 1142: width -= prec + c + exp;
  2576  000C8E  C12B  F10F         	movff	__doprnt@c,??__doprnt
  2577  000C92  0101               	movlb	1	; () banked
  2578  000C94  6B10               	clrf	(??__doprnt+1)& (0+255),b
  2579  000C96  BF0F               	btfsc	??__doprnt& (0+255),7,b
  2580  000C98  0710               	decf	(??__doprnt+1)& (0+255),f,b
  2581  000C9A  0101               	movlb	1	; () banked
  2582  000C9C  5129               	movf	__doprnt@prec& (0+255),w,b
  2583  000C9E  0101               	movlb	1	; () banked
  2584  000CA0  270F               	addwf	??__doprnt& (0+255),f,b
  2585  000CA2  0101               	movlb	1	; () banked
  2586  000CA4  512A               	movf	(__doprnt@prec+1)& (0+255),w,b
  2587  000CA6  0101               	movlb	1	; () banked
  2588  000CA8  2310               	addwfc	(??__doprnt+1)& (0+255),f,b
  2589  000CAA  0101               	movlb	1	; () banked
  2590  000CAC  511C               	movf	__doprnt@exp& (0+255),w,b
  2591  000CAE  0101               	movlb	1	; () banked
  2592  000CB0  270F               	addwf	??__doprnt& (0+255),f,b
  2593  000CB2  0101               	movlb	1	; () banked
  2594  000CB4  511D               	movf	(__doprnt@exp+1)& (0+255),w,b
  2595  000CB6  0101               	movlb	1	; () banked
  2596  000CB8  2310               	addwfc	(??__doprnt+1)& (0+255),f,b
  2597  000CBA  0101               	movlb	1	; () banked
  2598  000CBC  510F               	movf	??__doprnt& (0+255),w,b
  2599  000CBE  0101               	movlb	1	; () banked
  2600  000CC0  5F24               	subwf	__doprnt@width& (0+255),f,b
  2601  000CC2  0101               	movlb	1	; () banked
  2602  000CC4  5110               	movf	(??__doprnt+1)& (0+255),w,b
  2603  000CC6  0101               	movlb	1	; () banked
  2604  000CC8  5B25               	subwfb	(__doprnt@width+1)& (0+255),f,b
  2605                           
  2606                           ;doprnt.c: 1143: if(
  2607                           ;doprnt.c: 1147: prec)
  2608  000CCA  0101               	movlb	1	; () banked
  2609  000CCC  5129               	movf	__doprnt@prec& (0+255),w,b
  2610  000CCE  0101               	movlb	1	; () banked
  2611  000CD0  112A               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  2612  000CD2  B4D8               	btfsc	status,2,c
  2613  000CD4  D004               	goto	l9120
  2614                           
  2615                           ; BSR set to: 1
  2616                           ;doprnt.c: 1148: width--;
  2617  000CD6  0101               	movlb	1	; () banked
  2618  000CD8  0724               	decf	__doprnt@width& (0+255),f,b
  2619  000CDA  A0D8               	btfss	status,0,c
  2620  000CDC  0725               	decf	(__doprnt@width+1)& (0+255),f,b
  2621  000CDE                     l9120:
  2622                           
  2623                           ; BSR set to: 1
  2624                           ;doprnt.c: 1149: if(flag & 0x03)
  2625  000CDE  0E03               	movlw	3
  2626  000CE0  0101               	movlb	1	; () banked
  2627  000CE2  1522               	andwf	__doprnt@flag& (0+255),w,b
  2628  000CE4  0101               	movlb	1	; () banked
  2629  000CE6  6F0F               	movwf	??__doprnt& (0+255),b
  2630  000CE8  0E00               	movlw	0
  2631  000CEA  0101               	movlb	1	; () banked
  2632  000CEC  1523               	andwf	(__doprnt@flag+1)& (0+255),w,b
  2633  000CEE  0101               	movlb	1	; () banked
  2634  000CF0  6F10               	movwf	(??__doprnt+1)& (0+255),b
  2635  000CF2  0101               	movlb	1	; () banked
  2636  000CF4  510F               	movf	??__doprnt& (0+255),w,b
  2637  000CF6  0101               	movlb	1	; () banked
  2638  000CF8  1110               	iorwf	(??__doprnt+1)& (0+255),w,b
  2639  000CFA  B4D8               	btfsc	status,2,c
  2640  000CFC  D004               	goto	l9124
  2641                           
  2642                           ; BSR set to: 1
  2643                           ;doprnt.c: 1150: width--;
  2644  000CFE  0101               	movlb	1	; () banked
  2645  000D00  0724               	decf	__doprnt@width& (0+255),f,b
  2646  000D02  A0D8               	btfss	status,0,c
  2647  000D04  0725               	decf	(__doprnt@width+1)& (0+255),f,b
  2648  000D06                     l9124:
  2649                           
  2650                           ; BSR set to: 1
  2651                           ;doprnt.c: 1153: if(flag & 0x04) {
  2652  000D06  0101               	movlb	1	; () banked
  2653  000D08  A522               	btfss	__doprnt@flag& (0+255),2,b
  2654  000D0A  D0C0               	goto	l9158
  2655                           
  2656                           ; BSR set to: 1
  2657                           ;doprnt.c: 1157: if(flag & 0x03)
  2658  000D0C  0E03               	movlw	3
  2659  000D0E  0101               	movlb	1	; () banked
  2660  000D10  1522               	andwf	__doprnt@flag& (0+255),w,b
  2661  000D12  0101               	movlb	1	; () banked
  2662  000D14  6F0F               	movwf	??__doprnt& (0+255),b
  2663  000D16  0E00               	movlw	0
  2664  000D18  0101               	movlb	1	; () banked
  2665  000D1A  1523               	andwf	(__doprnt@flag+1)& (0+255),w,b
  2666  000D1C  0101               	movlb	1	; () banked
  2667  000D1E  6F10               	movwf	(??__doprnt+1)& (0+255),b
  2668  000D20  0101               	movlb	1	; () banked
  2669  000D22  510F               	movf	??__doprnt& (0+255),w,b
  2670  000D24  0101               	movlb	1	; () banked
  2671  000D26  1110               	iorwf	(??__doprnt+1)& (0+255),w,b
  2672  000D28  B4D8               	btfsc	status,2,c
  2673  000D2A  D06D               	goto	l9146
  2674                           
  2675                           ; BSR set to: 1
  2676                           ;doprnt.c: 1159: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  2677  000D2C  0101               	movlb	1	; () banked
  2678  000D2E  EE20 F002          	lfsr	2,2
  2679  000D32  5109               	movf	__doprnt@pb& (0+255),w,b
  2680  000D34  26D9               	addwf	fsr2l,f,c
  2681  000D36  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  2682  000D38  22DA               	addwfc	fsr2h,f,c
  2683  000D3A  50DE               	movf	postinc2,w,c
  2684  000D3C  10DE               	iorwf	postinc2,w,c
  2685  000D3E  B4D8               	btfsc	status,2,c
  2686  000D40  D014               	goto	l9132
  2687                           
  2688                           ; BSR set to: 1
  2689  000D42  0101               	movlb	1	; () banked
  2690  000D44  EE20 F002          	lfsr	2,2
  2691  000D48  5109               	movf	__doprnt@pb& (0+255),w,b
  2692  000D4A  26D9               	addwf	fsr2l,f,c
  2693  000D4C  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  2694  000D4E  22DA               	addwfc	fsr2h,f,c
  2695  000D50  D801               	call	u15098
  2696  000D52  D059               	goto	l9146
  2697  000D54                     u15098:
  2698  000D54  0005               	push	
  2699  000D56  6EFA               	movwf	pclath,c
  2700  000D58  50DE               	movf	postinc2,w,c
  2701  000D5A  6EFD               	movwf	tosl,c
  2702  000D5C  50DE               	movf	postinc2,w,c
  2703  000D5E  6EFE               	movwf	tosh,c
  2704  000D60  50F8               	movf	tblptru,w,c
  2705  000D62  6EFF               	movwf	tosu,c
  2706  000D64  50FA               	movf	pclath,w,c
  2707  000D66  0E2D               	movlw	45
  2708  000D68  0012               	return		;indir
  2709  000D6A                     l9132:
  2710  000D6A  C109  FFD9         	movff	__doprnt@pb,fsr2l
  2711  000D6E  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  2712  000D72  CFDE F10F          	movff	postinc2,??__doprnt
  2713  000D76  CFDD F110          	movff	postdec2,??__doprnt+1
  2714  000D7A  C10F  FFD9         	movff	??__doprnt,fsr2l
  2715  000D7E  C110  FFDA         	movff	??__doprnt+1,fsr2h
  2716  000D82  0E2D               	movlw	45
  2717  000D84  6EDF               	movwf	indf2,c
  2718  000D86  C109  FFD9         	movff	__doprnt@pb,fsr2l
  2719  000D8A  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  2720  000D8E  2ADE               	incf	postinc2,f,c
  2721  000D90  0E00               	movlw	0
  2722  000D92  22DD               	addwfc	postdec2,f,c
  2723                           
  2724                           ;doprnt.c: 1168: while(width > 0) {
  2725  000D94  D038               	goto	l9146
  2726  000D96                     l9136:
  2727                           
  2728                           ;doprnt.c: 1169: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  2729  000D96  0101               	movlb	1	; () banked
  2730  000D98  EE20 F002          	lfsr	2,2
  2731  000D9C  5109               	movf	__doprnt@pb& (0+255),w,b
  2732  000D9E  26D9               	addwf	fsr2l,f,c
  2733  000DA0  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  2734  000DA2  22DA               	addwfc	fsr2h,f,c
  2735  000DA4  50DE               	movf	postinc2,w,c
  2736  000DA6  10DE               	iorwf	postinc2,w,c
  2737  000DA8  B4D8               	btfsc	status,2,c
  2738  000DAA  D014               	goto	l9140
  2739                           
  2740                           ; BSR set to: 1
  2741  000DAC  0101               	movlb	1	; () banked
  2742  000DAE  EE20 F002          	lfsr	2,2
  2743  000DB2  5109               	movf	__doprnt@pb& (0+255),w,b
  2744  000DB4  26D9               	addwf	fsr2l,f,c
  2745  000DB6  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  2746  000DB8  22DA               	addwfc	fsr2h,f,c
  2747  000DBA  D801               	call	u15118
  2748  000DBC  D020               	goto	l9144
  2749  000DBE                     u15118:
  2750  000DBE  0005               	push	
  2751  000DC0  6EFA               	movwf	pclath,c
  2752  000DC2  50DE               	movf	postinc2,w,c
  2753  000DC4  6EFD               	movwf	tosl,c
  2754  000DC6  50DE               	movf	postinc2,w,c
  2755  000DC8  6EFE               	movwf	tosh,c
  2756  000DCA  50F8               	movf	tblptru,w,c
  2757  000DCC  6EFF               	movwf	tosu,c
  2758  000DCE  50FA               	movf	pclath,w,c
  2759  000DD0  0E30               	movlw	48
  2760  000DD2  0012               	return		;indir
  2761  000DD4                     l9140:
  2762  000DD4  C109  FFD9         	movff	__doprnt@pb,fsr2l
  2763  000DD8  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  2764  000DDC  CFDE F10F          	movff	postinc2,??__doprnt
  2765  000DE0  CFDD F110          	movff	postdec2,??__doprnt+1
  2766  000DE4  C10F  FFD9         	movff	??__doprnt,fsr2l
  2767  000DE8  C110  FFDA         	movff	??__doprnt+1,fsr2h
  2768  000DEC  0E30               	movlw	48
  2769  000DEE  6EDF               	movwf	indf2,c
  2770  000DF0  C109  FFD9         	movff	__doprnt@pb,fsr2l
  2771  000DF4  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  2772  000DF8  2ADE               	incf	postinc2,f,c
  2773  000DFA  0E00               	movlw	0
  2774  000DFC  22DD               	addwfc	postdec2,f,c
  2775  000DFE                     l9144:
  2776                           
  2777                           ;doprnt.c: 1170: width--;
  2778  000DFE  0101               	movlb	1	; () banked
  2779  000E00  0724               	decf	__doprnt@width& (0+255),f,b
  2780  000E02  A0D8               	btfss	status,0,c
  2781  000E04  0725               	decf	(__doprnt@width+1)& (0+255),f,b
  2782  000E06                     l9146:
  2783  000E06  0101               	movlb	1	; () banked
  2784  000E08  BF25               	btfsc	(__doprnt@width+1)& (0+255),7,b
  2785  000E0A  D103               	goto	l9180
  2786  000E0C  0101               	movlb	1	; () banked
  2787  000E0E  5125               	movf	(__doprnt@width+1)& (0+255),w,b
  2788  000E10  E1C2               	bnz	l9136
  2789  000E12  0101               	movlb	1	; () banked
  2790  000E14  0524               	decf	__doprnt@width& (0+255),w,b
  2791  000E16  A0D8               	btfss	status,0,c
  2792  000E18  D0FC               	goto	l9180
  2793  000E1A  D7BD               	goto	l9136
  2794  000E1C                     l9148:
  2795                           
  2796                           ; BSR set to: 1
  2797                           ;doprnt.c: 1181: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  2798  000E1C  0101               	movlb	1	; () banked
  2799  000E1E  EE20 F002          	lfsr	2,2
  2800  000E22  5109               	movf	__doprnt@pb& (0+255),w,b
  2801  000E24  26D9               	addwf	fsr2l,f,c
  2802  000E26  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  2803  000E28  22DA               	addwfc	fsr2h,f,c
  2804  000E2A  50DE               	movf	postinc2,w,c
  2805  000E2C  10DE               	iorwf	postinc2,w,c
  2806  000E2E  B4D8               	btfsc	status,2,c
  2807  000E30  D014               	goto	l9152
  2808                           
  2809                           ; BSR set to: 1
  2810  000E32  0101               	movlb	1	; () banked
  2811  000E34  EE20 F002          	lfsr	2,2
  2812  000E38  5109               	movf	__doprnt@pb& (0+255),w,b
  2813  000E3A  26D9               	addwf	fsr2l,f,c
  2814  000E3C  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  2815  000E3E  22DA               	addwfc	fsr2h,f,c
  2816  000E40  D801               	call	u15148
  2817  000E42  D020               	goto	l9156
  2818  000E44                     u15148:
  2819  000E44  0005               	push	
  2820  000E46  6EFA               	movwf	pclath,c
  2821  000E48  50DE               	movf	postinc2,w,c
  2822  000E4A  6EFD               	movwf	tosl,c
  2823  000E4C  50DE               	movf	postinc2,w,c
  2824  000E4E  6EFE               	movwf	tosh,c
  2825  000E50  50F8               	movf	tblptru,w,c
  2826  000E52  6EFF               	movwf	tosu,c
  2827  000E54  50FA               	movf	pclath,w,c
  2828  000E56  0E20               	movlw	32
  2829  000E58  0012               	return		;indir
  2830  000E5A                     l9152:
  2831  000E5A  C109  FFD9         	movff	__doprnt@pb,fsr2l
  2832  000E5E  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  2833  000E62  CFDE F10F          	movff	postinc2,??__doprnt
  2834  000E66  CFDD F110          	movff	postdec2,??__doprnt+1
  2835  000E6A  C10F  FFD9         	movff	??__doprnt,fsr2l
  2836  000E6E  C110  FFDA         	movff	??__doprnt+1,fsr2h
  2837  000E72  0E20               	movlw	32
  2838  000E74  6EDF               	movwf	indf2,c
  2839  000E76  C109  FFD9         	movff	__doprnt@pb,fsr2l
  2840  000E7A  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  2841  000E7E  2ADE               	incf	postinc2,f,c
  2842  000E80  0E00               	movlw	0
  2843  000E82  22DD               	addwfc	postdec2,f,c
  2844  000E84                     l9156:
  2845                           
  2846                           ;doprnt.c: 1182: width--;
  2847  000E84  0101               	movlb	1	; () banked
  2848  000E86  0724               	decf	__doprnt@width& (0+255),f,b
  2849  000E88  A0D8               	btfss	status,0,c
  2850  000E8A  0725               	decf	(__doprnt@width+1)& (0+255),f,b
  2851  000E8C                     l9158:
  2852                           
  2853                           ; BSR set to: 1
  2854  000E8C  0101               	movlb	1	; () banked
  2855  000E8E  BF25               	btfsc	(__doprnt@width+1)& (0+255),7,b
  2856  000E90  D007               	goto	l9160
  2857  000E92  0101               	movlb	1	; () banked
  2858  000E94  5125               	movf	(__doprnt@width+1)& (0+255),w,b
  2859  000E96  E1C2               	bnz	l9148
  2860  000E98  0101               	movlb	1	; () banked
  2861  000E9A  0524               	decf	__doprnt@width& (0+255),w,b
  2862  000E9C  B0D8               	btfsc	status,0,c
  2863  000E9E  D7BE               	goto	l9148
  2864  000EA0                     l9160:
  2865                           
  2866                           ; BSR set to: 1
  2867                           ;doprnt.c: 1183: }
  2868                           ;doprnt.c: 1188: if(flag & 0x03)
  2869  000EA0  0E03               	movlw	3
  2870  000EA2  0101               	movlb	1	; () banked
  2871  000EA4  1522               	andwf	__doprnt@flag& (0+255),w,b
  2872  000EA6  0101               	movlb	1	; () banked
  2873  000EA8  6F0F               	movwf	??__doprnt& (0+255),b
  2874  000EAA  0E00               	movlw	0
  2875  000EAC  0101               	movlb	1	; () banked
  2876  000EAE  1523               	andwf	(__doprnt@flag+1)& (0+255),w,b
  2877  000EB0  0101               	movlb	1	; () banked
  2878  000EB2  6F10               	movwf	(??__doprnt+1)& (0+255),b
  2879  000EB4  0101               	movlb	1	; () banked
  2880  000EB6  510F               	movf	??__doprnt& (0+255),w,b
  2881  000EB8  0101               	movlb	1	; () banked
  2882  000EBA  1110               	iorwf	(??__doprnt+1)& (0+255),w,b
  2883  000EBC  B4D8               	btfsc	status,2,c
  2884  000EBE  D0A9               	goto	l9180
  2885                           
  2886                           ; BSR set to: 1
  2887                           ;doprnt.c: 1190: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  2888  000EC0  0101               	movlb	1	; () banked
  2889  000EC2  EE20 F002          	lfsr	2,2
  2890  000EC6  5109               	movf	__doprnt@pb& (0+255),w,b
  2891  000EC8  26D9               	addwf	fsr2l,f,c
  2892  000ECA  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  2893  000ECC  22DA               	addwfc	fsr2h,f,c
  2894  000ECE  50DE               	movf	postinc2,w,c
  2895  000ED0  10DE               	iorwf	postinc2,w,c
  2896  000ED2  B4D8               	btfsc	status,2,c
  2897  000ED4  D014               	goto	l9166
  2898                           
  2899                           ; BSR set to: 1
  2900  000ED6  0101               	movlb	1	; () banked
  2901  000ED8  EE20 F002          	lfsr	2,2
  2902  000EDC  5109               	movf	__doprnt@pb& (0+255),w,b
  2903  000EDE  26D9               	addwf	fsr2l,f,c
  2904  000EE0  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  2905  000EE2  22DA               	addwfc	fsr2h,f,c
  2906  000EE4  D801               	call	u15188
  2907  000EE6  D095               	goto	l9180
  2908  000EE8                     u15188:
  2909  000EE8  0005               	push	
  2910  000EEA  6EFA               	movwf	pclath,c
  2911  000EEC  50DE               	movf	postinc2,w,c
  2912  000EEE  6EFD               	movwf	tosl,c
  2913  000EF0  50DE               	movf	postinc2,w,c
  2914  000EF2  6EFE               	movwf	tosh,c
  2915  000EF4  50F8               	movf	tblptru,w,c
  2916  000EF6  6EFF               	movwf	tosu,c
  2917  000EF8  50FA               	movf	pclath,w,c
  2918  000EFA  0E2D               	movlw	45
  2919  000EFC  0012               	return		;indir
  2920  000EFE                     l9166:
  2921  000EFE  C109  FFD9         	movff	__doprnt@pb,fsr2l
  2922  000F02  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  2923  000F06  CFDE F10F          	movff	postinc2,??__doprnt
  2924  000F0A  CFDD F110          	movff	postdec2,??__doprnt+1
  2925  000F0E  C10F  FFD9         	movff	??__doprnt,fsr2l
  2926  000F12  C110  FFDA         	movff	??__doprnt+1,fsr2h
  2927  000F16  0E2D               	movlw	45
  2928  000F18  D07A               	goto	L2
  2929  000F1A                     l9168:
  2930  000F1A  C109  FFD9         	movff	__doprnt@pb,fsr2l
  2931  000F1E  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  2932  000F22  2ADE               	incf	postinc2,f,c
  2933  000F24  0E00               	movlw	0
  2934  000F26  22DD               	addwfc	postdec2,f,c
  2935                           
  2936                           ;doprnt.c: 1195: }
  2937                           ;doprnt.c: 1196: while(c--) {
  2938  000F28  D074               	goto	l9180
  2939  000F2A                     l9170:
  2940                           
  2941                           ;doprnt.c: 1200: {
  2942                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  2943  000F2A  C118  F085         	movff	__doprnt@val,___lldiv@dividend
  2944  000F2E  C119  F086         	movff	__doprnt@val+1,___lldiv@dividend+1
  2945  000F32  C11A  F087         	movff	__doprnt@val+2,___lldiv@dividend+2
  2946  000F36  C11B  F088         	movff	__doprnt@val+3,___lldiv@dividend+3
  2947  000F3A  0101               	movlb	1	; () banked
  2948  000F3C  512B               	movf	__doprnt@c& (0+255),w,b
  2949  000F3E  0D04               	mullw	4
  2950  000F40  0E01               	movlw	low _dpowers
  2951  000F42  24F3               	addwf	prodl,w,c
  2952  000F44  6EF6               	movwf	tblptrl,c
  2953  000F46  0E06               	movlw	high _dpowers
  2954  000F48  20F4               	addwfc	prodh,w,c
  2955  000F4A  6EF7               	movwf	tblptrh,c
  2956  000F4C                     	if	0	;There are less than 3 active tblptr bytes
  2957  000F4C                     	endif
  2958  000F4C  0009               	tblrd		*+
  2959  000F4E  CFF5 F089          	movff	tablat,___lldiv@divisor
  2960  000F52  0009               	tblrd		*+
  2961  000F54  CFF5 F08A          	movff	tablat,___lldiv@divisor+1
  2962  000F58  0009               	tblrd		*+
  2963  000F5A  CFF5 F08B          	movff	tablat,___lldiv@divisor+2
  2964  000F5E  000A               	tblrd		*-
  2965  000F60  CFF5 F08C          	movff	tablat,___lldiv@divisor+3
  2966  000F64  ECA0  F025         	call	___lldiv
  2967  000F68  C085  F11E         	movff	?___lldiv,__doprnt@tmpval
  2968  000F6C  C086  F11F         	movff	?___lldiv+1,__doprnt@tmpval+1
  2969  000F70  C087  F120         	movff	?___lldiv+2,__doprnt@tmpval+2
  2970  000F74  C088  F121         	movff	?___lldiv+3,__doprnt@tmpval+3
  2971                           
  2972                           ;doprnt.c: 1202: tmpval.vd %= 10;
  2973  000F78  C11E  F092         	movff	__doprnt@tmpval,___llmod@dividend
  2974  000F7C  C11F  F093         	movff	__doprnt@tmpval+1,___llmod@dividend+1
  2975  000F80  C120  F094         	movff	__doprnt@tmpval+2,___llmod@dividend+2
  2976  000F84  C121  F095         	movff	__doprnt@tmpval+3,___llmod@dividend+3
  2977  000F88  0E0A               	movlw	10
  2978  000F8A  0100               	movlb	0	; () banked
  2979  000F8C  6F96               	movwf	___llmod@divisor& (0+255),b
  2980  000F8E  0E00               	movlw	0
  2981  000F90  6F97               	movwf	(___llmod@divisor+1)& (0+255),b
  2982  000F92  0E00               	movlw	0
  2983  000F94  6F98               	movwf	(___llmod@divisor+2)& (0+255),b
  2984  000F96  0E00               	movlw	0
  2985  000F98  6F99               	movwf	(___llmod@divisor+3)& (0+255),b
  2986  000F9A  ECFA  F026         	call	___llmod	;wreg free
  2987  000F9E  C092  F11E         	movff	?___llmod,__doprnt@tmpval
  2988  000FA2  C093  F11F         	movff	?___llmod+1,__doprnt@tmpval+1
  2989  000FA6  C094  F120         	movff	?___llmod+2,__doprnt@tmpval+2
  2990  000FAA  C095  F121         	movff	?___llmod+3,__doprnt@tmpval+3
  2991                           
  2992                           ;doprnt.c: 1203: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
  2993  000FAE  0101               	movlb	1	; () banked
  2994  000FB0  EE20 F002          	lfsr	2,2
  2995  000FB4  5109               	movf	__doprnt@pb& (0+255),w,b
  2996  000FB6  26D9               	addwf	fsr2l,f,c
  2997  000FB8  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  2998  000FBA  22DA               	addwfc	fsr2h,f,c
  2999  000FBC  50DE               	movf	postinc2,w,c
  3000  000FBE  10DE               	iorwf	postinc2,w,c
  3001  000FC0  B4D8               	btfsc	status,2,c
  3002  000FC2  D016               	goto	l9178
  3003                           
  3004                           ; BSR set to: 1
  3005  000FC4  0101               	movlb	1	; () banked
  3006  000FC6  EE20 F002          	lfsr	2,2
  3007  000FCA  5109               	movf	__doprnt@pb& (0+255),w,b
  3008  000FCC  26D9               	addwf	fsr2l,f,c
  3009  000FCE  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3010  000FD0  22DA               	addwfc	fsr2h,f,c
  3011  000FD2  D801               	call	u15208
  3012  000FD4  D01E               	goto	l9180
  3013  000FD6                     u15208:
  3014  000FD6  0005               	push	
  3015  000FD8  6EFA               	movwf	pclath,c
  3016  000FDA  50DE               	movf	postinc2,w,c
  3017  000FDC  6EFD               	movwf	tosl,c
  3018  000FDE  50DE               	movf	postinc2,w,c
  3019  000FE0  6EFE               	movwf	tosh,c
  3020  000FE2  50F8               	movf	tblptru,w,c
  3021  000FE4  6EFF               	movwf	tosu,c
  3022  000FE6  50FA               	movf	pclath,w,c
  3023  000FE8  0101               	movlb	1	; () banked
  3024  000FEA  511E               	movf	__doprnt@tmpval& (0+255),w,b
  3025  000FEC  0F30               	addlw	48
  3026  000FEE  0012               	return		;indir
  3027  000FF0                     l9178:
  3028  000FF0  0101               	movlb	1	; () banked
  3029  000FF2  511E               	movf	__doprnt@tmpval& (0+255),w,b
  3030  000FF4  0F30               	addlw	48
  3031  000FF6  C109  FFD9         	movff	__doprnt@pb,fsr2l
  3032  000FFA  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3033  000FFE  CFDE F10F          	movff	postinc2,??__doprnt
  3034  001002  CFDD F110          	movff	postdec2,??__doprnt+1
  3035  001006  C10F  FFD9         	movff	??__doprnt,fsr2l
  3036  00100A  C110  FFDA         	movff	??__doprnt+1,fsr2h
  3037  00100E                     L2:
  3038  00100E  6EDF               	movwf	indf2,c
  3039  001010  D784               	goto	l9168
  3040  001012                     l9180:
  3041  001012  0101               	movlb	1	; () banked
  3042  001014  072B               	decf	__doprnt@c& (0+255),f,b
  3043  001016  0101               	movlb	1	; () banked
  3044  001018  292B               	incf	__doprnt@c& (0+255),w,b
  3045  00101A  B4D8               	btfsc	status,2,c
  3046  00101C  D039               	goto	l9192
  3047  00101E  D785               	goto	l9170
  3048  001020                     l9182:
  3049                           
  3050                           ; BSR set to: 1
  3051                           ;doprnt.c: 1208: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  3052  001020  0101               	movlb	1	; () banked
  3053  001022  EE20 F002          	lfsr	2,2
  3054  001026  5109               	movf	__doprnt@pb& (0+255),w,b
  3055  001028  26D9               	addwf	fsr2l,f,c
  3056  00102A  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3057  00102C  22DA               	addwfc	fsr2h,f,c
  3058  00102E  50DE               	movf	postinc2,w,c
  3059  001030  10DE               	iorwf	postinc2,w,c
  3060  001032  B4D8               	btfsc	status,2,c
  3061  001034  D014               	goto	l9186
  3062                           
  3063                           ; BSR set to: 1
  3064  001036  0101               	movlb	1	; () banked
  3065  001038  EE20 F002          	lfsr	2,2
  3066  00103C  5109               	movf	__doprnt@pb& (0+255),w,b
  3067  00103E  26D9               	addwf	fsr2l,f,c
  3068  001040  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3069  001042  22DA               	addwfc	fsr2h,f,c
  3070  001044  D801               	call	u15238
  3071  001046  D020               	goto	l9190
  3072  001048                     u15238:
  3073  001048  0005               	push	
  3074  00104A  6EFA               	movwf	pclath,c
  3075  00104C  50DE               	movf	postinc2,w,c
  3076  00104E  6EFD               	movwf	tosl,c
  3077  001050  50DE               	movf	postinc2,w,c
  3078  001052  6EFE               	movwf	tosh,c
  3079  001054  50F8               	movf	tblptru,w,c
  3080  001056  6EFF               	movwf	tosu,c
  3081  001058  50FA               	movf	pclath,w,c
  3082  00105A  0E30               	movlw	48
  3083  00105C  0012               	return		;indir
  3084  00105E                     l9186:
  3085  00105E  C109  FFD9         	movff	__doprnt@pb,fsr2l
  3086  001062  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3087  001066  CFDE F10F          	movff	postinc2,??__doprnt
  3088  00106A  CFDD F110          	movff	postdec2,??__doprnt+1
  3089  00106E  C10F  FFD9         	movff	??__doprnt,fsr2l
  3090  001072  C110  FFDA         	movff	??__doprnt+1,fsr2h
  3091  001076  0E30               	movlw	48
  3092  001078  6EDF               	movwf	indf2,c
  3093  00107A  C109  FFD9         	movff	__doprnt@pb,fsr2l
  3094  00107E  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3095  001082  2ADE               	incf	postinc2,f,c
  3096  001084  0E00               	movlw	0
  3097  001086  22DD               	addwfc	postdec2,f,c
  3098  001088                     l9190:
  3099                           
  3100                           ;doprnt.c: 1209: exp--;
  3101  001088  0101               	movlb	1	; () banked
  3102  00108A  071C               	decf	__doprnt@exp& (0+255),f,b
  3103  00108C  A0D8               	btfss	status,0,c
  3104  00108E  071D               	decf	(__doprnt@exp+1)& (0+255),f,b
  3105  001090                     l9192:
  3106                           
  3107                           ; BSR set to: 1
  3108  001090  0101               	movlb	1	; () banked
  3109  001092  BF1D               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  3110  001094  D007               	goto	l9194
  3111  001096  0101               	movlb	1	; () banked
  3112  001098  511D               	movf	(__doprnt@exp+1)& (0+255),w,b
  3113  00109A  E1C2               	bnz	l9182
  3114  00109C  0101               	movlb	1	; () banked
  3115  00109E  051C               	decf	__doprnt@exp& (0+255),w,b
  3116  0010A0  B0D8               	btfsc	status,0,c
  3117  0010A2  D7BE               	goto	l9182
  3118  0010A4                     l9194:
  3119                           
  3120                           ; BSR set to: 1
  3121                           ;doprnt.c: 1210: }
  3122                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3123  0010A4  0101               	movlb	1	; () banked
  3124  0010A6  BF2A               	btfsc	(__doprnt@prec+1)& (0+255),7,b
  3125  0010A8  D00C               	goto	l409
  3126  0010AA  0101               	movlb	1	; () banked
  3127  0010AC  512A               	movf	(__doprnt@prec+1)& (0+255),w,b
  3128  0010AE  E105               	bnz	u15250
  3129  0010B0  0E09               	movlw	9
  3130  0010B2  0101               	movlb	1	; () banked
  3131  0010B4  5D29               	subwf	__doprnt@prec& (0+255),w,b
  3132  0010B6  A0D8               	btfss	status,0,c
  3133  0010B8  D004               	goto	l409
  3134  0010BA                     u15250:
  3135                           
  3136                           ; BSR set to: 1
  3137                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3138  0010BA  0E08               	movlw	8
  3139  0010BC  0101               	movlb	1	; () banked
  3140  0010BE  6F2B               	movwf	__doprnt@c& (0+255),b
  3141  0010C0  D002               	goto	l9198
  3142  0010C2                     l409:
  3143                           
  3144                           ; BSR set to: 1
  3145                           ;doprnt.c: 1213: else
  3146                           ;doprnt.c: 1214: c = prec;
  3147  0010C2  C129  F12B         	movff	__doprnt@prec,__doprnt@c
  3148  0010C6                     l9198:
  3149                           
  3150                           ; BSR set to: 1
  3151                           ;doprnt.c: 1215: prec -= c;
  3152  0010C6  0101               	movlb	1	; () banked
  3153  0010C8  512B               	movf	__doprnt@c& (0+255),w,b
  3154  0010CA  0101               	movlb	1	; () banked
  3155  0010CC  5F29               	subwf	__doprnt@prec& (0+255),f,b
  3156  0010CE  0E00               	movlw	0
  3157  0010D0  0101               	movlb	1	; () banked
  3158  0010D2  BF2B               	btfsc	__doprnt@c& (0+255),7,b
  3159  0010D4  0EFF               	movlw	255
  3160  0010D6  0101               	movlb	1	; () banked
  3161  0010D8  5B2A               	subwfb	(__doprnt@prec+1)& (0+255),f,b
  3162                           
  3163                           ; BSR set to: 1
  3164                           ;doprnt.c: 1219: if(c)
  3165  0010DA  0101               	movlb	1	; () banked
  3166  0010DC  512B               	movf	__doprnt@c& (0+255),w,b
  3167  0010DE  0101               	movlb	1	; () banked
  3168  0010E0  B4D8               	btfsc	status,2,c
  3169  0010E2  D034               	goto	l9210
  3170                           
  3171                           ; BSR set to: 1
  3172                           ;doprnt.c: 1221: if(pb->func) (pb->func('.')); else ((*pb->ptr++ = '.'));
  3173  0010E4  0101               	movlb	1	; () banked
  3174  0010E6  EE20 F002          	lfsr	2,2
  3175  0010EA  5109               	movf	__doprnt@pb& (0+255),w,b
  3176  0010EC  26D9               	addwf	fsr2l,f,c
  3177  0010EE  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3178  0010F0  22DA               	addwfc	fsr2h,f,c
  3179  0010F2  50DE               	movf	postinc2,w,c
  3180  0010F4  10DE               	iorwf	postinc2,w,c
  3181  0010F6  B4D8               	btfsc	status,2,c
  3182  0010F8  D014               	goto	l9206
  3183                           
  3184                           ; BSR set to: 1
  3185  0010FA  0101               	movlb	1	; () banked
  3186  0010FC  EE20 F002          	lfsr	2,2
  3187  001100  5109               	movf	__doprnt@pb& (0+255),w,b
  3188  001102  26D9               	addwf	fsr2l,f,c
  3189  001104  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3190  001106  22DA               	addwfc	fsr2h,f,c
  3191  001108  D801               	call	u15288
  3192  00110A  D020               	goto	l9210
  3193  00110C                     u15288:
  3194  00110C  0005               	push	
  3195  00110E  6EFA               	movwf	pclath,c
  3196  001110  50DE               	movf	postinc2,w,c
  3197  001112  6EFD               	movwf	tosl,c
  3198  001114  50DE               	movf	postinc2,w,c
  3199  001116  6EFE               	movwf	tosh,c
  3200  001118  50F8               	movf	tblptru,w,c
  3201  00111A  6EFF               	movwf	tosu,c
  3202  00111C  50FA               	movf	pclath,w,c
  3203  00111E  0E2E               	movlw	46
  3204  001120  0012               	return		;indir
  3205  001122                     l9206:
  3206  001122  C109  FFD9         	movff	__doprnt@pb,fsr2l
  3207  001126  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3208  00112A  CFDE F10F          	movff	postinc2,??__doprnt
  3209  00112E  CFDD F110          	movff	postdec2,??__doprnt+1
  3210  001132  C10F  FFD9         	movff	??__doprnt,fsr2l
  3211  001136  C110  FFDA         	movff	??__doprnt+1,fsr2h
  3212  00113A  0E2E               	movlw	46
  3213  00113C  6EDF               	movwf	indf2,c
  3214  00113E  C109  FFD9         	movff	__doprnt@pb,fsr2l
  3215  001142  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3216  001146  2ADE               	incf	postinc2,f,c
  3217  001148  0E00               	movlw	0
  3218  00114A  22DD               	addwfc	postdec2,f,c
  3219  00114C                     l9210:
  3220                           
  3221                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3222  00114C  0101               	movlb	1	; () banked
  3223  00114E  512B               	movf	__doprnt@c& (0+255),w,b
  3224  001150  ECBA  F014         	call	_scale
  3225  001154  C0A8  F115         	movff	?_scale,__doprnt$1622
  3226  001158  C0A9  F116         	movff	?_scale+1,__doprnt$1622+1
  3227  00115C  C0AA  F117         	movff	?_scale+2,__doprnt$1622+2
  3228                           
  3229                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3230  001160  C126  F09C         	movff	__doprnt@fval,___ftmul@f2
  3231  001164  C127  F09D         	movff	__doprnt@fval+1,___ftmul@f2+1
  3232  001168  C128  F09E         	movff	__doprnt@fval+2,___ftmul@f2+2
  3233  00116C  C115  F099         	movff	__doprnt$1622,___ftmul@f1
  3234  001170  C116  F09A         	movff	__doprnt$1622+1,___ftmul@f1+1
  3235  001174  C117  F09B         	movff	__doprnt$1622+2,___ftmul@f1+2
  3236  001178  EC1F  F01F         	call	___ftmul	;wreg free
  3237  00117C  C099  F0AF         	movff	?___ftmul,___fttol@f1
  3238  001180  C09A  F0B0         	movff	?___ftmul+1,___fttol@f1+1
  3239  001184  C09B  F0B1         	movff	?___ftmul+2,___fttol@f1+2
  3240  001188  EC21  F021         	call	___fttol	;wreg free
  3241  00118C  C0AF  F118         	movff	?___fttol,__doprnt@val
  3242  001190  C0B0  F119         	movff	?___fttol+1,__doprnt@val+1
  3243  001194  C0B1  F11A         	movff	?___fttol+2,__doprnt@val+2
  3244  001198  C0B2  F11B         	movff	?___fttol+3,__doprnt@val+3
  3245                           
  3246                           ;doprnt.c: 1228: while(c--) {
  3247  00119C  D0A1               	goto	l9226
  3248  00119E                     l9214:
  3249                           
  3250                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3251  00119E  C118  F085         	movff	__doprnt@val,___lldiv@dividend
  3252  0011A2  C119  F086         	movff	__doprnt@val+1,___lldiv@dividend+1
  3253  0011A6  C11A  F087         	movff	__doprnt@val+2,___lldiv@dividend+2
  3254  0011AA  C11B  F088         	movff	__doprnt@val+3,___lldiv@dividend+3
  3255  0011AE  0101               	movlb	1	; () banked
  3256  0011B0  512B               	movf	__doprnt@c& (0+255),w,b
  3257  0011B2  0D04               	mullw	4
  3258  0011B4  0E01               	movlw	low _dpowers
  3259  0011B6  24F3               	addwf	prodl,w,c
  3260  0011B8  6EF6               	movwf	tblptrl,c
  3261  0011BA  0E06               	movlw	high _dpowers
  3262  0011BC  20F4               	addwfc	prodh,w,c
  3263  0011BE  6EF7               	movwf	tblptrh,c
  3264  0011C0                     	if	0	;There are less than 3 active tblptr bytes
  3265  0011C0                     	endif
  3266  0011C0  0009               	tblrd		*+
  3267  0011C2  CFF5 F089          	movff	tablat,___lldiv@divisor
  3268  0011C6  0009               	tblrd		*+
  3269  0011C8  CFF5 F08A          	movff	tablat,___lldiv@divisor+1
  3270  0011CC  0009               	tblrd		*+
  3271  0011CE  CFF5 F08B          	movff	tablat,___lldiv@divisor+2
  3272  0011D2  000A               	tblrd		*-
  3273  0011D4  CFF5 F08C          	movff	tablat,___lldiv@divisor+3
  3274  0011D8  ECA0  F025         	call	___lldiv	;wreg free
  3275  0011DC  C085  F11E         	movff	?___lldiv,__doprnt@tmpval
  3276  0011E0  C086  F11F         	movff	?___lldiv+1,__doprnt@tmpval+1
  3277  0011E4  C087  F120         	movff	?___lldiv+2,__doprnt@tmpval+2
  3278  0011E8  C088  F121         	movff	?___lldiv+3,__doprnt@tmpval+3
  3279                           
  3280                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3281  0011EC  C11E  F092         	movff	__doprnt@tmpval,___llmod@dividend
  3282  0011F0  C11F  F093         	movff	__doprnt@tmpval+1,___llmod@dividend+1
  3283  0011F4  C120  F094         	movff	__doprnt@tmpval+2,___llmod@dividend+2
  3284  0011F8  C121  F095         	movff	__doprnt@tmpval+3,___llmod@dividend+3
  3285  0011FC  0E0A               	movlw	10
  3286  0011FE  0100               	movlb	0	; () banked
  3287  001200  6F96               	movwf	___llmod@divisor& (0+255),b
  3288  001202  0E00               	movlw	0
  3289  001204  6F97               	movwf	(___llmod@divisor+1)& (0+255),b
  3290  001206  0E00               	movlw	0
  3291  001208  6F98               	movwf	(___llmod@divisor+2)& (0+255),b
  3292  00120A  0E00               	movlw	0
  3293  00120C  6F99               	movwf	(___llmod@divisor+3)& (0+255),b
  3294  00120E  ECFA  F026         	call	___llmod	;wreg free
  3295  001212  C092  F11E         	movff	?___llmod,__doprnt@tmpval
  3296  001216  C093  F11F         	movff	?___llmod+1,__doprnt@tmpval+1
  3297  00121A  C094  F120         	movff	?___llmod+2,__doprnt@tmpval+2
  3298  00121E  C095  F121         	movff	?___llmod+3,__doprnt@tmpval+3
  3299                           
  3300                           ;doprnt.c: 1231: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
  3301  001222  0101               	movlb	1	; () banked
  3302  001224  EE20 F002          	lfsr	2,2
  3303  001228  5109               	movf	__doprnt@pb& (0+255),w,b
  3304  00122A  26D9               	addwf	fsr2l,f,c
  3305  00122C  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3306  00122E  22DA               	addwfc	fsr2h,f,c
  3307  001230  50DE               	movf	postinc2,w,c
  3308  001232  10DE               	iorwf	postinc2,w,c
  3309  001234  B4D8               	btfsc	status,2,c
  3310  001236  D016               	goto	l9222
  3311                           
  3312                           ; BSR set to: 1
  3313  001238  0101               	movlb	1	; () banked
  3314  00123A  EE20 F002          	lfsr	2,2
  3315  00123E  5109               	movf	__doprnt@pb& (0+255),w,b
  3316  001240  26D9               	addwf	fsr2l,f,c
  3317  001242  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3318  001244  22DA               	addwfc	fsr2h,f,c
  3319  001246  D801               	call	u15308
  3320  001248  D024               	goto	l9224
  3321  00124A                     u15308:
  3322  00124A  0005               	push	
  3323  00124C  6EFA               	movwf	pclath,c
  3324  00124E  50DE               	movf	postinc2,w,c
  3325  001250  6EFD               	movwf	tosl,c
  3326  001252  50DE               	movf	postinc2,w,c
  3327  001254  6EFE               	movwf	tosh,c
  3328  001256  50F8               	movf	tblptru,w,c
  3329  001258  6EFF               	movwf	tosu,c
  3330  00125A  50FA               	movf	pclath,w,c
  3331  00125C  0101               	movlb	1	; () banked
  3332  00125E  511E               	movf	__doprnt@tmpval& (0+255),w,b
  3333  001260  0F30               	addlw	48
  3334  001262  0012               	return		;indir
  3335  001264                     l9222:
  3336  001264  0101               	movlb	1	; () banked
  3337  001266  511E               	movf	__doprnt@tmpval& (0+255),w,b
  3338  001268  0F30               	addlw	48
  3339  00126A  C109  FFD9         	movff	__doprnt@pb,fsr2l
  3340  00126E  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3341  001272  CFDE F10F          	movff	postinc2,??__doprnt
  3342  001276  CFDD F110          	movff	postdec2,??__doprnt+1
  3343  00127A  C10F  FFD9         	movff	??__doprnt,fsr2l
  3344  00127E  C110  FFDA         	movff	??__doprnt+1,fsr2h
  3345  001282  6EDF               	movwf	indf2,c
  3346  001284  C109  FFD9         	movff	__doprnt@pb,fsr2l
  3347  001288  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3348  00128C  2ADE               	incf	postinc2,f,c
  3349  00128E  0E00               	movlw	0
  3350  001290  22DD               	addwfc	postdec2,f,c
  3351  001292                     l9224:
  3352                           
  3353                           ;doprnt.c: 1232: val %= dpowers[c];
  3354  001292  C118  F092         	movff	__doprnt@val,___llmod@dividend
  3355  001296  C119  F093         	movff	__doprnt@val+1,___llmod@dividend+1
  3356  00129A  C11A  F094         	movff	__doprnt@val+2,___llmod@dividend+2
  3357  00129E  C11B  F095         	movff	__doprnt@val+3,___llmod@dividend+3
  3358  0012A2  0101               	movlb	1	; () banked
  3359  0012A4  512B               	movf	__doprnt@c& (0+255),w,b
  3360  0012A6  0D04               	mullw	4
  3361  0012A8  0E01               	movlw	low _dpowers
  3362  0012AA  24F3               	addwf	prodl,w,c
  3363  0012AC  6EF6               	movwf	tblptrl,c
  3364  0012AE  0E06               	movlw	high _dpowers
  3365  0012B0  20F4               	addwfc	prodh,w,c
  3366  0012B2  6EF7               	movwf	tblptrh,c
  3367  0012B4                     	if	0	;There are less than 3 active tblptr bytes
  3368  0012B4                     	endif
  3369  0012B4  0009               	tblrd		*+
  3370  0012B6  CFF5 F096          	movff	tablat,___llmod@divisor
  3371  0012BA  0009               	tblrd		*+
  3372  0012BC  CFF5 F097          	movff	tablat,___llmod@divisor+1
  3373  0012C0  0009               	tblrd		*+
  3374  0012C2  CFF5 F098          	movff	tablat,___llmod@divisor+2
  3375  0012C6  000A               	tblrd		*-
  3376  0012C8  CFF5 F099          	movff	tablat,___llmod@divisor+3
  3377  0012CC  ECFA  F026         	call	___llmod
  3378  0012D0  C092  F118         	movff	?___llmod,__doprnt@val
  3379  0012D4  C093  F119         	movff	?___llmod+1,__doprnt@val+1
  3380  0012D8  C094  F11A         	movff	?___llmod+2,__doprnt@val+2
  3381  0012DC  C095  F11B         	movff	?___llmod+3,__doprnt@val+3
  3382  0012E0                     l9226:
  3383  0012E0  0101               	movlb	1	; () banked
  3384  0012E2  072B               	decf	__doprnt@c& (0+255),f,b
  3385  0012E4  0101               	movlb	1	; () banked
  3386  0012E6  292B               	incf	__doprnt@c& (0+255),w,b
  3387  0012E8  B4D8               	btfsc	status,2,c
  3388  0012EA  D039               	goto	l9238
  3389  0012EC  D758               	goto	l9214
  3390  0012EE                     l9228:
  3391                           
  3392                           ; BSR set to: 1
  3393                           ;doprnt.c: 1236: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  3394  0012EE  0101               	movlb	1	; () banked
  3395  0012F0  EE20 F002          	lfsr	2,2
  3396  0012F4  5109               	movf	__doprnt@pb& (0+255),w,b
  3397  0012F6  26D9               	addwf	fsr2l,f,c
  3398  0012F8  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3399  0012FA  22DA               	addwfc	fsr2h,f,c
  3400  0012FC  50DE               	movf	postinc2,w,c
  3401  0012FE  10DE               	iorwf	postinc2,w,c
  3402  001300  B4D8               	btfsc	status,2,c
  3403  001302  D014               	goto	l9232
  3404                           
  3405                           ; BSR set to: 1
  3406  001304  0101               	movlb	1	; () banked
  3407  001306  EE20 F002          	lfsr	2,2
  3408  00130A  5109               	movf	__doprnt@pb& (0+255),w,b
  3409  00130C  26D9               	addwf	fsr2l,f,c
  3410  00130E  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3411  001310  22DA               	addwfc	fsr2h,f,c
  3412  001312  D801               	call	u15338
  3413  001314  D020               	goto	l9236
  3414  001316                     u15338:
  3415  001316  0005               	push	
  3416  001318  6EFA               	movwf	pclath,c
  3417  00131A  50DE               	movf	postinc2,w,c
  3418  00131C  6EFD               	movwf	tosl,c
  3419  00131E  50DE               	movf	postinc2,w,c
  3420  001320  6EFE               	movwf	tosh,c
  3421  001322  50F8               	movf	tblptru,w,c
  3422  001324  6EFF               	movwf	tosu,c
  3423  001326  50FA               	movf	pclath,w,c
  3424  001328  0E30               	movlw	48
  3425  00132A  0012               	return		;indir
  3426  00132C                     l9232:
  3427  00132C  C109  FFD9         	movff	__doprnt@pb,fsr2l
  3428  001330  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3429  001334  CFDE F10F          	movff	postinc2,??__doprnt
  3430  001338  CFDD F110          	movff	postdec2,??__doprnt+1
  3431  00133C  C10F  FFD9         	movff	??__doprnt,fsr2l
  3432  001340  C110  FFDA         	movff	??__doprnt+1,fsr2h
  3433  001344  0E30               	movlw	48
  3434  001346  6EDF               	movwf	indf2,c
  3435  001348  C109  FFD9         	movff	__doprnt@pb,fsr2l
  3436  00134C  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3437  001350  2ADE               	incf	postinc2,f,c
  3438  001352  0E00               	movlw	0
  3439  001354  22DD               	addwfc	postdec2,f,c
  3440  001356                     l9236:
  3441                           
  3442                           ;doprnt.c: 1237: prec--;
  3443  001356  0101               	movlb	1	; () banked
  3444  001358  0729               	decf	__doprnt@prec& (0+255),f,b
  3445  00135A  A0D8               	btfss	status,0,c
  3446  00135C  072A               	decf	(__doprnt@prec+1)& (0+255),f,b
  3447  00135E                     l9238:
  3448                           
  3449                           ; BSR set to: 1
  3450  00135E  0101               	movlb	1	; () banked
  3451  001360  5129               	movf	__doprnt@prec& (0+255),w,b
  3452  001362  0101               	movlb	1	; () banked
  3453  001364  112A               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  3454  001366  B4D8               	btfsc	status,2,c
  3455  001368  D282               	goto	l9350
  3456  00136A  D7C1               	goto	l9228
  3457  00136C                     l357:
  3458                           
  3459                           ; BSR set to: 1
  3460                           ;doprnt.c: 1246: }
  3461                           ;doprnt.c: 1273: {
  3462                           ;doprnt.c: 1281: if(flag & 0x10)
  3463  00136C  0101               	movlb	1	; () banked
  3464  00136E  A922               	btfss	__doprnt@flag& (0+255),4,b
  3465  001370  D019               	goto	l9242
  3466                           
  3467                           ; BSR set to: 1
  3468                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  3469  001372  C10D  FFD9         	movff	__doprnt@ap,fsr2l
  3470  001376  C10E  FFDA         	movff	__doprnt@ap+1,fsr2h
  3471  00137A  CFDF F10F          	movff	indf2,??__doprnt
  3472  00137E  0E04               	movlw	4
  3473  001380  26DE               	addwf	postinc2,f,c
  3474  001382  CFDF F110          	movff	indf2,??__doprnt+1
  3475  001386  0E00               	movlw	0
  3476  001388  22DD               	addwfc	postdec2,f,c
  3477  00138A  C10F  FFD9         	movff	??__doprnt,fsr2l
  3478  00138E  C110  FFDA         	movff	??__doprnt+1,fsr2h
  3479  001392  CFDE F118          	movff	postinc2,__doprnt@val
  3480  001396  CFDE F119          	movff	postinc2,__doprnt@val+1
  3481  00139A  CFDE F11A          	movff	postinc2,__doprnt@val+2
  3482  00139E  CFDE F11B          	movff	postinc2,__doprnt@val+3
  3483  0013A2  D01B               	goto	l9244
  3484  0013A4                     l9242:
  3485                           
  3486                           ; BSR set to: 1
  3487                           ;doprnt.c: 1283: else
  3488                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3489  0013A4  C10D  FFD9         	movff	__doprnt@ap,fsr2l
  3490  0013A8  C10E  FFDA         	movff	__doprnt@ap+1,fsr2h
  3491  0013AC  CFDF F10F          	movff	indf2,??__doprnt
  3492  0013B0  0E02               	movlw	2
  3493  0013B2  26DE               	addwf	postinc2,f,c
  3494  0013B4  CFDF F110          	movff	indf2,??__doprnt+1
  3495  0013B8  0E00               	movlw	0
  3496  0013BA  22DD               	addwfc	postdec2,f,c
  3497  0013BC  C10F  FFD9         	movff	??__doprnt,fsr2l
  3498  0013C0  C110  FFDA         	movff	??__doprnt+1,fsr2h
  3499  0013C4  CFDE F111          	movff	postinc2,??__doprnt+2
  3500  0013C8  CFDD F112          	movff	postdec2,??__doprnt+3
  3501  0013CC  C111  F118         	movff	??__doprnt+2,__doprnt@val
  3502  0013D0  C112  F119         	movff	??__doprnt+3,__doprnt@val+1
  3503  0013D4  0101               	movlb	1	; () banked
  3504  0013D6  6B1A               	clrf	(__doprnt@val+2)& (0+255),b
  3505  0013D8  6B1B               	clrf	(__doprnt@val+3)& (0+255),b
  3506  0013DA                     l9244:
  3507                           
  3508                           ; BSR set to: 1
  3509                           ;doprnt.c: 1287: }
  3510                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3511  0013DA  0101               	movlb	1	; () banked
  3512  0013DC  5129               	movf	__doprnt@prec& (0+255),w,b
  3513  0013DE  0101               	movlb	1	; () banked
  3514  0013E0  112A               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  3515  0013E2  A4D8               	btfss	status,2,c
  3516  0013E4  D00D               	goto	l9250
  3517                           
  3518                           ; BSR set to: 1
  3519  0013E6  0101               	movlb	1	; () banked
  3520  0013E8  5118               	movf	__doprnt@val& (0+255),w,b
  3521  0013EA  0101               	movlb	1	; () banked
  3522  0013EC  1119               	iorwf	(__doprnt@val+1)& (0+255),w,b
  3523  0013EE  0101               	movlb	1	; () banked
  3524  0013F0  111A               	iorwf	(__doprnt@val+2)& (0+255),w,b
  3525  0013F2  0101               	movlb	1	; () banked
  3526  0013F4  111B               	iorwf	(__doprnt@val+3)& (0+255),w,b
  3527  0013F6  A4D8               	btfss	status,2,c
  3528  0013F8  D003               	goto	l9250
  3529                           
  3530                           ; BSR set to: 1
  3531                           ;doprnt.c: 1291: prec++;
  3532  0013FA  0101               	movlb	1	; () banked
  3533  0013FC  4B29               	infsnz	__doprnt@prec& (0+255),f,b
  3534  0013FE  2B2A               	incf	(__doprnt@prec+1)& (0+255),f,b
  3535  001400                     l9250:
  3536                           
  3537                           ; BSR set to: 1
  3538                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3539  001400  0E01               	movlw	1
  3540  001402  0101               	movlb	1	; () banked
  3541  001404  6F2B               	movwf	__doprnt@c& (0+255),b
  3542  001406                     l9252:
  3543                           
  3544                           ; BSR set to: 1
  3545  001406  0E0A               	movlw	10
  3546  001408  0101               	movlb	1	; () banked
  3547  00140A  192B               	xorwf	__doprnt@c& (0+255),w,b
  3548  00140C  B4D8               	btfsc	status,2,c
  3549  00140E  D01E               	goto	l9264
  3550                           
  3551                           ; BSR set to: 1
  3552                           ;doprnt.c: 1306: if(val < dpowers[c])
  3553                           
  3554                           ; BSR set to: 1
  3555                           
  3556                           ; BSR set to: 1
  3557  001410  0101               	movlb	1	; () banked
  3558  001412  512B               	movf	__doprnt@c& (0+255),w,b
  3559  001414  0D04               	mullw	4
  3560  001416  0E01               	movlw	low _dpowers
  3561  001418  24F3               	addwf	prodl,w,c
  3562  00141A  6EF6               	movwf	tblptrl,c
  3563  00141C  0E06               	movlw	high _dpowers
  3564  00141E  20F4               	addwfc	prodh,w,c
  3565  001420  6EF7               	movwf	tblptrh,c
  3566  001422                     	if	0	;There are less than 3 active tblptr bytes
  3567  001422                     	endif
  3568  001422  0009               	tblrd		*+
  3569  001424  50F5               	movf	tablat,w,c
  3570  001426  0101               	movlb	1	; () banked
  3571  001428  5D18               	subwf	__doprnt@val& (0+255),w,b
  3572  00142A  0009               	tblrd		*+
  3573  00142C  50F5               	movf	tablat,w,c
  3574  00142E  0101               	movlb	1	; () banked
  3575  001430  5919               	subwfb	(__doprnt@val+1)& (0+255),w,b
  3576  001432  0009               	tblrd		*+
  3577  001434  50F5               	movf	tablat,w,c
  3578  001436  0101               	movlb	1	; () banked
  3579  001438  591A               	subwfb	(__doprnt@val+2)& (0+255),w,b
  3580  00143A  0009               	tblrd		*+
  3581  00143C  50F5               	movf	tablat,w,c
  3582  00143E  0101               	movlb	1	; () banked
  3583  001440  591B               	subwfb	(__doprnt@val+3)& (0+255),w,b
  3584  001442  A0D8               	btfss	status,0,c
  3585  001444  D003               	goto	l9264
  3586                           
  3587                           ; BSR set to: 1
  3588                           
  3589                           ; BSR set to: 1
  3590                           
  3591                           ; BSR set to: 1
  3592                           ;doprnt.c: 1307: break;
  3593  001446  0101               	movlb	1	; () banked
  3594  001448  2B2B               	incf	__doprnt@c& (0+255),f,b
  3595  00144A  D7DD               	goto	l9252
  3596  00144C                     l9264:
  3597                           
  3598                           ; BSR set to: 1
  3599                           ;doprnt.c: 1339: if(c < prec)
  3600  00144C  0E80               	movlw	128
  3601  00144E  0101               	movlb	1	; () banked
  3602  001450  BF2B               	btfsc	__doprnt@c& (0+255),7,b
  3603  001452  0E7F               	movlw	127
  3604  001454  0101               	movlb	1	; () banked
  3605  001456  6F0F               	movwf	??__doprnt& (0+255),b
  3606  001458  0101               	movlb	1	; () banked
  3607  00145A  5129               	movf	__doprnt@prec& (0+255),w,b
  3608  00145C  0101               	movlb	1	; () banked
  3609  00145E  5D2B               	subwf	__doprnt@c& (0+255),w,b
  3610  001460  0101               	movlb	1	; () banked
  3611  001462  512A               	movf	(__doprnt@prec+1)& (0+255),w,b
  3612  001464  0A80               	xorlw	128
  3613  001466  0101               	movlb	1	; () banked
  3614  001468  590F               	subwfb	??__doprnt& (0+255),w,b
  3615  00146A  B0D8               	btfsc	status,0,c
  3616  00146C  D003               	goto	l9268
  3617                           
  3618                           ; BSR set to: 1
  3619                           ;doprnt.c: 1340: c = prec;
  3620  00146E  C129  F12B         	movff	__doprnt@prec,__doprnt@c
  3621  001472  D018               	goto	l9272
  3622  001474                     l9268:
  3623                           
  3624                           ; BSR set to: 1
  3625                           ;doprnt.c: 1341: else if(prec < c)
  3626  001474  0101               	movlb	1	; () banked
  3627  001476  512A               	movf	(__doprnt@prec+1)& (0+255),w,b
  3628  001478  0A80               	xorlw	128
  3629  00147A  0101               	movlb	1	; () banked
  3630  00147C  6F0F               	movwf	??__doprnt& (0+255),b
  3631  00147E  0101               	movlb	1	; () banked
  3632  001480  512B               	movf	__doprnt@c& (0+255),w,b
  3633  001482  0101               	movlb	1	; () banked
  3634  001484  5D29               	subwf	__doprnt@prec& (0+255),w,b
  3635  001486  0E80               	movlw	128
  3636  001488  0101               	movlb	1	; () banked
  3637  00148A  BF2B               	btfsc	__doprnt@c& (0+255),7,b
  3638  00148C  0E7F               	movlw	127
  3639  00148E  0101               	movlb	1	; () banked
  3640  001490  590F               	subwfb	??__doprnt& (0+255),w,b
  3641  001492  B0D8               	btfsc	status,0,c
  3642  001494  D007               	goto	l9272
  3643                           
  3644                           ; BSR set to: 1
  3645                           ;doprnt.c: 1342: prec = c;
  3646  001496  0101               	movlb	1	; () banked
  3647  001498  512B               	movf	__doprnt@c& (0+255),w,b
  3648  00149A  0101               	movlb	1	; () banked
  3649  00149C  6F29               	movwf	__doprnt@prec& (0+255),b
  3650  00149E  6B2A               	clrf	(__doprnt@prec+1)& (0+255),b
  3651  0014A0  BF29               	btfsc	__doprnt@prec& (0+255),7,b
  3652  0014A2  072A               	decf	(__doprnt@prec+1)& (0+255),f,b
  3653  0014A4                     l9272:
  3654                           
  3655                           ; BSR set to: 1
  3656                           ;doprnt.c: 1345: if(width && flag & 0x03)
  3657  0014A4  0101               	movlb	1	; () banked
  3658  0014A6  5124               	movf	__doprnt@width& (0+255),w,b
  3659  0014A8  0101               	movlb	1	; () banked
  3660  0014AA  1125               	iorwf	(__doprnt@width+1)& (0+255),w,b
  3661  0014AC  B4D8               	btfsc	status,2,c
  3662  0014AE  D014               	goto	l9278
  3663                           
  3664                           ; BSR set to: 1
  3665  0014B0  0E03               	movlw	3
  3666  0014B2  0101               	movlb	1	; () banked
  3667  0014B4  1522               	andwf	__doprnt@flag& (0+255),w,b
  3668  0014B6  0101               	movlb	1	; () banked
  3669  0014B8  6F0F               	movwf	??__doprnt& (0+255),b
  3670  0014BA  0E00               	movlw	0
  3671  0014BC  0101               	movlb	1	; () banked
  3672  0014BE  1523               	andwf	(__doprnt@flag+1)& (0+255),w,b
  3673  0014C0  0101               	movlb	1	; () banked
  3674  0014C2  6F10               	movwf	(??__doprnt+1)& (0+255),b
  3675  0014C4  0101               	movlb	1	; () banked
  3676  0014C6  510F               	movf	??__doprnt& (0+255),w,b
  3677  0014C8  0101               	movlb	1	; () banked
  3678  0014CA  1110               	iorwf	(??__doprnt+1)& (0+255),w,b
  3679  0014CC  B4D8               	btfsc	status,2,c
  3680  0014CE  D004               	goto	l9278
  3681                           
  3682                           ; BSR set to: 1
  3683                           ;doprnt.c: 1346: width--;
  3684  0014D0  0101               	movlb	1	; () banked
  3685  0014D2  0724               	decf	__doprnt@width& (0+255),f,b
  3686  0014D4  A0D8               	btfss	status,0,c
  3687  0014D6  0725               	decf	(__doprnt@width+1)& (0+255),f,b
  3688  0014D8                     l9278:
  3689                           
  3690                           ; BSR set to: 1
  3691                           ;doprnt.c: 1348: if(flag & 0x4000) {
  3692  0014D8  0101               	movlb	1	; () banked
  3693  0014DA  AD23               	btfss	(__doprnt@flag+1)& (0+255),6,b
  3694  0014DC  D01E               	goto	l9286
  3695                           
  3696                           ; BSR set to: 1
  3697                           ;doprnt.c: 1349: if(width > prec)
  3698  0014DE  0101               	movlb	1	; () banked
  3699  0014E0  5124               	movf	__doprnt@width& (0+255),w,b
  3700  0014E2  0101               	movlb	1	; () banked
  3701  0014E4  5D29               	subwf	__doprnt@prec& (0+255),w,b
  3702  0014E6  0101               	movlb	1	; () banked
  3703  0014E8  512A               	movf	(__doprnt@prec+1)& (0+255),w,b
  3704  0014EA  0A80               	xorlw	128
  3705  0014EC  0101               	movlb	1	; () banked
  3706  0014EE  6F0F               	movwf	??__doprnt& (0+255),b
  3707  0014F0  0101               	movlb	1	; () banked
  3708  0014F2  5125               	movf	(__doprnt@width+1)& (0+255),w,b
  3709  0014F4  0A80               	xorlw	128
  3710  0014F6  0101               	movlb	1	; () banked
  3711  0014F8  590F               	subwfb	??__doprnt& (0+255),w,b
  3712  0014FA  B0D8               	btfsc	status,0,c
  3713  0014FC  D009               	goto	l9284
  3714                           
  3715                           ; BSR set to: 1
  3716                           ;doprnt.c: 1350: width -= prec;
  3717  0014FE  0101               	movlb	1	; () banked
  3718  001500  5129               	movf	__doprnt@prec& (0+255),w,b
  3719  001502  0101               	movlb	1	; () banked
  3720  001504  5F24               	subwf	__doprnt@width& (0+255),f,b
  3721  001506  0101               	movlb	1	; () banked
  3722  001508  512A               	movf	(__doprnt@prec+1)& (0+255),w,b
  3723  00150A  0101               	movlb	1	; () banked
  3724  00150C  5B25               	subwfb	(__doprnt@width+1)& (0+255),f,b
  3725  00150E  D005               	goto	l9286
  3726  001510                     l9284:
  3727                           
  3728                           ; BSR set to: 1
  3729                           ;doprnt.c: 1351: else
  3730                           ;doprnt.c: 1352: width = 0;
  3731  001510  0E00               	movlw	0
  3732  001512  0101               	movlb	1	; () banked
  3733  001514  6F25               	movwf	(__doprnt@width+1)& (0+255),b
  3734  001516  0E00               	movlw	0
  3735  001518  6F24               	movwf	__doprnt@width& (0+255),b
  3736  00151A                     l9286:
  3737                           
  3738                           ; BSR set to: 1
  3739                           ;doprnt.c: 1353: }
  3740                           ;doprnt.c: 1381: if(width > c)
  3741  00151A  0E80               	movlw	128
  3742  00151C  0101               	movlb	1	; () banked
  3743  00151E  BF2B               	btfsc	__doprnt@c& (0+255),7,b
  3744  001520  0E7F               	movlw	127
  3745  001522  0101               	movlb	1	; () banked
  3746  001524  6F0F               	movwf	??__doprnt& (0+255),b
  3747  001526  0101               	movlb	1	; () banked
  3748  001528  5124               	movf	__doprnt@width& (0+255),w,b
  3749  00152A  0101               	movlb	1	; () banked
  3750  00152C  5D2B               	subwf	__doprnt@c& (0+255),w,b
  3751  00152E  0101               	movlb	1	; () banked
  3752  001530  5125               	movf	(__doprnt@width+1)& (0+255),w,b
  3753  001532  0A80               	xorlw	128
  3754  001534  0101               	movlb	1	; () banked
  3755  001536  590F               	subwfb	??__doprnt& (0+255),w,b
  3756  001538  B0D8               	btfsc	status,0,c
  3757  00153A  D00B               	goto	l9290
  3758                           
  3759                           ; BSR set to: 1
  3760                           ;doprnt.c: 1382: width -= c;
  3761  00153C  0101               	movlb	1	; () banked
  3762  00153E  512B               	movf	__doprnt@c& (0+255),w,b
  3763  001540  0101               	movlb	1	; () banked
  3764  001542  5F24               	subwf	__doprnt@width& (0+255),f,b
  3765  001544  0E00               	movlw	0
  3766  001546  0101               	movlb	1	; () banked
  3767  001548  BF2B               	btfsc	__doprnt@c& (0+255),7,b
  3768  00154A  0EFF               	movlw	255
  3769  00154C  0101               	movlb	1	; () banked
  3770  00154E  5B25               	subwfb	(__doprnt@width+1)& (0+255),f,b
  3771  001550  D005               	goto	l9292
  3772  001552                     l9290:
  3773                           
  3774                           ; BSR set to: 1
  3775                           ;doprnt.c: 1383: else
  3776                           ;doprnt.c: 1384: width = 0;
  3777  001552  0E00               	movlw	0
  3778  001554  0101               	movlb	1	; () banked
  3779  001556  6F25               	movwf	(__doprnt@width+1)& (0+255),b
  3780  001558  0E00               	movlw	0
  3781  00155A  6F24               	movwf	__doprnt@width& (0+255),b
  3782  00155C                     l9292:
  3783                           
  3784                           ; BSR set to: 1
  3785                           ;doprnt.c: 1387: if(flag & 0x04) {
  3786  00155C  0101               	movlb	1	; () banked
  3787  00155E  A522               	btfss	__doprnt@flag& (0+255),2,b
  3788  001560  D083               	goto	l9316
  3789                           
  3790                           ; BSR set to: 1
  3791                           ;doprnt.c: 1392: if(flag & 0x03)
  3792  001562  0E03               	movlw	3
  3793  001564  0101               	movlb	1	; () banked
  3794  001566  1522               	andwf	__doprnt@flag& (0+255),w,b
  3795  001568  0101               	movlb	1	; () banked
  3796  00156A  6F0F               	movwf	??__doprnt& (0+255),b
  3797  00156C  0E00               	movlw	0
  3798  00156E  0101               	movlb	1	; () banked
  3799  001570  1523               	andwf	(__doprnt@flag+1)& (0+255),w,b
  3800  001572  0101               	movlb	1	; () banked
  3801  001574  6F10               	movwf	(??__doprnt+1)& (0+255),b
  3802  001576  0101               	movlb	1	; () banked
  3803  001578  510F               	movf	??__doprnt& (0+255),w,b
  3804  00157A  0101               	movlb	1	; () banked
  3805  00157C  1110               	iorwf	(??__doprnt+1)& (0+255),w,b
  3806  00157E  B4D8               	btfsc	status,2,c
  3807  001580  D034               	goto	l9304
  3808                           
  3809                           ; BSR set to: 1
  3810                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  3811  001582  0101               	movlb	1	; () banked
  3812  001584  EE20 F002          	lfsr	2,2
  3813  001588  5109               	movf	__doprnt@pb& (0+255),w,b
  3814  00158A  26D9               	addwf	fsr2l,f,c
  3815  00158C  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3816  00158E  22DA               	addwfc	fsr2h,f,c
  3817  001590  50DE               	movf	postinc2,w,c
  3818  001592  10DE               	iorwf	postinc2,w,c
  3819  001594  B4D8               	btfsc	status,2,c
  3820  001596  D014               	goto	l9300
  3821                           
  3822                           ; BSR set to: 1
  3823  001598  0101               	movlb	1	; () banked
  3824  00159A  EE20 F002          	lfsr	2,2
  3825  00159E  5109               	movf	__doprnt@pb& (0+255),w,b
  3826  0015A0  26D9               	addwf	fsr2l,f,c
  3827  0015A2  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3828  0015A4  22DA               	addwfc	fsr2h,f,c
  3829  0015A6  D801               	call	u15518
  3830  0015A8  D020               	goto	l9304
  3831  0015AA                     u15518:
  3832  0015AA  0005               	push	
  3833  0015AC  6EFA               	movwf	pclath,c
  3834  0015AE  50DE               	movf	postinc2,w,c
  3835  0015B0  6EFD               	movwf	tosl,c
  3836  0015B2  50DE               	movf	postinc2,w,c
  3837  0015B4  6EFE               	movwf	tosh,c
  3838  0015B6  50F8               	movf	tblptru,w,c
  3839  0015B8  6EFF               	movwf	tosu,c
  3840  0015BA  50FA               	movf	pclath,w,c
  3841  0015BC  0E2D               	movlw	45
  3842  0015BE  0012               	return		;indir
  3843  0015C0                     l9300:
  3844  0015C0  C109  FFD9         	movff	__doprnt@pb,fsr2l
  3845  0015C4  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3846  0015C8  CFDE F10F          	movff	postinc2,??__doprnt
  3847  0015CC  CFDD F110          	movff	postdec2,??__doprnt+1
  3848  0015D0  C10F  FFD9         	movff	??__doprnt,fsr2l
  3849  0015D4  C110  FFDA         	movff	??__doprnt+1,fsr2h
  3850  0015D8  0E2D               	movlw	45
  3851  0015DA  6EDF               	movwf	indf2,c
  3852  0015DC  C109  FFD9         	movff	__doprnt@pb,fsr2l
  3853  0015E0  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3854  0015E4  2ADE               	incf	postinc2,f,c
  3855  0015E6  0E00               	movlw	0
  3856  0015E8  22DD               	addwfc	postdec2,f,c
  3857  0015EA                     l9304:
  3858                           
  3859                           ;doprnt.c: 1415: if(width)
  3860  0015EA  0101               	movlb	1	; () banked
  3861  0015EC  5124               	movf	__doprnt@width& (0+255),w,b
  3862  0015EE  0101               	movlb	1	; () banked
  3863  0015F0  1125               	iorwf	(__doprnt@width+1)& (0+255),w,b
  3864  0015F2  B4D8               	btfsc	status,2,c
  3865  0015F4  D131               	goto	l9348
  3866                           
  3867                           ; BSR set to: 1
  3868                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  3869                           
  3870                           ; BSR set to: 1
  3871                           
  3872                           ;doprnt.c: 1416: do
  3873  0015F6  0101               	movlb	1	; () banked
  3874  0015F8  EE20 F002          	lfsr	2,2
  3875  0015FC  5109               	movf	__doprnt@pb& (0+255),w,b
  3876  0015FE  26D9               	addwf	fsr2l,f,c
  3877  001600  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3878  001602  22DA               	addwfc	fsr2h,f,c
  3879  001604  50DE               	movf	postinc2,w,c
  3880  001606  10DE               	iorwf	postinc2,w,c
  3881  001608  B4D8               	btfsc	status,2,c
  3882  00160A  D014               	goto	l9310
  3883                           
  3884                           ; BSR set to: 1
  3885  00160C  0101               	movlb	1	; () banked
  3886  00160E  EE20 F002          	lfsr	2,2
  3887  001612  5109               	movf	__doprnt@pb& (0+255),w,b
  3888  001614  26D9               	addwf	fsr2l,f,c
  3889  001616  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3890  001618  22DA               	addwfc	fsr2h,f,c
  3891  00161A  D801               	call	u15548
  3892  00161C  D020               	goto	l9314
  3893  00161E                     u15548:
  3894  00161E  0005               	push	
  3895  001620  6EFA               	movwf	pclath,c
  3896  001622  50DE               	movf	postinc2,w,c
  3897  001624  6EFD               	movwf	tosl,c
  3898  001626  50DE               	movf	postinc2,w,c
  3899  001628  6EFE               	movwf	tosh,c
  3900  00162A  50F8               	movf	tblptru,w,c
  3901  00162C  6EFF               	movwf	tosu,c
  3902  00162E  50FA               	movf	pclath,w,c
  3903  001630  0E30               	movlw	48
  3904  001632  0012               	return		;indir
  3905  001634                     l9310:
  3906  001634  C109  FFD9         	movff	__doprnt@pb,fsr2l
  3907  001638  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3908  00163C  CFDE F10F          	movff	postinc2,??__doprnt
  3909  001640  CFDD F110          	movff	postdec2,??__doprnt+1
  3910  001644  C10F  FFD9         	movff	??__doprnt,fsr2l
  3911  001648  C110  FFDA         	movff	??__doprnt+1,fsr2h
  3912  00164C  0E30               	movlw	48
  3913  00164E  6EDF               	movwf	indf2,c
  3914  001650  C109  FFD9         	movff	__doprnt@pb,fsr2l
  3915  001654  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3916  001658  2ADE               	incf	postinc2,f,c
  3917  00165A  0E00               	movlw	0
  3918  00165C  22DD               	addwfc	postdec2,f,c
  3919  00165E                     l9314:
  3920                           
  3921                           ;doprnt.c: 1418: while(--width);
  3922  00165E  0101               	movlb	1	; () banked
  3923  001660  0724               	decf	__doprnt@width& (0+255),f,b
  3924  001662  A0D8               	btfss	status,0,c
  3925  001664  0725               	decf	(__doprnt@width+1)& (0+255),f,b
  3926  001666  D7C1               	goto	l9304
  3927  001668                     l9316:
  3928                           
  3929                           ; BSR set to: 1
  3930                           ;doprnt.c: 1422: {
  3931                           ;doprnt.c: 1424: if(width
  3932                           ;doprnt.c: 1428: )
  3933  001668  0101               	movlb	1	; () banked
  3934  00166A  5124               	movf	__doprnt@width& (0+255),w,b
  3935  00166C  0101               	movlb	1	; () banked
  3936  00166E  1125               	iorwf	(__doprnt@width+1)& (0+255),w,b
  3937  001670  B4D8               	btfsc	status,2,c
  3938  001672  D03E               	goto	l9328
  3939  001674                     l9318:
  3940                           
  3941                           ; BSR set to: 1
  3942                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  3943  001674  0101               	movlb	1	; () banked
  3944  001676  EE20 F002          	lfsr	2,2
  3945  00167A  5109               	movf	__doprnt@pb& (0+255),w,b
  3946  00167C  26D9               	addwf	fsr2l,f,c
  3947  00167E  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3948  001680  22DA               	addwfc	fsr2h,f,c
  3949  001682  50DE               	movf	postinc2,w,c
  3950  001684  10DE               	iorwf	postinc2,w,c
  3951  001686  B4D8               	btfsc	status,2,c
  3952  001688  D014               	goto	l9322
  3953                           
  3954                           ; BSR set to: 1
  3955  00168A  0101               	movlb	1	; () banked
  3956  00168C  EE20 F002          	lfsr	2,2
  3957  001690  5109               	movf	__doprnt@pb& (0+255),w,b
  3958  001692  26D9               	addwf	fsr2l,f,c
  3959  001694  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3960  001696  22DA               	addwfc	fsr2h,f,c
  3961  001698  D801               	call	u15588
  3962  00169A  D020               	goto	l9326
  3963  00169C                     u15588:
  3964  00169C  0005               	push	
  3965  00169E  6EFA               	movwf	pclath,c
  3966  0016A0  50DE               	movf	postinc2,w,c
  3967  0016A2  6EFD               	movwf	tosl,c
  3968  0016A4  50DE               	movf	postinc2,w,c
  3969  0016A6  6EFE               	movwf	tosh,c
  3970  0016A8  50F8               	movf	tblptru,w,c
  3971  0016AA  6EFF               	movwf	tosu,c
  3972  0016AC  50FA               	movf	pclath,w,c
  3973  0016AE  0E20               	movlw	32
  3974  0016B0  0012               	return		;indir
  3975  0016B2                     l9322:
  3976  0016B2  C109  FFD9         	movff	__doprnt@pb,fsr2l
  3977  0016B6  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3978  0016BA  CFDE F10F          	movff	postinc2,??__doprnt
  3979  0016BE  CFDD F110          	movff	postdec2,??__doprnt+1
  3980  0016C2  C10F  FFD9         	movff	??__doprnt,fsr2l
  3981  0016C6  C110  FFDA         	movff	??__doprnt+1,fsr2h
  3982  0016CA  0E20               	movlw	32
  3983  0016CC  6EDF               	movwf	indf2,c
  3984  0016CE  C109  FFD9         	movff	__doprnt@pb,fsr2l
  3985  0016D2  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3986  0016D6  2ADE               	incf	postinc2,f,c
  3987  0016D8  0E00               	movlw	0
  3988  0016DA  22DD               	addwfc	postdec2,f,c
  3989  0016DC                     l9326:
  3990                           
  3991                           ;doprnt.c: 1431: while(--width);
  3992  0016DC  0101               	movlb	1	; () banked
  3993  0016DE  0724               	decf	__doprnt@width& (0+255),f,b
  3994  0016E0  A0D8               	btfss	status,0,c
  3995  0016E2  0725               	decf	(__doprnt@width+1)& (0+255),f,b
  3996  0016E4  0101               	movlb	1	; () banked
  3997  0016E6  5124               	movf	__doprnt@width& (0+255),w,b
  3998  0016E8  0101               	movlb	1	; () banked
  3999  0016EA  1125               	iorwf	(__doprnt@width+1)& (0+255),w,b
  4000  0016EC  A4D8               	btfss	status,2,c
  4001  0016EE  D7C2               	goto	l9318
  4002  0016F0                     l9328:
  4003                           
  4004                           ; BSR set to: 1
  4005                           ;doprnt.c: 1438: if(flag & 0x03)
  4006  0016F0  0E03               	movlw	3
  4007  0016F2  0101               	movlb	1	; () banked
  4008  0016F4  1522               	andwf	__doprnt@flag& (0+255),w,b
  4009  0016F6  0101               	movlb	1	; () banked
  4010  0016F8  6F0F               	movwf	??__doprnt& (0+255),b
  4011  0016FA  0E00               	movlw	0
  4012  0016FC  0101               	movlb	1	; () banked
  4013  0016FE  1523               	andwf	(__doprnt@flag+1)& (0+255),w,b
  4014  001700  0101               	movlb	1	; () banked
  4015  001702  6F10               	movwf	(??__doprnt+1)& (0+255),b
  4016  001704  0101               	movlb	1	; () banked
  4017  001706  510F               	movf	??__doprnt& (0+255),w,b
  4018  001708  0101               	movlb	1	; () banked
  4019  00170A  1110               	iorwf	(??__doprnt+1)& (0+255),w,b
  4020  00170C  B4D8               	btfsc	status,2,c
  4021  00170E  D0A4               	goto	l9348
  4022                           
  4023                           ; BSR set to: 1
  4024                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  4025  001710  0101               	movlb	1	; () banked
  4026  001712  EE20 F002          	lfsr	2,2
  4027  001716  5109               	movf	__doprnt@pb& (0+255),w,b
  4028  001718  26D9               	addwf	fsr2l,f,c
  4029  00171A  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4030  00171C  22DA               	addwfc	fsr2h,f,c
  4031  00171E  50DE               	movf	postinc2,w,c
  4032  001720  10DE               	iorwf	postinc2,w,c
  4033  001722  B4D8               	btfsc	status,2,c
  4034  001724  D014               	goto	l9334
  4035                           
  4036                           ; BSR set to: 1
  4037  001726  0101               	movlb	1	; () banked
  4038  001728  EE20 F002          	lfsr	2,2
  4039  00172C  5109               	movf	__doprnt@pb& (0+255),w,b
  4040  00172E  26D9               	addwf	fsr2l,f,c
  4041  001730  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4042  001732  22DA               	addwfc	fsr2h,f,c
  4043  001734  D801               	call	u15628
  4044  001736  D090               	goto	l9348
  4045  001738                     u15628:
  4046  001738  0005               	push	
  4047  00173A  6EFA               	movwf	pclath,c
  4048  00173C  50DE               	movf	postinc2,w,c
  4049  00173E  6EFD               	movwf	tosl,c
  4050  001740  50DE               	movf	postinc2,w,c
  4051  001742  6EFE               	movwf	tosh,c
  4052  001744  50F8               	movf	tblptru,w,c
  4053  001746  6EFF               	movwf	tosu,c
  4054  001748  50FA               	movf	pclath,w,c
  4055  00174A  0E2D               	movlw	45
  4056  00174C  0012               	return		;indir
  4057  00174E                     l9334:
  4058  00174E  C109  FFD9         	movff	__doprnt@pb,fsr2l
  4059  001752  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4060  001756  CFDE F10F          	movff	postinc2,??__doprnt
  4061  00175A  CFDD F110          	movff	postdec2,??__doprnt+1
  4062  00175E  C10F  FFD9         	movff	??__doprnt,fsr2l
  4063  001762  C110  FFDA         	movff	??__doprnt+1,fsr2h
  4064  001766  0E2D               	movlw	45
  4065  001768  6EDF               	movwf	indf2,c
  4066  00176A  D06F               	goto	l9346
  4067  00176C                     l9338:
  4068                           
  4069                           ;doprnt.c: 1478: {
  4070                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4071  00176C  C129  F10F         	movff	__doprnt@prec,??__doprnt
  4072  001770  C12A  F110         	movff	__doprnt@prec+1,??__doprnt+1
  4073  001774  0101               	movlb	1	; () banked
  4074  001776  90D8               	bcf	status,0,c
  4075  001778  370F               	rlcf	??__doprnt& (0+255),f,b
  4076  00177A  3710               	rlcf	(??__doprnt+1)& (0+255),f,b
  4077  00177C  0101               	movlb	1	; () banked
  4078  00177E  90D8               	bcf	status,0,c
  4079  001780  370F               	rlcf	??__doprnt& (0+255),f,b
  4080  001782  3710               	rlcf	(??__doprnt+1)& (0+255),f,b
  4081  001784  0E01               	movlw	low _dpowers
  4082  001786  0101               	movlb	1	; () banked
  4083  001788  250F               	addwf	??__doprnt& (0+255),w,b
  4084  00178A  6EF6               	movwf	tblptrl,c
  4085  00178C  0E06               	movlw	high _dpowers
  4086  00178E  2110               	addwfc	(??__doprnt+1)& (0+255),w,b
  4087  001790  6EF7               	movwf	tblptrh,c
  4088  001792                     	if	0	;There are less than 3 active tblptr bytes
  4089  001792                     	endif
  4090  001792  0009               	tblrd		*+
  4091  001794  CFF5 F089          	movff	tablat,___lldiv@divisor
  4092  001798  0009               	tblrd		*+
  4093  00179A  CFF5 F08A          	movff	tablat,___lldiv@divisor+1
  4094  00179E  0009               	tblrd		*+
  4095  0017A0  CFF5 F08B          	movff	tablat,___lldiv@divisor+2
  4096  0017A4  000A               	tblrd		*-
  4097  0017A6  CFF5 F08C          	movff	tablat,___lldiv@divisor+3
  4098  0017AA  C118  F085         	movff	__doprnt@val,___lldiv@dividend
  4099  0017AE  C119  F086         	movff	__doprnt@val+1,___lldiv@dividend+1
  4100  0017B2  C11A  F087         	movff	__doprnt@val+2,___lldiv@dividend+2
  4101  0017B6  C11B  F088         	movff	__doprnt@val+3,___lldiv@dividend+3
  4102  0017BA  ECA0  F025         	call	___lldiv
  4103  0017BE  C085  F092         	movff	?___lldiv,___llmod@dividend
  4104  0017C2  C086  F093         	movff	?___lldiv+1,___llmod@dividend+1
  4105  0017C6  C087  F094         	movff	?___lldiv+2,___llmod@dividend+2
  4106  0017CA  C088  F095         	movff	?___lldiv+3,___llmod@dividend+3
  4107  0017CE  0E0A               	movlw	10
  4108  0017D0  0100               	movlb	0	; () banked
  4109  0017D2  6F96               	movwf	___llmod@divisor& (0+255),b
  4110  0017D4  0E00               	movlw	0
  4111  0017D6  6F97               	movwf	(___llmod@divisor+1)& (0+255),b
  4112  0017D8  0E00               	movlw	0
  4113  0017DA  6F98               	movwf	(___llmod@divisor+2)& (0+255),b
  4114  0017DC  0E00               	movlw	0
  4115  0017DE  6F99               	movwf	(___llmod@divisor+3)& (0+255),b
  4116  0017E0  ECFA  F026         	call	___llmod	;wreg free
  4117  0017E4  0100               	movlb	0	; () banked
  4118  0017E6  5192               	movf	?___llmod& (0+255),w,b
  4119  0017E8  0F30               	addlw	48
  4120  0017EA  0101               	movlb	1	; () banked
  4121  0017EC  6F2B               	movwf	__doprnt@c& (0+255),b
  4122                           
  4123                           ; BSR set to: 1
  4124                           ;doprnt.c: 1523: }
  4125                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  4126  0017EE  0101               	movlb	1	; () banked
  4127  0017F0  EE20 F002          	lfsr	2,2
  4128  0017F4  5109               	movf	__doprnt@pb& (0+255),w,b
  4129  0017F6  26D9               	addwf	fsr2l,f,c
  4130  0017F8  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4131  0017FA  22DA               	addwfc	fsr2h,f,c
  4132  0017FC  50DE               	movf	postinc2,w,c
  4133  0017FE  10DE               	iorwf	postinc2,w,c
  4134  001800  B4D8               	btfsc	status,2,c
  4135  001802  D015               	goto	l9344
  4136                           
  4137                           ; BSR set to: 1
  4138  001804  0101               	movlb	1	; () banked
  4139  001806  EE20 F002          	lfsr	2,2
  4140  00180A  5109               	movf	__doprnt@pb& (0+255),w,b
  4141  00180C  26D9               	addwf	fsr2l,f,c
  4142  00180E  510A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4143  001810  22DA               	addwfc	fsr2h,f,c
  4144  001812  D801               	call	u15648
  4145  001814  D021               	goto	l9348
  4146  001816                     u15648:
  4147  001816  0005               	push	
  4148  001818  6EFA               	movwf	pclath,c
  4149  00181A  50DE               	movf	postinc2,w,c
  4150  00181C  6EFD               	movwf	tosl,c
  4151  00181E  50DE               	movf	postinc2,w,c
  4152  001820  6EFE               	movwf	tosh,c
  4153  001822  50F8               	movf	tblptru,w,c
  4154  001824  6EFF               	movwf	tosu,c
  4155  001826  50FA               	movf	pclath,w,c
  4156  001828  0101               	movlb	1	; () banked
  4157  00182A  512B               	movf	__doprnt@c& (0+255),w,b
  4158  00182C  0012               	return		;indir
  4159  00182E                     l9344:
  4160  00182E  C109  FFD9         	movff	__doprnt@pb,fsr2l
  4161  001832  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4162  001836  CFDE F10F          	movff	postinc2,??__doprnt
  4163  00183A  CFDD F110          	movff	postdec2,??__doprnt+1
  4164  00183E  C10F  FFD9         	movff	??__doprnt,fsr2l
  4165  001842  C110  FFDA         	movff	??__doprnt+1,fsr2h
  4166  001846  C12B  FFDF         	movff	__doprnt@c,indf2
  4167  00184A                     l9346:
  4168  00184A  C109  FFD9         	movff	__doprnt@pb,fsr2l
  4169  00184E  C10A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4170  001852  2ADE               	incf	postinc2,f,c
  4171  001854  0E00               	movlw	0
  4172  001856  22DD               	addwfc	postdec2,f,c
  4173  001858                     l9348:
  4174  001858  0101               	movlb	1	; () banked
  4175  00185A  0729               	decf	__doprnt@prec& (0+255),f,b
  4176  00185C  A0D8               	btfss	status,0,c
  4177  00185E  072A               	decf	(__doprnt@prec+1)& (0+255),f,b
  4178  001860  0101               	movlb	1	; () banked
  4179  001862  2929               	incf	__doprnt@prec& (0+255),w,b
  4180  001864  E183               	bnz	l9338
  4181  001866  0101               	movlb	1	; () banked
  4182  001868  292A               	incf	(__doprnt@prec+1)& (0+255),w,b
  4183  00186A  A4D8               	btfss	status,2,c
  4184  00186C  D77F               	goto	l9338
  4185  00186E                     l9350:
  4186  00186E  C10B  FFF6         	movff	__doprnt@f,tblptrl
  4187  001872  C10C  FFF7         	movff	__doprnt@f+1,tblptrh
  4188  001876  0101               	movlb	1	; () banked
  4189  001878  4B0B               	infsnz	__doprnt@f& (0+255),f,b
  4190  00187A  2B0C               	incf	(__doprnt@f+1)& (0+255),f,b
  4191  00187C                     	if	0	;tblptru may be non-zero
  4192  00187C                     	endif
  4193  00187C                     	if	0	;tblptru may be non-zero
  4194  00187C                     	endif
  4195  00187C  0008               	tblrd		*
  4196  00187E  CFF5 F12B          	movff	tablat,__doprnt@c
  4197  001882  0101               	movlb	1	; () banked
  4198  001884  512B               	movf	__doprnt@c& (0+255),w,b
  4199  001886  A4D8               	btfss	status,2,c
  4200  001888  EF66  F003         	goto	l8974
  4201  00188C                     l9352:
  4202                           
  4203                           ; BSR set to: 1
  4204                           ;doprnt.c: 1540: return 0;
  4205  00188C  0E00               	movlw	0
  4206  00188E  0101               	movlb	1	; () banked
  4207  001890  6F0A               	movwf	(?__doprnt+1)& (0+255),b
  4208  001892  0E00               	movlw	0
  4209  001894  6F09               	movwf	?__doprnt& (0+255),b
  4210  001896  0012               	return	
  4211  001898                     __end_of__doprnt:
  4212                           	opt stack 0
  4213                           tosu	equ	0xFFF
  4214                           tosh	equ	0xFFE
  4215                           tosl	equ	0xFFD
  4216                           pclath	equ	0xFFA
  4217                           tblptru	equ	0xFF8
  4218                           tblptrh	equ	0xFF7
  4219                           tblptrl	equ	0xFF6
  4220                           tablat	equ	0xFF5
  4221                           prodh	equ	0xFF4
  4222                           prodl	equ	0xFF3
  4223                           intcon	equ	0xFF2
  4224                           postinc0	equ	0xFEE
  4225                           wreg	equ	0xFE8
  4226                           indf2	equ	0xFDF
  4227                           postinc2	equ	0xFDE
  4228                           postdec2	equ	0xFDD
  4229                           fsr2h	equ	0xFDA
  4230                           fsr2l	equ	0xFD9
  4231                           status	equ	0xFD8
  4232                           
  4233 ;; *************** function _scale *****************
  4234 ;; Defined at:
  4235 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;  scl             1    wreg     char 
  4238 ;; Auto vars:     Size  Location     Type
  4239 ;;  scl             1   78[BANK0 ] char 
  4240 ;; Return value:  Size  Location     Type
  4241 ;;                  3   72[BANK0 ] char 
  4242 ;; Registers used:
  4243 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4244 ;; Tracked objects:
  4245 ;;		On entry : 0/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4249 ;;      Params:         0       3       0       0       0       0       0
  4250 ;;      Locals:         0       4       0       0       0       0       0
  4251 ;;      Temps:          0       0       0       0       0       0       0
  4252 ;;      Totals:         0       7       0       0       0       0       0
  4253 ;;Total ram usage:        7 bytes
  4254 ;; Hardware stack levels used:    1
  4255 ;; Hardware stack levels required when called:    9
  4256 ;; This function calls:
  4257 ;;		___awdiv
  4258 ;;		___awmod
  4259 ;;		___ftmul
  4260 ;;		___wmul
  4261 ;; This function is called by:
  4262 ;;		__doprnt
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text3
  4267  002974                     __ptext3:
  4268                           	opt stack 0
  4269  002974                     _scale:
  4270                           	opt stack 19
  4271                           
  4272                           ; BSR set to: 1
  4273                           ;incstack = 0
  4274                           ;scale@scl stored from wreg
  4275  002974  0100               	movlb	0	; () banked
  4276  002976  6FAE               	movwf	scale@scl& (0+255),b
  4277                           
  4278                           ;doprnt.c: 428: if(scl < 0) {
  4279  002978  0100               	movlb	0	; () banked
  4280  00297A  AFAE               	btfss	scale@scl& (0+255),7,b
  4281  00297C  D12A               	goto	l5928
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;doprnt.c: 429: scl = -scl;
  4285  00297E  0100               	movlb	0	; () banked
  4286  002980  6DAE               	negf	scale@scl& (0+255),b
  4287                           
  4288                           ;doprnt.c: 430: if(scl>=110)
  4289  002982  0100               	movlb	0	; () banked
  4290  002984  51AE               	movf	scale@scl& (0+255),w,b
  4291  002986  0A80               	xorlw	128
  4292  002988  0F12               	addlw	-238
  4293  00298A  A0D8               	btfss	status,0,c
  4294  00298C  D0AC               	goto	l5918
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4298  00298E  0E00               	movlw	0
  4299  002990  0100               	movlb	0	; () banked
  4300  002992  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4301  002994  0E03               	movlw	3
  4302  002996  6F95               	movwf	___wmul@multiplicand& (0+255),b
  4303  002998  0E00               	movlw	0
  4304  00299A  0100               	movlb	0	; () banked
  4305  00299C  6F8E               	movwf	(___awdiv@divisor+1)& (0+255),b
  4306  00299E  0E0A               	movlw	10
  4307  0029A0  6F8D               	movwf	___awdiv@divisor& (0+255),b
  4308  0029A2  0E00               	movlw	0
  4309  0029A4  0100               	movlb	0	; () banked
  4310  0029A6  6F88               	movwf	(___awmod@divisor+1)& (0+255),b
  4311  0029A8  0E64               	movlw	100
  4312  0029AA  6F87               	movwf	___awmod@divisor& (0+255),b
  4313  0029AC  0100               	movlb	0	; () banked
  4314  0029AE  51AE               	movf	scale@scl& (0+255),w,b
  4315  0029B0  0100               	movlb	0	; () banked
  4316  0029B2  6F85               	movwf	___awmod@dividend& (0+255),b
  4317  0029B4  6B86               	clrf	(___awmod@dividend+1)& (0+255),b
  4318  0029B6  BF85               	btfsc	___awmod@dividend& (0+255),7,b
  4319  0029B8  0786               	decf	(___awmod@dividend+1)& (0+255),f,b
  4320  0029BA  ECA9  F026         	call	___awmod
  4321  0029BE  C085  F08B         	movff	?___awmod,___awdiv@dividend
  4322  0029C2  C086  F08C         	movff	?___awmod+1,___awdiv@dividend+1
  4323  0029C6  EC41  F025         	call	___awdiv	;wreg free
  4324  0029CA  0E09               	movlw	9
  4325  0029CC  0100               	movlb	0	; () banked
  4326  0029CE  258B               	addwf	?___awdiv& (0+255),w,b
  4327  0029D0  0100               	movlb	0	; () banked
  4328  0029D2  6F93               	movwf	___wmul@multiplier& (0+255),b
  4329  0029D4  0E00               	movlw	0
  4330  0029D6  0100               	movlb	0	; () banked
  4331  0029D8  218C               	addwfc	(?___awdiv+1)& (0+255),w,b
  4332  0029DA  0100               	movlb	0	; () banked
  4333  0029DC  6F94               	movwf	(___wmul@multiplier+1)& (0+255),b
  4334  0029DE  EC21  F02A         	call	___wmul	;wreg free
  4335  0029E2  0E29               	movlw	low __npowers_
  4336  0029E4  0100               	movlb	0	; () banked
  4337  0029E6  2593               	addwf	?___wmul& (0+255),w,b
  4338  0029E8  6EF6               	movwf	tblptrl,c
  4339  0029EA  0E06               	movlw	high __npowers_
  4340  0029EC  0100               	movlb	0	; () banked
  4341  0029EE  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  4342  0029F0  6EF7               	movwf	tblptrh,c
  4343  0029F2                     	if	0	;There are less than 3 active tblptr bytes
  4344  0029F2                     	endif
  4345  0029F2  0009               	tblrd		*+
  4346  0029F4  CFF5 F09C          	movff	tablat,___ftmul@f2
  4347  0029F8  0009               	tblrd		*+
  4348  0029FA  CFF5 F09D          	movff	tablat,___ftmul@f2+1
  4349  0029FE  000A               	tblrd		*-
  4350  002A00  CFF5 F09E          	movff	tablat,___ftmul@f2+2
  4351  002A04  0E00               	movlw	0
  4352  002A06  0100               	movlb	0	; () banked
  4353  002A08  6F8E               	movwf	(___awdiv@divisor+1)& (0+255),b
  4354  002A0A  0E64               	movlw	100
  4355  002A0C  6F8D               	movwf	___awdiv@divisor& (0+255),b
  4356  002A0E  0100               	movlb	0	; () banked
  4357  002A10  51AE               	movf	scale@scl& (0+255),w,b
  4358  002A12  0100               	movlb	0	; () banked
  4359  002A14  6F8B               	movwf	___awdiv@dividend& (0+255),b
  4360  002A16  6B8C               	clrf	(___awdiv@dividend+1)& (0+255),b
  4361  002A18  BF8B               	btfsc	___awdiv@dividend& (0+255),7,b
  4362  002A1A  078C               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4363  002A1C  EC41  F025         	call	___awdiv	;wreg free
  4364  002A20  0E12               	movlw	18
  4365  002A22  0100               	movlb	0	; () banked
  4366  002A24  258B               	addwf	?___awdiv& (0+255),w,b
  4367  002A26  0100               	movlb	0	; () banked
  4368  002A28  6F93               	movwf	___wmul@multiplier& (0+255),b
  4369  002A2A  0E00               	movlw	0
  4370  002A2C  0100               	movlb	0	; () banked
  4371  002A2E  218C               	addwfc	(?___awdiv+1)& (0+255),w,b
  4372  002A30  0100               	movlb	0	; () banked
  4373  002A32  6F94               	movwf	(___wmul@multiplier+1)& (0+255),b
  4374  002A34  0E00               	movlw	0
  4375  002A36  0100               	movlb	0	; () banked
  4376  002A38  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4377  002A3A  0E03               	movlw	3
  4378  002A3C  6F95               	movwf	___wmul@multiplicand& (0+255),b
  4379  002A3E  EC21  F02A         	call	___wmul	;wreg free
  4380  002A42  0E29               	movlw	low __npowers_
  4381  002A44  0100               	movlb	0	; () banked
  4382  002A46  2593               	addwf	?___wmul& (0+255),w,b
  4383  002A48  6EF6               	movwf	tblptrl,c
  4384  002A4A  0E06               	movlw	high __npowers_
  4385  002A4C  0100               	movlb	0	; () banked
  4386  002A4E  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  4387  002A50  6EF7               	movwf	tblptrh,c
  4388  002A52                     	if	0	;There are less than 3 active tblptr bytes
  4389  002A52                     	endif
  4390  002A52  0009               	tblrd		*+
  4391  002A54  CFF5 F099          	movff	tablat,___ftmul@f1
  4392  002A58  0009               	tblrd		*+
  4393  002A5A  CFF5 F09A          	movff	tablat,___ftmul@f1+1
  4394  002A5E  000A               	tblrd		*-
  4395  002A60  CFF5 F09B          	movff	tablat,___ftmul@f1+2
  4396  002A64  EC1F  F01F         	call	___ftmul	;wreg free
  4397  002A68  C099  F0AB         	movff	?___ftmul,_scale$1621
  4398  002A6C  C09A  F0AC         	movff	?___ftmul+1,_scale$1621+1
  4399  002A70  C09B  F0AD         	movff	?___ftmul+2,_scale$1621+2
  4400                           
  4401                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4402  002A74  C0AB  F099         	movff	_scale$1621,___ftmul@f1
  4403  002A78  C0AC  F09A         	movff	_scale$1621+1,___ftmul@f1+1
  4404  002A7C  C0AD  F09B         	movff	_scale$1621+2,___ftmul@f1+2
  4405  002A80  0E00               	movlw	0
  4406  002A82  0100               	movlb	0	; () banked
  4407  002A84  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4408  002A86  0E03               	movlw	3
  4409  002A88  6F95               	movwf	___wmul@multiplicand& (0+255),b
  4410  002A8A  0E00               	movlw	0
  4411  002A8C  0100               	movlb	0	; () banked
  4412  002A8E  6F88               	movwf	(___awmod@divisor+1)& (0+255),b
  4413  002A90  0E0A               	movlw	10
  4414  002A92  6F87               	movwf	___awmod@divisor& (0+255),b
  4415  002A94  0100               	movlb	0	; () banked
  4416  002A96  51AE               	movf	scale@scl& (0+255),w,b
  4417  002A98  0100               	movlb	0	; () banked
  4418  002A9A  6F85               	movwf	___awmod@dividend& (0+255),b
  4419  002A9C  6B86               	clrf	(___awmod@dividend+1)& (0+255),b
  4420  002A9E  BF85               	btfsc	___awmod@dividend& (0+255),7,b
  4421  002AA0  0786               	decf	(___awmod@dividend+1)& (0+255),f,b
  4422  002AA2  ECA9  F026         	call	___awmod	;wreg free
  4423  002AA6  C085  F093         	movff	?___awmod,___wmul@multiplier
  4424  002AAA  C086  F094         	movff	?___awmod+1,___wmul@multiplier+1
  4425  002AAE  EC21  F02A         	call	___wmul	;wreg free
  4426  002AB2  0E29               	movlw	low __npowers_
  4427  002AB4  0100               	movlb	0	; () banked
  4428  002AB6  2593               	addwf	?___wmul& (0+255),w,b
  4429  002AB8  6EF6               	movwf	tblptrl,c
  4430  002ABA  0E06               	movlw	high __npowers_
  4431  002ABC  0100               	movlb	0	; () banked
  4432  002ABE  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  4433  002AC0  6EF7               	movwf	tblptrh,c
  4434  002AC2                     	if	0	;There are less than 3 active tblptr bytes
  4435  002AC2                     	endif
  4436  002AC2  0009               	tblrd		*+
  4437  002AC4  CFF5 F09C          	movff	tablat,___ftmul@f2
  4438  002AC8  0009               	tblrd		*+
  4439  002ACA  CFF5 F09D          	movff	tablat,___ftmul@f2+1
  4440  002ACE  000A               	tblrd		*-
  4441  002AD0  CFF5 F09E          	movff	tablat,___ftmul@f2+2
  4442  002AD4  EC1F  F01F         	call	___ftmul	;wreg free
  4443  002AD8  C099  F0A8         	movff	?___ftmul,?_scale
  4444  002ADC  C09A  F0A9         	movff	?___ftmul+1,?_scale+1
  4445  002AE0  C09B  F0AA         	movff	?___ftmul+2,?_scale+2
  4446  002AE4  0012               	return	
  4447  002AE6                     l5918:
  4448                           
  4449                           ;doprnt.c: 432: else if(scl > 10)
  4450  002AE6  0100               	movlb	0	; () banked
  4451  002AE8  51AE               	movf	scale@scl& (0+255),w,b
  4452  002AEA  0A80               	xorlw	128
  4453  002AEC  0F75               	addlw	-139
  4454  002AEE  A0D8               	btfss	status,0,c
  4455  002AF0  D05D               	goto	l5924
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4459  002AF2  0E00               	movlw	0
  4460  002AF4  0100               	movlb	0	; () banked
  4461  002AF6  6F8E               	movwf	(___awdiv@divisor+1)& (0+255),b
  4462  002AF8  0E0A               	movlw	10
  4463  002AFA  6F8D               	movwf	___awdiv@divisor& (0+255),b
  4464  002AFC  0100               	movlb	0	; () banked
  4465  002AFE  51AE               	movf	scale@scl& (0+255),w,b
  4466  002B00  0100               	movlb	0	; () banked
  4467  002B02  6F8B               	movwf	___awdiv@dividend& (0+255),b
  4468  002B04  6B8C               	clrf	(___awdiv@dividend+1)& (0+255),b
  4469  002B06  BF8B               	btfsc	___awdiv@dividend& (0+255),7,b
  4470  002B08  078C               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4471  002B0A  EC41  F025         	call	___awdiv	;wreg free
  4472  002B0E  0E09               	movlw	9
  4473  002B10  0100               	movlb	0	; () banked
  4474  002B12  258B               	addwf	?___awdiv& (0+255),w,b
  4475  002B14  0100               	movlb	0	; () banked
  4476  002B16  6F93               	movwf	___wmul@multiplier& (0+255),b
  4477  002B18  0E00               	movlw	0
  4478  002B1A  0100               	movlb	0	; () banked
  4479  002B1C  218C               	addwfc	(?___awdiv+1)& (0+255),w,b
  4480  002B1E  0100               	movlb	0	; () banked
  4481  002B20  6F94               	movwf	(___wmul@multiplier+1)& (0+255),b
  4482  002B22  0E00               	movlw	0
  4483  002B24  0100               	movlb	0	; () banked
  4484  002B26  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4485  002B28  0E03               	movlw	3
  4486  002B2A  6F95               	movwf	___wmul@multiplicand& (0+255),b
  4487  002B2C  EC21  F02A         	call	___wmul	;wreg free
  4488  002B30  0E29               	movlw	low __npowers_
  4489  002B32  0100               	movlb	0	; () banked
  4490  002B34  2593               	addwf	?___wmul& (0+255),w,b
  4491  002B36  6EF6               	movwf	tblptrl,c
  4492  002B38  0E06               	movlw	high __npowers_
  4493  002B3A  0100               	movlb	0	; () banked
  4494  002B3C  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  4495  002B3E  6EF7               	movwf	tblptrh,c
  4496  002B40                     	if	0	;There are less than 3 active tblptr bytes
  4497  002B40                     	endif
  4498  002B40  0009               	tblrd		*+
  4499  002B42  CFF5 F099          	movff	tablat,___ftmul@f1
  4500  002B46  0009               	tblrd		*+
  4501  002B48  CFF5 F09A          	movff	tablat,___ftmul@f1+1
  4502  002B4C  000A               	tblrd		*-
  4503  002B4E  CFF5 F09B          	movff	tablat,___ftmul@f1+2
  4504  002B52  0E00               	movlw	0
  4505  002B54  0100               	movlb	0	; () banked
  4506  002B56  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4507  002B58  0E03               	movlw	3
  4508  002B5A  6F95               	movwf	___wmul@multiplicand& (0+255),b
  4509  002B5C  0E00               	movlw	0
  4510  002B5E  0100               	movlb	0	; () banked
  4511  002B60  6F88               	movwf	(___awmod@divisor+1)& (0+255),b
  4512  002B62  0E0A               	movlw	10
  4513  002B64  6F87               	movwf	___awmod@divisor& (0+255),b
  4514  002B66  0100               	movlb	0	; () banked
  4515  002B68  51AE               	movf	scale@scl& (0+255),w,b
  4516  002B6A  0100               	movlb	0	; () banked
  4517  002B6C  6F85               	movwf	___awmod@dividend& (0+255),b
  4518  002B6E  6B86               	clrf	(___awmod@dividend+1)& (0+255),b
  4519  002B70  BF85               	btfsc	___awmod@dividend& (0+255),7,b
  4520  002B72  0786               	decf	(___awmod@dividend+1)& (0+255),f,b
  4521  002B74  ECA9  F026         	call	___awmod	;wreg free
  4522  002B78  C085  F093         	movff	?___awmod,___wmul@multiplier
  4523  002B7C  C086  F094         	movff	?___awmod+1,___wmul@multiplier+1
  4524  002B80  EC21  F02A         	call	___wmul	;wreg free
  4525  002B84  0E29               	movlw	low __npowers_
  4526  002B86  0100               	movlb	0	; () banked
  4527  002B88  2593               	addwf	?___wmul& (0+255),w,b
  4528  002B8A  6EF6               	movwf	tblptrl,c
  4529  002B8C  0E06               	movlw	high __npowers_
  4530  002B8E  0100               	movlb	0	; () banked
  4531  002B90  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  4532  002B92  6EF7               	movwf	tblptrh,c
  4533  002B94                     	if	0	;There are less than 3 active tblptr bytes
  4534  002B94                     	endif
  4535  002B94  0009               	tblrd		*+
  4536  002B96  CFF5 F09C          	movff	tablat,___ftmul@f2
  4537  002B9A  0009               	tblrd		*+
  4538  002B9C  CFF5 F09D          	movff	tablat,___ftmul@f2+1
  4539  002BA0  000A               	tblrd		*-
  4540  002BA2  CFF5 F09E          	movff	tablat,___ftmul@f2+2
  4541  002BA6  EC1F  F01F         	call	___ftmul	;wreg free
  4542  002BAA  D796               	goto	L3
  4543  002BAC                     l5924:
  4544                           
  4545                           ;doprnt.c: 434: return _npowers_[scl];
  4546  002BAC  0100               	movlb	0	; () banked
  4547  002BAE  51AE               	movf	scale@scl& (0+255),w,b
  4548  002BB0  0D03               	mullw	3
  4549  002BB2  0E29               	movlw	low __npowers_
  4550  002BB4  24F3               	addwf	prodl,w,c
  4551  002BB6  6EF6               	movwf	tblptrl,c
  4552  002BB8  0E06               	movlw	high __npowers_
  4553  002BBA  20F4               	addwfc	prodh,w,c
  4554  002BBC  6EF7               	movwf	tblptrh,c
  4555  002BBE                     	if	0	;There are less than 3 active tblptr bytes
  4556  002BBE                     	endif
  4557  002BBE  0009               	tblrd		*+
  4558  002BC0  CFF5 F0A8          	movff	tablat,?_scale
  4559  002BC4  0009               	tblrd		*+
  4560  002BC6  CFF5 F0A9          	movff	tablat,?_scale+1
  4561  002BCA  000A               	tblrd		*-
  4562  002BCC  CFF5 F0AA          	movff	tablat,?_scale+2
  4563                           
  4564                           ; BSR set to: 0
  4565  002BD0  0012               	return	
  4566  002BD2                     l5928:
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;doprnt.c: 435: }
  4570                           ;doprnt.c: 436: if(scl>=110)
  4571  002BD2  0100               	movlb	0	; () banked
  4572  002BD4  51AE               	movf	scale@scl& (0+255),w,b
  4573  002BD6  0A80               	xorlw	128
  4574  002BD8  0F12               	addlw	-238
  4575  002BDA  A0D8               	btfss	status,0,c
  4576  002BDC  D0AC               	goto	l5936
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4580  002BDE  0E00               	movlw	0
  4581  002BE0  0100               	movlb	0	; () banked
  4582  002BE2  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4583  002BE4  0E03               	movlw	3
  4584  002BE6  6F95               	movwf	___wmul@multiplicand& (0+255),b
  4585  002BE8  0E00               	movlw	0
  4586  002BEA  0100               	movlb	0	; () banked
  4587  002BEC  6F8E               	movwf	(___awdiv@divisor+1)& (0+255),b
  4588  002BEE  0E0A               	movlw	10
  4589  002BF0  6F8D               	movwf	___awdiv@divisor& (0+255),b
  4590  002BF2  0E00               	movlw	0
  4591  002BF4  0100               	movlb	0	; () banked
  4592  002BF6  6F88               	movwf	(___awmod@divisor+1)& (0+255),b
  4593  002BF8  0E64               	movlw	100
  4594  002BFA  6F87               	movwf	___awmod@divisor& (0+255),b
  4595  002BFC  0100               	movlb	0	; () banked
  4596  002BFE  51AE               	movf	scale@scl& (0+255),w,b
  4597  002C00  0100               	movlb	0	; () banked
  4598  002C02  6F85               	movwf	___awmod@dividend& (0+255),b
  4599  002C04  6B86               	clrf	(___awmod@dividend+1)& (0+255),b
  4600  002C06  BF85               	btfsc	___awmod@dividend& (0+255),7,b
  4601  002C08  0786               	decf	(___awmod@dividend+1)& (0+255),f,b
  4602  002C0A  ECA9  F026         	call	___awmod	;wreg free
  4603  002C0E  C085  F08B         	movff	?___awmod,___awdiv@dividend
  4604  002C12  C086  F08C         	movff	?___awmod+1,___awdiv@dividend+1
  4605  002C16  EC41  F025         	call	___awdiv	;wreg free
  4606  002C1A  0E09               	movlw	9
  4607  002C1C  0100               	movlb	0	; () banked
  4608  002C1E  258B               	addwf	?___awdiv& (0+255),w,b
  4609  002C20  0100               	movlb	0	; () banked
  4610  002C22  6F93               	movwf	___wmul@multiplier& (0+255),b
  4611  002C24  0E00               	movlw	0
  4612  002C26  0100               	movlb	0	; () banked
  4613  002C28  218C               	addwfc	(?___awdiv+1)& (0+255),w,b
  4614  002C2A  0100               	movlb	0	; () banked
  4615  002C2C  6F94               	movwf	(___wmul@multiplier+1)& (0+255),b
  4616  002C2E  EC21  F02A         	call	___wmul	;wreg free
  4617  002C32  0E50               	movlw	low __powers_
  4618  002C34  0100               	movlb	0	; () banked
  4619  002C36  2593               	addwf	?___wmul& (0+255),w,b
  4620  002C38  6EF6               	movwf	tblptrl,c
  4621  002C3A  0E06               	movlw	high __powers_
  4622  002C3C  0100               	movlb	0	; () banked
  4623  002C3E  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  4624  002C40  6EF7               	movwf	tblptrh,c
  4625  002C42                     	if	0	;There are less than 3 active tblptr bytes
  4626  002C42                     	endif
  4627  002C42  0009               	tblrd		*+
  4628  002C44  CFF5 F09C          	movff	tablat,___ftmul@f2
  4629  002C48  0009               	tblrd		*+
  4630  002C4A  CFF5 F09D          	movff	tablat,___ftmul@f2+1
  4631  002C4E  000A               	tblrd		*-
  4632  002C50  CFF5 F09E          	movff	tablat,___ftmul@f2+2
  4633  002C54  0E00               	movlw	0
  4634  002C56  0100               	movlb	0	; () banked
  4635  002C58  6F8E               	movwf	(___awdiv@divisor+1)& (0+255),b
  4636  002C5A  0E64               	movlw	100
  4637  002C5C  6F8D               	movwf	___awdiv@divisor& (0+255),b
  4638  002C5E  0100               	movlb	0	; () banked
  4639  002C60  51AE               	movf	scale@scl& (0+255),w,b
  4640  002C62  0100               	movlb	0	; () banked
  4641  002C64  6F8B               	movwf	___awdiv@dividend& (0+255),b
  4642  002C66  6B8C               	clrf	(___awdiv@dividend+1)& (0+255),b
  4643  002C68  BF8B               	btfsc	___awdiv@dividend& (0+255),7,b
  4644  002C6A  078C               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4645  002C6C  EC41  F025         	call	___awdiv	;wreg free
  4646  002C70  0E12               	movlw	18
  4647  002C72  0100               	movlb	0	; () banked
  4648  002C74  258B               	addwf	?___awdiv& (0+255),w,b
  4649  002C76  0100               	movlb	0	; () banked
  4650  002C78  6F93               	movwf	___wmul@multiplier& (0+255),b
  4651  002C7A  0E00               	movlw	0
  4652  002C7C  0100               	movlb	0	; () banked
  4653  002C7E  218C               	addwfc	(?___awdiv+1)& (0+255),w,b
  4654  002C80  0100               	movlb	0	; () banked
  4655  002C82  6F94               	movwf	(___wmul@multiplier+1)& (0+255),b
  4656  002C84  0E00               	movlw	0
  4657  002C86  0100               	movlb	0	; () banked
  4658  002C88  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4659  002C8A  0E03               	movlw	3
  4660  002C8C  6F95               	movwf	___wmul@multiplicand& (0+255),b
  4661  002C8E  EC21  F02A         	call	___wmul	;wreg free
  4662  002C92  0E50               	movlw	low __powers_
  4663  002C94  0100               	movlb	0	; () banked
  4664  002C96  2593               	addwf	?___wmul& (0+255),w,b
  4665  002C98  6EF6               	movwf	tblptrl,c
  4666  002C9A  0E06               	movlw	high __powers_
  4667  002C9C  0100               	movlb	0	; () banked
  4668  002C9E  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  4669  002CA0  6EF7               	movwf	tblptrh,c
  4670  002CA2                     	if	0	;There are less than 3 active tblptr bytes
  4671  002CA2                     	endif
  4672  002CA2  0009               	tblrd		*+
  4673  002CA4  CFF5 F099          	movff	tablat,___ftmul@f1
  4674  002CA8  0009               	tblrd		*+
  4675  002CAA  CFF5 F09A          	movff	tablat,___ftmul@f1+1
  4676  002CAE  000A               	tblrd		*-
  4677  002CB0  CFF5 F09B          	movff	tablat,___ftmul@f1+2
  4678  002CB4  EC1F  F01F         	call	___ftmul	;wreg free
  4679  002CB8  C099  F0AB         	movff	?___ftmul,_scale$1621
  4680  002CBC  C09A  F0AC         	movff	?___ftmul+1,_scale$1621+1
  4681  002CC0  C09B  F0AD         	movff	?___ftmul+2,_scale$1621+2
  4682                           
  4683                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4684  002CC4  C0AB  F099         	movff	_scale$1621,___ftmul@f1
  4685  002CC8  C0AC  F09A         	movff	_scale$1621+1,___ftmul@f1+1
  4686  002CCC  C0AD  F09B         	movff	_scale$1621+2,___ftmul@f1+2
  4687  002CD0  0E00               	movlw	0
  4688  002CD2  0100               	movlb	0	; () banked
  4689  002CD4  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4690  002CD6  0E03               	movlw	3
  4691  002CD8  6F95               	movwf	___wmul@multiplicand& (0+255),b
  4692  002CDA  0E00               	movlw	0
  4693  002CDC  0100               	movlb	0	; () banked
  4694  002CDE  6F88               	movwf	(___awmod@divisor+1)& (0+255),b
  4695  002CE0  0E0A               	movlw	10
  4696  002CE2  6F87               	movwf	___awmod@divisor& (0+255),b
  4697  002CE4  0100               	movlb	0	; () banked
  4698  002CE6  51AE               	movf	scale@scl& (0+255),w,b
  4699  002CE8  0100               	movlb	0	; () banked
  4700  002CEA  6F85               	movwf	___awmod@dividend& (0+255),b
  4701  002CEC  6B86               	clrf	(___awmod@dividend+1)& (0+255),b
  4702  002CEE  BF85               	btfsc	___awmod@dividend& (0+255),7,b
  4703  002CF0  0786               	decf	(___awmod@dividend+1)& (0+255),f,b
  4704  002CF2  ECA9  F026         	call	___awmod	;wreg free
  4705  002CF6  C085  F093         	movff	?___awmod,___wmul@multiplier
  4706  002CFA  C086  F094         	movff	?___awmod+1,___wmul@multiplier+1
  4707  002CFE  EC21  F02A         	call	___wmul	;wreg free
  4708  002D02  0E50               	movlw	low __powers_
  4709  002D04  0100               	movlb	0	; () banked
  4710  002D06  2593               	addwf	?___wmul& (0+255),w,b
  4711  002D08  6EF6               	movwf	tblptrl,c
  4712  002D0A  0E06               	movlw	high __powers_
  4713  002D0C  0100               	movlb	0	; () banked
  4714  002D0E  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  4715  002D10  6EF7               	movwf	tblptrh,c
  4716  002D12                     	if	0	;There are less than 3 active tblptr bytes
  4717  002D12                     	endif
  4718  002D12  0009               	tblrd		*+
  4719  002D14  CFF5 F09C          	movff	tablat,___ftmul@f2
  4720  002D18  0009               	tblrd		*+
  4721  002D1A  CFF5 F09D          	movff	tablat,___ftmul@f2+1
  4722  002D1E  000A               	tblrd		*-
  4723  002D20  CFF5 F09E          	movff	tablat,___ftmul@f2+2
  4724  002D24  EC1F  F01F         	call	___ftmul	;wreg free
  4725  002D28  C099  F0A8         	movff	?___ftmul,?_scale
  4726  002D2C  C09A  F0A9         	movff	?___ftmul+1,?_scale+1
  4727  002D30  C09B  F0AA         	movff	?___ftmul+2,?_scale+2
  4728  002D34  0012               	return	
  4729  002D36                     l5936:
  4730                           
  4731                           ;doprnt.c: 438: else if(scl > 10)
  4732  002D36  0100               	movlb	0	; () banked
  4733  002D38  51AE               	movf	scale@scl& (0+255),w,b
  4734  002D3A  0A80               	xorlw	128
  4735  002D3C  0F75               	addlw	-139
  4736  002D3E  A0D8               	btfss	status,0,c
  4737  002D40  D05D               	goto	l5942
  4738                           
  4739                           ; BSR set to: 0
  4740                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4741  002D42  0E00               	movlw	0
  4742  002D44  0100               	movlb	0	; () banked
  4743  002D46  6F8E               	movwf	(___awdiv@divisor+1)& (0+255),b
  4744  002D48  0E0A               	movlw	10
  4745  002D4A  6F8D               	movwf	___awdiv@divisor& (0+255),b
  4746  002D4C  0100               	movlb	0	; () banked
  4747  002D4E  51AE               	movf	scale@scl& (0+255),w,b
  4748  002D50  0100               	movlb	0	; () banked
  4749  002D52  6F8B               	movwf	___awdiv@dividend& (0+255),b
  4750  002D54  6B8C               	clrf	(___awdiv@dividend+1)& (0+255),b
  4751  002D56  BF8B               	btfsc	___awdiv@dividend& (0+255),7,b
  4752  002D58  078C               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4753  002D5A  EC41  F025         	call	___awdiv	;wreg free
  4754  002D5E  0E09               	movlw	9
  4755  002D60  0100               	movlb	0	; () banked
  4756  002D62  258B               	addwf	?___awdiv& (0+255),w,b
  4757  002D64  0100               	movlb	0	; () banked
  4758  002D66  6F93               	movwf	___wmul@multiplier& (0+255),b
  4759  002D68  0E00               	movlw	0
  4760  002D6A  0100               	movlb	0	; () banked
  4761  002D6C  218C               	addwfc	(?___awdiv+1)& (0+255),w,b
  4762  002D6E  0100               	movlb	0	; () banked
  4763  002D70  6F94               	movwf	(___wmul@multiplier+1)& (0+255),b
  4764  002D72  0E00               	movlw	0
  4765  002D74  0100               	movlb	0	; () banked
  4766  002D76  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4767  002D78  0E03               	movlw	3
  4768  002D7A  6F95               	movwf	___wmul@multiplicand& (0+255),b
  4769  002D7C  EC21  F02A         	call	___wmul	;wreg free
  4770  002D80  0E50               	movlw	low __powers_
  4771  002D82  0100               	movlb	0	; () banked
  4772  002D84  2593               	addwf	?___wmul& (0+255),w,b
  4773  002D86  6EF6               	movwf	tblptrl,c
  4774  002D88  0E06               	movlw	high __powers_
  4775  002D8A  0100               	movlb	0	; () banked
  4776  002D8C  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  4777  002D8E  6EF7               	movwf	tblptrh,c
  4778  002D90                     	if	0	;There are less than 3 active tblptr bytes
  4779  002D90                     	endif
  4780  002D90  0009               	tblrd		*+
  4781  002D92  CFF5 F099          	movff	tablat,___ftmul@f1
  4782  002D96  0009               	tblrd		*+
  4783  002D98  CFF5 F09A          	movff	tablat,___ftmul@f1+1
  4784  002D9C  000A               	tblrd		*-
  4785  002D9E  CFF5 F09B          	movff	tablat,___ftmul@f1+2
  4786  002DA2  0E00               	movlw	0
  4787  002DA4  0100               	movlb	0	; () banked
  4788  002DA6  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4789  002DA8  0E03               	movlw	3
  4790  002DAA  6F95               	movwf	___wmul@multiplicand& (0+255),b
  4791  002DAC  0E00               	movlw	0
  4792  002DAE  0100               	movlb	0	; () banked
  4793  002DB0  6F88               	movwf	(___awmod@divisor+1)& (0+255),b
  4794  002DB2  0E0A               	movlw	10
  4795  002DB4  6F87               	movwf	___awmod@divisor& (0+255),b
  4796  002DB6  0100               	movlb	0	; () banked
  4797  002DB8  51AE               	movf	scale@scl& (0+255),w,b
  4798  002DBA  0100               	movlb	0	; () banked
  4799  002DBC  6F85               	movwf	___awmod@dividend& (0+255),b
  4800  002DBE  6B86               	clrf	(___awmod@dividend+1)& (0+255),b
  4801  002DC0  BF85               	btfsc	___awmod@dividend& (0+255),7,b
  4802  002DC2  0786               	decf	(___awmod@dividend+1)& (0+255),f,b
  4803  002DC4  ECA9  F026         	call	___awmod	;wreg free
  4804  002DC8  C085  F093         	movff	?___awmod,___wmul@multiplier
  4805  002DCC  C086  F094         	movff	?___awmod+1,___wmul@multiplier+1
  4806  002DD0  EC21  F02A         	call	___wmul	;wreg free
  4807  002DD4  0E50               	movlw	low __powers_
  4808  002DD6  0100               	movlb	0	; () banked
  4809  002DD8  2593               	addwf	?___wmul& (0+255),w,b
  4810  002DDA  6EF6               	movwf	tblptrl,c
  4811  002DDC  0E06               	movlw	high __powers_
  4812  002DDE  0100               	movlb	0	; () banked
  4813  002DE0  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  4814  002DE2  6EF7               	movwf	tblptrh,c
  4815  002DE4                     	if	0	;There are less than 3 active tblptr bytes
  4816  002DE4                     	endif
  4817  002DE4  0009               	tblrd		*+
  4818  002DE6  CFF5 F09C          	movff	tablat,___ftmul@f2
  4819  002DEA  0009               	tblrd		*+
  4820  002DEC  CFF5 F09D          	movff	tablat,___ftmul@f2+1
  4821  002DF0  000A               	tblrd		*-
  4822  002DF2  CFF5 F09E          	movff	tablat,___ftmul@f2+2
  4823  002DF6  EC1F  F01F         	call	___ftmul	;wreg free
  4824  002DFA  D796               	goto	L4
  4825  002DFC                     l5942:
  4826                           
  4827                           ;doprnt.c: 440: return _powers_[scl];
  4828  002DFC  0100               	movlb	0	; () banked
  4829  002DFE  51AE               	movf	scale@scl& (0+255),w,b
  4830  002E00  0D03               	mullw	3
  4831  002E02  0E50               	movlw	low __powers_
  4832  002E04  24F3               	addwf	prodl,w,c
  4833  002E06  6EF6               	movwf	tblptrl,c
  4834  002E08  0E06               	movlw	high __powers_
  4835  002E0A  20F4               	addwfc	prodh,w,c
  4836  002E0C  6EF7               	movwf	tblptrh,c
  4837  002E0E                     	if	0	;There are less than 3 active tblptr bytes
  4838  002E0E                     	endif
  4839  002E0E  0009               	tblrd		*+
  4840  002E10  CFF5 F0A8          	movff	tablat,?_scale
  4841  002E14  0009               	tblrd		*+
  4842  002E16  CFF5 F0A9          	movff	tablat,?_scale+1
  4843  002E1A  000A               	tblrd		*-
  4844  002E1C  CFF5 F0AA          	movff	tablat,?_scale+2
  4845  002E20  0012               	return	
  4846  002E22                     __end_of_scale:
  4847                           	opt stack 0
  4848                           tosu	equ	0xFFF
  4849                           tosh	equ	0xFFE
  4850                           tosl	equ	0xFFD
  4851                           pclath	equ	0xFFA
  4852                           tblptru	equ	0xFF8
  4853                           tblptrh	equ	0xFF7
  4854                           tblptrl	equ	0xFF6
  4855                           tablat	equ	0xFF5
  4856                           prodh	equ	0xFF4
  4857                           prodl	equ	0xFF3
  4858                           intcon	equ	0xFF2
  4859                           postinc0	equ	0xFEE
  4860                           wreg	equ	0xFE8
  4861                           indf2	equ	0xFDF
  4862                           postinc2	equ	0xFDE
  4863                           postdec2	equ	0xFDD
  4864                           fsr2h	equ	0xFDA
  4865                           fsr2l	equ	0xFD9
  4866                           status	equ	0xFD8
  4867                           
  4868 ;; *************** function _putch *****************
  4869 ;; Defined at:
  4870 ;;		line 111 in file "mcc_generated_files/eusart1.c"
  4871 ;; Parameters:    Size  Location     Type
  4872 ;;  txData          1    wreg     unsigned char 
  4873 ;; Auto vars:     Size  Location     Type
  4874 ;;  txData          1   38[BANK0 ] unsigned char 
  4875 ;; Return value:  Size  Location     Type
  4876 ;;                  1    wreg      void 
  4877 ;; Registers used:
  4878 ;;		wreg, status,2, cstack
  4879 ;; Tracked objects:
  4880 ;;		On entry : 0/0
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4884 ;;      Params:         0       0       0       0       0       0       0
  4885 ;;      Locals:         0       1       0       0       0       0       0
  4886 ;;      Temps:          0       0       0       0       0       0       0
  4887 ;;      Totals:         0       1       0       0       0       0       0
  4888 ;;Total ram usage:        1 bytes
  4889 ;; Hardware stack levels used:    1
  4890 ;; Hardware stack levels required when called:    8
  4891 ;; This function calls:
  4892 ;;		_EUSART1_Write
  4893 ;; This function is called by:
  4894 ;;		i2__doprnt
  4895 ;;		__doprnt
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898                           
  4899                           	psect	text4
  4900  0056E8                     __ptext4:
  4901                           	opt stack 0
  4902  0056E8                     _putch:
  4903                           	opt stack 0
  4904                           
  4905                           ;Skip over the trampoline to the duplicate function for level 2
  4906  0056E8  B25F               	btfsc	btemp,1,c
  4907  0056EA  EFA9  F02B         	goto	i2_putch
  4908  0056EE                     _putch$intlevel0:
  4909                           	opt stack 20
  4910                           
  4911                           ;incstack = 0
  4912                           ;putch@txData stored from wreg
  4913  0056EE  0100               	movlb	0	; () banked
  4914  0056F0  6F86               	movwf	putch@txData& (0+255),b
  4915                           
  4916                           ;eusart1.c: 113: EUSART1_Write(txData);
  4917  0056F2  0100               	movlb	0	; () banked
  4918  0056F4  5186               	movf	putch@txData& (0+255),w,b
  4919  0056F6  EC7E  F02B         	call	_EUSART1_Write
  4920  0056FA  0012               	return		;funcret
  4921  0056FC                     __end_of_putch:
  4922                           	opt stack 0
  4923                           tosu	equ	0xFFF
  4924                           tosh	equ	0xFFE
  4925                           tosl	equ	0xFFD
  4926                           pclath	equ	0xFFA
  4927                           tblptru	equ	0xFF8
  4928                           tblptrh	equ	0xFF7
  4929                           tblptrl	equ	0xFF6
  4930                           tablat	equ	0xFF5
  4931                           prodh	equ	0xFF4
  4932                           prodl	equ	0xFF3
  4933                           intcon	equ	0xFF2
  4934                           postinc0	equ	0xFEE
  4935                           wreg	equ	0xFE8
  4936                           indf2	equ	0xFDF
  4937                           postinc2	equ	0xFDE
  4938                           postdec2	equ	0xFDD
  4939                           fsr2h	equ	0xFDA
  4940                           fsr2l	equ	0xFD9
  4941                           status	equ	0xFD8
  4942                           
  4943 ;; *************** function _EUSART1_Write *****************
  4944 ;; Defined at:
  4945 ;;		line 97 in file "mcc_generated_files/eusart1.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;  txData          1    wreg     unsigned char 
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;  txData          1   37[BANK0 ] unsigned char 
  4950 ;; Return value:  Size  Location     Type
  4951 ;;                  1    wreg      void 
  4952 ;; Registers used:
  4953 ;;		wreg
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4959 ;;      Params:         0       0       0       0       0       0       0
  4960 ;;      Locals:         0       1       0       0       0       0       0
  4961 ;;      Temps:          0       0       0       0       0       0       0
  4962 ;;      Totals:         0       1       0       0       0       0       0
  4963 ;;Total ram usage:        1 bytes
  4964 ;; Hardware stack levels used:    1
  4965 ;; Hardware stack levels required when called:    7
  4966 ;; This function calls:
  4967 ;;		Nothing
  4968 ;; This function is called by:
  4969 ;;		_putch
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           	psect	text5
  4974  0056FC                     __ptext5:
  4975                           	opt stack 0
  4976  0056FC                     _EUSART1_Write:
  4977                           	opt stack 20
  4978                           
  4979                           ;incstack = 0
  4980                           ;EUSART1_Write@txData stored from wreg
  4981  0056FC  0100               	movlb	0	; () banked
  4982  0056FE  6F85               	movwf	EUSART1_Write@txData& (0+255),b
  4983  005700                     l187:
  4984  005700  A89E               	btfss	3998,4,c	;volatile
  4985  005702  D7FE               	goto	l187
  4986                           
  4987                           ;eusart1.c: 101: }
  4988                           ;eusart1.c: 103: TXREG1 = txData;
  4989  005704  C085  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4990  005708  0012               	return		;funcret
  4991  00570A                     __end_of_EUSART1_Write:
  4992                           	opt stack 0
  4993                           tosu	equ	0xFFF
  4994                           tosh	equ	0xFFE
  4995                           tosl	equ	0xFFD
  4996                           pclath	equ	0xFFA
  4997                           tblptru	equ	0xFF8
  4998                           tblptrh	equ	0xFF7
  4999                           tblptrl	equ	0xFF6
  5000                           tablat	equ	0xFF5
  5001                           prodh	equ	0xFF4
  5002                           prodl	equ	0xFF3
  5003                           intcon	equ	0xFF2
  5004                           postinc0	equ	0xFEE
  5005                           wreg	equ	0xFE8
  5006                           indf2	equ	0xFDF
  5007                           postinc2	equ	0xFDE
  5008                           postdec2	equ	0xFDD
  5009                           fsr2h	equ	0xFDA
  5010                           fsr2l	equ	0xFD9
  5011                           status	equ	0xFD8
  5012                           
  5013 ;; *************** function _isdigit *****************
  5014 ;; Defined at:
  5015 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;  c               1    wreg     unsigned char 
  5018 ;; Auto vars:     Size  Location     Type
  5019 ;;  c               1   39[BANK0 ] unsigned char 
  5020 ;; Return value:  Size  Location     Type
  5021 ;;		None               void
  5022 ;; Registers used:
  5023 ;;		wreg, status,2, status,0
  5024 ;; Tracked objects:
  5025 ;;		On entry : 0/0
  5026 ;;		On exit  : 0/0
  5027 ;;		Unchanged: 0/0
  5028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5029 ;;      Params:         0       0       0       0       0       0       0
  5030 ;;      Locals:         0       2       0       0       0       0       0
  5031 ;;      Temps:          0       1       0       0       0       0       0
  5032 ;;      Totals:         0       3       0       0       0       0       0
  5033 ;;Total ram usage:        3 bytes
  5034 ;; Hardware stack levels used:    1
  5035 ;; Hardware stack levels required when called:    7
  5036 ;; This function calls:
  5037 ;;		Nothing
  5038 ;; This function is called by:
  5039 ;;		__doprnt
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           
  5043                           	psect	text6
  5044  0055A8                     __ptext6:
  5045                           	opt stack 0
  5046  0055A8                     _isdigit:
  5047                           	opt stack 21
  5048                           
  5049                           ;incstack = 0
  5050                           ;isdigit@c stored from wreg
  5051  0055A8  0100               	movlb	0	; () banked
  5052  0055AA  6F87               	movwf	isdigit@c& (0+255),b
  5053  0055AC  0E00               	movlw	0
  5054  0055AE  0100               	movlb	0	; () banked
  5055  0055B0  6F86               	movwf	_isdigit$1164& (0+255),b
  5056                           
  5057                           ; BSR set to: 0
  5058  0055B2  0E3A               	movlw	58
  5059  0055B4  0100               	movlb	0	; () banked
  5060  0055B6  6187               	cpfslt	isdigit@c& (0+255),b
  5061  0055B8  D007               	goto	l4374
  5062                           
  5063                           ; BSR set to: 0
  5064  0055BA  0E2F               	movlw	47
  5065  0055BC  0100               	movlb	0	; () banked
  5066  0055BE  6587               	cpfsgt	isdigit@c& (0+255),b
  5067  0055C0  D003               	goto	l4374
  5068                           
  5069                           ; BSR set to: 0
  5070  0055C2  0E01               	movlw	1
  5071  0055C4  0100               	movlb	0	; () banked
  5072  0055C6  6F86               	movwf	_isdigit$1164& (0+255),b
  5073  0055C8                     l4374:
  5074                           
  5075                           ; BSR set to: 0
  5076  0055C8  C086  F085         	movff	_isdigit$1164,??_isdigit
  5077  0055CC  0100               	movlb	0	; () banked
  5078  0055CE  3185               	rrcf	??_isdigit& (0+255),w,b
  5079  0055D0  0012               	return	
  5080  0055D2                     __end_of_isdigit:
  5081                           	opt stack 0
  5082                           tosu	equ	0xFFF
  5083                           tosh	equ	0xFFE
  5084                           tosl	equ	0xFFD
  5085                           pclath	equ	0xFFA
  5086                           tblptru	equ	0xFF8
  5087                           tblptrh	equ	0xFF7
  5088                           tblptrl	equ	0xFF6
  5089                           tablat	equ	0xFF5
  5090                           prodh	equ	0xFF4
  5091                           prodl	equ	0xFF3
  5092                           intcon	equ	0xFF2
  5093                           postinc0	equ	0xFEE
  5094                           wreg	equ	0xFE8
  5095                           indf2	equ	0xFDF
  5096                           postinc2	equ	0xFDE
  5097                           postdec2	equ	0xFDD
  5098                           fsr2h	equ	0xFDA
  5099                           fsr2l	equ	0xFD9
  5100                           status	equ	0xFD8
  5101                           
  5102 ;; *************** function _fround *****************
  5103 ;; Defined at:
  5104 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;  prec            1    wreg     unsigned char 
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;  prec            1   81[BANK0 ] unsigned char 
  5109 ;; Return value:  Size  Location     Type
  5110 ;;                  3   72[BANK0 ] unsigned char 
  5111 ;; Registers used:
  5112 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5113 ;; Tracked objects:
  5114 ;;		On entry : 0/0
  5115 ;;		On exit  : 0/0
  5116 ;;		Unchanged: 0/0
  5117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5118 ;;      Params:         0       3       0       0       0       0       0
  5119 ;;      Locals:         0       7       0       0       0       0       0
  5120 ;;      Temps:          0       0       0       0       0       0       0
  5121 ;;      Totals:         0      10       0       0       0       0       0
  5122 ;;Total ram usage:       10 bytes
  5123 ;; Hardware stack levels used:    1
  5124 ;; Hardware stack levels required when called:    9
  5125 ;; This function calls:
  5126 ;;		___awdiv
  5127 ;;		___awmod
  5128 ;;		___ftmul
  5129 ;;		___wmul
  5130 ;; This function is called by:
  5131 ;;		__doprnt
  5132 ;; This function uses a non-reentrant model
  5133 ;;
  5134                           
  5135                           	psect	text7
  5136  003212                     __ptext7:
  5137                           	opt stack 0
  5138  003212                     _fround:
  5139                           	opt stack 19
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;incstack = 0
  5143                           ;fround@prec stored from wreg
  5144  003212  0100               	movlb	0	; () banked
  5145  003214  6FB1               	movwf	fround@prec& (0+255),b
  5146                           
  5147                           ;doprnt.c: 413: if(prec>=110)
  5148  003216  0E6D               	movlw	109
  5149  003218  0100               	movlb	0	; () banked
  5150  00321A  65B1               	cpfsgt	fround@prec& (0+255),b
  5151  00321C  D0BA               	goto	l5896
  5152                           
  5153                           ; BSR set to: 0
  5154                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5155  00321E  0E00               	movlw	0
  5156  003220  0100               	movlb	0	; () banked
  5157  003222  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5158  003224  0E03               	movlw	3
  5159  003226  6F95               	movwf	___wmul@multiplicand& (0+255),b
  5160  003228  0E00               	movlw	0
  5161  00322A  0100               	movlb	0	; () banked
  5162  00322C  6F8E               	movwf	(___awdiv@divisor+1)& (0+255),b
  5163  00322E  0E0A               	movlw	10
  5164  003230  6F8D               	movwf	___awdiv@divisor& (0+255),b
  5165  003232  0E00               	movlw	0
  5166  003234  0100               	movlb	0	; () banked
  5167  003236  6F88               	movwf	(___awmod@divisor+1)& (0+255),b
  5168  003238  0E64               	movlw	100
  5169  00323A  6F87               	movwf	___awmod@divisor& (0+255),b
  5170  00323C  C0B1  F085         	movff	fround@prec,___awmod@dividend
  5171  003240  0100               	movlb	0	; () banked
  5172  003242  6B86               	clrf	(___awmod@dividend+1)& (0+255),b
  5173  003244  ECA9  F026         	call	___awmod	;wreg free
  5174  003248  C085  F08B         	movff	?___awmod,___awdiv@dividend
  5175  00324C  C086  F08C         	movff	?___awmod+1,___awdiv@dividend+1
  5176  003250  EC41  F025         	call	___awdiv	;wreg free
  5177  003254  0E09               	movlw	9
  5178  003256  0100               	movlb	0	; () banked
  5179  003258  258B               	addwf	?___awdiv& (0+255),w,b
  5180  00325A  0100               	movlb	0	; () banked
  5181  00325C  6F93               	movwf	___wmul@multiplier& (0+255),b
  5182  00325E  0E00               	movlw	0
  5183  003260  0100               	movlb	0	; () banked
  5184  003262  218C               	addwfc	(?___awdiv+1)& (0+255),w,b
  5185  003264  0100               	movlb	0	; () banked
  5186  003266  6F94               	movwf	(___wmul@multiplier+1)& (0+255),b
  5187  003268  EC21  F02A         	call	___wmul	;wreg free
  5188  00326C  0E29               	movlw	low __npowers_
  5189  00326E  0100               	movlb	0	; () banked
  5190  003270  2593               	addwf	?___wmul& (0+255),w,b
  5191  003272  6EF6               	movwf	tblptrl,c
  5192  003274  0E06               	movlw	high __npowers_
  5193  003276  0100               	movlb	0	; () banked
  5194  003278  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  5195  00327A  6EF7               	movwf	tblptrh,c
  5196  00327C                     	if	0	;There are less than 3 active tblptr bytes
  5197  00327C                     	endif
  5198  00327C  0009               	tblrd		*+
  5199  00327E  CFF5 F09C          	movff	tablat,___ftmul@f2
  5200  003282  0009               	tblrd		*+
  5201  003284  CFF5 F09D          	movff	tablat,___ftmul@f2+1
  5202  003288  000A               	tblrd		*-
  5203  00328A  CFF5 F09E          	movff	tablat,___ftmul@f2+2
  5204  00328E  0E00               	movlw	0
  5205  003290  0100               	movlb	0	; () banked
  5206  003292  6F8E               	movwf	(___awdiv@divisor+1)& (0+255),b
  5207  003294  0E64               	movlw	100
  5208  003296  6F8D               	movwf	___awdiv@divisor& (0+255),b
  5209  003298  C0B1  F08B         	movff	fround@prec,___awdiv@dividend
  5210  00329C  0100               	movlb	0	; () banked
  5211  00329E  6B8C               	clrf	(___awdiv@dividend+1)& (0+255),b
  5212  0032A0  EC41  F025         	call	___awdiv	;wreg free
  5213  0032A4  0E12               	movlw	18
  5214  0032A6  0100               	movlb	0	; () banked
  5215  0032A8  258B               	addwf	?___awdiv& (0+255),w,b
  5216  0032AA  0100               	movlb	0	; () banked
  5217  0032AC  6F93               	movwf	___wmul@multiplier& (0+255),b
  5218  0032AE  0E00               	movlw	0
  5219  0032B0  0100               	movlb	0	; () banked
  5220  0032B2  218C               	addwfc	(?___awdiv+1)& (0+255),w,b
  5221  0032B4  0100               	movlb	0	; () banked
  5222  0032B6  6F94               	movwf	(___wmul@multiplier+1)& (0+255),b
  5223  0032B8  0E00               	movlw	0
  5224  0032BA  0100               	movlb	0	; () banked
  5225  0032BC  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5226  0032BE  0E03               	movlw	3
  5227  0032C0  6F95               	movwf	___wmul@multiplicand& (0+255),b
  5228  0032C2  EC21  F02A         	call	___wmul	;wreg free
  5229  0032C6  0E29               	movlw	low __npowers_
  5230  0032C8  0100               	movlb	0	; () banked
  5231  0032CA  2593               	addwf	?___wmul& (0+255),w,b
  5232  0032CC  6EF6               	movwf	tblptrl,c
  5233  0032CE  0E06               	movlw	high __npowers_
  5234  0032D0  0100               	movlb	0	; () banked
  5235  0032D2  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  5236  0032D4  6EF7               	movwf	tblptrh,c
  5237  0032D6                     	if	0	;There are less than 3 active tblptr bytes
  5238  0032D6                     	endif
  5239  0032D6  0009               	tblrd		*+
  5240  0032D8  CFF5 F099          	movff	tablat,___ftmul@f1
  5241  0032DC  0009               	tblrd		*+
  5242  0032DE  CFF5 F09A          	movff	tablat,___ftmul@f1+1
  5243  0032E2  000A               	tblrd		*-
  5244  0032E4  CFF5 F09B          	movff	tablat,___ftmul@f1+2
  5245  0032E8  EC1F  F01F         	call	___ftmul	;wreg free
  5246  0032EC  C099  F0AE         	movff	?___ftmul,_fround$1619
  5247  0032F0  C09A  F0AF         	movff	?___ftmul+1,_fround$1619+1
  5248  0032F4  C09B  F0B0         	movff	?___ftmul+2,_fround$1619+2
  5249                           
  5250                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5251  0032F8  0E00               	movlw	0
  5252  0032FA  0100               	movlb	0	; () banked
  5253  0032FC  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5254  0032FE  0E03               	movlw	3
  5255  003300  6F95               	movwf	___wmul@multiplicand& (0+255),b
  5256  003302  0E00               	movlw	0
  5257  003304  0100               	movlb	0	; () banked
  5258  003306  6F88               	movwf	(___awmod@divisor+1)& (0+255),b
  5259  003308  0E0A               	movlw	10
  5260  00330A  6F87               	movwf	___awmod@divisor& (0+255),b
  5261  00330C  C0B1  F085         	movff	fround@prec,___awmod@dividend
  5262  003310  0100               	movlb	0	; () banked
  5263  003312  6B86               	clrf	(___awmod@dividend+1)& (0+255),b
  5264  003314  ECA9  F026         	call	___awmod	;wreg free
  5265  003318  C085  F093         	movff	?___awmod,___wmul@multiplier
  5266  00331C  C086  F094         	movff	?___awmod+1,___wmul@multiplier+1
  5267  003320  EC21  F02A         	call	___wmul	;wreg free
  5268  003324  0E29               	movlw	low __npowers_
  5269  003326  0100               	movlb	0	; () banked
  5270  003328  2593               	addwf	?___wmul& (0+255),w,b
  5271  00332A  6EF6               	movwf	tblptrl,c
  5272  00332C  0E06               	movlw	high __npowers_
  5273  00332E  0100               	movlb	0	; () banked
  5274  003330  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  5275  003332  6EF7               	movwf	tblptrh,c
  5276  003334                     	if	0	;There are less than 3 active tblptr bytes
  5277  003334                     	endif
  5278  003334  0009               	tblrd		*+
  5279  003336  CFF5 F09C          	movff	tablat,___ftmul@f2
  5280  00333A  0009               	tblrd		*+
  5281  00333C  CFF5 F09D          	movff	tablat,___ftmul@f2+1
  5282  003340  000A               	tblrd		*-
  5283  003342  CFF5 F09E          	movff	tablat,___ftmul@f2+2
  5284  003346  C0AE  F099         	movff	_fround$1619,___ftmul@f1
  5285  00334A  C0AF  F09A         	movff	_fround$1619+1,___ftmul@f1+1
  5286  00334E  C0B0  F09B         	movff	_fround$1619+2,___ftmul@f1+2
  5287  003352  EC1F  F01F         	call	___ftmul	;wreg free
  5288  003356  C099  F0AB         	movff	?___ftmul,_fround$1620
  5289  00335A  C09A  F0AC         	movff	?___ftmul+1,_fround$1620+1
  5290  00335E  C09B  F0AD         	movff	?___ftmul+2,_fround$1620+2
  5291                           
  5292                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5293  003362  C0AB  F099         	movff	_fround$1620,___ftmul@f1
  5294  003366  C0AC  F09A         	movff	_fround$1620+1,___ftmul@f1+1
  5295  00336A  C0AD  F09B         	movff	_fround$1620+2,___ftmul@f1+2
  5296  00336E  0E00               	movlw	0
  5297  003370  0100               	movlb	0	; () banked
  5298  003372  6F9C               	movwf	___ftmul@f2& (0+255),b
  5299  003374  0E00               	movlw	0
  5300  003376  0100               	movlb	0	; () banked
  5301  003378  6F9D               	movwf	(___ftmul@f2+1)& (0+255),b
  5302  00337A  0E3F               	movlw	63
  5303  00337C  0100               	movlb	0	; () banked
  5304  00337E  6F9E               	movwf	(___ftmul@f2+2)& (0+255),b
  5305  003380  EC1F  F01F         	call	___ftmul	;wreg free
  5306  003384  C099  F0A8         	movff	?___ftmul,?_fround
  5307  003388  C09A  F0A9         	movff	?___ftmul+1,?_fround+1
  5308  00338C  C09B  F0AA         	movff	?___ftmul+2,?_fround+2
  5309  003390  0012               	return	
  5310  003392                     l5896:
  5311                           
  5312                           ;doprnt.c: 415: else if(prec > 10)
  5313  003392  0E0A               	movlw	10
  5314  003394  0100               	movlb	0	; () banked
  5315  003396  65B1               	cpfsgt	fround@prec& (0+255),b
  5316  003398  D06E               	goto	l5904
  5317                           
  5318                           ; BSR set to: 0
  5319                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5320  00339A  0E00               	movlw	0
  5321  00339C  0100               	movlb	0	; () banked
  5322  00339E  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5323  0033A0  0E03               	movlw	3
  5324  0033A2  6F95               	movwf	___wmul@multiplicand& (0+255),b
  5325  0033A4  0E00               	movlw	0
  5326  0033A6  0100               	movlb	0	; () banked
  5327  0033A8  6F88               	movwf	(___awmod@divisor+1)& (0+255),b
  5328  0033AA  0E0A               	movlw	10
  5329  0033AC  6F87               	movwf	___awmod@divisor& (0+255),b
  5330  0033AE  C0B1  F085         	movff	fround@prec,___awmod@dividend
  5331  0033B2  0100               	movlb	0	; () banked
  5332  0033B4  6B86               	clrf	(___awmod@dividend+1)& (0+255),b
  5333  0033B6  ECA9  F026         	call	___awmod	;wreg free
  5334  0033BA  C085  F093         	movff	?___awmod,___wmul@multiplier
  5335  0033BE  C086  F094         	movff	?___awmod+1,___wmul@multiplier+1
  5336  0033C2  EC21  F02A         	call	___wmul	;wreg free
  5337  0033C6  0E29               	movlw	low __npowers_
  5338  0033C8  0100               	movlb	0	; () banked
  5339  0033CA  2593               	addwf	?___wmul& (0+255),w,b
  5340  0033CC  6EF6               	movwf	tblptrl,c
  5341  0033CE  0E06               	movlw	high __npowers_
  5342  0033D0  0100               	movlb	0	; () banked
  5343  0033D2  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  5344  0033D4  6EF7               	movwf	tblptrh,c
  5345  0033D6                     	if	0	;There are less than 3 active tblptr bytes
  5346  0033D6                     	endif
  5347  0033D6  0009               	tblrd		*+
  5348  0033D8  CFF5 F09C          	movff	tablat,___ftmul@f2
  5349  0033DC  0009               	tblrd		*+
  5350  0033DE  CFF5 F09D          	movff	tablat,___ftmul@f2+1
  5351  0033E2  000A               	tblrd		*-
  5352  0033E4  CFF5 F09E          	movff	tablat,___ftmul@f2+2
  5353  0033E8  0E00               	movlw	0
  5354  0033EA  0100               	movlb	0	; () banked
  5355  0033EC  6F8E               	movwf	(___awdiv@divisor+1)& (0+255),b
  5356  0033EE  0E0A               	movlw	10
  5357  0033F0  6F8D               	movwf	___awdiv@divisor& (0+255),b
  5358  0033F2  C0B1  F08B         	movff	fround@prec,___awdiv@dividend
  5359  0033F6  0100               	movlb	0	; () banked
  5360  0033F8  6B8C               	clrf	(___awdiv@dividend+1)& (0+255),b
  5361  0033FA  EC41  F025         	call	___awdiv	;wreg free
  5362  0033FE  0E09               	movlw	9
  5363  003400  0100               	movlb	0	; () banked
  5364  003402  258B               	addwf	?___awdiv& (0+255),w,b
  5365  003404  0100               	movlb	0	; () banked
  5366  003406  6F93               	movwf	___wmul@multiplier& (0+255),b
  5367  003408  0E00               	movlw	0
  5368  00340A  0100               	movlb	0	; () banked
  5369  00340C  218C               	addwfc	(?___awdiv+1)& (0+255),w,b
  5370  00340E  0100               	movlb	0	; () banked
  5371  003410  6F94               	movwf	(___wmul@multiplier+1)& (0+255),b
  5372  003412  0E00               	movlw	0
  5373  003414  0100               	movlb	0	; () banked
  5374  003416  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5375  003418  0E03               	movlw	3
  5376  00341A  6F95               	movwf	___wmul@multiplicand& (0+255),b
  5377  00341C  EC21  F02A         	call	___wmul	;wreg free
  5378  003420  0E29               	movlw	low __npowers_
  5379  003422  0100               	movlb	0	; () banked
  5380  003424  2593               	addwf	?___wmul& (0+255),w,b
  5381  003426  6EF6               	movwf	tblptrl,c
  5382  003428  0E06               	movlw	high __npowers_
  5383  00342A  0100               	movlb	0	; () banked
  5384  00342C  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  5385  00342E  6EF7               	movwf	tblptrh,c
  5386  003430                     	if	0	;There are less than 3 active tblptr bytes
  5387  003430                     	endif
  5388  003430  0009               	tblrd		*+
  5389  003432  CFF5 F099          	movff	tablat,___ftmul@f1
  5390  003436  0009               	tblrd		*+
  5391  003438  CFF5 F09A          	movff	tablat,___ftmul@f1+1
  5392  00343C  000A               	tblrd		*-
  5393  00343E  CFF5 F09B          	movff	tablat,___ftmul@f1+2
  5394  003442  EC1F  F01F         	call	___ftmul	;wreg free
  5395  003446  C099  F0AE         	movff	?___ftmul,_fround$1619
  5396  00344A  C09A  F0AF         	movff	?___ftmul+1,_fround$1619+1
  5397  00344E  C09B  F0B0         	movff	?___ftmul+2,_fround$1619+2
  5398                           
  5399                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5400  003452  C0AE  F099         	movff	_fround$1619,___ftmul@f1
  5401  003456  C0AF  F09A         	movff	_fround$1619+1,___ftmul@f1+1
  5402  00345A  C0B0  F09B         	movff	_fround$1619+2,___ftmul@f1+2
  5403  00345E  0E00               	movlw	0
  5404  003460  0100               	movlb	0	; () banked
  5405  003462  6F9C               	movwf	___ftmul@f2& (0+255),b
  5406  003464  0E00               	movlw	0
  5407  003466  0100               	movlb	0	; () banked
  5408  003468  6F9D               	movwf	(___ftmul@f2+1)& (0+255),b
  5409  00346A  0E3F               	movlw	63
  5410  00346C  0100               	movlb	0	; () banked
  5411  00346E  6F9E               	movwf	(___ftmul@f2+2)& (0+255),b
  5412  003470  EC1F  F01F         	call	___ftmul	;wreg free
  5413  003474  D787               	goto	L5
  5414  003476                     l5904:
  5415                           
  5416                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5417  003476  0100               	movlb	0	; () banked
  5418  003478  51B1               	movf	fround@prec& (0+255),w,b
  5419  00347A  0D03               	mullw	3
  5420  00347C  0E29               	movlw	low __npowers_
  5421  00347E  24F3               	addwf	prodl,w,c
  5422  003480  6EF6               	movwf	tblptrl,c
  5423  003482  0E06               	movlw	high __npowers_
  5424  003484  20F4               	addwfc	prodh,w,c
  5425  003486  6EF7               	movwf	tblptrh,c
  5426  003488                     	if	0	;There are less than 3 active tblptr bytes
  5427  003488                     	endif
  5428  003488  0009               	tblrd		*+
  5429  00348A  CFF5 F099          	movff	tablat,___ftmul@f1
  5430  00348E  0009               	tblrd		*+
  5431  003490  CFF5 F09A          	movff	tablat,___ftmul@f1+1
  5432  003494  000A               	tblrd		*-
  5433  003496  CFF5 F09B          	movff	tablat,___ftmul@f1+2
  5434  00349A  0E00               	movlw	0
  5435  00349C  0100               	movlb	0	; () banked
  5436  00349E  6F9C               	movwf	___ftmul@f2& (0+255),b
  5437  0034A0  0E00               	movlw	0
  5438  0034A2  0100               	movlb	0	; () banked
  5439  0034A4  6F9D               	movwf	(___ftmul@f2+1)& (0+255),b
  5440  0034A6  0E3F               	movlw	63
  5441  0034A8  0100               	movlb	0	; () banked
  5442  0034AA  6F9E               	movwf	(___ftmul@f2+2)& (0+255),b
  5443  0034AC  EC1F  F01F         	call	___ftmul	;wreg free
  5444  0034B0  C099  F0A8         	movff	?___ftmul,?_fround
  5445  0034B4  C09A  F0A9         	movff	?___ftmul+1,?_fround+1
  5446  0034B8  C09B  F0AA         	movff	?___ftmul+2,?_fround+2
  5447  0034BC  0012               	return	
  5448  0034BE                     __end_of_fround:
  5449                           	opt stack 0
  5450                           tosu	equ	0xFFF
  5451                           tosh	equ	0xFFE
  5452                           tosl	equ	0xFFD
  5453                           pclath	equ	0xFFA
  5454                           tblptru	equ	0xFF8
  5455                           tblptrh	equ	0xFF7
  5456                           tblptrl	equ	0xFF6
  5457                           tablat	equ	0xFF5
  5458                           prodh	equ	0xFF4
  5459                           prodl	equ	0xFF3
  5460                           intcon	equ	0xFF2
  5461                           postinc0	equ	0xFEE
  5462                           wreg	equ	0xFE8
  5463                           indf2	equ	0xFDF
  5464                           postinc2	equ	0xFDE
  5465                           postdec2	equ	0xFDD
  5466                           fsr2h	equ	0xFDA
  5467                           fsr2l	equ	0xFD9
  5468                           status	equ	0xFD8
  5469                           
  5470 ;; *************** function ___wmul *****************
  5471 ;; Defined at:
  5472 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;  multiplier      2   51[BANK0 ] unsigned int 
  5475 ;;  multiplicand    2   53[BANK0 ] unsigned int 
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;  product         2   55[BANK0 ] unsigned int 
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  2   51[BANK0 ] unsigned int 
  5480 ;; Registers used:
  5481 ;;		wreg, status,2, status,0, prodl, prodh
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5487 ;;      Params:         0       4       0       0       0       0       0
  5488 ;;      Locals:         0       2       0       0       0       0       0
  5489 ;;      Temps:          0       0       0       0       0       0       0
  5490 ;;      Totals:         0       6       0       0       0       0       0
  5491 ;;Total ram usage:        6 bytes
  5492 ;; Hardware stack levels used:    1
  5493 ;; Hardware stack levels required when called:    7
  5494 ;; This function calls:
  5495 ;;		Nothing
  5496 ;; This function is called by:
  5497 ;;		_fround
  5498 ;;		_scale
  5499 ;;		__doprnt
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           	psect	text8
  5504  005442                     __ptext8:
  5505                           	opt stack 0
  5506  005442                     ___wmul:
  5507                           	opt stack 20
  5508                           
  5509                           ;incstack = 0
  5510  005442  0100               	movlb	0	; () banked
  5511  005444  5193               	movf	___wmul@multiplier& (0+255),w,b
  5512  005446  0100               	movlb	0	; () banked
  5513  005448  0395               	mulwf	___wmul@multiplicand& (0+255),b
  5514  00544A  CFF3 F097          	movff	prodl,___wmul@product
  5515  00544E  CFF4 F098          	movff	prodh,___wmul@product+1
  5516  005452  0100               	movlb	0	; () banked
  5517  005454  5193               	movf	___wmul@multiplier& (0+255),w,b
  5518  005456  0100               	movlb	0	; () banked
  5519  005458  0396               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5520  00545A  50F3               	movf	prodl,w,c
  5521  00545C  0100               	movlb	0	; () banked
  5522  00545E  2798               	addwf	(___wmul@product+1)& (0+255),f,b
  5523  005460  0100               	movlb	0	; () banked
  5524  005462  5194               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5525  005464  0100               	movlb	0	; () banked
  5526  005466  0395               	mulwf	___wmul@multiplicand& (0+255),b
  5527  005468  50F3               	movf	prodl,w,c
  5528  00546A  0100               	movlb	0	; () banked
  5529  00546C  2798               	addwf	(___wmul@product+1)& (0+255),f,b
  5530                           
  5531                           ; BSR set to: 0
  5532  00546E  C097  F093         	movff	___wmul@product,?___wmul
  5533  005472  C098  F094         	movff	___wmul@product+1,?___wmul+1
  5534  005476  0012               	return	
  5535  005478                     __end_of___wmul:
  5536                           	opt stack 0
  5537                           tosu	equ	0xFFF
  5538                           tosh	equ	0xFFE
  5539                           tosl	equ	0xFFD
  5540                           pclath	equ	0xFFA
  5541                           tblptru	equ	0xFF8
  5542                           tblptrh	equ	0xFF7
  5543                           tblptrl	equ	0xFF6
  5544                           tablat	equ	0xFF5
  5545                           prodh	equ	0xFF4
  5546                           prodl	equ	0xFF3
  5547                           intcon	equ	0xFF2
  5548                           postinc0	equ	0xFEE
  5549                           wreg	equ	0xFE8
  5550                           indf2	equ	0xFDF
  5551                           postinc2	equ	0xFDE
  5552                           postdec2	equ	0xFDD
  5553                           fsr2h	equ	0xFDA
  5554                           fsr2l	equ	0xFD9
  5555                           status	equ	0xFD8
  5556                           
  5557 ;; *************** function ___ftmul *****************
  5558 ;; Defined at:
  5559 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  5560 ;; Parameters:    Size  Location     Type
  5561 ;;  f1              3   57[BANK0 ] float 
  5562 ;;  f2              3   60[BANK0 ] float 
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;  f3_as_produc    3   67[BANK0 ] unsigned um
  5565 ;;  sign            1   71[BANK0 ] unsigned char 
  5566 ;;  cntr            1   70[BANK0 ] unsigned char 
  5567 ;;  exp             1   66[BANK0 ] unsigned char 
  5568 ;; Return value:  Size  Location     Type
  5569 ;;                  3   57[BANK0 ] float 
  5570 ;; Registers used:
  5571 ;;		wreg, status,2, status,0, cstack
  5572 ;; Tracked objects:
  5573 ;;		On entry : 0/0
  5574 ;;		On exit  : 0/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5577 ;;      Params:         0       6       0       0       0       0       0
  5578 ;;      Locals:         0       6       0       0       0       0       0
  5579 ;;      Temps:          0       3       0       0       0       0       0
  5580 ;;      Totals:         0      15       0       0       0       0       0
  5581 ;;Total ram usage:       15 bytes
  5582 ;; Hardware stack levels used:    1
  5583 ;; Hardware stack levels required when called:    8
  5584 ;; This function calls:
  5585 ;;		___ftpack
  5586 ;; This function is called by:
  5587 ;;		_fround
  5588 ;;		_scale
  5589 ;;		__doprnt
  5590 ;; This function uses a non-reentrant model
  5591 ;;
  5592                           
  5593                           	psect	text9
  5594  003E3E                     __ptext9:
  5595                           	opt stack 0
  5596  003E3E                     ___ftmul:
  5597                           	opt stack 19
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;incstack = 0
  5601  003E3E  C09B  F09F         	movff	___ftmul@f1+2,??___ftmul
  5602  003E42  0100               	movlb	0	; () banked
  5603  003E44  6BA0               	clrf	(??___ftmul+1)& (0+255),b
  5604  003E46  6BA1               	clrf	(??___ftmul+2)& (0+255),b
  5605  003E48  0100               	movlb	0	; () banked
  5606  003E4A  359A               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  5607  003E4C  0100               	movlb	0	; () banked
  5608  003E4E  379F               	rlcf	??___ftmul& (0+255),f,b
  5609  003E50  E301               	bnc	u8101
  5610  003E52  81A0               	bsf	(??___ftmul+1)& (0+255),0,b
  5611  003E54                     u8101:
  5612  003E54  0100               	movlb	0	; () banked
  5613  003E56  519F               	movf	??___ftmul& (0+255),w,b
  5614  003E58  0100               	movlb	0	; () banked
  5615  003E5A  6FA2               	movwf	___ftmul@exp& (0+255),b
  5616  003E5C  0100               	movlb	0	; () banked
  5617  003E5E  51A2               	movf	___ftmul@exp& (0+255),w,b
  5618  003E60  A4D8               	btfss	status,2,c
  5619  003E62  D00A               	goto	l5844
  5620                           
  5621                           ; BSR set to: 0
  5622  003E64  0E00               	movlw	0
  5623  003E66  0100               	movlb	0	; () banked
  5624  003E68  6F99               	movwf	?___ftmul& (0+255),b
  5625  003E6A  0E00               	movlw	0
  5626  003E6C  0100               	movlb	0	; () banked
  5627  003E6E  6F9A               	movwf	(?___ftmul+1)& (0+255),b
  5628  003E70  0E00               	movlw	0
  5629  003E72  0100               	movlb	0	; () banked
  5630  003E74  6F9B               	movwf	(?___ftmul+2)& (0+255),b
  5631                           
  5632                           ; BSR set to: 0
  5633  003E76  0012               	return	
  5634  003E78                     l5844:
  5635                           
  5636                           ; BSR set to: 0
  5637  003E78  C09E  F09F         	movff	___ftmul@f2+2,??___ftmul
  5638  003E7C  0100               	movlb	0	; () banked
  5639  003E7E  6BA0               	clrf	(??___ftmul+1)& (0+255),b
  5640  003E80  6BA1               	clrf	(??___ftmul+2)& (0+255),b
  5641  003E82  0100               	movlb	0	; () banked
  5642  003E84  359D               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  5643  003E86  0100               	movlb	0	; () banked
  5644  003E88  379F               	rlcf	??___ftmul& (0+255),f,b
  5645  003E8A  E301               	bnc	u8121
  5646  003E8C  81A0               	bsf	(??___ftmul+1)& (0+255),0,b
  5647  003E8E                     u8121:
  5648  003E8E  0100               	movlb	0	; () banked
  5649  003E90  519F               	movf	??___ftmul& (0+255),w,b
  5650  003E92  0100               	movlb	0	; () banked
  5651  003E94  6FA7               	movwf	___ftmul@sign& (0+255),b
  5652  003E96  0100               	movlb	0	; () banked
  5653  003E98  51A7               	movf	___ftmul@sign& (0+255),w,b
  5654  003E9A  A4D8               	btfss	status,2,c
  5655  003E9C  D00A               	goto	l5850
  5656                           
  5657                           ; BSR set to: 0
  5658  003E9E  0E00               	movlw	0
  5659  003EA0  0100               	movlb	0	; () banked
  5660  003EA2  6F99               	movwf	?___ftmul& (0+255),b
  5661  003EA4  0E00               	movlw	0
  5662  003EA6  0100               	movlb	0	; () banked
  5663  003EA8  6F9A               	movwf	(?___ftmul+1)& (0+255),b
  5664  003EAA  0E00               	movlw	0
  5665  003EAC  0100               	movlb	0	; () banked
  5666  003EAE  6F9B               	movwf	(?___ftmul+2)& (0+255),b
  5667                           
  5668                           ; BSR set to: 0
  5669  003EB0  0012               	return	
  5670  003EB2                     l5850:
  5671                           
  5672                           ; BSR set to: 0
  5673  003EB2  0100               	movlb	0	; () banked
  5674  003EB4  51A7               	movf	___ftmul@sign& (0+255),w,b
  5675  003EB6  0F7B               	addlw	123
  5676  003EB8  0100               	movlb	0	; () banked
  5677  003EBA  27A2               	addwf	___ftmul@exp& (0+255),f,b
  5678                           
  5679                           ; BSR set to: 0
  5680  003EBC  C09B  F0A7         	movff	___ftmul@f1+2,___ftmul@sign
  5681  003EC0  0100               	movlb	0	; () banked
  5682  003EC2  519E               	movf	(___ftmul@f2+2)& (0+255),w,b
  5683  003EC4  0100               	movlb	0	; () banked
  5684  003EC6  1BA7               	xorwf	___ftmul@sign& (0+255),f,b
  5685  003EC8  0E80               	movlw	128
  5686  003ECA  0100               	movlb	0	; () banked
  5687  003ECC  17A7               	andwf	___ftmul@sign& (0+255),f,b
  5688                           
  5689                           ; BSR set to: 0
  5690  003ECE  0100               	movlb	0	; () banked
  5691  003ED0  8F9A               	bsf	(___ftmul@f1+1)& (0+255),7,b
  5692                           
  5693                           ; BSR set to: 0
  5694  003ED2  0100               	movlb	0	; () banked
  5695  003ED4  8F9D               	bsf	(___ftmul@f2+1)& (0+255),7,b
  5696                           
  5697                           ; BSR set to: 0
  5698  003ED6  0EFF               	movlw	255
  5699  003ED8  0100               	movlb	0	; () banked
  5700  003EDA  179C               	andwf	___ftmul@f2& (0+255),f,b
  5701  003EDC  0EFF               	movlw	255
  5702  003EDE  0100               	movlb	0	; () banked
  5703  003EE0  179D               	andwf	(___ftmul@f2+1)& (0+255),f,b
  5704  003EE2  0E00               	movlw	0
  5705  003EE4  0100               	movlb	0	; () banked
  5706  003EE6  179E               	andwf	(___ftmul@f2+2)& (0+255),f,b
  5707                           
  5708                           ; BSR set to: 0
  5709  003EE8  0E00               	movlw	0
  5710  003EEA  0100               	movlb	0	; () banked
  5711  003EEC  6FA3               	movwf	___ftmul@f3_as_product& (0+255),b
  5712  003EEE  0E00               	movlw	0
  5713  003EF0  0100               	movlb	0	; () banked
  5714  003EF2  6FA4               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  5715  003EF4  0E00               	movlw	0
  5716  003EF6  0100               	movlb	0	; () banked
  5717  003EF8  6FA5               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  5718                           
  5719                           ; BSR set to: 0
  5720  003EFA  0E07               	movlw	7
  5721  003EFC  0100               	movlb	0	; () banked
  5722  003EFE  6FA6               	movwf	___ftmul@cntr& (0+255),b
  5723  003F00                     l5864:
  5724                           
  5725                           ; BSR set to: 0
  5726  003F00  0100               	movlb	0	; () banked
  5727  003F02  A199               	btfss	___ftmul@f1& (0+255),0,b
  5728  003F04  D00C               	goto	l5868
  5729                           
  5730                           ; BSR set to: 0
  5731  003F06  0100               	movlb	0	; () banked
  5732  003F08  519C               	movf	___ftmul@f2& (0+255),w,b
  5733  003F0A  0100               	movlb	0	; () banked
  5734  003F0C  27A3               	addwf	___ftmul@f3_as_product& (0+255),f,b
  5735  003F0E  0100               	movlb	0	; () banked
  5736  003F10  519D               	movf	(___ftmul@f2+1)& (0+255),w,b
  5737  003F12  0100               	movlb	0	; () banked
  5738  003F14  23A4               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  5739  003F16  0100               	movlb	0	; () banked
  5740  003F18  519E               	movf	(___ftmul@f2+2)& (0+255),w,b
  5741  003F1A  0100               	movlb	0	; () banked
  5742  003F1C  23A5               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  5743  003F1E                     l5868:
  5744                           
  5745                           ; BSR set to: 0
  5746  003F1E  0100               	movlb	0	; () banked
  5747  003F20  90D8               	bcf	status,0,c
  5748  003F22  339B               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  5749  003F24  339A               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  5750  003F26  3399               	rrcf	___ftmul@f1& (0+255),f,b
  5751  003F28  0100               	movlb	0	; () banked
  5752  003F2A  90D8               	bcf	status,0,c
  5753  003F2C  379C               	rlcf	___ftmul@f2& (0+255),f,b
  5754  003F2E  379D               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  5755  003F30  379E               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  5756                           
  5757                           ; BSR set to: 0
  5758  003F32  0100               	movlb	0	; () banked
  5759  003F34  2FA6               	decfsz	___ftmul@cntr& (0+255),f,b
  5760  003F36  D7E4               	goto	l5864
  5761                           
  5762                           ; BSR set to: 0
  5763                           
  5764                           ; BSR set to: 0
  5765  003F38  0E09               	movlw	9
  5766  003F3A  0100               	movlb	0	; () banked
  5767  003F3C  6FA6               	movwf	___ftmul@cntr& (0+255),b
  5768  003F3E                     l5874:
  5769                           
  5770                           ; BSR set to: 0
  5771  003F3E  0100               	movlb	0	; () banked
  5772  003F40  A199               	btfss	___ftmul@f1& (0+255),0,b
  5773  003F42  D00C               	goto	l5878
  5774                           
  5775                           ; BSR set to: 0
  5776  003F44  0100               	movlb	0	; () banked
  5777  003F46  519C               	movf	___ftmul@f2& (0+255),w,b
  5778  003F48  0100               	movlb	0	; () banked
  5779  003F4A  27A3               	addwf	___ftmul@f3_as_product& (0+255),f,b
  5780  003F4C  0100               	movlb	0	; () banked
  5781  003F4E  519D               	movf	(___ftmul@f2+1)& (0+255),w,b
  5782  003F50  0100               	movlb	0	; () banked
  5783  003F52  23A4               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  5784  003F54  0100               	movlb	0	; () banked
  5785  003F56  519E               	movf	(___ftmul@f2+2)& (0+255),w,b
  5786  003F58  0100               	movlb	0	; () banked
  5787  003F5A  23A5               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  5788  003F5C                     l5878:
  5789                           
  5790                           ; BSR set to: 0
  5791  003F5C  0100               	movlb	0	; () banked
  5792  003F5E  90D8               	bcf	status,0,c
  5793  003F60  339B               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  5794  003F62  339A               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  5795  003F64  3399               	rrcf	___ftmul@f1& (0+255),f,b
  5796  003F66  0100               	movlb	0	; () banked
  5797  003F68  90D8               	bcf	status,0,c
  5798  003F6A  33A5               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  5799  003F6C  33A4               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  5800  003F6E  33A3               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  5801                           
  5802                           ; BSR set to: 0
  5803  003F70  0100               	movlb	0	; () banked
  5804  003F72  2FA6               	decfsz	___ftmul@cntr& (0+255),f,b
  5805  003F74  D7E4               	goto	l5874
  5806                           
  5807                           ; BSR set to: 0
  5808                           
  5809                           ; BSR set to: 0
  5810  003F76  C0A3  F085         	movff	___ftmul@f3_as_product,___ftpack@arg
  5811  003F7A  C0A4  F086         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5812  003F7E  C0A5  F087         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5813  003F82  C0A2  F088         	movff	___ftmul@exp,___ftpack@exp
  5814  003F86  C0A7  F089         	movff	___ftmul@sign,___ftpack@sign
  5815  003F8A  ECF0  F022         	call	___ftpack	;wreg free
  5816  003F8E  C085  F099         	movff	?___ftpack,?___ftmul
  5817  003F92  C086  F09A         	movff	?___ftpack+1,?___ftmul+1
  5818  003F96  C087  F09B         	movff	?___ftpack+2,?___ftmul+2
  5819  003F9A  0012               	return	
  5820  003F9C                     __end_of___ftmul:
  5821                           	opt stack 0
  5822                           tosu	equ	0xFFF
  5823                           tosh	equ	0xFFE
  5824                           tosl	equ	0xFFD
  5825                           pclath	equ	0xFFA
  5826                           tblptru	equ	0xFF8
  5827                           tblptrh	equ	0xFF7
  5828                           tblptrl	equ	0xFF6
  5829                           tablat	equ	0xFF5
  5830                           prodh	equ	0xFF4
  5831                           prodl	equ	0xFF3
  5832                           intcon	equ	0xFF2
  5833                           postinc0	equ	0xFEE
  5834                           wreg	equ	0xFE8
  5835                           indf2	equ	0xFDF
  5836                           postinc2	equ	0xFDE
  5837                           postdec2	equ	0xFDD
  5838                           fsr2h	equ	0xFDA
  5839                           fsr2l	equ	0xFD9
  5840                           status	equ	0xFD8
  5841                           
  5842 ;; *************** function ___awmod *****************
  5843 ;; Defined at:
  5844 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  5845 ;; Parameters:    Size  Location     Type
  5846 ;;  dividend        2   37[BANK0 ] int 
  5847 ;;  divisor         2   39[BANK0 ] int 
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;  sign            1   42[BANK0 ] unsigned char 
  5850 ;;  counter         1   41[BANK0 ] unsigned char 
  5851 ;; Return value:  Size  Location     Type
  5852 ;;                  2   37[BANK0 ] int 
  5853 ;; Registers used:
  5854 ;;		wreg, status,2, status,0
  5855 ;; Tracked objects:
  5856 ;;		On entry : 0/0
  5857 ;;		On exit  : 0/0
  5858 ;;		Unchanged: 0/0
  5859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5860 ;;      Params:         0       4       0       0       0       0       0
  5861 ;;      Locals:         0       2       0       0       0       0       0
  5862 ;;      Temps:          0       0       0       0       0       0       0
  5863 ;;      Totals:         0       6       0       0       0       0       0
  5864 ;;Total ram usage:        6 bytes
  5865 ;; Hardware stack levels used:    1
  5866 ;; Hardware stack levels required when called:    7
  5867 ;; This function calls:
  5868 ;;		Nothing
  5869 ;; This function is called by:
  5870 ;;		_fround
  5871 ;;		_scale
  5872 ;; This function uses a non-reentrant model
  5873 ;;
  5874                           
  5875                           	psect	text10
  5876  004D52                     __ptext10:
  5877                           	opt stack 0
  5878  004D52                     ___awmod:
  5879                           	opt stack 20
  5880                           
  5881                           ;incstack = 0
  5882  004D52  0E00               	movlw	0
  5883  004D54  0100               	movlb	0	; () banked
  5884  004D56  6F8A               	movwf	___awmod@sign& (0+255),b
  5885                           
  5886                           ; BSR set to: 0
  5887  004D58  0100               	movlb	0	; () banked
  5888  004D5A  AF86               	btfss	(___awmod@dividend+1)& (0+255),7,b
  5889  004D5C  D008               	goto	l3940
  5890                           
  5891                           ; BSR set to: 0
  5892  004D5E  0100               	movlb	0	; () banked
  5893  004D60  6D85               	negf	___awmod@dividend& (0+255),b
  5894  004D62  1F86               	comf	(___awmod@dividend+1)& (0+255),f,b
  5895  004D64  B0D8               	btfsc	status,0,c
  5896  004D66  2B86               	incf	(___awmod@dividend+1)& (0+255),f,b
  5897                           
  5898                           ; BSR set to: 0
  5899  004D68  0E01               	movlw	1
  5900  004D6A  0100               	movlb	0	; () banked
  5901  004D6C  6F8A               	movwf	___awmod@sign& (0+255),b
  5902  004D6E                     l3940:
  5903                           
  5904                           ; BSR set to: 0
  5905  004D6E  0100               	movlb	0	; () banked
  5906  004D70  AF88               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5907  004D72  D005               	goto	l3944
  5908                           
  5909                           ; BSR set to: 0
  5910  004D74  0100               	movlb	0	; () banked
  5911  004D76  6D87               	negf	___awmod@divisor& (0+255),b
  5912  004D78  1F88               	comf	(___awmod@divisor+1)& (0+255),f,b
  5913  004D7A  B0D8               	btfsc	status,0,c
  5914  004D7C  2B88               	incf	(___awmod@divisor+1)& (0+255),f,b
  5915  004D7E                     l3944:
  5916                           
  5917                           ; BSR set to: 0
  5918  004D7E  0100               	movlb	0	; () banked
  5919  004D80  5187               	movf	___awmod@divisor& (0+255),w,b
  5920  004D82  0100               	movlb	0	; () banked
  5921  004D84  1188               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  5922  004D86  B4D8               	btfsc	status,2,c
  5923  004D88  D026               	goto	l3960
  5924                           
  5925                           ; BSR set to: 0
  5926  004D8A  0E01               	movlw	1
  5927  004D8C  0100               	movlb	0	; () banked
  5928  004D8E  6F89               	movwf	___awmod@counter& (0+255),b
  5929  004D90  D006               	goto	l3950
  5930  004D92                     l3948:
  5931                           
  5932                           ; BSR set to: 0
  5933  004D92  0100               	movlb	0	; () banked
  5934  004D94  90D8               	bcf	status,0,c
  5935  004D96  3787               	rlcf	___awmod@divisor& (0+255),f,b
  5936  004D98  3788               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  5937  004D9A  0100               	movlb	0	; () banked
  5938  004D9C  2B89               	incf	___awmod@counter& (0+255),f,b
  5939  004D9E                     l3950:
  5940                           
  5941                           ; BSR set to: 0
  5942  004D9E  0100               	movlb	0	; () banked
  5943  004DA0  AF88               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5944  004DA2  D7F7               	goto	l3948
  5945  004DA4                     l3952:
  5946                           
  5947                           ; BSR set to: 0
  5948  004DA4  0100               	movlb	0	; () banked
  5949  004DA6  5187               	movf	___awmod@divisor& (0+255),w,b
  5950  004DA8  0100               	movlb	0	; () banked
  5951  004DAA  5D85               	subwf	___awmod@dividend& (0+255),w,b
  5952  004DAC  0100               	movlb	0	; () banked
  5953  004DAE  5188               	movf	(___awmod@divisor+1)& (0+255),w,b
  5954  004DB0  0100               	movlb	0	; () banked
  5955  004DB2  5986               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  5956  004DB4  A0D8               	btfss	status,0,c
  5957  004DB6  D008               	goto	l3956
  5958                           
  5959                           ; BSR set to: 0
  5960  004DB8  0100               	movlb	0	; () banked
  5961  004DBA  5187               	movf	___awmod@divisor& (0+255),w,b
  5962  004DBC  0100               	movlb	0	; () banked
  5963  004DBE  5F85               	subwf	___awmod@dividend& (0+255),f,b
  5964  004DC0  0100               	movlb	0	; () banked
  5965  004DC2  5188               	movf	(___awmod@divisor+1)& (0+255),w,b
  5966  004DC4  0100               	movlb	0	; () banked
  5967  004DC6  5B86               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  5968  004DC8                     l3956:
  5969                           
  5970                           ; BSR set to: 0
  5971  004DC8  0100               	movlb	0	; () banked
  5972  004DCA  90D8               	bcf	status,0,c
  5973  004DCC  3388               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  5974  004DCE  3387               	rrcf	___awmod@divisor& (0+255),f,b
  5975                           
  5976                           ; BSR set to: 0
  5977  004DD0  0100               	movlb	0	; () banked
  5978  004DD2  2F89               	decfsz	___awmod@counter& (0+255),f,b
  5979  004DD4  D7E7               	goto	l3952
  5980  004DD6                     l3960:
  5981                           
  5982                           ; BSR set to: 0
  5983  004DD6  0100               	movlb	0	; () banked
  5984  004DD8  518A               	movf	___awmod@sign& (0+255),w,b
  5985  004DDA  0100               	movlb	0	; () banked
  5986  004DDC  B4D8               	btfsc	status,2,c
  5987  004DDE  D005               	goto	l3964
  5988                           
  5989                           ; BSR set to: 0
  5990  004DE0  0100               	movlb	0	; () banked
  5991  004DE2  6D85               	negf	___awmod@dividend& (0+255),b
  5992  004DE4  1F86               	comf	(___awmod@dividend+1)& (0+255),f,b
  5993  004DE6  B0D8               	btfsc	status,0,c
  5994  004DE8  2B86               	incf	(___awmod@dividend+1)& (0+255),f,b
  5995  004DEA                     l3964:
  5996                           
  5997                           ; BSR set to: 0
  5998  004DEA  C085  F085         	movff	___awmod@dividend,?___awmod
  5999  004DEE  C086  F086         	movff	___awmod@dividend+1,?___awmod+1
  6000  004DF2  0012               	return	
  6001  004DF4                     __end_of___awmod:
  6002                           	opt stack 0
  6003                           tosu	equ	0xFFF
  6004                           tosh	equ	0xFFE
  6005                           tosl	equ	0xFFD
  6006                           pclath	equ	0xFFA
  6007                           tblptru	equ	0xFF8
  6008                           tblptrh	equ	0xFF7
  6009                           tblptrl	equ	0xFF6
  6010                           tablat	equ	0xFF5
  6011                           prodh	equ	0xFF4
  6012                           prodl	equ	0xFF3
  6013                           intcon	equ	0xFF2
  6014                           postinc0	equ	0xFEE
  6015                           wreg	equ	0xFE8
  6016                           indf2	equ	0xFDF
  6017                           postinc2	equ	0xFDE
  6018                           postdec2	equ	0xFDD
  6019                           fsr2h	equ	0xFDA
  6020                           fsr2l	equ	0xFD9
  6021                           status	equ	0xFD8
  6022                           
  6023 ;; *************** function ___awdiv *****************
  6024 ;; Defined at:
  6025 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  6026 ;; Parameters:    Size  Location     Type
  6027 ;;  dividend        2   43[BANK0 ] int 
  6028 ;;  divisor         2   45[BANK0 ] int 
  6029 ;; Auto vars:     Size  Location     Type
  6030 ;;  quotient        2   49[BANK0 ] int 
  6031 ;;  sign            1   48[BANK0 ] unsigned char 
  6032 ;;  counter         1   47[BANK0 ] unsigned char 
  6033 ;; Return value:  Size  Location     Type
  6034 ;;                  2   43[BANK0 ] int 
  6035 ;; Registers used:
  6036 ;;		wreg, status,2, status,0
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6042 ;;      Params:         0       4       0       0       0       0       0
  6043 ;;      Locals:         0       4       0       0       0       0       0
  6044 ;;      Temps:          0       0       0       0       0       0       0
  6045 ;;      Totals:         0       8       0       0       0       0       0
  6046 ;;Total ram usage:        8 bytes
  6047 ;; Hardware stack levels used:    1
  6048 ;; Hardware stack levels required when called:    7
  6049 ;; This function calls:
  6050 ;;		Nothing
  6051 ;; This function is called by:
  6052 ;;		_fround
  6053 ;;		_scale
  6054 ;;		__doprnt
  6055 ;; This function uses a non-reentrant model
  6056 ;;
  6057                           
  6058                           	psect	text11
  6059  004A82                     __ptext11:
  6060                           	opt stack 0
  6061  004A82                     ___awdiv:
  6062                           	opt stack 20
  6063                           
  6064                           ; BSR set to: 0
  6065                           ;incstack = 0
  6066  004A82  0E00               	movlw	0
  6067  004A84  0100               	movlb	0	; () banked
  6068  004A86  6F90               	movwf	___awdiv@sign& (0+255),b
  6069                           
  6070                           ; BSR set to: 0
  6071  004A88  0100               	movlb	0	; () banked
  6072  004A8A  AF8E               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6073  004A8C  D008               	goto	l3896
  6074                           
  6075                           ; BSR set to: 0
  6076  004A8E  0100               	movlb	0	; () banked
  6077  004A90  6D8D               	negf	___awdiv@divisor& (0+255),b
  6078  004A92  1F8E               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6079  004A94  B0D8               	btfsc	status,0,c
  6080  004A96  2B8E               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6081                           
  6082                           ; BSR set to: 0
  6083  004A98  0E01               	movlw	1
  6084  004A9A  0100               	movlb	0	; () banked
  6085  004A9C  6F90               	movwf	___awdiv@sign& (0+255),b
  6086  004A9E                     l3896:
  6087                           
  6088                           ; BSR set to: 0
  6089  004A9E  0100               	movlb	0	; () banked
  6090  004AA0  AF8C               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6091  004AA2  D008               	goto	l3902
  6092                           
  6093                           ; BSR set to: 0
  6094  004AA4  0100               	movlb	0	; () banked
  6095  004AA6  6D8B               	negf	___awdiv@dividend& (0+255),b
  6096  004AA8  1F8C               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6097  004AAA  B0D8               	btfsc	status,0,c
  6098  004AAC  2B8C               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6099                           
  6100                           ; BSR set to: 0
  6101  004AAE  0E01               	movlw	1
  6102  004AB0  0100               	movlb	0	; () banked
  6103  004AB2  1B90               	xorwf	___awdiv@sign& (0+255),f,b
  6104  004AB4                     l3902:
  6105                           
  6106                           ; BSR set to: 0
  6107  004AB4  0E00               	movlw	0
  6108  004AB6  0100               	movlb	0	; () banked
  6109  004AB8  6F92               	movwf	(___awdiv@quotient+1)& (0+255),b
  6110  004ABA  0E00               	movlw	0
  6111  004ABC  6F91               	movwf	___awdiv@quotient& (0+255),b
  6112                           
  6113                           ; BSR set to: 0
  6114  004ABE  0100               	movlb	0	; () banked
  6115  004AC0  518D               	movf	___awdiv@divisor& (0+255),w,b
  6116  004AC2  0100               	movlb	0	; () banked
  6117  004AC4  118E               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6118  004AC6  B4D8               	btfsc	status,2,c
  6119  004AC8  D02C               	goto	l3924
  6120                           
  6121                           ; BSR set to: 0
  6122  004ACA  0E01               	movlw	1
  6123  004ACC  0100               	movlb	0	; () banked
  6124  004ACE  6F8F               	movwf	___awdiv@counter& (0+255),b
  6125  004AD0  D006               	goto	l3910
  6126  004AD2                     l3908:
  6127                           
  6128                           ; BSR set to: 0
  6129  004AD2  0100               	movlb	0	; () banked
  6130  004AD4  90D8               	bcf	status,0,c
  6131  004AD6  378D               	rlcf	___awdiv@divisor& (0+255),f,b
  6132  004AD8  378E               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6133  004ADA  0100               	movlb	0	; () banked
  6134  004ADC  2B8F               	incf	___awdiv@counter& (0+255),f,b
  6135  004ADE                     l3910:
  6136                           
  6137                           ; BSR set to: 0
  6138  004ADE  0100               	movlb	0	; () banked
  6139  004AE0  AF8E               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6140  004AE2  D7F7               	goto	l3908
  6141  004AE4                     l3912:
  6142                           
  6143                           ; BSR set to: 0
  6144  004AE4  0100               	movlb	0	; () banked
  6145  004AE6  90D8               	bcf	status,0,c
  6146  004AE8  3791               	rlcf	___awdiv@quotient& (0+255),f,b
  6147  004AEA  3792               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6148                           
  6149                           ; BSR set to: 0
  6150  004AEC  0100               	movlb	0	; () banked
  6151  004AEE  518D               	movf	___awdiv@divisor& (0+255),w,b
  6152  004AF0  0100               	movlb	0	; () banked
  6153  004AF2  5D8B               	subwf	___awdiv@dividend& (0+255),w,b
  6154  004AF4  0100               	movlb	0	; () banked
  6155  004AF6  518E               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6156  004AF8  0100               	movlb	0	; () banked
  6157  004AFA  598C               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6158  004AFC  A0D8               	btfss	status,0,c
  6159  004AFE  D00A               	goto	l3920
  6160                           
  6161                           ; BSR set to: 0
  6162  004B00  0100               	movlb	0	; () banked
  6163  004B02  518D               	movf	___awdiv@divisor& (0+255),w,b
  6164  004B04  0100               	movlb	0	; () banked
  6165  004B06  5F8B               	subwf	___awdiv@dividend& (0+255),f,b
  6166  004B08  0100               	movlb	0	; () banked
  6167  004B0A  518E               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6168  004B0C  0100               	movlb	0	; () banked
  6169  004B0E  5B8C               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6170                           
  6171                           ; BSR set to: 0
  6172  004B10  0100               	movlb	0	; () banked
  6173  004B12  8191               	bsf	___awdiv@quotient& (0+255),0,b
  6174  004B14                     l3920:
  6175                           
  6176                           ; BSR set to: 0
  6177  004B14  0100               	movlb	0	; () banked
  6178  004B16  90D8               	bcf	status,0,c
  6179  004B18  338E               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6180  004B1A  338D               	rrcf	___awdiv@divisor& (0+255),f,b
  6181                           
  6182                           ; BSR set to: 0
  6183  004B1C  0100               	movlb	0	; () banked
  6184  004B1E  2F8F               	decfsz	___awdiv@counter& (0+255),f,b
  6185  004B20  D7E1               	goto	l3912
  6186  004B22                     l3924:
  6187                           
  6188                           ; BSR set to: 0
  6189  004B22  0100               	movlb	0	; () banked
  6190  004B24  5190               	movf	___awdiv@sign& (0+255),w,b
  6191  004B26  0100               	movlb	0	; () banked
  6192  004B28  B4D8               	btfsc	status,2,c
  6193  004B2A  D005               	goto	l3928
  6194                           
  6195                           ; BSR set to: 0
  6196  004B2C  0100               	movlb	0	; () banked
  6197  004B2E  6D91               	negf	___awdiv@quotient& (0+255),b
  6198  004B30  1F92               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6199  004B32  B0D8               	btfsc	status,0,c
  6200  004B34  2B92               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6201  004B36                     l3928:
  6202                           
  6203                           ; BSR set to: 0
  6204  004B36  C091  F08B         	movff	___awdiv@quotient,?___awdiv
  6205  004B3A  C092  F08C         	movff	___awdiv@quotient+1,?___awdiv+1
  6206  004B3E  0012               	return	
  6207  004B40                     __end_of___awdiv:
  6208                           	opt stack 0
  6209                           tosu	equ	0xFFF
  6210                           tosh	equ	0xFFE
  6211                           tosl	equ	0xFFD
  6212                           pclath	equ	0xFFA
  6213                           tblptru	equ	0xFF8
  6214                           tblptrh	equ	0xFF7
  6215                           tblptrl	equ	0xFF6
  6216                           tablat	equ	0xFF5
  6217                           prodh	equ	0xFF4
  6218                           prodl	equ	0xFF3
  6219                           intcon	equ	0xFF2
  6220                           postinc0	equ	0xFEE
  6221                           wreg	equ	0xFE8
  6222                           indf2	equ	0xFDF
  6223                           postinc2	equ	0xFDE
  6224                           postdec2	equ	0xFDD
  6225                           fsr2h	equ	0xFDA
  6226                           fsr2l	equ	0xFD9
  6227                           status	equ	0xFD8
  6228                           
  6229 ;; *************** function __tdiv_to_l_ *****************
  6230 ;; Defined at:
  6231 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdivl.c"
  6232 ;; Parameters:    Size  Location     Type
  6233 ;;  f1              3   37[BANK0 ] float 
  6234 ;;  f2              3   40[BANK0 ] float 
  6235 ;; Auto vars:     Size  Location     Type
  6236 ;;  quot            4   46[BANK0 ] unsigned long 
  6237 ;;  exp1            1   51[BANK0 ] unsigned char 
  6238 ;;  cntr            1   50[BANK0 ] unsigned char 
  6239 ;; Return value:  Size  Location     Type
  6240 ;;                  4   37[BANK0 ] unsigned long 
  6241 ;; Registers used:
  6242 ;;		wreg, status,2, status,0
  6243 ;; Tracked objects:
  6244 ;;		On entry : 0/0
  6245 ;;		On exit  : 0/0
  6246 ;;		Unchanged: 0/0
  6247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6248 ;;      Params:         0       6       0       0       0       0       0
  6249 ;;      Locals:         0       6       0       0       0       0       0
  6250 ;;      Temps:          0       3       0       0       0       0       0
  6251 ;;      Totals:         0      15       0       0       0       0       0
  6252 ;;Total ram usage:       15 bytes
  6253 ;; Hardware stack levels used:    1
  6254 ;; Hardware stack levels required when called:    7
  6255 ;; This function calls:
  6256 ;;		Nothing
  6257 ;; This function is called by:
  6258 ;;		__doprnt
  6259 ;; This function uses a non-reentrant model
  6260 ;;
  6261                           
  6262                           	psect	text12
  6263  003B18                     __ptext12:
  6264                           	opt stack 0
  6265  003B18                     __tdiv_to_l_:
  6266                           	opt stack 21
  6267                           
  6268                           ; BSR set to: 0
  6269                           ;incstack = 0
  6270  003B18  C087  F08B         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  6271  003B1C  0100               	movlb	0	; () banked
  6272  003B1E  6B8C               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  6273  003B20  6B8D               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  6274  003B22  0100               	movlb	0	; () banked
  6275  003B24  3586               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6276  003B26  0100               	movlb	0	; () banked
  6277  003B28  378B               	rlcf	??__tdiv_to_l_& (0+255),f,b
  6278  003B2A  E301               	bnc	u5461
  6279  003B2C  818C               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  6280  003B2E                     u5461:
  6281  003B2E  0100               	movlb	0	; () banked
  6282  003B30  518B               	movf	??__tdiv_to_l_& (0+255),w,b
  6283  003B32  0100               	movlb	0	; () banked
  6284  003B34  6F93               	movwf	__tdiv_to_l_@exp1& (0+255),b
  6285  003B36  0100               	movlb	0	; () banked
  6286  003B38  5193               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6287  003B3A  A4D8               	btfss	status,2,c
  6288  003B3C  D00A               	goto	l4384
  6289                           
  6290                           ; BSR set to: 0
  6291  003B3E  0E00               	movlw	0
  6292  003B40  0100               	movlb	0	; () banked
  6293  003B42  6F85               	movwf	?__tdiv_to_l_& (0+255),b
  6294  003B44  0E00               	movlw	0
  6295  003B46  6F86               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6296  003B48  0E00               	movlw	0
  6297  003B4A  6F87               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6298  003B4C  0E00               	movlw	0
  6299  003B4E  6F88               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6300                           
  6301                           ; BSR set to: 0
  6302  003B50  0012               	return	
  6303  003B52                     l4384:
  6304                           
  6305                           ; BSR set to: 0
  6306  003B52  C08A  F08B         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  6307  003B56  0100               	movlb	0	; () banked
  6308  003B58  6B8C               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  6309  003B5A  6B8D               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  6310  003B5C  0100               	movlb	0	; () banked
  6311  003B5E  3589               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6312  003B60  0100               	movlb	0	; () banked
  6313  003B62  378B               	rlcf	??__tdiv_to_l_& (0+255),f,b
  6314  003B64  E301               	bnc	u5481
  6315  003B66  818C               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  6316  003B68                     u5481:
  6317  003B68  0100               	movlb	0	; () banked
  6318  003B6A  518B               	movf	??__tdiv_to_l_& (0+255),w,b
  6319  003B6C  0100               	movlb	0	; () banked
  6320  003B6E  6F92               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6321  003B70  0100               	movlb	0	; () banked
  6322  003B72  5192               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6323  003B74  A4D8               	btfss	status,2,c
  6324  003B76  D00A               	goto	l4390
  6325                           
  6326                           ; BSR set to: 0
  6327  003B78  0E00               	movlw	0
  6328  003B7A  0100               	movlb	0	; () banked
  6329  003B7C  6F85               	movwf	?__tdiv_to_l_& (0+255),b
  6330  003B7E  0E00               	movlw	0
  6331  003B80  6F86               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6332  003B82  0E00               	movlw	0
  6333  003B84  6F87               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6334  003B86  0E00               	movlw	0
  6335  003B88  6F88               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6336                           
  6337                           ; BSR set to: 0
  6338  003B8A  0012               	return	
  6339  003B8C                     l4390:
  6340                           
  6341                           ; BSR set to: 0
  6342  003B8C  0100               	movlb	0	; () banked
  6343  003B8E  8F86               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  6344                           
  6345                           ; BSR set to: 0
  6346  003B90  0EFF               	movlw	255
  6347  003B92  0100               	movlb	0	; () banked
  6348  003B94  1785               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  6349  003B96  0EFF               	movlw	255
  6350  003B98  0100               	movlb	0	; () banked
  6351  003B9A  1786               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6352  003B9C  0E00               	movlw	0
  6353  003B9E  0100               	movlb	0	; () banked
  6354  003BA0  1787               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6355  003BA2  0100               	movlb	0	; () banked
  6356  003BA4  8F89               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  6357                           
  6358                           ; BSR set to: 0
  6359  003BA6  0EFF               	movlw	255
  6360  003BA8  0100               	movlb	0	; () banked
  6361  003BAA  1788               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  6362  003BAC  0EFF               	movlw	255
  6363  003BAE  0100               	movlb	0	; () banked
  6364  003BB0  1789               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  6365  003BB2  0E00               	movlw	0
  6366  003BB4  0100               	movlb	0	; () banked
  6367  003BB6  178A               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  6368                           
  6369                           ; BSR set to: 0
  6370  003BB8  0E00               	movlw	0
  6371  003BBA  0100               	movlb	0	; () banked
  6372  003BBC  6F8E               	movwf	__tdiv_to_l_@quot& (0+255),b
  6373  003BBE  0E00               	movlw	0
  6374  003BC0  6F8F               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  6375  003BC2  0E00               	movlw	0
  6376  003BC4  6F90               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  6377  003BC6  0E00               	movlw	0
  6378  003BC8  6F91               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  6379                           
  6380                           ; BSR set to: 0
  6381  003BCA  0E7F               	movlw	127
  6382  003BCC  0100               	movlb	0	; () banked
  6383  003BCE  5F93               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6384                           
  6385                           ; BSR set to: 0
  6386  003BD0  0100               	movlb	0	; () banked
  6387  003BD2  5192               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6388  003BD4  0F98               	addlw	152
  6389  003BD6  0100               	movlb	0	; () banked
  6390  003BD8  5F93               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6391                           
  6392                           ; BSR set to: 0
  6393  003BDA  0E18               	movlw	24
  6394  003BDC  0100               	movlb	0	; () banked
  6395  003BDE  6F92               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6396  003BE0                     l770:
  6397                           
  6398                           ; BSR set to: 0
  6399  003BE0  0100               	movlb	0	; () banked
  6400  003BE2  90D8               	bcf	status,0,c
  6401  003BE4  378E               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6402  003BE6  378F               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6403  003BE8  3790               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6404  003BEA  3791               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6405                           
  6406                           ; BSR set to: 0
  6407  003BEC  0100               	movlb	0	; () banked
  6408  003BEE  5188               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6409  003BF0  0100               	movlb	0	; () banked
  6410  003BF2  5D85               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  6411  003BF4  0100               	movlb	0	; () banked
  6412  003BF6  5189               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6413  003BF8  0100               	movlb	0	; () banked
  6414  003BFA  5986               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6415  003BFC  0100               	movlb	0	; () banked
  6416  003BFE  518A               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6417  003C00  0100               	movlb	0	; () banked
  6418  003C02  5987               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  6419  003C04  A0D8               	btfss	status,0,c
  6420  003C06  D00E               	goto	l771
  6421                           
  6422                           ; BSR set to: 0
  6423  003C08  0100               	movlb	0	; () banked
  6424  003C0A  5188               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6425  003C0C  0100               	movlb	0	; () banked
  6426  003C0E  5F85               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  6427  003C10  0100               	movlb	0	; () banked
  6428  003C12  5189               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6429  003C14  0100               	movlb	0	; () banked
  6430  003C16  5B86               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6431  003C18  0100               	movlb	0	; () banked
  6432  003C1A  518A               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6433  003C1C  0100               	movlb	0	; () banked
  6434  003C1E  5B87               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6435                           
  6436                           ; BSR set to: 0
  6437  003C20  0100               	movlb	0	; () banked
  6438  003C22  818E               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  6439  003C24                     l771:
  6440                           
  6441                           ; BSR set to: 0
  6442  003C24  0100               	movlb	0	; () banked
  6443  003C26  90D8               	bcf	status,0,c
  6444  003C28  3785               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  6445  003C2A  3786               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6446  003C2C  3787               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6447                           
  6448                           ; BSR set to: 0
  6449  003C2E  0100               	movlb	0	; () banked
  6450  003C30  2F92               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  6451  003C32  D7D6               	goto	l770
  6452                           
  6453                           ; BSR set to: 0
  6454                           
  6455                           ; BSR set to: 0
  6456  003C34  0100               	movlb	0	; () banked
  6457  003C36  AF93               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  6458  003C38  D01A               	goto	l4424
  6459                           
  6460                           ; BSR set to: 0
  6461  003C3A  0100               	movlb	0	; () banked
  6462  003C3C  5193               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6463  003C3E  0A80               	xorlw	128
  6464  003C40  0F97               	addlw	151
  6465  003C42  B0D8               	btfsc	status,0,c
  6466  003C44  D00A               	goto	l4420
  6467                           
  6468                           ; BSR set to: 0
  6469  003C46  0E00               	movlw	0
  6470  003C48  0100               	movlb	0	; () banked
  6471  003C4A  6F85               	movwf	?__tdiv_to_l_& (0+255),b
  6472  003C4C  0E00               	movlw	0
  6473  003C4E  6F86               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6474  003C50  0E00               	movlw	0
  6475  003C52  6F87               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6476  003C54  0E00               	movlw	0
  6477  003C56  6F88               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6478                           
  6479                           ; BSR set to: 0
  6480  003C58  0012               	return	
  6481  003C5A                     l4420:
  6482                           
  6483                           ; BSR set to: 0
  6484  003C5A  0100               	movlb	0	; () banked
  6485  003C5C  90D8               	bcf	status,0,c
  6486  003C5E  3391               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6487  003C60  3390               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6488  003C62  338F               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6489  003C64  338E               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  6490                           
  6491                           ; BSR set to: 0
  6492  003C66  0100               	movlb	0	; () banked
  6493  003C68  3F93               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  6494  003C6A  D7F7               	goto	l4420
  6495                           
  6496                           ; BSR set to: 0
  6497  003C6C  D01B               	goto	l777
  6498  003C6E                     l4424:
  6499                           
  6500                           ; BSR set to: 0
  6501  003C6E  0E17               	movlw	23
  6502  003C70  0100               	movlb	0	; () banked
  6503  003C72  6593               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  6504  003C74  D012               	goto	l4432
  6505                           
  6506                           ; BSR set to: 0
  6507  003C76  0E00               	movlw	0
  6508  003C78  0100               	movlb	0	; () banked
  6509  003C7A  6F85               	movwf	?__tdiv_to_l_& (0+255),b
  6510  003C7C  0E00               	movlw	0
  6511  003C7E  6F86               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6512  003C80  0E00               	movlw	0
  6513  003C82  6F87               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6514  003C84  0E00               	movlw	0
  6515  003C86  6F88               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6516                           
  6517                           ; BSR set to: 0
  6518  003C88  0012               	return	
  6519  003C8A                     l4430:
  6520                           
  6521                           ; BSR set to: 0
  6522  003C8A  0100               	movlb	0	; () banked
  6523  003C8C  90D8               	bcf	status,0,c
  6524  003C8E  378E               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6525  003C90  378F               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6526  003C92  3790               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6527  003C94  3791               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6528  003C96  0100               	movlb	0	; () banked
  6529  003C98  0793               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  6530  003C9A                     l4432:
  6531                           
  6532                           ; BSR set to: 0
  6533  003C9A  0100               	movlb	0	; () banked
  6534  003C9C  5193               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6535  003C9E  0100               	movlb	0	; () banked
  6536  003CA0  A4D8               	btfss	status,2,c
  6537  003CA2  D7F3               	goto	l4430
  6538  003CA4                     l777:
  6539                           
  6540                           ; BSR set to: 0
  6541  003CA4  C08E  F085         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  6542  003CA8  C08F  F086         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  6543  003CAC  C090  F087         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  6544  003CB0  C091  F088         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  6545                           
  6546                           ; BSR set to: 0
  6547  003CB4  0012               	return		;funcret
  6548  003CB6                     __end_of__tdiv_to_l_:
  6549                           	opt stack 0
  6550                           tosu	equ	0xFFF
  6551                           tosh	equ	0xFFE
  6552                           tosl	equ	0xFFD
  6553                           pclath	equ	0xFFA
  6554                           tblptru	equ	0xFF8
  6555                           tblptrh	equ	0xFF7
  6556                           tblptrl	equ	0xFF6
  6557                           tablat	equ	0xFF5
  6558                           prodh	equ	0xFF4
  6559                           prodl	equ	0xFF3
  6560                           intcon	equ	0xFF2
  6561                           postinc0	equ	0xFEE
  6562                           wreg	equ	0xFE8
  6563                           indf2	equ	0xFDF
  6564                           postinc2	equ	0xFDE
  6565                           postdec2	equ	0xFDD
  6566                           fsr2h	equ	0xFDA
  6567                           fsr2l	equ	0xFD9
  6568                           status	equ	0xFD8
  6569                           
  6570 ;; *************** function __div_to_l_ *****************
  6571 ;; Defined at:
  6572 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fldivl.c"
  6573 ;; Parameters:    Size  Location     Type
  6574 ;;  f1              3   37[BANK0 ] unsigned long 
  6575 ;;  f2              3   40[BANK0 ] unsigned long 
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;  quot            4   43[BANK0 ] unsigned long 
  6578 ;;  exp1            1   48[BANK0 ] unsigned char 
  6579 ;;  cntr            1   47[BANK0 ] unsigned char 
  6580 ;; Return value:  Size  Location     Type
  6581 ;;                  4   37[BANK0 ] unsigned long 
  6582 ;; Registers used:
  6583 ;;		wreg, status,2, status,0
  6584 ;; Tracked objects:
  6585 ;;		On entry : 0/0
  6586 ;;		On exit  : 0/0
  6587 ;;		Unchanged: 0/0
  6588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6589 ;;      Params:         0       6       0       0       0       0       0
  6590 ;;      Locals:         0       6       0       0       0       0       0
  6591 ;;      Temps:          0       0       0       0       0       0       0
  6592 ;;      Totals:         0      12       0       0       0       0       0
  6593 ;;Total ram usage:       12 bytes
  6594 ;; Hardware stack levels used:    1
  6595 ;; Hardware stack levels required when called:    7
  6596 ;; This function calls:
  6597 ;;		Nothing
  6598 ;; This function is called by:
  6599 ;;		__doprnt
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           	psect	text13
  6604  003CB6                     __ptext13:
  6605                           	opt stack 0
  6606  003CB6                     __div_to_l_:
  6607                           	opt stack 21
  6608                           
  6609                           ; BSR set to: 0
  6610                           ;incstack = 0
  6611  003CB6  0100               	movlb	0	; () banked
  6612  003CB8  3587               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  6613  003CBA  3588               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  6614  003CBC  0100               	movlb	0	; () banked
  6615  003CBE  6F90               	movwf	__div_to_l_@exp1& (0+255),b
  6616  003CC0  0100               	movlb	0	; () banked
  6617  003CC2  5190               	movf	__div_to_l_@exp1& (0+255),w,b
  6618  003CC4  A4D8               	btfss	status,2,c
  6619  003CC6  D00A               	goto	l4440
  6620                           
  6621                           ; BSR set to: 0
  6622  003CC8  0E00               	movlw	0
  6623  003CCA  0100               	movlb	0	; () banked
  6624  003CCC  6F85               	movwf	?__div_to_l_& (0+255),b
  6625  003CCE  0E00               	movlw	0
  6626  003CD0  6F86               	movwf	(?__div_to_l_+1)& (0+255),b
  6627  003CD2  0E00               	movlw	0
  6628  003CD4  6F87               	movwf	(?__div_to_l_+2)& (0+255),b
  6629  003CD6  0E00               	movlw	0
  6630  003CD8  6F88               	movwf	(?__div_to_l_+3)& (0+255),b
  6631                           
  6632                           ; BSR set to: 0
  6633  003CDA  0012               	return	
  6634  003CDC                     l4440:
  6635                           
  6636                           ; BSR set to: 0
  6637  003CDC  0100               	movlb	0	; () banked
  6638  003CDE  358A               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  6639  003CE0  358B               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  6640  003CE2  0100               	movlb	0	; () banked
  6641  003CE4  6F8F               	movwf	__div_to_l_@cntr& (0+255),b
  6642  003CE6  0100               	movlb	0	; () banked
  6643  003CE8  518F               	movf	__div_to_l_@cntr& (0+255),w,b
  6644  003CEA  A4D8               	btfss	status,2,c
  6645  003CEC  D00A               	goto	l4446
  6646                           
  6647                           ; BSR set to: 0
  6648  003CEE  0E00               	movlw	0
  6649  003CF0  0100               	movlb	0	; () banked
  6650  003CF2  6F85               	movwf	?__div_to_l_& (0+255),b
  6651  003CF4  0E00               	movlw	0
  6652  003CF6  6F86               	movwf	(?__div_to_l_+1)& (0+255),b
  6653  003CF8  0E00               	movlw	0
  6654  003CFA  6F87               	movwf	(?__div_to_l_+2)& (0+255),b
  6655  003CFC  0E00               	movlw	0
  6656  003CFE  6F88               	movwf	(?__div_to_l_+3)& (0+255),b
  6657                           
  6658                           ; BSR set to: 0
  6659  003D00  0012               	return	
  6660  003D02                     l4446:
  6661                           
  6662                           ; BSR set to: 0
  6663  003D02  0100               	movlb	0	; () banked
  6664  003D04  8F87               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  6665                           
  6666                           ; BSR set to: 0
  6667  003D06  0EFF               	movlw	255
  6668  003D08  0100               	movlb	0	; () banked
  6669  003D0A  1785               	andwf	__div_to_l_@f1& (0+255),f,b
  6670  003D0C  0EFF               	movlw	255
  6671  003D0E  1786               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  6672  003D10  0EFF               	movlw	255
  6673  003D12  1787               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  6674  003D14  0E00               	movlw	0
  6675  003D16  1788               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  6676                           
  6677                           ; BSR set to: 0
  6678  003D18  0100               	movlb	0	; () banked
  6679  003D1A  8F8A               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  6680  003D1C  0EFF               	movlw	255
  6681  003D1E  0100               	movlb	0	; () banked
  6682  003D20  1788               	andwf	__div_to_l_@f2& (0+255),f,b
  6683  003D22  0EFF               	movlw	255
  6684  003D24  1789               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  6685  003D26  0EFF               	movlw	255
  6686  003D28  178A               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  6687  003D2A  0E00               	movlw	0
  6688  003D2C  178B               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  6689                           
  6690                           ; BSR set to: 0
  6691  003D2E  0E00               	movlw	0
  6692  003D30  0100               	movlb	0	; () banked
  6693  003D32  6F8B               	movwf	__div_to_l_@quot& (0+255),b
  6694  003D34  0E00               	movlw	0
  6695  003D36  6F8C               	movwf	(__div_to_l_@quot+1)& (0+255),b
  6696  003D38  0E00               	movlw	0
  6697  003D3A  6F8D               	movwf	(__div_to_l_@quot+2)& (0+255),b
  6698  003D3C  0E00               	movlw	0
  6699  003D3E  6F8E               	movwf	(__div_to_l_@quot+3)& (0+255),b
  6700                           
  6701                           ; BSR set to: 0
  6702  003D40  0E7F               	movlw	127
  6703  003D42  0100               	movlb	0	; () banked
  6704  003D44  5F90               	subwf	__div_to_l_@exp1& (0+255),f,b
  6705                           
  6706                           ; BSR set to: 0
  6707  003D46  0100               	movlb	0	; () banked
  6708  003D48  518F               	movf	__div_to_l_@cntr& (0+255),w,b
  6709  003D4A  0FA0               	addlw	160
  6710  003D4C  0100               	movlb	0	; () banked
  6711  003D4E  5F90               	subwf	__div_to_l_@exp1& (0+255),f,b
  6712                           
  6713                           ; BSR set to: 0
  6714  003D50  0E20               	movlw	32
  6715  003D52  0100               	movlb	0	; () banked
  6716  003D54  6F8F               	movwf	__div_to_l_@cntr& (0+255),b
  6717  003D56                     l4460:
  6718                           
  6719                           ; BSR set to: 0
  6720  003D56  0100               	movlb	0	; () banked
  6721  003D58  90D8               	bcf	status,0,c
  6722  003D5A  378B               	rlcf	__div_to_l_@quot& (0+255),f,b
  6723  003D5C  378C               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  6724  003D5E  378D               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  6725  003D60  378E               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  6726                           
  6727                           ; BSR set to: 0
  6728  003D62  0100               	movlb	0	; () banked
  6729  003D64  5188               	movf	__div_to_l_@f2& (0+255),w,b
  6730  003D66  0100               	movlb	0	; () banked
  6731  003D68  5D85               	subwf	__div_to_l_@f1& (0+255),w,b
  6732  003D6A  0100               	movlb	0	; () banked
  6733  003D6C  5189               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6734  003D6E  0100               	movlb	0	; () banked
  6735  003D70  5986               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  6736  003D72  0100               	movlb	0	; () banked
  6737  003D74  518A               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6738  003D76  0100               	movlb	0	; () banked
  6739  003D78  5987               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  6740  003D7A  0100               	movlb	0	; () banked
  6741  003D7C  518B               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6742  003D7E  0100               	movlb	0	; () banked
  6743  003D80  5988               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  6744  003D82  A0D8               	btfss	status,0,c
  6745  003D84  D012               	goto	l4468
  6746                           
  6747                           ; BSR set to: 0
  6748  003D86  0100               	movlb	0	; () banked
  6749  003D88  5188               	movf	__div_to_l_@f2& (0+255),w,b
  6750  003D8A  0100               	movlb	0	; () banked
  6751  003D8C  5F85               	subwf	__div_to_l_@f1& (0+255),f,b
  6752  003D8E  0100               	movlb	0	; () banked
  6753  003D90  5189               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6754  003D92  0100               	movlb	0	; () banked
  6755  003D94  5B86               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  6756  003D96  0100               	movlb	0	; () banked
  6757  003D98  518A               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6758  003D9A  0100               	movlb	0	; () banked
  6759  003D9C  5B87               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  6760  003D9E  0100               	movlb	0	; () banked
  6761  003DA0  518B               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6762  003DA2  0100               	movlb	0	; () banked
  6763  003DA4  5B88               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  6764                           
  6765                           ; BSR set to: 0
  6766  003DA6  0100               	movlb	0	; () banked
  6767  003DA8  818B               	bsf	__div_to_l_@quot& (0+255),0,b
  6768  003DAA                     l4468:
  6769                           
  6770                           ; BSR set to: 0
  6771  003DAA  0100               	movlb	0	; () banked
  6772  003DAC  90D8               	bcf	status,0,c
  6773  003DAE  3785               	rlcf	__div_to_l_@f1& (0+255),f,b
  6774  003DB0  3786               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  6775  003DB2  3787               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  6776  003DB4  3788               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  6777                           
  6778                           ; BSR set to: 0
  6779  003DB6  0100               	movlb	0	; () banked
  6780  003DB8  2F8F               	decfsz	__div_to_l_@cntr& (0+255),f,b
  6781  003DBA  D7CD               	goto	l4460
  6782                           
  6783                           ; BSR set to: 0
  6784                           
  6785                           ; BSR set to: 0
  6786  003DBC  0100               	movlb	0	; () banked
  6787  003DBE  AF90               	btfss	__div_to_l_@exp1& (0+255),7,b
  6788  003DC0  D01A               	goto	l4484
  6789                           
  6790                           ; BSR set to: 0
  6791  003DC2  0100               	movlb	0	; () banked
  6792  003DC4  5190               	movf	__div_to_l_@exp1& (0+255),w,b
  6793  003DC6  0A80               	xorlw	128
  6794  003DC8  0F9F               	addlw	159
  6795  003DCA  B0D8               	btfsc	status,0,c
  6796  003DCC  D00A               	goto	l4480
  6797                           
  6798                           ; BSR set to: 0
  6799  003DCE  0E00               	movlw	0
  6800  003DD0  0100               	movlb	0	; () banked
  6801  003DD2  6F85               	movwf	?__div_to_l_& (0+255),b
  6802  003DD4  0E00               	movlw	0
  6803  003DD6  6F86               	movwf	(?__div_to_l_+1)& (0+255),b
  6804  003DD8  0E00               	movlw	0
  6805  003DDA  6F87               	movwf	(?__div_to_l_+2)& (0+255),b
  6806  003DDC  0E00               	movlw	0
  6807  003DDE  6F88               	movwf	(?__div_to_l_+3)& (0+255),b
  6808                           
  6809                           ; BSR set to: 0
  6810  003DE0  0012               	return	
  6811  003DE2                     l4480:
  6812                           
  6813                           ; BSR set to: 0
  6814  003DE2  0100               	movlb	0	; () banked
  6815  003DE4  90D8               	bcf	status,0,c
  6816  003DE6  338E               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  6817  003DE8  338D               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  6818  003DEA  338C               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  6819  003DEC  338B               	rrcf	__div_to_l_@quot& (0+255),f,b
  6820                           
  6821                           ; BSR set to: 0
  6822  003DEE  0100               	movlb	0	; () banked
  6823  003DF0  3F90               	incfsz	__div_to_l_@exp1& (0+255),f,b
  6824  003DF2  D7F7               	goto	l4480
  6825                           
  6826                           ; BSR set to: 0
  6827  003DF4  D01B               	goto	l673
  6828  003DF6                     l4484:
  6829                           
  6830                           ; BSR set to: 0
  6831  003DF6  0E1F               	movlw	31
  6832  003DF8  0100               	movlb	0	; () banked
  6833  003DFA  6590               	cpfsgt	__div_to_l_@exp1& (0+255),b
  6834  003DFC  D012               	goto	l4492
  6835                           
  6836                           ; BSR set to: 0
  6837  003DFE  0E00               	movlw	0
  6838  003E00  0100               	movlb	0	; () banked
  6839  003E02  6F85               	movwf	?__div_to_l_& (0+255),b
  6840  003E04  0E00               	movlw	0
  6841  003E06  6F86               	movwf	(?__div_to_l_+1)& (0+255),b
  6842  003E08  0E00               	movlw	0
  6843  003E0A  6F87               	movwf	(?__div_to_l_+2)& (0+255),b
  6844  003E0C  0E00               	movlw	0
  6845  003E0E  6F88               	movwf	(?__div_to_l_+3)& (0+255),b
  6846                           
  6847                           ; BSR set to: 0
  6848  003E10  0012               	return	
  6849  003E12                     l4490:
  6850                           
  6851                           ; BSR set to: 0
  6852  003E12  0100               	movlb	0	; () banked
  6853  003E14  90D8               	bcf	status,0,c
  6854  003E16  378B               	rlcf	__div_to_l_@quot& (0+255),f,b
  6855  003E18  378C               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  6856  003E1A  378D               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  6857  003E1C  378E               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  6858  003E1E  0100               	movlb	0	; () banked
  6859  003E20  0790               	decf	__div_to_l_@exp1& (0+255),f,b
  6860  003E22                     l4492:
  6861                           
  6862                           ; BSR set to: 0
  6863  003E22  0100               	movlb	0	; () banked
  6864  003E24  5190               	movf	__div_to_l_@exp1& (0+255),w,b
  6865  003E26  0100               	movlb	0	; () banked
  6866  003E28  A4D8               	btfss	status,2,c
  6867  003E2A  D7F3               	goto	l4490
  6868  003E2C                     l673:
  6869                           
  6870                           ; BSR set to: 0
  6871  003E2C  C08B  F085         	movff	__div_to_l_@quot,?__div_to_l_
  6872  003E30  C08C  F086         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  6873  003E34  C08D  F087         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  6874  003E38  C08E  F088         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  6875                           
  6876                           ; BSR set to: 0
  6877  003E3C  0012               	return		;funcret
  6878  003E3E                     __end_of__div_to_l_:
  6879                           	opt stack 0
  6880                           tosu	equ	0xFFF
  6881                           tosh	equ	0xFFE
  6882                           tosl	equ	0xFFD
  6883                           pclath	equ	0xFFA
  6884                           tblptru	equ	0xFF8
  6885                           tblptrh	equ	0xFF7
  6886                           tblptrl	equ	0xFF6
  6887                           tablat	equ	0xFF5
  6888                           prodh	equ	0xFF4
  6889                           prodl	equ	0xFF3
  6890                           intcon	equ	0xFF2
  6891                           postinc0	equ	0xFEE
  6892                           wreg	equ	0xFE8
  6893                           indf2	equ	0xFDF
  6894                           postinc2	equ	0xFDE
  6895                           postdec2	equ	0xFDD
  6896                           fsr2h	equ	0xFDA
  6897                           fsr2l	equ	0xFD9
  6898                           status	equ	0xFD8
  6899                           
  6900 ;; *************** function ___lltoft *****************
  6901 ;; Defined at:
  6902 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lltoft.c"
  6903 ;; Parameters:    Size  Location     Type
  6904 ;;  c               4   45[BANK0 ] unsigned long 
  6905 ;; Auto vars:     Size  Location     Type
  6906 ;;  exp             1   53[BANK0 ] unsigned char 
  6907 ;; Return value:  Size  Location     Type
  6908 ;;                  3   45[BANK0 ] float 
  6909 ;; Registers used:
  6910 ;;		wreg, status,2, status,0, cstack
  6911 ;; Tracked objects:
  6912 ;;		On entry : 0/0
  6913 ;;		On exit  : 0/0
  6914 ;;		Unchanged: 0/0
  6915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6916 ;;      Params:         0       4       0       0       0       0       0
  6917 ;;      Locals:         0       1       0       0       0       0       0
  6918 ;;      Temps:          0       4       0       0       0       0       0
  6919 ;;      Totals:         0       9       0       0       0       0       0
  6920 ;;Total ram usage:        9 bytes
  6921 ;; Hardware stack levels used:    1
  6922 ;; Hardware stack levels required when called:    8
  6923 ;; This function calls:
  6924 ;;		___ftpack
  6925 ;; This function is called by:
  6926 ;;		__doprnt
  6927 ;; This function uses a non-reentrant model
  6928 ;;
  6929                           
  6930                           	psect	text14
  6931  005024                     __ptext14:
  6932                           	opt stack 0
  6933  005024                     ___lltoft:
  6934                           	opt stack 20
  6935                           
  6936                           ; BSR set to: 0
  6937                           ;incstack = 0
  6938  005024  0E8E               	movlw	142
  6939  005026  0100               	movlb	0	; () banked
  6940  005028  6F95               	movwf	___lltoft@exp& (0+255),b
  6941  00502A  D008               	goto	l6004
  6942  00502C                     l6002:
  6943                           
  6944                           ; BSR set to: 0
  6945  00502C  0100               	movlb	0	; () banked
  6946  00502E  90D8               	bcf	status,0,c
  6947  005030  3390               	rrcf	(___lltoft@c+3)& (0+255),f,b
  6948  005032  338F               	rrcf	(___lltoft@c+2)& (0+255),f,b
  6949  005034  338E               	rrcf	(___lltoft@c+1)& (0+255),f,b
  6950  005036  338D               	rrcf	___lltoft@c& (0+255),f,b
  6951  005038  0100               	movlb	0	; () banked
  6952  00503A  2B95               	incf	___lltoft@exp& (0+255),f,b
  6953  00503C                     l6004:
  6954                           
  6955                           ; BSR set to: 0
  6956  00503C  0E00               	movlw	0
  6957  00503E  0100               	movlb	0	; () banked
  6958  005040  158D               	andwf	___lltoft@c& (0+255),w,b
  6959  005042  0100               	movlb	0	; () banked
  6960  005044  6F91               	movwf	??___lltoft& (0+255),b
  6961  005046  0E00               	movlw	0
  6962  005048  0100               	movlb	0	; () banked
  6963  00504A  158E               	andwf	(___lltoft@c+1)& (0+255),w,b
  6964  00504C  0100               	movlb	0	; () banked
  6965  00504E  6F92               	movwf	(??___lltoft+1)& (0+255),b
  6966  005050  0E00               	movlw	0
  6967  005052  0100               	movlb	0	; () banked
  6968  005054  158F               	andwf	(___lltoft@c+2)& (0+255),w,b
  6969  005056  0100               	movlb	0	; () banked
  6970  005058  6F93               	movwf	(??___lltoft+2)& (0+255),b
  6971  00505A  0EFF               	movlw	255
  6972  00505C  0100               	movlb	0	; () banked
  6973  00505E  1590               	andwf	(___lltoft@c+3)& (0+255),w,b
  6974  005060  0100               	movlb	0	; () banked
  6975  005062  6F94               	movwf	(??___lltoft+3)& (0+255),b
  6976  005064  0100               	movlb	0	; () banked
  6977  005066  5191               	movf	??___lltoft& (0+255),w,b
  6978  005068  0100               	movlb	0	; () banked
  6979  00506A  1192               	iorwf	(??___lltoft+1)& (0+255),w,b
  6980  00506C  0100               	movlb	0	; () banked
  6981  00506E  1193               	iorwf	(??___lltoft+2)& (0+255),w,b
  6982  005070  0100               	movlb	0	; () banked
  6983  005072  1194               	iorwf	(??___lltoft+3)& (0+255),w,b
  6984  005074  A4D8               	btfss	status,2,c
  6985  005076  D7DA               	goto	l6002
  6986                           
  6987                           ; BSR set to: 0
  6988                           
  6989                           ; BSR set to: 0
  6990  005078  C08D  F085         	movff	___lltoft@c,___ftpack@arg
  6991  00507C  C08E  F086         	movff	___lltoft@c+1,___ftpack@arg+1
  6992  005080  C08F  F087         	movff	___lltoft@c+2,___ftpack@arg+2
  6993  005084  C095  F088         	movff	___lltoft@exp,___ftpack@exp
  6994  005088  0E00               	movlw	0
  6995  00508A  0100               	movlb	0	; () banked
  6996  00508C  6F89               	movwf	___ftpack@sign& (0+255),b
  6997  00508E  ECF0  F022         	call	___ftpack	;wreg free
  6998  005092  C085  F08D         	movff	?___ftpack,?___lltoft
  6999  005096  C086  F08E         	movff	?___ftpack+1,?___lltoft+1
  7000  00509A  C087  F08F         	movff	?___ftpack+2,?___lltoft+2
  7001  00509E  0012               	return	
  7002  0050A0                     __end_of___lltoft:
  7003                           	opt stack 0
  7004                           tosu	equ	0xFFF
  7005                           tosh	equ	0xFFE
  7006                           tosl	equ	0xFFD
  7007                           pclath	equ	0xFFA
  7008                           tblptru	equ	0xFF8
  7009                           tblptrh	equ	0xFF7
  7010                           tblptrl	equ	0xFF6
  7011                           tablat	equ	0xFF5
  7012                           prodh	equ	0xFF4
  7013                           prodl	equ	0xFF3
  7014                           intcon	equ	0xFF2
  7015                           postinc0	equ	0xFEE
  7016                           wreg	equ	0xFE8
  7017                           indf2	equ	0xFDF
  7018                           postinc2	equ	0xFDE
  7019                           postdec2	equ	0xFDD
  7020                           fsr2h	equ	0xFDA
  7021                           fsr2l	equ	0xFD9
  7022                           status	equ	0xFD8
  7023                           
  7024 ;; *************** function ___llmod *****************
  7025 ;; Defined at:
  7026 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;  dividend        4   50[BANK0 ] unsigned long 
  7029 ;;  divisor         4   54[BANK0 ] unsigned long 
  7030 ;; Auto vars:     Size  Location     Type
  7031 ;;  counter         1   58[BANK0 ] unsigned char 
  7032 ;; Return value:  Size  Location     Type
  7033 ;;                  4   50[BANK0 ] unsigned long 
  7034 ;; Registers used:
  7035 ;;		wreg, status,2, status,0
  7036 ;; Tracked objects:
  7037 ;;		On entry : 0/0
  7038 ;;		On exit  : 0/0
  7039 ;;		Unchanged: 0/0
  7040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7041 ;;      Params:         0       8       0       0       0       0       0
  7042 ;;      Locals:         0       1       0       0       0       0       0
  7043 ;;      Temps:          0       0       0       0       0       0       0
  7044 ;;      Totals:         0       9       0       0       0       0       0
  7045 ;;Total ram usage:        9 bytes
  7046 ;; Hardware stack levels used:    1
  7047 ;; Hardware stack levels required when called:    7
  7048 ;; This function calls:
  7049 ;;		Nothing
  7050 ;; This function is called by:
  7051 ;;		__doprnt
  7052 ;; This function uses a non-reentrant model
  7053 ;;
  7054                           
  7055                           	psect	text15
  7056  004DF4                     __ptext15:
  7057                           	opt stack 0
  7058  004DF4                     ___llmod:
  7059                           	opt stack 21
  7060                           
  7061                           ;incstack = 0
  7062  004DF4  0100               	movlb	0	; () banked
  7063  004DF6  5196               	movf	___llmod@divisor& (0+255),w,b
  7064  004DF8  0100               	movlb	0	; () banked
  7065  004DFA  1197               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  7066  004DFC  0100               	movlb	0	; () banked
  7067  004DFE  1198               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  7068  004E00  0100               	movlb	0	; () banked
  7069  004E02  1199               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  7070  004E04  B4D8               	btfsc	status,2,c
  7071  004E06  D03A               	goto	l884
  7072                           
  7073                           ; BSR set to: 0
  7074  004E08  0E01               	movlw	1
  7075  004E0A  0100               	movlb	0	; () banked
  7076  004E0C  6F9A               	movwf	___llmod@counter& (0+255),b
  7077  004E0E  D008               	goto	l4598
  7078  004E10                     l4596:
  7079                           
  7080                           ; BSR set to: 0
  7081  004E10  0100               	movlb	0	; () banked
  7082  004E12  90D8               	bcf	status,0,c
  7083  004E14  3796               	rlcf	___llmod@divisor& (0+255),f,b
  7084  004E16  3797               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  7085  004E18  3798               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  7086  004E1A  3799               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  7087  004E1C  0100               	movlb	0	; () banked
  7088  004E1E  2B9A               	incf	___llmod@counter& (0+255),f,b
  7089  004E20                     l4598:
  7090                           
  7091                           ; BSR set to: 0
  7092  004E20  0100               	movlb	0	; () banked
  7093  004E22  AF99               	btfss	(___llmod@divisor+3)& (0+255),7,b
  7094  004E24  D7F5               	goto	l4596
  7095  004E26                     l4600:
  7096                           
  7097                           ; BSR set to: 0
  7098  004E26  0100               	movlb	0	; () banked
  7099  004E28  5196               	movf	___llmod@divisor& (0+255),w,b
  7100  004E2A  0100               	movlb	0	; () banked
  7101  004E2C  5D92               	subwf	___llmod@dividend& (0+255),w,b
  7102  004E2E  0100               	movlb	0	; () banked
  7103  004E30  5197               	movf	(___llmod@divisor+1)& (0+255),w,b
  7104  004E32  0100               	movlb	0	; () banked
  7105  004E34  5993               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  7106  004E36  0100               	movlb	0	; () banked
  7107  004E38  5198               	movf	(___llmod@divisor+2)& (0+255),w,b
  7108  004E3A  0100               	movlb	0	; () banked
  7109  004E3C  5994               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  7110  004E3E  0100               	movlb	0	; () banked
  7111  004E40  5199               	movf	(___llmod@divisor+3)& (0+255),w,b
  7112  004E42  0100               	movlb	0	; () banked
  7113  004E44  5995               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  7114  004E46  A0D8               	btfss	status,0,c
  7115  004E48  D010               	goto	l4604
  7116                           
  7117                           ; BSR set to: 0
  7118  004E4A  0100               	movlb	0	; () banked
  7119  004E4C  5196               	movf	___llmod@divisor& (0+255),w,b
  7120  004E4E  0100               	movlb	0	; () banked
  7121  004E50  5F92               	subwf	___llmod@dividend& (0+255),f,b
  7122  004E52  0100               	movlb	0	; () banked
  7123  004E54  5197               	movf	(___llmod@divisor+1)& (0+255),w,b
  7124  004E56  0100               	movlb	0	; () banked
  7125  004E58  5B93               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  7126  004E5A  0100               	movlb	0	; () banked
  7127  004E5C  5198               	movf	(___llmod@divisor+2)& (0+255),w,b
  7128  004E5E  0100               	movlb	0	; () banked
  7129  004E60  5B94               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  7130  004E62  0100               	movlb	0	; () banked
  7131  004E64  5199               	movf	(___llmod@divisor+3)& (0+255),w,b
  7132  004E66  0100               	movlb	0	; () banked
  7133  004E68  5B95               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  7134  004E6A                     l4604:
  7135                           
  7136                           ; BSR set to: 0
  7137  004E6A  0100               	movlb	0	; () banked
  7138  004E6C  90D8               	bcf	status,0,c
  7139  004E6E  3399               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  7140  004E70  3398               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  7141  004E72  3397               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  7142  004E74  3396               	rrcf	___llmod@divisor& (0+255),f,b
  7143                           
  7144                           ; BSR set to: 0
  7145  004E76  0100               	movlb	0	; () banked
  7146  004E78  2F9A               	decfsz	___llmod@counter& (0+255),f,b
  7147  004E7A  D7D5               	goto	l4600
  7148  004E7C                     l884:
  7149                           
  7150                           ; BSR set to: 0
  7151  004E7C  C092  F092         	movff	___llmod@dividend,?___llmod
  7152  004E80  C093  F093         	movff	___llmod@dividend+1,?___llmod+1
  7153  004E84  C094  F094         	movff	___llmod@dividend+2,?___llmod+2
  7154  004E88  C095  F095         	movff	___llmod@dividend+3,?___llmod+3
  7155                           
  7156                           ; BSR set to: 0
  7157  004E8C  0012               	return		;funcret
  7158  004E8E                     __end_of___llmod:
  7159                           	opt stack 0
  7160                           tosu	equ	0xFFF
  7161                           tosh	equ	0xFFE
  7162                           tosl	equ	0xFFD
  7163                           pclath	equ	0xFFA
  7164                           tblptru	equ	0xFF8
  7165                           tblptrh	equ	0xFF7
  7166                           tblptrl	equ	0xFF6
  7167                           tablat	equ	0xFF5
  7168                           prodh	equ	0xFF4
  7169                           prodl	equ	0xFF3
  7170                           intcon	equ	0xFF2
  7171                           postinc0	equ	0xFEE
  7172                           wreg	equ	0xFE8
  7173                           indf2	equ	0xFDF
  7174                           postinc2	equ	0xFDE
  7175                           postdec2	equ	0xFDD
  7176                           fsr2h	equ	0xFDA
  7177                           fsr2l	equ	0xFD9
  7178                           status	equ	0xFD8
  7179                           
  7180 ;; *************** function ___lldiv *****************
  7181 ;; Defined at:
  7182 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
  7183 ;; Parameters:    Size  Location     Type
  7184 ;;  dividend        4   37[BANK0 ] unsigned long 
  7185 ;;  divisor         4   41[BANK0 ] unsigned long 
  7186 ;; Auto vars:     Size  Location     Type
  7187 ;;  quotient        4   45[BANK0 ] unsigned long 
  7188 ;;  counter         1   49[BANK0 ] unsigned char 
  7189 ;; Return value:  Size  Location     Type
  7190 ;;                  4   37[BANK0 ] unsigned long 
  7191 ;; Registers used:
  7192 ;;		wreg, status,2, status,0
  7193 ;; Tracked objects:
  7194 ;;		On entry : 0/0
  7195 ;;		On exit  : 0/0
  7196 ;;		Unchanged: 0/0
  7197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7198 ;;      Params:         0       8       0       0       0       0       0
  7199 ;;      Locals:         0       5       0       0       0       0       0
  7200 ;;      Temps:          0       0       0       0       0       0       0
  7201 ;;      Totals:         0      13       0       0       0       0       0
  7202 ;;Total ram usage:       13 bytes
  7203 ;; Hardware stack levels used:    1
  7204 ;; Hardware stack levels required when called:    7
  7205 ;; This function calls:
  7206 ;;		Nothing
  7207 ;; This function is called by:
  7208 ;;		__doprnt
  7209 ;; This function uses a non-reentrant model
  7210 ;;
  7211                           
  7212                           	psect	text16
  7213  004B40                     __ptext16:
  7214                           	opt stack 0
  7215  004B40                     ___lldiv:
  7216                           	opt stack 21
  7217                           
  7218                           ; BSR set to: 0
  7219                           ;incstack = 0
  7220  004B40  0E00               	movlw	0
  7221  004B42  0100               	movlb	0	; () banked
  7222  004B44  6F8D               	movwf	___lldiv@quotient& (0+255),b
  7223  004B46  0E00               	movlw	0
  7224  004B48  6F8E               	movwf	(___lldiv@quotient+1)& (0+255),b
  7225  004B4A  0E00               	movlw	0
  7226  004B4C  6F8F               	movwf	(___lldiv@quotient+2)& (0+255),b
  7227  004B4E  0E00               	movlw	0
  7228  004B50  6F90               	movwf	(___lldiv@quotient+3)& (0+255),b
  7229                           
  7230                           ; BSR set to: 0
  7231  004B52  0100               	movlb	0	; () banked
  7232  004B54  5189               	movf	___lldiv@divisor& (0+255),w,b
  7233  004B56  0100               	movlb	0	; () banked
  7234  004B58  118A               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7235  004B5A  0100               	movlb	0	; () banked
  7236  004B5C  118B               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7237  004B5E  0100               	movlb	0	; () banked
  7238  004B60  118C               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  7239  004B62  B4D8               	btfsc	status,2,c
  7240  004B64  D042               	goto	l874
  7241                           
  7242                           ; BSR set to: 0
  7243  004B66  0E01               	movlw	1
  7244  004B68  0100               	movlb	0	; () banked
  7245  004B6A  6F91               	movwf	___lldiv@counter& (0+255),b
  7246  004B6C  D008               	goto	l4578
  7247  004B6E                     l4576:
  7248                           
  7249                           ; BSR set to: 0
  7250  004B6E  0100               	movlb	0	; () banked
  7251  004B70  90D8               	bcf	status,0,c
  7252  004B72  3789               	rlcf	___lldiv@divisor& (0+255),f,b
  7253  004B74  378A               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7254  004B76  378B               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7255  004B78  378C               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7256  004B7A  0100               	movlb	0	; () banked
  7257  004B7C  2B91               	incf	___lldiv@counter& (0+255),f,b
  7258  004B7E                     l4578:
  7259                           
  7260                           ; BSR set to: 0
  7261  004B7E  0100               	movlb	0	; () banked
  7262  004B80  AF8C               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  7263  004B82  D7F5               	goto	l4576
  7264  004B84                     l4580:
  7265                           
  7266                           ; BSR set to: 0
  7267  004B84  0100               	movlb	0	; () banked
  7268  004B86  90D8               	bcf	status,0,c
  7269  004B88  378D               	rlcf	___lldiv@quotient& (0+255),f,b
  7270  004B8A  378E               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  7271  004B8C  378F               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  7272  004B8E  3790               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  7273                           
  7274                           ; BSR set to: 0
  7275  004B90  0100               	movlb	0	; () banked
  7276  004B92  5189               	movf	___lldiv@divisor& (0+255),w,b
  7277  004B94  0100               	movlb	0	; () banked
  7278  004B96  5D85               	subwf	___lldiv@dividend& (0+255),w,b
  7279  004B98  0100               	movlb	0	; () banked
  7280  004B9A  518A               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7281  004B9C  0100               	movlb	0	; () banked
  7282  004B9E  5986               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7283  004BA0  0100               	movlb	0	; () banked
  7284  004BA2  518B               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7285  004BA4  0100               	movlb	0	; () banked
  7286  004BA6  5987               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7287  004BA8  0100               	movlb	0	; () banked
  7288  004BAA  518C               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7289  004BAC  0100               	movlb	0	; () banked
  7290  004BAE  5988               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7291  004BB0  A0D8               	btfss	status,0,c
  7292  004BB2  D012               	goto	l4588
  7293                           
  7294                           ; BSR set to: 0
  7295  004BB4  0100               	movlb	0	; () banked
  7296  004BB6  5189               	movf	___lldiv@divisor& (0+255),w,b
  7297  004BB8  0100               	movlb	0	; () banked
  7298  004BBA  5F85               	subwf	___lldiv@dividend& (0+255),f,b
  7299  004BBC  0100               	movlb	0	; () banked
  7300  004BBE  518A               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7301  004BC0  0100               	movlb	0	; () banked
  7302  004BC2  5B86               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7303  004BC4  0100               	movlb	0	; () banked
  7304  004BC6  518B               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7305  004BC8  0100               	movlb	0	; () banked
  7306  004BCA  5B87               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7307  004BCC  0100               	movlb	0	; () banked
  7308  004BCE  518C               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7309  004BD0  0100               	movlb	0	; () banked
  7310  004BD2  5B88               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7311                           
  7312                           ; BSR set to: 0
  7313  004BD4  0100               	movlb	0	; () banked
  7314  004BD6  818D               	bsf	___lldiv@quotient& (0+255),0,b
  7315  004BD8                     l4588:
  7316                           
  7317                           ; BSR set to: 0
  7318  004BD8  0100               	movlb	0	; () banked
  7319  004BDA  90D8               	bcf	status,0,c
  7320  004BDC  338C               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7321  004BDE  338B               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7322  004BE0  338A               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7323  004BE2  3389               	rrcf	___lldiv@divisor& (0+255),f,b
  7324                           
  7325                           ; BSR set to: 0
  7326  004BE4  0100               	movlb	0	; () banked
  7327  004BE6  2F91               	decfsz	___lldiv@counter& (0+255),f,b
  7328  004BE8  D7CD               	goto	l4580
  7329  004BEA                     l874:
  7330                           
  7331                           ; BSR set to: 0
  7332  004BEA  C08D  F085         	movff	___lldiv@quotient,?___lldiv
  7333  004BEE  C08E  F086         	movff	___lldiv@quotient+1,?___lldiv+1
  7334  004BF2  C08F  F087         	movff	___lldiv@quotient+2,?___lldiv+2
  7335  004BF6  C090  F088         	movff	___lldiv@quotient+3,?___lldiv+3
  7336                           
  7337                           ; BSR set to: 0
  7338  004BFA  0012               	return		;funcret
  7339  004BFC                     __end_of___lldiv:
  7340                           	opt stack 0
  7341                           tosu	equ	0xFFF
  7342                           tosh	equ	0xFFE
  7343                           tosl	equ	0xFFD
  7344                           pclath	equ	0xFFA
  7345                           tblptru	equ	0xFF8
  7346                           tblptrh	equ	0xFF7
  7347                           tblptrl	equ	0xFF6
  7348                           tablat	equ	0xFF5
  7349                           prodh	equ	0xFF4
  7350                           prodl	equ	0xFF3
  7351                           intcon	equ	0xFF2
  7352                           postinc0	equ	0xFEE
  7353                           wreg	equ	0xFE8
  7354                           indf2	equ	0xFDF
  7355                           postinc2	equ	0xFDE
  7356                           postdec2	equ	0xFDD
  7357                           fsr2h	equ	0xFDA
  7358                           fsr2l	equ	0xFD9
  7359                           status	equ	0xFD8
  7360                           
  7361 ;; *************** function ___fttol *****************
  7362 ;; Defined at:
  7363 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  7364 ;; Parameters:    Size  Location     Type
  7365 ;;  f1              3   79[BANK0 ] float 
  7366 ;; Auto vars:     Size  Location     Type
  7367 ;;  lval            4    1[BANK1 ] unsigned long 
  7368 ;;  exp1            1    5[BANK1 ] unsigned char 
  7369 ;;  sign1           1    0[BANK1 ] unsigned char 
  7370 ;; Return value:  Size  Location     Type
  7371 ;;                  4   79[BANK0 ] long 
  7372 ;; Registers used:
  7373 ;;		wreg, status,2, status,0
  7374 ;; Tracked objects:
  7375 ;;		On entry : 0/0
  7376 ;;		On exit  : 0/0
  7377 ;;		Unchanged: 0/0
  7378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7379 ;;      Params:         0       4       0       0       0       0       0
  7380 ;;      Locals:         0       0       6       0       0       0       0
  7381 ;;      Temps:          0       5       0       0       0       0       0
  7382 ;;      Totals:         0       9       6       0       0       0       0
  7383 ;;Total ram usage:       15 bytes
  7384 ;; Hardware stack levels used:    1
  7385 ;; Hardware stack levels required when called:    7
  7386 ;; This function calls:
  7387 ;;		Nothing
  7388 ;; This function is called by:
  7389 ;;		__doprnt
  7390 ;; This function uses a non-reentrant model
  7391 ;;
  7392                           
  7393                           	psect	text17
  7394  004242                     __ptext17:
  7395                           	opt stack 0
  7396  004242                     ___fttol:
  7397                           	opt stack 21
  7398                           
  7399                           ; BSR set to: 0
  7400                           ;incstack = 0
  7401  004242  C0B1  F0B3         	movff	___fttol@f1+2,??___fttol
  7402  004246  0100               	movlb	0	; () banked
  7403  004248  6BB4               	clrf	(??___fttol+1)& (0+255),b
  7404  00424A  6BB5               	clrf	(??___fttol+2)& (0+255),b
  7405  00424C  0100               	movlb	0	; () banked
  7406  00424E  35B0               	rlcf	(___fttol@f1+1)& (0+255),w,b
  7407  004250  0100               	movlb	0	; () banked
  7408  004252  37B3               	rlcf	??___fttol& (0+255),f,b
  7409  004254  E301               	bnc	u8241
  7410  004256  81B4               	bsf	(??___fttol+1)& (0+255),0,b
  7411  004258                     u8241:
  7412  004258  0100               	movlb	0	; () banked
  7413  00425A  51B3               	movf	??___fttol& (0+255),w,b
  7414  00425C  0101               	movlb	1	; () banked
  7415  00425E  6F05               	movwf	___fttol@exp1& (0+255),b
  7416  004260  0101               	movlb	1	; () banked
  7417  004262  5105               	movf	___fttol@exp1& (0+255),w,b
  7418  004264  A4D8               	btfss	status,2,c
  7419  004266  D00A               	goto	l5960
  7420                           
  7421                           ; BSR set to: 1
  7422  004268  0E00               	movlw	0
  7423  00426A  0100               	movlb	0	; () banked
  7424  00426C  6FAF               	movwf	?___fttol& (0+255),b
  7425  00426E  0E00               	movlw	0
  7426  004270  6FB0               	movwf	(?___fttol+1)& (0+255),b
  7427  004272  0E00               	movlw	0
  7428  004274  6FB1               	movwf	(?___fttol+2)& (0+255),b
  7429  004276  0E00               	movlw	0
  7430  004278  6FB2               	movwf	(?___fttol+3)& (0+255),b
  7431                           
  7432                           ; BSR set to: 0
  7433  00427A  0012               	return	
  7434  00427C                     l5960:
  7435  00427C  0E17               	movlw	23
  7436  00427E  0100               	movlb	0	; () banked
  7437  004280  6FB3               	movwf	??___fttol& (0+255),b
  7438  004282  C0AF  F0B4         	movff	___fttol@f1,??___fttol+1
  7439  004286  C0B0  F0B5         	movff	___fttol@f1+1,??___fttol+2
  7440  00428A  C0B1  F0B6         	movff	___fttol@f1+2,??___fttol+3
  7441  00428E  0100               	movlb	0	; () banked
  7442  004290  29B3               	incf	??___fttol& (0+255),w,b
  7443  004292  0100               	movlb	0	; () banked
  7444  004294  6FB7               	movwf	(??___fttol+4)& (0+255),b
  7445  004296  D005               	goto	u8260
  7446  004298                     u8265:
  7447  004298  0100               	movlb	0	; () banked
  7448  00429A  90D8               	bcf	status,0,c
  7449  00429C  33B6               	rrcf	(??___fttol+3)& (0+255),f,b
  7450  00429E  33B5               	rrcf	(??___fttol+2)& (0+255),f,b
  7451  0042A0  33B4               	rrcf	(??___fttol+1)& (0+255),f,b
  7452  0042A2                     u8260:
  7453  0042A2  0100               	movlb	0	; () banked
  7454  0042A4  2FB7               	decfsz	(??___fttol+4)& (0+255),f,b
  7455  0042A6  D7F8               	goto	u8265
  7456  0042A8  0100               	movlb	0	; () banked
  7457  0042AA  51B4               	movf	(??___fttol+1)& (0+255),w,b
  7458  0042AC  0101               	movlb	1	; () banked
  7459  0042AE  6F00               	movwf	___fttol@sign1& (0+255),b
  7460                           
  7461                           ; BSR set to: 1
  7462  0042B0  0100               	movlb	0	; () banked
  7463  0042B2  8FB0               	bsf	(___fttol@f1+1)& (0+255),7,b
  7464                           
  7465                           ; BSR set to: 0
  7466  0042B4  0EFF               	movlw	255
  7467  0042B6  0100               	movlb	0	; () banked
  7468  0042B8  17AF               	andwf	___fttol@f1& (0+255),f,b
  7469  0042BA  0EFF               	movlw	255
  7470  0042BC  0100               	movlb	0	; () banked
  7471  0042BE  17B0               	andwf	(___fttol@f1+1)& (0+255),f,b
  7472  0042C0  0E00               	movlw	0
  7473  0042C2  0100               	movlb	0	; () banked
  7474  0042C4  17B1               	andwf	(___fttol@f1+2)& (0+255),f,b
  7475                           
  7476                           ; BSR set to: 0
  7477  0042C6  0100               	movlb	0	; () banked
  7478  0042C8  51AF               	movf	___fttol@f1& (0+255),w,b
  7479  0042CA  0101               	movlb	1	; () banked
  7480  0042CC  6F01               	movwf	___fttol@lval& (0+255),b
  7481  0042CE  0100               	movlb	0	; () banked
  7482  0042D0  51B0               	movf	(___fttol@f1+1)& (0+255),w,b
  7483  0042D2  0101               	movlb	1	; () banked
  7484  0042D4  6F02               	movwf	(___fttol@lval+1)& (0+255),b
  7485  0042D6  0100               	movlb	0	; () banked
  7486  0042D8  51B1               	movf	(___fttol@f1+2)& (0+255),w,b
  7487  0042DA  0101               	movlb	1	; () banked
  7488  0042DC  6F03               	movwf	(___fttol@lval+2)& (0+255),b
  7489  0042DE  0101               	movlb	1	; () banked
  7490  0042E0  6B04               	clrf	(___fttol@lval+3)& (0+255),b
  7491                           
  7492                           ; BSR set to: 1
  7493  0042E2  0E8E               	movlw	142
  7494  0042E4  0101               	movlb	1	; () banked
  7495  0042E6  5F05               	subwf	___fttol@exp1& (0+255),f,b
  7496                           
  7497                           ; BSR set to: 1
  7498  0042E8  0101               	movlb	1	; () banked
  7499  0042EA  AF05               	btfss	___fttol@exp1& (0+255),7,b
  7500  0042EC  D01A               	goto	l5982
  7501                           
  7502                           ; BSR set to: 1
  7503  0042EE  0101               	movlb	1	; () banked
  7504  0042F0  5105               	movf	___fttol@exp1& (0+255),w,b
  7505  0042F2  0A80               	xorlw	128
  7506  0042F4  0F8F               	addlw	143
  7507  0042F6  B0D8               	btfsc	status,0,c
  7508  0042F8  D00A               	goto	l5978
  7509                           
  7510                           ; BSR set to: 1
  7511  0042FA  0E00               	movlw	0
  7512  0042FC  0100               	movlb	0	; () banked
  7513  0042FE  6FAF               	movwf	?___fttol& (0+255),b
  7514  004300  0E00               	movlw	0
  7515  004302  6FB0               	movwf	(?___fttol+1)& (0+255),b
  7516  004304  0E00               	movlw	0
  7517  004306  6FB1               	movwf	(?___fttol+2)& (0+255),b
  7518  004308  0E00               	movlw	0
  7519  00430A  6FB2               	movwf	(?___fttol+3)& (0+255),b
  7520                           
  7521                           ; BSR set to: 0
  7522  00430C  0012               	return	
  7523  00430E                     l5978:
  7524  00430E  0101               	movlb	1	; () banked
  7525  004310  90D8               	bcf	status,0,c
  7526  004312  3304               	rrcf	(___fttol@lval+3)& (0+255),f,b
  7527  004314  3303               	rrcf	(___fttol@lval+2)& (0+255),f,b
  7528  004316  3302               	rrcf	(___fttol@lval+1)& (0+255),f,b
  7529  004318  3301               	rrcf	___fttol@lval& (0+255),f,b
  7530                           
  7531                           ; BSR set to: 1
  7532  00431A  0101               	movlb	1	; () banked
  7533  00431C  3F05               	incfsz	___fttol@exp1& (0+255),f,b
  7534  00431E  D7F7               	goto	l5978
  7535                           
  7536                           ; BSR set to: 1
  7537  004320  D01B               	goto	l5992
  7538  004322                     l5982:
  7539                           
  7540                           ; BSR set to: 1
  7541  004322  0E17               	movlw	23
  7542  004324  0101               	movlb	1	; () banked
  7543  004326  6505               	cpfsgt	___fttol@exp1& (0+255),b
  7544  004328  D012               	goto	l5990
  7545                           
  7546                           ; BSR set to: 1
  7547  00432A  0E00               	movlw	0
  7548  00432C  0100               	movlb	0	; () banked
  7549  00432E  6FAF               	movwf	?___fttol& (0+255),b
  7550  004330  0E00               	movlw	0
  7551  004332  6FB0               	movwf	(?___fttol+1)& (0+255),b
  7552  004334  0E00               	movlw	0
  7553  004336  6FB1               	movwf	(?___fttol+2)& (0+255),b
  7554  004338  0E00               	movlw	0
  7555  00433A  6FB2               	movwf	(?___fttol+3)& (0+255),b
  7556                           
  7557                           ; BSR set to: 0
  7558  00433C  0012               	return	
  7559  00433E                     l5988:
  7560  00433E  0101               	movlb	1	; () banked
  7561  004340  90D8               	bcf	status,0,c
  7562  004342  3701               	rlcf	___fttol@lval& (0+255),f,b
  7563  004344  3702               	rlcf	(___fttol@lval+1)& (0+255),f,b
  7564  004346  3703               	rlcf	(___fttol@lval+2)& (0+255),f,b
  7565  004348  3704               	rlcf	(___fttol@lval+3)& (0+255),f,b
  7566  00434A  0101               	movlb	1	; () banked
  7567  00434C  0705               	decf	___fttol@exp1& (0+255),f,b
  7568  00434E                     l5990:
  7569  00434E  0101               	movlb	1	; () banked
  7570  004350  5105               	movf	___fttol@exp1& (0+255),w,b
  7571  004352  0101               	movlb	1	; () banked
  7572  004354  A4D8               	btfss	status,2,c
  7573  004356  D7F3               	goto	l5988
  7574  004358                     l5992:
  7575                           
  7576                           ; BSR set to: 1
  7577  004358  0101               	movlb	1	; () banked
  7578  00435A  5100               	movf	___fttol@sign1& (0+255),w,b
  7579  00435C  0101               	movlb	1	; () banked
  7580  00435E  B4D8               	btfsc	status,2,c
  7581  004360  D009               	goto	l5996
  7582                           
  7583                           ; BSR set to: 1
  7584  004362  0101               	movlb	1	; () banked
  7585  004364  1F04               	comf	(___fttol@lval+3)& (0+255),f,b
  7586  004366  1F03               	comf	(___fttol@lval+2)& (0+255),f,b
  7587  004368  1F02               	comf	(___fttol@lval+1)& (0+255),f,b
  7588  00436A  6D01               	negf	___fttol@lval& (0+255),b
  7589  00436C  0E00               	movlw	0
  7590  00436E  2302               	addwfc	(___fttol@lval+1)& (0+255),f,b
  7591  004370  2303               	addwfc	(___fttol@lval+2)& (0+255),f,b
  7592  004372  2304               	addwfc	(___fttol@lval+3)& (0+255),f,b
  7593  004374                     l5996:
  7594                           
  7595                           ; BSR set to: 1
  7596  004374  C101  F0AF         	movff	___fttol@lval,?___fttol
  7597  004378  C102  F0B0         	movff	___fttol@lval+1,?___fttol+1
  7598  00437C  C103  F0B1         	movff	___fttol@lval+2,?___fttol+2
  7599  004380  C104  F0B2         	movff	___fttol@lval+3,?___fttol+3
  7600  004384  0012               	return	
  7601  004386                     __end_of___fttol:
  7602                           	opt stack 0
  7603                           tosu	equ	0xFFF
  7604                           tosh	equ	0xFFE
  7605                           tosl	equ	0xFFD
  7606                           pclath	equ	0xFFA
  7607                           tblptru	equ	0xFF8
  7608                           tblptrh	equ	0xFF7
  7609                           tblptrl	equ	0xFF6
  7610                           tablat	equ	0xFF5
  7611                           prodh	equ	0xFF4
  7612                           prodl	equ	0xFF3
  7613                           intcon	equ	0xFF2
  7614                           postinc0	equ	0xFEE
  7615                           wreg	equ	0xFE8
  7616                           indf2	equ	0xFDF
  7617                           postinc2	equ	0xFDE
  7618                           postdec2	equ	0xFDD
  7619                           fsr2h	equ	0xFDA
  7620                           fsr2l	equ	0xFD9
  7621                           status	equ	0xFD8
  7622                           
  7623 ;; *************** function ___ftsub *****************
  7624 ;; Defined at:
  7625 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  7626 ;; Parameters:    Size  Location     Type
  7627 ;;  f1              3    3[BANK1 ] float 
  7628 ;;  f2              3    6[BANK1 ] float 
  7629 ;; Auto vars:     Size  Location     Type
  7630 ;;		None
  7631 ;; Return value:  Size  Location     Type
  7632 ;;                  3    3[BANK1 ] float 
  7633 ;; Registers used:
  7634 ;;		wreg, status,2, status,0, cstack
  7635 ;; Tracked objects:
  7636 ;;		On entry : 0/0
  7637 ;;		On exit  : 0/0
  7638 ;;		Unchanged: 0/0
  7639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7640 ;;      Params:         0       0       6       0       0       0       0
  7641 ;;      Locals:         0       0       0       0       0       0       0
  7642 ;;      Temps:          0       0       0       0       0       0       0
  7643 ;;      Totals:         0       0       6       0       0       0       0
  7644 ;;Total ram usage:        6 bytes
  7645 ;; Hardware stack levels used:    1
  7646 ;; Hardware stack levels required when called:    9
  7647 ;; This function calls:
  7648 ;;		___ftadd
  7649 ;; This function is called by:
  7650 ;;		__doprnt
  7651 ;; This function uses a non-reentrant model
  7652 ;;
  7653                           
  7654                           	psect	text18
  7655  00529E                     __ptext18:
  7656                           	opt stack 0
  7657  00529E                     ___ftsub:
  7658                           	opt stack 19
  7659                           
  7660                           ;incstack = 0
  7661  00529E  0101               	movlb	1	; () banked
  7662  0052A0  5106               	movf	___ftsub@f2& (0+255),w,b
  7663  0052A2  0101               	movlb	1	; () banked
  7664  0052A4  1107               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  7665  0052A6  0101               	movlb	1	; () banked
  7666  0052A8  1108               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  7667  0052AA  B4D8               	btfsc	status,2,c
  7668  0052AC  D009               	goto	l5950
  7669                           
  7670                           ; BSR set to: 1
  7671  0052AE  0E00               	movlw	0
  7672  0052B0  0101               	movlb	1	; () banked
  7673  0052B2  1B06               	xorwf	___ftsub@f2& (0+255),f,b
  7674  0052B4  0E00               	movlw	0
  7675  0052B6  0101               	movlb	1	; () banked
  7676  0052B8  1B07               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  7677  0052BA  0E80               	movlw	128
  7678  0052BC  0101               	movlb	1	; () banked
  7679  0052BE  1B08               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  7680  0052C0                     l5950:
  7681                           
  7682                           ; BSR set to: 1
  7683  0052C0  C103  F0B2         	movff	___ftsub@f1,___ftadd@f1
  7684  0052C4  C104  F0B3         	movff	___ftsub@f1+1,___ftadd@f1+1
  7685  0052C8  C105  F0B4         	movff	___ftsub@f1+2,___ftadd@f1+2
  7686  0052CC  C106  F0B5         	movff	___ftsub@f2,___ftadd@f2
  7687  0052D0  C107  F0B6         	movff	___ftsub@f2+1,___ftadd@f2+1
  7688  0052D4  C108  F0B7         	movff	___ftsub@f2+2,___ftadd@f2+2
  7689  0052D8  EC5F  F01A         	call	___ftadd	;wreg free
  7690  0052DC  C0B2  F103         	movff	?___ftadd,?___ftsub
  7691  0052E0  C0B3  F104         	movff	?___ftadd+1,?___ftsub+1
  7692  0052E4  C0B4  F105         	movff	?___ftadd+2,?___ftsub+2
  7693  0052E8  0012               	return	
  7694  0052EA                     __end_of___ftsub:
  7695                           	opt stack 0
  7696                           tosu	equ	0xFFF
  7697                           tosh	equ	0xFFE
  7698                           tosl	equ	0xFFD
  7699                           pclath	equ	0xFFA
  7700                           tblptru	equ	0xFF8
  7701                           tblptrh	equ	0xFF7
  7702                           tblptrl	equ	0xFF6
  7703                           tablat	equ	0xFF5
  7704                           prodh	equ	0xFF4
  7705                           prodl	equ	0xFF3
  7706                           intcon	equ	0xFF2
  7707                           postinc0	equ	0xFEE
  7708                           wreg	equ	0xFE8
  7709                           indf2	equ	0xFDF
  7710                           postinc2	equ	0xFDE
  7711                           postdec2	equ	0xFDD
  7712                           fsr2h	equ	0xFDA
  7713                           fsr2l	equ	0xFD9
  7714                           status	equ	0xFD8
  7715                           
  7716 ;; *************** function ___ftadd *****************
  7717 ;; Defined at:
  7718 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  7719 ;; Parameters:    Size  Location     Type
  7720 ;;  f1              3   82[BANK0 ] float 
  7721 ;;  f2              3   85[BANK0 ] float 
  7722 ;; Auto vars:     Size  Location     Type
  7723 ;;  exp1            1    2[BANK1 ] unsigned char 
  7724 ;;  exp2            1    1[BANK1 ] unsigned char 
  7725 ;;  sign            1    0[BANK1 ] unsigned char 
  7726 ;; Return value:  Size  Location     Type
  7727 ;;                  3   82[BANK0 ] float 
  7728 ;; Registers used:
  7729 ;;		wreg, status,2, status,0, cstack
  7730 ;; Tracked objects:
  7731 ;;		On entry : 0/0
  7732 ;;		On exit  : 0/0
  7733 ;;		Unchanged: 0/0
  7734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7735 ;;      Params:         0       6       0       0       0       0       0
  7736 ;;      Locals:         0       0       3       0       0       0       0
  7737 ;;      Temps:          0       3       0       0       0       0       0
  7738 ;;      Totals:         0       9       3       0       0       0       0
  7739 ;;Total ram usage:       12 bytes
  7740 ;; Hardware stack levels used:    1
  7741 ;; Hardware stack levels required when called:    8
  7742 ;; This function calls:
  7743 ;;		___ftpack
  7744 ;; This function is called by:
  7745 ;;		__doprnt
  7746 ;;		___ftsub
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           
  7750                           	psect	text19
  7751  0034BE                     __ptext19:
  7752                           	opt stack 0
  7753  0034BE                     ___ftadd:
  7754                           	opt stack 19
  7755                           
  7756                           ;incstack = 0
  7757  0034BE  C0B4  F0B8         	movff	___ftadd@f1+2,??___ftadd
  7758  0034C2  0100               	movlb	0	; () banked
  7759  0034C4  6BB9               	clrf	(??___ftadd+1)& (0+255),b
  7760  0034C6  6BBA               	clrf	(??___ftadd+2)& (0+255),b
  7761  0034C8  0100               	movlb	0	; () banked
  7762  0034CA  35B3               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  7763  0034CC  0100               	movlb	0	; () banked
  7764  0034CE  37B8               	rlcf	??___ftadd& (0+255),f,b
  7765  0034D0  E301               	bnc	u7891
  7766  0034D2  81B9               	bsf	(??___ftadd+1)& (0+255),0,b
  7767  0034D4                     u7891:
  7768  0034D4  0100               	movlb	0	; () banked
  7769  0034D6  51B8               	movf	??___ftadd& (0+255),w,b
  7770  0034D8  0101               	movlb	1	; () banked
  7771  0034DA  6F02               	movwf	___ftadd@exp1& (0+255),b
  7772  0034DC  C0B7  F0B8         	movff	___ftadd@f2+2,??___ftadd
  7773  0034E0  0100               	movlb	0	; () banked
  7774  0034E2  6BB9               	clrf	(??___ftadd+1)& (0+255),b
  7775  0034E4  6BBA               	clrf	(??___ftadd+2)& (0+255),b
  7776  0034E6  0100               	movlb	0	; () banked
  7777  0034E8  35B6               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  7778  0034EA  0100               	movlb	0	; () banked
  7779  0034EC  37B8               	rlcf	??___ftadd& (0+255),f,b
  7780  0034EE  E301               	bnc	u7901
  7781  0034F0  81B9               	bsf	(??___ftadd+1)& (0+255),0,b
  7782  0034F2                     u7901:
  7783  0034F2  0100               	movlb	0	; () banked
  7784  0034F4  51B8               	movf	??___ftadd& (0+255),w,b
  7785  0034F6  0101               	movlb	1	; () banked
  7786  0034F8  6F01               	movwf	___ftadd@exp2& (0+255),b
  7787                           
  7788                           ; BSR set to: 1
  7789  0034FA  0101               	movlb	1	; () banked
  7790  0034FC  5102               	movf	___ftadd@exp1& (0+255),w,b
  7791  0034FE  0101               	movlb	1	; () banked
  7792  003500  B4D8               	btfsc	status,2,c
  7793  003502  D011               	goto	l728
  7794                           
  7795                           ; BSR set to: 1
  7796  003504  0101               	movlb	1	; () banked
  7797  003506  5101               	movf	___ftadd@exp2& (0+255),w,b
  7798  003508  0101               	movlb	1	; () banked
  7799  00350A  5D02               	subwf	___ftadd@exp1& (0+255),w,b
  7800  00350C  B0D8               	btfsc	status,0,c
  7801  00350E  D012               	goto	l5776
  7802                           
  7803                           ; BSR set to: 1
  7804  003510  0101               	movlb	1	; () banked
  7805  003512  5102               	movf	___ftadd@exp1& (0+255),w,b
  7806  003514  0800               	sublw	0
  7807  003516  0101               	movlb	1	; () banked
  7808  003518  2501               	addwf	___ftadd@exp2& (0+255),w,b
  7809  00351A  0100               	movlb	0	; () banked
  7810  00351C  6FB8               	movwf	??___ftadd& (0+255),b
  7811  00351E  0E18               	movlw	24
  7812  003520  0100               	movlb	0	; () banked
  7813  003522  65B8               	cpfsgt	??___ftadd& (0+255),b
  7814  003524  D007               	goto	l5776
  7815  003526                     l728:
  7816  003526  C0B5  F0B2         	movff	___ftadd@f2,?___ftadd
  7817  00352A  C0B6  F0B3         	movff	___ftadd@f2+1,?___ftadd+1
  7818  00352E  C0B7  F0B4         	movff	___ftadd@f2+2,?___ftadd+2
  7819  003532  0012               	return	
  7820  003534                     l5776:
  7821  003534  0101               	movlb	1	; () banked
  7822  003536  5101               	movf	___ftadd@exp2& (0+255),w,b
  7823  003538  0101               	movlb	1	; () banked
  7824  00353A  B4D8               	btfsc	status,2,c
  7825  00353C  D011               	goto	l732
  7826                           
  7827                           ; BSR set to: 1
  7828  00353E  0101               	movlb	1	; () banked
  7829  003540  5102               	movf	___ftadd@exp1& (0+255),w,b
  7830  003542  0101               	movlb	1	; () banked
  7831  003544  5D01               	subwf	___ftadd@exp2& (0+255),w,b
  7832  003546  B0D8               	btfsc	status,0,c
  7833  003548  D012               	goto	l5782
  7834                           
  7835                           ; BSR set to: 1
  7836  00354A  0101               	movlb	1	; () banked
  7837  00354C  5101               	movf	___ftadd@exp2& (0+255),w,b
  7838  00354E  0800               	sublw	0
  7839  003550  0101               	movlb	1	; () banked
  7840  003552  2502               	addwf	___ftadd@exp1& (0+255),w,b
  7841  003554  0100               	movlb	0	; () banked
  7842  003556  6FB8               	movwf	??___ftadd& (0+255),b
  7843  003558  0E18               	movlw	24
  7844  00355A  0100               	movlb	0	; () banked
  7845  00355C  65B8               	cpfsgt	??___ftadd& (0+255),b
  7846  00355E  D007               	goto	l5782
  7847  003560                     l732:
  7848  003560  C0B2  F0B2         	movff	___ftadd@f1,?___ftadd
  7849  003564  C0B3  F0B3         	movff	___ftadd@f1+1,?___ftadd+1
  7850  003568  C0B4  F0B4         	movff	___ftadd@f1+2,?___ftadd+2
  7851  00356C  0012               	return	
  7852  00356E                     l5782:
  7853  00356E  0E06               	movlw	6
  7854  003570  0101               	movlb	1	; () banked
  7855  003572  6F00               	movwf	___ftadd@sign& (0+255),b
  7856                           
  7857                           ; BSR set to: 1
  7858  003574  0100               	movlb	0	; () banked
  7859  003576  AFB4               	btfss	(___ftadd@f1+2)& (0+255),7,b
  7860  003578  D002               	goto	l5788
  7861                           
  7862                           ; BSR set to: 0
  7863  00357A  0101               	movlb	1	; () banked
  7864  00357C  8F00               	bsf	___ftadd@sign& (0+255),7,b
  7865  00357E                     l5788:
  7866  00357E  0100               	movlb	0	; () banked
  7867  003580  AFB7               	btfss	(___ftadd@f2+2)& (0+255),7,b
  7868  003582  D002               	goto	l734
  7869                           
  7870                           ; BSR set to: 0
  7871  003584  0101               	movlb	1	; () banked
  7872  003586  8D00               	bsf	___ftadd@sign& (0+255),6,b
  7873  003588                     l734:
  7874  003588  0100               	movlb	0	; () banked
  7875  00358A  8FB3               	bsf	(___ftadd@f1+1)& (0+255),7,b
  7876                           
  7877                           ; BSR set to: 0
  7878  00358C  0EFF               	movlw	255
  7879  00358E  0100               	movlb	0	; () banked
  7880  003590  17B2               	andwf	___ftadd@f1& (0+255),f,b
  7881  003592  0EFF               	movlw	255
  7882  003594  0100               	movlb	0	; () banked
  7883  003596  17B3               	andwf	(___ftadd@f1+1)& (0+255),f,b
  7884  003598  0E00               	movlw	0
  7885  00359A  0100               	movlb	0	; () banked
  7886  00359C  17B4               	andwf	(___ftadd@f1+2)& (0+255),f,b
  7887  00359E  0100               	movlb	0	; () banked
  7888  0035A0  8FB6               	bsf	(___ftadd@f2+1)& (0+255),7,b
  7889                           
  7890                           ; BSR set to: 0
  7891  0035A2  0EFF               	movlw	255
  7892  0035A4  0100               	movlb	0	; () banked
  7893  0035A6  17B5               	andwf	___ftadd@f2& (0+255),f,b
  7894  0035A8  0EFF               	movlw	255
  7895  0035AA  0100               	movlb	0	; () banked
  7896  0035AC  17B6               	andwf	(___ftadd@f2+1)& (0+255),f,b
  7897  0035AE  0E00               	movlw	0
  7898  0035B0  0100               	movlb	0	; () banked
  7899  0035B2  17B7               	andwf	(___ftadd@f2+2)& (0+255),f,b
  7900                           
  7901                           ; BSR set to: 0
  7902  0035B4  0101               	movlb	1	; () banked
  7903  0035B6  5101               	movf	___ftadd@exp2& (0+255),w,b
  7904  0035B8  0101               	movlb	1	; () banked
  7905  0035BA  5D02               	subwf	___ftadd@exp1& (0+255),w,b
  7906  0035BC  B0D8               	btfsc	status,0,c
  7907  0035BE  D025               	goto	l5808
  7908  0035C0                     l5798:
  7909  0035C0  0100               	movlb	0	; () banked
  7910  0035C2  90D8               	bcf	status,0,c
  7911  0035C4  37B5               	rlcf	___ftadd@f2& (0+255),f,b
  7912  0035C6  37B6               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  7913  0035C8  37B7               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  7914  0035CA  0101               	movlb	1	; () banked
  7915  0035CC  0701               	decf	___ftadd@exp2& (0+255),f,b
  7916                           
  7917                           ; BSR set to: 1
  7918  0035CE  0101               	movlb	1	; () banked
  7919  0035D0  5102               	movf	___ftadd@exp1& (0+255),w,b
  7920  0035D2  0101               	movlb	1	; () banked
  7921  0035D4  1901               	xorwf	___ftadd@exp2& (0+255),w,b
  7922  0035D6  B4D8               	btfsc	status,2,c
  7923  0035D8  D011               	goto	l5806
  7924                           
  7925                           ; BSR set to: 1
  7926  0035DA  0101               	movlb	1	; () banked
  7927  0035DC  0700               	decf	___ftadd@sign& (0+255),f,b
  7928  0035DE  C100  F0B8         	movff	___ftadd@sign,??___ftadd
  7929  0035E2  0E07               	movlw	7
  7930  0035E4  0100               	movlb	0	; () banked
  7931  0035E6  17B8               	andwf	??___ftadd& (0+255),f,b
  7932  0035E8  B4D8               	btfsc	status,2,c
  7933  0035EA  D008               	goto	l5806
  7934  0035EC  D7E9               	goto	l5798
  7935  0035EE                     l5804:
  7936  0035EE  0100               	movlb	0	; () banked
  7937  0035F0  90D8               	bcf	status,0,c
  7938  0035F2  33B4               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  7939  0035F4  33B3               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  7940  0035F6  33B2               	rrcf	___ftadd@f1& (0+255),f,b
  7941  0035F8  0101               	movlb	1	; () banked
  7942  0035FA  2B02               	incf	___ftadd@exp1& (0+255),f,b
  7943  0035FC                     l5806:
  7944  0035FC  0101               	movlb	1	; () banked
  7945  0035FE  5101               	movf	___ftadd@exp2& (0+255),w,b
  7946  003600  0101               	movlb	1	; () banked
  7947  003602  1902               	xorwf	___ftadd@exp1& (0+255),w,b
  7948  003604  B4D8               	btfsc	status,2,c
  7949  003606  D02B               	goto	l743
  7950  003608  D7F2               	goto	l5804
  7951  00360A                     l5808:
  7952                           
  7953                           ; BSR set to: 1
  7954  00360A  0101               	movlb	1	; () banked
  7955  00360C  5102               	movf	___ftadd@exp1& (0+255),w,b
  7956  00360E  0101               	movlb	1	; () banked
  7957  003610  5D01               	subwf	___ftadd@exp2& (0+255),w,b
  7958  003612  B0D8               	btfsc	status,0,c
  7959  003614  D024               	goto	l743
  7960  003616                     l5810:
  7961  003616  0100               	movlb	0	; () banked
  7962  003618  90D8               	bcf	status,0,c
  7963  00361A  37B2               	rlcf	___ftadd@f1& (0+255),f,b
  7964  00361C  37B3               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  7965  00361E  37B4               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  7966  003620  0101               	movlb	1	; () banked
  7967  003622  0702               	decf	___ftadd@exp1& (0+255),f,b
  7968                           
  7969                           ; BSR set to: 1
  7970  003624  0101               	movlb	1	; () banked
  7971  003626  5102               	movf	___ftadd@exp1& (0+255),w,b
  7972  003628  0101               	movlb	1	; () banked
  7973  00362A  1901               	xorwf	___ftadd@exp2& (0+255),w,b
  7974  00362C  B4D8               	btfsc	status,2,c
  7975  00362E  D011               	goto	l5818
  7976                           
  7977                           ; BSR set to: 1
  7978  003630  0101               	movlb	1	; () banked
  7979  003632  0700               	decf	___ftadd@sign& (0+255),f,b
  7980  003634  C100  F0B8         	movff	___ftadd@sign,??___ftadd
  7981  003638  0E07               	movlw	7
  7982  00363A  0100               	movlb	0	; () banked
  7983  00363C  17B8               	andwf	??___ftadd& (0+255),f,b
  7984  00363E  B4D8               	btfsc	status,2,c
  7985  003640  D008               	goto	l5818
  7986  003642  D7E9               	goto	l5810
  7987  003644                     l5816:
  7988  003644  0100               	movlb	0	; () banked
  7989  003646  90D8               	bcf	status,0,c
  7990  003648  33B7               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  7991  00364A  33B6               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  7992  00364C  33B5               	rrcf	___ftadd@f2& (0+255),f,b
  7993  00364E  0101               	movlb	1	; () banked
  7994  003650  2B01               	incf	___ftadd@exp2& (0+255),f,b
  7995  003652                     l5818:
  7996  003652  0101               	movlb	1	; () banked
  7997  003654  5101               	movf	___ftadd@exp2& (0+255),w,b
  7998  003656  0101               	movlb	1	; () banked
  7999  003658  1902               	xorwf	___ftadd@exp1& (0+255),w,b
  8000  00365A  A4D8               	btfss	status,2,c
  8001  00365C  D7F3               	goto	l5816
  8002  00365E                     l743:
  8003                           
  8004                           ; BSR set to: 1
  8005  00365E  0101               	movlb	1	; () banked
  8006  003660  AF00               	btfss	___ftadd@sign& (0+255),7,b
  8007  003662  D012               	goto	l752
  8008                           
  8009                           ; BSR set to: 1
  8010  003664  0EFF               	movlw	255
  8011  003666  0100               	movlb	0	; () banked
  8012  003668  1BB2               	xorwf	___ftadd@f1& (0+255),f,b
  8013  00366A  0EFF               	movlw	255
  8014  00366C  0100               	movlb	0	; () banked
  8015  00366E  1BB3               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  8016  003670  0EFF               	movlw	255
  8017  003672  0100               	movlb	0	; () banked
  8018  003674  1BB4               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  8019  003676  0E01               	movlw	1
  8020  003678  0100               	movlb	0	; () banked
  8021  00367A  27B2               	addwf	___ftadd@f1& (0+255),f,b
  8022  00367C  0E00               	movlw	0
  8023  00367E  0100               	movlb	0	; () banked
  8024  003680  23B3               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  8025  003682  0E00               	movlw	0
  8026  003684  0100               	movlb	0	; () banked
  8027  003686  23B4               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  8028  003688                     l752:
  8029  003688  0101               	movlb	1	; () banked
  8030  00368A  AD00               	btfss	___ftadd@sign& (0+255),6,b
  8031  00368C  D012               	goto	l5824
  8032                           
  8033                           ; BSR set to: 1
  8034  00368E  0EFF               	movlw	255
  8035  003690  0100               	movlb	0	; () banked
  8036  003692  1BB5               	xorwf	___ftadd@f2& (0+255),f,b
  8037  003694  0EFF               	movlw	255
  8038  003696  0100               	movlb	0	; () banked
  8039  003698  1BB6               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8040  00369A  0EFF               	movlw	255
  8041  00369C  0100               	movlb	0	; () banked
  8042  00369E  1BB7               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8043  0036A0  0E01               	movlw	1
  8044  0036A2  0100               	movlb	0	; () banked
  8045  0036A4  27B5               	addwf	___ftadd@f2& (0+255),f,b
  8046  0036A6  0E00               	movlw	0
  8047  0036A8  0100               	movlb	0	; () banked
  8048  0036AA  23B6               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8049  0036AC  0E00               	movlw	0
  8050  0036AE  0100               	movlb	0	; () banked
  8051  0036B0  23B7               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8052  0036B2                     l5824:
  8053  0036B2  0E00               	movlw	0
  8054  0036B4  0101               	movlb	1	; () banked
  8055  0036B6  6F00               	movwf	___ftadd@sign& (0+255),b
  8056                           
  8057                           ; BSR set to: 1
  8058  0036B8  0100               	movlb	0	; () banked
  8059  0036BA  51B2               	movf	___ftadd@f1& (0+255),w,b
  8060  0036BC  0100               	movlb	0	; () banked
  8061  0036BE  27B5               	addwf	___ftadd@f2& (0+255),f,b
  8062  0036C0  0100               	movlb	0	; () banked
  8063  0036C2  51B3               	movf	(___ftadd@f1+1)& (0+255),w,b
  8064  0036C4  0100               	movlb	0	; () banked
  8065  0036C6  23B6               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8066  0036C8  0100               	movlb	0	; () banked
  8067  0036CA  51B4               	movf	(___ftadd@f1+2)& (0+255),w,b
  8068  0036CC  0100               	movlb	0	; () banked
  8069  0036CE  23B7               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8070                           
  8071                           ; BSR set to: 0
  8072  0036D0  0100               	movlb	0	; () banked
  8073  0036D2  AFB7               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8074  0036D4  D015               	goto	l5834
  8075                           
  8076                           ; BSR set to: 0
  8077  0036D6  0EFF               	movlw	255
  8078  0036D8  0100               	movlb	0	; () banked
  8079  0036DA  1BB5               	xorwf	___ftadd@f2& (0+255),f,b
  8080  0036DC  0EFF               	movlw	255
  8081  0036DE  0100               	movlb	0	; () banked
  8082  0036E0  1BB6               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8083  0036E2  0EFF               	movlw	255
  8084  0036E4  0100               	movlb	0	; () banked
  8085  0036E6  1BB7               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8086  0036E8  0E01               	movlw	1
  8087  0036EA  0100               	movlb	0	; () banked
  8088  0036EC  27B5               	addwf	___ftadd@f2& (0+255),f,b
  8089  0036EE  0E00               	movlw	0
  8090  0036F0  0100               	movlb	0	; () banked
  8091  0036F2  23B6               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8092  0036F4  0E00               	movlw	0
  8093  0036F6  0100               	movlb	0	; () banked
  8094  0036F8  23B7               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8095                           
  8096                           ; BSR set to: 0
  8097  0036FA  0E01               	movlw	1
  8098  0036FC  0101               	movlb	1	; () banked
  8099  0036FE  6F00               	movwf	___ftadd@sign& (0+255),b
  8100  003700                     l5834:
  8101  003700  C0B5  F085         	movff	___ftadd@f2,___ftpack@arg
  8102  003704  C0B6  F086         	movff	___ftadd@f2+1,___ftpack@arg+1
  8103  003708  C0B7  F087         	movff	___ftadd@f2+2,___ftpack@arg+2
  8104  00370C  C102  F088         	movff	___ftadd@exp1,___ftpack@exp
  8105  003710  C100  F089         	movff	___ftadd@sign,___ftpack@sign
  8106  003714  ECF0  F022         	call	___ftpack	;wreg free
  8107  003718  C085  F0B2         	movff	?___ftpack,?___ftadd
  8108  00371C  C086  F0B3         	movff	?___ftpack+1,?___ftadd+1
  8109  003720  C087  F0B4         	movff	?___ftpack+2,?___ftadd+2
  8110  003724  0012               	return	
  8111  003726                     __end_of___ftadd:
  8112                           	opt stack 0
  8113                           tosu	equ	0xFFF
  8114                           tosh	equ	0xFFE
  8115                           tosl	equ	0xFFD
  8116                           pclath	equ	0xFFA
  8117                           tblptru	equ	0xFF8
  8118                           tblptrh	equ	0xFF7
  8119                           tblptrl	equ	0xFF6
  8120                           tablat	equ	0xFF5
  8121                           prodh	equ	0xFF4
  8122                           prodl	equ	0xFF3
  8123                           intcon	equ	0xFF2
  8124                           postinc0	equ	0xFEE
  8125                           wreg	equ	0xFE8
  8126                           indf2	equ	0xFDF
  8127                           postinc2	equ	0xFDE
  8128                           postdec2	equ	0xFDD
  8129                           fsr2h	equ	0xFDA
  8130                           fsr2l	equ	0xFD9
  8131                           status	equ	0xFD8
  8132                           
  8133 ;; *************** function ___ftneg *****************
  8134 ;; Defined at:
  8135 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
  8136 ;; Parameters:    Size  Location     Type
  8137 ;;  f1              3   37[BANK0 ] float 
  8138 ;; Auto vars:     Size  Location     Type
  8139 ;;		None
  8140 ;; Return value:  Size  Location     Type
  8141 ;;                  3   37[BANK0 ] float 
  8142 ;; Registers used:
  8143 ;;		wreg, status,2, status,0
  8144 ;; Tracked objects:
  8145 ;;		On entry : 0/0
  8146 ;;		On exit  : 0/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8149 ;;      Params:         0       3       0       0       0       0       0
  8150 ;;      Locals:         0       0       0       0       0       0       0
  8151 ;;      Temps:          0       0       0       0       0       0       0
  8152 ;;      Totals:         0       3       0       0       0       0       0
  8153 ;;Total ram usage:        3 bytes
  8154 ;; Hardware stack levels used:    1
  8155 ;; Hardware stack levels required when called:    7
  8156 ;; This function calls:
  8157 ;;		Nothing
  8158 ;; This function is called by:
  8159 ;;		__doprnt
  8160 ;; This function uses a non-reentrant model
  8161 ;;
  8162                           
  8163                           	psect	text20
  8164  005548                     __ptext20:
  8165                           	opt stack 0
  8166  005548                     ___ftneg:
  8167                           	opt stack 21
  8168                           
  8169                           ;incstack = 0
  8170  005548  0100               	movlb	0	; () banked
  8171  00554A  5185               	movf	___ftneg@f1& (0+255),w,b
  8172  00554C  0100               	movlb	0	; () banked
  8173  00554E  1186               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  8174  005550  0100               	movlb	0	; () banked
  8175  005552  1187               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  8176  005554  B4D8               	btfsc	status,2,c
  8177  005556  D009               	goto	l802
  8178                           
  8179                           ; BSR set to: 0
  8180  005558  0E00               	movlw	0
  8181  00555A  0100               	movlb	0	; () banked
  8182  00555C  1B85               	xorwf	___ftneg@f1& (0+255),f,b
  8183  00555E  0E00               	movlw	0
  8184  005560  0100               	movlb	0	; () banked
  8185  005562  1B86               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  8186  005564  0E80               	movlw	128
  8187  005566  0100               	movlb	0	; () banked
  8188  005568  1B87               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  8189  00556A                     l802:
  8190                           
  8191                           ; BSR set to: 0
  8192  00556A  C085  F085         	movff	___ftneg@f1,?___ftneg
  8193  00556E  C086  F086         	movff	___ftneg@f1+1,?___ftneg+1
  8194  005572  C087  F087         	movff	___ftneg@f1+2,?___ftneg+2
  8195                           
  8196                           ; BSR set to: 0
  8197  005576  0012               	return		;funcret
  8198  005578                     __end_of___ftneg:
  8199                           	opt stack 0
  8200                           tosu	equ	0xFFF
  8201                           tosh	equ	0xFFE
  8202                           tosl	equ	0xFFD
  8203                           pclath	equ	0xFFA
  8204                           tblptru	equ	0xFF8
  8205                           tblptrh	equ	0xFF7
  8206                           tblptrl	equ	0xFF6
  8207                           tablat	equ	0xFF5
  8208                           prodh	equ	0xFF4
  8209                           prodl	equ	0xFF3
  8210                           intcon	equ	0xFF2
  8211                           postinc0	equ	0xFEE
  8212                           wreg	equ	0xFE8
  8213                           indf2	equ	0xFDF
  8214                           postinc2	equ	0xFDE
  8215                           postdec2	equ	0xFDD
  8216                           fsr2h	equ	0xFDA
  8217                           fsr2l	equ	0xFD9
  8218                           status	equ	0xFD8
  8219                           
  8220 ;; *************** function ___ftge *****************
  8221 ;; Defined at:
  8222 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  8223 ;; Parameters:    Size  Location     Type
  8224 ;;  ff1             3   37[BANK0 ] float 
  8225 ;;  ff2             3   40[BANK0 ] float 
  8226 ;; Auto vars:     Size  Location     Type
  8227 ;;		None
  8228 ;; Return value:  Size  Location     Type
  8229 ;;		None               void
  8230 ;; Registers used:
  8231 ;;		wreg, status,2, status,0
  8232 ;; Tracked objects:
  8233 ;;		On entry : 0/0
  8234 ;;		On exit  : 0/0
  8235 ;;		Unchanged: 0/0
  8236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8237 ;;      Params:         0       6       0       0       0       0       0
  8238 ;;      Locals:         0       0       0       0       0       0       0
  8239 ;;      Temps:          0       3       0       0       0       0       0
  8240 ;;      Totals:         0       9       0       0       0       0       0
  8241 ;;Total ram usage:        9 bytes
  8242 ;; Hardware stack levels used:    1
  8243 ;; Hardware stack levels required when called:    7
  8244 ;; This function calls:
  8245 ;;		Nothing
  8246 ;; This function is called by:
  8247 ;;		_main
  8248 ;;		__doprnt
  8249 ;; This function uses a non-reentrant model
  8250 ;;
  8251                           
  8252                           	psect	text21
  8253  0049BA                     __ptext21:
  8254                           	opt stack 0
  8255  0049BA                     ___ftge:
  8256                           	opt stack 21
  8257                           
  8258                           ; BSR set to: 0
  8259                           ;incstack = 0
  8260  0049BA  0100               	movlb	0	; () banked
  8261  0049BC  AF87               	btfss	(___ftge@ff1+2)& (0+255),7,b
  8262  0049BE  D01D               	goto	l4506
  8263                           
  8264                           ; BSR set to: 0
  8265  0049C0  C085  F08B         	movff	___ftge@ff1,??___ftge
  8266  0049C4  C086  F08C         	movff	___ftge@ff1+1,??___ftge+1
  8267  0049C8  C087  F08D         	movff	___ftge@ff1+2,??___ftge+2
  8268  0049CC  0100               	movlb	0	; () banked
  8269  0049CE  1F8B               	comf	??___ftge& (0+255),f,b
  8270  0049D0  1F8C               	comf	(??___ftge+1)& (0+255),f,b
  8271  0049D2  1F8D               	comf	(??___ftge+2)& (0+255),f,b
  8272  0049D4  2B8B               	incf	??___ftge& (0+255),f,b
  8273  0049D6  0E00               	movlw	0
  8274  0049D8  238C               	addwfc	(??___ftge+1)& (0+255),f,b
  8275  0049DA  238D               	addwfc	(??___ftge+2)& (0+255),f,b
  8276  0049DC  0E00               	movlw	0
  8277  0049DE  0100               	movlb	0	; () banked
  8278  0049E0  258B               	addwf	??___ftge& (0+255),w,b
  8279  0049E2  0100               	movlb	0	; () banked
  8280  0049E4  6F85               	movwf	___ftge@ff1& (0+255),b
  8281  0049E6  0E00               	movlw	0
  8282  0049E8  0100               	movlb	0	; () banked
  8283  0049EA  218C               	addwfc	(??___ftge+1)& (0+255),w,b
  8284  0049EC  0100               	movlb	0	; () banked
  8285  0049EE  6F86               	movwf	(___ftge@ff1+1)& (0+255),b
  8286  0049F0  0E80               	movlw	128
  8287  0049F2  0100               	movlb	0	; () banked
  8288  0049F4  218D               	addwfc	(??___ftge+2)& (0+255),w,b
  8289  0049F6  0100               	movlb	0	; () banked
  8290  0049F8  6F87               	movwf	(___ftge@ff1+2)& (0+255),b
  8291  0049FA                     l4506:
  8292                           
  8293                           ; BSR set to: 0
  8294  0049FA  0100               	movlb	0	; () banked
  8295  0049FC  AF8A               	btfss	(___ftge@ff2+2)& (0+255),7,b
  8296  0049FE  D01D               	goto	l4510
  8297                           
  8298                           ; BSR set to: 0
  8299  004A00  C088  F08B         	movff	___ftge@ff2,??___ftge
  8300  004A04  C089  F08C         	movff	___ftge@ff2+1,??___ftge+1
  8301  004A08  C08A  F08D         	movff	___ftge@ff2+2,??___ftge+2
  8302  004A0C  0100               	movlb	0	; () banked
  8303  004A0E  1F8B               	comf	??___ftge& (0+255),f,b
  8304  004A10  1F8C               	comf	(??___ftge+1)& (0+255),f,b
  8305  004A12  1F8D               	comf	(??___ftge+2)& (0+255),f,b
  8306  004A14  2B8B               	incf	??___ftge& (0+255),f,b
  8307  004A16  0E00               	movlw	0
  8308  004A18  238C               	addwfc	(??___ftge+1)& (0+255),f,b
  8309  004A1A  238D               	addwfc	(??___ftge+2)& (0+255),f,b
  8310  004A1C  0E00               	movlw	0
  8311  004A1E  0100               	movlb	0	; () banked
  8312  004A20  258B               	addwf	??___ftge& (0+255),w,b
  8313  004A22  0100               	movlb	0	; () banked
  8314  004A24  6F88               	movwf	___ftge@ff2& (0+255),b
  8315  004A26  0E00               	movlw	0
  8316  004A28  0100               	movlb	0	; () banked
  8317  004A2A  218C               	addwfc	(??___ftge+1)& (0+255),w,b
  8318  004A2C  0100               	movlb	0	; () banked
  8319  004A2E  6F89               	movwf	(___ftge@ff2+1)& (0+255),b
  8320  004A30  0E80               	movlw	128
  8321  004A32  0100               	movlb	0	; () banked
  8322  004A34  218D               	addwfc	(??___ftge+2)& (0+255),w,b
  8323  004A36  0100               	movlb	0	; () banked
  8324  004A38  6F8A               	movwf	(___ftge@ff2+2)& (0+255),b
  8325  004A3A                     l4510:
  8326                           
  8327                           ; BSR set to: 0
  8328  004A3A  0E00               	movlw	0
  8329  004A3C  0100               	movlb	0	; () banked
  8330  004A3E  1B85               	xorwf	___ftge@ff1& (0+255),f,b
  8331  004A40  0E00               	movlw	0
  8332  004A42  0100               	movlb	0	; () banked
  8333  004A44  1B86               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  8334  004A46  0E80               	movlw	128
  8335  004A48  0100               	movlb	0	; () banked
  8336  004A4A  1B87               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  8337                           
  8338                           ; BSR set to: 0
  8339  004A4C  0E00               	movlw	0
  8340  004A4E  0100               	movlb	0	; () banked
  8341  004A50  1B88               	xorwf	___ftge@ff2& (0+255),f,b
  8342  004A52  0E00               	movlw	0
  8343  004A54  0100               	movlb	0	; () banked
  8344  004A56  1B89               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  8345  004A58  0E80               	movlw	128
  8346  004A5A  0100               	movlb	0	; () banked
  8347  004A5C  1B8A               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  8348  004A5E  0100               	movlb	0	; () banked
  8349  004A60  5188               	movf	___ftge@ff2& (0+255),w,b
  8350  004A62  0100               	movlb	0	; () banked
  8351  004A64  5D85               	subwf	___ftge@ff1& (0+255),w,b
  8352  004A66  0100               	movlb	0	; () banked
  8353  004A68  5189               	movf	(___ftge@ff2+1)& (0+255),w,b
  8354  004A6A  0100               	movlb	0	; () banked
  8355  004A6C  5986               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  8356  004A6E  0100               	movlb	0	; () banked
  8357  004A70  518A               	movf	(___ftge@ff2+2)& (0+255),w,b
  8358  004A72  0100               	movlb	0	; () banked
  8359  004A74  5987               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  8360  004A76  B0D8               	btfsc	status,0,c
  8361  004A78  D002               	goto	l4516
  8362                           
  8363                           ; BSR set to: 0
  8364  004A7A  90D8               	bcf	status,0,c
  8365  004A7C  0012               	return	
  8366  004A7E                     l4516:
  8367                           
  8368                           ; BSR set to: 0
  8369  004A7E  80D8               	bsf	status,0,c
  8370                           
  8371                           ; BSR set to: 0
  8372  004A80  0012               	return	
  8373  004A82                     __end_of___ftge:
  8374                           	opt stack 0
  8375                           tosu	equ	0xFFF
  8376                           tosh	equ	0xFFE
  8377                           tosl	equ	0xFFD
  8378                           pclath	equ	0xFFA
  8379                           tblptru	equ	0xFF8
  8380                           tblptrh	equ	0xFF7
  8381                           tblptrl	equ	0xFF6
  8382                           tablat	equ	0xFF5
  8383                           prodh	equ	0xFF4
  8384                           prodl	equ	0xFF3
  8385                           intcon	equ	0xFF2
  8386                           postinc0	equ	0xFEE
  8387                           wreg	equ	0xFE8
  8388                           indf2	equ	0xFDF
  8389                           postinc2	equ	0xFDE
  8390                           postdec2	equ	0xFDD
  8391                           fsr2h	equ	0xFDA
  8392                           fsr2l	equ	0xFD9
  8393                           status	equ	0xFD8
  8394                           
  8395 ;; *************** function _lcd_sendString *****************
  8396 ;; Defined at:
  8397 ;;		line 74 in file "lcd.c"
  8398 ;; Parameters:    Size  Location     Type
  8399 ;;  a               2   41[BANK0 ] PTR const unsigned char 
  8400 ;;		 -> ftoa@buf(17), lcd_sendUInt@displayString(10), lcd_sendInt@displayString(10), main@cap_string(16), 
  8401 ;; Auto vars:     Size  Location     Type
  8402 ;;  i               2   43[BANK0 ] int 
  8403 ;; Return value:  Size  Location     Type
  8404 ;;                  1    wreg      void 
  8405 ;; Registers used:
  8406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8407 ;; Tracked objects:
  8408 ;;		On entry : 0/0
  8409 ;;		On exit  : 0/0
  8410 ;;		Unchanged: 0/0
  8411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8412 ;;      Params:         0       2       0       0       0       0       0
  8413 ;;      Locals:         0       2       0       0       0       0       0
  8414 ;;      Temps:          0       0       0       0       0       0       0
  8415 ;;      Totals:         0       4       0       0       0       0       0
  8416 ;;Total ram usage:        4 bytes
  8417 ;; Hardware stack levels used:    1
  8418 ;; Hardware stack levels required when called:    9
  8419 ;; This function calls:
  8420 ;;		_lcd_sendChar
  8421 ;; This function is called by:
  8422 ;;		_main
  8423 ;;		_lcd_sendStringToPos
  8424 ;;		_lcd_sendInt
  8425 ;;		_lcd_sendFloat
  8426 ;;		_lcd_sendUInt
  8427 ;; This function uses a non-reentrant model
  8428 ;;
  8429                           
  8430                           	psect	text22
  8431  0052EA                     __ptext22:
  8432                           	opt stack 0
  8433  0052EA                     _lcd_sendString:
  8434                           	opt stack 21
  8435                           
  8436                           ;lcd.c: 76: int i;
  8437                           ;lcd.c: 77: for(i=0;a[i]!='\0';i++)
  8438                           
  8439                           ; BSR set to: 0
  8440                           ;incstack = 0
  8441  0052EA  0E00               	movlw	0
  8442  0052EC  0100               	movlb	0	; () banked
  8443  0052EE  6F8C               	movwf	(lcd_sendString@i+1)& (0+255),b
  8444  0052F0  0E00               	movlw	0
  8445  0052F2  6F8B               	movwf	lcd_sendString@i& (0+255),b
  8446  0052F4  D010               	goto	l5600
  8447  0052F6                     l5596:
  8448                           
  8449                           ; BSR set to: 0
  8450                           ;lcd.c: 78: lcd_sendChar(a[i]);
  8451  0052F6  0100               	movlb	0	; () banked
  8452  0052F8  518B               	movf	lcd_sendString@i& (0+255),w,b
  8453  0052FA  0100               	movlb	0	; () banked
  8454  0052FC  2589               	addwf	lcd_sendString@a& (0+255),w,b
  8455  0052FE  6ED9               	movwf	fsr2l,c
  8456  005300  0100               	movlb	0	; () banked
  8457  005302  518C               	movf	(lcd_sendString@i+1)& (0+255),w,b
  8458  005304  0100               	movlb	0	; () banked
  8459  005306  218A               	addwfc	(lcd_sendString@a+1)& (0+255),w,b
  8460  005308  6EDA               	movwf	fsr2h,c
  8461  00530A  50DF               	movf	indf2,w,c
  8462  00530C  ECBD  F029         	call	_lcd_sendChar
  8463  005310  0100               	movlb	0	; () banked
  8464  005312  4B8B               	infsnz	lcd_sendString@i& (0+255),f,b
  8465  005314  2B8C               	incf	(lcd_sendString@i+1)& (0+255),f,b
  8466  005316                     l5600:
  8467                           
  8468                           ; BSR set to: 0
  8469  005316  0100               	movlb	0	; () banked
  8470  005318  518B               	movf	lcd_sendString@i& (0+255),w,b
  8471  00531A  0100               	movlb	0	; () banked
  8472  00531C  2589               	addwf	lcd_sendString@a& (0+255),w,b
  8473  00531E  6ED9               	movwf	fsr2l,c
  8474  005320  0100               	movlb	0	; () banked
  8475  005322  518C               	movf	(lcd_sendString@i+1)& (0+255),w,b
  8476  005324  0100               	movlb	0	; () banked
  8477  005326  218A               	addwfc	(lcd_sendString@a+1)& (0+255),w,b
  8478  005328  6EDA               	movwf	fsr2h,c
  8479  00532A  50DF               	movf	indf2,w,c
  8480  00532C  B4D8               	btfsc	status,2,c
  8481  00532E  0012               	return	
  8482  005330  D7E2               	goto	l5596
  8483  005332                     __end_of_lcd_sendString:
  8484                           	opt stack 0
  8485                           tosu	equ	0xFFF
  8486                           tosh	equ	0xFFE
  8487                           tosl	equ	0xFFD
  8488                           pclath	equ	0xFFA
  8489                           tblptru	equ	0xFF8
  8490                           tblptrh	equ	0xFF7
  8491                           tblptrl	equ	0xFF6
  8492                           tablat	equ	0xFF5
  8493                           prodh	equ	0xFF4
  8494                           prodl	equ	0xFF3
  8495                           intcon	equ	0xFF2
  8496                           postinc0	equ	0xFEE
  8497                           wreg	equ	0xFE8
  8498                           indf2	equ	0xFDF
  8499                           postinc2	equ	0xFDE
  8500                           postdec2	equ	0xFDD
  8501                           fsr2h	equ	0xFDA
  8502                           fsr2l	equ	0xFD9
  8503                           status	equ	0xFD8
  8504                           
  8505 ;; *************** function _lcd_sendChar *****************
  8506 ;; Defined at:
  8507 ;;		line 58 in file "lcd.c"
  8508 ;; Parameters:    Size  Location     Type
  8509 ;;  a               1    wreg     const unsigned char 
  8510 ;; Auto vars:     Size  Location     Type
  8511 ;;  a               1   40[BANK0 ] const unsigned char 
  8512 ;;  y               1   39[BANK0 ] unsigned char 
  8513 ;;  temp            1   38[BANK0 ] unsigned char 
  8514 ;; Return value:  Size  Location     Type
  8515 ;;                  1    wreg      void 
  8516 ;; Registers used:
  8517 ;;		wreg, status,2, status,0, cstack
  8518 ;; Tracked objects:
  8519 ;;		On entry : 0/0
  8520 ;;		On exit  : 0/0
  8521 ;;		Unchanged: 0/0
  8522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8523 ;;      Params:         0       0       0       0       0       0       0
  8524 ;;      Locals:         0       3       0       0       0       0       0
  8525 ;;      Temps:          0       0       0       0       0       0       0
  8526 ;;      Totals:         0       3       0       0       0       0       0
  8527 ;;Total ram usage:        3 bytes
  8528 ;; Hardware stack levels used:    1
  8529 ;; Hardware stack levels required when called:    8
  8530 ;; This function calls:
  8531 ;;		__lcd_Port
  8532 ;; This function is called by:
  8533 ;;		_lcd_sendString
  8534 ;; This function uses a non-reentrant model
  8535 ;;
  8536                           
  8537                           	psect	text23
  8538  00537A                     __ptext23:
  8539                           	opt stack 0
  8540  00537A                     _lcd_sendChar:
  8541                           	opt stack 21
  8542                           
  8543                           ; BSR set to: 0
  8544                           ;incstack = 0
  8545                           ;lcd_sendChar@a stored from wreg
  8546  00537A  0100               	movlb	0	; () banked
  8547  00537C  6F88               	movwf	lcd_sendChar@a& (0+255),b
  8548                           
  8549                           ;lcd.c: 60: char temp,y;
  8550                           ;lcd.c: 61: temp = a&0x0F;
  8551  00537E  0100               	movlb	0	; () banked
  8552  005380  5188               	movf	lcd_sendChar@a& (0+255),w,b
  8553  005382  0B0F               	andlw	15
  8554  005384  0100               	movlb	0	; () banked
  8555  005386  6F86               	movwf	lcd_sendChar@temp& (0+255),b
  8556                           
  8557                           ;lcd.c: 62: y = a&0xF0;
  8558  005388  0100               	movlb	0	; () banked
  8559  00538A  5188               	movf	lcd_sendChar@a& (0+255),w,b
  8560  00538C  0BF0               	andlw	240
  8561  00538E  0100               	movlb	0	; () banked
  8562  005390  6F87               	movwf	lcd_sendChar@y& (0+255),b
  8563                           
  8564                           ; BSR set to: 0
  8565                           ;lcd.c: 63: LATAbits.LA4 = 1;
  8566  005392  8889               	bsf	3977,4,c	;volatile
  8567                           
  8568                           ; BSR set to: 0
  8569                           ;lcd.c: 64: _lcd_Port(y>>4);
  8570  005394  0100               	movlb	0	; () banked
  8571  005396  3987               	swapf	lcd_sendChar@y& (0+255),w,b
  8572  005398  0B0F               	andlw	15
  8573  00539A  EC3C  F02A         	call	__lcd_Port
  8574                           
  8575                           ;lcd.c: 65: LATAbits.LA5 = 1;
  8576  00539E  8A89               	bsf	3977,5,c	;volatile
  8577                           
  8578                           ;lcd.c: 66: _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  8579  0053A0  0E35               	movlw	53
  8580  0053A2                     u15787:
  8581  0053A2  2EE8               	decfsz	wreg,f,c
  8582  0053A4  D7FE               	goto	u15787
  8583  0053A6  F000               	nop	
  8584                           
  8585                           ;lcd.c: 67: LATAbits.LA5 = 0;
  8586  0053A8  9A89               	bcf	3977,5,c	;volatile
  8587                           
  8588                           ;lcd.c: 68: _lcd_Port(temp);
  8589  0053AA  0100               	movlb	0	; () banked
  8590  0053AC  5186               	movf	lcd_sendChar@temp& (0+255),w,b
  8591  0053AE  EC3C  F02A         	call	__lcd_Port
  8592                           
  8593                           ;lcd.c: 69: LATAbits.LA5 = 1;
  8594  0053B2  8A89               	bsf	3977,5,c	;volatile
  8595                           
  8596                           ;lcd.c: 70: _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  8597  0053B4  0E35               	movlw	53
  8598  0053B6                     u15797:
  8599  0053B6  2EE8               	decfsz	wreg,f,c
  8600  0053B8  D7FE               	goto	u15797
  8601  0053BA  F000               	nop	
  8602                           
  8603                           ;lcd.c: 71: LATAbits.LA5 = 0;
  8604  0053BC  9A89               	bcf	3977,5,c	;volatile
  8605  0053BE  0012               	return		;funcret
  8606  0053C0                     __end_of_lcd_sendChar:
  8607                           	opt stack 0
  8608                           tosu	equ	0xFFF
  8609                           tosh	equ	0xFFE
  8610                           tosl	equ	0xFFD
  8611                           pclath	equ	0xFFA
  8612                           tblptru	equ	0xFF8
  8613                           tblptrh	equ	0xFF7
  8614                           tblptrl	equ	0xFF6
  8615                           tablat	equ	0xFF5
  8616                           prodh	equ	0xFF4
  8617                           prodl	equ	0xFF3
  8618                           intcon	equ	0xFF2
  8619                           postinc0	equ	0xFEE
  8620                           wreg	equ	0xFE8
  8621                           indf2	equ	0xFDF
  8622                           postinc2	equ	0xFDE
  8623                           postdec2	equ	0xFDD
  8624                           fsr2h	equ	0xFDA
  8625                           fsr2l	equ	0xFD9
  8626                           status	equ	0xFD8
  8627                           
  8628 ;; *************** function _lcd_init *****************
  8629 ;; Defined at:
  8630 ;;		line 39 in file "lcd.c"
  8631 ;; Parameters:    Size  Location     Type
  8632 ;;		None
  8633 ;; Auto vars:     Size  Location     Type
  8634 ;;		None
  8635 ;; Return value:  Size  Location     Type
  8636 ;;                  1    wreg      void 
  8637 ;; Registers used:
  8638 ;;		wreg, status,2, cstack
  8639 ;; Tracked objects:
  8640 ;;		On entry : 0/0
  8641 ;;		On exit  : 0/0
  8642 ;;		Unchanged: 0/0
  8643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8644 ;;      Params:         0       0       0       0       0       0       0
  8645 ;;      Locals:         0       0       0       0       0       0       0
  8646 ;;      Temps:          0       1       0       0       0       0       0
  8647 ;;      Totals:         0       1       0       0       0       0       0
  8648 ;;Total ram usage:        1 bytes
  8649 ;; Hardware stack levels used:    1
  8650 ;; Hardware stack levels required when called:    9
  8651 ;; This function calls:
  8652 ;;		__lcd_Port
  8653 ;;		_lcd_sendCommand
  8654 ;; This function is called by:
  8655 ;;		_main
  8656 ;; This function uses a non-reentrant model
  8657 ;;
  8658                           
  8659                           	psect	text24
  8660  0050A0                     __ptext24:
  8661                           	opt stack 0
  8662  0050A0                     _lcd_init:
  8663                           	opt stack 21
  8664                           
  8665                           ;lcd.c: 41: _lcd_Port(0x00);
  8666                           
  8667                           ;incstack = 0
  8668  0050A0  0E00               	movlw	0
  8669  0050A2  EC3C  F02A         	call	__lcd_Port
  8670                           
  8671                           ;lcd.c: 42: _delay((unsigned long)((20)*(16000000UL/4000.0)));
  8672  0050A6  0E68               	movlw	104
  8673  0050A8  0100               	movlb	0	; () banked
  8674  0050AA  6F88               	movwf	??_lcd_init& (0+255),b
  8675  0050AC  0EE4               	movlw	228
  8676  0050AE                     u15807:
  8677  0050AE  2EE8               	decfsz	wreg,f,c
  8678  0050B0  D7FE               	goto	u15807
  8679  0050B2  2F88               	decfsz	??_lcd_init& (0+255),f,b
  8680  0050B4  D7FC               	goto	u15807
  8681  0050B6  D000               	nop2	
  8682                           
  8683                           ;lcd.c: 43: lcd_sendCommand(0x03);
  8684  0050B8  0E03               	movlw	3
  8685  0050BA  ECE9  F02A         	call	_lcd_sendCommand
  8686                           
  8687                           ;lcd.c: 44: _delay((unsigned long)((5)*(16000000UL/4000.0)));
  8688  0050BE  0E1A               	movlw	26
  8689  0050C0  0100               	movlb	0	; () banked
  8690  0050C2  6F88               	movwf	??_lcd_init& (0+255),b
  8691  0050C4  0EF8               	movlw	248
  8692  0050C6                     u15817:
  8693  0050C6  2EE8               	decfsz	wreg,f,c
  8694  0050C8  D7FE               	goto	u15817
  8695  0050CA  2F88               	decfsz	??_lcd_init& (0+255),f,b
  8696  0050CC  D7FC               	goto	u15817
  8697  0050CE  D000               	nop2	
  8698                           
  8699                           ;lcd.c: 45: lcd_sendCommand(0x03);
  8700  0050D0  0E03               	movlw	3
  8701  0050D2  ECE9  F02A         	call	_lcd_sendCommand
  8702                           
  8703                           ;lcd.c: 46: _delay((unsigned long)((11)*(16000000UL/4000.0)));
  8704  0050D6  0E3A               	movlw	58
  8705  0050D8  0100               	movlb	0	; () banked
  8706  0050DA  6F88               	movwf	??_lcd_init& (0+255),b
  8707  0050DC  0E23               	movlw	35
  8708  0050DE                     u15827:
  8709  0050DE  2EE8               	decfsz	wreg,f,c
  8710  0050E0  D7FE               	goto	u15827
  8711  0050E2  2F88               	decfsz	??_lcd_init& (0+255),f,b
  8712  0050E4  D7FC               	goto	u15827
  8713  0050E6  F000               	nop	
  8714                           
  8715                           ;lcd.c: 47: lcd_sendCommand(0x03);
  8716  0050E8  0E03               	movlw	3
  8717  0050EA  ECE9  F02A         	call	_lcd_sendCommand
  8718                           
  8719                           ;lcd.c: 49: lcd_sendCommand(0x02);
  8720  0050EE  0E02               	movlw	2
  8721  0050F0  ECE9  F02A         	call	_lcd_sendCommand
  8722                           
  8723                           ;lcd.c: 50: lcd_sendCommand(0x02);
  8724  0050F4  0E02               	movlw	2
  8725  0050F6  ECE9  F02A         	call	_lcd_sendCommand
  8726                           
  8727                           ;lcd.c: 51: lcd_sendCommand(0x08);
  8728  0050FA  0E08               	movlw	8
  8729  0050FC  ECE9  F02A         	call	_lcd_sendCommand
  8730                           
  8731                           ;lcd.c: 52: lcd_sendCommand(0x00);
  8732  005100  0E00               	movlw	0
  8733  005102  ECE9  F02A         	call	_lcd_sendCommand
  8734                           
  8735                           ;lcd.c: 53: lcd_sendCommand(0x0C);
  8736  005106  0E0C               	movlw	12
  8737  005108  ECE9  F02A         	call	_lcd_sendCommand
  8738                           
  8739                           ;lcd.c: 54: lcd_sendCommand(0x00);
  8740  00510C  0E00               	movlw	0
  8741  00510E  ECE9  F02A         	call	_lcd_sendCommand
  8742                           
  8743                           ;lcd.c: 55: lcd_sendCommand(0x06);
  8744  005112  0E06               	movlw	6
  8745  005114  ECE9  F02A         	call	_lcd_sendCommand
  8746  005118  0012               	return		;funcret
  8747  00511A                     __end_of_lcd_init:
  8748                           	opt stack 0
  8749                           tosu	equ	0xFFF
  8750                           tosh	equ	0xFFE
  8751                           tosl	equ	0xFFD
  8752                           pclath	equ	0xFFA
  8753                           tblptru	equ	0xFF8
  8754                           tblptrh	equ	0xFF7
  8755                           tblptrl	equ	0xFF6
  8756                           tablat	equ	0xFF5
  8757                           prodh	equ	0xFF4
  8758                           prodl	equ	0xFF3
  8759                           intcon	equ	0xFF2
  8760                           postinc0	equ	0xFEE
  8761                           wreg	equ	0xFE8
  8762                           indf2	equ	0xFDF
  8763                           postinc2	equ	0xFDE
  8764                           postdec2	equ	0xFDD
  8765                           fsr2h	equ	0xFDA
  8766                           fsr2l	equ	0xFD9
  8767                           status	equ	0xFD8
  8768                           
  8769 ;; *************** function _lcd_clear *****************
  8770 ;; Defined at:
  8771 ;;		line 12 in file "lcd.c"
  8772 ;; Parameters:    Size  Location     Type
  8773 ;;		None
  8774 ;; Auto vars:     Size  Location     Type
  8775 ;;		None
  8776 ;; Return value:  Size  Location     Type
  8777 ;;                  1    wreg      void 
  8778 ;; Registers used:
  8779 ;;		wreg, status,2, cstack
  8780 ;; Tracked objects:
  8781 ;;		On entry : 0/0
  8782 ;;		On exit  : 0/0
  8783 ;;		Unchanged: 0/0
  8784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8785 ;;      Params:         0       0       0       0       0       0       0
  8786 ;;      Locals:         0       0       0       0       0       0       0
  8787 ;;      Temps:          0       0       0       0       0       0       0
  8788 ;;      Totals:         0       0       0       0       0       0       0
  8789 ;;Total ram usage:        0 bytes
  8790 ;; Hardware stack levels used:    1
  8791 ;; Hardware stack levels required when called:    9
  8792 ;; This function calls:
  8793 ;;		_lcd_sendCommand
  8794 ;; This function is called by:
  8795 ;;		_main
  8796 ;; This function uses a non-reentrant model
  8797 ;;
  8798                           
  8799                           	psect	text25
  8800  00570A                     __ptext25:
  8801                           	opt stack 0
  8802  00570A                     _lcd_clear:
  8803                           	opt stack 21
  8804                           
  8805                           ;lcd.c: 14: lcd_sendCommand(0);
  8806                           
  8807                           ;incstack = 0
  8808  00570A  0E00               	movlw	0
  8809  00570C  ECE9  F02A         	call	_lcd_sendCommand
  8810                           
  8811                           ;lcd.c: 15: lcd_sendCommand(1);
  8812  005710  0E01               	movlw	1
  8813  005712  ECE9  F02A         	call	_lcd_sendCommand
  8814  005716  0012               	return		;funcret
  8815  005718                     __end_of_lcd_clear:
  8816                           	opt stack 0
  8817                           tosu	equ	0xFFF
  8818                           tosh	equ	0xFFE
  8819                           tosl	equ	0xFFD
  8820                           pclath	equ	0xFFA
  8821                           tblptru	equ	0xFF8
  8822                           tblptrh	equ	0xFF7
  8823                           tblptrl	equ	0xFF6
  8824                           tablat	equ	0xFF5
  8825                           prodh	equ	0xFF4
  8826                           prodl	equ	0xFF3
  8827                           intcon	equ	0xFF2
  8828                           postinc0	equ	0xFEE
  8829                           wreg	equ	0xFE8
  8830                           indf2	equ	0xFDF
  8831                           postinc2	equ	0xFDE
  8832                           postdec2	equ	0xFDD
  8833                           fsr2h	equ	0xFDA
  8834                           fsr2l	equ	0xFD9
  8835                           status	equ	0xFD8
  8836                           
  8837 ;; *************** function _lcd_sendCommand *****************
  8838 ;; Defined at:
  8839 ;;		line 3 in file "lcd.c"
  8840 ;; Parameters:    Size  Location     Type
  8841 ;;  a               1    wreg     unsigned char 
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;  a               1   39[BANK0 ] unsigned char 
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  1    wreg      void 
  8846 ;; Registers used:
  8847 ;;		wreg, status,2, cstack
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/0
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8853 ;;      Params:         0       0       0       0       0       0       0
  8854 ;;      Locals:         0       1       0       0       0       0       0
  8855 ;;      Temps:          0       1       0       0       0       0       0
  8856 ;;      Totals:         0       2       0       0       0       0       0
  8857 ;;Total ram usage:        2 bytes
  8858 ;; Hardware stack levels used:    1
  8859 ;; Hardware stack levels required when called:    8
  8860 ;; This function calls:
  8861 ;;		__lcd_Port
  8862 ;; This function is called by:
  8863 ;;		_lcd_clear
  8864 ;;		_lcd_init
  8865 ;;		_lcd_setPosition
  8866 ;;		_lcd_shiftRight
  8867 ;;		_lcd_shiftLeft
  8868 ;; This function uses a non-reentrant model
  8869 ;;
  8870                           
  8871                           	psect	text26
  8872  0055D2                     __ptext26:
  8873                           	opt stack 0
  8874  0055D2                     _lcd_sendCommand:
  8875                           	opt stack 21
  8876                           
  8877                           ;incstack = 0
  8878                           ;lcd_sendCommand@a stored from wreg
  8879  0055D2  0100               	movlb	0	; () banked
  8880  0055D4  6F87               	movwf	lcd_sendCommand@a& (0+255),b
  8881                           
  8882                           ;lcd.c: 5: LATAbits.LA4 = 0;
  8883  0055D6  9889               	bcf	3977,4,c	;volatile
  8884                           
  8885                           ;lcd.c: 6: _lcd_Port(a);
  8886  0055D8  0100               	movlb	0	; () banked
  8887  0055DA  5187               	movf	lcd_sendCommand@a& (0+255),w,b
  8888  0055DC  EC3C  F02A         	call	__lcd_Port
  8889                           
  8890                           ;lcd.c: 7: LATAbits.LA5 = 1;
  8891  0055E0  8A89               	bsf	3977,5,c	;volatile
  8892                           
  8893                           ;lcd.c: 8: _delay((unsigned long)((4)*(16000000UL/4000.0)));
  8894  0055E2  0E15               	movlw	21
  8895  0055E4  0100               	movlb	0	; () banked
  8896  0055E6  6F86               	movwf	??_lcd_sendCommand& (0+255),b
  8897  0055E8  0EC6               	movlw	198
  8898  0055EA                     u15837:
  8899  0055EA  2EE8               	decfsz	wreg,f,c
  8900  0055EC  D7FE               	goto	u15837
  8901  0055EE  2F86               	decfsz	??_lcd_sendCommand& (0+255),f,b
  8902  0055F0  D7FC               	goto	u15837
  8903  0055F2  D000               	nop2	
  8904                           
  8905                           ;lcd.c: 9: LATAbits.LA5 = 0;
  8906  0055F4  9A89               	bcf	3977,5,c	;volatile
  8907  0055F6  0012               	return		;funcret
  8908  0055F8                     __end_of_lcd_sendCommand:
  8909                           	opt stack 0
  8910                           tosu	equ	0xFFF
  8911                           tosh	equ	0xFFE
  8912                           tosl	equ	0xFFD
  8913                           pclath	equ	0xFFA
  8914                           tblptru	equ	0xFF8
  8915                           tblptrh	equ	0xFF7
  8916                           tblptrl	equ	0xFF6
  8917                           tablat	equ	0xFF5
  8918                           prodh	equ	0xFF4
  8919                           prodl	equ	0xFF3
  8920                           intcon	equ	0xFF2
  8921                           postinc0	equ	0xFEE
  8922                           wreg	equ	0xFE8
  8923                           indf2	equ	0xFDF
  8924                           postinc2	equ	0xFDE
  8925                           postdec2	equ	0xFDD
  8926                           fsr2h	equ	0xFDA
  8927                           fsr2l	equ	0xFD9
  8928                           status	equ	0xFD8
  8929                           
  8930 ;; *************** function __lcd_Port *****************
  8931 ;; Defined at:
  8932 ;;		line 139 in file "lcd.c"
  8933 ;; Parameters:    Size  Location     Type
  8934 ;;  a               1    wreg     unsigned char 
  8935 ;; Auto vars:     Size  Location     Type
  8936 ;;  a               1   37[BANK0 ] unsigned char 
  8937 ;; Return value:  Size  Location     Type
  8938 ;;                  1    wreg      void 
  8939 ;; Registers used:
  8940 ;;		wreg
  8941 ;; Tracked objects:
  8942 ;;		On entry : 0/0
  8943 ;;		On exit  : 0/0
  8944 ;;		Unchanged: 0/0
  8945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8946 ;;      Params:         0       0       0       0       0       0       0
  8947 ;;      Locals:         0       1       0       0       0       0       0
  8948 ;;      Temps:          0       0       0       0       0       0       0
  8949 ;;      Totals:         0       1       0       0       0       0       0
  8950 ;;Total ram usage:        1 bytes
  8951 ;; Hardware stack levels used:    1
  8952 ;; Hardware stack levels required when called:    7
  8953 ;; This function calls:
  8954 ;;		Nothing
  8955 ;; This function is called by:
  8956 ;;		_lcd_sendCommand
  8957 ;;		_lcd_init
  8958 ;;		_lcd_sendChar
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           
  8962                           	psect	text27
  8963  005478                     __ptext27:
  8964                           	opt stack 0
  8965  005478                     __lcd_Port:
  8966                           	opt stack 21
  8967                           
  8968                           ;incstack = 0
  8969                           ;__lcd_Port@a stored from wreg
  8970  005478  0100               	movlb	0	; () banked
  8971  00547A  6F85               	movwf	__lcd_Port@a& (0+255),b
  8972                           
  8973                           ;lcd.c: 141: if(a & 1)
  8974  00547C  0100               	movlb	0	; () banked
  8975  00547E  A185               	btfss	__lcd_Port@a& (0+255),0,b
  8976  005480  D002               	goto	l288
  8977                           
  8978                           ; BSR set to: 0
  8979                           ;lcd.c: 142: LATAbits.LA0 = 1;
  8980  005482  8089               	bsf	3977,0,c	;volatile
  8981  005484  D001               	goto	l4294
  8982  005486                     l288:
  8983                           
  8984                           ; BSR set to: 0
  8985                           ;lcd.c: 143: else
  8986                           ;lcd.c: 144: LATAbits.LA0 = 0;
  8987  005486  9089               	bcf	3977,0,c	;volatile
  8988  005488                     l4294:
  8989                           
  8990                           ; BSR set to: 0
  8991                           ;lcd.c: 146: if(a & 2)
  8992  005488  0100               	movlb	0	; () banked
  8993  00548A  A385               	btfss	__lcd_Port@a& (0+255),1,b
  8994  00548C  D002               	goto	l290
  8995                           
  8996                           ; BSR set to: 0
  8997                           ;lcd.c: 147: LATAbits.LA1 = 1;
  8998  00548E  8289               	bsf	3977,1,c	;volatile
  8999  005490  D001               	goto	l4298
  9000  005492                     l290:
  9001                           
  9002                           ; BSR set to: 0
  9003                           ;lcd.c: 148: else
  9004                           ;lcd.c: 149: LATAbits.LA1 = 0;
  9005  005492  9289               	bcf	3977,1,c	;volatile
  9006  005494                     l4298:
  9007                           
  9008                           ; BSR set to: 0
  9009                           ;lcd.c: 151: if(a & 4)
  9010  005494  0100               	movlb	0	; () banked
  9011  005496  A585               	btfss	__lcd_Port@a& (0+255),2,b
  9012  005498  D002               	goto	l292
  9013                           
  9014                           ; BSR set to: 0
  9015                           ;lcd.c: 152: LATAbits.LA2 = 1;
  9016  00549A  8489               	bsf	3977,2,c	;volatile
  9017  00549C  D001               	goto	l4302
  9018  00549E                     l292:
  9019                           
  9020                           ; BSR set to: 0
  9021                           ;lcd.c: 153: else
  9022                           ;lcd.c: 154: LATAbits.LA2 = 0;
  9023  00549E  9489               	bcf	3977,2,c	;volatile
  9024  0054A0                     l4302:
  9025                           
  9026                           ; BSR set to: 0
  9027                           ;lcd.c: 156: if(a & 8)
  9028  0054A0  0100               	movlb	0	; () banked
  9029  0054A2  A785               	btfss	__lcd_Port@a& (0+255),3,b
  9030  0054A4  D002               	goto	l294
  9031                           
  9032                           ; BSR set to: 0
  9033                           ;lcd.c: 157: LATAbits.LA3 = 1;
  9034  0054A6  8689               	bsf	3977,3,c	;volatile
  9035  0054A8  0012               	return	
  9036  0054AA                     l294:
  9037                           
  9038                           ; BSR set to: 0
  9039                           ;lcd.c: 158: else
  9040                           ;lcd.c: 159: LATAbits.LA3 = 0;
  9041  0054AA  9689               	bcf	3977,3,c	;volatile
  9042  0054AC  0012               	return	
  9043  0054AE                     __end_of__lcd_Port:
  9044                           	opt stack 0
  9045                           tosu	equ	0xFFF
  9046                           tosh	equ	0xFFE
  9047                           tosl	equ	0xFFD
  9048                           pclath	equ	0xFFA
  9049                           tblptru	equ	0xFF8
  9050                           tblptrh	equ	0xFF7
  9051                           tblptrl	equ	0xFF6
  9052                           tablat	equ	0xFF5
  9053                           prodh	equ	0xFF4
  9054                           prodl	equ	0xFF3
  9055                           intcon	equ	0xFF2
  9056                           postinc0	equ	0xFEE
  9057                           wreg	equ	0xFE8
  9058                           indf2	equ	0xFDF
  9059                           postinc2	equ	0xFDE
  9060                           postdec2	equ	0xFDD
  9061                           fsr2h	equ	0xFDA
  9062                           fsr2l	equ	0xFD9
  9063                           status	equ	0xFD8
  9064                           
  9065 ;; *************** function ___ftdiv *****************
  9066 ;; Defined at:
  9067 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  9068 ;; Parameters:    Size  Location     Type
  9069 ;;  f1              3   45[BANK0 ] float 
  9070 ;;  f2              3   48[BANK0 ] float 
  9071 ;; Auto vars:     Size  Location     Type
  9072 ;;  f3              3   55[BANK0 ] float 
  9073 ;;  sign            1   59[BANK0 ] unsigned char 
  9074 ;;  exp             1   58[BANK0 ] unsigned char 
  9075 ;;  cntr            1   54[BANK0 ] unsigned char 
  9076 ;; Return value:  Size  Location     Type
  9077 ;;                  3   45[BANK0 ] float 
  9078 ;; Registers used:
  9079 ;;		wreg, status,2, status,0, cstack
  9080 ;; Tracked objects:
  9081 ;;		On entry : 0/0
  9082 ;;		On exit  : 0/0
  9083 ;;		Unchanged: 0/0
  9084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9085 ;;      Params:         0       6       0       0       0       0       0
  9086 ;;      Locals:         0       6       0       0       0       0       0
  9087 ;;      Temps:          0       3       0       0       0       0       0
  9088 ;;      Totals:         0      15       0       0       0       0       0
  9089 ;;Total ram usage:       15 bytes
  9090 ;; Hardware stack levels used:    1
  9091 ;; Hardware stack levels required when called:    8
  9092 ;; This function calls:
  9093 ;;		___ftpack
  9094 ;; This function is called by:
  9095 ;;		_main
  9096 ;; This function uses a non-reentrant model
  9097 ;;
  9098                           
  9099                           	psect	text28
  9100  0040F6                     __ptext28:
  9101                           	opt stack 0
  9102  0040F6                     ___ftdiv:
  9103                           	opt stack 22
  9104                           
  9105                           ; BSR set to: 0
  9106                           ;incstack = 0
  9107  0040F6  C08F  F093         	movff	___ftdiv@f1+2,??___ftdiv
  9108  0040FA  0100               	movlb	0	; () banked
  9109  0040FC  6B94               	clrf	(??___ftdiv+1)& (0+255),b
  9110  0040FE  6B95               	clrf	(??___ftdiv+2)& (0+255),b
  9111  004100  0100               	movlb	0	; () banked
  9112  004102  358E               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  9113  004104  0100               	movlb	0	; () banked
  9114  004106  3793               	rlcf	??___ftdiv& (0+255),f,b
  9115  004108  E301               	bnc	u10091
  9116  00410A  8194               	bsf	(??___ftdiv+1)& (0+255),0,b
  9117  00410C                     u10091:
  9118  00410C  0100               	movlb	0	; () banked
  9119  00410E  5193               	movf	??___ftdiv& (0+255),w,b
  9120  004110  0100               	movlb	0	; () banked
  9121  004112  6F9A               	movwf	___ftdiv@exp& (0+255),b
  9122  004114  0100               	movlb	0	; () banked
  9123  004116  519A               	movf	___ftdiv@exp& (0+255),w,b
  9124  004118  A4D8               	btfss	status,2,c
  9125  00411A  D00A               	goto	l6822
  9126                           
  9127                           ; BSR set to: 0
  9128  00411C  0E00               	movlw	0
  9129  00411E  0100               	movlb	0	; () banked
  9130  004120  6F8D               	movwf	?___ftdiv& (0+255),b
  9131  004122  0E00               	movlw	0
  9132  004124  0100               	movlb	0	; () banked
  9133  004126  6F8E               	movwf	(?___ftdiv+1)& (0+255),b
  9134  004128  0E00               	movlw	0
  9135  00412A  0100               	movlb	0	; () banked
  9136  00412C  6F8F               	movwf	(?___ftdiv+2)& (0+255),b
  9137                           
  9138                           ; BSR set to: 0
  9139  00412E  0012               	return	
  9140  004130                     l6822:
  9141                           
  9142                           ; BSR set to: 0
  9143  004130  C092  F093         	movff	___ftdiv@f2+2,??___ftdiv
  9144  004134  0100               	movlb	0	; () banked
  9145  004136  6B94               	clrf	(??___ftdiv+1)& (0+255),b
  9146  004138  6B95               	clrf	(??___ftdiv+2)& (0+255),b
  9147  00413A  0100               	movlb	0	; () banked
  9148  00413C  3591               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  9149  00413E  0100               	movlb	0	; () banked
  9150  004140  3793               	rlcf	??___ftdiv& (0+255),f,b
  9151  004142  E301               	bnc	u10111
  9152  004144  8194               	bsf	(??___ftdiv+1)& (0+255),0,b
  9153  004146                     u10111:
  9154  004146  0100               	movlb	0	; () banked
  9155  004148  5193               	movf	??___ftdiv& (0+255),w,b
  9156  00414A  0100               	movlb	0	; () banked
  9157  00414C  6F9B               	movwf	___ftdiv@sign& (0+255),b
  9158  00414E  0100               	movlb	0	; () banked
  9159  004150  519B               	movf	___ftdiv@sign& (0+255),w,b
  9160  004152  A4D8               	btfss	status,2,c
  9161  004154  D00A               	goto	l6828
  9162                           
  9163                           ; BSR set to: 0
  9164  004156  0E00               	movlw	0
  9165  004158  0100               	movlb	0	; () banked
  9166  00415A  6F8D               	movwf	?___ftdiv& (0+255),b
  9167  00415C  0E00               	movlw	0
  9168  00415E  0100               	movlb	0	; () banked
  9169  004160  6F8E               	movwf	(?___ftdiv+1)& (0+255),b
  9170  004162  0E00               	movlw	0
  9171  004164  0100               	movlb	0	; () banked
  9172  004166  6F8F               	movwf	(?___ftdiv+2)& (0+255),b
  9173                           
  9174                           ; BSR set to: 0
  9175  004168  0012               	return	
  9176  00416A                     l6828:
  9177                           
  9178                           ; BSR set to: 0
  9179  00416A  0E00               	movlw	0
  9180  00416C  0100               	movlb	0	; () banked
  9181  00416E  6F97               	movwf	___ftdiv@f3& (0+255),b
  9182  004170  0E00               	movlw	0
  9183  004172  0100               	movlb	0	; () banked
  9184  004174  6F98               	movwf	(___ftdiv@f3+1)& (0+255),b
  9185  004176  0E00               	movlw	0
  9186  004178  0100               	movlb	0	; () banked
  9187  00417A  6F99               	movwf	(___ftdiv@f3+2)& (0+255),b
  9188                           
  9189                           ; BSR set to: 0
  9190  00417C  0100               	movlb	0	; () banked
  9191  00417E  519B               	movf	___ftdiv@sign& (0+255),w,b
  9192  004180  0F89               	addlw	137
  9193  004182  0100               	movlb	0	; () banked
  9194  004184  5F9A               	subwf	___ftdiv@exp& (0+255),f,b
  9195                           
  9196                           ; BSR set to: 0
  9197  004186  C08F  F09B         	movff	___ftdiv@f1+2,___ftdiv@sign
  9198                           
  9199                           ; BSR set to: 0
  9200  00418A  0100               	movlb	0	; () banked
  9201  00418C  5192               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9202  00418E  0100               	movlb	0	; () banked
  9203  004190  1B9B               	xorwf	___ftdiv@sign& (0+255),f,b
  9204                           
  9205                           ; BSR set to: 0
  9206  004192  0E80               	movlw	128
  9207  004194  0100               	movlb	0	; () banked
  9208  004196  179B               	andwf	___ftdiv@sign& (0+255),f,b
  9209                           
  9210                           ; BSR set to: 0
  9211  004198  0100               	movlb	0	; () banked
  9212  00419A  8F8E               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  9213                           
  9214                           ; BSR set to: 0
  9215  00419C  0EFF               	movlw	255
  9216  00419E  0100               	movlb	0	; () banked
  9217  0041A0  178D               	andwf	___ftdiv@f1& (0+255),f,b
  9218  0041A2  0EFF               	movlw	255
  9219  0041A4  0100               	movlb	0	; () banked
  9220  0041A6  178E               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  9221  0041A8  0E00               	movlw	0
  9222  0041AA  0100               	movlb	0	; () banked
  9223  0041AC  178F               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  9224                           
  9225                           ; BSR set to: 0
  9226  0041AE  0100               	movlb	0	; () banked
  9227  0041B0  8F91               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  9228                           
  9229                           ; BSR set to: 0
  9230  0041B2  0EFF               	movlw	255
  9231  0041B4  0100               	movlb	0	; () banked
  9232  0041B6  1790               	andwf	___ftdiv@f2& (0+255),f,b
  9233  0041B8  0EFF               	movlw	255
  9234  0041BA  0100               	movlb	0	; () banked
  9235  0041BC  1791               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  9236  0041BE  0E00               	movlw	0
  9237  0041C0  0100               	movlb	0	; () banked
  9238  0041C2  1792               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  9239                           
  9240                           ; BSR set to: 0
  9241  0041C4  0E18               	movlw	24
  9242  0041C6  0100               	movlb	0	; () banked
  9243  0041C8  6F96               	movwf	___ftdiv@cntr& (0+255),b
  9244  0041CA                     l6848:
  9245                           
  9246                           ; BSR set to: 0
  9247  0041CA  0100               	movlb	0	; () banked
  9248  0041CC  90D8               	bcf	status,0,c
  9249  0041CE  3797               	rlcf	___ftdiv@f3& (0+255),f,b
  9250  0041D0  3798               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  9251  0041D2  3799               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  9252                           
  9253                           ; BSR set to: 0
  9254  0041D4  0100               	movlb	0	; () banked
  9255  0041D6  5190               	movf	___ftdiv@f2& (0+255),w,b
  9256  0041D8  0100               	movlb	0	; () banked
  9257  0041DA  5D8D               	subwf	___ftdiv@f1& (0+255),w,b
  9258  0041DC  0100               	movlb	0	; () banked
  9259  0041DE  5191               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9260  0041E0  0100               	movlb	0	; () banked
  9261  0041E2  598E               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  9262  0041E4  0100               	movlb	0	; () banked
  9263  0041E6  5192               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9264  0041E8  0100               	movlb	0	; () banked
  9265  0041EA  598F               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  9266  0041EC  A0D8               	btfss	status,0,c
  9267  0041EE  D00E               	goto	l763
  9268                           
  9269                           ; BSR set to: 0
  9270  0041F0  0100               	movlb	0	; () banked
  9271  0041F2  5190               	movf	___ftdiv@f2& (0+255),w,b
  9272  0041F4  0100               	movlb	0	; () banked
  9273  0041F6  5F8D               	subwf	___ftdiv@f1& (0+255),f,b
  9274  0041F8  0100               	movlb	0	; () banked
  9275  0041FA  5191               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9276  0041FC  0100               	movlb	0	; () banked
  9277  0041FE  5B8E               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  9278  004200  0100               	movlb	0	; () banked
  9279  004202  5192               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9280  004204  0100               	movlb	0	; () banked
  9281  004206  5B8F               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  9282                           
  9283                           ; BSR set to: 0
  9284  004208  0100               	movlb	0	; () banked
  9285  00420A  8197               	bsf	___ftdiv@f3& (0+255),0,b
  9286  00420C                     l763:
  9287                           
  9288                           ; BSR set to: 0
  9289  00420C  0100               	movlb	0	; () banked
  9290  00420E  90D8               	bcf	status,0,c
  9291  004210  378D               	rlcf	___ftdiv@f1& (0+255),f,b
  9292  004212  378E               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  9293  004214  378F               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  9294                           
  9295                           ; BSR set to: 0
  9296  004216  0100               	movlb	0	; () banked
  9297  004218  2F96               	decfsz	___ftdiv@cntr& (0+255),f,b
  9298  00421A  D7D7               	goto	l6848
  9299                           
  9300                           ; BSR set to: 0
  9301                           
  9302                           ; BSR set to: 0
  9303  00421C  C097  F085         	movff	___ftdiv@f3,___ftpack@arg
  9304  004220  C098  F086         	movff	___ftdiv@f3+1,___ftpack@arg+1
  9305  004224  C099  F087         	movff	___ftdiv@f3+2,___ftpack@arg+2
  9306  004228  C09A  F088         	movff	___ftdiv@exp,___ftpack@exp
  9307  00422C  C09B  F089         	movff	___ftdiv@sign,___ftpack@sign
  9308  004230  ECF0  F022         	call	___ftpack	;wreg free
  9309  004234  C085  F08D         	movff	?___ftpack,?___ftdiv
  9310  004238  C086  F08E         	movff	?___ftpack+1,?___ftdiv+1
  9311  00423C  C087  F08F         	movff	?___ftpack+2,?___ftdiv+2
  9312  004240  0012               	return	
  9313  004242                     __end_of___ftdiv:
  9314                           	opt stack 0
  9315                           tosu	equ	0xFFF
  9316                           tosh	equ	0xFFE
  9317                           tosl	equ	0xFFD
  9318                           pclath	equ	0xFFA
  9319                           tblptru	equ	0xFF8
  9320                           tblptrh	equ	0xFF7
  9321                           tblptrl	equ	0xFF6
  9322                           tablat	equ	0xFF5
  9323                           prodh	equ	0xFF4
  9324                           prodl	equ	0xFF3
  9325                           intcon	equ	0xFF2
  9326                           postinc0	equ	0xFEE
  9327                           wreg	equ	0xFE8
  9328                           indf2	equ	0xFDF
  9329                           postinc2	equ	0xFDE
  9330                           postdec2	equ	0xFDD
  9331                           fsr2h	equ	0xFDA
  9332                           fsr2l	equ	0xFD9
  9333                           status	equ	0xFD8
  9334                           
  9335 ;; *************** function ___ftpack *****************
  9336 ;; Defined at:
  9337 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  9338 ;; Parameters:    Size  Location     Type
  9339 ;;  arg             3   37[BANK0 ] unsigned um
  9340 ;;  exp             1   40[BANK0 ] unsigned char 
  9341 ;;  sign            1   41[BANK0 ] unsigned char 
  9342 ;; Auto vars:     Size  Location     Type
  9343 ;;		None
  9344 ;; Return value:  Size  Location     Type
  9345 ;;                  3   37[BANK0 ] float 
  9346 ;; Registers used:
  9347 ;;		wreg, status,2, status,0
  9348 ;; Tracked objects:
  9349 ;;		On entry : 0/0
  9350 ;;		On exit  : 0/0
  9351 ;;		Unchanged: 0/0
  9352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9353 ;;      Params:         0       5       0       0       0       0       0
  9354 ;;      Locals:         0       0       0       0       0       0       0
  9355 ;;      Temps:          0       3       0       0       0       0       0
  9356 ;;      Totals:         0       8       0       0       0       0       0
  9357 ;;Total ram usage:        8 bytes
  9358 ;; Hardware stack levels used:    1
  9359 ;; Hardware stack levels required when called:    7
  9360 ;; This function calls:
  9361 ;;		Nothing
  9362 ;; This function is called by:
  9363 ;;		___ftadd
  9364 ;;		___ftdiv
  9365 ;;		___ftmul
  9366 ;;		___lltoft
  9367 ;; This function uses a non-reentrant model
  9368 ;;
  9369                           
  9370                           	psect	text29
  9371  0045E0                     __ptext29:
  9372                           	opt stack 0
  9373  0045E0                     ___ftpack:
  9374                           	opt stack 19
  9375                           
  9376                           ;incstack = 0
  9377  0045E0  0100               	movlb	0	; () banked
  9378  0045E2  5188               	movf	___ftpack@exp& (0+255),w,b
  9379  0045E4  0100               	movlb	0	; () banked
  9380  0045E6  B4D8               	btfsc	status,2,c
  9381  0045E8  D008               	goto	l5736
  9382                           
  9383                           ; BSR set to: 0
  9384  0045EA  0100               	movlb	0	; () banked
  9385  0045EC  5185               	movf	___ftpack@arg& (0+255),w,b
  9386  0045EE  0100               	movlb	0	; () banked
  9387  0045F0  1186               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  9388  0045F2  0100               	movlb	0	; () banked
  9389  0045F4  1187               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  9390  0045F6  A4D8               	btfss	status,2,c
  9391  0045F8  D011               	goto	l5742
  9392  0045FA                     l5736:
  9393                           
  9394                           ; BSR set to: 0
  9395  0045FA  0E00               	movlw	0
  9396  0045FC  0100               	movlb	0	; () banked
  9397  0045FE  6F85               	movwf	?___ftpack& (0+255),b
  9398  004600  0E00               	movlw	0
  9399  004602  0100               	movlb	0	; () banked
  9400  004604  6F86               	movwf	(?___ftpack+1)& (0+255),b
  9401  004606  0E00               	movlw	0
  9402  004608  0100               	movlb	0	; () banked
  9403  00460A  6F87               	movwf	(?___ftpack+2)& (0+255),b
  9404                           
  9405                           ; BSR set to: 0
  9406  00460C  0012               	return	
  9407  00460E                     l5740:
  9408                           
  9409                           ; BSR set to: 0
  9410  00460E  0100               	movlb	0	; () banked
  9411  004610  2B88               	incf	___ftpack@exp& (0+255),f,b
  9412  004612  0100               	movlb	0	; () banked
  9413  004614  90D8               	bcf	status,0,c
  9414  004616  3387               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9415  004618  3386               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9416  00461A  3385               	rrcf	___ftpack@arg& (0+255),f,b
  9417  00461C                     l5742:
  9418                           
  9419                           ; BSR set to: 0
  9420  00461C  0E00               	movlw	0
  9421  00461E  0100               	movlb	0	; () banked
  9422  004620  1585               	andwf	___ftpack@arg& (0+255),w,b
  9423  004622  0100               	movlb	0	; () banked
  9424  004624  6F8A               	movwf	??___ftpack& (0+255),b
  9425  004626  0E00               	movlw	0
  9426  004628  0100               	movlb	0	; () banked
  9427  00462A  1586               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9428  00462C  0100               	movlb	0	; () banked
  9429  00462E  6F8B               	movwf	(??___ftpack+1)& (0+255),b
  9430  004630  0EFE               	movlw	254
  9431  004632  0100               	movlb	0	; () banked
  9432  004634  1587               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9433  004636  0100               	movlb	0	; () banked
  9434  004638  6F8C               	movwf	(??___ftpack+2)& (0+255),b
  9435  00463A  0100               	movlb	0	; () banked
  9436  00463C  518A               	movf	??___ftpack& (0+255),w,b
  9437  00463E  0100               	movlb	0	; () banked
  9438  004640  118B               	iorwf	(??___ftpack+1)& (0+255),w,b
  9439  004642  0100               	movlb	0	; () banked
  9440  004644  118C               	iorwf	(??___ftpack+2)& (0+255),w,b
  9441  004646  B4D8               	btfsc	status,2,c
  9442  004648  D011               	goto	l5748
  9443  00464A  D7E1               	goto	l5740
  9444  00464C                     l5744:
  9445                           
  9446                           ; BSR set to: 0
  9447  00464C  0100               	movlb	0	; () banked
  9448  00464E  2B88               	incf	___ftpack@exp& (0+255),f,b
  9449                           
  9450                           ; BSR set to: 0
  9451  004650  0E01               	movlw	1
  9452  004652  0100               	movlb	0	; () banked
  9453  004654  2785               	addwf	___ftpack@arg& (0+255),f,b
  9454  004656  0E00               	movlw	0
  9455  004658  0100               	movlb	0	; () banked
  9456  00465A  2386               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  9457  00465C  0E00               	movlw	0
  9458  00465E  0100               	movlb	0	; () banked
  9459  004660  2387               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  9460  004662  0100               	movlb	0	; () banked
  9461  004664  90D8               	bcf	status,0,c
  9462  004666  3387               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9463  004668  3386               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9464  00466A  3385               	rrcf	___ftpack@arg& (0+255),f,b
  9465  00466C                     l5748:
  9466                           
  9467                           ; BSR set to: 0
  9468  00466C  0E00               	movlw	0
  9469  00466E  0100               	movlb	0	; () banked
  9470  004670  1585               	andwf	___ftpack@arg& (0+255),w,b
  9471  004672  0100               	movlb	0	; () banked
  9472  004674  6F8A               	movwf	??___ftpack& (0+255),b
  9473  004676  0E00               	movlw	0
  9474  004678  0100               	movlb	0	; () banked
  9475  00467A  1586               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9476  00467C  0100               	movlb	0	; () banked
  9477  00467E  6F8B               	movwf	(??___ftpack+1)& (0+255),b
  9478  004680  0EFF               	movlw	255
  9479  004682  0100               	movlb	0	; () banked
  9480  004684  1587               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9481  004686  0100               	movlb	0	; () banked
  9482  004688  6F8C               	movwf	(??___ftpack+2)& (0+255),b
  9483  00468A  0100               	movlb	0	; () banked
  9484  00468C  518A               	movf	??___ftpack& (0+255),w,b
  9485  00468E  0100               	movlb	0	; () banked
  9486  004690  118B               	iorwf	(??___ftpack+1)& (0+255),w,b
  9487  004692  0100               	movlb	0	; () banked
  9488  004694  118C               	iorwf	(??___ftpack+2)& (0+255),w,b
  9489  004696  B4D8               	btfsc	status,2,c
  9490  004698  D008               	goto	l5752
  9491  00469A  D7D8               	goto	l5744
  9492  00469C                     l5750:
  9493                           
  9494                           ; BSR set to: 0
  9495  00469C  0100               	movlb	0	; () banked
  9496  00469E  0788               	decf	___ftpack@exp& (0+255),f,b
  9497  0046A0  0100               	movlb	0	; () banked
  9498  0046A2  90D8               	bcf	status,0,c
  9499  0046A4  3785               	rlcf	___ftpack@arg& (0+255),f,b
  9500  0046A6  3786               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  9501  0046A8  3787               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  9502  0046AA                     l5752:
  9503                           
  9504                           ; BSR set to: 0
  9505  0046AA  0100               	movlb	0	; () banked
  9506  0046AC  BF86               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  9507  0046AE  D004               	goto	l705
  9508                           
  9509                           ; BSR set to: 0
  9510  0046B0  0E02               	movlw	2
  9511  0046B2  0100               	movlb	0	; () banked
  9512  0046B4  6188               	cpfslt	___ftpack@exp& (0+255),b
  9513  0046B6  D7F2               	goto	l5750
  9514  0046B8                     l705:
  9515                           
  9516                           ; BSR set to: 0
  9517  0046B8  0100               	movlb	0	; () banked
  9518  0046BA  B188               	btfsc	___ftpack@exp& (0+255),0,b
  9519  0046BC  D002               	goto	l5758
  9520                           
  9521                           ; BSR set to: 0
  9522  0046BE  0100               	movlb	0	; () banked
  9523  0046C0  9F86               	bcf	(___ftpack@arg+1)& (0+255),7,b
  9524  0046C2                     l5758:
  9525                           
  9526                           ; BSR set to: 0
  9527  0046C2  0100               	movlb	0	; () banked
  9528  0046C4  90D8               	bcf	status,0,c
  9529  0046C6  3388               	rrcf	___ftpack@exp& (0+255),f,b
  9530  0046C8  0100               	movlb	0	; () banked
  9531  0046CA  5188               	movf	___ftpack@exp& (0+255),w,b
  9532  0046CC  0100               	movlb	0	; () banked
  9533  0046CE  1387               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  9534                           
  9535                           ; BSR set to: 0
  9536  0046D0  0100               	movlb	0	; () banked
  9537  0046D2  5189               	movf	___ftpack@sign& (0+255),w,b
  9538  0046D4  0100               	movlb	0	; () banked
  9539  0046D6  B4D8               	btfsc	status,2,c
  9540  0046D8  D002               	goto	l5764
  9541                           
  9542                           ; BSR set to: 0
  9543  0046DA  0100               	movlb	0	; () banked
  9544  0046DC  8F87               	bsf	(___ftpack@arg+2)& (0+255),7,b
  9545  0046DE                     l5764:
  9546                           
  9547                           ; BSR set to: 0
  9548  0046DE  C085  F085         	movff	___ftpack@arg,?___ftpack
  9549  0046E2  C086  F086         	movff	___ftpack@arg+1,?___ftpack+1
  9550  0046E6  C087  F087         	movff	___ftpack@arg+2,?___ftpack+2
  9551  0046EA  0012               	return	
  9552  0046EC                     __end_of___ftpack:
  9553                           	opt stack 0
  9554                           tosu	equ	0xFFF
  9555                           tosh	equ	0xFFE
  9556                           tosl	equ	0xFFD
  9557                           pclath	equ	0xFFA
  9558                           tblptru	equ	0xFF8
  9559                           tblptrh	equ	0xFF7
  9560                           tblptrl	equ	0xFF6
  9561                           tablat	equ	0xFF5
  9562                           prodh	equ	0xFF4
  9563                           prodl	equ	0xFF3
  9564                           intcon	equ	0xFF2
  9565                           postinc0	equ	0xFEE
  9566                           wreg	equ	0xFE8
  9567                           indf2	equ	0xFDF
  9568                           postinc2	equ	0xFDE
  9569                           postdec2	equ	0xFDD
  9570                           fsr2h	equ	0xFDA
  9571                           fsr2l	equ	0xFD9
  9572                           status	equ	0xFD8
  9573                           
  9574 ;; *************** function _SYSTEM_Initialize *****************
  9575 ;; Defined at:
  9576 ;;		line 111 in file "mcc_generated_files/mcc.c"
  9577 ;; Parameters:    Size  Location     Type
  9578 ;;		None
  9579 ;; Auto vars:     Size  Location     Type
  9580 ;;		None
  9581 ;; Return value:  Size  Location     Type
  9582 ;;                  1    wreg      void 
  9583 ;; Registers used:
  9584 ;;		wreg, status,2, status,0, cstack
  9585 ;; Tracked objects:
  9586 ;;		On entry : 0/0
  9587 ;;		On exit  : 0/0
  9588 ;;		Unchanged: 0/0
  9589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9590 ;;      Params:         0       0       0       0       0       0       0
  9591 ;;      Locals:         0       0       0       0       0       0       0
  9592 ;;      Temps:          0       0       0       0       0       0       0
  9593 ;;      Totals:         0       0       0       0       0       0       0
  9594 ;;Total ram usage:        0 bytes
  9595 ;; Hardware stack levels used:    1
  9596 ;; Hardware stack levels required when called:    9
  9597 ;; This function calls:
  9598 ;;		_EUSART1_Initialize
  9599 ;;		_EXT_INT_Initialize
  9600 ;;		_INTERRUPT_Initialize
  9601 ;;		_OSCILLATOR_Initialize
  9602 ;;		_PIN_MANAGER_Initialize
  9603 ;;		_TMR0_Initialize
  9604 ;; This function is called by:
  9605 ;;		_main
  9606 ;; This function uses a non-reentrant model
  9607 ;;
  9608                           
  9609                           	psect	text30
  9610  0056A0                     __ptext30:
  9611                           	opt stack 0
  9612  0056A0                     _SYSTEM_Initialize:
  9613                           	opt stack 21
  9614                           
  9615                           ;mcc.c: 114: INTERRUPT_Initialize();
  9616                           
  9617                           ; BSR set to: 0
  9618                           ;incstack = 0
  9619  0056A0  ECB0  F02B         	call	_INTERRUPT_Initialize	;wreg free
  9620                           
  9621                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  9622  0056A4  ECBC  F02A         	call	_PIN_MANAGER_Initialize	;wreg free
  9623                           
  9624                           ;mcc.c: 116: OSCILLATOR_Initialize();
  9625  0056A8  EC8C  F02B         	call	_OSCILLATOR_Initialize	;wreg free
  9626                           
  9627                           ;mcc.c: 117: EXT_INT_Initialize();
  9628  0056AC  EC5D  F02B         	call	_EXT_INT_Initialize	;wreg free
  9629                           
  9630                           ;mcc.c: 118: TMR0_Initialize();
  9631  0056B0  EC99  F029         	call	_TMR0_Initialize	;wreg free
  9632                           
  9633                           ;mcc.c: 119: EUSART1_Initialize();
  9634  0056B4  EC69  F02B         	call	_EUSART1_Initialize	;wreg free
  9635  0056B8  0012               	return		;funcret
  9636  0056BA                     __end_of_SYSTEM_Initialize:
  9637                           	opt stack 0
  9638                           tosu	equ	0xFFF
  9639                           tosh	equ	0xFFE
  9640                           tosl	equ	0xFFD
  9641                           pclath	equ	0xFFA
  9642                           tblptru	equ	0xFF8
  9643                           tblptrh	equ	0xFF7
  9644                           tblptrl	equ	0xFF6
  9645                           tablat	equ	0xFF5
  9646                           prodh	equ	0xFF4
  9647                           prodl	equ	0xFF3
  9648                           intcon	equ	0xFF2
  9649                           postinc0	equ	0xFEE
  9650                           wreg	equ	0xFE8
  9651                           indf2	equ	0xFDF
  9652                           postinc2	equ	0xFDE
  9653                           postdec2	equ	0xFDD
  9654                           fsr2h	equ	0xFDA
  9655                           fsr2l	equ	0xFD9
  9656                           status	equ	0xFD8
  9657                           
  9658 ;; *************** function _TMR0_Initialize *****************
  9659 ;; Defined at:
  9660 ;;		line 14 in file "mcc_generated_files/tmr0.c"
  9661 ;; Parameters:    Size  Location     Type
  9662 ;;		None
  9663 ;; Auto vars:     Size  Location     Type
  9664 ;;		None
  9665 ;; Return value:  Size  Location     Type
  9666 ;;                  1    wreg      void 
  9667 ;; Registers used:
  9668 ;;		wreg, status,2, status,0, cstack
  9669 ;; Tracked objects:
  9670 ;;		On entry : 0/0
  9671 ;;		On exit  : 0/0
  9672 ;;		Unchanged: 0/0
  9673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9674 ;;      Params:         0       0       0       0       0       0       0
  9675 ;;      Locals:         0       0       0       0       0       0       0
  9676 ;;      Temps:          0       2       0       0       0       0       0
  9677 ;;      Totals:         0       2       0       0       0       0       0
  9678 ;;Total ram usage:        2 bytes
  9679 ;; Hardware stack levels used:    1
  9680 ;; Hardware stack levels required when called:    8
  9681 ;; This function calls:
  9682 ;;		_TMR0_SetInterruptHandler
  9683 ;;		_TMR0_StartTimer
  9684 ;; This function is called by:
  9685 ;;		_SYSTEM_Initialize
  9686 ;; This function uses a non-reentrant model
  9687 ;;
  9688                           
  9689                           	psect	text31
  9690  005332                     __ptext31:
  9691                           	opt stack 0
  9692  005332                     _TMR0_Initialize:
  9693                           	opt stack 21
  9694                           
  9695                           ;tmr0.c: 19: T0CON = 0x11;
  9696                           
  9697                           ;incstack = 0
  9698  005332  0E11               	movlw	17
  9699  005334  6ED5               	movwf	4053,c	;volatile
  9700                           
  9701                           ;tmr0.c: 22: TMR0H = 0x15;
  9702  005336  0E15               	movlw	21
  9703  005338  6ED7               	movwf	4055,c	;volatile
  9704                           
  9705                           ;tmr0.c: 25: TMR0L = 0x9F;
  9706  00533A  0E9F               	movlw	159
  9707  00533C  6ED6               	movwf	4054,c	;volatile
  9708                           
  9709                           ;tmr0.c: 28: timer0ReloadVal = (TMR0H << 8) | TMR0L;
  9710  00533E  50D6               	movf	4054,w,c	;volatile
  9711  005340  CFD7 F087          	movff	4055,??_TMR0_Initialize	;volatile
  9712  005344  0100               	movlb	0	; () banked
  9713  005346  6B88               	clrf	(??_TMR0_Initialize+1)& (0+255),b
  9714  005348  C087  F088         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  9715  00534C  0100               	movlb	0	; () banked
  9716  00534E  6B87               	clrf	??_TMR0_Initialize& (0+255),b
  9717  005350  0100               	movlb	0	; () banked
  9718  005352  1187               	iorwf	??_TMR0_Initialize& (0+255),w,b
  9719  005354  0100               	movlb	0	; () banked
  9720  005356  6FD5               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  9721  005358  0100               	movlb	0	; () banked
  9722  00535A  5188               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
  9723  00535C  0100               	movlb	0	; () banked
  9724  00535E  6FD6               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
  9725                           
  9726                           ; BSR set to: 0
  9727                           ;tmr0.c: 31: INTCONbits.TMR0IF = 0;
  9728  005360  94F2               	bcf	intcon,2,c	;volatile
  9729                           
  9730                           ; BSR set to: 0
  9731                           ;tmr0.c: 34: INTCONbits.TMR0IE = 1;
  9732  005362  8AF2               	bsf	intcon,5,c	;volatile
  9733                           
  9734                           ; BSR set to: 0
  9735                           ;tmr0.c: 37: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  9736  005364  0E84               	movlw	low _TMR0_DefaultInterruptHandler
  9737  005366  0100               	movlb	0	; () banked
  9738  005368  6F85               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  9739  00536A  0E56               	movlw	high _TMR0_DefaultInterruptHandler
  9740  00536C  0100               	movlb	0	; () banked
  9741  00536E  6F86               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9742  005370  EC9F  F02B         	call	_TMR0_SetInterruptHandler	;wreg free
  9743                           
  9744                           ;tmr0.c: 40: TMR0_StartTimer();
  9745  005374  ECAE  F02B         	call	_TMR0_StartTimer	;wreg free
  9746  005378  0012               	return		;funcret
  9747  00537A                     __end_of_TMR0_Initialize:
  9748                           	opt stack 0
  9749                           tosu	equ	0xFFF
  9750                           tosh	equ	0xFFE
  9751                           tosl	equ	0xFFD
  9752                           pclath	equ	0xFFA
  9753                           tblptru	equ	0xFF8
  9754                           tblptrh	equ	0xFF7
  9755                           tblptrl	equ	0xFF6
  9756                           tablat	equ	0xFF5
  9757                           prodh	equ	0xFF4
  9758                           prodl	equ	0xFF3
  9759                           intcon	equ	0xFF2
  9760                           postinc0	equ	0xFEE
  9761                           wreg	equ	0xFE8
  9762                           indf2	equ	0xFDF
  9763                           postinc2	equ	0xFDE
  9764                           postdec2	equ	0xFDD
  9765                           fsr2h	equ	0xFDA
  9766                           fsr2l	equ	0xFD9
  9767                           status	equ	0xFD8
  9768                           
  9769 ;; *************** function _TMR0_StartTimer *****************
  9770 ;; Defined at:
  9771 ;;		line 43 in file "mcc_generated_files/tmr0.c"
  9772 ;; Parameters:    Size  Location     Type
  9773 ;;		None
  9774 ;; Auto vars:     Size  Location     Type
  9775 ;;		None
  9776 ;; Return value:  Size  Location     Type
  9777 ;;                  1    wreg      void 
  9778 ;; Registers used:
  9779 ;;		None
  9780 ;; Tracked objects:
  9781 ;;		On entry : 0/0
  9782 ;;		On exit  : 0/0
  9783 ;;		Unchanged: 0/0
  9784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9785 ;;      Params:         0       0       0       0       0       0       0
  9786 ;;      Locals:         0       0       0       0       0       0       0
  9787 ;;      Temps:          0       0       0       0       0       0       0
  9788 ;;      Totals:         0       0       0       0       0       0       0
  9789 ;;Total ram usage:        0 bytes
  9790 ;; Hardware stack levels used:    1
  9791 ;; Hardware stack levels required when called:    7
  9792 ;; This function calls:
  9793 ;;		Nothing
  9794 ;; This function is called by:
  9795 ;;		_TMR0_Initialize
  9796 ;; This function uses a non-reentrant model
  9797 ;;
  9798                           
  9799                           	psect	text32
  9800  00575C                     __ptext32:
  9801                           	opt stack 0
  9802  00575C                     _TMR0_StartTimer:
  9803                           	opt stack 21
  9804                           
  9805                           ;tmr0.c: 46: T0CONbits.TMR0ON = 1;
  9806                           
  9807                           ;incstack = 0
  9808  00575C  8ED5               	bsf	4053,7,c	;volatile
  9809  00575E  0012               	return		;funcret
  9810  005760                     __end_of_TMR0_StartTimer:
  9811                           	opt stack 0
  9812                           tosu	equ	0xFFF
  9813                           tosh	equ	0xFFE
  9814                           tosl	equ	0xFFD
  9815                           pclath	equ	0xFFA
  9816                           tblptru	equ	0xFF8
  9817                           tblptrh	equ	0xFF7
  9818                           tblptrl	equ	0xFF6
  9819                           tablat	equ	0xFF5
  9820                           prodh	equ	0xFF4
  9821                           prodl	equ	0xFF3
  9822                           intcon	equ	0xFF2
  9823                           postinc0	equ	0xFEE
  9824                           wreg	equ	0xFE8
  9825                           indf2	equ	0xFDF
  9826                           postinc2	equ	0xFDE
  9827                           postdec2	equ	0xFDD
  9828                           fsr2h	equ	0xFDA
  9829                           fsr2l	equ	0xFD9
  9830                           status	equ	0xFD8
  9831                           
  9832 ;; *************** function _TMR0_SetInterruptHandler *****************
  9833 ;; Defined at:
  9834 ;;		line 104 in file "mcc_generated_files/tmr0.c"
  9835 ;; Parameters:    Size  Location     Type
  9836 ;;  InterruptHan    2   37[BANK0 ] PTR void 
  9837 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  9838 ;; Auto vars:     Size  Location     Type
  9839 ;;		None
  9840 ;; Return value:  Size  Location     Type
  9841 ;;                  1    wreg      void 
  9842 ;; Registers used:
  9843 ;;		wreg, status,2, status,0
  9844 ;; Tracked objects:
  9845 ;;		On entry : 0/0
  9846 ;;		On exit  : 0/0
  9847 ;;		Unchanged: 0/0
  9848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9849 ;;      Params:         0       2       0       0       0       0       0
  9850 ;;      Locals:         0       0       0       0       0       0       0
  9851 ;;      Temps:          0       0       0       0       0       0       0
  9852 ;;      Totals:         0       2       0       0       0       0       0
  9853 ;;Total ram usage:        2 bytes
  9854 ;; Hardware stack levels used:    1
  9855 ;; Hardware stack levels required when called:    7
  9856 ;; This function calls:
  9857 ;;		Nothing
  9858 ;; This function is called by:
  9859 ;;		_TMR0_Initialize
  9860 ;; This function uses a non-reentrant model
  9861 ;;
  9862                           
  9863                           	psect	text33
  9864  00573E                     __ptext33:
  9865                           	opt stack 0
  9866  00573E                     _TMR0_SetInterruptHandler:
  9867                           	opt stack 21
  9868                           
  9869                           ;tmr0.c: 105: TMR0_InterruptHandler = InterruptHandler;
  9870                           
  9871                           ;incstack = 0
  9872  00573E  C085  F0D3         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  9873  005742  C086  F0D4         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  9874  005746  0012               	return		;funcret
  9875  005748                     __end_of_TMR0_SetInterruptHandler:
  9876                           	opt stack 0
  9877                           tosu	equ	0xFFF
  9878                           tosh	equ	0xFFE
  9879                           tosl	equ	0xFFD
  9880                           pclath	equ	0xFFA
  9881                           tblptru	equ	0xFF8
  9882                           tblptrh	equ	0xFF7
  9883                           tblptrl	equ	0xFF6
  9884                           tablat	equ	0xFF5
  9885                           prodh	equ	0xFF4
  9886                           prodl	equ	0xFF3
  9887                           intcon	equ	0xFF2
  9888                           postinc0	equ	0xFEE
  9889                           wreg	equ	0xFE8
  9890                           indf2	equ	0xFDF
  9891                           postinc2	equ	0xFDE
  9892                           postdec2	equ	0xFDD
  9893                           fsr2h	equ	0xFDA
  9894                           fsr2l	equ	0xFD9
  9895                           status	equ	0xFD8
  9896                           
  9897 ;; *************** function _PIN_MANAGER_Initialize *****************
  9898 ;; Defined at:
  9899 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  9900 ;; Parameters:    Size  Location     Type
  9901 ;;		None
  9902 ;; Auto vars:     Size  Location     Type
  9903 ;;		None
  9904 ;; Return value:  Size  Location     Type
  9905 ;;                  1    wreg      void 
  9906 ;; Registers used:
  9907 ;;		wreg, status,2
  9908 ;; Tracked objects:
  9909 ;;		On entry : 0/0
  9910 ;;		On exit  : 0/0
  9911 ;;		Unchanged: 0/0
  9912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9913 ;;      Params:         0       0       0       0       0       0       0
  9914 ;;      Locals:         0       0       0       0       0       0       0
  9915 ;;      Temps:          0       0       0       0       0       0       0
  9916 ;;      Totals:         0       0       0       0       0       0       0
  9917 ;;Total ram usage:        0 bytes
  9918 ;; Hardware stack levels used:    1
  9919 ;; Hardware stack levels required when called:    7
  9920 ;; This function calls:
  9921 ;;		Nothing
  9922 ;; This function is called by:
  9923 ;;		_SYSTEM_Initialize
  9924 ;; This function uses a non-reentrant model
  9925 ;;
  9926                           
  9927                           	psect	text34
  9928  005578                     __ptext34:
  9929                           	opt stack 0
  9930  005578                     _PIN_MANAGER_Initialize:
  9931                           	opt stack 22
  9932                           
  9933                           ;pin_manager.c: 56: LATA = 0x00;
  9934                           
  9935                           ;incstack = 0
  9936  005578  0E00               	movlw	0
  9937  00557A  6E89               	movwf	3977,c	;volatile
  9938                           
  9939                           ;pin_manager.c: 57: LATB = 0x02;
  9940  00557C  0E02               	movlw	2
  9941  00557E  6E8A               	movwf	3978,c	;volatile
  9942                           
  9943                           ;pin_manager.c: 58: LATC = 0x00;
  9944  005580  0E00               	movlw	0
  9945  005582  6E8B               	movwf	3979,c	;volatile
  9946                           
  9947                           ;pin_manager.c: 63: TRISA = 0x00;
  9948  005584  0E00               	movlw	0
  9949  005586  6E92               	movwf	3986,c	;volatile
  9950                           
  9951                           ;pin_manager.c: 64: TRISB = 0xFD;
  9952  005588  0EFD               	movlw	253
  9953  00558A  6E93               	movwf	3987,c	;volatile
  9954                           
  9955                           ;pin_manager.c: 65: TRISC = 0xBF;
  9956  00558C  0EBF               	movlw	191
  9957  00558E  6E94               	movwf	3988,c	;volatile
  9958                           
  9959                           ;pin_manager.c: 70: ANSELC = 0xBC;
  9960  005590  0EBC               	movlw	188
  9961  005592  010F               	movlb	15	; () banked
  9962  005594  6F3A               	movwf	58,b	;volatile
  9963                           
  9964                           ;pin_manager.c: 71: ANSELB = 0x3C;
  9965  005596  0E3C               	movlw	60
  9966  005598  010F               	movlb	15	; () banked
  9967  00559A  6F39               	movwf	57,b	;volatile
  9968                           
  9969                           ;pin_manager.c: 72: ANSELA = 0x00;
  9970  00559C  0E00               	movlw	0
  9971  00559E  010F               	movlb	15	; () banked
  9972  0055A0  6F38               	movwf	56,b	;volatile
  9973                           
  9974                           ; BSR set to: 15
  9975                           ;pin_manager.c: 77: WPUB = 0xFF;
  9976  0055A2  6861               	setf	3937,c	;volatile
  9977                           
  9978                           ; BSR set to: 15
  9979                           ;pin_manager.c: 78: INTCON2bits.nRBPU = 0;
  9980  0055A4  9EF1               	bcf	intcon2,7,c	;volatile
  9981                           
  9982                           ; BSR set to: 15
  9983  0055A6  0012               	return		;funcret
  9984  0055A8                     __end_of_PIN_MANAGER_Initialize:
  9985                           	opt stack 0
  9986                           tosu	equ	0xFFF
  9987                           tosh	equ	0xFFE
  9988                           tosl	equ	0xFFD
  9989                           pclath	equ	0xFFA
  9990                           tblptru	equ	0xFF8
  9991                           tblptrh	equ	0xFF7
  9992                           tblptrl	equ	0xFF6
  9993                           tablat	equ	0xFF5
  9994                           prodh	equ	0xFF4
  9995                           prodl	equ	0xFF3
  9996                           intcon	equ	0xFF2
  9997                           intcon2	equ	0xFF1
  9998                           postinc0	equ	0xFEE
  9999                           wreg	equ	0xFE8
 10000                           indf2	equ	0xFDF
 10001                           postinc2	equ	0xFDE
 10002                           postdec2	equ	0xFDD
 10003                           fsr2h	equ	0xFDA
 10004                           fsr2l	equ	0xFD9
 10005                           status	equ	0xFD8
 10006                           
 10007 ;; *************** function _OSCILLATOR_Initialize *****************
 10008 ;; Defined at:
 10009 ;;		line 122 in file "mcc_generated_files/mcc.c"
 10010 ;; Parameters:    Size  Location     Type
 10011 ;;		None
 10012 ;; Auto vars:     Size  Location     Type
 10013 ;;		None
 10014 ;; Return value:  Size  Location     Type
 10015 ;;                  1    wreg      void 
 10016 ;; Registers used:
 10017 ;;		wreg, status,2
 10018 ;; Tracked objects:
 10019 ;;		On entry : 0/0
 10020 ;;		On exit  : 0/0
 10021 ;;		Unchanged: 0/0
 10022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10023 ;;      Params:         0       0       0       0       0       0       0
 10024 ;;      Locals:         0       0       0       0       0       0       0
 10025 ;;      Temps:          0       0       0       0       0       0       0
 10026 ;;      Totals:         0       0       0       0       0       0       0
 10027 ;;Total ram usage:        0 bytes
 10028 ;; Hardware stack levels used:    1
 10029 ;; Hardware stack levels required when called:    7
 10030 ;; This function calls:
 10031 ;;		Nothing
 10032 ;; This function is called by:
 10033 ;;		_SYSTEM_Initialize
 10034 ;; This function uses a non-reentrant model
 10035 ;;
 10036                           
 10037                           	psect	text35
 10038  005718                     __ptext35:
 10039                           	opt stack 0
 10040  005718                     _OSCILLATOR_Initialize:
 10041                           	opt stack 22
 10042                           
 10043                           ;mcc.c: 125: OSCCON = 0x70;
 10044                           
 10045                           ; BSR set to: 15
 10046                           ;incstack = 0
 10047  005718  0E70               	movlw	112
 10048  00571A  6ED3               	movwf	4051,c	;volatile
 10049                           
 10050                           ;mcc.c: 127: OSCCON2 = 0x04;
 10051  00571C  0E04               	movlw	4
 10052  00571E  6ED2               	movwf	4050,c	;volatile
 10053                           
 10054                           ;mcc.c: 129: OSCTUNE = 0x00;
 10055  005720  0E00               	movlw	0
 10056  005722  6E9B               	movwf	3995,c	;volatile
 10057  005724  0012               	return		;funcret
 10058  005726                     __end_of_OSCILLATOR_Initialize:
 10059                           	opt stack 0
 10060                           tosu	equ	0xFFF
 10061                           tosh	equ	0xFFE
 10062                           tosl	equ	0xFFD
 10063                           pclath	equ	0xFFA
 10064                           tblptru	equ	0xFF8
 10065                           tblptrh	equ	0xFF7
 10066                           tblptrl	equ	0xFF6
 10067                           tablat	equ	0xFF5
 10068                           prodh	equ	0xFF4
 10069                           prodl	equ	0xFF3
 10070                           intcon	equ	0xFF2
 10071                           intcon2	equ	0xFF1
 10072                           postinc0	equ	0xFEE
 10073                           wreg	equ	0xFE8
 10074                           indf2	equ	0xFDF
 10075                           postinc2	equ	0xFDE
 10076                           postdec2	equ	0xFDD
 10077                           fsr2h	equ	0xFDA
 10078                           fsr2l	equ	0xFD9
 10079                           status	equ	0xFD8
 10080                           
 10081 ;; *************** function _INTERRUPT_Initialize *****************
 10082 ;; Defined at:
 10083 ;;		line 4 in file "mcc_generated_files/interrupt_manager.c"
 10084 ;; Parameters:    Size  Location     Type
 10085 ;;		None
 10086 ;; Auto vars:     Size  Location     Type
 10087 ;;		None
 10088 ;; Return value:  Size  Location     Type
 10089 ;;                  1    wreg      void 
 10090 ;; Registers used:
 10091 ;;		None
 10092 ;; Tracked objects:
 10093 ;;		On entry : 0/0
 10094 ;;		On exit  : 0/0
 10095 ;;		Unchanged: 0/0
 10096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10097 ;;      Params:         0       0       0       0       0       0       0
 10098 ;;      Locals:         0       0       0       0       0       0       0
 10099 ;;      Temps:          0       0       0       0       0       0       0
 10100 ;;      Totals:         0       0       0       0       0       0       0
 10101 ;;Total ram usage:        0 bytes
 10102 ;; Hardware stack levels used:    1
 10103 ;; Hardware stack levels required when called:    7
 10104 ;; This function calls:
 10105 ;;		Nothing
 10106 ;; This function is called by:
 10107 ;;		_SYSTEM_Initialize
 10108 ;; This function uses a non-reentrant model
 10109 ;;
 10110                           
 10111                           	psect	text36
 10112  005760                     __ptext36:
 10113                           	opt stack 0
 10114  005760                     _INTERRUPT_Initialize:
 10115                           	opt stack 22
 10116                           
 10117                           ;interrupt_manager.c: 7: RCONbits.IPEN = 0;
 10118                           
 10119                           ;incstack = 0
 10120  005760  9ED0               	bcf	4048,7,c	;volatile
 10121  005762  0012               	return		;funcret
 10122  005764                     __end_of_INTERRUPT_Initialize:
 10123                           	opt stack 0
 10124                           tosu	equ	0xFFF
 10125                           tosh	equ	0xFFE
 10126                           tosl	equ	0xFFD
 10127                           pclath	equ	0xFFA
 10128                           tblptru	equ	0xFF8
 10129                           tblptrh	equ	0xFF7
 10130                           tblptrl	equ	0xFF6
 10131                           tablat	equ	0xFF5
 10132                           prodh	equ	0xFF4
 10133                           prodl	equ	0xFF3
 10134                           intcon	equ	0xFF2
 10135                           intcon2	equ	0xFF1
 10136                           postinc0	equ	0xFEE
 10137                           wreg	equ	0xFE8
 10138                           indf2	equ	0xFDF
 10139                           postinc2	equ	0xFDE
 10140                           postdec2	equ	0xFDD
 10141                           fsr2h	equ	0xFDA
 10142                           fsr2l	equ	0xFD9
 10143                           status	equ	0xFD8
 10144                           
 10145 ;; *************** function _EXT_INT_Initialize *****************
 10146 ;; Defined at:
 10147 ;;		line 82 in file "mcc_generated_files/ext_int.c"
 10148 ;; Parameters:    Size  Location     Type
 10149 ;;		None
 10150 ;; Auto vars:     Size  Location     Type
 10151 ;;		None
 10152 ;; Return value:  Size  Location     Type
 10153 ;;                  1    wreg      void 
 10154 ;; Registers used:
 10155 ;;		wreg, status,2, status,0, cstack
 10156 ;; Tracked objects:
 10157 ;;		On entry : 0/0
 10158 ;;		On exit  : 0/0
 10159 ;;		Unchanged: 0/0
 10160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10161 ;;      Params:         0       0       0       0       0       0       0
 10162 ;;      Locals:         0       0       0       0       0       0       0
 10163 ;;      Temps:          0       0       0       0       0       0       0
 10164 ;;      Totals:         0       0       0       0       0       0       0
 10165 ;;Total ram usage:        0 bytes
 10166 ;; Hardware stack levels used:    1
 10167 ;; Hardware stack levels required when called:    8
 10168 ;; This function calls:
 10169 ;;		_INT0_SetInterruptHandler
 10170 ;; This function is called by:
 10171 ;;		_SYSTEM_Initialize
 10172 ;; This function uses a non-reentrant model
 10173 ;;
 10174                           
 10175                           	psect	text37
 10176  0056BA                     __ptext37:
 10177                           	opt stack 0
 10178  0056BA                     _EXT_INT_Initialize:
 10179                           	opt stack 21
 10180                           
 10181                           ;ext_int.c: 91: (INTCONbits.INT0IF = 0);
 10182                           
 10183                           ;incstack = 0
 10184  0056BA  92F2               	bcf	intcon,1,c	;volatile
 10185                           
 10186                           ;ext_int.c: 92: (INTCON2bits.INTEDG0 = 0);
 10187  0056BC  9CF1               	bcf	intcon2,6,c	;volatile
 10188                           
 10189                           ;ext_int.c: 94: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
 10190  0056BE  0E00               	movlw	0
 10191  0056C0  0100               	movlb	0	; () banked
 10192  0056C2  6F85               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
 10193  0056C4  0E00               	movlw	0
 10194  0056C6  0100               	movlb	0	; () banked
 10195  0056C8  6F86               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 10196  0056CA  ECA4  F02B         	call	_INT0_SetInterruptHandler	;wreg free
 10197                           
 10198                           ;ext_int.c: 95: (INTCONbits.INT0IE = 1);
 10199  0056CE  88F2               	bsf	intcon,4,c	;volatile
 10200  0056D0  0012               	return		;funcret
 10201  0056D2                     __end_of_EXT_INT_Initialize:
 10202                           	opt stack 0
 10203                           tosu	equ	0xFFF
 10204                           tosh	equ	0xFFE
 10205                           tosl	equ	0xFFD
 10206                           pclath	equ	0xFFA
 10207                           tblptru	equ	0xFF8
 10208                           tblptrh	equ	0xFF7
 10209                           tblptrl	equ	0xFF6
 10210                           tablat	equ	0xFF5
 10211                           prodh	equ	0xFF4
 10212                           prodl	equ	0xFF3
 10213                           intcon	equ	0xFF2
 10214                           intcon2	equ	0xFF1
 10215                           postinc0	equ	0xFEE
 10216                           wreg	equ	0xFE8
 10217                           indf2	equ	0xFDF
 10218                           postinc2	equ	0xFDE
 10219                           postdec2	equ	0xFDD
 10220                           fsr2h	equ	0xFDA
 10221                           fsr2l	equ	0xFD9
 10222                           status	equ	0xFD8
 10223                           
 10224 ;; *************** function _INT0_SetInterruptHandler *****************
 10225 ;; Defined at:
 10226 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 10227 ;; Parameters:    Size  Location     Type
 10228 ;;  InterruptHan    2   37[BANK0 ] PTR void 
 10229 ;;		 -> INT0_DefaultInterruptHandler(1), 
 10230 ;; Auto vars:     Size  Location     Type
 10231 ;;		None
 10232 ;; Return value:  Size  Location     Type
 10233 ;;                  1    wreg      void 
 10234 ;; Registers used:
 10235 ;;		wreg, status,2, status,0
 10236 ;; Tracked objects:
 10237 ;;		On entry : 0/0
 10238 ;;		On exit  : 0/0
 10239 ;;		Unchanged: 0/0
 10240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10241 ;;      Params:         0       2       0       0       0       0       0
 10242 ;;      Locals:         0       0       0       0       0       0       0
 10243 ;;      Temps:          0       0       0       0       0       0       0
 10244 ;;      Totals:         0       2       0       0       0       0       0
 10245 ;;Total ram usage:        2 bytes
 10246 ;; Hardware stack levels used:    1
 10247 ;; Hardware stack levels required when called:    7
 10248 ;; This function calls:
 10249 ;;		Nothing
 10250 ;; This function is called by:
 10251 ;;		_EXT_INT_Initialize
 10252 ;; This function uses a non-reentrant model
 10253 ;;
 10254                           
 10255                           	psect	text38
 10256  005748                     __ptext38:
 10257                           	opt stack 0
 10258  005748                     _INT0_SetInterruptHandler:
 10259                           	opt stack 21
 10260                           
 10261                           ;ext_int.c: 63: INT0_InterruptHandler = InterruptHandler;
 10262                           
 10263                           ;incstack = 0
 10264  005748  C085  F0D1         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 10265  00574C  C086  F0D2         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 10266  005750  0012               	return		;funcret
 10267  005752                     __end_of_INT0_SetInterruptHandler:
 10268                           	opt stack 0
 10269                           tosu	equ	0xFFF
 10270                           tosh	equ	0xFFE
 10271                           tosl	equ	0xFFD
 10272                           pclath	equ	0xFFA
 10273                           tblptru	equ	0xFF8
 10274                           tblptrh	equ	0xFF7
 10275                           tblptrl	equ	0xFF6
 10276                           tablat	equ	0xFF5
 10277                           prodh	equ	0xFF4
 10278                           prodl	equ	0xFF3
 10279                           intcon	equ	0xFF2
 10280                           intcon2	equ	0xFF1
 10281                           postinc0	equ	0xFEE
 10282                           wreg	equ	0xFE8
 10283                           indf2	equ	0xFDF
 10284                           postinc2	equ	0xFDE
 10285                           postdec2	equ	0xFDD
 10286                           fsr2h	equ	0xFDA
 10287                           fsr2l	equ	0xFD9
 10288                           status	equ	0xFD8
 10289                           
 10290 ;; *************** function _EUSART1_Initialize *****************
 10291 ;; Defined at:
 10292 ;;		line 55 in file "mcc_generated_files/eusart1.c"
 10293 ;; Parameters:    Size  Location     Type
 10294 ;;		None
 10295 ;; Auto vars:     Size  Location     Type
 10296 ;;		None
 10297 ;; Return value:  Size  Location     Type
 10298 ;;                  1    wreg      void 
 10299 ;; Registers used:
 10300 ;;		wreg, status,2
 10301 ;; Tracked objects:
 10302 ;;		On entry : 0/0
 10303 ;;		On exit  : 0/0
 10304 ;;		Unchanged: 0/0
 10305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10306 ;;      Params:         0       0       0       0       0       0       0
 10307 ;;      Locals:         0       0       0       0       0       0       0
 10308 ;;      Temps:          0       0       0       0       0       0       0
 10309 ;;      Totals:         0       0       0       0       0       0       0
 10310 ;;Total ram usage:        0 bytes
 10311 ;; Hardware stack levels used:    1
 10312 ;; Hardware stack levels required when called:    7
 10313 ;; This function calls:
 10314 ;;		Nothing
 10315 ;; This function is called by:
 10316 ;;		_SYSTEM_Initialize
 10317 ;; This function uses a non-reentrant model
 10318 ;;
 10319                           
 10320                           	psect	text39
 10321  0056D2                     __ptext39:
 10322                           	opt stack 0
 10323  0056D2                     _EUSART1_Initialize:
 10324                           	opt stack 22
 10325                           
 10326                           ;eusart1.c: 60: BAUDCON1 = 0x08;
 10327                           
 10328                           ;incstack = 0
 10329  0056D2  0E08               	movlw	8
 10330  0056D4  6EB8               	movwf	4024,c	;volatile
 10331                           
 10332                           ;eusart1.c: 63: RCSTA1 = 0x80;
 10333  0056D6  0E80               	movlw	128
 10334  0056D8  6EAB               	movwf	4011,c	;volatile
 10335                           
 10336                           ;eusart1.c: 66: TXSTA1 = 0x24;
 10337  0056DA  0E24               	movlw	36
 10338  0056DC  6EAC               	movwf	4012,c	;volatile
 10339                           
 10340                           ;eusart1.c: 69: SPBRG1 = 0xA0;
 10341  0056DE  0EA0               	movlw	160
 10342  0056E0  6EAF               	movwf	4015,c	;volatile
 10343                           
 10344                           ;eusart1.c: 72: SPBRGH1 = 0x01;
 10345  0056E2  0E01               	movlw	1
 10346  0056E4  6EB0               	movwf	4016,c	;volatile
 10347  0056E6  0012               	return		;funcret
 10348  0056E8                     __end_of_EUSART1_Initialize:
 10349                           	opt stack 0
 10350                           tosu	equ	0xFFF
 10351                           tosh	equ	0xFFE
 10352                           tosl	equ	0xFFD
 10353                           pclath	equ	0xFFA
 10354                           tblptru	equ	0xFF8
 10355                           tblptrh	equ	0xFF7
 10356                           tblptrl	equ	0xFF6
 10357                           tablat	equ	0xFF5
 10358                           prodh	equ	0xFF4
 10359                           prodl	equ	0xFF3
 10360                           intcon	equ	0xFF2
 10361                           intcon2	equ	0xFF1
 10362                           postinc0	equ	0xFEE
 10363                           wreg	equ	0xFE8
 10364                           indf2	equ	0xFDF
 10365                           postinc2	equ	0xFDE
 10366                           postdec2	equ	0xFDD
 10367                           fsr2h	equ	0xFDA
 10368                           fsr2l	equ	0xFD9
 10369                           status	equ	0xFD8
 10370                           
 10371 ;; *************** function _INTERRUPT_InterruptManager *****************
 10372 ;; Defined at:
 10373 ;;		line 10 in file "mcc_generated_files/interrupt_manager.c"
 10374 ;; Parameters:    Size  Location     Type
 10375 ;;		None
 10376 ;; Auto vars:     Size  Location     Type
 10377 ;;		None
 10378 ;; Return value:  Size  Location     Type
 10379 ;;                  1    wreg      void 
 10380 ;; Registers used:
 10381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10382 ;; Tracked objects:
 10383 ;;		On entry : 0/0
 10384 ;;		On exit  : 0/0
 10385 ;;		Unchanged: 0/0
 10386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10387 ;;      Params:         0       0       0       0       0       0       0
 10388 ;;      Locals:         0       0       0       0       0       0       0
 10389 ;;      Temps:          0      14       0       0       0       0       0
 10390 ;;      Totals:         0      14       0       0       0       0       0
 10391 ;;Total ram usage:       14 bytes
 10392 ;; Hardware stack levels used:    1
 10393 ;; Hardware stack levels required when called:    6
 10394 ;; This function calls:
 10395 ;;		_INT0_ISR
 10396 ;;		_TMR0_ISR
 10397 ;; This function is called by:
 10398 ;;		Interrupt level 2
 10399 ;; This function uses a non-reentrant model
 10400 ;;
 10401                           
 10402                           	psect	intcode
 10403  000008                     __pintcode:
 10404                           	opt stack 0
 10405  000008                     _INTERRUPT_InterruptManager:
 10406                           	opt stack 19
 10407                           
 10408                           ;incstack = 0
 10409  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10410  00000A  CFFA F077          	movff	pclath,??_INTERRUPT_InterruptManager
 10411  00000E  CFFB F078          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 10412  000012  CFE9 F079          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 10413  000016  CFEA F07A          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 10414  00001A  CFE1 F07B          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 10415  00001E  CFE2 F07C          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 10416  000022  CFD9 F07D          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 10417  000026  CFDA F07E          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 10418  00002A  CFF3 F07F          	movff	prodl,??_INTERRUPT_InterruptManager+8
 10419  00002E  CFF4 F080          	movff	prodh,??_INTERRUPT_InterruptManager+9
 10420  000032  CFF6 F081          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 10421  000036  CFF7 F082          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 10422  00003A  CFF8 F083          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 10423  00003E  CFF5 F084          	movff	tablat,??_INTERRUPT_InterruptManager+13
 10424                           
 10425                           ;interrupt_manager.c: 13: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 10426  000042  BAF2               	btfsc	intcon,5,c	;volatile
 10427  000044  A4F2               	btfss	intcon,2,c	;volatile
 10428  000046  D003               	goto	i2l74
 10429                           
 10430                           ;interrupt_manager.c: 14: {
 10431                           ;interrupt_manager.c: 15: TMR0_ISR();
 10432  000048  EC8B  F02A         	call	_TMR0_ISR	;wreg free
 10433                           
 10434                           ;interrupt_manager.c: 16: }
 10435  00004C  D005               	goto	i2l78
 10436  00004E                     i2l74:
 10437                           
 10438                           ;interrupt_manager.c: 17: else if(INTCONbits.INT0IE == 1 && INTCONbits.INT0IF == 1)
 10439  00004E  B8F2               	btfsc	intcon,4,c	;volatile
 10440  000050  A2F2               	btfss	intcon,1,c	;volatile
 10441  000052  D002               	goto	i2l78
 10442                           
 10443                           ;interrupt_manager.c: 18: {
 10444                           ;interrupt_manager.c: 19: INT0_ISR();
 10445  000054  EC55  F026         	call	_INT0_ISR	;wreg free
 10446  000058                     i2l78:
 10447  000058  C084  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 10448  00005C  C083  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 10449  000060  C082  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 10450  000064  C081  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 10451  000068  C080  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 10452  00006C  C07F  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 10453  000070  C07E  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 10454  000074  C07D  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 10455  000078  C07C  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 10456  00007C  C07B  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 10457  000080  C07A  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 10458  000084  C079  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 10459  000088  C078  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 10460  00008C  C077  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 10461  000090  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10462  000092  0011               	retfie		f
 10463  000094                     __end_of_INTERRUPT_InterruptManager:
 10464                           	opt stack 0
 10465                           tosu	equ	0xFFF
 10466                           tosh	equ	0xFFE
 10467                           tosl	equ	0xFFD
 10468                           pclatu	equ	0xFFB
 10469                           pclath	equ	0xFFA
 10470                           tblptru	equ	0xFF8
 10471                           tblptrh	equ	0xFF7
 10472                           tblptrl	equ	0xFF6
 10473                           tablat	equ	0xFF5
 10474                           prodh	equ	0xFF4
 10475                           prodl	equ	0xFF3
 10476                           intcon	equ	0xFF2
 10477                           intcon2	equ	0xFF1
 10478                           postinc0	equ	0xFEE
 10479                           fsr0h	equ	0xFEA
 10480                           fsr0l	equ	0xFE9
 10481                           wreg	equ	0xFE8
 10482                           fsr1h	equ	0xFE2
 10483                           fsr1l	equ	0xFE1
 10484                           indf2	equ	0xFDF
 10485                           postinc2	equ	0xFDE
 10486                           postdec2	equ	0xFDD
 10487                           fsr2h	equ	0xFDA
 10488                           fsr2l	equ	0xFD9
 10489                           status	equ	0xFD8
 10490                           
 10491 ;; *************** function _TMR0_ISR *****************
 10492 ;; Defined at:
 10493 ;;		line 84 in file "mcc_generated_files/tmr0.c"
 10494 ;; Parameters:    Size  Location     Type
 10495 ;;		None
 10496 ;; Auto vars:     Size  Location     Type
 10497 ;;		None
 10498 ;; Return value:  Size  Location     Type
 10499 ;;                  1    wreg      void 
 10500 ;; Registers used:
 10501 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 10502 ;; Tracked objects:
 10503 ;;		On entry : 0/0
 10504 ;;		On exit  : 0/0
 10505 ;;		Unchanged: 0/0
 10506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10507 ;;      Params:         0       0       0       0       0       0       0
 10508 ;;      Locals:         0       0       0       0       0       0       0
 10509 ;;      Temps:          0       0       0       0       0       0       0
 10510 ;;      Totals:         0       0       0       0       0       0       0
 10511 ;;Total ram usage:        0 bytes
 10512 ;; Hardware stack levels used:    1
 10513 ;; Hardware stack levels required when called:    1
 10514 ;; This function calls:
 10515 ;;		Absolute function
 10516 ;;		_TMR0_DefaultInterruptHandler
 10517 ;; This function is called by:
 10518 ;;		_INTERRUPT_InterruptManager
 10519 ;; This function uses a non-reentrant model
 10520 ;;
 10521                           
 10522                           	psect	text41
 10523  005516                     __ptext41:
 10524                           	opt stack 0
 10525  005516                     _TMR0_ISR:
 10526                           	opt stack 23
 10527                           
 10528                           ;tmr0.c: 88: INTCONbits.TMR0IF = 0;
 10529                           
 10530                           ;incstack = 0
 10531  005516  94F2               	bcf	intcon,2,c	;volatile
 10532                           
 10533                           ;tmr0.c: 92: TMR0H = timer0ReloadVal >> 8;
 10534  005518  0100               	movlb	0	; () banked
 10535  00551A  51D6               	movf	(_timer0ReloadVal+1)& (0+255),w,b	;volatile
 10536  00551C  6ED7               	movwf	4055,c	;volatile
 10537                           
 10538                           ; BSR set to: 0
 10539                           ;tmr0.c: 93: TMR0L = (uint8_t) timer0ReloadVal;
 10540  00551E  C0D5  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 10541                           
 10542                           ; BSR set to: 0
 10543                           ;tmr0.c: 95: if(TMR0_InterruptHandler)
 10544  005522  0100               	movlb	0	; () banked
 10545  005524  51D3               	movf	_TMR0_InterruptHandler& (0+255),w,b
 10546  005526  0100               	movlb	0	; () banked
 10547  005528  11D4               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 10548  00552A  B4D8               	btfsc	status,2,c
 10549  00552C  0012               	return	
 10550                           
 10551                           ; BSR set to: 0
 10552                           ;tmr0.c: 96: {
 10553                           ;tmr0.c: 97: TMR0_InterruptHandler();
 10554  00552E  D801               	call	i2u1568_48
 10555  005530  0012               	return	
 10556  005532                     i2u1568_48:
 10557  005532  0005               	push	
 10558  005534  0100               	movlb	0	; () banked
 10559  005536  6EFA               	movwf	pclath,c
 10560  005538  51D3               	movf	_TMR0_InterruptHandler& (0+255),w,b
 10561  00553A  6EFD               	movwf	tosl,c
 10562  00553C  51D4               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 10563  00553E  6EFE               	movwf	tosh,c
 10564  005540  50F8               	movf	tblptru,w,c
 10565  005542  6EFF               	movwf	tosu,c
 10566  005544  50FA               	movf	pclath,w,c
 10567  005546  0012               	return		;indir
 10568  005548                     __end_of_TMR0_ISR:
 10569                           	opt stack 0
 10570                           tosu	equ	0xFFF
 10571                           tosh	equ	0xFFE
 10572                           tosl	equ	0xFFD
 10573                           pclatu	equ	0xFFB
 10574                           pclath	equ	0xFFA
 10575                           tblptru	equ	0xFF8
 10576                           tblptrh	equ	0xFF7
 10577                           tblptrl	equ	0xFF6
 10578                           tablat	equ	0xFF5
 10579                           prodh	equ	0xFF4
 10580                           prodl	equ	0xFF3
 10581                           intcon	equ	0xFF2
 10582                           intcon2	equ	0xFF1
 10583                           postinc0	equ	0xFEE
 10584                           fsr0h	equ	0xFEA
 10585                           fsr0l	equ	0xFE9
 10586                           wreg	equ	0xFE8
 10587                           fsr1h	equ	0xFE2
 10588                           fsr1l	equ	0xFE1
 10589                           indf2	equ	0xFDF
 10590                           postinc2	equ	0xFDE
 10591                           postdec2	equ	0xFDD
 10592                           fsr2h	equ	0xFDA
 10593                           fsr2l	equ	0xFD9
 10594                           status	equ	0xFD8
 10595                           
 10596 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 10597 ;; Defined at:
 10598 ;;		line 108 in file "mcc_generated_files/tmr0.c"
 10599 ;; Parameters:    Size  Location     Type
 10600 ;;		None
 10601 ;; Auto vars:     Size  Location     Type
 10602 ;;		None
 10603 ;; Return value:  Size  Location     Type
 10604 ;;                  1    wreg      void 
 10605 ;; Registers used:
 10606 ;;		wreg, status,2, status,0
 10607 ;; Tracked objects:
 10608 ;;		On entry : 0/0
 10609 ;;		On exit  : 0/0
 10610 ;;		Unchanged: 0/0
 10611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10612 ;;      Params:         0       0       0       0       0       0       0
 10613 ;;      Locals:         0       0       0       0       0       0       0
 10614 ;;      Temps:          1       0       0       0       0       0       0
 10615 ;;      Totals:         1       0       0       0       0       0       0
 10616 ;;Total ram usage:        1 bytes
 10617 ;; Hardware stack levels used:    1
 10618 ;; This function calls:
 10619 ;;		Nothing
 10620 ;; This function is called by:
 10621 ;;		_TMR0_Initialize
 10622 ;;		_TMR0_ISR
 10623 ;; This function uses a non-reentrant model
 10624 ;;
 10625                           
 10626                           	psect	text42
 10627  005684                     __ptext42:
 10628                           	opt stack 0
 10629  005684                     _TMR0_DefaultInterruptHandler:
 10630                           	opt stack 23
 10631                           
 10632                           ;tmr0.c: 109: LATBbits.LATB1 = ~LATBbits.LATB1;
 10633                           
 10634                           ;incstack = 0
 10635  005684  A28A               	btfss	3978,1,c	;volatile
 10636  005686  D002               	goto	i2u669_40
 10637  005688  0E01               	movlw	1
 10638  00568A  D001               	goto	i2u669_46
 10639  00568C                     i2u669_40:
 10640  00568C  0E00               	movlw	0
 10641  00568E                     i2u669_46:
 10642  00568E  0AFF               	xorlw	255
 10643  005690  6E01               	movwf	??_TMR0_DefaultInterruptHandler& (0+255),c
 10644  005692  4601               	rlncf	??_TMR0_DefaultInterruptHandler,f,c
 10645  005694  508A               	movf	3978,w,c	;volatile
 10646  005696  1801               	xorwf	??_TMR0_DefaultInterruptHandler,w,c
 10647  005698  0BFD               	andlw	-3
 10648  00569A  1801               	xorwf	??_TMR0_DefaultInterruptHandler,w,c
 10649  00569C  6E8A               	movwf	3978,c	;volatile
 10650  00569E  0012               	return		;funcret
 10651  0056A0                     __end_of_TMR0_DefaultInterruptHandler:
 10652                           	opt stack 0
 10653                           tosu	equ	0xFFF
 10654                           tosh	equ	0xFFE
 10655                           tosl	equ	0xFFD
 10656                           pclatu	equ	0xFFB
 10657                           pclath	equ	0xFFA
 10658                           tblptru	equ	0xFF8
 10659                           tblptrh	equ	0xFF7
 10660                           tblptrl	equ	0xFF6
 10661                           tablat	equ	0xFF5
 10662                           prodh	equ	0xFF4
 10663                           prodl	equ	0xFF3
 10664                           intcon	equ	0xFF2
 10665                           intcon2	equ	0xFF1
 10666                           postinc0	equ	0xFEE
 10667                           fsr0h	equ	0xFEA
 10668                           fsr0l	equ	0xFE9
 10669                           wreg	equ	0xFE8
 10670                           fsr1h	equ	0xFE2
 10671                           fsr1l	equ	0xFE1
 10672                           indf2	equ	0xFDF
 10673                           postinc2	equ	0xFDE
 10674                           postdec2	equ	0xFDD
 10675                           fsr2h	equ	0xFDA
 10676                           fsr2l	equ	0xFD9
 10677                           status	equ	0xFD8
 10678                           
 10679 ;; *************** function _INT0_ISR *****************
 10680 ;; Defined at:
 10681 ;;		line 23 in file "mcc_generated_files/ext_int.c"
 10682 ;; Parameters:    Size  Location     Type
 10683 ;;		None
 10684 ;; Auto vars:     Size  Location     Type
 10685 ;;		None
 10686 ;; Return value:  Size  Location     Type
 10687 ;;                  1    wreg      void 
 10688 ;; Registers used:
 10689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10690 ;; Tracked objects:
 10691 ;;		On entry : 0/0
 10692 ;;		On exit  : 0/0
 10693 ;;		Unchanged: 0/0
 10694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10695 ;;      Params:         0       0       0       0       0       0       0
 10696 ;;      Locals:         0       0       0       0       0       0       0
 10697 ;;      Temps:          0       0       0       0       0       0       0
 10698 ;;      Totals:         0       0       0       0       0       0       0
 10699 ;;Total ram usage:        0 bytes
 10700 ;; Hardware stack levels used:    1
 10701 ;; Hardware stack levels required when called:    5
 10702 ;; This function calls:
 10703 ;;		_TMR0_ReadTimer
 10704 ;;		_TMR0_Reload
 10705 ;;		_TMR0_StopTimer
 10706 ;;		___lwtoft
 10707 ;;		_printf
 10708 ;;		i2_TMR0_StartTimer
 10709 ;;		i2___ftadd
 10710 ;;		i2___ftdiv
 10711 ;;		i2___ftmul
 10712 ;; This function is called by:
 10713 ;;		_INTERRUPT_InterruptManager
 10714 ;; This function uses a non-reentrant model
 10715 ;;
 10716                           
 10717                           	psect	text43
 10718  004CAA                     __ptext43:
 10719                           	opt stack 0
 10720  004CAA                     _INT0_ISR:
 10721                           	opt stack 19
 10722                           
 10723                           ;ext_int.c: 26: TMR0_StopTimer();
 10724                           
 10725                           ;incstack = 0
 10726  004CAA  ECB4  F02B         	call	_TMR0_StopTimer	;wreg free
 10727                           
 10728                           ;ext_int.c: 27: reading = TMR0_ReadTimer();
 10729  004CAE  ECE0  F029         	call	_TMR0_ReadTimer	;wreg free
 10730  004CB2  C001  F0CF         	movff	?_TMR0_ReadTimer,_reading
 10731  004CB6  C002  F0D0         	movff	?_TMR0_ReadTimer+1,_reading+1
 10732                           
 10733                           ;ext_int.c: 30: result = 35 * ((float)reading - 27) / 3.01004;
 10734  004CBA  0E00               	movlw	0
 10735  004CBC  6E24               	movwf	i2___ftmul@f2,c
 10736  004CBE  0E0C               	movlw	12
 10737  004CC0  6E25               	movwf	i2___ftmul@f2+1,c
 10738  004CC2  0E42               	movlw	66
 10739  004CC4  6E26               	movwf	i2___ftmul@f2+2,c
 10740  004CC6  0E00               	movlw	0
 10741  004CC8  6E18               	movwf	i2___ftadd@f2,c
 10742  004CCA  0ED8               	movlw	216
 10743  004CCC  6E19               	movwf	i2___ftadd@f2+1,c
 10744  004CCE  0EC1               	movlw	193
 10745  004CD0  6E1A               	movwf	i2___ftadd@f2+2,c
 10746  004CD2  C0CF  F009         	movff	_reading,___lwtoft@c
 10747  004CD6  C0D0  F00A         	movff	_reading+1,___lwtoft@c+1
 10748  004CDA  EC21  F02B         	call	___lwtoft	;wreg free
 10749  004CDE  C009  F015         	movff	?___lwtoft,i2___ftadd@f1
 10750  004CE2  C00A  F016         	movff	?___lwtoft+1,i2___ftadd@f1+1
 10751  004CE6  C00B  F017         	movff	?___lwtoft+2,i2___ftadd@f1+2
 10752  004CEA  ECB6  F01C         	call	i2___ftadd	;wreg free
 10753  004CEE  C015  F021         	movff	?i2___ftadd,i2___ftmul@f1
 10754  004CF2  C016  F022         	movff	?i2___ftadd+1,i2___ftmul@f1+1
 10755  004CF6  C017  F023         	movff	?i2___ftadd+2,i2___ftmul@f1+2
 10756  004CFA  EC76  F023         	call	i2___ftmul	;wreg free
 10757  004CFE  C021  F030         	movff	?i2___ftmul,i2___ftdiv@f1
 10758  004D02  C022  F031         	movff	?i2___ftmul+1,i2___ftdiv@f1+1
 10759  004D06  C023  F032         	movff	?i2___ftmul+2,i2___ftdiv@f1+2
 10760  004D0A  0EA4               	movlw	164
 10761  004D0C  6E33               	movwf	i2___ftdiv@f2,c
 10762  004D0E  0E40               	movlw	64
 10763  004D10  6E34               	movwf	i2___ftdiv@f2+1,c
 10764  004D12  0E40               	movlw	64
 10765  004D14  6E35               	movwf	i2___ftdiv@f2+2,c
 10766  004D16  EC6A  F024         	call	i2___ftdiv	;wreg free
 10767  004D1A  C030  F0BB         	movff	?i2___ftdiv,_result
 10768  004D1E  C031  F0BC         	movff	?i2___ftdiv+1,_result+1
 10769  004D22  C032  F0BD         	movff	?i2___ftdiv+2,_result+2
 10770                           
 10771                           ;ext_int.c: 35: printf("Capacitance: %0.2f pF (Count: %u)\r\n", result, reading);
 10772  004D26  0E77               	movlw	low STR_1
 10773  004D28  6E52               	movwf	printf@f,c
 10774  004D2A  0E06               	movlw	high STR_1
 10775  004D2C  6E53               	movwf	printf@f+1,c
 10776  004D2E  C0BB  F054         	movff	_result,?_printf+2
 10777  004D32  C0BC  F055         	movff	_result+1,?_printf+3
 10778  004D36  C0BD  F056         	movff	_result+2,?_printf+4
 10779  004D3A  C0CF  F057         	movff	_reading,?_printf+5
 10780  004D3E  C0D0  F058         	movff	_reading+1,?_printf+6
 10781  004D42  EC57  F02A         	call	_printf	;wreg free
 10782                           
 10783                           ;ext_int.c: 38: TMR0_Reload();
 10784  004D46  EC99  F02B         	call	_TMR0_Reload	;wreg free
 10785                           
 10786                           ;ext_int.c: 41: TMR0_StartTimer();
 10787  004D4A  ECB2  F02B         	call	i2_TMR0_StartTimer	;wreg free
 10788                           
 10789                           ;ext_int.c: 44: (INTCONbits.INT0IF = 0);
 10790  004D4E  92F2               	bcf	intcon,1,c	;volatile
 10791  004D50  0012               	return		;funcret
 10792  004D52                     __end_of_INT0_ISR:
 10793                           	opt stack 0
 10794                           tosu	equ	0xFFF
 10795                           tosh	equ	0xFFE
 10796                           tosl	equ	0xFFD
 10797                           pclatu	equ	0xFFB
 10798                           pclath	equ	0xFFA
 10799                           tblptru	equ	0xFF8
 10800                           tblptrh	equ	0xFF7
 10801                           tblptrl	equ	0xFF6
 10802                           tablat	equ	0xFF5
 10803                           prodh	equ	0xFF4
 10804                           prodl	equ	0xFF3
 10805                           intcon	equ	0xFF2
 10806                           intcon2	equ	0xFF1
 10807                           postinc0	equ	0xFEE
 10808                           fsr0h	equ	0xFEA
 10809                           fsr0l	equ	0xFE9
 10810                           wreg	equ	0xFE8
 10811                           fsr1h	equ	0xFE2
 10812                           fsr1l	equ	0xFE1
 10813                           indf2	equ	0xFDF
 10814                           postinc2	equ	0xFDE
 10815                           postdec2	equ	0xFDD
 10816                           fsr2h	equ	0xFDA
 10817                           fsr2l	equ	0xFD9
 10818                           status	equ	0xFD8
 10819                           
 10820 ;; *************** function i2___ftdiv *****************
 10821 ;; Defined at:
 10822 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
 10823 ;; Parameters:    Size  Location     Type
 10824 ;;  f1              3   47[COMRAM] float 
 10825 ;;  f2              3   50[COMRAM] float 
 10826 ;; Auto vars:     Size  Location     Type
 10827 ;;  __ftdiv         3   57[COMRAM] float 
 10828 ;;  __ftdiv         1   61[COMRAM] unsigned char 
 10829 ;;  __ftdiv         1   60[COMRAM] unsigned char 
 10830 ;;  __ftdiv         1   56[COMRAM] unsigned char 
 10831 ;; Return value:  Size  Location     Type
 10832 ;;                  3   47[COMRAM] float 
 10833 ;; Registers used:
 10834 ;;		wreg, status,2, status,0, cstack
 10835 ;; Tracked objects:
 10836 ;;		On entry : 0/0
 10837 ;;		On exit  : 0/0
 10838 ;;		Unchanged: 0/0
 10839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10840 ;;      Params:         6       0       0       0       0       0       0
 10841 ;;      Locals:         6       0       0       0       0       0       0
 10842 ;;      Temps:          3       0       0       0       0       0       0
 10843 ;;      Totals:        15       0       0       0       0       0       0
 10844 ;;Total ram usage:       15 bytes
 10845 ;; Hardware stack levels used:    1
 10846 ;; Hardware stack levels required when called:    1
 10847 ;; This function calls:
 10848 ;;		i2___ftpack
 10849 ;; This function is called by:
 10850 ;;		_INT0_ISR
 10851 ;; This function uses a non-reentrant model
 10852 ;;
 10853                           
 10854                           	psect	text44
 10855  0048D4                     __ptext44:
 10856                           	opt stack 0
 10857  0048D4                     i2___ftdiv:
 10858                           	opt stack 22
 10859                           
 10860                           ;incstack = 0
 10861  0048D4  C032  F036         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 10862  0048D8  6A37               	clrf	(??i2___ftdiv+1)& (0+255),c
 10863  0048DA  6A38               	clrf	(??i2___ftdiv+2)& (0+255),c
 10864  0048DC  3431               	rlcf	i2___ftdiv@f1+1,w,c
 10865  0048DE  3636               	rlcf	??i2___ftdiv& (0+255),f,c
 10866  0048E0  E301               	bnc	u757_41
 10867  0048E2  8037               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 10868  0048E4                     u757_41:
 10869  0048E4  5036               	movf	??i2___ftdiv,w,c
 10870  0048E6  6E3D               	movwf	i2___ftdiv@exp,c
 10871  0048E8  503D               	movf	i2___ftdiv@exp,w,c
 10872  0048EA  A4D8               	btfss	status,2,c
 10873  0048EC  D007               	goto	i2l5480
 10874  0048EE  0E00               	movlw	0
 10875  0048F0  6E30               	movwf	?i2___ftdiv,c
 10876  0048F2  0E00               	movlw	0
 10877  0048F4  6E31               	movwf	?i2___ftdiv+1,c
 10878  0048F6  0E00               	movlw	0
 10879  0048F8  6E32               	movwf	?i2___ftdiv+2,c
 10880  0048FA  0012               	return	
 10881  0048FC                     i2l5480:
 10882  0048FC  C035  F036         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 10883  004900  6A37               	clrf	(??i2___ftdiv+1)& (0+255),c
 10884  004902  6A38               	clrf	(??i2___ftdiv+2)& (0+255),c
 10885  004904  3434               	rlcf	i2___ftdiv@f2+1,w,c
 10886  004906  3636               	rlcf	??i2___ftdiv& (0+255),f,c
 10887  004908  E301               	bnc	u759_41
 10888  00490A  8037               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 10889  00490C                     u759_41:
 10890  00490C  5036               	movf	??i2___ftdiv,w,c
 10891  00490E  6E3E               	movwf	i2___ftdiv@sign,c
 10892  004910  503E               	movf	i2___ftdiv@sign,w,c
 10893  004912  A4D8               	btfss	status,2,c
 10894  004914  D007               	goto	i2l5486
 10895  004916  0E00               	movlw	0
 10896  004918  6E30               	movwf	?i2___ftdiv,c
 10897  00491A  0E00               	movlw	0
 10898  00491C  6E31               	movwf	?i2___ftdiv+1,c
 10899  00491E  0E00               	movlw	0
 10900  004920  6E32               	movwf	?i2___ftdiv+2,c
 10901  004922  0012               	return	
 10902  004924                     i2l5486:
 10903  004924  0E00               	movlw	0
 10904  004926  6E3A               	movwf	i2___ftdiv@f3,c
 10905  004928  0E00               	movlw	0
 10906  00492A  6E3B               	movwf	i2___ftdiv@f3+1,c
 10907  00492C  0E00               	movlw	0
 10908  00492E  6E3C               	movwf	i2___ftdiv@f3+2,c
 10909  004930  503E               	movf	i2___ftdiv@sign,w,c
 10910  004932  0F89               	addlw	137
 10911  004934  5E3D               	subwf	i2___ftdiv@exp,f,c
 10912  004936  C032  F03E         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 10913  00493A  5035               	movf	i2___ftdiv@f2+2,w,c
 10914  00493C  1A3E               	xorwf	i2___ftdiv@sign,f,c
 10915  00493E  0E80               	movlw	128
 10916  004940  163E               	andwf	i2___ftdiv@sign,f,c
 10917  004942  8E31               	bsf	i2___ftdiv@f1+1,7,c
 10918  004944  0EFF               	movlw	255
 10919  004946  1630               	andwf	i2___ftdiv@f1,f,c
 10920  004948  0EFF               	movlw	255
 10921  00494A  1631               	andwf	i2___ftdiv@f1+1,f,c
 10922  00494C  0E00               	movlw	0
 10923  00494E  1632               	andwf	i2___ftdiv@f1+2,f,c
 10924  004950  8E34               	bsf	i2___ftdiv@f2+1,7,c
 10925  004952  0EFF               	movlw	255
 10926  004954  1633               	andwf	i2___ftdiv@f2,f,c
 10927  004956  0EFF               	movlw	255
 10928  004958  1634               	andwf	i2___ftdiv@f2+1,f,c
 10929  00495A  0E00               	movlw	0
 10930  00495C  1635               	andwf	i2___ftdiv@f2+2,f,c
 10931  00495E  0E18               	movlw	24
 10932  004960  6E39               	movwf	i2___ftdiv@cntr,c
 10933  004962                     i2l5506:
 10934  004962  90D8               	bcf	status,0,c
 10935  004964  363A               	rlcf	i2___ftdiv@f3,f,c
 10936  004966  363B               	rlcf	i2___ftdiv@f3+1,f,c
 10937  004968  363C               	rlcf	i2___ftdiv@f3+2,f,c
 10938  00496A  5033               	movf	i2___ftdiv@f2,w,c
 10939  00496C  5C30               	subwf	i2___ftdiv@f1,w,c
 10940  00496E  5034               	movf	i2___ftdiv@f2+1,w,c
 10941  004970  5831               	subwfb	i2___ftdiv@f1+1,w,c
 10942  004972  5035               	movf	i2___ftdiv@f2+2,w,c
 10943  004974  5832               	subwfb	i2___ftdiv@f1+2,w,c
 10944  004976  A0D8               	btfss	status,0,c
 10945  004978  D007               	goto	i2l763
 10946  00497A  5033               	movf	i2___ftdiv@f2,w,c
 10947  00497C  5E30               	subwf	i2___ftdiv@f1,f,c
 10948  00497E  5034               	movf	i2___ftdiv@f2+1,w,c
 10949  004980  5A31               	subwfb	i2___ftdiv@f1+1,f,c
 10950  004982  5035               	movf	i2___ftdiv@f2+2,w,c
 10951  004984  5A32               	subwfb	i2___ftdiv@f1+2,f,c
 10952  004986  803A               	bsf	i2___ftdiv@f3,0,c
 10953  004988                     i2l763:
 10954  004988  90D8               	bcf	status,0,c
 10955  00498A  3630               	rlcf	i2___ftdiv@f1,f,c
 10956  00498C  3631               	rlcf	i2___ftdiv@f1+1,f,c
 10957  00498E  3632               	rlcf	i2___ftdiv@f1+2,f,c
 10958  004990  2E39               	decfsz	i2___ftdiv@cntr,f,c
 10959  004992  D7E7               	goto	i2l5506
 10960  004994  C03A  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 10961  004998  C03B  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 10962  00499C  C03C  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 10963  0049A0  C03D  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 10964  0049A4  C03E  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 10965  0049A8  ECFE  F025         	call	i2___ftpack	;wreg free
 10966  0049AC  C001  F030         	movff	?i2___ftpack,?i2___ftdiv
 10967  0049B0  C002  F031         	movff	?i2___ftpack+1,?i2___ftdiv+1
 10968  0049B4  C003  F032         	movff	?i2___ftpack+2,?i2___ftdiv+2
 10969  0049B8  0012               	return	
 10970  0049BA                     __end_ofi2___ftdiv:
 10971                           	opt stack 0
 10972                           tosu	equ	0xFFF
 10973                           tosh	equ	0xFFE
 10974                           tosl	equ	0xFFD
 10975                           pclatu	equ	0xFFB
 10976                           pclath	equ	0xFFA
 10977                           tblptru	equ	0xFF8
 10978                           tblptrh	equ	0xFF7
 10979                           tblptrl	equ	0xFF6
 10980                           tablat	equ	0xFF5
 10981                           prodh	equ	0xFF4
 10982                           prodl	equ	0xFF3
 10983                           intcon	equ	0xFF2
 10984                           intcon2	equ	0xFF1
 10985                           postinc0	equ	0xFEE
 10986                           fsr0h	equ	0xFEA
 10987                           fsr0l	equ	0xFE9
 10988                           wreg	equ	0xFE8
 10989                           fsr1h	equ	0xFE2
 10990                           fsr1l	equ	0xFE1
 10991                           indf2	equ	0xFDF
 10992                           postinc2	equ	0xFDE
 10993                           postdec2	equ	0xFDD
 10994                           fsr2h	equ	0xFDA
 10995                           fsr2l	equ	0xFD9
 10996                           status	equ	0xFD8
 10997                           
 10998 ;; *************** function i2_TMR0_StartTimer *****************
 10999 ;; Defined at:
 11000 ;;		line 43 in file "mcc_generated_files/tmr0.c"
 11001 ;; Parameters:    Size  Location     Type
 11002 ;;		None
 11003 ;; Auto vars:     Size  Location     Type
 11004 ;;		None
 11005 ;; Return value:  Size  Location     Type
 11006 ;;                  1    wreg      void 
 11007 ;; Registers used:
 11008 ;;		None
 11009 ;; Tracked objects:
 11010 ;;		On entry : 0/0
 11011 ;;		On exit  : 0/0
 11012 ;;		Unchanged: 0/0
 11013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11014 ;;      Params:         0       0       0       0       0       0       0
 11015 ;;      Locals:         0       0       0       0       0       0       0
 11016 ;;      Temps:          0       0       0       0       0       0       0
 11017 ;;      Totals:         0       0       0       0       0       0       0
 11018 ;;Total ram usage:        0 bytes
 11019 ;; Hardware stack levels used:    1
 11020 ;; This function calls:
 11021 ;;		Nothing
 11022 ;; This function is called by:
 11023 ;;		_INT0_ISR
 11024 ;; This function uses a non-reentrant model
 11025 ;;
 11026                           
 11027                           	psect	text45
 11028  005764                     __ptext45:
 11029                           	opt stack 0
 11030  005764                     i2_TMR0_StartTimer:
 11031                           	opt stack 23
 11032                           
 11033                           ;tmr0.c: 46: T0CONbits.TMR0ON = 1;
 11034                           
 11035                           ;incstack = 0
 11036  005764  8ED5               	bsf	4053,7,c	;volatile
 11037  005766  0012               	return		;funcret
 11038  005768                     __end_ofi2_TMR0_StartTimer:
 11039                           	opt stack 0
 11040                           tosu	equ	0xFFF
 11041                           tosh	equ	0xFFE
 11042                           tosl	equ	0xFFD
 11043                           pclatu	equ	0xFFB
 11044                           pclath	equ	0xFFA
 11045                           tblptru	equ	0xFF8
 11046                           tblptrh	equ	0xFF7
 11047                           tblptrl	equ	0xFF6
 11048                           tablat	equ	0xFF5
 11049                           prodh	equ	0xFF4
 11050                           prodl	equ	0xFF3
 11051                           intcon	equ	0xFF2
 11052                           intcon2	equ	0xFF1
 11053                           postinc0	equ	0xFEE
 11054                           fsr0h	equ	0xFEA
 11055                           fsr0l	equ	0xFE9
 11056                           wreg	equ	0xFE8
 11057                           fsr1h	equ	0xFE2
 11058                           fsr1l	equ	0xFE1
 11059                           indf2	equ	0xFDF
 11060                           postinc2	equ	0xFDE
 11061                           postdec2	equ	0xFDD
 11062                           fsr2h	equ	0xFDA
 11063                           fsr2l	equ	0xFD9
 11064                           status	equ	0xFD8
 11065                           
 11066 ;; *************** function _printf *****************
 11067 ;; Defined at:
 11068 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\printf.c"
 11069 ;; Parameters:    Size  Location     Type
 11070 ;;  f               2   81[COMRAM] PTR const unsigned char 
 11071 ;;		 -> STR_1(36), 
 11072 ;; Auto vars:     Size  Location     Type
 11073 ;;  pb              4   90[COMRAM] struct __prbuf
 11074 ;;  ap              2   88[COMRAM] PTR void [1]
 11075 ;;		 -> ?_sprintf(2), ?_printf(2), 
 11076 ;; Return value:  Size  Location     Type
 11077 ;;                  2   81[COMRAM] int 
 11078 ;; Registers used:
 11079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11080 ;; Tracked objects:
 11081 ;;		On entry : 0/0
 11082 ;;		On exit  : 0/0
 11083 ;;		Unchanged: 0/0
 11084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11085 ;;      Params:         7       0       0       0       0       0       0
 11086 ;;      Locals:         6       0       0       0       0       0       0
 11087 ;;      Temps:          0       0       0       0       0       0       0
 11088 ;;      Totals:        13       0       0       0       0       0       0
 11089 ;;Total ram usage:       13 bytes
 11090 ;; Hardware stack levels used:    1
 11091 ;; Hardware stack levels required when called:    4
 11092 ;; This function calls:
 11093 ;;		i2__doprnt
 11094 ;; This function is called by:
 11095 ;;		_INT0_ISR
 11096 ;; This function uses a non-reentrant model
 11097 ;;
 11098                           
 11099                           	psect	text46
 11100  0054AE                     __ptext46:
 11101                           	opt stack 0
 11102  0054AE                     _printf:
 11103                           	opt stack 19
 11104                           
 11105                           ;incstack = 0
 11106  0054AE  0E00               	movlw	0
 11107  0054B0  6E5B               	movwf	printf@pb,c
 11108  0054B2  0E00               	movlw	0
 11109  0054B4  6E5C               	movwf	printf@pb+1,c
 11110  0054B6  0E52               	movlw	low i2_putch
 11111  0054B8  6E5D               	movwf	printf@pb+2,c
 11112  0054BA  0E57               	movlw	high i2_putch
 11113  0054BC  6E5E               	movwf	printf@pb+3,c
 11114  0054BE  0E54               	movlw	low (?_printf+2)
 11115  0054C0  6E59               	movwf	printf@ap,c
 11116  0054C2  0E00               	movlw	high (?_printf+2)
 11117  0054C4  6E5A               	movwf	printf@ap+1,c
 11118                           
 11119                           ;	Return value of _printf is never used
 11120  0054C6  0E5B               	movlw	low printf@pb
 11121  0054C8  6E46               	movwf	i2__doprnt@pb,c
 11122  0054CA  0E00               	movlw	high printf@pb
 11123  0054CC  6E47               	movwf	i2__doprnt@pb+1,c
 11124  0054CE  C052  F048         	movff	printf@f,i2__doprnt@f
 11125  0054D2  C053  F049         	movff	printf@f+1,i2__doprnt@f+1
 11126  0054D6  0E59               	movlw	low printf@ap
 11127  0054D8  6E4A               	movwf	i2__doprnt@ap,c
 11128  0054DA  0E00               	movlw	high printf@ap
 11129  0054DC  6E4B               	movwf	i2__doprnt@ap+1,c
 11130  0054DE  EC4C  F00C         	call	i2__doprnt	;wreg free
 11131  0054E2  0012               	return	
 11132  0054E4                     __end_of_printf:
 11133                           	opt stack 0
 11134                           tosu	equ	0xFFF
 11135                           tosh	equ	0xFFE
 11136                           tosl	equ	0xFFD
 11137                           pclatu	equ	0xFFB
 11138                           pclath	equ	0xFFA
 11139                           tblptru	equ	0xFF8
 11140                           tblptrh	equ	0xFF7
 11141                           tblptrl	equ	0xFF6
 11142                           tablat	equ	0xFF5
 11143                           prodh	equ	0xFF4
 11144                           prodl	equ	0xFF3
 11145                           intcon	equ	0xFF2
 11146                           intcon2	equ	0xFF1
 11147                           postinc0	equ	0xFEE
 11148                           fsr0h	equ	0xFEA
 11149                           fsr0l	equ	0xFE9
 11150                           wreg	equ	0xFE8
 11151                           fsr1h	equ	0xFE2
 11152                           fsr1l	equ	0xFE1
 11153                           indf2	equ	0xFDF
 11154                           postinc2	equ	0xFDE
 11155                           postdec2	equ	0xFDD
 11156                           fsr2h	equ	0xFDA
 11157                           fsr2l	equ	0xFD9
 11158                           status	equ	0xFD8
 11159                           
 11160 ;; *************** function i2__doprnt *****************
 11161 ;; Defined at:
 11162 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 11163 ;; Parameters:    Size  Location     Type
 11164 ;;  pb              2   69[COMRAM] PTR struct __prbuf
 11165 ;;		 -> sprintf@pb(4), printf@pb(4), 
 11166 ;;  f               2   71[COMRAM] PTR const unsigned char 
 11167 ;;		 -> STR_5(11), STR_4(11), STR_3(11), STR_2(11), 
 11168 ;;		 -> STR_1(36), 
 11169 ;;  ap              2   73[COMRAM] PTR PTR void 
 11170 ;;		 -> sprintf@ap(2), printf@ap(2), 
 11171 ;; Auto vars:     Size  Location     Type
 11172 ;;  _doprnt         4    9[BANK0 ] struct .
 11173 ;;  _doprnt         4    3[BANK0 ] unsigned long 
 11174 ;;  _doprnt         3   13[BANK0 ] unsigned long 
 11175 ;;  _doprnt         3    0        PTR const unsigned char 
 11176 ;;  _doprnt         2   20[BANK0 ] int 
 11177 ;;  _doprnt         2   18[BANK0 ] int 
 11178 ;;  _doprnt         2   16[BANK0 ] unsigned short 
 11179 ;;  _doprnt         2    7[BANK0 ] int 
 11180 ;;  _doprnt         2    0        unsigned int 
 11181 ;;  _doprnt         1   22[BANK0 ] char 
 11182 ;;  _doprnt         1    0        unsigned char 
 11183 ;; Return value:  Size  Location     Type
 11184 ;;                  2   69[COMRAM] int 
 11185 ;; Registers used:
 11186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11187 ;; Tracked objects:
 11188 ;;		On entry : 0/0
 11189 ;;		On exit  : 0/0
 11190 ;;		Unchanged: 0/0
 11191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11192 ;;      Params:         6       0       0       0       0       0       0
 11193 ;;      Locals:         0      23       0       0       0       0       0
 11194 ;;      Temps:          6       0       0       0       0       0       0
 11195 ;;      Totals:        12      23       0       0       0       0       0
 11196 ;;Total ram usage:       35 bytes
 11197 ;; Hardware stack levels used:    1
 11198 ;; Hardware stack levels required when called:    3
 11199 ;; This function calls:
 11200 ;;		Absolute function
 11201 ;;		i2___awdiv
 11202 ;;		i2___ftadd
 11203 ;;		i2___ftge
 11204 ;;		i2___ftmul
 11205 ;;		i2___ftneg
 11206 ;;		i2___ftsub
 11207 ;;		i2___fttol
 11208 ;;		i2___lldiv
 11209 ;;		i2___llmod
 11210 ;;		i2___lltoft
 11211 ;;		i2___wmul
 11212 ;;		i2__div_to_l_
 11213 ;;		i2__tdiv_to_l_
 11214 ;;		i2_fround
 11215 ;;		i2_isdigit
 11216 ;;		i2_putch
 11217 ;;		i2_scale
 11218 ;; This function is called by:
 11219 ;;		_printf
 11220 ;; This function uses a non-reentrant model
 11221 ;;
 11222                           
 11223                           	psect	text47
 11224  001898                     __ptext47:
 11225                           	opt stack 0
 11226  001898                     i2__doprnt:
 11227                           	opt stack 19
 11228                           
 11229                           ;doprnt.c: 499: signed char c;
 11230                           ;doprnt.c: 501: int width;
 11231                           ;doprnt.c: 504: int prec;
 11232                           ;doprnt.c: 508: unsigned short flag;
 11233                           ;doprnt.c: 515: char d;
 11234                           ;doprnt.c: 516: double fval;
 11235                           ;doprnt.c: 517: int exp;
 11236                           ;doprnt.c: 523: union {
 11237                           ;doprnt.c: 524: unsigned long vd;
 11238                           ;doprnt.c: 525: double integ;
 11239                           ;doprnt.c: 526: } tmpval;
 11240                           ;doprnt.c: 528: unsigned long val;
 11241                           ;doprnt.c: 529: unsigned len;
 11242                           ;doprnt.c: 530: const char * cp;
 11243                           ;doprnt.c: 536: while(c = *f++) {
 11244                           
 11245                           ;incstack = 0
 11246  001898  EFA7  F014         	goto	i2l8960
 11247  00189C                     i2l8584:
 11248                           
 11249                           ;doprnt.c: 538: if(c != '%')
 11250  00189C  0E25               	movlw	37
 11251  00189E  0100               	movlb	0	; () banked
 11252  0018A0  1976               	xorwf	i2__doprnt@c& (0+255),w,b
 11253  0018A2  B4D8               	btfsc	status,2,c
 11254  0018A4  D036               	goto	i2l8594
 11255                           
 11256                           ; BSR set to: 0
 11257                           ;doprnt.c: 540: {
 11258                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 11259  0018A6  EE20 F002          	lfsr	2,2
 11260  0018AA  5046               	movf	i2__doprnt@pb,w,c
 11261  0018AC  26D9               	addwf	fsr2l,f,c
 11262  0018AE  5047               	movf	i2__doprnt@pb+1,w,c
 11263  0018B0  22DA               	addwfc	fsr2h,f,c
 11264  0018B2  50DE               	movf	postinc2,w,c
 11265  0018B4  10DE               	iorwf	postinc2,w,c
 11266  0018B6  B4D8               	btfsc	status,2,c
 11267  0018B8  D015               	goto	i2l8590
 11268                           
 11269                           ; BSR set to: 0
 11270  0018BA  EE20 F002          	lfsr	2,2
 11271  0018BE  5046               	movf	i2__doprnt@pb,w,c
 11272  0018C0  26D9               	addwf	fsr2l,f,c
 11273  0018C2  5047               	movf	i2__doprnt@pb+1,w,c
 11274  0018C4  22DA               	addwfc	fsr2h,f,c
 11275  0018C6  D802               	call	i2u1395_48
 11276  0018C8  EFA7  F014         	goto	i2l8960
 11277  0018CC                     i2u1395_48:
 11278  0018CC  0005               	push	
 11279  0018CE  6EFA               	movwf	pclath,c
 11280  0018D0  50DE               	movf	postinc2,w,c
 11281  0018D2  6EFD               	movwf	tosl,c
 11282  0018D4  50DE               	movf	postinc2,w,c
 11283  0018D6  6EFE               	movwf	tosh,c
 11284  0018D8  50F8               	movf	tblptru,w,c
 11285  0018DA  6EFF               	movwf	tosu,c
 11286  0018DC  50FA               	movf	pclath,w,c
 11287  0018DE  0100               	movlb	0	; () banked
 11288  0018E0  5176               	movf	i2__doprnt@c& (0+255),w,b
 11289  0018E2  0012               	return		;indir
 11290  0018E4                     i2l8590:
 11291  0018E4  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 11292  0018E8  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 11293  0018EC  CFDE F04C          	movff	postinc2,??i2__doprnt
 11294  0018F0  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 11295  0018F4  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 11296  0018F8  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 11297  0018FC  C076  FFDF         	movff	i2__doprnt@c,indf2
 11298  001900  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 11299  001904  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 11300  001908  2ADE               	incf	postinc2,f,c
 11301  00190A  0E00               	movlw	0
 11302  00190C  22DD               	addwfc	postdec2,f,c
 11303                           
 11304                           ;doprnt.c: 542: continue;
 11305  00190E  EFA7  F014         	goto	i2l8960
 11306  001912                     i2l8594:
 11307                           
 11308                           ;doprnt.c: 543: }
 11309                           ;doprnt.c: 546: width = 0;
 11310  001912  0E00               	movlw	0
 11311  001914  0100               	movlb	0	; () banked
 11312  001916  6F73               	movwf	(i2__doprnt@width+1)& (0+255),b
 11313  001918  0E00               	movlw	0
 11314  00191A  6F72               	movwf	i2__doprnt@width& (0+255),b
 11315                           
 11316                           ;doprnt.c: 548: flag = 0;
 11317  00191C  0E00               	movlw	0
 11318  00191E  0100               	movlb	0	; () banked
 11319  001920  6F71               	movwf	(i2__doprnt@flag+1)& (0+255),b
 11320  001922  0E00               	movlw	0
 11321  001924  6F70               	movwf	i2__doprnt@flag& (0+255),b
 11322                           
 11323                           ; BSR set to: 0
 11324                           ;doprnt.c: 551: switch(*f) {
 11325                           
 11326                           ;doprnt.c: 550: for(;;) {
 11327  001926  D004               	goto	i2l8600
 11328  001928                     i2l8596:
 11329                           
 11330                           ;doprnt.c: 580: flag |= 0x04;
 11331  001928  0100               	movlb	0	; () banked
 11332  00192A  8570               	bsf	i2__doprnt@flag& (0+255),2,b
 11333                           
 11334                           ;doprnt.c: 581: f++;
 11335  00192C  4A48               	infsnz	i2__doprnt@f,f,c
 11336  00192E  2A49               	incf	i2__doprnt@f+1,f,c
 11337  001930                     i2l8600:
 11338  001930  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 11339  001934  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 11340  001938                     	if	0	;tblptru may be non-zero
 11341  001938                     	endif
 11342  001938                     	if	0	;tblptru may be non-zero
 11343  001938                     	endif
 11344  001938  0008               	tblrd		*
 11345  00193A  50F5               	movf	tablat,w,c
 11346                           
 11347                           ; Switch size 1, requested type "space"
 11348                           ; Number of cases is 1, Range of values is 48 to 48
 11349                           ; switch strategies available:
 11350                           ; Name         Instructions Cycles
 11351                           ; simple_byte            4     3 (average)
 11352                           ;	Chosen strategy is simple_byte
 11353  00193C  0A30               	xorlw	48	; case 48
 11354  00193E  B4D8               	btfsc	status,2,c
 11355  001940  D7F3               	goto	i2l8596
 11356                           
 11357                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 11358                           
 11359                           ;doprnt.c: 586: }
 11360                           
 11361                           ;doprnt.c: 585: break;
 11362  001942  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 11363  001946  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 11364  00194A                     	if	0	;tblptru may be non-zero
 11365  00194A                     	endif
 11366  00194A                     	if	0	;tblptru may be non-zero
 11367  00194A                     	endif
 11368  00194A  0008               	tblrd		*
 11369  00194C  50F5               	movf	tablat,w,c
 11370  00194E  EC33  F02B         	call	i2_isdigit
 11371  001952  A0D8               	btfss	status,0,c
 11372  001954  D035               	goto	i2l8614
 11373                           
 11374                           ;doprnt.c: 598: width = 0;
 11375  001956  0E00               	movlw	0
 11376  001958  0100               	movlb	0	; () banked
 11377  00195A  6F73               	movwf	(i2__doprnt@width+1)& (0+255),b
 11378  00195C  0E00               	movlw	0
 11379  00195E  6F72               	movwf	i2__doprnt@width& (0+255),b
 11380  001960                     i2l8606:
 11381                           
 11382                           ;doprnt.c: 600: width *= 10;
 11383  001960  C072  F00F         	movff	i2__doprnt@width,i2___wmul@multiplier
 11384  001964  C073  F010         	movff	i2__doprnt@width+1,i2___wmul@multiplier+1
 11385  001968  0E00               	movlw	0
 11386  00196A  6E12               	movwf	i2___wmul@multiplicand+1,c
 11387  00196C  0E0A               	movlw	10
 11388  00196E  6E11               	movwf	i2___wmul@multiplicand,c
 11389  001970  ECFC  F02A         	call	i2___wmul	;wreg free
 11390  001974  C00F  F072         	movff	?i2___wmul,i2__doprnt@width
 11391  001978  C010  F073         	movff	?i2___wmul+1,i2__doprnt@width+1
 11392                           
 11393                           ;doprnt.c: 601: width += *f++ - '0';
 11394  00197C  0ED0               	movlw	208
 11395  00197E  6E4C               	movwf	??i2__doprnt& (0+255),c
 11396  001980  0EFF               	movlw	255
 11397  001982  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 11398  001984  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 11399  001988  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 11400  00198C                     	if	0	;tblptru may be non-zero
 11401  00198C                     	endif
 11402  00198C                     	if	0	;tblptru may be non-zero
 11403  00198C                     	endif
 11404  00198C  0008               	tblrd		*
 11405  00198E  50F5               	movf	tablat,w,c
 11406  001990  6E4E               	movwf	(??i2__doprnt+2)& (0+255),c
 11407  001992  6A4F               	clrf	(??i2__doprnt+3)& (0+255),c
 11408  001994  504C               	movf	??i2__doprnt,w,c
 11409  001996  264E               	addwf	??i2__doprnt+2,f,c
 11410  001998  504D               	movf	??i2__doprnt+1,w,c
 11411  00199A  224F               	addwfc	??i2__doprnt+3,f,c
 11412  00199C  504E               	movf	??i2__doprnt+2,w,c
 11413  00199E  0100               	movlb	0	; () banked
 11414  0019A0  2772               	addwf	i2__doprnt@width& (0+255),f,b
 11415  0019A2  504F               	movf	??i2__doprnt+3,w,c
 11416  0019A4  0100               	movlb	0	; () banked
 11417  0019A6  2373               	addwfc	(i2__doprnt@width+1)& (0+255),f,b
 11418                           
 11419                           ; BSR set to: 0
 11420  0019A8  4A48               	infsnz	i2__doprnt@f,f,c
 11421  0019AA  2A49               	incf	i2__doprnt@f+1,f,c
 11422                           
 11423                           ; BSR set to: 0
 11424                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 11425  0019AC  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 11426  0019B0  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 11427  0019B4                     	if	0	;tblptru may be non-zero
 11428  0019B4                     	endif
 11429  0019B4                     	if	0	;tblptru may be non-zero
 11430  0019B4                     	endif
 11431  0019B4  0008               	tblrd		*
 11432  0019B6  50F5               	movf	tablat,w,c
 11433  0019B8  EC33  F02B         	call	i2_isdigit
 11434  0019BC  B0D8               	btfsc	status,0,c
 11435  0019BE  D7D0               	goto	i2l8606
 11436  0019C0                     i2l8614:
 11437                           
 11438                           ;doprnt.c: 608: }
 11439                           ;doprnt.c: 611: if(*f == '.') {
 11440  0019C0  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 11441  0019C4  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 11442  0019C8                     	if	0	;tblptru may be non-zero
 11443  0019C8                     	endif
 11444  0019C8                     	if	0	;tblptru may be non-zero
 11445  0019C8                     	endif
 11446  0019C8  0008               	tblrd		*
 11447  0019CA  50F5               	movf	tablat,w,c
 11448  0019CC  0A2E               	xorlw	46
 11449  0019CE  A4D8               	btfss	status,2,c
 11450  0019D0  D032               	goto	i2l8626
 11451                           
 11452                           ;doprnt.c: 612: flag |= 0x4000;
 11453  0019D2  0100               	movlb	0	; () banked
 11454  0019D4  8D71               	bsf	(i2__doprnt@flag+1)& (0+255),6,b
 11455                           
 11456                           ;doprnt.c: 613: f++;
 11457  0019D6  4A48               	infsnz	i2__doprnt@f,f,c
 11458  0019D8  2A49               	incf	i2__doprnt@f+1,f,c
 11459                           
 11460                           ; BSR set to: 0
 11461                           ;doprnt.c: 620: {
 11462                           ;doprnt.c: 621: prec = 0;
 11463  0019DA  0E00               	movlw	0
 11464  0019DC  0100               	movlb	0	; () banked
 11465  0019DE  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 11466  0019E0  0E00               	movlw	0
 11467  0019E2  6F74               	movwf	i2__doprnt@prec& (0+255),b
 11468                           
 11469                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 11470  0019E4  D01D               	goto	i2l8624
 11471  0019E6                     i2l8620:
 11472                           
 11473                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 11474  0019E6  C074  F00F         	movff	i2__doprnt@prec,i2___wmul@multiplier
 11475  0019EA  C075  F010         	movff	i2__doprnt@prec+1,i2___wmul@multiplier+1
 11476  0019EE  0E00               	movlw	0
 11477  0019F0  6E12               	movwf	i2___wmul@multiplicand+1,c
 11478  0019F2  0E0A               	movlw	10
 11479  0019F4  6E11               	movwf	i2___wmul@multiplicand,c
 11480  0019F6  ECFC  F02A         	call	i2___wmul	;wreg free
 11481  0019FA  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 11482  0019FE  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 11483  001A02                     	if	0	;tblptru may be non-zero
 11484  001A02                     	endif
 11485  001A02                     	if	0	;tblptru may be non-zero
 11486  001A02                     	endif
 11487  001A02  0008               	tblrd		*
 11488  001A04  50F5               	movf	tablat,w,c
 11489  001A06  260F               	addwf	?i2___wmul,f,c
 11490  001A08  0E00               	movlw	0
 11491  001A0A  2210               	addwfc	?i2___wmul+1,f,c
 11492  001A0C  0ED0               	movlw	208
 11493  001A0E  240F               	addwf	?i2___wmul,w,c
 11494  001A10  0100               	movlb	0	; () banked
 11495  001A12  6F74               	movwf	i2__doprnt@prec& (0+255),b
 11496  001A14  0EFF               	movlw	255
 11497  001A16  2010               	addwfc	?i2___wmul+1,w,c
 11498  001A18  0100               	movlb	0	; () banked
 11499  001A1A  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 11500                           
 11501                           ; BSR set to: 0
 11502  001A1C  4A48               	infsnz	i2__doprnt@f,f,c
 11503  001A1E  2A49               	incf	i2__doprnt@f+1,f,c
 11504  001A20                     i2l8624:
 11505                           
 11506                           ; BSR set to: 0
 11507  001A20  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 11508  001A24  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 11509  001A28                     	if	0	;tblptru may be non-zero
 11510  001A28                     	endif
 11511  001A28                     	if	0	;tblptru may be non-zero
 11512  001A28                     	endif
 11513  001A28  0008               	tblrd		*
 11514  001A2A  50F5               	movf	tablat,w,c
 11515  001A2C  EC33  F02B         	call	i2_isdigit
 11516  001A30  A0D8               	btfss	status,0,c
 11517  001A32  D013               	goto	i2l8638
 11518  001A34  D7D8               	goto	i2l8620
 11519  001A36                     i2l8626:
 11520                           
 11521                           ;doprnt.c: 626: prec = 0;
 11522  001A36  0E00               	movlw	0
 11523  001A38  0100               	movlb	0	; () banked
 11524  001A3A  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 11525  001A3C  0E00               	movlw	0
 11526  001A3E  6F74               	movwf	i2__doprnt@prec& (0+255),b
 11527                           
 11528                           ; BSR set to: 0
 11529                           ;doprnt.c: 628: flag |= 0x1000;
 11530  001A40  0100               	movlb	0	; () banked
 11531  001A42  8971               	bsf	(i2__doprnt@flag+1)& (0+255),4,b
 11532                           
 11533                           ; BSR set to: 0
 11534                           ;doprnt.c: 635: switch(c = *f++) {
 11535                           
 11536                           ;doprnt.c: 630: }
 11537                           ;doprnt.c: 633: loop:
 11538                           
 11539                           ; BSR set to: 0
 11540  001A44  D00A               	goto	i2l8638
 11541  001A46                     i2l8630:
 11542                           
 11543                           ; BSR set to: 0
 11544                           ;doprnt.c: 643: flag |= 0x10;
 11545  001A46  0100               	movlb	0	; () banked
 11546  001A48  8970               	bsf	i2__doprnt@flag& (0+255),4,b
 11547                           
 11548                           ;doprnt.c: 644: goto loop;
 11549  001A4A  D007               	goto	i2l8638
 11550  001A4C                     i2l8632:
 11551                           
 11552                           ; BSR set to: 0
 11553                           ;doprnt.c: 663: flag |= 0x400;
 11554  001A4C  0100               	movlb	0	; () banked
 11555  001A4E  8571               	bsf	(i2__doprnt@flag+1)& (0+255),2,b
 11556                           
 11557                           ;doprnt.c: 664: break;
 11558  001A50  D01E               	goto	i2l8640
 11559  001A52                     i2l8634:
 11560                           
 11561                           ; BSR set to: 0
 11562                           ;doprnt.c: 818: flag |= 0xC0;
 11563  001A52  0EC0               	movlw	192
 11564  001A54  0100               	movlb	0	; () banked
 11565  001A56  1370               	iorwf	i2__doprnt@flag& (0+255),f,b
 11566                           
 11567                           ; BSR set to: 0
 11568                           ;doprnt.c: 822: }
 11569                           
 11570                           ;doprnt.c: 819: break;
 11571  001A58  D01A               	goto	i2l8640
 11572  001A5A                     i2l8638:
 11573  001A5A  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 11574  001A5E  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 11575  001A62  4A48               	infsnz	i2__doprnt@f,f,c
 11576  001A64  2A49               	incf	i2__doprnt@f+1,f,c
 11577  001A66                     	if	0	;tblptru may be non-zero
 11578  001A66                     	endif
 11579  001A66                     	if	0	;tblptru may be non-zero
 11580  001A66                     	endif
 11581  001A66  0008               	tblrd		*
 11582  001A68  CFF5 F076          	movff	tablat,i2__doprnt@c
 11583  001A6C  0100               	movlb	0	; () banked
 11584  001A6E  5176               	movf	i2__doprnt@c& (0+255),w,b
 11585                           
 11586                           ; Switch size 1, requested type "space"
 11587                           ; Number of cases is 4, Range of values is 0 to 117
 11588                           ; switch strategies available:
 11589                           ; Name         Instructions Cycles
 11590                           ; simple_byte           13     7 (average)
 11591                           ;	Chosen strategy is simple_byte
 11592  001A70  0A00               	xorlw	0	; case 0
 11593  001A72  B4D8               	btfsc	status,2,c
 11594  001A74  EFB5  F014         	goto	i2l8962
 11595  001A78  0A66               	xorlw	102	; case 102
 11596  001A7A  B4D8               	btfsc	status,2,c
 11597  001A7C  D7E7               	goto	i2l8632
 11598  001A7E  0A0A               	xorlw	10	; case 108
 11599  001A80  B4D8               	btfsc	status,2,c
 11600  001A82  D7E1               	goto	i2l8630
 11601  001A84  0A19               	xorlw	25	; case 117
 11602  001A86  B4D8               	btfsc	status,2,c
 11603  001A88  D7E4               	goto	i2l8634
 11604  001A8A  EFA7  F014         	goto	i2l8960
 11605  001A8E                     i2l8640:
 11606                           
 11607                           ; BSR set to: 0
 11608                           ;doprnt.c: 825: if(flag & (0x700)) {
 11609  001A8E  0E07               	movlw	7
 11610  001A90  0100               	movlb	0	; () banked
 11611  001A92  1571               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 11612  001A94  B4D8               	btfsc	status,2,c
 11613  001A96  EF49  F012         	goto	i2l357
 11614                           
 11615                           ; BSR set to: 0
 11616                           ;doprnt.c: 827: if(flag & 0x1000)
 11617  001A9A  0100               	movlb	0	; () banked
 11618  001A9C  A971               	btfss	(i2__doprnt@flag+1)& (0+255),4,b
 11619  001A9E  D005               	goto	i2l8646
 11620                           
 11621                           ; BSR set to: 0
 11622                           ;doprnt.c: 829: prec = 6;
 11623  001AA0  0E00               	movlw	0
 11624  001AA2  0100               	movlb	0	; () banked
 11625  001AA4  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 11626  001AA6  0E06               	movlw	6
 11627  001AA8  6F74               	movwf	i2__doprnt@prec& (0+255),b
 11628  001AAA                     i2l8646:
 11629                           
 11630                           ; BSR set to: 0
 11631                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 11632  001AAA  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 11633  001AAE  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 11634  001AB2  CFDF F04C          	movff	indf2,??i2__doprnt
 11635  001AB6  0E03               	movlw	3
 11636  001AB8  26DE               	addwf	postinc2,f,c
 11637  001ABA  CFDF F04D          	movff	indf2,??i2__doprnt+1
 11638  001ABE  0E00               	movlw	0
 11639  001AC0  22DD               	addwfc	postdec2,f,c
 11640  001AC2  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 11641  001AC6  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 11642  001ACA  CFDE F06D          	movff	postinc2,i2__doprnt@fval
 11643  001ACE  CFDE F06E          	movff	postinc2,i2__doprnt@fval+1
 11644  001AD2  CFDD F06F          	movff	postdec2,i2__doprnt@fval+2
 11645                           
 11646                           ; BSR set to: 0
 11647                           ;doprnt.c: 831: if(fval < 0.0) {
 11648  001AD6  0100               	movlb	0	; () banked
 11649  001AD8  AF6F               	btfss	(i2__doprnt@fval+2)& (0+255),7,b
 11650  001ADA  D011               	goto	i2l8654
 11651                           
 11652                           ; BSR set to: 0
 11653                           ;doprnt.c: 832: fval = -fval;
 11654  001ADC  C06D  F001         	movff	i2__doprnt@fval,i2___ftneg@f1
 11655  001AE0  C06E  F002         	movff	i2__doprnt@fval+1,i2___ftneg@f1+1
 11656  001AE4  C06F  F003         	movff	i2__doprnt@fval+2,i2___ftneg@f1+2
 11657  001AE8  EC0F  F02B         	call	i2___ftneg	;wreg free
 11658  001AEC  C001  F06D         	movff	?i2___ftneg,i2__doprnt@fval
 11659  001AF0  C002  F06E         	movff	?i2___ftneg+1,i2__doprnt@fval+1
 11660  001AF4  C003  F06F         	movff	?i2___ftneg+2,i2__doprnt@fval+2
 11661                           
 11662                           ;doprnt.c: 833: flag |= 0x03;
 11663  001AF8  0E03               	movlw	3
 11664  001AFA  0100               	movlb	0	; () banked
 11665  001AFC  1370               	iorwf	i2__doprnt@flag& (0+255),f,b
 11666  001AFE                     i2l8654:
 11667                           
 11668                           ; BSR set to: 0
 11669                           ;doprnt.c: 834: }
 11670                           ;doprnt.c: 835: exp = 0;
 11671  001AFE  0E00               	movlw	0
 11672  001B00  0100               	movlb	0	; () banked
 11673  001B02  6F68               	movwf	(i2__doprnt@exp+1)& (0+255),b
 11674  001B04  0E00               	movlw	0
 11675  001B06  6F67               	movwf	i2__doprnt@exp& (0+255),b
 11676                           
 11677                           ; BSR set to: 0
 11678                           ;doprnt.c: 836: if( fval!=0) {
 11679  001B08  0100               	movlb	0	; () banked
 11680  001B0A  516D               	movf	i2__doprnt@fval& (0+255),w,b
 11681  001B0C  0100               	movlb	0	; () banked
 11682  001B0E  116E               	iorwf	(i2__doprnt@fval+1)& (0+255),w,b
 11683  001B10  0100               	movlb	0	; () banked
 11684  001B12  116F               	iorwf	(i2__doprnt@fval+2)& (0+255),w,b
 11685  001B14  B4D8               	btfsc	status,2,c
 11686  001B16  D08B               	goto	i2l8682
 11687                           
 11688                           ; BSR set to: 0
 11689                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 11690  001B18  0E82               	movlw	130
 11691  001B1A  6E4C               	movwf	??i2__doprnt& (0+255),c
 11692  001B1C  0EFF               	movlw	255
 11693  001B1E  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 11694  001B20  C06D  F04E         	movff	i2__doprnt@fval,??i2__doprnt+2
 11695  001B24  C06E  F04F         	movff	i2__doprnt@fval+1,??i2__doprnt+3
 11696  001B28  C06F  F050         	movff	i2__doprnt@fval+2,??i2__doprnt+4
 11697  001B2C  C070  F051         	movff	i2__doprnt@fval+3,??i2__doprnt+5
 11698  001B30  0E10               	movlw	16
 11699  001B32  D005               	goto	i2u1404_40
 11700  001B34                     i2u1404_45:
 11701  001B34  90D8               	bcf	status,0,c
 11702  001B36  3251               	rrcf	??i2__doprnt+5,f,c
 11703  001B38  3250               	rrcf	??i2__doprnt+4,f,c
 11704  001B3A  324F               	rrcf	??i2__doprnt+3,f,c
 11705  001B3C  324E               	rrcf	??i2__doprnt+2,f,c
 11706  001B3E                     i2u1404_40:
 11707  001B3E  2EE8               	decfsz	wreg,f,c
 11708  001B40  D7F9               	goto	i2u1404_45
 11709  001B42  504E               	movf	??i2__doprnt+2,w,c
 11710  001B44  244C               	addwf	??i2__doprnt,w,c
 11711  001B46  0100               	movlb	0	; () banked
 11712  001B48  6F67               	movwf	i2__doprnt@exp& (0+255),b
 11713  001B4A  0E00               	movlw	0
 11714  001B4C  204D               	addwfc	??i2__doprnt+1,w,c
 11715  001B4E  0100               	movlb	0	; () banked
 11716  001B50  6F68               	movwf	(i2__doprnt@exp+1)& (0+255),b
 11717                           
 11718                           ; BSR set to: 0
 11719                           ;doprnt.c: 838: exp--;
 11720  001B52  0100               	movlb	0	; () banked
 11721  001B54  0767               	decf	i2__doprnt@exp& (0+255),f,b
 11722  001B56  A0D8               	btfss	status,0,c
 11723  001B58  0768               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 11724                           
 11725                           ; BSR set to: 0
 11726                           ;doprnt.c: 839: exp *= 3;
 11727  001B5A  C067  F00F         	movff	i2__doprnt@exp,i2___wmul@multiplier
 11728  001B5E  C068  F010         	movff	i2__doprnt@exp+1,i2___wmul@multiplier+1
 11729  001B62  0E00               	movlw	0
 11730  001B64  6E12               	movwf	i2___wmul@multiplicand+1,c
 11731  001B66  0E03               	movlw	3
 11732  001B68  6E11               	movwf	i2___wmul@multiplicand,c
 11733  001B6A  ECFC  F02A         	call	i2___wmul	;wreg free
 11734  001B6E  C00F  F067         	movff	?i2___wmul,i2__doprnt@exp
 11735  001B72  C010  F068         	movff	?i2___wmul+1,i2__doprnt@exp+1
 11736                           
 11737                           ;doprnt.c: 840: exp /= 10;
 11738  001B76  C067  F007         	movff	i2__doprnt@exp,i2___awdiv@dividend
 11739  001B7A  C068  F008         	movff	i2__doprnt@exp+1,i2___awdiv@dividend+1
 11740  001B7E  0E00               	movlw	0
 11741  001B80  6E0A               	movwf	i2___awdiv@divisor+1,c
 11742  001B82  0E0A               	movlw	10
 11743  001B84  6E09               	movwf	i2___awdiv@divisor,c
 11744  001B86  EC8F  F027         	call	i2___awdiv	;wreg free
 11745  001B8A  C007  F067         	movff	?i2___awdiv,i2__doprnt@exp
 11746  001B8E  C008  F068         	movff	?i2___awdiv+1,i2__doprnt@exp+1
 11747                           
 11748                           ;doprnt.c: 841: if(exp < 0)
 11749  001B92  0100               	movlb	0	; () banked
 11750  001B94  AF68               	btfss	(i2__doprnt@exp+1)& (0+255),7,b
 11751  001B96  D004               	goto	i2l8670
 11752                           
 11753                           ; BSR set to: 0
 11754                           ;doprnt.c: 842: exp--;
 11755  001B98  0100               	movlb	0	; () banked
 11756  001B9A  0767               	decf	i2__doprnt@exp& (0+255),f,b
 11757  001B9C  A0D8               	btfss	status,0,c
 11758  001B9E  0768               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 11759  001BA0                     i2l8670:
 11760                           
 11761                           ; BSR set to: 0
 11762                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 11763  001BA0  0100               	movlb	0	; () banked
 11764  001BA2  5167               	movf	i2__doprnt@exp& (0+255),w,b
 11765  001BA4  0800               	sublw	0
 11766  001BA6  EC11  F017         	call	i2_scale
 11767  001BAA  C030  F069         	movff	?i2_scale,i2__doprnt@tmpval
 11768  001BAE  C031  F06A         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 11769  001BB2  C032  F06B         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 11770                           
 11771                           ;doprnt.c: 847: tmpval.integ *= fval;
 11772  001BB6  C069  F021         	movff	i2__doprnt@tmpval,i2___ftmul@f1
 11773  001BBA  C06A  F022         	movff	i2__doprnt@tmpval+1,i2___ftmul@f1+1
 11774  001BBE  C06B  F023         	movff	i2__doprnt@tmpval+2,i2___ftmul@f1+2
 11775  001BC2  C06D  F024         	movff	i2__doprnt@fval,i2___ftmul@f2
 11776  001BC6  C06E  F025         	movff	i2__doprnt@fval+1,i2___ftmul@f2+1
 11777  001BCA  C06F  F026         	movff	i2__doprnt@fval+2,i2___ftmul@f2+2
 11778  001BCE  EC76  F023         	call	i2___ftmul	;wreg free
 11779  001BD2  C021  F069         	movff	?i2___ftmul,i2__doprnt@tmpval
 11780  001BD6  C022  F06A         	movff	?i2___ftmul+1,i2__doprnt@tmpval+1
 11781  001BDA  C023  F06B         	movff	?i2___ftmul+2,i2__doprnt@tmpval+2
 11782                           
 11783                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 11784  001BDE  C069  F001         	movff	i2__doprnt@tmpval,i2___ftge@ff1
 11785  001BE2  C06A  F002         	movff	i2__doprnt@tmpval+1,i2___ftge@ff1+1
 11786  001BE6  C06B  F003         	movff	i2__doprnt@tmpval+2,i2___ftge@ff1+2
 11787  001BEA  0E00               	movlw	0
 11788  001BEC  6E04               	movwf	i2___ftge@ff2,c
 11789  001BEE  0E80               	movlw	128
 11790  001BF0  6E05               	movwf	i2___ftge@ff2+1,c
 11791  001BF2  0E3F               	movlw	63
 11792  001BF4  6E06               	movwf	i2___ftge@ff2+2,c
 11793  001BF6  EC47  F027         	call	i2___ftge	;wreg free
 11794  001BFA  B0D8               	btfsc	status,0,c
 11795  001BFC  D005               	goto	i2l8678
 11796                           
 11797                           ;doprnt.c: 849: exp--;
 11798  001BFE  0100               	movlb	0	; () banked
 11799  001C00  0767               	decf	i2__doprnt@exp& (0+255),f,b
 11800  001C02  A0D8               	btfss	status,0,c
 11801  001C04  0768               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 11802  001C06  D013               	goto	i2l8682
 11803  001C08                     i2l8678:
 11804                           
 11805                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 11806  001C08  C069  F001         	movff	i2__doprnt@tmpval,i2___ftge@ff1
 11807  001C0C  C06A  F002         	movff	i2__doprnt@tmpval+1,i2___ftge@ff1+1
 11808  001C10  C06B  F003         	movff	i2__doprnt@tmpval+2,i2___ftge@ff1+2
 11809  001C14  0E00               	movlw	0
 11810  001C16  6E04               	movwf	i2___ftge@ff2,c
 11811  001C18  0E20               	movlw	32
 11812  001C1A  6E05               	movwf	i2___ftge@ff2+1,c
 11813  001C1C  0E41               	movlw	65
 11814  001C1E  6E06               	movwf	i2___ftge@ff2+2,c
 11815  001C20  EC47  F027         	call	i2___ftge	;wreg free
 11816  001C24  A0D8               	btfss	status,0,c
 11817  001C26  D003               	goto	i2l8682
 11818                           
 11819                           ;doprnt.c: 851: exp++;
 11820  001C28  0100               	movlb	0	; () banked
 11821  001C2A  4B67               	infsnz	i2__doprnt@exp& (0+255),f,b
 11822  001C2C  2B68               	incf	(i2__doprnt@exp+1)& (0+255),f,b
 11823  001C2E                     i2l8682:
 11824                           
 11825                           ;doprnt.c: 852: }
 11826                           ;doprnt.c: 1112: if(prec <= 12)
 11827  001C2E  0100               	movlb	0	; () banked
 11828  001C30  BF75               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 11829  001C32  D008               	goto	i2l8684
 11830  001C34  0100               	movlb	0	; () banked
 11831  001C36  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 11832  001C38  E11D               	bnz	i2l8686
 11833  001C3A  0E0D               	movlw	13
 11834  001C3C  0100               	movlb	0	; () banked
 11835  001C3E  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 11836  001C40  B0D8               	btfsc	status,0,c
 11837  001C42  D018               	goto	i2l8686
 11838  001C44                     i2l8684:
 11839                           
 11840                           ; BSR set to: 0
 11841                           ;doprnt.c: 1113: fval += fround(prec);
 11842  001C44  C06D  F015         	movff	i2__doprnt@fval,i2___ftadd@f1
 11843  001C48  C06E  F016         	movff	i2__doprnt@fval+1,i2___ftadd@f1+1
 11844  001C4C  C06F  F017         	movff	i2__doprnt@fval+2,i2___ftadd@f1+2
 11845  001C50  0100               	movlb	0	; () banked
 11846  001C52  5174               	movf	i2__doprnt@prec& (0+255),w,b
 11847  001C54  EC93  F01B         	call	i2_fround
 11848  001C58  C030  F018         	movff	?i2_fround,i2___ftadd@f2
 11849  001C5C  C031  F019         	movff	?i2_fround+1,i2___ftadd@f2+1
 11850  001C60  C032  F01A         	movff	?i2_fround+2,i2___ftadd@f2+2
 11851  001C64  ECB6  F01C         	call	i2___ftadd	;wreg free
 11852  001C68  C015  F06D         	movff	?i2___ftadd,i2__doprnt@fval
 11853  001C6C  C016  F06E         	movff	?i2___ftadd+1,i2__doprnt@fval+1
 11854  001C70  C017  F06F         	movff	?i2___ftadd+2,i2__doprnt@fval+2
 11855  001C74                     i2l8686:
 11856                           
 11857                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 11858  001C74  0100               	movlb	0	; () banked
 11859  001C76  BF68               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 11860  001C78  D008               	goto	i2l8688
 11861  001C7A  0100               	movlb	0	; () banked
 11862  001C7C  5168               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 11863  001C7E  E126               	bnz	i2l8694
 11864  001C80  0E0A               	movlw	10
 11865  001C82  0100               	movlb	0	; () banked
 11866  001C84  5D67               	subwf	i2__doprnt@exp& (0+255),w,b
 11867  001C86  B0D8               	btfsc	status,0,c
 11868  001C88  D021               	goto	i2l8694
 11869  001C8A                     i2l8688:
 11870                           
 11871                           ; BSR set to: 0
 11872  001C8A  0100               	movlb	0	; () banked
 11873  001C8C  516D               	movf	i2__doprnt@fval& (0+255),w,b
 11874  001C8E  0100               	movlb	0	; () banked
 11875  001C90  116E               	iorwf	(i2__doprnt@fval+1)& (0+255),w,b
 11876  001C92  0100               	movlb	0	; () banked
 11877  001C94  116F               	iorwf	(i2__doprnt@fval+2)& (0+255),w,b
 11878  001C96  B4D8               	btfsc	status,2,c
 11879  001C98  D05B               	goto	i2l8708
 11880                           
 11881                           ; BSR set to: 0
 11882  001C9A  C06D  F037         	movff	i2__doprnt@fval,i2___fttol@f1
 11883  001C9E  C06E  F038         	movff	i2__doprnt@fval+1,i2___fttol@f1+1
 11884  001CA2  C06F  F039         	movff	i2__doprnt@fval+2,i2___fttol@f1+2
 11885  001CA6  ECF0  F023         	call	i2___fttol	;wreg free
 11886  001CAA  5037               	movf	?i2___fttol,w,c
 11887  001CAC  1038               	iorwf	?i2___fttol+1,w,c
 11888  001CAE  1039               	iorwf	?i2___fttol+2,w,c
 11889  001CB0  103A               	iorwf	?i2___fttol+3,w,c
 11890  001CB2  A4D8               	btfss	status,2,c
 11891  001CB4  D04D               	goto	i2l8708
 11892  001CB6  0100               	movlb	0	; () banked
 11893  001CB8  BF68               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 11894  001CBA  D04A               	goto	i2l8708
 11895  001CBC  0100               	movlb	0	; () banked
 11896  001CBE  5168               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 11897  001CC0  E105               	bnz	i2l8694
 11898  001CC2  0E02               	movlw	2
 11899  001CC4  0100               	movlb	0	; () banked
 11900  001CC6  5D67               	subwf	i2__doprnt@exp& (0+255),w,b
 11901  001CC8  A0D8               	btfss	status,0,c
 11902  001CCA  D042               	goto	i2l8708
 11903  001CCC                     i2l8694:
 11904                           
 11905                           ; BSR set to: 0
 11906                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 11907  001CCC  C069  F001         	movff	i2__doprnt@tmpval,i2___ftge@ff1
 11908  001CD0  C06A  F002         	movff	i2__doprnt@tmpval+1,i2___ftge@ff1+1
 11909  001CD4  C06B  F003         	movff	i2__doprnt@tmpval+2,i2___ftge@ff1+2
 11910  001CD8  0E70               	movlw	112
 11911  001CDA  6E04               	movwf	i2___ftge@ff2,c
 11912  001CDC  0E89               	movlw	137
 11913  001CDE  6E05               	movwf	i2___ftge@ff2+1,c
 11914  001CE0  0E40               	movlw	64
 11915  001CE2  6E06               	movwf	i2___ftge@ff2+2,c
 11916  001CE4  EC47  F027         	call	i2___ftge	;wreg free
 11917  001CE8  B0D8               	btfsc	status,0,c
 11918  001CEA  D003               	goto	i2l8698
 11919                           
 11920                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 11921  001CEC  0100               	movlb	0	; () banked
 11922  001CEE  0EF7               	movlw	247
 11923  001CF0  D002               	goto	L6
 11924  001CF2                     i2l8698:
 11925                           
 11926                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 11927  001CF2  0100               	movlb	0	; () banked
 11928  001CF4  0EF8               	movlw	248
 11929  001CF6                     L6:
 11930  001CF6  2767               	addwf	i2__doprnt@exp& (0+255),f,b
 11931  001CF8  0EFF               	movlw	255
 11932  001CFA  2368               	addwfc	(i2__doprnt@exp+1)& (0+255),f,b
 11933                           
 11934                           ; BSR set to: 0
 11935                           ;doprnt.c: 1124: }
 11936                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 11937                           
 11938                           ; BSR set to: 0
 11939  001CFC  0100               	movlb	0	; () banked
 11940  001CFE  5167               	movf	i2__doprnt@exp& (0+255),w,b
 11941  001D00  EC11  F017         	call	i2_scale
 11942  001D04  C030  F069         	movff	?i2_scale,i2__doprnt@tmpval
 11943  001D08  C031  F06A         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 11944  001D0C  C032  F06B         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 11945                           
 11946                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 11947  001D10  C06D  F001         	movff	i2__doprnt@fval,i2__tdiv_to_l_@f1
 11948  001D14  C06E  F002         	movff	i2__doprnt@fval+1,i2__tdiv_to_l_@f1+1
 11949  001D18  C06F  F003         	movff	i2__doprnt@fval+2,i2__tdiv_to_l_@f1+2
 11950  001D1C  C069  F004         	movff	i2__doprnt@tmpval,i2__tdiv_to_l_@f2
 11951  001D20  C06A  F005         	movff	i2__doprnt@tmpval+1,i2__tdiv_to_l_@f2+1
 11952  001D24  C06B  F006         	movff	i2__doprnt@tmpval+2,i2__tdiv_to_l_@f2+2
 11953  001D28  ECC3  F021         	call	i2__tdiv_to_l_	;wreg free
 11954  001D2C  C001  F063         	movff	?i2__tdiv_to_l_,i2__doprnt@val
 11955  001D30  C002  F064         	movff	?i2__tdiv_to_l_+1,i2__doprnt@val+1
 11956  001D34  C003  F065         	movff	?i2__tdiv_to_l_+2,i2__doprnt@val+2
 11957  001D38  C004  F066         	movff	?i2__tdiv_to_l_+3,i2__doprnt@val+3
 11958                           
 11959                           ;doprnt.c: 1129: fval = 0.0;
 11960  001D3C  0E00               	movlw	0
 11961  001D3E  0100               	movlb	0	; () banked
 11962  001D40  6F6D               	movwf	i2__doprnt@fval& (0+255),b
 11963  001D42  0E00               	movlw	0
 11964  001D44  0100               	movlb	0	; () banked
 11965  001D46  6F6E               	movwf	(i2__doprnt@fval+1)& (0+255),b
 11966  001D48  0E00               	movlw	0
 11967  001D4A  0100               	movlb	0	; () banked
 11968  001D4C  6F6F               	movwf	(i2__doprnt@fval+2)& (0+255),b
 11969                           
 11970                           ;doprnt.c: 1130: } else {
 11971  001D4E  D033               	goto	i2l8712
 11972  001D50                     i2l8708:
 11973                           
 11974                           ;doprnt.c: 1131: val = (unsigned long)fval;
 11975  001D50  C06D  F037         	movff	i2__doprnt@fval,i2___fttol@f1
 11976  001D54  C06E  F038         	movff	i2__doprnt@fval+1,i2___fttol@f1+1
 11977  001D58  C06F  F039         	movff	i2__doprnt@fval+2,i2___fttol@f1+2
 11978  001D5C  ECF0  F023         	call	i2___fttol	;wreg free
 11979  001D60  C037  F063         	movff	?i2___fttol,i2__doprnt@val
 11980  001D64  C038  F064         	movff	?i2___fttol+1,i2__doprnt@val+1
 11981  001D68  C039  F065         	movff	?i2___fttol+2,i2__doprnt@val+2
 11982  001D6C  C03A  F066         	movff	?i2___fttol+3,i2__doprnt@val+3
 11983                           
 11984                           ;doprnt.c: 1132: fval -= (double)val;
 11985  001D70  C06D  F021         	movff	i2__doprnt@fval,i2___ftsub@f1
 11986  001D74  C06E  F022         	movff	i2__doprnt@fval+1,i2___ftsub@f1+1
 11987  001D78  C06F  F023         	movff	i2__doprnt@fval+2,i2___ftsub@f1+2
 11988  001D7C  C063  F009         	movff	i2__doprnt@val,i2___lltoft@c
 11989  001D80  C064  F00A         	movff	i2__doprnt@val+1,i2___lltoft@c+1
 11990  001D84  C065  F00B         	movff	i2__doprnt@val+2,i2___lltoft@c+2
 11991  001D88  C066  F00C         	movff	i2__doprnt@val+3,i2___lltoft@c+3
 11992  001D8C  ECF8  F028         	call	i2___lltoft	;wreg free
 11993  001D90  C009  F024         	movff	?i2___lltoft,i2___ftsub@f2
 11994  001D94  C00A  F025         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 11995  001D98  C00B  F026         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 11996  001D9C  EC01  F02A         	call	i2___ftsub	;wreg free
 11997  001DA0  C021  F06D         	movff	?i2___ftsub,i2__doprnt@fval
 11998  001DA4  C022  F06E         	movff	?i2___ftsub+1,i2__doprnt@fval+1
 11999  001DA8  C023  F06F         	movff	?i2___ftsub+2,i2__doprnt@fval+2
 12000                           
 12001                           ;doprnt.c: 1133: exp = 0;
 12002  001DAC  0E00               	movlw	0
 12003  001DAE  0100               	movlb	0	; () banked
 12004  001DB0  6F68               	movwf	(i2__doprnt@exp+1)& (0+255),b
 12005  001DB2  0E00               	movlw	0
 12006  001DB4  6F67               	movwf	i2__doprnt@exp& (0+255),b
 12007  001DB6                     i2l8712:
 12008                           
 12009                           ; BSR set to: 0
 12010                           ;doprnt.c: 1134: }
 12011                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 12012  001DB6  0E01               	movlw	1
 12013  001DB8  0100               	movlb	0	; () banked
 12014  001DBA  6F76               	movwf	i2__doprnt@c& (0+255),b
 12015  001DBC                     i2l8714:
 12016                           
 12017                           ; BSR set to: 0
 12018  001DBC  0E0A               	movlw	10
 12019  001DBE  0100               	movlb	0	; () banked
 12020  001DC0  1976               	xorwf	i2__doprnt@c& (0+255),w,b
 12021  001DC2  B4D8               	btfsc	status,2,c
 12022  001DC4  D01E               	goto	i2l8726
 12023                           
 12024                           ; BSR set to: 0
 12025                           ;doprnt.c: 1137: if(val < dpowers[c])
 12026                           
 12027                           ; BSR set to: 0
 12028                           
 12029                           ; BSR set to: 0
 12030  001DC6  0100               	movlb	0	; () banked
 12031  001DC8  5176               	movf	i2__doprnt@c& (0+255),w,b
 12032  001DCA  0D04               	mullw	4
 12033  001DCC  0E01               	movlw	low _dpowers
 12034  001DCE  24F3               	addwf	prodl,w,c
 12035  001DD0  6EF6               	movwf	tblptrl,c
 12036  001DD2  0E06               	movlw	high _dpowers
 12037  001DD4  20F4               	addwfc	prodh,w,c
 12038  001DD6  6EF7               	movwf	tblptrh,c
 12039  001DD8                     	if	0	;There are less than 3 active tblptr bytes
 12040  001DD8                     	endif
 12041  001DD8  0009               	tblrd		*+
 12042  001DDA  50F5               	movf	tablat,w,c
 12043  001DDC  0100               	movlb	0	; () banked
 12044  001DDE  5D63               	subwf	i2__doprnt@val& (0+255),w,b
 12045  001DE0  0009               	tblrd		*+
 12046  001DE2  50F5               	movf	tablat,w,c
 12047  001DE4  0100               	movlb	0	; () banked
 12048  001DE6  5964               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 12049  001DE8  0009               	tblrd		*+
 12050  001DEA  50F5               	movf	tablat,w,c
 12051  001DEC  0100               	movlb	0	; () banked
 12052  001DEE  5965               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 12053  001DF0  0009               	tblrd		*+
 12054  001DF2  50F5               	movf	tablat,w,c
 12055  001DF4  0100               	movlb	0	; () banked
 12056  001DF6  5966               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 12057  001DF8  A0D8               	btfss	status,0,c
 12058  001DFA  D003               	goto	i2l8726
 12059                           
 12060                           ; BSR set to: 0
 12061                           
 12062                           ; BSR set to: 0
 12063                           
 12064                           ; BSR set to: 0
 12065                           ;doprnt.c: 1138: break;
 12066  001DFC  0100               	movlb	0	; () banked
 12067  001DFE  2B76               	incf	i2__doprnt@c& (0+255),f,b
 12068  001E00  D7DD               	goto	i2l8714
 12069  001E02                     i2l8726:
 12070                           
 12071                           ; BSR set to: 0
 12072                           ;doprnt.c: 1142: width -= prec + c + exp;
 12073  001E02  C076  F04C         	movff	i2__doprnt@c,??i2__doprnt
 12074  001E06  6A4D               	clrf	(??i2__doprnt+1)& (0+255),c
 12075  001E08  BE4C               	btfsc	??i2__doprnt& (0+255),7,c
 12076  001E0A  064D               	decf	(??i2__doprnt+1)& (0+255),f,c
 12077  001E0C  0100               	movlb	0	; () banked
 12078  001E0E  5174               	movf	i2__doprnt@prec& (0+255),w,b
 12079  001E10  264C               	addwf	??i2__doprnt,f,c
 12080  001E12  0100               	movlb	0	; () banked
 12081  001E14  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 12082  001E16  224D               	addwfc	??i2__doprnt+1,f,c
 12083  001E18  0100               	movlb	0	; () banked
 12084  001E1A  5167               	movf	i2__doprnt@exp& (0+255),w,b
 12085  001E1C  264C               	addwf	??i2__doprnt,f,c
 12086  001E1E  0100               	movlb	0	; () banked
 12087  001E20  5168               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 12088  001E22  224D               	addwfc	??i2__doprnt+1,f,c
 12089  001E24  504C               	movf	??i2__doprnt,w,c
 12090  001E26  0100               	movlb	0	; () banked
 12091  001E28  5F72               	subwf	i2__doprnt@width& (0+255),f,b
 12092  001E2A  504D               	movf	??i2__doprnt+1,w,c
 12093  001E2C  0100               	movlb	0	; () banked
 12094  001E2E  5B73               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 12095                           
 12096                           ;doprnt.c: 1143: if(
 12097                           ;doprnt.c: 1147: prec)
 12098  001E30  0100               	movlb	0	; () banked
 12099  001E32  5174               	movf	i2__doprnt@prec& (0+255),w,b
 12100  001E34  0100               	movlb	0	; () banked
 12101  001E36  1175               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 12102  001E38  B4D8               	btfsc	status,2,c
 12103  001E3A  D004               	goto	i2l8730
 12104                           
 12105                           ; BSR set to: 0
 12106                           ;doprnt.c: 1148: width--;
 12107  001E3C  0100               	movlb	0	; () banked
 12108  001E3E  0772               	decf	i2__doprnt@width& (0+255),f,b
 12109  001E40  A0D8               	btfss	status,0,c
 12110  001E42  0773               	decf	(i2__doprnt@width+1)& (0+255),f,b
 12111  001E44                     i2l8730:
 12112                           
 12113                           ; BSR set to: 0
 12114                           ;doprnt.c: 1149: if(flag & 0x03)
 12115  001E44  0E03               	movlw	3
 12116  001E46  0100               	movlb	0	; () banked
 12117  001E48  1570               	andwf	i2__doprnt@flag& (0+255),w,b
 12118  001E4A  6E4C               	movwf	??i2__doprnt& (0+255),c
 12119  001E4C  0E00               	movlw	0
 12120  001E4E  0100               	movlb	0	; () banked
 12121  001E50  1571               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 12122  001E52  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 12123  001E54  504C               	movf	??i2__doprnt,w,c
 12124  001E56  104D               	iorwf	??i2__doprnt+1,w,c
 12125  001E58  B4D8               	btfsc	status,2,c
 12126  001E5A  D004               	goto	i2l8734
 12127                           
 12128                           ; BSR set to: 0
 12129                           ;doprnt.c: 1150: width--;
 12130  001E5C  0100               	movlb	0	; () banked
 12131  001E5E  0772               	decf	i2__doprnt@width& (0+255),f,b
 12132  001E60  A0D8               	btfss	status,0,c
 12133  001E62  0773               	decf	(i2__doprnt@width+1)& (0+255),f,b
 12134  001E64                     i2l8734:
 12135                           
 12136                           ; BSR set to: 0
 12137                           ;doprnt.c: 1153: if(flag & 0x04) {
 12138  001E64  0100               	movlb	0	; () banked
 12139  001E66  A570               	btfss	i2__doprnt@flag& (0+255),2,b
 12140  001E68  D0B6               	goto	i2l8768
 12141                           
 12142                           ; BSR set to: 0
 12143                           ;doprnt.c: 1157: if(flag & 0x03)
 12144  001E6A  0E03               	movlw	3
 12145  001E6C  0100               	movlb	0	; () banked
 12146  001E6E  1570               	andwf	i2__doprnt@flag& (0+255),w,b
 12147  001E70  6E4C               	movwf	??i2__doprnt& (0+255),c
 12148  001E72  0E00               	movlw	0
 12149  001E74  0100               	movlb	0	; () banked
 12150  001E76  1571               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 12151  001E78  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 12152  001E7A  504C               	movf	??i2__doprnt,w,c
 12153  001E7C  104D               	iorwf	??i2__doprnt+1,w,c
 12154  001E7E  B4D8               	btfsc	status,2,c
 12155  001E80  D069               	goto	i2l8756
 12156                           
 12157                           ; BSR set to: 0
 12158                           ;doprnt.c: 1159: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 12159  001E82  EE20 F002          	lfsr	2,2
 12160  001E86  5046               	movf	i2__doprnt@pb,w,c
 12161  001E88  26D9               	addwf	fsr2l,f,c
 12162  001E8A  5047               	movf	i2__doprnt@pb+1,w,c
 12163  001E8C  22DA               	addwfc	fsr2h,f,c
 12164  001E8E  50DE               	movf	postinc2,w,c
 12165  001E90  10DE               	iorwf	postinc2,w,c
 12166  001E92  B4D8               	btfsc	status,2,c
 12167  001E94  D013               	goto	i2l8742
 12168                           
 12169                           ; BSR set to: 0
 12170  001E96  EE20 F002          	lfsr	2,2
 12171  001E9A  5046               	movf	i2__doprnt@pb,w,c
 12172  001E9C  26D9               	addwf	fsr2l,f,c
 12173  001E9E  5047               	movf	i2__doprnt@pb+1,w,c
 12174  001EA0  22DA               	addwfc	fsr2h,f,c
 12175  001EA2  D801               	call	i2u1422_48
 12176  001EA4  D057               	goto	i2l8756
 12177  001EA6                     i2u1422_48:
 12178  001EA6  0005               	push	
 12179  001EA8  6EFA               	movwf	pclath,c
 12180  001EAA  50DE               	movf	postinc2,w,c
 12181  001EAC  6EFD               	movwf	tosl,c
 12182  001EAE  50DE               	movf	postinc2,w,c
 12183  001EB0  6EFE               	movwf	tosh,c
 12184  001EB2  50F8               	movf	tblptru,w,c
 12185  001EB4  6EFF               	movwf	tosu,c
 12186  001EB6  50FA               	movf	pclath,w,c
 12187  001EB8  0E2D               	movlw	45
 12188  001EBA  0012               	return		;indir
 12189  001EBC                     i2l8742:
 12190  001EBC  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12191  001EC0  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12192  001EC4  CFDE F04C          	movff	postinc2,??i2__doprnt
 12193  001EC8  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12194  001ECC  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12195  001ED0  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12196  001ED4  0E2D               	movlw	45
 12197  001ED6  6EDF               	movwf	indf2,c
 12198  001ED8  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12199  001EDC  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12200  001EE0  2ADE               	incf	postinc2,f,c
 12201  001EE2  0E00               	movlw	0
 12202  001EE4  22DD               	addwfc	postdec2,f,c
 12203                           
 12204                           ;doprnt.c: 1168: while(width > 0) {
 12205  001EE6  D036               	goto	i2l8756
 12206  001EE8                     i2l8746:
 12207                           
 12208                           ;doprnt.c: 1169: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 12209  001EE8  EE20 F002          	lfsr	2,2
 12210  001EEC  5046               	movf	i2__doprnt@pb,w,c
 12211  001EEE  26D9               	addwf	fsr2l,f,c
 12212  001EF0  5047               	movf	i2__doprnt@pb+1,w,c
 12213  001EF2  22DA               	addwfc	fsr2h,f,c
 12214  001EF4  50DE               	movf	postinc2,w,c
 12215  001EF6  10DE               	iorwf	postinc2,w,c
 12216  001EF8  B4D8               	btfsc	status,2,c
 12217  001EFA  D013               	goto	i2l8750
 12218  001EFC  EE20 F002          	lfsr	2,2
 12219  001F00  5046               	movf	i2__doprnt@pb,w,c
 12220  001F02  26D9               	addwf	fsr2l,f,c
 12221  001F04  5047               	movf	i2__doprnt@pb+1,w,c
 12222  001F06  22DA               	addwfc	fsr2h,f,c
 12223  001F08  D801               	call	i2u1424_48
 12224  001F0A  D020               	goto	i2l8754
 12225  001F0C                     i2u1424_48:
 12226  001F0C  0005               	push	
 12227  001F0E  6EFA               	movwf	pclath,c
 12228  001F10  50DE               	movf	postinc2,w,c
 12229  001F12  6EFD               	movwf	tosl,c
 12230  001F14  50DE               	movf	postinc2,w,c
 12231  001F16  6EFE               	movwf	tosh,c
 12232  001F18  50F8               	movf	tblptru,w,c
 12233  001F1A  6EFF               	movwf	tosu,c
 12234  001F1C  50FA               	movf	pclath,w,c
 12235  001F1E  0E30               	movlw	48
 12236  001F20  0012               	return		;indir
 12237  001F22                     i2l8750:
 12238  001F22  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12239  001F26  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12240  001F2A  CFDE F04C          	movff	postinc2,??i2__doprnt
 12241  001F2E  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12242  001F32  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12243  001F36  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12244  001F3A  0E30               	movlw	48
 12245  001F3C  6EDF               	movwf	indf2,c
 12246  001F3E  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12247  001F42  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12248  001F46  2ADE               	incf	postinc2,f,c
 12249  001F48  0E00               	movlw	0
 12250  001F4A  22DD               	addwfc	postdec2,f,c
 12251  001F4C                     i2l8754:
 12252                           
 12253                           ;doprnt.c: 1170: width--;
 12254  001F4C  0100               	movlb	0	; () banked
 12255  001F4E  0772               	decf	i2__doprnt@width& (0+255),f,b
 12256  001F50  A0D8               	btfss	status,0,c
 12257  001F52  0773               	decf	(i2__doprnt@width+1)& (0+255),f,b
 12258  001F54                     i2l8756:
 12259  001F54  0100               	movlb	0	; () banked
 12260  001F56  BF73               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 12261  001F58  D0F8               	goto	i2l8790
 12262  001F5A  0100               	movlb	0	; () banked
 12263  001F5C  5173               	movf	(i2__doprnt@width+1)& (0+255),w,b
 12264  001F5E  E1C4               	bnz	i2l8746
 12265  001F60  0100               	movlb	0	; () banked
 12266  001F62  0572               	decf	i2__doprnt@width& (0+255),w,b
 12267  001F64  A0D8               	btfss	status,0,c
 12268  001F66  D0F1               	goto	i2l8790
 12269  001F68  D7BF               	goto	i2l8746
 12270  001F6A                     i2l8758:
 12271                           
 12272                           ; BSR set to: 0
 12273                           ;doprnt.c: 1181: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 12274  001F6A  EE20 F002          	lfsr	2,2
 12275  001F6E  5046               	movf	i2__doprnt@pb,w,c
 12276  001F70  26D9               	addwf	fsr2l,f,c
 12277  001F72  5047               	movf	i2__doprnt@pb+1,w,c
 12278  001F74  22DA               	addwfc	fsr2h,f,c
 12279  001F76  50DE               	movf	postinc2,w,c
 12280  001F78  10DE               	iorwf	postinc2,w,c
 12281  001F7A  B4D8               	btfsc	status,2,c
 12282  001F7C  D013               	goto	i2l8762
 12283                           
 12284                           ; BSR set to: 0
 12285  001F7E  EE20 F002          	lfsr	2,2
 12286  001F82  5046               	movf	i2__doprnt@pb,w,c
 12287  001F84  26D9               	addwf	fsr2l,f,c
 12288  001F86  5047               	movf	i2__doprnt@pb+1,w,c
 12289  001F88  22DA               	addwfc	fsr2h,f,c
 12290  001F8A  D801               	call	i2u1427_48
 12291  001F8C  D020               	goto	i2l8766
 12292  001F8E                     i2u1427_48:
 12293  001F8E  0005               	push	
 12294  001F90  6EFA               	movwf	pclath,c
 12295  001F92  50DE               	movf	postinc2,w,c
 12296  001F94  6EFD               	movwf	tosl,c
 12297  001F96  50DE               	movf	postinc2,w,c
 12298  001F98  6EFE               	movwf	tosh,c
 12299  001F9A  50F8               	movf	tblptru,w,c
 12300  001F9C  6EFF               	movwf	tosu,c
 12301  001F9E  50FA               	movf	pclath,w,c
 12302  001FA0  0E20               	movlw	32
 12303  001FA2  0012               	return		;indir
 12304  001FA4                     i2l8762:
 12305  001FA4  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12306  001FA8  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12307  001FAC  CFDE F04C          	movff	postinc2,??i2__doprnt
 12308  001FB0  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12309  001FB4  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12310  001FB8  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12311  001FBC  0E20               	movlw	32
 12312  001FBE  6EDF               	movwf	indf2,c
 12313  001FC0  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12314  001FC4  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12315  001FC8  2ADE               	incf	postinc2,f,c
 12316  001FCA  0E00               	movlw	0
 12317  001FCC  22DD               	addwfc	postdec2,f,c
 12318  001FCE                     i2l8766:
 12319                           
 12320                           ;doprnt.c: 1182: width--;
 12321  001FCE  0100               	movlb	0	; () banked
 12322  001FD0  0772               	decf	i2__doprnt@width& (0+255),f,b
 12323  001FD2  A0D8               	btfss	status,0,c
 12324  001FD4  0773               	decf	(i2__doprnt@width+1)& (0+255),f,b
 12325  001FD6                     i2l8768:
 12326                           
 12327                           ; BSR set to: 0
 12328  001FD6  0100               	movlb	0	; () banked
 12329  001FD8  BF73               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 12330  001FDA  D007               	goto	i2l8770
 12331  001FDC  0100               	movlb	0	; () banked
 12332  001FDE  5173               	movf	(i2__doprnt@width+1)& (0+255),w,b
 12333  001FE0  E1C4               	bnz	i2l8758
 12334  001FE2  0100               	movlb	0	; () banked
 12335  001FE4  0572               	decf	i2__doprnt@width& (0+255),w,b
 12336  001FE6  B0D8               	btfsc	status,0,c
 12337  001FE8  D7C0               	goto	i2l8758
 12338  001FEA                     i2l8770:
 12339                           
 12340                           ; BSR set to: 0
 12341                           ;doprnt.c: 1183: }
 12342                           ;doprnt.c: 1188: if(flag & 0x03)
 12343  001FEA  0E03               	movlw	3
 12344  001FEC  0100               	movlb	0	; () banked
 12345  001FEE  1570               	andwf	i2__doprnt@flag& (0+255),w,b
 12346  001FF0  6E4C               	movwf	??i2__doprnt& (0+255),c
 12347  001FF2  0E00               	movlw	0
 12348  001FF4  0100               	movlb	0	; () banked
 12349  001FF6  1571               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 12350  001FF8  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 12351  001FFA  504C               	movf	??i2__doprnt,w,c
 12352  001FFC  104D               	iorwf	??i2__doprnt+1,w,c
 12353  001FFE  B4D8               	btfsc	status,2,c
 12354  002000  D0A4               	goto	i2l8790
 12355                           
 12356                           ; BSR set to: 0
 12357                           ;doprnt.c: 1190: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 12358  002002  EE20 F002          	lfsr	2,2
 12359  002006  5046               	movf	i2__doprnt@pb,w,c
 12360  002008  26D9               	addwf	fsr2l,f,c
 12361  00200A  5047               	movf	i2__doprnt@pb+1,w,c
 12362  00200C  22DA               	addwfc	fsr2h,f,c
 12363  00200E  50DE               	movf	postinc2,w,c
 12364  002010  10DE               	iorwf	postinc2,w,c
 12365  002012  B4D8               	btfsc	status,2,c
 12366  002014  D013               	goto	i2l8776
 12367                           
 12368                           ; BSR set to: 0
 12369  002016  EE20 F002          	lfsr	2,2
 12370  00201A  5046               	movf	i2__doprnt@pb,w,c
 12371  00201C  26D9               	addwf	fsr2l,f,c
 12372  00201E  5047               	movf	i2__doprnt@pb+1,w,c
 12373  002020  22DA               	addwfc	fsr2h,f,c
 12374  002022  D801               	call	i2u1431_48
 12375  002024  D092               	goto	i2l8790
 12376  002026                     i2u1431_48:
 12377  002026  0005               	push	
 12378  002028  6EFA               	movwf	pclath,c
 12379  00202A  50DE               	movf	postinc2,w,c
 12380  00202C  6EFD               	movwf	tosl,c
 12381  00202E  50DE               	movf	postinc2,w,c
 12382  002030  6EFE               	movwf	tosh,c
 12383  002032  50F8               	movf	tblptru,w,c
 12384  002034  6EFF               	movwf	tosu,c
 12385  002036  50FA               	movf	pclath,w,c
 12386  002038  0E2D               	movlw	45
 12387  00203A  0012               	return		;indir
 12388  00203C                     i2l8776:
 12389  00203C  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12390  002040  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12391  002044  CFDE F04C          	movff	postinc2,??i2__doprnt
 12392  002048  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12393  00204C  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12394  002050  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12395  002054  0E2D               	movlw	45
 12396  002056  D077               	goto	L7
 12397  002058                     i2l8778:
 12398  002058  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12399  00205C  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12400  002060  2ADE               	incf	postinc2,f,c
 12401  002062  0E00               	movlw	0
 12402  002064  22DD               	addwfc	postdec2,f,c
 12403                           
 12404                           ;doprnt.c: 1195: }
 12405                           ;doprnt.c: 1196: while(c--) {
 12406  002066  D071               	goto	i2l8790
 12407  002068                     i2l8780:
 12408                           
 12409                           ;doprnt.c: 1200: {
 12410                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 12411  002068  C063  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 12412  00206C  C064  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 12413  002070  C065  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 12414  002074  C066  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 12415  002078  0100               	movlb	0	; () banked
 12416  00207A  5176               	movf	i2__doprnt@c& (0+255),w,b
 12417  00207C  0D04               	mullw	4
 12418  00207E  0E01               	movlw	low _dpowers
 12419  002080  24F3               	addwf	prodl,w,c
 12420  002082  6EF6               	movwf	tblptrl,c
 12421  002084  0E06               	movlw	high _dpowers
 12422  002086  20F4               	addwfc	prodh,w,c
 12423  002088  6EF7               	movwf	tblptrh,c
 12424  00208A                     	if	0	;There are less than 3 active tblptr bytes
 12425  00208A                     	endif
 12426  00208A  0009               	tblrd		*+
 12427  00208C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 12428  002090  0009               	tblrd		*+
 12429  002092  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 12430  002096  0009               	tblrd		*+
 12431  002098  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 12432  00209C  000A               	tblrd		*-
 12433  00209E  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 12434  0020A2  ECD1  F027         	call	i2___lldiv
 12435  0020A6  C001  F069         	movff	?i2___lldiv,i2__doprnt@tmpval
 12436  0020AA  C002  F06A         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 12437  0020AE  C003  F06B         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 12438  0020B2  C004  F06C         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 12439                           
 12440                           ;doprnt.c: 1202: tmpval.vd %= 10;
 12441  0020B6  C069  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 12442  0020BA  C06A  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 12443  0020BE  C06B  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 12444  0020C2  C06C  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 12445  0020C6  0E0A               	movlw	10
 12446  0020C8  6E12               	movwf	i2___llmod@divisor,c
 12447  0020CA  0E00               	movlw	0
 12448  0020CC  6E13               	movwf	i2___llmod@divisor+1,c
 12449  0020CE  0E00               	movlw	0
 12450  0020D0  6E14               	movwf	i2___llmod@divisor+2,c
 12451  0020D2  0E00               	movlw	0
 12452  0020D4  6E15               	movwf	i2___llmod@divisor+3,c
 12453  0020D6  ECC5  F028         	call	i2___llmod	;wreg free
 12454  0020DA  C00E  F069         	movff	?i2___llmod,i2__doprnt@tmpval
 12455  0020DE  C00F  F06A         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 12456  0020E2  C010  F06B         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 12457  0020E6  C011  F06C         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 12458                           
 12459                           ;doprnt.c: 1203: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 12460  0020EA  EE20 F002          	lfsr	2,2
 12461  0020EE  5046               	movf	i2__doprnt@pb,w,c
 12462  0020F0  26D9               	addwf	fsr2l,f,c
 12463  0020F2  5047               	movf	i2__doprnt@pb+1,w,c
 12464  0020F4  22DA               	addwfc	fsr2h,f,c
 12465  0020F6  50DE               	movf	postinc2,w,c
 12466  0020F8  10DE               	iorwf	postinc2,w,c
 12467  0020FA  B4D8               	btfsc	status,2,c
 12468  0020FC  D015               	goto	i2l8788
 12469  0020FE  EE20 F002          	lfsr	2,2
 12470  002102  5046               	movf	i2__doprnt@pb,w,c
 12471  002104  26D9               	addwf	fsr2l,f,c
 12472  002106  5047               	movf	i2__doprnt@pb+1,w,c
 12473  002108  22DA               	addwfc	fsr2h,f,c
 12474  00210A  D801               	call	i2u1433_48
 12475  00210C  D01E               	goto	i2l8790
 12476  00210E                     i2u1433_48:
 12477  00210E  0005               	push	
 12478  002110  6EFA               	movwf	pclath,c
 12479  002112  50DE               	movf	postinc2,w,c
 12480  002114  6EFD               	movwf	tosl,c
 12481  002116  50DE               	movf	postinc2,w,c
 12482  002118  6EFE               	movwf	tosh,c
 12483  00211A  50F8               	movf	tblptru,w,c
 12484  00211C  6EFF               	movwf	tosu,c
 12485  00211E  50FA               	movf	pclath,w,c
 12486  002120  0100               	movlb	0	; () banked
 12487  002122  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 12488  002124  0F30               	addlw	48
 12489  002126  0012               	return		;indir
 12490  002128                     i2l8788:
 12491  002128  0100               	movlb	0	; () banked
 12492  00212A  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 12493  00212C  0F30               	addlw	48
 12494  00212E  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12495  002132  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12496  002136  CFDE F04C          	movff	postinc2,??i2__doprnt
 12497  00213A  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12498  00213E  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12499  002142  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12500  002146                     L7:
 12501  002146  6EDF               	movwf	indf2,c
 12502  002148  D787               	goto	i2l8778
 12503  00214A                     i2l8790:
 12504  00214A  0100               	movlb	0	; () banked
 12505  00214C  0776               	decf	i2__doprnt@c& (0+255),f,b
 12506  00214E  0100               	movlb	0	; () banked
 12507  002150  2976               	incf	i2__doprnt@c& (0+255),w,b
 12508  002152  B4D8               	btfsc	status,2,c
 12509  002154  D037               	goto	i2l8802
 12510  002156  D788               	goto	i2l8780
 12511  002158                     i2l8792:
 12512                           
 12513                           ; BSR set to: 0
 12514                           ;doprnt.c: 1208: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 12515  002158  EE20 F002          	lfsr	2,2
 12516  00215C  5046               	movf	i2__doprnt@pb,w,c
 12517  00215E  26D9               	addwf	fsr2l,f,c
 12518  002160  5047               	movf	i2__doprnt@pb+1,w,c
 12519  002162  22DA               	addwfc	fsr2h,f,c
 12520  002164  50DE               	movf	postinc2,w,c
 12521  002166  10DE               	iorwf	postinc2,w,c
 12522  002168  B4D8               	btfsc	status,2,c
 12523  00216A  D013               	goto	i2l8796
 12524                           
 12525                           ; BSR set to: 0
 12526  00216C  EE20 F002          	lfsr	2,2
 12527  002170  5046               	movf	i2__doprnt@pb,w,c
 12528  002172  26D9               	addwf	fsr2l,f,c
 12529  002174  5047               	movf	i2__doprnt@pb+1,w,c
 12530  002176  22DA               	addwfc	fsr2h,f,c
 12531  002178  D801               	call	i2u1436_48
 12532  00217A  D020               	goto	i2l8800
 12533  00217C                     i2u1436_48:
 12534  00217C  0005               	push	
 12535  00217E  6EFA               	movwf	pclath,c
 12536  002180  50DE               	movf	postinc2,w,c
 12537  002182  6EFD               	movwf	tosl,c
 12538  002184  50DE               	movf	postinc2,w,c
 12539  002186  6EFE               	movwf	tosh,c
 12540  002188  50F8               	movf	tblptru,w,c
 12541  00218A  6EFF               	movwf	tosu,c
 12542  00218C  50FA               	movf	pclath,w,c
 12543  00218E  0E30               	movlw	48
 12544  002190  0012               	return		;indir
 12545  002192                     i2l8796:
 12546  002192  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12547  002196  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12548  00219A  CFDE F04C          	movff	postinc2,??i2__doprnt
 12549  00219E  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12550  0021A2  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12551  0021A6  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12552  0021AA  0E30               	movlw	48
 12553  0021AC  6EDF               	movwf	indf2,c
 12554  0021AE  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12555  0021B2  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12556  0021B6  2ADE               	incf	postinc2,f,c
 12557  0021B8  0E00               	movlw	0
 12558  0021BA  22DD               	addwfc	postdec2,f,c
 12559  0021BC                     i2l8800:
 12560                           
 12561                           ;doprnt.c: 1209: exp--;
 12562  0021BC  0100               	movlb	0	; () banked
 12563  0021BE  0767               	decf	i2__doprnt@exp& (0+255),f,b
 12564  0021C0  A0D8               	btfss	status,0,c
 12565  0021C2  0768               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 12566  0021C4                     i2l8802:
 12567                           
 12568                           ; BSR set to: 0
 12569  0021C4  0100               	movlb	0	; () banked
 12570  0021C6  BF68               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 12571  0021C8  D007               	goto	i2l8804
 12572  0021CA  0100               	movlb	0	; () banked
 12573  0021CC  5168               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 12574  0021CE  E1C4               	bnz	i2l8792
 12575  0021D0  0100               	movlb	0	; () banked
 12576  0021D2  0567               	decf	i2__doprnt@exp& (0+255),w,b
 12577  0021D4  B0D8               	btfsc	status,0,c
 12578  0021D6  D7C0               	goto	i2l8792
 12579  0021D8                     i2l8804:
 12580                           
 12581                           ; BSR set to: 0
 12582                           ;doprnt.c: 1210: }
 12583                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 12584  0021D8  0100               	movlb	0	; () banked
 12585  0021DA  BF75               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 12586  0021DC  D00C               	goto	i2l409
 12587  0021DE  0100               	movlb	0	; () banked
 12588  0021E0  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 12589  0021E2  E105               	bnz	i2u1438_40
 12590  0021E4  0E09               	movlw	9
 12591  0021E6  0100               	movlb	0	; () banked
 12592  0021E8  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 12593  0021EA  A0D8               	btfss	status,0,c
 12594  0021EC  D004               	goto	i2l409
 12595  0021EE                     i2u1438_40:
 12596                           
 12597                           ; BSR set to: 0
 12598                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 12599  0021EE  0E08               	movlw	8
 12600  0021F0  0100               	movlb	0	; () banked
 12601  0021F2  6F76               	movwf	i2__doprnt@c& (0+255),b
 12602  0021F4  D002               	goto	i2l8808
 12603  0021F6                     i2l409:
 12604                           
 12605                           ; BSR set to: 0
 12606                           ;doprnt.c: 1213: else
 12607                           ;doprnt.c: 1214: c = prec;
 12608  0021F6  C074  F076         	movff	i2__doprnt@prec,i2__doprnt@c
 12609  0021FA                     i2l8808:
 12610                           
 12611                           ; BSR set to: 0
 12612                           ;doprnt.c: 1215: prec -= c;
 12613  0021FA  0100               	movlb	0	; () banked
 12614  0021FC  5176               	movf	i2__doprnt@c& (0+255),w,b
 12615  0021FE  0100               	movlb	0	; () banked
 12616  002200  5F74               	subwf	i2__doprnt@prec& (0+255),f,b
 12617  002202  0E00               	movlw	0
 12618  002204  0100               	movlb	0	; () banked
 12619  002206  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 12620  002208  0EFF               	movlw	255
 12621  00220A  0100               	movlb	0	; () banked
 12622  00220C  5B75               	subwfb	(i2__doprnt@prec+1)& (0+255),f,b
 12623                           
 12624                           ; BSR set to: 0
 12625                           ;doprnt.c: 1219: if(c)
 12626  00220E  0100               	movlb	0	; () banked
 12627  002210  5176               	movf	i2__doprnt@c& (0+255),w,b
 12628  002212  0100               	movlb	0	; () banked
 12629  002214  B4D8               	btfsc	status,2,c
 12630  002216  D032               	goto	i2l8820
 12631                           
 12632                           ; BSR set to: 0
 12633                           ;doprnt.c: 1221: if(pb->func) (pb->func('.')); else ((*pb->ptr++ = '.'));
 12634  002218  EE20 F002          	lfsr	2,2
 12635  00221C  5046               	movf	i2__doprnt@pb,w,c
 12636  00221E  26D9               	addwf	fsr2l,f,c
 12637  002220  5047               	movf	i2__doprnt@pb+1,w,c
 12638  002222  22DA               	addwfc	fsr2h,f,c
 12639  002224  50DE               	movf	postinc2,w,c
 12640  002226  10DE               	iorwf	postinc2,w,c
 12641  002228  B4D8               	btfsc	status,2,c
 12642  00222A  D013               	goto	i2l8816
 12643                           
 12644                           ; BSR set to: 0
 12645  00222C  EE20 F002          	lfsr	2,2
 12646  002230  5046               	movf	i2__doprnt@pb,w,c
 12647  002232  26D9               	addwf	fsr2l,f,c
 12648  002234  5047               	movf	i2__doprnt@pb+1,w,c
 12649  002236  22DA               	addwfc	fsr2h,f,c
 12650  002238  D801               	call	i2u1441_48
 12651  00223A  D020               	goto	i2l8820
 12652  00223C                     i2u1441_48:
 12653  00223C  0005               	push	
 12654  00223E  6EFA               	movwf	pclath,c
 12655  002240  50DE               	movf	postinc2,w,c
 12656  002242  6EFD               	movwf	tosl,c
 12657  002244  50DE               	movf	postinc2,w,c
 12658  002246  6EFE               	movwf	tosh,c
 12659  002248  50F8               	movf	tblptru,w,c
 12660  00224A  6EFF               	movwf	tosu,c
 12661  00224C  50FA               	movf	pclath,w,c
 12662  00224E  0E2E               	movlw	46
 12663  002250  0012               	return		;indir
 12664  002252                     i2l8816:
 12665  002252  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12666  002256  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12667  00225A  CFDE F04C          	movff	postinc2,??i2__doprnt
 12668  00225E  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12669  002262  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12670  002266  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12671  00226A  0E2E               	movlw	46
 12672  00226C  6EDF               	movwf	indf2,c
 12673  00226E  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12674  002272  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12675  002276  2ADE               	incf	postinc2,f,c
 12676  002278  0E00               	movlw	0
 12677  00227A  22DD               	addwfc	postdec2,f,c
 12678  00227C                     i2l8820:
 12679                           
 12680                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 12681  00227C  0100               	movlb	0	; () banked
 12682  00227E  5176               	movf	i2__doprnt@c& (0+255),w,b
 12683  002280  EC11  F017         	call	i2_scale
 12684  002284  C030  F060         	movff	?i2_scale,i2__doprnt$1804
 12685  002288  C031  F061         	movff	?i2_scale+1,i2__doprnt$1804+1
 12686  00228C  C032  F062         	movff	?i2_scale+2,i2__doprnt$1804+2
 12687                           
 12688                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 12689  002290  C06D  F024         	movff	i2__doprnt@fval,i2___ftmul@f2
 12690  002294  C06E  F025         	movff	i2__doprnt@fval+1,i2___ftmul@f2+1
 12691  002298  C06F  F026         	movff	i2__doprnt@fval+2,i2___ftmul@f2+2
 12692  00229C  C060  F021         	movff	i2__doprnt$1804,i2___ftmul@f1
 12693  0022A0  C061  F022         	movff	i2__doprnt$1804+1,i2___ftmul@f1+1
 12694  0022A4  C062  F023         	movff	i2__doprnt$1804+2,i2___ftmul@f1+2
 12695  0022A8  EC76  F023         	call	i2___ftmul	;wreg free
 12696  0022AC  C021  F037         	movff	?i2___ftmul,i2___fttol@f1
 12697  0022B0  C022  F038         	movff	?i2___ftmul+1,i2___fttol@f1+1
 12698  0022B4  C023  F039         	movff	?i2___ftmul+2,i2___fttol@f1+2
 12699  0022B8  ECF0  F023         	call	i2___fttol	;wreg free
 12700  0022BC  C037  F063         	movff	?i2___fttol,i2__doprnt@val
 12701  0022C0  C038  F064         	movff	?i2___fttol+1,i2__doprnt@val+1
 12702  0022C4  C039  F065         	movff	?i2___fttol+2,i2__doprnt@val+2
 12703  0022C8  C03A  F066         	movff	?i2___fttol+3,i2__doprnt@val+3
 12704                           
 12705                           ;doprnt.c: 1228: while(c--) {
 12706  0022CC  D09E               	goto	i2l8836
 12707  0022CE                     i2l8824:
 12708                           
 12709                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 12710  0022CE  C063  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 12711  0022D2  C064  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 12712  0022D6  C065  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 12713  0022DA  C066  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 12714  0022DE  0100               	movlb	0	; () banked
 12715  0022E0  5176               	movf	i2__doprnt@c& (0+255),w,b
 12716  0022E2  0D04               	mullw	4
 12717  0022E4  0E01               	movlw	low _dpowers
 12718  0022E6  24F3               	addwf	prodl,w,c
 12719  0022E8  6EF6               	movwf	tblptrl,c
 12720  0022EA  0E06               	movlw	high _dpowers
 12721  0022EC  20F4               	addwfc	prodh,w,c
 12722  0022EE  6EF7               	movwf	tblptrh,c
 12723  0022F0                     	if	0	;There are less than 3 active tblptr bytes
 12724  0022F0                     	endif
 12725  0022F0  0009               	tblrd		*+
 12726  0022F2  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 12727  0022F6  0009               	tblrd		*+
 12728  0022F8  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 12729  0022FC  0009               	tblrd		*+
 12730  0022FE  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 12731  002302  000A               	tblrd		*-
 12732  002304  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 12733  002308  ECD1  F027         	call	i2___lldiv	;wreg free
 12734  00230C  C001  F069         	movff	?i2___lldiv,i2__doprnt@tmpval
 12735  002310  C002  F06A         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 12736  002314  C003  F06B         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 12737  002318  C004  F06C         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 12738                           
 12739                           ;doprnt.c: 1230: tmpval.vd %= 10;
 12740  00231C  C069  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 12741  002320  C06A  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 12742  002324  C06B  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 12743  002328  C06C  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 12744  00232C  0E0A               	movlw	10
 12745  00232E  6E12               	movwf	i2___llmod@divisor,c
 12746  002330  0E00               	movlw	0
 12747  002332  6E13               	movwf	i2___llmod@divisor+1,c
 12748  002334  0E00               	movlw	0
 12749  002336  6E14               	movwf	i2___llmod@divisor+2,c
 12750  002338  0E00               	movlw	0
 12751  00233A  6E15               	movwf	i2___llmod@divisor+3,c
 12752  00233C  ECC5  F028         	call	i2___llmod	;wreg free
 12753  002340  C00E  F069         	movff	?i2___llmod,i2__doprnt@tmpval
 12754  002344  C00F  F06A         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 12755  002348  C010  F06B         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 12756  00234C  C011  F06C         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 12757                           
 12758                           ;doprnt.c: 1231: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 12759  002350  EE20 F002          	lfsr	2,2
 12760  002354  5046               	movf	i2__doprnt@pb,w,c
 12761  002356  26D9               	addwf	fsr2l,f,c
 12762  002358  5047               	movf	i2__doprnt@pb+1,w,c
 12763  00235A  22DA               	addwfc	fsr2h,f,c
 12764  00235C  50DE               	movf	postinc2,w,c
 12765  00235E  10DE               	iorwf	postinc2,w,c
 12766  002360  B4D8               	btfsc	status,2,c
 12767  002362  D015               	goto	i2l8832
 12768  002364  EE20 F002          	lfsr	2,2
 12769  002368  5046               	movf	i2__doprnt@pb,w,c
 12770  00236A  26D9               	addwf	fsr2l,f,c
 12771  00236C  5047               	movf	i2__doprnt@pb+1,w,c
 12772  00236E  22DA               	addwfc	fsr2h,f,c
 12773  002370  D801               	call	i2u1443_48
 12774  002372  D024               	goto	i2l8834
 12775  002374                     i2u1443_48:
 12776  002374  0005               	push	
 12777  002376  6EFA               	movwf	pclath,c
 12778  002378  50DE               	movf	postinc2,w,c
 12779  00237A  6EFD               	movwf	tosl,c
 12780  00237C  50DE               	movf	postinc2,w,c
 12781  00237E  6EFE               	movwf	tosh,c
 12782  002380  50F8               	movf	tblptru,w,c
 12783  002382  6EFF               	movwf	tosu,c
 12784  002384  50FA               	movf	pclath,w,c
 12785  002386  0100               	movlb	0	; () banked
 12786  002388  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 12787  00238A  0F30               	addlw	48
 12788  00238C  0012               	return		;indir
 12789  00238E                     i2l8832:
 12790  00238E  0100               	movlb	0	; () banked
 12791  002390  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 12792  002392  0F30               	addlw	48
 12793  002394  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12794  002398  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12795  00239C  CFDE F04C          	movff	postinc2,??i2__doprnt
 12796  0023A0  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12797  0023A4  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12798  0023A8  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12799  0023AC  6EDF               	movwf	indf2,c
 12800  0023AE  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12801  0023B2  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12802  0023B6  2ADE               	incf	postinc2,f,c
 12803  0023B8  0E00               	movlw	0
 12804  0023BA  22DD               	addwfc	postdec2,f,c
 12805  0023BC                     i2l8834:
 12806                           
 12807                           ;doprnt.c: 1232: val %= dpowers[c];
 12808  0023BC  C063  F00E         	movff	i2__doprnt@val,i2___llmod@dividend
 12809  0023C0  C064  F00F         	movff	i2__doprnt@val+1,i2___llmod@dividend+1
 12810  0023C4  C065  F010         	movff	i2__doprnt@val+2,i2___llmod@dividend+2
 12811  0023C8  C066  F011         	movff	i2__doprnt@val+3,i2___llmod@dividend+3
 12812  0023CC  0100               	movlb	0	; () banked
 12813  0023CE  5176               	movf	i2__doprnt@c& (0+255),w,b
 12814  0023D0  0D04               	mullw	4
 12815  0023D2  0E01               	movlw	low _dpowers
 12816  0023D4  24F3               	addwf	prodl,w,c
 12817  0023D6  6EF6               	movwf	tblptrl,c
 12818  0023D8  0E06               	movlw	high _dpowers
 12819  0023DA  20F4               	addwfc	prodh,w,c
 12820  0023DC  6EF7               	movwf	tblptrh,c
 12821  0023DE                     	if	0	;There are less than 3 active tblptr bytes
 12822  0023DE                     	endif
 12823  0023DE  0009               	tblrd		*+
 12824  0023E0  CFF5 F012          	movff	tablat,i2___llmod@divisor
 12825  0023E4  0009               	tblrd		*+
 12826  0023E6  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 12827  0023EA  0009               	tblrd		*+
 12828  0023EC  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 12829  0023F0  000A               	tblrd		*-
 12830  0023F2  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 12831  0023F6  ECC5  F028         	call	i2___llmod
 12832  0023FA  C00E  F063         	movff	?i2___llmod,i2__doprnt@val
 12833  0023FE  C00F  F064         	movff	?i2___llmod+1,i2__doprnt@val+1
 12834  002402  C010  F065         	movff	?i2___llmod+2,i2__doprnt@val+2
 12835  002406  C011  F066         	movff	?i2___llmod+3,i2__doprnt@val+3
 12836  00240A                     i2l8836:
 12837  00240A  0100               	movlb	0	; () banked
 12838  00240C  0776               	decf	i2__doprnt@c& (0+255),f,b
 12839  00240E  0100               	movlb	0	; () banked
 12840  002410  2976               	incf	i2__doprnt@c& (0+255),w,b
 12841  002412  B4D8               	btfsc	status,2,c
 12842  002414  D037               	goto	i2l8848
 12843  002416  D75B               	goto	i2l8824
 12844  002418                     i2l8838:
 12845                           
 12846                           ; BSR set to: 0
 12847                           ;doprnt.c: 1236: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 12848  002418  EE20 F002          	lfsr	2,2
 12849  00241C  5046               	movf	i2__doprnt@pb,w,c
 12850  00241E  26D9               	addwf	fsr2l,f,c
 12851  002420  5047               	movf	i2__doprnt@pb+1,w,c
 12852  002422  22DA               	addwfc	fsr2h,f,c
 12853  002424  50DE               	movf	postinc2,w,c
 12854  002426  10DE               	iorwf	postinc2,w,c
 12855  002428  B4D8               	btfsc	status,2,c
 12856  00242A  D013               	goto	i2l8842
 12857                           
 12858                           ; BSR set to: 0
 12859  00242C  EE20 F002          	lfsr	2,2
 12860  002430  5046               	movf	i2__doprnt@pb,w,c
 12861  002432  26D9               	addwf	fsr2l,f,c
 12862  002434  5047               	movf	i2__doprnt@pb+1,w,c
 12863  002436  22DA               	addwfc	fsr2h,f,c
 12864  002438  D801               	call	i2u1446_48
 12865  00243A  D020               	goto	i2l8846
 12866  00243C                     i2u1446_48:
 12867  00243C  0005               	push	
 12868  00243E  6EFA               	movwf	pclath,c
 12869  002440  50DE               	movf	postinc2,w,c
 12870  002442  6EFD               	movwf	tosl,c
 12871  002444  50DE               	movf	postinc2,w,c
 12872  002446  6EFE               	movwf	tosh,c
 12873  002448  50F8               	movf	tblptru,w,c
 12874  00244A  6EFF               	movwf	tosu,c
 12875  00244C  50FA               	movf	pclath,w,c
 12876  00244E  0E30               	movlw	48
 12877  002450  0012               	return		;indir
 12878  002452                     i2l8842:
 12879  002452  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12880  002456  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12881  00245A  CFDE F04C          	movff	postinc2,??i2__doprnt
 12882  00245E  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12883  002462  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12884  002466  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12885  00246A  0E30               	movlw	48
 12886  00246C  6EDF               	movwf	indf2,c
 12887  00246E  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12888  002472  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12889  002476  2ADE               	incf	postinc2,f,c
 12890  002478  0E00               	movlw	0
 12891  00247A  22DD               	addwfc	postdec2,f,c
 12892  00247C                     i2l8846:
 12893                           
 12894                           ;doprnt.c: 1237: prec--;
 12895  00247C  0100               	movlb	0	; () banked
 12896  00247E  0774               	decf	i2__doprnt@prec& (0+255),f,b
 12897  002480  A0D8               	btfss	status,0,c
 12898  002482  0775               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 12899  002484                     i2l8848:
 12900                           
 12901                           ; BSR set to: 0
 12902  002484  0100               	movlb	0	; () banked
 12903  002486  5174               	movf	i2__doprnt@prec& (0+255),w,b
 12904  002488  0100               	movlb	0	; () banked
 12905  00248A  1175               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 12906  00248C  B4D8               	btfsc	status,2,c
 12907  00248E  D25F               	goto	i2l8960
 12908  002490  D7C3               	goto	i2l8838
 12909  002492                     i2l357:
 12910                           
 12911                           ; BSR set to: 0
 12912                           ;doprnt.c: 1246: }
 12913                           ;doprnt.c: 1273: {
 12914                           ;doprnt.c: 1281: if(flag & 0x10)
 12915  002492  0100               	movlb	0	; () banked
 12916  002494  A970               	btfss	i2__doprnt@flag& (0+255),4,b
 12917  002496  D019               	goto	i2l8852
 12918                           
 12919                           ; BSR set to: 0
 12920                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 12921  002498  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 12922  00249C  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 12923  0024A0  CFDF F04C          	movff	indf2,??i2__doprnt
 12924  0024A4  0E04               	movlw	4
 12925  0024A6  26DE               	addwf	postinc2,f,c
 12926  0024A8  CFDF F04D          	movff	indf2,??i2__doprnt+1
 12927  0024AC  0E00               	movlw	0
 12928  0024AE  22DD               	addwfc	postdec2,f,c
 12929  0024B0  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12930  0024B4  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12931  0024B8  CFDE F063          	movff	postinc2,i2__doprnt@val
 12932  0024BC  CFDE F064          	movff	postinc2,i2__doprnt@val+1
 12933  0024C0  CFDE F065          	movff	postinc2,i2__doprnt@val+2
 12934  0024C4  CFDE F066          	movff	postinc2,i2__doprnt@val+3
 12935  0024C8  D01B               	goto	i2l8854
 12936  0024CA                     i2l8852:
 12937                           
 12938                           ; BSR set to: 0
 12939                           ;doprnt.c: 1283: else
 12940                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 12941  0024CA  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 12942  0024CE  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 12943  0024D2  CFDF F04C          	movff	indf2,??i2__doprnt
 12944  0024D6  0E02               	movlw	2
 12945  0024D8  26DE               	addwf	postinc2,f,c
 12946  0024DA  CFDF F04D          	movff	indf2,??i2__doprnt+1
 12947  0024DE  0E00               	movlw	0
 12948  0024E0  22DD               	addwfc	postdec2,f,c
 12949  0024E2  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12950  0024E6  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12951  0024EA  CFDE F04E          	movff	postinc2,??i2__doprnt+2
 12952  0024EE  CFDD F04F          	movff	postdec2,??i2__doprnt+3
 12953  0024F2  C04E  F063         	movff	??i2__doprnt+2,i2__doprnt@val
 12954  0024F6  C04F  F064         	movff	??i2__doprnt+3,i2__doprnt@val+1
 12955  0024FA  0100               	movlb	0	; () banked
 12956  0024FC  6B65               	clrf	(i2__doprnt@val+2)& (0+255),b
 12957  0024FE  6B66               	clrf	(i2__doprnt@val+3)& (0+255),b
 12958  002500                     i2l8854:
 12959                           
 12960                           ; BSR set to: 0
 12961                           ;doprnt.c: 1287: }
 12962                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 12963  002500  0100               	movlb	0	; () banked
 12964  002502  5174               	movf	i2__doprnt@prec& (0+255),w,b
 12965  002504  0100               	movlb	0	; () banked
 12966  002506  1175               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 12967  002508  A4D8               	btfss	status,2,c
 12968  00250A  D00D               	goto	i2l8860
 12969                           
 12970                           ; BSR set to: 0
 12971  00250C  0100               	movlb	0	; () banked
 12972  00250E  5163               	movf	i2__doprnt@val& (0+255),w,b
 12973  002510  0100               	movlb	0	; () banked
 12974  002512  1164               	iorwf	(i2__doprnt@val+1)& (0+255),w,b
 12975  002514  0100               	movlb	0	; () banked
 12976  002516  1165               	iorwf	(i2__doprnt@val+2)& (0+255),w,b
 12977  002518  0100               	movlb	0	; () banked
 12978  00251A  1166               	iorwf	(i2__doprnt@val+3)& (0+255),w,b
 12979  00251C  A4D8               	btfss	status,2,c
 12980  00251E  D003               	goto	i2l8860
 12981                           
 12982                           ; BSR set to: 0
 12983                           ;doprnt.c: 1291: prec++;
 12984  002520  0100               	movlb	0	; () banked
 12985  002522  4B74               	infsnz	i2__doprnt@prec& (0+255),f,b
 12986  002524  2B75               	incf	(i2__doprnt@prec+1)& (0+255),f,b
 12987  002526                     i2l8860:
 12988                           
 12989                           ; BSR set to: 0
 12990                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 12991  002526  0E01               	movlw	1
 12992  002528  0100               	movlb	0	; () banked
 12993  00252A  6F76               	movwf	i2__doprnt@c& (0+255),b
 12994  00252C                     i2l8862:
 12995                           
 12996                           ; BSR set to: 0
 12997  00252C  0E0A               	movlw	10
 12998  00252E  0100               	movlb	0	; () banked
 12999  002530  1976               	xorwf	i2__doprnt@c& (0+255),w,b
 13000  002532  B4D8               	btfsc	status,2,c
 13001  002534  D01E               	goto	i2l8874
 13002                           
 13003                           ; BSR set to: 0
 13004                           ;doprnt.c: 1306: if(val < dpowers[c])
 13005                           
 13006                           ; BSR set to: 0
 13007                           
 13008                           ; BSR set to: 0
 13009  002536  0100               	movlb	0	; () banked
 13010  002538  5176               	movf	i2__doprnt@c& (0+255),w,b
 13011  00253A  0D04               	mullw	4
 13012  00253C  0E01               	movlw	low _dpowers
 13013  00253E  24F3               	addwf	prodl,w,c
 13014  002540  6EF6               	movwf	tblptrl,c
 13015  002542  0E06               	movlw	high _dpowers
 13016  002544  20F4               	addwfc	prodh,w,c
 13017  002546  6EF7               	movwf	tblptrh,c
 13018  002548                     	if	0	;There are less than 3 active tblptr bytes
 13019  002548                     	endif
 13020  002548  0009               	tblrd		*+
 13021  00254A  50F5               	movf	tablat,w,c
 13022  00254C  0100               	movlb	0	; () banked
 13023  00254E  5D63               	subwf	i2__doprnt@val& (0+255),w,b
 13024  002550  0009               	tblrd		*+
 13025  002552  50F5               	movf	tablat,w,c
 13026  002554  0100               	movlb	0	; () banked
 13027  002556  5964               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 13028  002558  0009               	tblrd		*+
 13029  00255A  50F5               	movf	tablat,w,c
 13030  00255C  0100               	movlb	0	; () banked
 13031  00255E  5965               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 13032  002560  0009               	tblrd		*+
 13033  002562  50F5               	movf	tablat,w,c
 13034  002564  0100               	movlb	0	; () banked
 13035  002566  5966               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 13036  002568  A0D8               	btfss	status,0,c
 13037  00256A  D003               	goto	i2l8874
 13038                           
 13039                           ; BSR set to: 0
 13040                           
 13041                           ; BSR set to: 0
 13042                           
 13043                           ; BSR set to: 0
 13044                           ;doprnt.c: 1307: break;
 13045  00256C  0100               	movlb	0	; () banked
 13046  00256E  2B76               	incf	i2__doprnt@c& (0+255),f,b
 13047  002570  D7DD               	goto	i2l8862
 13048  002572                     i2l8874:
 13049                           
 13050                           ; BSR set to: 0
 13051                           ;doprnt.c: 1339: if(c < prec)
 13052  002572  0E80               	movlw	128
 13053  002574  0100               	movlb	0	; () banked
 13054  002576  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 13055  002578  0E7F               	movlw	127
 13056  00257A  6E4C               	movwf	??i2__doprnt& (0+255),c
 13057  00257C  0100               	movlb	0	; () banked
 13058  00257E  5174               	movf	i2__doprnt@prec& (0+255),w,b
 13059  002580  0100               	movlb	0	; () banked
 13060  002582  5D76               	subwf	i2__doprnt@c& (0+255),w,b
 13061  002584  0100               	movlb	0	; () banked
 13062  002586  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 13063  002588  0A80               	xorlw	128
 13064  00258A  584C               	subwfb	??i2__doprnt& (0+255),w,c
 13065  00258C  B0D8               	btfsc	status,0,c
 13066  00258E  D003               	goto	i2l8878
 13067                           
 13068                           ; BSR set to: 0
 13069                           ;doprnt.c: 1340: c = prec;
 13070  002590  C074  F076         	movff	i2__doprnt@prec,i2__doprnt@c
 13071  002594  D016               	goto	i2l8882
 13072  002596                     i2l8878:
 13073                           
 13074                           ; BSR set to: 0
 13075                           ;doprnt.c: 1341: else if(prec < c)
 13076  002596  0100               	movlb	0	; () banked
 13077  002598  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 13078  00259A  0A80               	xorlw	128
 13079  00259C  6E4C               	movwf	??i2__doprnt& (0+255),c
 13080  00259E  0100               	movlb	0	; () banked
 13081  0025A0  5176               	movf	i2__doprnt@c& (0+255),w,b
 13082  0025A2  0100               	movlb	0	; () banked
 13083  0025A4  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 13084  0025A6  0E80               	movlw	128
 13085  0025A8  0100               	movlb	0	; () banked
 13086  0025AA  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 13087  0025AC  0E7F               	movlw	127
 13088  0025AE  584C               	subwfb	??i2__doprnt& (0+255),w,c
 13089  0025B0  B0D8               	btfsc	status,0,c
 13090  0025B2  D007               	goto	i2l8882
 13091                           
 13092                           ; BSR set to: 0
 13093                           ;doprnt.c: 1342: prec = c;
 13094  0025B4  0100               	movlb	0	; () banked
 13095  0025B6  5176               	movf	i2__doprnt@c& (0+255),w,b
 13096  0025B8  0100               	movlb	0	; () banked
 13097  0025BA  6F74               	movwf	i2__doprnt@prec& (0+255),b
 13098  0025BC  6B75               	clrf	(i2__doprnt@prec+1)& (0+255),b
 13099  0025BE  BF74               	btfsc	i2__doprnt@prec& (0+255),7,b
 13100  0025C0  0775               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 13101  0025C2                     i2l8882:
 13102                           
 13103                           ; BSR set to: 0
 13104                           ;doprnt.c: 1345: if(width && flag & 0x03)
 13105  0025C2  0100               	movlb	0	; () banked
 13106  0025C4  5172               	movf	i2__doprnt@width& (0+255),w,b
 13107  0025C6  0100               	movlb	0	; () banked
 13108  0025C8  1173               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 13109  0025CA  B4D8               	btfsc	status,2,c
 13110  0025CC  D010               	goto	i2l8888
 13111                           
 13112                           ; BSR set to: 0
 13113  0025CE  0E03               	movlw	3
 13114  0025D0  0100               	movlb	0	; () banked
 13115  0025D2  1570               	andwf	i2__doprnt@flag& (0+255),w,b
 13116  0025D4  6E4C               	movwf	??i2__doprnt& (0+255),c
 13117  0025D6  0E00               	movlw	0
 13118  0025D8  0100               	movlb	0	; () banked
 13119  0025DA  1571               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 13120  0025DC  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 13121  0025DE  504C               	movf	??i2__doprnt,w,c
 13122  0025E0  104D               	iorwf	??i2__doprnt+1,w,c
 13123  0025E2  B4D8               	btfsc	status,2,c
 13124  0025E4  D004               	goto	i2l8888
 13125                           
 13126                           ; BSR set to: 0
 13127                           ;doprnt.c: 1346: width--;
 13128  0025E6  0100               	movlb	0	; () banked
 13129  0025E8  0772               	decf	i2__doprnt@width& (0+255),f,b
 13130  0025EA  A0D8               	btfss	status,0,c
 13131  0025EC  0773               	decf	(i2__doprnt@width+1)& (0+255),f,b
 13132  0025EE                     i2l8888:
 13133                           
 13134                           ; BSR set to: 0
 13135                           ;doprnt.c: 1348: if(flag & 0x4000) {
 13136  0025EE  0100               	movlb	0	; () banked
 13137  0025F0  AD71               	btfss	(i2__doprnt@flag+1)& (0+255),6,b
 13138  0025F2  D01C               	goto	i2l8896
 13139                           
 13140                           ; BSR set to: 0
 13141                           ;doprnt.c: 1349: if(width > prec)
 13142  0025F4  0100               	movlb	0	; () banked
 13143  0025F6  5172               	movf	i2__doprnt@width& (0+255),w,b
 13144  0025F8  0100               	movlb	0	; () banked
 13145  0025FA  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 13146  0025FC  0100               	movlb	0	; () banked
 13147  0025FE  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 13148  002600  0A80               	xorlw	128
 13149  002602  6E4C               	movwf	??i2__doprnt& (0+255),c
 13150  002604  0100               	movlb	0	; () banked
 13151  002606  5173               	movf	(i2__doprnt@width+1)& (0+255),w,b
 13152  002608  0A80               	xorlw	128
 13153  00260A  584C               	subwfb	??i2__doprnt& (0+255),w,c
 13154  00260C  B0D8               	btfsc	status,0,c
 13155  00260E  D009               	goto	i2l8894
 13156                           
 13157                           ; BSR set to: 0
 13158                           ;doprnt.c: 1350: width -= prec;
 13159  002610  0100               	movlb	0	; () banked
 13160  002612  5174               	movf	i2__doprnt@prec& (0+255),w,b
 13161  002614  0100               	movlb	0	; () banked
 13162  002616  5F72               	subwf	i2__doprnt@width& (0+255),f,b
 13163  002618  0100               	movlb	0	; () banked
 13164  00261A  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 13165  00261C  0100               	movlb	0	; () banked
 13166  00261E  5B73               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 13167  002620  D005               	goto	i2l8896
 13168  002622                     i2l8894:
 13169                           
 13170                           ; BSR set to: 0
 13171                           ;doprnt.c: 1351: else
 13172                           ;doprnt.c: 1352: width = 0;
 13173  002622  0E00               	movlw	0
 13174  002624  0100               	movlb	0	; () banked
 13175  002626  6F73               	movwf	(i2__doprnt@width+1)& (0+255),b
 13176  002628  0E00               	movlw	0
 13177  00262A  6F72               	movwf	i2__doprnt@width& (0+255),b
 13178  00262C                     i2l8896:
 13179                           
 13180                           ; BSR set to: 0
 13181                           ;doprnt.c: 1353: }
 13182                           ;doprnt.c: 1381: if(width > c)
 13183  00262C  0E80               	movlw	128
 13184  00262E  0100               	movlb	0	; () banked
 13185  002630  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 13186  002632  0E7F               	movlw	127
 13187  002634  6E4C               	movwf	??i2__doprnt& (0+255),c
 13188  002636  0100               	movlb	0	; () banked
 13189  002638  5172               	movf	i2__doprnt@width& (0+255),w,b
 13190  00263A  0100               	movlb	0	; () banked
 13191  00263C  5D76               	subwf	i2__doprnt@c& (0+255),w,b
 13192  00263E  0100               	movlb	0	; () banked
 13193  002640  5173               	movf	(i2__doprnt@width+1)& (0+255),w,b
 13194  002642  0A80               	xorlw	128
 13195  002644  584C               	subwfb	??i2__doprnt& (0+255),w,c
 13196  002646  B0D8               	btfsc	status,0,c
 13197  002648  D00B               	goto	i2l8900
 13198                           
 13199                           ; BSR set to: 0
 13200                           ;doprnt.c: 1382: width -= c;
 13201  00264A  0100               	movlb	0	; () banked
 13202  00264C  5176               	movf	i2__doprnt@c& (0+255),w,b
 13203  00264E  0100               	movlb	0	; () banked
 13204  002650  5F72               	subwf	i2__doprnt@width& (0+255),f,b
 13205  002652  0E00               	movlw	0
 13206  002654  0100               	movlb	0	; () banked
 13207  002656  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 13208  002658  0EFF               	movlw	255
 13209  00265A  0100               	movlb	0	; () banked
 13210  00265C  5B73               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 13211  00265E  D005               	goto	i2l8902
 13212  002660                     i2l8900:
 13213                           
 13214                           ; BSR set to: 0
 13215                           ;doprnt.c: 1383: else
 13216                           ;doprnt.c: 1384: width = 0;
 13217  002660  0E00               	movlw	0
 13218  002662  0100               	movlb	0	; () banked
 13219  002664  6F73               	movwf	(i2__doprnt@width+1)& (0+255),b
 13220  002666  0E00               	movlw	0
 13221  002668  6F72               	movwf	i2__doprnt@width& (0+255),b
 13222  00266A                     i2l8902:
 13223                           
 13224                           ; BSR set to: 0
 13225                           ;doprnt.c: 1387: if(flag & 0x04) {
 13226  00266A  0100               	movlb	0	; () banked
 13227  00266C  A570               	btfss	i2__doprnt@flag& (0+255),2,b
 13228  00266E  D07B               	goto	i2l8926
 13229                           
 13230                           ; BSR set to: 0
 13231                           ;doprnt.c: 1392: if(flag & 0x03)
 13232  002670  0E03               	movlw	3
 13233  002672  0100               	movlb	0	; () banked
 13234  002674  1570               	andwf	i2__doprnt@flag& (0+255),w,b
 13235  002676  6E4C               	movwf	??i2__doprnt& (0+255),c
 13236  002678  0E00               	movlw	0
 13237  00267A  0100               	movlb	0	; () banked
 13238  00267C  1571               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 13239  00267E  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 13240  002680  504C               	movf	??i2__doprnt,w,c
 13241  002682  104D               	iorwf	??i2__doprnt+1,w,c
 13242  002684  B4D8               	btfsc	status,2,c
 13243  002686  D032               	goto	i2l8914
 13244                           
 13245                           ; BSR set to: 0
 13246                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 13247  002688  EE20 F002          	lfsr	2,2
 13248  00268C  5046               	movf	i2__doprnt@pb,w,c
 13249  00268E  26D9               	addwf	fsr2l,f,c
 13250  002690  5047               	movf	i2__doprnt@pb+1,w,c
 13251  002692  22DA               	addwfc	fsr2h,f,c
 13252  002694  50DE               	movf	postinc2,w,c
 13253  002696  10DE               	iorwf	postinc2,w,c
 13254  002698  B4D8               	btfsc	status,2,c
 13255  00269A  D013               	goto	i2l8910
 13256                           
 13257                           ; BSR set to: 0
 13258  00269C  EE20 F002          	lfsr	2,2
 13259  0026A0  5046               	movf	i2__doprnt@pb,w,c
 13260  0026A2  26D9               	addwf	fsr2l,f,c
 13261  0026A4  5047               	movf	i2__doprnt@pb+1,w,c
 13262  0026A6  22DA               	addwfc	fsr2h,f,c
 13263  0026A8  D801               	call	i2u1464_48
 13264  0026AA  D020               	goto	i2l8914
 13265  0026AC                     i2u1464_48:
 13266  0026AC  0005               	push	
 13267  0026AE  6EFA               	movwf	pclath,c
 13268  0026B0  50DE               	movf	postinc2,w,c
 13269  0026B2  6EFD               	movwf	tosl,c
 13270  0026B4  50DE               	movf	postinc2,w,c
 13271  0026B6  6EFE               	movwf	tosh,c
 13272  0026B8  50F8               	movf	tblptru,w,c
 13273  0026BA  6EFF               	movwf	tosu,c
 13274  0026BC  50FA               	movf	pclath,w,c
 13275  0026BE  0E2D               	movlw	45
 13276  0026C0  0012               	return		;indir
 13277  0026C2                     i2l8910:
 13278  0026C2  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13279  0026C6  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13280  0026CA  CFDE F04C          	movff	postinc2,??i2__doprnt
 13281  0026CE  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13282  0026D2  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13283  0026D6  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13284  0026DA  0E2D               	movlw	45
 13285  0026DC  6EDF               	movwf	indf2,c
 13286  0026DE  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13287  0026E2  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13288  0026E6  2ADE               	incf	postinc2,f,c
 13289  0026E8  0E00               	movlw	0
 13290  0026EA  22DD               	addwfc	postdec2,f,c
 13291  0026EC                     i2l8914:
 13292                           
 13293                           ;doprnt.c: 1415: if(width)
 13294  0026EC  0100               	movlb	0	; () banked
 13295  0026EE  5172               	movf	i2__doprnt@width& (0+255),w,b
 13296  0026F0  0100               	movlb	0	; () banked
 13297  0026F2  1173               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 13298  0026F4  B4D8               	btfsc	status,2,c
 13299  0026F6  D120               	goto	i2l8958
 13300                           
 13301                           ; BSR set to: 0
 13302                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 13303                           
 13304                           ; BSR set to: 0
 13305                           
 13306                           ;doprnt.c: 1416: do
 13307  0026F8  EE20 F002          	lfsr	2,2
 13308  0026FC  5046               	movf	i2__doprnt@pb,w,c
 13309  0026FE  26D9               	addwf	fsr2l,f,c
 13310  002700  5047               	movf	i2__doprnt@pb+1,w,c
 13311  002702  22DA               	addwfc	fsr2h,f,c
 13312  002704  50DE               	movf	postinc2,w,c
 13313  002706  10DE               	iorwf	postinc2,w,c
 13314  002708  B4D8               	btfsc	status,2,c
 13315  00270A  D013               	goto	i2l8920
 13316                           
 13317                           ; BSR set to: 0
 13318  00270C  EE20 F002          	lfsr	2,2
 13319  002710  5046               	movf	i2__doprnt@pb,w,c
 13320  002712  26D9               	addwf	fsr2l,f,c
 13321  002714  5047               	movf	i2__doprnt@pb+1,w,c
 13322  002716  22DA               	addwfc	fsr2h,f,c
 13323  002718  D801               	call	i2u1467_48
 13324  00271A  D020               	goto	i2l8924
 13325  00271C                     i2u1467_48:
 13326  00271C  0005               	push	
 13327  00271E  6EFA               	movwf	pclath,c
 13328  002720  50DE               	movf	postinc2,w,c
 13329  002722  6EFD               	movwf	tosl,c
 13330  002724  50DE               	movf	postinc2,w,c
 13331  002726  6EFE               	movwf	tosh,c
 13332  002728  50F8               	movf	tblptru,w,c
 13333  00272A  6EFF               	movwf	tosu,c
 13334  00272C  50FA               	movf	pclath,w,c
 13335  00272E  0E30               	movlw	48
 13336  002730  0012               	return		;indir
 13337  002732                     i2l8920:
 13338  002732  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13339  002736  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13340  00273A  CFDE F04C          	movff	postinc2,??i2__doprnt
 13341  00273E  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13342  002742  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13343  002746  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13344  00274A  0E30               	movlw	48
 13345  00274C  6EDF               	movwf	indf2,c
 13346  00274E  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13347  002752  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13348  002756  2ADE               	incf	postinc2,f,c
 13349  002758  0E00               	movlw	0
 13350  00275A  22DD               	addwfc	postdec2,f,c
 13351  00275C                     i2l8924:
 13352                           
 13353                           ;doprnt.c: 1418: while(--width);
 13354  00275C  0100               	movlb	0	; () banked
 13355  00275E  0772               	decf	i2__doprnt@width& (0+255),f,b
 13356  002760  A0D8               	btfss	status,0,c
 13357  002762  0773               	decf	(i2__doprnt@width+1)& (0+255),f,b
 13358  002764  D7C3               	goto	i2l8914
 13359  002766                     i2l8926:
 13360                           
 13361                           ; BSR set to: 0
 13362                           ;doprnt.c: 1422: {
 13363                           ;doprnt.c: 1424: if(width
 13364                           ;doprnt.c: 1428: )
 13365  002766  0100               	movlb	0	; () banked
 13366  002768  5172               	movf	i2__doprnt@width& (0+255),w,b
 13367  00276A  0100               	movlb	0	; () banked
 13368  00276C  1173               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 13369  00276E  B4D8               	btfsc	status,2,c
 13370  002770  D03C               	goto	i2l8938
 13371  002772                     i2l8928:
 13372                           
 13373                           ; BSR set to: 0
 13374                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 13375  002772  EE20 F002          	lfsr	2,2
 13376  002776  5046               	movf	i2__doprnt@pb,w,c
 13377  002778  26D9               	addwf	fsr2l,f,c
 13378  00277A  5047               	movf	i2__doprnt@pb+1,w,c
 13379  00277C  22DA               	addwfc	fsr2h,f,c
 13380  00277E  50DE               	movf	postinc2,w,c
 13381  002780  10DE               	iorwf	postinc2,w,c
 13382  002782  B4D8               	btfsc	status,2,c
 13383  002784  D013               	goto	i2l8932
 13384                           
 13385                           ; BSR set to: 0
 13386  002786  EE20 F002          	lfsr	2,2
 13387  00278A  5046               	movf	i2__doprnt@pb,w,c
 13388  00278C  26D9               	addwf	fsr2l,f,c
 13389  00278E  5047               	movf	i2__doprnt@pb+1,w,c
 13390  002790  22DA               	addwfc	fsr2h,f,c
 13391  002792  D801               	call	i2u1471_48
 13392  002794  D020               	goto	i2l8936
 13393  002796                     i2u1471_48:
 13394  002796  0005               	push	
 13395  002798  6EFA               	movwf	pclath,c
 13396  00279A  50DE               	movf	postinc2,w,c
 13397  00279C  6EFD               	movwf	tosl,c
 13398  00279E  50DE               	movf	postinc2,w,c
 13399  0027A0  6EFE               	movwf	tosh,c
 13400  0027A2  50F8               	movf	tblptru,w,c
 13401  0027A4  6EFF               	movwf	tosu,c
 13402  0027A6  50FA               	movf	pclath,w,c
 13403  0027A8  0E20               	movlw	32
 13404  0027AA  0012               	return		;indir
 13405  0027AC                     i2l8932:
 13406  0027AC  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13407  0027B0  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13408  0027B4  CFDE F04C          	movff	postinc2,??i2__doprnt
 13409  0027B8  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13410  0027BC  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13411  0027C0  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13412  0027C4  0E20               	movlw	32
 13413  0027C6  6EDF               	movwf	indf2,c
 13414  0027C8  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13415  0027CC  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13416  0027D0  2ADE               	incf	postinc2,f,c
 13417  0027D2  0E00               	movlw	0
 13418  0027D4  22DD               	addwfc	postdec2,f,c
 13419  0027D6                     i2l8936:
 13420                           
 13421                           ;doprnt.c: 1431: while(--width);
 13422  0027D6  0100               	movlb	0	; () banked
 13423  0027D8  0772               	decf	i2__doprnt@width& (0+255),f,b
 13424  0027DA  A0D8               	btfss	status,0,c
 13425  0027DC  0773               	decf	(i2__doprnt@width+1)& (0+255),f,b
 13426  0027DE  0100               	movlb	0	; () banked
 13427  0027E0  5172               	movf	i2__doprnt@width& (0+255),w,b
 13428  0027E2  0100               	movlb	0	; () banked
 13429  0027E4  1173               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 13430  0027E6  A4D8               	btfss	status,2,c
 13431  0027E8  D7C4               	goto	i2l8928
 13432  0027EA                     i2l8938:
 13433                           
 13434                           ; BSR set to: 0
 13435                           ;doprnt.c: 1438: if(flag & 0x03)
 13436  0027EA  0E03               	movlw	3
 13437  0027EC  0100               	movlb	0	; () banked
 13438  0027EE  1570               	andwf	i2__doprnt@flag& (0+255),w,b
 13439  0027F0  6E4C               	movwf	??i2__doprnt& (0+255),c
 13440  0027F2  0E00               	movlw	0
 13441  0027F4  0100               	movlb	0	; () banked
 13442  0027F6  1571               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 13443  0027F8  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 13444  0027FA  504C               	movf	??i2__doprnt,w,c
 13445  0027FC  104D               	iorwf	??i2__doprnt+1,w,c
 13446  0027FE  B4D8               	btfsc	status,2,c
 13447  002800  D09B               	goto	i2l8958
 13448                           
 13449                           ; BSR set to: 0
 13450                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 13451  002802  EE20 F002          	lfsr	2,2
 13452  002806  5046               	movf	i2__doprnt@pb,w,c
 13453  002808  26D9               	addwf	fsr2l,f,c
 13454  00280A  5047               	movf	i2__doprnt@pb+1,w,c
 13455  00280C  22DA               	addwfc	fsr2h,f,c
 13456  00280E  50DE               	movf	postinc2,w,c
 13457  002810  10DE               	iorwf	postinc2,w,c
 13458  002812  B4D8               	btfsc	status,2,c
 13459  002814  D013               	goto	i2l8944
 13460                           
 13461                           ; BSR set to: 0
 13462  002816  EE20 F002          	lfsr	2,2
 13463  00281A  5046               	movf	i2__doprnt@pb,w,c
 13464  00281C  26D9               	addwf	fsr2l,f,c
 13465  00281E  5047               	movf	i2__doprnt@pb+1,w,c
 13466  002820  22DA               	addwfc	fsr2h,f,c
 13467  002822  D801               	call	i2u1475_48
 13468  002824  D089               	goto	i2l8958
 13469  002826                     i2u1475_48:
 13470  002826  0005               	push	
 13471  002828  6EFA               	movwf	pclath,c
 13472  00282A  50DE               	movf	postinc2,w,c
 13473  00282C  6EFD               	movwf	tosl,c
 13474  00282E  50DE               	movf	postinc2,w,c
 13475  002830  6EFE               	movwf	tosh,c
 13476  002832  50F8               	movf	tblptru,w,c
 13477  002834  6EFF               	movwf	tosu,c
 13478  002836  50FA               	movf	pclath,w,c
 13479  002838  0E2D               	movlw	45
 13480  00283A  0012               	return		;indir
 13481  00283C                     i2l8944:
 13482  00283C  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13483  002840  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13484  002844  CFDE F04C          	movff	postinc2,??i2__doprnt
 13485  002848  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13486  00284C  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13487  002850  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13488  002854  0E2D               	movlw	45
 13489  002856  6EDF               	movwf	indf2,c
 13490  002858  D068               	goto	i2l8956
 13491  00285A                     i2l8948:
 13492                           
 13493                           ;doprnt.c: 1478: {
 13494                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 13495  00285A  C074  F04C         	movff	i2__doprnt@prec,??i2__doprnt
 13496  00285E  C075  F04D         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 13497  002862  90D8               	bcf	status,0,c
 13498  002864  364C               	rlcf	??i2__doprnt,f,c
 13499  002866  364D               	rlcf	??i2__doprnt+1,f,c
 13500  002868  90D8               	bcf	status,0,c
 13501  00286A  364C               	rlcf	??i2__doprnt,f,c
 13502  00286C  364D               	rlcf	??i2__doprnt+1,f,c
 13503  00286E  0E01               	movlw	low _dpowers
 13504  002870  244C               	addwf	??i2__doprnt,w,c
 13505  002872  6EF6               	movwf	tblptrl,c
 13506  002874  0E06               	movlw	high _dpowers
 13507  002876  204D               	addwfc	??i2__doprnt+1,w,c
 13508  002878  6EF7               	movwf	tblptrh,c
 13509  00287A                     	if	0	;There are less than 3 active tblptr bytes
 13510  00287A                     	endif
 13511  00287A  0009               	tblrd		*+
 13512  00287C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 13513  002880  0009               	tblrd		*+
 13514  002882  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 13515  002886  0009               	tblrd		*+
 13516  002888  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 13517  00288C  000A               	tblrd		*-
 13518  00288E  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 13519  002892  C063  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 13520  002896  C064  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 13521  00289A  C065  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 13522  00289E  C066  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 13523  0028A2  ECD1  F027         	call	i2___lldiv
 13524  0028A6  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 13525  0028AA  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 13526  0028AE  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 13527  0028B2  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 13528  0028B6  0E0A               	movlw	10
 13529  0028B8  6E12               	movwf	i2___llmod@divisor,c
 13530  0028BA  0E00               	movlw	0
 13531  0028BC  6E13               	movwf	i2___llmod@divisor+1,c
 13532  0028BE  0E00               	movlw	0
 13533  0028C0  6E14               	movwf	i2___llmod@divisor+2,c
 13534  0028C2  0E00               	movlw	0
 13535  0028C4  6E15               	movwf	i2___llmod@divisor+3,c
 13536  0028C6  ECC5  F028         	call	i2___llmod	;wreg free
 13537  0028CA  500E               	movf	?i2___llmod,w,c
 13538  0028CC  0F30               	addlw	48
 13539  0028CE  0100               	movlb	0	; () banked
 13540  0028D0  6F76               	movwf	i2__doprnt@c& (0+255),b
 13541                           
 13542                           ; BSR set to: 0
 13543                           ;doprnt.c: 1523: }
 13544                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 13545  0028D2  EE20 F002          	lfsr	2,2
 13546  0028D6  5046               	movf	i2__doprnt@pb,w,c
 13547  0028D8  26D9               	addwf	fsr2l,f,c
 13548  0028DA  5047               	movf	i2__doprnt@pb+1,w,c
 13549  0028DC  22DA               	addwfc	fsr2h,f,c
 13550  0028DE  50DE               	movf	postinc2,w,c
 13551  0028E0  10DE               	iorwf	postinc2,w,c
 13552  0028E2  B4D8               	btfsc	status,2,c
 13553  0028E4  D014               	goto	i2l8954
 13554                           
 13555                           ; BSR set to: 0
 13556  0028E6  EE20 F002          	lfsr	2,2
 13557  0028EA  5046               	movf	i2__doprnt@pb,w,c
 13558  0028EC  26D9               	addwf	fsr2l,f,c
 13559  0028EE  5047               	movf	i2__doprnt@pb+1,w,c
 13560  0028F0  22DA               	addwfc	fsr2h,f,c
 13561  0028F2  D801               	call	i2u1477_48
 13562  0028F4  D021               	goto	i2l8958
 13563  0028F6                     i2u1477_48:
 13564  0028F6  0005               	push	
 13565  0028F8  6EFA               	movwf	pclath,c
 13566  0028FA  50DE               	movf	postinc2,w,c
 13567  0028FC  6EFD               	movwf	tosl,c
 13568  0028FE  50DE               	movf	postinc2,w,c
 13569  002900  6EFE               	movwf	tosh,c
 13570  002902  50F8               	movf	tblptru,w,c
 13571  002904  6EFF               	movwf	tosu,c
 13572  002906  50FA               	movf	pclath,w,c
 13573  002908  0100               	movlb	0	; () banked
 13574  00290A  5176               	movf	i2__doprnt@c& (0+255),w,b
 13575  00290C  0012               	return		;indir
 13576  00290E                     i2l8954:
 13577  00290E  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13578  002912  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13579  002916  CFDE F04C          	movff	postinc2,??i2__doprnt
 13580  00291A  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13581  00291E  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13582  002922  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13583  002926  C076  FFDF         	movff	i2__doprnt@c,indf2
 13584  00292A                     i2l8956:
 13585  00292A  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13586  00292E  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13587  002932  2ADE               	incf	postinc2,f,c
 13588  002934  0E00               	movlw	0
 13589  002936  22DD               	addwfc	postdec2,f,c
 13590  002938                     i2l8958:
 13591  002938  0100               	movlb	0	; () banked
 13592  00293A  0774               	decf	i2__doprnt@prec& (0+255),f,b
 13593  00293C  A0D8               	btfss	status,0,c
 13594  00293E  0775               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 13595  002940  0100               	movlb	0	; () banked
 13596  002942  2974               	incf	i2__doprnt@prec& (0+255),w,b
 13597  002944  E18A               	bnz	i2l8948
 13598  002946  0100               	movlb	0	; () banked
 13599  002948  2975               	incf	(i2__doprnt@prec+1)& (0+255),w,b
 13600  00294A  A4D8               	btfss	status,2,c
 13601  00294C  D786               	goto	i2l8948
 13602  00294E                     i2l8960:
 13603  00294E  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 13604  002952  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 13605  002956  4A48               	infsnz	i2__doprnt@f,f,c
 13606  002958  2A49               	incf	i2__doprnt@f+1,f,c
 13607  00295A                     	if	0	;tblptru may be non-zero
 13608  00295A                     	endif
 13609  00295A                     	if	0	;tblptru may be non-zero
 13610  00295A                     	endif
 13611  00295A  0008               	tblrd		*
 13612  00295C  CFF5 F076          	movff	tablat,i2__doprnt@c
 13613  002960  0100               	movlb	0	; () banked
 13614  002962  5176               	movf	i2__doprnt@c& (0+255),w,b
 13615  002964  A4D8               	btfss	status,2,c
 13616  002966  EF4E  F00C         	goto	i2l8584
 13617  00296A                     i2l8962:
 13618                           
 13619                           ; BSR set to: 0
 13620                           ;doprnt.c: 1540: return 0;
 13621  00296A  0E00               	movlw	0
 13622  00296C  6E47               	movwf	?i2__doprnt+1,c
 13623  00296E  0E00               	movlw	0
 13624  002970  6E46               	movwf	?i2__doprnt,c
 13625  002972  0012               	return	
 13626  002974                     __end_ofi2__doprnt:
 13627                           	opt stack 0
 13628                           tosu	equ	0xFFF
 13629                           tosh	equ	0xFFE
 13630                           tosl	equ	0xFFD
 13631                           pclatu	equ	0xFFB
 13632                           pclath	equ	0xFFA
 13633                           tblptru	equ	0xFF8
 13634                           tblptrh	equ	0xFF7
 13635                           tblptrl	equ	0xFF6
 13636                           tablat	equ	0xFF5
 13637                           prodh	equ	0xFF4
 13638                           prodl	equ	0xFF3
 13639                           intcon	equ	0xFF2
 13640                           intcon2	equ	0xFF1
 13641                           postinc0	equ	0xFEE
 13642                           fsr0h	equ	0xFEA
 13643                           fsr0l	equ	0xFE9
 13644                           wreg	equ	0xFE8
 13645                           fsr1h	equ	0xFE2
 13646                           fsr1l	equ	0xFE1
 13647                           indf2	equ	0xFDF
 13648                           postinc2	equ	0xFDE
 13649                           postdec2	equ	0xFDD
 13650                           fsr2h	equ	0xFDA
 13651                           fsr2l	equ	0xFD9
 13652                           status	equ	0xFD8
 13653                           
 13654 ;; *************** function i2_scale *****************
 13655 ;; Defined at:
 13656 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 13657 ;; Parameters:    Size  Location     Type
 13658 ;;  scl             1    wreg     char 
 13659 ;; Auto vars:     Size  Location     Type
 13660 ;;  scl             1   53[COMRAM] char 
 13661 ;; Return value:  Size  Location     Type
 13662 ;;                  3   47[COMRAM] char 
 13663 ;; Registers used:
 13664 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13665 ;; Tracked objects:
 13666 ;;		On entry : 0/0
 13667 ;;		On exit  : 0/0
 13668 ;;		Unchanged: 0/0
 13669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13670 ;;      Params:         3       0       0       0       0       0       0
 13671 ;;      Locals:         4       0       0       0       0       0       0
 13672 ;;      Temps:          0       0       0       0       0       0       0
 13673 ;;      Totals:         7       0       0       0       0       0       0
 13674 ;;Total ram usage:        7 bytes
 13675 ;; Hardware stack levels used:    1
 13676 ;; Hardware stack levels required when called:    2
 13677 ;; This function calls:
 13678 ;;		i2___awdiv
 13679 ;;		i2___awmod
 13680 ;;		i2___ftmul
 13681 ;;		i2___wmul
 13682 ;; This function is called by:
 13683 ;;		i2__doprnt
 13684 ;; This function uses a non-reentrant model
 13685 ;;
 13686                           
 13687                           	psect	text48
 13688  002E22                     __ptext48:
 13689                           	opt stack 0
 13690  002E22                     i2_scale:
 13691                           	opt stack 19
 13692                           
 13693                           ; BSR set to: 0
 13694                           ;incstack = 0
 13695                           ;i2scale@scl stored from wreg
 13696  002E22  6E36               	movwf	i2scale@scl,c
 13697                           
 13698                           ;doprnt.c: 428: if(scl < 0) {
 13699  002E24  AE36               	btfss	i2scale@scl,7,c
 13700  002E26  D0FB               	goto	i2l4012
 13701                           
 13702                           ;doprnt.c: 429: scl = -scl;
 13703  002E28  6C36               	negf	i2scale@scl,c
 13704                           
 13705                           ;doprnt.c: 430: if(scl>=110)
 13706  002E2A  5036               	movf	i2scale@scl,w,c
 13707  002E2C  0A80               	xorlw	128
 13708  002E2E  0F12               	addlw	-238
 13709  002E30  A0D8               	btfss	status,0,c
 13710  002E32  D091               	goto	i2l4002
 13711                           
 13712                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 13713  002E34  0E00               	movlw	0
 13714  002E36  6E12               	movwf	i2___wmul@multiplicand+1,c
 13715  002E38  0E03               	movlw	3
 13716  002E3A  6E11               	movwf	i2___wmul@multiplicand,c
 13717  002E3C  0E00               	movlw	0
 13718  002E3E  6E0A               	movwf	i2___awdiv@divisor+1,c
 13719  002E40  0E0A               	movlw	10
 13720  002E42  6E09               	movwf	i2___awdiv@divisor,c
 13721  002E44  0E00               	movlw	0
 13722  002E46  6E04               	movwf	i2___awmod@divisor+1,c
 13723  002E48  0E64               	movlw	100
 13724  002E4A  6E03               	movwf	i2___awmod@divisor,c
 13725  002E4C  5036               	movf	i2scale@scl,w,c
 13726  002E4E  6E01               	movwf	i2___awmod@dividend,c
 13727  002E50  6A02               	clrf	i2___awmod@dividend+1,c
 13728  002E52  BE01               	btfsc	i2___awmod@dividend,7,c
 13729  002E54  0602               	decf	i2___awmod@dividend+1,f,c
 13730  002E56  EC8D  F028         	call	i2___awmod
 13731  002E5A  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 13732  002E5E  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 13733  002E62  EC8F  F027         	call	i2___awdiv	;wreg free
 13734  002E66  0E09               	movlw	9
 13735  002E68  2407               	addwf	?i2___awdiv,w,c
 13736  002E6A  6E0F               	movwf	i2___wmul@multiplier,c
 13737  002E6C  0E00               	movlw	0
 13738  002E6E  2008               	addwfc	?i2___awdiv+1,w,c
 13739  002E70  6E10               	movwf	i2___wmul@multiplier+1,c
 13740  002E72  ECFC  F02A         	call	i2___wmul	;wreg free
 13741  002E76  0E29               	movlw	low __npowers_
 13742  002E78  240F               	addwf	?i2___wmul,w,c
 13743  002E7A  6EF6               	movwf	tblptrl,c
 13744  002E7C  0E06               	movlw	high __npowers_
 13745  002E7E  2010               	addwfc	?i2___wmul+1,w,c
 13746  002E80  6EF7               	movwf	tblptrh,c
 13747  002E82                     	if	0	;There are less than 3 active tblptr bytes
 13748  002E82                     	endif
 13749  002E82  0009               	tblrd		*+
 13750  002E84  CFF5 F024          	movff	tablat,i2___ftmul@f2
 13751  002E88  0009               	tblrd		*+
 13752  002E8A  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 13753  002E8E  000A               	tblrd		*-
 13754  002E90  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 13755  002E94  0E00               	movlw	0
 13756  002E96  6E0A               	movwf	i2___awdiv@divisor+1,c
 13757  002E98  0E64               	movlw	100
 13758  002E9A  6E09               	movwf	i2___awdiv@divisor,c
 13759  002E9C  5036               	movf	i2scale@scl,w,c
 13760  002E9E  6E07               	movwf	i2___awdiv@dividend,c
 13761  002EA0  6A08               	clrf	i2___awdiv@dividend+1,c
 13762  002EA2  BE07               	btfsc	i2___awdiv@dividend,7,c
 13763  002EA4  0608               	decf	i2___awdiv@dividend+1,f,c
 13764  002EA6  EC8F  F027         	call	i2___awdiv	;wreg free
 13765  002EAA  0E12               	movlw	18
 13766  002EAC  2407               	addwf	?i2___awdiv,w,c
 13767  002EAE  6E0F               	movwf	i2___wmul@multiplier,c
 13768  002EB0  0E00               	movlw	0
 13769  002EB2  2008               	addwfc	?i2___awdiv+1,w,c
 13770  002EB4  6E10               	movwf	i2___wmul@multiplier+1,c
 13771  002EB6  0E00               	movlw	0
 13772  002EB8  6E12               	movwf	i2___wmul@multiplicand+1,c
 13773  002EBA  0E03               	movlw	3
 13774  002EBC  6E11               	movwf	i2___wmul@multiplicand,c
 13775  002EBE  ECFC  F02A         	call	i2___wmul	;wreg free
 13776  002EC2  0E29               	movlw	low __npowers_
 13777  002EC4  240F               	addwf	?i2___wmul,w,c
 13778  002EC6  6EF6               	movwf	tblptrl,c
 13779  002EC8  0E06               	movlw	high __npowers_
 13780  002ECA  2010               	addwfc	?i2___wmul+1,w,c
 13781  002ECC  6EF7               	movwf	tblptrh,c
 13782  002ECE                     	if	0	;There are less than 3 active tblptr bytes
 13783  002ECE                     	endif
 13784  002ECE  0009               	tblrd		*+
 13785  002ED0  CFF5 F021          	movff	tablat,i2___ftmul@f1
 13786  002ED4  0009               	tblrd		*+
 13787  002ED6  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 13788  002EDA  000A               	tblrd		*-
 13789  002EDC  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 13790  002EE0  EC76  F023         	call	i2___ftmul	;wreg free
 13791  002EE4  C021  F033         	movff	?i2___ftmul,i2_scale$1803
 13792  002EE8  C022  F034         	movff	?i2___ftmul+1,i2_scale$1803+1
 13793  002EEC  C023  F035         	movff	?i2___ftmul+2,i2_scale$1803+2
 13794                           
 13795                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 13796  002EF0  C033  F021         	movff	i2_scale$1803,i2___ftmul@f1
 13797  002EF4  C034  F022         	movff	i2_scale$1803+1,i2___ftmul@f1+1
 13798  002EF8  C035  F023         	movff	i2_scale$1803+2,i2___ftmul@f1+2
 13799  002EFC  0E00               	movlw	0
 13800  002EFE  6E12               	movwf	i2___wmul@multiplicand+1,c
 13801  002F00  0E03               	movlw	3
 13802  002F02  6E11               	movwf	i2___wmul@multiplicand,c
 13803  002F04  0E00               	movlw	0
 13804  002F06  6E04               	movwf	i2___awmod@divisor+1,c
 13805  002F08  0E0A               	movlw	10
 13806  002F0A  6E03               	movwf	i2___awmod@divisor,c
 13807  002F0C  5036               	movf	i2scale@scl,w,c
 13808  002F0E  6E01               	movwf	i2___awmod@dividend,c
 13809  002F10  6A02               	clrf	i2___awmod@dividend+1,c
 13810  002F12  BE01               	btfsc	i2___awmod@dividend,7,c
 13811  002F14  0602               	decf	i2___awmod@dividend+1,f,c
 13812  002F16  EC8D  F028         	call	i2___awmod	;wreg free
 13813  002F1A  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 13814  002F1E  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 13815  002F22  ECFC  F02A         	call	i2___wmul	;wreg free
 13816  002F26  0E29               	movlw	low __npowers_
 13817  002F28  240F               	addwf	?i2___wmul,w,c
 13818  002F2A  6EF6               	movwf	tblptrl,c
 13819  002F2C  0E06               	movlw	high __npowers_
 13820  002F2E  2010               	addwfc	?i2___wmul+1,w,c
 13821  002F30  6EF7               	movwf	tblptrh,c
 13822  002F32                     	if	0	;There are less than 3 active tblptr bytes
 13823  002F32                     	endif
 13824  002F32  0009               	tblrd		*+
 13825  002F34  CFF5 F024          	movff	tablat,i2___ftmul@f2
 13826  002F38  0009               	tblrd		*+
 13827  002F3A  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 13828  002F3E  000A               	tblrd		*-
 13829  002F40  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 13830  002F44  EC76  F023         	call	i2___ftmul	;wreg free
 13831  002F48  C021  F030         	movff	?i2___ftmul,?i2_scale
 13832  002F4C  C022  F031         	movff	?i2___ftmul+1,?i2_scale+1
 13833  002F50  C023  F032         	movff	?i2___ftmul+2,?i2_scale+2
 13834  002F54  0012               	return	
 13835  002F56                     i2l4002:
 13836                           
 13837                           ;doprnt.c: 432: else if(scl > 10)
 13838  002F56  5036               	movf	i2scale@scl,w,c
 13839  002F58  0A80               	xorlw	128
 13840  002F5A  0F75               	addlw	-139
 13841  002F5C  A0D8               	btfss	status,0,c
 13842  002F5E  D04D               	goto	i2l4008
 13843                           
 13844                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 13845  002F60  0E00               	movlw	0
 13846  002F62  6E0A               	movwf	i2___awdiv@divisor+1,c
 13847  002F64  0E0A               	movlw	10
 13848  002F66  6E09               	movwf	i2___awdiv@divisor,c
 13849  002F68  5036               	movf	i2scale@scl,w,c
 13850  002F6A  6E07               	movwf	i2___awdiv@dividend,c
 13851  002F6C  6A08               	clrf	i2___awdiv@dividend+1,c
 13852  002F6E  BE07               	btfsc	i2___awdiv@dividend,7,c
 13853  002F70  0608               	decf	i2___awdiv@dividend+1,f,c
 13854  002F72  EC8F  F027         	call	i2___awdiv	;wreg free
 13855  002F76  0E09               	movlw	9
 13856  002F78  2407               	addwf	?i2___awdiv,w,c
 13857  002F7A  6E0F               	movwf	i2___wmul@multiplier,c
 13858  002F7C  0E00               	movlw	0
 13859  002F7E  2008               	addwfc	?i2___awdiv+1,w,c
 13860  002F80  6E10               	movwf	i2___wmul@multiplier+1,c
 13861  002F82  0E00               	movlw	0
 13862  002F84  6E12               	movwf	i2___wmul@multiplicand+1,c
 13863  002F86  0E03               	movlw	3
 13864  002F88  6E11               	movwf	i2___wmul@multiplicand,c
 13865  002F8A  ECFC  F02A         	call	i2___wmul	;wreg free
 13866  002F8E  0E29               	movlw	low __npowers_
 13867  002F90  240F               	addwf	?i2___wmul,w,c
 13868  002F92  6EF6               	movwf	tblptrl,c
 13869  002F94  0E06               	movlw	high __npowers_
 13870  002F96  2010               	addwfc	?i2___wmul+1,w,c
 13871  002F98  6EF7               	movwf	tblptrh,c
 13872  002F9A                     	if	0	;There are less than 3 active tblptr bytes
 13873  002F9A                     	endif
 13874  002F9A  0009               	tblrd		*+
 13875  002F9C  CFF5 F021          	movff	tablat,i2___ftmul@f1
 13876  002FA0  0009               	tblrd		*+
 13877  002FA2  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 13878  002FA6  000A               	tblrd		*-
 13879  002FA8  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 13880  002FAC  0E00               	movlw	0
 13881  002FAE  6E12               	movwf	i2___wmul@multiplicand+1,c
 13882  002FB0  0E03               	movlw	3
 13883  002FB2  6E11               	movwf	i2___wmul@multiplicand,c
 13884  002FB4  0E00               	movlw	0
 13885  002FB6  6E04               	movwf	i2___awmod@divisor+1,c
 13886  002FB8  0E0A               	movlw	10
 13887  002FBA  6E03               	movwf	i2___awmod@divisor,c
 13888  002FBC  5036               	movf	i2scale@scl,w,c
 13889  002FBE  6E01               	movwf	i2___awmod@dividend,c
 13890  002FC0  6A02               	clrf	i2___awmod@dividend+1,c
 13891  002FC2  BE01               	btfsc	i2___awmod@dividend,7,c
 13892  002FC4  0602               	decf	i2___awmod@dividend+1,f,c
 13893  002FC6  EC8D  F028         	call	i2___awmod	;wreg free
 13894  002FCA  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 13895  002FCE  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 13896  002FD2  ECFC  F02A         	call	i2___wmul	;wreg free
 13897  002FD6  0E29               	movlw	low __npowers_
 13898  002FD8  240F               	addwf	?i2___wmul,w,c
 13899  002FDA  6EF6               	movwf	tblptrl,c
 13900  002FDC  0E06               	movlw	high __npowers_
 13901  002FDE  2010               	addwfc	?i2___wmul+1,w,c
 13902  002FE0  6EF7               	movwf	tblptrh,c
 13903  002FE2                     	if	0	;There are less than 3 active tblptr bytes
 13904  002FE2                     	endif
 13905  002FE2  0009               	tblrd		*+
 13906  002FE4  CFF5 F024          	movff	tablat,i2___ftmul@f2
 13907  002FE8  0009               	tblrd		*+
 13908  002FEA  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 13909  002FEE  000A               	tblrd		*-
 13910  002FF0  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 13911  002FF4  EC76  F023         	call	i2___ftmul	;wreg free
 13912  002FF8  D7A7               	goto	L8
 13913  002FFA                     i2l4008:
 13914                           
 13915                           ;doprnt.c: 434: return _npowers_[scl];
 13916  002FFA  5036               	movf	i2scale@scl,w,c
 13917  002FFC  0D03               	mullw	3
 13918  002FFE  0E29               	movlw	low __npowers_
 13919  003000  24F3               	addwf	prodl,w,c
 13920  003002  6EF6               	movwf	tblptrl,c
 13921  003004  0E06               	movlw	high __npowers_
 13922  003006  20F4               	addwfc	prodh,w,c
 13923  003008  6EF7               	movwf	tblptrh,c
 13924  00300A                     	if	0	;There are less than 3 active tblptr bytes
 13925  00300A                     	endif
 13926  00300A  0009               	tblrd		*+
 13927  00300C  CFF5 F030          	movff	tablat,?i2_scale
 13928  003010  0009               	tblrd		*+
 13929  003012  CFF5 F031          	movff	tablat,?i2_scale+1
 13930  003016  000A               	tblrd		*-
 13931  003018  CFF5 F032          	movff	tablat,?i2_scale+2
 13932  00301C  0012               	return	
 13933  00301E                     i2l4012:
 13934                           
 13935                           ;doprnt.c: 435: }
 13936                           ;doprnt.c: 436: if(scl>=110)
 13937  00301E  5036               	movf	i2scale@scl,w,c
 13938  003020  0A80               	xorlw	128
 13939  003022  0F12               	addlw	-238
 13940  003024  A0D8               	btfss	status,0,c
 13941  003026  D091               	goto	i2l4020
 13942                           
 13943                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 13944  003028  0E00               	movlw	0
 13945  00302A  6E12               	movwf	i2___wmul@multiplicand+1,c
 13946  00302C  0E03               	movlw	3
 13947  00302E  6E11               	movwf	i2___wmul@multiplicand,c
 13948  003030  0E00               	movlw	0
 13949  003032  6E0A               	movwf	i2___awdiv@divisor+1,c
 13950  003034  0E0A               	movlw	10
 13951  003036  6E09               	movwf	i2___awdiv@divisor,c
 13952  003038  0E00               	movlw	0
 13953  00303A  6E04               	movwf	i2___awmod@divisor+1,c
 13954  00303C  0E64               	movlw	100
 13955  00303E  6E03               	movwf	i2___awmod@divisor,c
 13956  003040  5036               	movf	i2scale@scl,w,c
 13957  003042  6E01               	movwf	i2___awmod@dividend,c
 13958  003044  6A02               	clrf	i2___awmod@dividend+1,c
 13959  003046  BE01               	btfsc	i2___awmod@dividend,7,c
 13960  003048  0602               	decf	i2___awmod@dividend+1,f,c
 13961  00304A  EC8D  F028         	call	i2___awmod	;wreg free
 13962  00304E  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 13963  003052  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 13964  003056  EC8F  F027         	call	i2___awdiv	;wreg free
 13965  00305A  0E09               	movlw	9
 13966  00305C  2407               	addwf	?i2___awdiv,w,c
 13967  00305E  6E0F               	movwf	i2___wmul@multiplier,c
 13968  003060  0E00               	movlw	0
 13969  003062  2008               	addwfc	?i2___awdiv+1,w,c
 13970  003064  6E10               	movwf	i2___wmul@multiplier+1,c
 13971  003066  ECFC  F02A         	call	i2___wmul	;wreg free
 13972  00306A  0E50               	movlw	low __powers_
 13973  00306C  240F               	addwf	?i2___wmul,w,c
 13974  00306E  6EF6               	movwf	tblptrl,c
 13975  003070  0E06               	movlw	high __powers_
 13976  003072  2010               	addwfc	?i2___wmul+1,w,c
 13977  003074  6EF7               	movwf	tblptrh,c
 13978  003076                     	if	0	;There are less than 3 active tblptr bytes
 13979  003076                     	endif
 13980  003076  0009               	tblrd		*+
 13981  003078  CFF5 F024          	movff	tablat,i2___ftmul@f2
 13982  00307C  0009               	tblrd		*+
 13983  00307E  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 13984  003082  000A               	tblrd		*-
 13985  003084  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 13986  003088  0E00               	movlw	0
 13987  00308A  6E0A               	movwf	i2___awdiv@divisor+1,c
 13988  00308C  0E64               	movlw	100
 13989  00308E  6E09               	movwf	i2___awdiv@divisor,c
 13990  003090  5036               	movf	i2scale@scl,w,c
 13991  003092  6E07               	movwf	i2___awdiv@dividend,c
 13992  003094  6A08               	clrf	i2___awdiv@dividend+1,c
 13993  003096  BE07               	btfsc	i2___awdiv@dividend,7,c
 13994  003098  0608               	decf	i2___awdiv@dividend+1,f,c
 13995  00309A  EC8F  F027         	call	i2___awdiv	;wreg free
 13996  00309E  0E12               	movlw	18
 13997  0030A0  2407               	addwf	?i2___awdiv,w,c
 13998  0030A2  6E0F               	movwf	i2___wmul@multiplier,c
 13999  0030A4  0E00               	movlw	0
 14000  0030A6  2008               	addwfc	?i2___awdiv+1,w,c
 14001  0030A8  6E10               	movwf	i2___wmul@multiplier+1,c
 14002  0030AA  0E00               	movlw	0
 14003  0030AC  6E12               	movwf	i2___wmul@multiplicand+1,c
 14004  0030AE  0E03               	movlw	3
 14005  0030B0  6E11               	movwf	i2___wmul@multiplicand,c
 14006  0030B2  ECFC  F02A         	call	i2___wmul	;wreg free
 14007  0030B6  0E50               	movlw	low __powers_
 14008  0030B8  240F               	addwf	?i2___wmul,w,c
 14009  0030BA  6EF6               	movwf	tblptrl,c
 14010  0030BC  0E06               	movlw	high __powers_
 14011  0030BE  2010               	addwfc	?i2___wmul+1,w,c
 14012  0030C0  6EF7               	movwf	tblptrh,c
 14013  0030C2                     	if	0	;There are less than 3 active tblptr bytes
 14014  0030C2                     	endif
 14015  0030C2  0009               	tblrd		*+
 14016  0030C4  CFF5 F021          	movff	tablat,i2___ftmul@f1
 14017  0030C8  0009               	tblrd		*+
 14018  0030CA  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 14019  0030CE  000A               	tblrd		*-
 14020  0030D0  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 14021  0030D4  EC76  F023         	call	i2___ftmul	;wreg free
 14022  0030D8  C021  F033         	movff	?i2___ftmul,i2_scale$1803
 14023  0030DC  C022  F034         	movff	?i2___ftmul+1,i2_scale$1803+1
 14024  0030E0  C023  F035         	movff	?i2___ftmul+2,i2_scale$1803+2
 14025                           
 14026                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 14027  0030E4  C033  F021         	movff	i2_scale$1803,i2___ftmul@f1
 14028  0030E8  C034  F022         	movff	i2_scale$1803+1,i2___ftmul@f1+1
 14029  0030EC  C035  F023         	movff	i2_scale$1803+2,i2___ftmul@f1+2
 14030  0030F0  0E00               	movlw	0
 14031  0030F2  6E12               	movwf	i2___wmul@multiplicand+1,c
 14032  0030F4  0E03               	movlw	3
 14033  0030F6  6E11               	movwf	i2___wmul@multiplicand,c
 14034  0030F8  0E00               	movlw	0
 14035  0030FA  6E04               	movwf	i2___awmod@divisor+1,c
 14036  0030FC  0E0A               	movlw	10
 14037  0030FE  6E03               	movwf	i2___awmod@divisor,c
 14038  003100  5036               	movf	i2scale@scl,w,c
 14039  003102  6E01               	movwf	i2___awmod@dividend,c
 14040  003104  6A02               	clrf	i2___awmod@dividend+1,c
 14041  003106  BE01               	btfsc	i2___awmod@dividend,7,c
 14042  003108  0602               	decf	i2___awmod@dividend+1,f,c
 14043  00310A  EC8D  F028         	call	i2___awmod	;wreg free
 14044  00310E  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 14045  003112  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14046  003116  ECFC  F02A         	call	i2___wmul	;wreg free
 14047  00311A  0E50               	movlw	low __powers_
 14048  00311C  240F               	addwf	?i2___wmul,w,c
 14049  00311E  6EF6               	movwf	tblptrl,c
 14050  003120  0E06               	movlw	high __powers_
 14051  003122  2010               	addwfc	?i2___wmul+1,w,c
 14052  003124  6EF7               	movwf	tblptrh,c
 14053  003126                     	if	0	;There are less than 3 active tblptr bytes
 14054  003126                     	endif
 14055  003126  0009               	tblrd		*+
 14056  003128  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14057  00312C  0009               	tblrd		*+
 14058  00312E  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14059  003132  000A               	tblrd		*-
 14060  003134  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14061  003138  EC76  F023         	call	i2___ftmul	;wreg free
 14062  00313C  C021  F030         	movff	?i2___ftmul,?i2_scale
 14063  003140  C022  F031         	movff	?i2___ftmul+1,?i2_scale+1
 14064  003144  C023  F032         	movff	?i2___ftmul+2,?i2_scale+2
 14065  003148  0012               	return	
 14066  00314A                     i2l4020:
 14067                           
 14068                           ;doprnt.c: 438: else if(scl > 10)
 14069  00314A  5036               	movf	i2scale@scl,w,c
 14070  00314C  0A80               	xorlw	128
 14071  00314E  0F75               	addlw	-139
 14072  003150  A0D8               	btfss	status,0,c
 14073  003152  D04D               	goto	i2l4026
 14074                           
 14075                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 14076  003154  0E00               	movlw	0
 14077  003156  6E0A               	movwf	i2___awdiv@divisor+1,c
 14078  003158  0E0A               	movlw	10
 14079  00315A  6E09               	movwf	i2___awdiv@divisor,c
 14080  00315C  5036               	movf	i2scale@scl,w,c
 14081  00315E  6E07               	movwf	i2___awdiv@dividend,c
 14082  003160  6A08               	clrf	i2___awdiv@dividend+1,c
 14083  003162  BE07               	btfsc	i2___awdiv@dividend,7,c
 14084  003164  0608               	decf	i2___awdiv@dividend+1,f,c
 14085  003166  EC8F  F027         	call	i2___awdiv	;wreg free
 14086  00316A  0E09               	movlw	9
 14087  00316C  2407               	addwf	?i2___awdiv,w,c
 14088  00316E  6E0F               	movwf	i2___wmul@multiplier,c
 14089  003170  0E00               	movlw	0
 14090  003172  2008               	addwfc	?i2___awdiv+1,w,c
 14091  003174  6E10               	movwf	i2___wmul@multiplier+1,c
 14092  003176  0E00               	movlw	0
 14093  003178  6E12               	movwf	i2___wmul@multiplicand+1,c
 14094  00317A  0E03               	movlw	3
 14095  00317C  6E11               	movwf	i2___wmul@multiplicand,c
 14096  00317E  ECFC  F02A         	call	i2___wmul	;wreg free
 14097  003182  0E50               	movlw	low __powers_
 14098  003184  240F               	addwf	?i2___wmul,w,c
 14099  003186  6EF6               	movwf	tblptrl,c
 14100  003188  0E06               	movlw	high __powers_
 14101  00318A  2010               	addwfc	?i2___wmul+1,w,c
 14102  00318C  6EF7               	movwf	tblptrh,c
 14103  00318E                     	if	0	;There are less than 3 active tblptr bytes
 14104  00318E                     	endif
 14105  00318E  0009               	tblrd		*+
 14106  003190  CFF5 F021          	movff	tablat,i2___ftmul@f1
 14107  003194  0009               	tblrd		*+
 14108  003196  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 14109  00319A  000A               	tblrd		*-
 14110  00319C  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 14111  0031A0  0E00               	movlw	0
 14112  0031A2  6E12               	movwf	i2___wmul@multiplicand+1,c
 14113  0031A4  0E03               	movlw	3
 14114  0031A6  6E11               	movwf	i2___wmul@multiplicand,c
 14115  0031A8  0E00               	movlw	0
 14116  0031AA  6E04               	movwf	i2___awmod@divisor+1,c
 14117  0031AC  0E0A               	movlw	10
 14118  0031AE  6E03               	movwf	i2___awmod@divisor,c
 14119  0031B0  5036               	movf	i2scale@scl,w,c
 14120  0031B2  6E01               	movwf	i2___awmod@dividend,c
 14121  0031B4  6A02               	clrf	i2___awmod@dividend+1,c
 14122  0031B6  BE01               	btfsc	i2___awmod@dividend,7,c
 14123  0031B8  0602               	decf	i2___awmod@dividend+1,f,c
 14124  0031BA  EC8D  F028         	call	i2___awmod	;wreg free
 14125  0031BE  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 14126  0031C2  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14127  0031C6  ECFC  F02A         	call	i2___wmul	;wreg free
 14128  0031CA  0E50               	movlw	low __powers_
 14129  0031CC  240F               	addwf	?i2___wmul,w,c
 14130  0031CE  6EF6               	movwf	tblptrl,c
 14131  0031D0  0E06               	movlw	high __powers_
 14132  0031D2  2010               	addwfc	?i2___wmul+1,w,c
 14133  0031D4  6EF7               	movwf	tblptrh,c
 14134  0031D6                     	if	0	;There are less than 3 active tblptr bytes
 14135  0031D6                     	endif
 14136  0031D6  0009               	tblrd		*+
 14137  0031D8  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14138  0031DC  0009               	tblrd		*+
 14139  0031DE  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14140  0031E2  000A               	tblrd		*-
 14141  0031E4  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14142  0031E8  EC76  F023         	call	i2___ftmul	;wreg free
 14143  0031EC  D7A7               	goto	L9
 14144  0031EE                     i2l4026:
 14145                           
 14146                           ;doprnt.c: 440: return _powers_[scl];
 14147  0031EE  5036               	movf	i2scale@scl,w,c
 14148  0031F0  0D03               	mullw	3
 14149  0031F2  0E50               	movlw	low __powers_
 14150  0031F4  24F3               	addwf	prodl,w,c
 14151  0031F6  6EF6               	movwf	tblptrl,c
 14152  0031F8  0E06               	movlw	high __powers_
 14153  0031FA  20F4               	addwfc	prodh,w,c
 14154  0031FC  6EF7               	movwf	tblptrh,c
 14155  0031FE                     	if	0	;There are less than 3 active tblptr bytes
 14156  0031FE                     	endif
 14157  0031FE  0009               	tblrd		*+
 14158  003200  CFF5 F030          	movff	tablat,?i2_scale
 14159  003204  0009               	tblrd		*+
 14160  003206  CFF5 F031          	movff	tablat,?i2_scale+1
 14161  00320A  000A               	tblrd		*-
 14162  00320C  CFF5 F032          	movff	tablat,?i2_scale+2
 14163  003210  0012               	return	
 14164  003212                     __end_ofi2_scale:
 14165                           	opt stack 0
 14166                           tosu	equ	0xFFF
 14167                           tosh	equ	0xFFE
 14168                           tosl	equ	0xFFD
 14169                           pclatu	equ	0xFFB
 14170                           pclath	equ	0xFFA
 14171                           tblptru	equ	0xFF8
 14172                           tblptrh	equ	0xFF7
 14173                           tblptrl	equ	0xFF6
 14174                           tablat	equ	0xFF5
 14175                           prodh	equ	0xFF4
 14176                           prodl	equ	0xFF3
 14177                           intcon	equ	0xFF2
 14178                           intcon2	equ	0xFF1
 14179                           postinc0	equ	0xFEE
 14180                           fsr0h	equ	0xFEA
 14181                           fsr0l	equ	0xFE9
 14182                           wreg	equ	0xFE8
 14183                           fsr1h	equ	0xFE2
 14184                           fsr1l	equ	0xFE1
 14185                           indf2	equ	0xFDF
 14186                           postinc2	equ	0xFDE
 14187                           postdec2	equ	0xFDD
 14188                           fsr2h	equ	0xFDA
 14189                           fsr2l	equ	0xFD9
 14190                           status	equ	0xFD8
 14191                           
 14192 ;; *************** function i2_putch *****************
 14193 ;; Defined at:
 14194 ;;		line 111 in file "mcc_generated_files/eusart1.c"
 14195 ;; Parameters:    Size  Location     Type
 14196 ;;  txData          1    wreg     unsigned char 
 14197 ;; Auto vars:     Size  Location     Type
 14198 ;;  txData          1    1[COMRAM] unsigned char 
 14199 ;; Return value:  Size  Location     Type
 14200 ;;                  1    wreg      void 
 14201 ;; Registers used:
 14202 ;;		wreg, status,2, cstack
 14203 ;; Tracked objects:
 14204 ;;		On entry : 0/0
 14205 ;;		On exit  : 0/0
 14206 ;;		Unchanged: 0/0
 14207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14208 ;;      Params:         0       0       0       0       0       0       0
 14209 ;;      Locals:         1       0       0       0       0       0       0
 14210 ;;      Temps:          0       0       0       0       0       0       0
 14211 ;;      Totals:         1       0       0       0       0       0       0
 14212 ;;Total ram usage:        1 bytes
 14213 ;; Hardware stack levels used:    1
 14214 ;; Hardware stack levels required when called:    1
 14215 ;; This function calls:
 14216 ;;		i2_EUSART1_Write
 14217 ;; This function is called by:
 14218 ;;		_printf
 14219 ;; This function uses a non-reentrant model
 14220 ;;
 14221                           
 14222                           	psect	text49
 14223  005752                     __ptext49:
 14224                           	opt stack 0
 14225  005752                     i2_putch:
 14226                           	opt stack 20
 14227                           
 14228                           ;incstack = 0
 14229                           ;i2putch@txData stored from wreg
 14230  005752  6E02               	movwf	i2putch@txData,c
 14231                           
 14232                           ;eusart1.c: 113: EUSART1_Write(txData);
 14233  005754  5002               	movf	i2putch@txData,w,c
 14234  005756  EC93  F02B         	call	i2_EUSART1_Write
 14235  00575A  0012               	return		;funcret
 14236  00575C                     __end_ofi2_putch:
 14237                           	opt stack 0
 14238                           tosu	equ	0xFFF
 14239                           tosh	equ	0xFFE
 14240                           tosl	equ	0xFFD
 14241                           pclatu	equ	0xFFB
 14242                           pclath	equ	0xFFA
 14243                           tblptru	equ	0xFF8
 14244                           tblptrh	equ	0xFF7
 14245                           tblptrl	equ	0xFF6
 14246                           tablat	equ	0xFF5
 14247                           prodh	equ	0xFF4
 14248                           prodl	equ	0xFF3
 14249                           intcon	equ	0xFF2
 14250                           intcon2	equ	0xFF1
 14251                           postinc0	equ	0xFEE
 14252                           fsr0h	equ	0xFEA
 14253                           fsr0l	equ	0xFE9
 14254                           wreg	equ	0xFE8
 14255                           fsr1h	equ	0xFE2
 14256                           fsr1l	equ	0xFE1
 14257                           indf2	equ	0xFDF
 14258                           postinc2	equ	0xFDE
 14259                           postdec2	equ	0xFDD
 14260                           fsr2h	equ	0xFDA
 14261                           fsr2l	equ	0xFD9
 14262                           status	equ	0xFD8
 14263                           
 14264 ;; *************** function i2_EUSART1_Write *****************
 14265 ;; Defined at:
 14266 ;;		line 97 in file "mcc_generated_files/eusart1.c"
 14267 ;; Parameters:    Size  Location     Type
 14268 ;;  txData          1    wreg     unsigned char 
 14269 ;; Auto vars:     Size  Location     Type
 14270 ;;  txData          1    0[COMRAM] unsigned char 
 14271 ;; Return value:  Size  Location     Type
 14272 ;;                  1    wreg      void 
 14273 ;; Registers used:
 14274 ;;		wreg
 14275 ;; Tracked objects:
 14276 ;;		On entry : 0/0
 14277 ;;		On exit  : 0/0
 14278 ;;		Unchanged: 0/0
 14279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14280 ;;      Params:         0       0       0       0       0       0       0
 14281 ;;      Locals:         1       0       0       0       0       0       0
 14282 ;;      Temps:          0       0       0       0       0       0       0
 14283 ;;      Totals:         1       0       0       0       0       0       0
 14284 ;;Total ram usage:        1 bytes
 14285 ;; Hardware stack levels used:    1
 14286 ;; This function calls:
 14287 ;;		Nothing
 14288 ;; This function is called by:
 14289 ;;		i2_putch
 14290 ;; This function uses a non-reentrant model
 14291 ;;
 14292                           
 14293                           	psect	text50
 14294  005726                     __ptext50:
 14295                           	opt stack 0
 14296  005726                     i2_EUSART1_Write:
 14297                           	opt stack 20
 14298                           
 14299                           ;incstack = 0
 14300                           ;i2EUSART1_Write@txData stored from wreg
 14301  005726  6E01               	movwf	i2EUSART1_Write@txData,c
 14302  005728                     i2l187:
 14303  005728  A89E               	btfss	3998,4,c	;volatile
 14304  00572A  D7FE               	goto	i2l187
 14305                           
 14306                           ;eusart1.c: 101: }
 14307                           ;eusart1.c: 103: TXREG1 = txData;
 14308  00572C  C001  FFAD         	movff	i2EUSART1_Write@txData,4013	;volatile
 14309  005730  0012               	return		;funcret
 14310  005732                     __end_ofi2_EUSART1_Write:
 14311                           	opt stack 0
 14312                           tosu	equ	0xFFF
 14313                           tosh	equ	0xFFE
 14314                           tosl	equ	0xFFD
 14315                           pclatu	equ	0xFFB
 14316                           pclath	equ	0xFFA
 14317                           tblptru	equ	0xFF8
 14318                           tblptrh	equ	0xFF7
 14319                           tblptrl	equ	0xFF6
 14320                           tablat	equ	0xFF5
 14321                           prodh	equ	0xFF4
 14322                           prodl	equ	0xFF3
 14323                           intcon	equ	0xFF2
 14324                           intcon2	equ	0xFF1
 14325                           postinc0	equ	0xFEE
 14326                           fsr0h	equ	0xFEA
 14327                           fsr0l	equ	0xFE9
 14328                           wreg	equ	0xFE8
 14329                           fsr1h	equ	0xFE2
 14330                           fsr1l	equ	0xFE1
 14331                           indf2	equ	0xFDF
 14332                           postinc2	equ	0xFDE
 14333                           postdec2	equ	0xFDD
 14334                           fsr2h	equ	0xFDA
 14335                           fsr2l	equ	0xFD9
 14336                           status	equ	0xFD8
 14337                           
 14338 ;; *************** function i2_isdigit *****************
 14339 ;; Defined at:
 14340 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
 14341 ;; Parameters:    Size  Location     Type
 14342 ;;  c               1    wreg     unsigned char 
 14343 ;; Auto vars:     Size  Location     Type
 14344 ;;  c               1    2[COMRAM] unsigned char 
 14345 ;; Return value:  Size  Location     Type
 14346 ;;		None               void
 14347 ;; Registers used:
 14348 ;;		wreg, status,2, status,0
 14349 ;; Tracked objects:
 14350 ;;		On entry : 0/0
 14351 ;;		On exit  : 0/0
 14352 ;;		Unchanged: 0/0
 14353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14354 ;;      Params:         0       0       0       0       0       0       0
 14355 ;;      Locals:         2       0       0       0       0       0       0
 14356 ;;      Temps:          1       0       0       0       0       0       0
 14357 ;;      Totals:         3       0       0       0       0       0       0
 14358 ;;Total ram usage:        3 bytes
 14359 ;; Hardware stack levels used:    1
 14360 ;; This function calls:
 14361 ;;		Nothing
 14362 ;; This function is called by:
 14363 ;;		i2__doprnt
 14364 ;; This function uses a non-reentrant model
 14365 ;;
 14366                           
 14367                           	psect	text51
 14368  005666                     __ptext51:
 14369                           	opt stack 0
 14370  005666                     i2_isdigit:
 14371                           	opt stack 21
 14372                           
 14373                           ;incstack = 0
 14374                           ;i2isdigit@c stored from wreg
 14375  005666  6E03               	movwf	i2isdigit@c,c
 14376  005668  0E00               	movlw	0
 14377  00566A  6E02               	movwf	i2_isdigit$1164,c
 14378  00566C  0E3A               	movlw	58
 14379  00566E  6003               	cpfslt	i2isdigit@c,c
 14380  005670  D005               	goto	i2l4230
 14381  005672  0E2F               	movlw	47
 14382  005674  6403               	cpfsgt	i2isdigit@c,c
 14383  005676  D002               	goto	i2l4230
 14384  005678  0E01               	movlw	1
 14385  00567A  6E02               	movwf	i2_isdigit$1164,c
 14386  00567C                     i2l4230:
 14387  00567C  C002  F001         	movff	i2_isdigit$1164,??i2_isdigit
 14388  005680  3001               	rrcf	??i2_isdigit,w,c
 14389  005682  0012               	return	
 14390  005684                     __end_ofi2_isdigit:
 14391                           	opt stack 0
 14392                           tosu	equ	0xFFF
 14393                           tosh	equ	0xFFE
 14394                           tosl	equ	0xFFD
 14395                           pclatu	equ	0xFFB
 14396                           pclath	equ	0xFFA
 14397                           tblptru	equ	0xFF8
 14398                           tblptrh	equ	0xFF7
 14399                           tblptrl	equ	0xFF6
 14400                           tablat	equ	0xFF5
 14401                           prodh	equ	0xFF4
 14402                           prodl	equ	0xFF3
 14403                           intcon	equ	0xFF2
 14404                           intcon2	equ	0xFF1
 14405                           postinc0	equ	0xFEE
 14406                           fsr0h	equ	0xFEA
 14407                           fsr0l	equ	0xFE9
 14408                           wreg	equ	0xFE8
 14409                           fsr1h	equ	0xFE2
 14410                           fsr1l	equ	0xFE1
 14411                           indf2	equ	0xFDF
 14412                           postinc2	equ	0xFDE
 14413                           postdec2	equ	0xFDD
 14414                           fsr2h	equ	0xFDA
 14415                           fsr2l	equ	0xFD9
 14416                           status	equ	0xFD8
 14417                           
 14418 ;; *************** function i2_fround *****************
 14419 ;; Defined at:
 14420 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 14421 ;; Parameters:    Size  Location     Type
 14422 ;;  prec            1    wreg     unsigned char 
 14423 ;; Auto vars:     Size  Location     Type
 14424 ;;  prec            1   56[COMRAM] unsigned char 
 14425 ;; Return value:  Size  Location     Type
 14426 ;;                  3   47[COMRAM] unsigned char 
 14427 ;; Registers used:
 14428 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14429 ;; Tracked objects:
 14430 ;;		On entry : 0/0
 14431 ;;		On exit  : 0/0
 14432 ;;		Unchanged: 0/0
 14433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14434 ;;      Params:         3       0       0       0       0       0       0
 14435 ;;      Locals:         7       0       0       0       0       0       0
 14436 ;;      Temps:          0       0       0       0       0       0       0
 14437 ;;      Totals:        10       0       0       0       0       0       0
 14438 ;;Total ram usage:       10 bytes
 14439 ;; Hardware stack levels used:    1
 14440 ;; Hardware stack levels required when called:    2
 14441 ;; This function calls:
 14442 ;;		i2___awdiv
 14443 ;;		i2___awmod
 14444 ;;		i2___ftmul
 14445 ;;		i2___wmul
 14446 ;; This function is called by:
 14447 ;;		i2__doprnt
 14448 ;; This function uses a non-reentrant model
 14449 ;;
 14450                           
 14451                           	psect	text52
 14452  003726                     __ptext52:
 14453                           	opt stack 0
 14454  003726                     i2_fround:
 14455                           	opt stack 19
 14456                           
 14457                           ;incstack = 0
 14458                           ;i2fround@prec stored from wreg
 14459  003726  6E39               	movwf	i2fround@prec,c
 14460                           
 14461                           ;doprnt.c: 413: if(prec>=110)
 14462  003728  0E6D               	movlw	109
 14463  00372A  6439               	cpfsgt	i2fround@prec,c
 14464  00372C  D09F               	goto	i2l3980
 14465                           
 14466                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 14467  00372E  0E00               	movlw	0
 14468  003730  6E12               	movwf	i2___wmul@multiplicand+1,c
 14469  003732  0E03               	movlw	3
 14470  003734  6E11               	movwf	i2___wmul@multiplicand,c
 14471  003736  0E00               	movlw	0
 14472  003738  6E0A               	movwf	i2___awdiv@divisor+1,c
 14473  00373A  0E0A               	movlw	10
 14474  00373C  6E09               	movwf	i2___awdiv@divisor,c
 14475  00373E  0E00               	movlw	0
 14476  003740  6E04               	movwf	i2___awmod@divisor+1,c
 14477  003742  0E64               	movlw	100
 14478  003744  6E03               	movwf	i2___awmod@divisor,c
 14479  003746  C039  F001         	movff	i2fround@prec,i2___awmod@dividend
 14480  00374A  6A02               	clrf	i2___awmod@dividend+1,c
 14481  00374C  EC8D  F028         	call	i2___awmod	;wreg free
 14482  003750  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 14483  003754  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 14484  003758  EC8F  F027         	call	i2___awdiv	;wreg free
 14485  00375C  0E09               	movlw	9
 14486  00375E  2407               	addwf	?i2___awdiv,w,c
 14487  003760  6E0F               	movwf	i2___wmul@multiplier,c
 14488  003762  0E00               	movlw	0
 14489  003764  2008               	addwfc	?i2___awdiv+1,w,c
 14490  003766  6E10               	movwf	i2___wmul@multiplier+1,c
 14491  003768  ECFC  F02A         	call	i2___wmul	;wreg free
 14492  00376C  0E29               	movlw	low __npowers_
 14493  00376E  240F               	addwf	?i2___wmul,w,c
 14494  003770  6EF6               	movwf	tblptrl,c
 14495  003772  0E06               	movlw	high __npowers_
 14496  003774  2010               	addwfc	?i2___wmul+1,w,c
 14497  003776  6EF7               	movwf	tblptrh,c
 14498  003778                     	if	0	;There are less than 3 active tblptr bytes
 14499  003778                     	endif
 14500  003778  0009               	tblrd		*+
 14501  00377A  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14502  00377E  0009               	tblrd		*+
 14503  003780  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14504  003784  000A               	tblrd		*-
 14505  003786  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14506  00378A  0E00               	movlw	0
 14507  00378C  6E0A               	movwf	i2___awdiv@divisor+1,c
 14508  00378E  0E64               	movlw	100
 14509  003790  6E09               	movwf	i2___awdiv@divisor,c
 14510  003792  C039  F007         	movff	i2fround@prec,i2___awdiv@dividend
 14511  003796  6A08               	clrf	i2___awdiv@dividend+1,c
 14512  003798  EC8F  F027         	call	i2___awdiv	;wreg free
 14513  00379C  0E12               	movlw	18
 14514  00379E  2407               	addwf	?i2___awdiv,w,c
 14515  0037A0  6E0F               	movwf	i2___wmul@multiplier,c
 14516  0037A2  0E00               	movlw	0
 14517  0037A4  2008               	addwfc	?i2___awdiv+1,w,c
 14518  0037A6  6E10               	movwf	i2___wmul@multiplier+1,c
 14519  0037A8  0E00               	movlw	0
 14520  0037AA  6E12               	movwf	i2___wmul@multiplicand+1,c
 14521  0037AC  0E03               	movlw	3
 14522  0037AE  6E11               	movwf	i2___wmul@multiplicand,c
 14523  0037B0  ECFC  F02A         	call	i2___wmul	;wreg free
 14524  0037B4  0E29               	movlw	low __npowers_
 14525  0037B6  240F               	addwf	?i2___wmul,w,c
 14526  0037B8  6EF6               	movwf	tblptrl,c
 14527  0037BA  0E06               	movlw	high __npowers_
 14528  0037BC  2010               	addwfc	?i2___wmul+1,w,c
 14529  0037BE  6EF7               	movwf	tblptrh,c
 14530  0037C0                     	if	0	;There are less than 3 active tblptr bytes
 14531  0037C0                     	endif
 14532  0037C0  0009               	tblrd		*+
 14533  0037C2  CFF5 F021          	movff	tablat,i2___ftmul@f1
 14534  0037C6  0009               	tblrd		*+
 14535  0037C8  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 14536  0037CC  000A               	tblrd		*-
 14537  0037CE  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 14538  0037D2  EC76  F023         	call	i2___ftmul	;wreg free
 14539  0037D6  C021  F036         	movff	?i2___ftmul,i2_fround$1801
 14540  0037DA  C022  F037         	movff	?i2___ftmul+1,i2_fround$1801+1
 14541  0037DE  C023  F038         	movff	?i2___ftmul+2,i2_fround$1801+2
 14542                           
 14543                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 14544  0037E2  0E00               	movlw	0
 14545  0037E4  6E12               	movwf	i2___wmul@multiplicand+1,c
 14546  0037E6  0E03               	movlw	3
 14547  0037E8  6E11               	movwf	i2___wmul@multiplicand,c
 14548  0037EA  0E00               	movlw	0
 14549  0037EC  6E04               	movwf	i2___awmod@divisor+1,c
 14550  0037EE  0E0A               	movlw	10
 14551  0037F0  6E03               	movwf	i2___awmod@divisor,c
 14552  0037F2  C039  F001         	movff	i2fround@prec,i2___awmod@dividend
 14553  0037F6  6A02               	clrf	i2___awmod@dividend+1,c
 14554  0037F8  EC8D  F028         	call	i2___awmod	;wreg free
 14555  0037FC  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 14556  003800  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14557  003804  ECFC  F02A         	call	i2___wmul	;wreg free
 14558  003808  0E29               	movlw	low __npowers_
 14559  00380A  240F               	addwf	?i2___wmul,w,c
 14560  00380C  6EF6               	movwf	tblptrl,c
 14561  00380E  0E06               	movlw	high __npowers_
 14562  003810  2010               	addwfc	?i2___wmul+1,w,c
 14563  003812  6EF7               	movwf	tblptrh,c
 14564  003814                     	if	0	;There are less than 3 active tblptr bytes
 14565  003814                     	endif
 14566  003814  0009               	tblrd		*+
 14567  003816  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14568  00381A  0009               	tblrd		*+
 14569  00381C  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14570  003820  000A               	tblrd		*-
 14571  003822  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14572  003826  C036  F021         	movff	i2_fround$1801,i2___ftmul@f1
 14573  00382A  C037  F022         	movff	i2_fround$1801+1,i2___ftmul@f1+1
 14574  00382E  C038  F023         	movff	i2_fround$1801+2,i2___ftmul@f1+2
 14575  003832  EC76  F023         	call	i2___ftmul	;wreg free
 14576  003836  C021  F033         	movff	?i2___ftmul,i2_fround$1802
 14577  00383A  C022  F034         	movff	?i2___ftmul+1,i2_fround$1802+1
 14578  00383E  C023  F035         	movff	?i2___ftmul+2,i2_fround$1802+2
 14579                           
 14580                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 14581  003842  C033  F021         	movff	i2_fround$1802,i2___ftmul@f1
 14582  003846  C034  F022         	movff	i2_fround$1802+1,i2___ftmul@f1+1
 14583  00384A  C035  F023         	movff	i2_fround$1802+2,i2___ftmul@f1+2
 14584  00384E  0E00               	movlw	0
 14585  003850  6E24               	movwf	i2___ftmul@f2,c
 14586  003852  0E00               	movlw	0
 14587  003854  6E25               	movwf	i2___ftmul@f2+1,c
 14588  003856  0E3F               	movlw	63
 14589  003858  6E26               	movwf	i2___ftmul@f2+2,c
 14590  00385A  EC76  F023         	call	i2___ftmul	;wreg free
 14591  00385E  C021  F030         	movff	?i2___ftmul,?i2_fround
 14592  003862  C022  F031         	movff	?i2___ftmul+1,?i2_fround+1
 14593  003866  C023  F032         	movff	?i2___ftmul+2,?i2_fround+2
 14594  00386A  0012               	return	
 14595  00386C                     i2l3980:
 14596                           
 14597                           ;doprnt.c: 415: else if(prec > 10)
 14598  00386C  0E0A               	movlw	10
 14599  00386E  6439               	cpfsgt	i2fround@prec,c
 14600  003870  D05D               	goto	i2l3988
 14601                           
 14602                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 14603  003872  0E00               	movlw	0
 14604  003874  6E12               	movwf	i2___wmul@multiplicand+1,c
 14605  003876  0E03               	movlw	3
 14606  003878  6E11               	movwf	i2___wmul@multiplicand,c
 14607  00387A  0E00               	movlw	0
 14608  00387C  6E04               	movwf	i2___awmod@divisor+1,c
 14609  00387E  0E0A               	movlw	10
 14610  003880  6E03               	movwf	i2___awmod@divisor,c
 14611  003882  C039  F001         	movff	i2fround@prec,i2___awmod@dividend
 14612  003886  6A02               	clrf	i2___awmod@dividend+1,c
 14613  003888  EC8D  F028         	call	i2___awmod	;wreg free
 14614  00388C  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 14615  003890  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14616  003894  ECFC  F02A         	call	i2___wmul	;wreg free
 14617  003898  0E29               	movlw	low __npowers_
 14618  00389A  240F               	addwf	?i2___wmul,w,c
 14619  00389C  6EF6               	movwf	tblptrl,c
 14620  00389E  0E06               	movlw	high __npowers_
 14621  0038A0  2010               	addwfc	?i2___wmul+1,w,c
 14622  0038A2  6EF7               	movwf	tblptrh,c
 14623  0038A4                     	if	0	;There are less than 3 active tblptr bytes
 14624  0038A4                     	endif
 14625  0038A4  0009               	tblrd		*+
 14626  0038A6  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14627  0038AA  0009               	tblrd		*+
 14628  0038AC  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14629  0038B0  000A               	tblrd		*-
 14630  0038B2  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14631  0038B6  0E00               	movlw	0
 14632  0038B8  6E0A               	movwf	i2___awdiv@divisor+1,c
 14633  0038BA  0E0A               	movlw	10
 14634  0038BC  6E09               	movwf	i2___awdiv@divisor,c
 14635  0038BE  C039  F007         	movff	i2fround@prec,i2___awdiv@dividend
 14636  0038C2  6A08               	clrf	i2___awdiv@dividend+1,c
 14637  0038C4  EC8F  F027         	call	i2___awdiv	;wreg free
 14638  0038C8  0E09               	movlw	9
 14639  0038CA  2407               	addwf	?i2___awdiv,w,c
 14640  0038CC  6E0F               	movwf	i2___wmul@multiplier,c
 14641  0038CE  0E00               	movlw	0
 14642  0038D0  2008               	addwfc	?i2___awdiv+1,w,c
 14643  0038D2  6E10               	movwf	i2___wmul@multiplier+1,c
 14644  0038D4  0E00               	movlw	0
 14645  0038D6  6E12               	movwf	i2___wmul@multiplicand+1,c
 14646  0038D8  0E03               	movlw	3
 14647  0038DA  6E11               	movwf	i2___wmul@multiplicand,c
 14648  0038DC  ECFC  F02A         	call	i2___wmul	;wreg free
 14649  0038E0  0E29               	movlw	low __npowers_
 14650  0038E2  240F               	addwf	?i2___wmul,w,c
 14651  0038E4  6EF6               	movwf	tblptrl,c
 14652  0038E6  0E06               	movlw	high __npowers_
 14653  0038E8  2010               	addwfc	?i2___wmul+1,w,c
 14654  0038EA  6EF7               	movwf	tblptrh,c
 14655  0038EC                     	if	0	;There are less than 3 active tblptr bytes
 14656  0038EC                     	endif
 14657  0038EC  0009               	tblrd		*+
 14658  0038EE  CFF5 F021          	movff	tablat,i2___ftmul@f1
 14659  0038F2  0009               	tblrd		*+
 14660  0038F4  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 14661  0038F8  000A               	tblrd		*-
 14662  0038FA  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 14663  0038FE  EC76  F023         	call	i2___ftmul	;wreg free
 14664  003902  C021  F036         	movff	?i2___ftmul,i2_fround$1801
 14665  003906  C022  F037         	movff	?i2___ftmul+1,i2_fround$1801+1
 14666  00390A  C023  F038         	movff	?i2___ftmul+2,i2_fround$1801+2
 14667                           
 14668                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 14669  00390E  C036  F021         	movff	i2_fround$1801,i2___ftmul@f1
 14670  003912  C037  F022         	movff	i2_fround$1801+1,i2___ftmul@f1+1
 14671  003916  C038  F023         	movff	i2_fround$1801+2,i2___ftmul@f1+2
 14672  00391A  0E00               	movlw	0
 14673  00391C  6E24               	movwf	i2___ftmul@f2,c
 14674  00391E  0E00               	movlw	0
 14675  003920  6E25               	movwf	i2___ftmul@f2+1,c
 14676  003922  0E3F               	movlw	63
 14677  003924  6E26               	movwf	i2___ftmul@f2+2,c
 14678  003926  EC76  F023         	call	i2___ftmul	;wreg free
 14679  00392A  D799               	goto	L10
 14680  00392C                     i2l3988:
 14681                           
 14682                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 14683  00392C  5039               	movf	i2fround@prec,w,c
 14684  00392E  0D03               	mullw	3
 14685  003930  0E29               	movlw	low __npowers_
 14686  003932  24F3               	addwf	prodl,w,c
 14687  003934  6EF6               	movwf	tblptrl,c
 14688  003936  0E06               	movlw	high __npowers_
 14689  003938  20F4               	addwfc	prodh,w,c
 14690  00393A  6EF7               	movwf	tblptrh,c
 14691  00393C                     	if	0	;There are less than 3 active tblptr bytes
 14692  00393C                     	endif
 14693  00393C  0009               	tblrd		*+
 14694  00393E  CFF5 F021          	movff	tablat,i2___ftmul@f1
 14695  003942  0009               	tblrd		*+
 14696  003944  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 14697  003948  000A               	tblrd		*-
 14698  00394A  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 14699  00394E  0E00               	movlw	0
 14700  003950  6E24               	movwf	i2___ftmul@f2,c
 14701  003952  0E00               	movlw	0
 14702  003954  6E25               	movwf	i2___ftmul@f2+1,c
 14703  003956  0E3F               	movlw	63
 14704  003958  6E26               	movwf	i2___ftmul@f2+2,c
 14705  00395A  EC76  F023         	call	i2___ftmul	;wreg free
 14706  00395E  C021  F030         	movff	?i2___ftmul,?i2_fround
 14707  003962  C022  F031         	movff	?i2___ftmul+1,?i2_fround+1
 14708  003966  C023  F032         	movff	?i2___ftmul+2,?i2_fround+2
 14709  00396A  0012               	return	
 14710  00396C                     __end_ofi2_fround:
 14711                           	opt stack 0
 14712                           tosu	equ	0xFFF
 14713                           tosh	equ	0xFFE
 14714                           tosl	equ	0xFFD
 14715                           pclatu	equ	0xFFB
 14716                           pclath	equ	0xFFA
 14717                           tblptru	equ	0xFF8
 14718                           tblptrh	equ	0xFF7
 14719                           tblptrl	equ	0xFF6
 14720                           tablat	equ	0xFF5
 14721                           prodh	equ	0xFF4
 14722                           prodl	equ	0xFF3
 14723                           intcon	equ	0xFF2
 14724                           intcon2	equ	0xFF1
 14725                           postinc0	equ	0xFEE
 14726                           fsr0h	equ	0xFEA
 14727                           fsr0l	equ	0xFE9
 14728                           wreg	equ	0xFE8
 14729                           fsr1h	equ	0xFE2
 14730                           fsr1l	equ	0xFE1
 14731                           indf2	equ	0xFDF
 14732                           postinc2	equ	0xFDE
 14733                           postdec2	equ	0xFDD
 14734                           fsr2h	equ	0xFDA
 14735                           fsr2l	equ	0xFD9
 14736                           status	equ	0xFD8
 14737                           
 14738 ;; *************** function i2___wmul *****************
 14739 ;; Defined at:
 14740 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 14741 ;; Parameters:    Size  Location     Type
 14742 ;;  multiplier      2   14[COMRAM] unsigned int 
 14743 ;;  multiplicand    2   16[COMRAM] unsigned int 
 14744 ;; Auto vars:     Size  Location     Type
 14745 ;;  __wmul          2   18[COMRAM] unsigned int 
 14746 ;; Return value:  Size  Location     Type
 14747 ;;                  2   14[COMRAM] unsigned int 
 14748 ;; Registers used:
 14749 ;;		wreg, status,2, status,0, prodl, prodh
 14750 ;; Tracked objects:
 14751 ;;		On entry : 0/0
 14752 ;;		On exit  : 0/0
 14753 ;;		Unchanged: 0/0
 14754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14755 ;;      Params:         4       0       0       0       0       0       0
 14756 ;;      Locals:         2       0       0       0       0       0       0
 14757 ;;      Temps:          0       0       0       0       0       0       0
 14758 ;;      Totals:         6       0       0       0       0       0       0
 14759 ;;Total ram usage:        6 bytes
 14760 ;; Hardware stack levels used:    1
 14761 ;; This function calls:
 14762 ;;		Nothing
 14763 ;; This function is called by:
 14764 ;;		i2_fround
 14765 ;;		i2_scale
 14766 ;;		i2__doprnt
 14767 ;; This function uses a non-reentrant model
 14768 ;;
 14769                           
 14770                           	psect	text53
 14771  0055F8                     __ptext53:
 14772                           	opt stack 0
 14773  0055F8                     i2___wmul:
 14774                           	opt stack 20
 14775                           
 14776                           ;incstack = 0
 14777  0055F8  500F               	movf	i2___wmul@multiplier,w,c
 14778  0055FA  0211               	mulwf	i2___wmul@multiplicand,c
 14779  0055FC  CFF3 F013          	movff	prodl,i2___wmul@product
 14780  005600  CFF4 F014          	movff	prodh,i2___wmul@product+1
 14781  005604  500F               	movf	i2___wmul@multiplier,w,c
 14782  005606  0212               	mulwf	i2___wmul@multiplicand+1,c
 14783  005608  50F3               	movf	prodl,w,c
 14784  00560A  2614               	addwf	i2___wmul@product+1,f,c
 14785  00560C  5010               	movf	i2___wmul@multiplier+1,w,c
 14786  00560E  0211               	mulwf	i2___wmul@multiplicand,c
 14787  005610  50F3               	movf	prodl,w,c
 14788  005612  2614               	addwf	i2___wmul@product+1,f,c
 14789  005614  C013  F00F         	movff	i2___wmul@product,?i2___wmul
 14790  005618  C014  F010         	movff	i2___wmul@product+1,?i2___wmul+1
 14791  00561C  0012               	return	
 14792  00561E                     __end_ofi2___wmul:
 14793                           	opt stack 0
 14794                           tosu	equ	0xFFF
 14795                           tosh	equ	0xFFE
 14796                           tosl	equ	0xFFD
 14797                           pclatu	equ	0xFFB
 14798                           pclath	equ	0xFFA
 14799                           tblptru	equ	0xFF8
 14800                           tblptrh	equ	0xFF7
 14801                           tblptrl	equ	0xFF6
 14802                           tablat	equ	0xFF5
 14803                           prodh	equ	0xFF4
 14804                           prodl	equ	0xFF3
 14805                           intcon	equ	0xFF2
 14806                           intcon2	equ	0xFF1
 14807                           postinc0	equ	0xFEE
 14808                           fsr0h	equ	0xFEA
 14809                           fsr0l	equ	0xFE9
 14810                           wreg	equ	0xFE8
 14811                           fsr1h	equ	0xFE2
 14812                           fsr1l	equ	0xFE1
 14813                           indf2	equ	0xFDF
 14814                           postinc2	equ	0xFDE
 14815                           postdec2	equ	0xFDD
 14816                           fsr2h	equ	0xFDA
 14817                           fsr2l	equ	0xFD9
 14818                           status	equ	0xFD8
 14819                           
 14820 ;; *************** function i2___ftmul *****************
 14821 ;; Defined at:
 14822 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
 14823 ;; Parameters:    Size  Location     Type
 14824 ;;  f1              3   32[COMRAM] float 
 14825 ;;  f2              3   35[COMRAM] float 
 14826 ;; Auto vars:     Size  Location     Type
 14827 ;;  __ftmul         3   42[COMRAM] unsigned um
 14828 ;;  __ftmul         1   46[COMRAM] unsigned char 
 14829 ;;  __ftmul         1   45[COMRAM] unsigned char 
 14830 ;;  __ftmul         1   41[COMRAM] unsigned char 
 14831 ;; Return value:  Size  Location     Type
 14832 ;;                  3   32[COMRAM] float 
 14833 ;; Registers used:
 14834 ;;		wreg, status,2, status,0, cstack
 14835 ;; Tracked objects:
 14836 ;;		On entry : 0/0
 14837 ;;		On exit  : 0/0
 14838 ;;		Unchanged: 0/0
 14839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14840 ;;      Params:         6       0       0       0       0       0       0
 14841 ;;      Locals:         6       0       0       0       0       0       0
 14842 ;;      Temps:          3       0       0       0       0       0       0
 14843 ;;      Totals:        15       0       0       0       0       0       0
 14844 ;;Total ram usage:       15 bytes
 14845 ;; Hardware stack levels used:    1
 14846 ;; Hardware stack levels required when called:    1
 14847 ;; This function calls:
 14848 ;;		i2___ftpack
 14849 ;; This function is called by:
 14850 ;;		_INT0_ISR
 14851 ;;		i2_fround
 14852 ;;		i2_scale
 14853 ;;		i2__doprnt
 14854 ;; This function uses a non-reentrant model
 14855 ;;
 14856                           
 14857                           	psect	text54
 14858  0046EC                     __ptext54:
 14859                           	opt stack 0
 14860  0046EC                     i2___ftmul:
 14861                           	opt stack 22
 14862                           
 14863                           ;incstack = 0
 14864  0046EC  C023  F027         	movff	i2___ftmul@f1+2,??i2___ftmul
 14865  0046F0  6A28               	clrf	(??i2___ftmul+1)& (0+255),c
 14866  0046F2  6A29               	clrf	(??i2___ftmul+2)& (0+255),c
 14867  0046F4  3422               	rlcf	i2___ftmul@f1+1,w,c
 14868  0046F6  3627               	rlcf	??i2___ftmul& (0+255),f,c
 14869  0046F8  E301               	bnc	u442_41
 14870  0046FA  8028               	bsf	(??i2___ftmul+1)& (0+255),0,c
 14871  0046FC                     u442_41:
 14872  0046FC  5027               	movf	??i2___ftmul,w,c
 14873  0046FE  6E2A               	movwf	i2___ftmul@exp,c
 14874  004700  502A               	movf	i2___ftmul@exp,w,c
 14875  004702  A4D8               	btfss	status,2,c
 14876  004704  D007               	goto	i2l3718
 14877  004706  0E00               	movlw	0
 14878  004708  6E21               	movwf	?i2___ftmul,c
 14879  00470A  0E00               	movlw	0
 14880  00470C  6E22               	movwf	?i2___ftmul+1,c
 14881  00470E  0E00               	movlw	0
 14882  004710  6E23               	movwf	?i2___ftmul+2,c
 14883  004712  0012               	return	
 14884  004714                     i2l3718:
 14885  004714  C026  F027         	movff	i2___ftmul@f2+2,??i2___ftmul
 14886  004718  6A28               	clrf	(??i2___ftmul+1)& (0+255),c
 14887  00471A  6A29               	clrf	(??i2___ftmul+2)& (0+255),c
 14888  00471C  3425               	rlcf	i2___ftmul@f2+1,w,c
 14889  00471E  3627               	rlcf	??i2___ftmul& (0+255),f,c
 14890  004720  E301               	bnc	u444_41
 14891  004722  8028               	bsf	(??i2___ftmul+1)& (0+255),0,c
 14892  004724                     u444_41:
 14893  004724  5027               	movf	??i2___ftmul,w,c
 14894  004726  6E2F               	movwf	i2___ftmul@sign,c
 14895  004728  502F               	movf	i2___ftmul@sign,w,c
 14896  00472A  A4D8               	btfss	status,2,c
 14897  00472C  D007               	goto	i2l3724
 14898  00472E  0E00               	movlw	0
 14899  004730  6E21               	movwf	?i2___ftmul,c
 14900  004732  0E00               	movlw	0
 14901  004734  6E22               	movwf	?i2___ftmul+1,c
 14902  004736  0E00               	movlw	0
 14903  004738  6E23               	movwf	?i2___ftmul+2,c
 14904  00473A  0012               	return	
 14905  00473C                     i2l3724:
 14906  00473C  502F               	movf	i2___ftmul@sign,w,c
 14907  00473E  0F7B               	addlw	123
 14908  004740  262A               	addwf	i2___ftmul@exp,f,c
 14909  004742  C023  F02F         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 14910  004746  5026               	movf	i2___ftmul@f2+2,w,c
 14911  004748  1A2F               	xorwf	i2___ftmul@sign,f,c
 14912  00474A  0E80               	movlw	128
 14913  00474C  162F               	andwf	i2___ftmul@sign,f,c
 14914  00474E  8E22               	bsf	i2___ftmul@f1+1,7,c
 14915  004750  8E25               	bsf	i2___ftmul@f2+1,7,c
 14916  004752  0EFF               	movlw	255
 14917  004754  1624               	andwf	i2___ftmul@f2,f,c
 14918  004756  0EFF               	movlw	255
 14919  004758  1625               	andwf	i2___ftmul@f2+1,f,c
 14920  00475A  0E00               	movlw	0
 14921  00475C  1626               	andwf	i2___ftmul@f2+2,f,c
 14922  00475E  0E00               	movlw	0
 14923  004760  6E2B               	movwf	i2___ftmul@f3_as_product,c
 14924  004762  0E00               	movlw	0
 14925  004764  6E2C               	movwf	i2___ftmul@f3_as_product+1,c
 14926  004766  0E00               	movlw	0
 14927  004768  6E2D               	movwf	i2___ftmul@f3_as_product+2,c
 14928  00476A  0E07               	movlw	7
 14929  00476C  6E2E               	movwf	i2___ftmul@cntr,c
 14930  00476E                     i2l3738:
 14931  00476E  A021               	btfss	i2___ftmul@f1,0,c
 14932  004770  D006               	goto	i2l3742
 14933  004772  5024               	movf	i2___ftmul@f2,w,c
 14934  004774  262B               	addwf	i2___ftmul@f3_as_product,f,c
 14935  004776  5025               	movf	i2___ftmul@f2+1,w,c
 14936  004778  222C               	addwfc	i2___ftmul@f3_as_product+1,f,c
 14937  00477A  5026               	movf	i2___ftmul@f2+2,w,c
 14938  00477C  222D               	addwfc	i2___ftmul@f3_as_product+2,f,c
 14939  00477E                     i2l3742:
 14940  00477E  90D8               	bcf	status,0,c
 14941  004780  3223               	rrcf	i2___ftmul@f1+2,f,c
 14942  004782  3222               	rrcf	i2___ftmul@f1+1,f,c
 14943  004784  3221               	rrcf	i2___ftmul@f1,f,c
 14944  004786  90D8               	bcf	status,0,c
 14945  004788  3624               	rlcf	i2___ftmul@f2,f,c
 14946  00478A  3625               	rlcf	i2___ftmul@f2+1,f,c
 14947  00478C  3626               	rlcf	i2___ftmul@f2+2,f,c
 14948  00478E  2E2E               	decfsz	i2___ftmul@cntr,f,c
 14949  004790  D7EE               	goto	i2l3738
 14950  004792  0E09               	movlw	9
 14951  004794  6E2E               	movwf	i2___ftmul@cntr,c
 14952  004796                     i2l3748:
 14953  004796  A021               	btfss	i2___ftmul@f1,0,c
 14954  004798  D006               	goto	i2l3752
 14955  00479A  5024               	movf	i2___ftmul@f2,w,c
 14956  00479C  262B               	addwf	i2___ftmul@f3_as_product,f,c
 14957  00479E  5025               	movf	i2___ftmul@f2+1,w,c
 14958  0047A0  222C               	addwfc	i2___ftmul@f3_as_product+1,f,c
 14959  0047A2  5026               	movf	i2___ftmul@f2+2,w,c
 14960  0047A4  222D               	addwfc	i2___ftmul@f3_as_product+2,f,c
 14961  0047A6                     i2l3752:
 14962  0047A6  90D8               	bcf	status,0,c
 14963  0047A8  3223               	rrcf	i2___ftmul@f1+2,f,c
 14964  0047AA  3222               	rrcf	i2___ftmul@f1+1,f,c
 14965  0047AC  3221               	rrcf	i2___ftmul@f1,f,c
 14966  0047AE  90D8               	bcf	status,0,c
 14967  0047B0  322D               	rrcf	i2___ftmul@f3_as_product+2,f,c
 14968  0047B2  322C               	rrcf	i2___ftmul@f3_as_product+1,f,c
 14969  0047B4  322B               	rrcf	i2___ftmul@f3_as_product,f,c
 14970  0047B6  2E2E               	decfsz	i2___ftmul@cntr,f,c
 14971  0047B8  D7EE               	goto	i2l3748
 14972  0047BA  C02B  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 14973  0047BE  C02C  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 14974  0047C2  C02D  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 14975  0047C6  C02A  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 14976  0047CA  C02F  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 14977  0047CE  ECFE  F025         	call	i2___ftpack	;wreg free
 14978  0047D2  C001  F021         	movff	?i2___ftpack,?i2___ftmul
 14979  0047D6  C002  F022         	movff	?i2___ftpack+1,?i2___ftmul+1
 14980  0047DA  C003  F023         	movff	?i2___ftpack+2,?i2___ftmul+2
 14981  0047DE  0012               	return	
 14982  0047E0                     __end_ofi2___ftmul:
 14983                           	opt stack 0
 14984                           tosu	equ	0xFFF
 14985                           tosh	equ	0xFFE
 14986                           tosl	equ	0xFFD
 14987                           pclatu	equ	0xFFB
 14988                           pclath	equ	0xFFA
 14989                           tblptru	equ	0xFF8
 14990                           tblptrh	equ	0xFF7
 14991                           tblptrl	equ	0xFF6
 14992                           tablat	equ	0xFF5
 14993                           prodh	equ	0xFF4
 14994                           prodl	equ	0xFF3
 14995                           intcon	equ	0xFF2
 14996                           intcon2	equ	0xFF1
 14997                           postinc0	equ	0xFEE
 14998                           fsr0h	equ	0xFEA
 14999                           fsr0l	equ	0xFE9
 15000                           wreg	equ	0xFE8
 15001                           fsr1h	equ	0xFE2
 15002                           fsr1l	equ	0xFE1
 15003                           indf2	equ	0xFDF
 15004                           postinc2	equ	0xFDE
 15005                           postdec2	equ	0xFDD
 15006                           fsr2h	equ	0xFDA
 15007                           fsr2l	equ	0xFD9
 15008                           status	equ	0xFD8
 15009                           
 15010 ;; *************** function i2___awmod *****************
 15011 ;; Defined at:
 15012 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 15013 ;; Parameters:    Size  Location     Type
 15014 ;;  dividend        2    0[COMRAM] int 
 15015 ;;  divisor         2    2[COMRAM] int 
 15016 ;; Auto vars:     Size  Location     Type
 15017 ;;  __awmod         1    5[COMRAM] unsigned char 
 15018 ;;  __awmod         1    4[COMRAM] unsigned char 
 15019 ;; Return value:  Size  Location     Type
 15020 ;;                  2    0[COMRAM] int 
 15021 ;; Registers used:
 15022 ;;		wreg, status,2, status,0
 15023 ;; Tracked objects:
 15024 ;;		On entry : 0/0
 15025 ;;		On exit  : 0/0
 15026 ;;		Unchanged: 0/0
 15027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15028 ;;      Params:         4       0       0       0       0       0       0
 15029 ;;      Locals:         2       0       0       0       0       0       0
 15030 ;;      Temps:          0       0       0       0       0       0       0
 15031 ;;      Totals:         6       0       0       0       0       0       0
 15032 ;;Total ram usage:        6 bytes
 15033 ;; Hardware stack levels used:    1
 15034 ;; This function calls:
 15035 ;;		Nothing
 15036 ;; This function is called by:
 15037 ;;		i2_fround
 15038 ;;		i2_scale
 15039 ;; This function uses a non-reentrant model
 15040 ;;
 15041                           
 15042                           	psect	text55
 15043  00511A                     __ptext55:
 15044                           	opt stack 0
 15045  00511A                     i2___awmod:
 15046                           	opt stack 20
 15047                           
 15048                           ;incstack = 0
 15049  00511A  0E00               	movlw	0
 15050  00511C  6E06               	movwf	i2___awmod@sign,c
 15051  00511E  AE02               	btfss	i2___awmod@dividend+1,7,c
 15052  005120  D006               	goto	i2l3614
 15053  005122  6C01               	negf	i2___awmod@dividend,c
 15054  005124  1E02               	comf	i2___awmod@dividend+1,f,c
 15055  005126  B0D8               	btfsc	status,0,c
 15056  005128  2A02               	incf	i2___awmod@dividend+1,f,c
 15057  00512A  0E01               	movlw	1
 15058  00512C  6E06               	movwf	i2___awmod@sign,c
 15059  00512E                     i2l3614:
 15060  00512E  AE04               	btfss	i2___awmod@divisor+1,7,c
 15061  005130  D004               	goto	i2l3618
 15062  005132  6C03               	negf	i2___awmod@divisor,c
 15063  005134  1E04               	comf	i2___awmod@divisor+1,f,c
 15064  005136  B0D8               	btfsc	status,0,c
 15065  005138  2A04               	incf	i2___awmod@divisor+1,f,c
 15066  00513A                     i2l3618:
 15067  00513A  5003               	movf	i2___awmod@divisor,w,c
 15068  00513C  1004               	iorwf	i2___awmod@divisor+1,w,c
 15069  00513E  B4D8               	btfsc	status,2,c
 15070  005140  D018               	goto	i2l3634
 15071  005142  0E01               	movlw	1
 15072  005144  6E05               	movwf	i2___awmod@counter,c
 15073  005146  D004               	goto	i2l3624
 15074  005148                     i2l3622:
 15075  005148  90D8               	bcf	status,0,c
 15076  00514A  3603               	rlcf	i2___awmod@divisor,f,c
 15077  00514C  3604               	rlcf	i2___awmod@divisor+1,f,c
 15078  00514E  2A05               	incf	i2___awmod@counter,f,c
 15079  005150                     i2l3624:
 15080  005150  AE04               	btfss	i2___awmod@divisor+1,7,c
 15081  005152  D7FA               	goto	i2l3622
 15082  005154                     i2l3626:
 15083  005154  5003               	movf	i2___awmod@divisor,w,c
 15084  005156  5C01               	subwf	i2___awmod@dividend,w,c
 15085  005158  5004               	movf	i2___awmod@divisor+1,w,c
 15086  00515A  5802               	subwfb	i2___awmod@dividend+1,w,c
 15087  00515C  A0D8               	btfss	status,0,c
 15088  00515E  D004               	goto	i2l3630
 15089  005160  5003               	movf	i2___awmod@divisor,w,c
 15090  005162  5E01               	subwf	i2___awmod@dividend,f,c
 15091  005164  5004               	movf	i2___awmod@divisor+1,w,c
 15092  005166  5A02               	subwfb	i2___awmod@dividend+1,f,c
 15093  005168                     i2l3630:
 15094  005168  90D8               	bcf	status,0,c
 15095  00516A  3204               	rrcf	i2___awmod@divisor+1,f,c
 15096  00516C  3203               	rrcf	i2___awmod@divisor,f,c
 15097  00516E  2E05               	decfsz	i2___awmod@counter,f,c
 15098  005170  D7F1               	goto	i2l3626
 15099  005172                     i2l3634:
 15100  005172  5006               	movf	i2___awmod@sign,w,c
 15101  005174  B4D8               	btfsc	status,2,c
 15102  005176  D004               	goto	i2l3638
 15103  005178  6C01               	negf	i2___awmod@dividend,c
 15104  00517A  1E02               	comf	i2___awmod@dividend+1,f,c
 15105  00517C  B0D8               	btfsc	status,0,c
 15106  00517E  2A02               	incf	i2___awmod@dividend+1,f,c
 15107  005180                     i2l3638:
 15108  005180  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 15109  005184  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 15110  005188  0012               	return	
 15111  00518A                     __end_ofi2___awmod:
 15112                           	opt stack 0
 15113                           tosu	equ	0xFFF
 15114                           tosh	equ	0xFFE
 15115                           tosl	equ	0xFFD
 15116                           pclatu	equ	0xFFB
 15117                           pclath	equ	0xFFA
 15118                           tblptru	equ	0xFF8
 15119                           tblptrh	equ	0xFF7
 15120                           tblptrl	equ	0xFF6
 15121                           tablat	equ	0xFF5
 15122                           prodh	equ	0xFF4
 15123                           prodl	equ	0xFF3
 15124                           intcon	equ	0xFF2
 15125                           intcon2	equ	0xFF1
 15126                           postinc0	equ	0xFEE
 15127                           fsr0h	equ	0xFEA
 15128                           fsr0l	equ	0xFE9
 15129                           wreg	equ	0xFE8
 15130                           fsr1h	equ	0xFE2
 15131                           fsr1l	equ	0xFE1
 15132                           indf2	equ	0xFDF
 15133                           postinc2	equ	0xFDE
 15134                           postdec2	equ	0xFDD
 15135                           fsr2h	equ	0xFDA
 15136                           fsr2l	equ	0xFD9
 15137                           status	equ	0xFD8
 15138                           
 15139 ;; *************** function i2___awdiv *****************
 15140 ;; Defined at:
 15141 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 15142 ;; Parameters:    Size  Location     Type
 15143 ;;  dividend        2    6[COMRAM] int 
 15144 ;;  divisor         2    8[COMRAM] int 
 15145 ;; Auto vars:     Size  Location     Type
 15146 ;;  __awdiv         2   12[COMRAM] int 
 15147 ;;  __awdiv         1   11[COMRAM] unsigned char 
 15148 ;;  __awdiv         1   10[COMRAM] unsigned char 
 15149 ;; Return value:  Size  Location     Type
 15150 ;;                  2    6[COMRAM] int 
 15151 ;; Registers used:
 15152 ;;		wreg, status,2, status,0
 15153 ;; Tracked objects:
 15154 ;;		On entry : 0/0
 15155 ;;		On exit  : 0/0
 15156 ;;		Unchanged: 0/0
 15157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15158 ;;      Params:         4       0       0       0       0       0       0
 15159 ;;      Locals:         4       0       0       0       0       0       0
 15160 ;;      Temps:          0       0       0       0       0       0       0
 15161 ;;      Totals:         8       0       0       0       0       0       0
 15162 ;;Total ram usage:        8 bytes
 15163 ;; Hardware stack levels used:    1
 15164 ;; This function calls:
 15165 ;;		Nothing
 15166 ;; This function is called by:
 15167 ;;		i2_fround
 15168 ;;		i2_scale
 15169 ;;		i2__doprnt
 15170 ;; This function uses a non-reentrant model
 15171 ;;
 15172                           
 15173                           	psect	text56
 15174  004F1E                     __ptext56:
 15175                           	opt stack 0
 15176  004F1E                     i2___awdiv:
 15177                           	opt stack 20
 15178                           
 15179                           ;incstack = 0
 15180  004F1E  0E00               	movlw	0
 15181  004F20  6E0C               	movwf	i2___awdiv@sign,c
 15182  004F22  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 15183  004F24  D006               	goto	i2l3570
 15184  004F26  6C09               	negf	i2___awdiv@divisor,c
 15185  004F28  1E0A               	comf	i2___awdiv@divisor+1,f,c
 15186  004F2A  B0D8               	btfsc	status,0,c
 15187  004F2C  2A0A               	incf	i2___awdiv@divisor+1,f,c
 15188  004F2E  0E01               	movlw	1
 15189  004F30  6E0C               	movwf	i2___awdiv@sign,c
 15190  004F32                     i2l3570:
 15191  004F32  AE08               	btfss	i2___awdiv@dividend+1,7,c
 15192  004F34  D006               	goto	i2l3576
 15193  004F36  6C07               	negf	i2___awdiv@dividend,c
 15194  004F38  1E08               	comf	i2___awdiv@dividend+1,f,c
 15195  004F3A  B0D8               	btfsc	status,0,c
 15196  004F3C  2A08               	incf	i2___awdiv@dividend+1,f,c
 15197  004F3E  0E01               	movlw	1
 15198  004F40  1A0C               	xorwf	i2___awdiv@sign,f,c
 15199  004F42                     i2l3576:
 15200  004F42  0E00               	movlw	0
 15201  004F44  6E0E               	movwf	i2___awdiv@quotient+1,c
 15202  004F46  0E00               	movlw	0
 15203  004F48  6E0D               	movwf	i2___awdiv@quotient,c
 15204  004F4A  5009               	movf	i2___awdiv@divisor,w,c
 15205  004F4C  100A               	iorwf	i2___awdiv@divisor+1,w,c
 15206  004F4E  B4D8               	btfsc	status,2,c
 15207  004F50  D01C               	goto	i2l3598
 15208  004F52  0E01               	movlw	1
 15209  004F54  6E0B               	movwf	i2___awdiv@counter,c
 15210  004F56  D004               	goto	i2l3584
 15211  004F58                     i2l3582:
 15212  004F58  90D8               	bcf	status,0,c
 15213  004F5A  3609               	rlcf	i2___awdiv@divisor,f,c
 15214  004F5C  360A               	rlcf	i2___awdiv@divisor+1,f,c
 15215  004F5E  2A0B               	incf	i2___awdiv@counter,f,c
 15216  004F60                     i2l3584:
 15217  004F60  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 15218  004F62  D7FA               	goto	i2l3582
 15219  004F64                     i2l3586:
 15220  004F64  90D8               	bcf	status,0,c
 15221  004F66  360D               	rlcf	i2___awdiv@quotient,f,c
 15222  004F68  360E               	rlcf	i2___awdiv@quotient+1,f,c
 15223  004F6A  5009               	movf	i2___awdiv@divisor,w,c
 15224  004F6C  5C07               	subwf	i2___awdiv@dividend,w,c
 15225  004F6E  500A               	movf	i2___awdiv@divisor+1,w,c
 15226  004F70  5808               	subwfb	i2___awdiv@dividend+1,w,c
 15227  004F72  A0D8               	btfss	status,0,c
 15228  004F74  D005               	goto	i2l3594
 15229  004F76  5009               	movf	i2___awdiv@divisor,w,c
 15230  004F78  5E07               	subwf	i2___awdiv@dividend,f,c
 15231  004F7A  500A               	movf	i2___awdiv@divisor+1,w,c
 15232  004F7C  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 15233  004F7E  800D               	bsf	i2___awdiv@quotient,0,c
 15234  004F80                     i2l3594:
 15235  004F80  90D8               	bcf	status,0,c
 15236  004F82  320A               	rrcf	i2___awdiv@divisor+1,f,c
 15237  004F84  3209               	rrcf	i2___awdiv@divisor,f,c
 15238  004F86  2E0B               	decfsz	i2___awdiv@counter,f,c
 15239  004F88  D7ED               	goto	i2l3586
 15240  004F8A                     i2l3598:
 15241  004F8A  500C               	movf	i2___awdiv@sign,w,c
 15242  004F8C  B4D8               	btfsc	status,2,c
 15243  004F8E  D004               	goto	i2l3602
 15244  004F90  6C0D               	negf	i2___awdiv@quotient,c
 15245  004F92  1E0E               	comf	i2___awdiv@quotient+1,f,c
 15246  004F94  B0D8               	btfsc	status,0,c
 15247  004F96  2A0E               	incf	i2___awdiv@quotient+1,f,c
 15248  004F98                     i2l3602:
 15249  004F98  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 15250  004F9C  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 15251  004FA0  0012               	return	
 15252  004FA2                     __end_ofi2___awdiv:
 15253                           	opt stack 0
 15254                           tosu	equ	0xFFF
 15255                           tosh	equ	0xFFE
 15256                           tosl	equ	0xFFD
 15257                           pclatu	equ	0xFFB
 15258                           pclath	equ	0xFFA
 15259                           tblptru	equ	0xFF8
 15260                           tblptrh	equ	0xFF7
 15261                           tblptrl	equ	0xFF6
 15262                           tablat	equ	0xFF5
 15263                           prodh	equ	0xFF4
 15264                           prodl	equ	0xFF3
 15265                           intcon	equ	0xFF2
 15266                           intcon2	equ	0xFF1
 15267                           postinc0	equ	0xFEE
 15268                           fsr0h	equ	0xFEA
 15269                           fsr0l	equ	0xFE9
 15270                           wreg	equ	0xFE8
 15271                           fsr1h	equ	0xFE2
 15272                           fsr1l	equ	0xFE1
 15273                           indf2	equ	0xFDF
 15274                           postinc2	equ	0xFDE
 15275                           postdec2	equ	0xFDD
 15276                           fsr2h	equ	0xFDA
 15277                           fsr2l	equ	0xFD9
 15278                           status	equ	0xFD8
 15279                           
 15280 ;; *************** function i2__tdiv_to_l_ *****************
 15281 ;; Defined at:
 15282 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdivl.c"
 15283 ;; Parameters:    Size  Location     Type
 15284 ;;  f1              3    0[COMRAM] float 
 15285 ;;  f2              3    3[COMRAM] float 
 15286 ;; Auto vars:     Size  Location     Type
 15287 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 15288 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 15289 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 15290 ;; Return value:  Size  Location     Type
 15291 ;;                  4    0[COMRAM] unsigned long 
 15292 ;; Registers used:
 15293 ;;		wreg, status,2, status,0
 15294 ;; Tracked objects:
 15295 ;;		On entry : 0/0
 15296 ;;		On exit  : 0/0
 15297 ;;		Unchanged: 0/0
 15298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15299 ;;      Params:         6       0       0       0       0       0       0
 15300 ;;      Locals:         6       0       0       0       0       0       0
 15301 ;;      Temps:          3       0       0       0       0       0       0
 15302 ;;      Totals:        15       0       0       0       0       0       0
 15303 ;;Total ram usage:       15 bytes
 15304 ;; Hardware stack levels used:    1
 15305 ;; This function calls:
 15306 ;;		Nothing
 15307 ;; This function is called by:
 15308 ;;		i2__doprnt
 15309 ;; This function uses a non-reentrant model
 15310 ;;
 15311                           
 15312                           	psect	text57
 15313  004386                     __ptext57:
 15314                           	opt stack 0
 15315  004386                     i2__tdiv_to_l_:
 15316                           	opt stack 21
 15317                           
 15318                           ;incstack = 0
 15319  004386  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 15320  00438A  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 15321  00438C  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 15322  00438E  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 15323  004390  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 15324  004392  E301               	bnc	u502_41
 15325  004394  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 15326  004396                     u502_41:
 15327  004396  5007               	movf	??i2__tdiv_to_l_,w,c
 15328  004398  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 15329  00439A  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 15330  00439C  A4D8               	btfss	status,2,c
 15331  00439E  D009               	goto	i2l4096
 15332  0043A0  0E00               	movlw	0
 15333  0043A2  6E01               	movwf	?i2__tdiv_to_l_,c
 15334  0043A4  0E00               	movlw	0
 15335  0043A6  6E02               	movwf	?i2__tdiv_to_l_+1,c
 15336  0043A8  0E00               	movlw	0
 15337  0043AA  6E03               	movwf	?i2__tdiv_to_l_+2,c
 15338  0043AC  0E00               	movlw	0
 15339  0043AE  6E04               	movwf	?i2__tdiv_to_l_+3,c
 15340  0043B0  0012               	return	
 15341  0043B2                     i2l4096:
 15342  0043B2  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 15343  0043B6  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 15344  0043B8  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 15345  0043BA  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 15346  0043BC  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 15347  0043BE  E301               	bnc	u504_41
 15348  0043C0  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 15349  0043C2                     u504_41:
 15350  0043C2  5007               	movf	??i2__tdiv_to_l_,w,c
 15351  0043C4  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 15352  0043C6  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 15353  0043C8  A4D8               	btfss	status,2,c
 15354  0043CA  D009               	goto	i2l4102
 15355  0043CC  0E00               	movlw	0
 15356  0043CE  6E01               	movwf	?i2__tdiv_to_l_,c
 15357  0043D0  0E00               	movlw	0
 15358  0043D2  6E02               	movwf	?i2__tdiv_to_l_+1,c
 15359  0043D4  0E00               	movlw	0
 15360  0043D6  6E03               	movwf	?i2__tdiv_to_l_+2,c
 15361  0043D8  0E00               	movlw	0
 15362  0043DA  6E04               	movwf	?i2__tdiv_to_l_+3,c
 15363  0043DC  0012               	return	
 15364  0043DE                     i2l4102:
 15365  0043DE  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 15366  0043E0  0EFF               	movlw	255
 15367  0043E2  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 15368  0043E4  0EFF               	movlw	255
 15369  0043E6  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 15370  0043E8  0E00               	movlw	0
 15371  0043EA  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 15372  0043EC  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 15373  0043EE  0EFF               	movlw	255
 15374  0043F0  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 15375  0043F2  0EFF               	movlw	255
 15376  0043F4  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 15377  0043F6  0E00               	movlw	0
 15378  0043F8  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 15379  0043FA  0E00               	movlw	0
 15380  0043FC  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 15381  0043FE  0E00               	movlw	0
 15382  004400  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 15383  004402  0E00               	movlw	0
 15384  004404  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 15385  004406  0E00               	movlw	0
 15386  004408  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 15387  00440A  0E7F               	movlw	127
 15388  00440C  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 15389  00440E  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 15390  004410  0F98               	addlw	152
 15391  004412  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 15392  004414  0E18               	movlw	24
 15393  004416  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 15394  004418                     i2l770:
 15395  004418  90D8               	bcf	status,0,c
 15396  00441A  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 15397  00441C  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 15398  00441E  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 15399  004420  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 15400  004422  5004               	movf	i2__tdiv_to_l_@f2,w,c
 15401  004424  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 15402  004426  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 15403  004428  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 15404  00442A  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 15405  00442C  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 15406  00442E  A0D8               	btfss	status,0,c
 15407  004430  D007               	goto	i2l771
 15408  004432  5004               	movf	i2__tdiv_to_l_@f2,w,c
 15409  004434  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 15410  004436  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 15411  004438  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 15412  00443A  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 15413  00443C  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 15414  00443E  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 15415  004440                     i2l771:
 15416  004440  90D8               	bcf	status,0,c
 15417  004442  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 15418  004444  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 15419  004446  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 15420  004448  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 15421  00444A  D7E6               	goto	i2l770
 15422  00444C  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 15423  00444E  D016               	goto	i2l4136
 15424  004450  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 15425  004452  0A80               	xorlw	128
 15426  004454  0F97               	addlw	151
 15427  004456  B0D8               	btfsc	status,0,c
 15428  004458  D009               	goto	i2l4132
 15429  00445A  0E00               	movlw	0
 15430  00445C  6E01               	movwf	?i2__tdiv_to_l_,c
 15431  00445E  0E00               	movlw	0
 15432  004460  6E02               	movwf	?i2__tdiv_to_l_+1,c
 15433  004462  0E00               	movlw	0
 15434  004464  6E03               	movwf	?i2__tdiv_to_l_+2,c
 15435  004466  0E00               	movlw	0
 15436  004468  6E04               	movwf	?i2__tdiv_to_l_+3,c
 15437  00446A  0012               	return	
 15438  00446C                     i2l4132:
 15439  00446C  90D8               	bcf	status,0,c
 15440  00446E  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 15441  004470  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 15442  004472  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 15443  004474  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 15444  004476  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 15445  004478  D7F9               	goto	i2l4132
 15446  00447A  D015               	goto	i2l777
 15447  00447C                     i2l4136:
 15448  00447C  0E17               	movlw	23
 15449  00447E  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 15450  004480  D00F               	goto	i2l4144
 15451  004482  0E00               	movlw	0
 15452  004484  6E01               	movwf	?i2__tdiv_to_l_,c
 15453  004486  0E00               	movlw	0
 15454  004488  6E02               	movwf	?i2__tdiv_to_l_+1,c
 15455  00448A  0E00               	movlw	0
 15456  00448C  6E03               	movwf	?i2__tdiv_to_l_+2,c
 15457  00448E  0E00               	movlw	0
 15458  004490  6E04               	movwf	?i2__tdiv_to_l_+3,c
 15459  004492  0012               	return	
 15460  004494                     i2l4142:
 15461  004494  90D8               	bcf	status,0,c
 15462  004496  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 15463  004498  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 15464  00449A  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 15465  00449C  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 15466  00449E  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 15467  0044A0                     i2l4144:
 15468  0044A0  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 15469  0044A2  A4D8               	btfss	status,2,c
 15470  0044A4  D7F7               	goto	i2l4142
 15471  0044A6                     i2l777:
 15472  0044A6  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 15473  0044AA  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 15474  0044AE  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 15475  0044B2  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 15476  0044B6  0012               	return		;funcret
 15477  0044B8                     __end_ofi2__tdiv_to_l_:
 15478                           	opt stack 0
 15479                           tosu	equ	0xFFF
 15480                           tosh	equ	0xFFE
 15481                           tosl	equ	0xFFD
 15482                           pclatu	equ	0xFFB
 15483                           pclath	equ	0xFFA
 15484                           tblptru	equ	0xFF8
 15485                           tblptrh	equ	0xFF7
 15486                           tblptrl	equ	0xFF6
 15487                           tablat	equ	0xFF5
 15488                           prodh	equ	0xFF4
 15489                           prodl	equ	0xFF3
 15490                           intcon	equ	0xFF2
 15491                           intcon2	equ	0xFF1
 15492                           postinc0	equ	0xFEE
 15493                           fsr0h	equ	0xFEA
 15494                           fsr0l	equ	0xFE9
 15495                           wreg	equ	0xFE8
 15496                           fsr1h	equ	0xFE2
 15497                           fsr1l	equ	0xFE1
 15498                           indf2	equ	0xFDF
 15499                           postinc2	equ	0xFDE
 15500                           postdec2	equ	0xFDD
 15501                           fsr2h	equ	0xFDA
 15502                           fsr2l	equ	0xFD9
 15503                           status	equ	0xFD8
 15504                           
 15505 ;; *************** function i2__div_to_l_ *****************
 15506 ;; Defined at:
 15507 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fldivl.c"
 15508 ;; Parameters:    Size  Location     Type
 15509 ;;  f1              3    0[COMRAM] unsigned long 
 15510 ;;  f2              3    3[COMRAM] unsigned long 
 15511 ;; Auto vars:     Size  Location     Type
 15512 ;;  _div_to_l_      4    6[COMRAM] unsigned long 
 15513 ;;  _div_to_l_      1   11[COMRAM] unsigned char 
 15514 ;;  _div_to_l_      1   10[COMRAM] unsigned char 
 15515 ;; Return value:  Size  Location     Type
 15516 ;;                  4    0[COMRAM] unsigned long 
 15517 ;; Registers used:
 15518 ;;		wreg, status,2, status,0
 15519 ;; Tracked objects:
 15520 ;;		On entry : 0/0
 15521 ;;		On exit  : 0/0
 15522 ;;		Unchanged: 0/0
 15523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15524 ;;      Params:         6       0       0       0       0       0       0
 15525 ;;      Locals:         6       0       0       0       0       0       0
 15526 ;;      Temps:          0       0       0       0       0       0       0
 15527 ;;      Totals:        12       0       0       0       0       0       0
 15528 ;;Total ram usage:       12 bytes
 15529 ;; Hardware stack levels used:    1
 15530 ;; This function calls:
 15531 ;;		Nothing
 15532 ;; This function is called by:
 15533 ;;		i2__doprnt
 15534 ;; This function uses a non-reentrant model
 15535 ;;
 15536                           
 15537                           	psect	text58
 15538  0044B8                     __ptext58:
 15539                           	opt stack 0
 15540  0044B8                     i2__div_to_l_:
 15541                           	opt stack 21
 15542                           
 15543                           ;incstack = 0
 15544  0044B8  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 15545  0044BA  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 15546  0044BC  6E0C               	movwf	i2__div_to_l_@exp1,c
 15547  0044BE  500C               	movf	i2__div_to_l_@exp1,w,c
 15548  0044C0  A4D8               	btfss	status,2,c
 15549  0044C2  D009               	goto	i2l4036
 15550  0044C4  0E00               	movlw	0
 15551  0044C6  6E01               	movwf	?i2__div_to_l_,c
 15552  0044C8  0E00               	movlw	0
 15553  0044CA  6E02               	movwf	?i2__div_to_l_+1,c
 15554  0044CC  0E00               	movlw	0
 15555  0044CE  6E03               	movwf	?i2__div_to_l_+2,c
 15556  0044D0  0E00               	movlw	0
 15557  0044D2  6E04               	movwf	?i2__div_to_l_+3,c
 15558  0044D4  0012               	return	
 15559  0044D6                     i2l4036:
 15560  0044D6  3406               	rlcf	i2__div_to_l_@f2+2,w,c
 15561  0044D8  3407               	rlcf	i2__div_to_l_@f2+3,w,c
 15562  0044DA  6E0B               	movwf	i2__div_to_l_@cntr,c
 15563  0044DC  500B               	movf	i2__div_to_l_@cntr,w,c
 15564  0044DE  A4D8               	btfss	status,2,c
 15565  0044E0  D009               	goto	i2l4042
 15566  0044E2  0E00               	movlw	0
 15567  0044E4  6E01               	movwf	?i2__div_to_l_,c
 15568  0044E6  0E00               	movlw	0
 15569  0044E8  6E02               	movwf	?i2__div_to_l_+1,c
 15570  0044EA  0E00               	movlw	0
 15571  0044EC  6E03               	movwf	?i2__div_to_l_+2,c
 15572  0044EE  0E00               	movlw	0
 15573  0044F0  6E04               	movwf	?i2__div_to_l_+3,c
 15574  0044F2  0012               	return	
 15575  0044F4                     i2l4042:
 15576  0044F4  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 15577  0044F6  0EFF               	movlw	255
 15578  0044F8  1601               	andwf	i2__div_to_l_@f1,f,c
 15579  0044FA  0EFF               	movlw	255
 15580  0044FC  1602               	andwf	i2__div_to_l_@f1+1,f,c
 15581  0044FE  0EFF               	movlw	255
 15582  004500  1603               	andwf	i2__div_to_l_@f1+2,f,c
 15583  004502  0E00               	movlw	0
 15584  004504  1604               	andwf	i2__div_to_l_@f1+3,f,c
 15585  004506  8E06               	bsf	i2__div_to_l_@f2+2,7,c
 15586  004508  0EFF               	movlw	255
 15587  00450A  1604               	andwf	i2__div_to_l_@f2,f,c
 15588  00450C  0EFF               	movlw	255
 15589  00450E  1605               	andwf	i2__div_to_l_@f2+1,f,c
 15590  004510  0EFF               	movlw	255
 15591  004512  1606               	andwf	i2__div_to_l_@f2+2,f,c
 15592  004514  0E00               	movlw	0
 15593  004516  1607               	andwf	i2__div_to_l_@f2+3,f,c
 15594  004518  0E00               	movlw	0
 15595  00451A  6E07               	movwf	i2__div_to_l_@quot,c
 15596  00451C  0E00               	movlw	0
 15597  00451E  6E08               	movwf	i2__div_to_l_@quot+1,c
 15598  004520  0E00               	movlw	0
 15599  004522  6E09               	movwf	i2__div_to_l_@quot+2,c
 15600  004524  0E00               	movlw	0
 15601  004526  6E0A               	movwf	i2__div_to_l_@quot+3,c
 15602  004528  0E7F               	movlw	127
 15603  00452A  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 15604  00452C  500B               	movf	i2__div_to_l_@cntr,w,c
 15605  00452E  0FA0               	addlw	160
 15606  004530  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 15607  004532  0E20               	movlw	32
 15608  004534  6E0B               	movwf	i2__div_to_l_@cntr,c
 15609  004536                     i2l4056:
 15610  004536  90D8               	bcf	status,0,c
 15611  004538  3607               	rlcf	i2__div_to_l_@quot,f,c
 15612  00453A  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 15613  00453C  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 15614  00453E  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 15615  004540  5004               	movf	i2__div_to_l_@f2,w,c
 15616  004542  5C01               	subwf	i2__div_to_l_@f1,w,c
 15617  004544  5005               	movf	i2__div_to_l_@f2+1,w,c
 15618  004546  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 15619  004548  5006               	movf	i2__div_to_l_@f2+2,w,c
 15620  00454A  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 15621  00454C  5007               	movf	i2__div_to_l_@f2+3,w,c
 15622  00454E  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 15623  004550  A0D8               	btfss	status,0,c
 15624  004552  D009               	goto	i2l4064
 15625  004554  5004               	movf	i2__div_to_l_@f2,w,c
 15626  004556  5E01               	subwf	i2__div_to_l_@f1,f,c
 15627  004558  5005               	movf	i2__div_to_l_@f2+1,w,c
 15628  00455A  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 15629  00455C  5006               	movf	i2__div_to_l_@f2+2,w,c
 15630  00455E  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 15631  004560  5007               	movf	i2__div_to_l_@f2+3,w,c
 15632  004562  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 15633  004564  8007               	bsf	i2__div_to_l_@quot,0,c
 15634  004566                     i2l4064:
 15635  004566  90D8               	bcf	status,0,c
 15636  004568  3601               	rlcf	i2__div_to_l_@f1,f,c
 15637  00456A  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 15638  00456C  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 15639  00456E  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 15640  004570  2E0B               	decfsz	i2__div_to_l_@cntr,f,c
 15641  004572  D7E1               	goto	i2l4056
 15642  004574  AE0C               	btfss	i2__div_to_l_@exp1,7,c
 15643  004576  D016               	goto	i2l4080
 15644  004578  500C               	movf	i2__div_to_l_@exp1,w,c
 15645  00457A  0A80               	xorlw	128
 15646  00457C  0F9F               	addlw	159
 15647  00457E  B0D8               	btfsc	status,0,c
 15648  004580  D009               	goto	i2l4076
 15649  004582  0E00               	movlw	0
 15650  004584  6E01               	movwf	?i2__div_to_l_,c
 15651  004586  0E00               	movlw	0
 15652  004588  6E02               	movwf	?i2__div_to_l_+1,c
 15653  00458A  0E00               	movlw	0
 15654  00458C  6E03               	movwf	?i2__div_to_l_+2,c
 15655  00458E  0E00               	movlw	0
 15656  004590  6E04               	movwf	?i2__div_to_l_+3,c
 15657  004592  0012               	return	
 15658  004594                     i2l4076:
 15659  004594  90D8               	bcf	status,0,c
 15660  004596  320A               	rrcf	i2__div_to_l_@quot+3,f,c
 15661  004598  3209               	rrcf	i2__div_to_l_@quot+2,f,c
 15662  00459A  3208               	rrcf	i2__div_to_l_@quot+1,f,c
 15663  00459C  3207               	rrcf	i2__div_to_l_@quot,f,c
 15664  00459E  3E0C               	incfsz	i2__div_to_l_@exp1,f,c
 15665  0045A0  D7F9               	goto	i2l4076
 15666  0045A2  D015               	goto	i2l673
 15667  0045A4                     i2l4080:
 15668  0045A4  0E1F               	movlw	31
 15669  0045A6  640C               	cpfsgt	i2__div_to_l_@exp1,c
 15670  0045A8  D00F               	goto	i2l4088
 15671  0045AA  0E00               	movlw	0
 15672  0045AC  6E01               	movwf	?i2__div_to_l_,c
 15673  0045AE  0E00               	movlw	0
 15674  0045B0  6E02               	movwf	?i2__div_to_l_+1,c
 15675  0045B2  0E00               	movlw	0
 15676  0045B4  6E03               	movwf	?i2__div_to_l_+2,c
 15677  0045B6  0E00               	movlw	0
 15678  0045B8  6E04               	movwf	?i2__div_to_l_+3,c
 15679  0045BA  0012               	return	
 15680  0045BC                     i2l4086:
 15681  0045BC  90D8               	bcf	status,0,c
 15682  0045BE  3607               	rlcf	i2__div_to_l_@quot,f,c
 15683  0045C0  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 15684  0045C2  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 15685  0045C4  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 15686  0045C6  060C               	decf	i2__div_to_l_@exp1,f,c
 15687  0045C8                     i2l4088:
 15688  0045C8  500C               	movf	i2__div_to_l_@exp1,w,c
 15689  0045CA  A4D8               	btfss	status,2,c
 15690  0045CC  D7F7               	goto	i2l4086
 15691  0045CE                     i2l673:
 15692  0045CE  C007  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 15693  0045D2  C008  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 15694  0045D6  C009  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 15695  0045DA  C00A  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 15696  0045DE  0012               	return		;funcret
 15697  0045E0                     __end_ofi2__div_to_l_:
 15698                           	opt stack 0
 15699                           tosu	equ	0xFFF
 15700                           tosh	equ	0xFFE
 15701                           tosl	equ	0xFFD
 15702                           pclatu	equ	0xFFB
 15703                           pclath	equ	0xFFA
 15704                           tblptru	equ	0xFF8
 15705                           tblptrh	equ	0xFF7
 15706                           tblptrl	equ	0xFF6
 15707                           tablat	equ	0xFF5
 15708                           prodh	equ	0xFF4
 15709                           prodl	equ	0xFF3
 15710                           intcon	equ	0xFF2
 15711                           intcon2	equ	0xFF1
 15712                           postinc0	equ	0xFEE
 15713                           fsr0h	equ	0xFEA
 15714                           fsr0l	equ	0xFE9
 15715                           wreg	equ	0xFE8
 15716                           fsr1h	equ	0xFE2
 15717                           fsr1l	equ	0xFE1
 15718                           indf2	equ	0xFDF
 15719                           postinc2	equ	0xFDE
 15720                           postdec2	equ	0xFDD
 15721                           fsr2h	equ	0xFDA
 15722                           fsr2l	equ	0xFD9
 15723                           status	equ	0xFD8
 15724                           
 15725 ;; *************** function i2___lltoft *****************
 15726 ;; Defined at:
 15727 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lltoft.c"
 15728 ;; Parameters:    Size  Location     Type
 15729 ;;  c               4    8[COMRAM] unsigned long 
 15730 ;; Auto vars:     Size  Location     Type
 15731 ;;  __lltoft        1   16[COMRAM] unsigned char 
 15732 ;; Return value:  Size  Location     Type
 15733 ;;                  3    8[COMRAM] float 
 15734 ;; Registers used:
 15735 ;;		wreg, status,2, status,0, cstack
 15736 ;; Tracked objects:
 15737 ;;		On entry : 0/0
 15738 ;;		On exit  : 0/0
 15739 ;;		Unchanged: 0/0
 15740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15741 ;;      Params:         4       0       0       0       0       0       0
 15742 ;;      Locals:         1       0       0       0       0       0       0
 15743 ;;      Temps:          4       0       0       0       0       0       0
 15744 ;;      Totals:         9       0       0       0       0       0       0
 15745 ;;Total ram usage:        9 bytes
 15746 ;; Hardware stack levels used:    1
 15747 ;; Hardware stack levels required when called:    1
 15748 ;; This function calls:
 15749 ;;		i2___ftpack
 15750 ;; This function is called by:
 15751 ;;		i2__doprnt
 15752 ;; This function uses a non-reentrant model
 15753 ;;
 15754                           
 15755                           	psect	text59
 15756  0051F0                     __ptext59:
 15757                           	opt stack 0
 15758  0051F0                     i2___lltoft:
 15759                           	opt stack 20
 15760                           
 15761                           ;incstack = 0
 15762  0051F0  0E8E               	movlw	142
 15763  0051F2  6E11               	movwf	i2___lltoft@exp,c
 15764  0051F4  D006               	goto	i2l4276
 15765  0051F6                     i2l4274:
 15766  0051F6  90D8               	bcf	status,0,c
 15767  0051F8  320C               	rrcf	i2___lltoft@c+3,f,c
 15768  0051FA  320B               	rrcf	i2___lltoft@c+2,f,c
 15769  0051FC  320A               	rrcf	i2___lltoft@c+1,f,c
 15770  0051FE  3209               	rrcf	i2___lltoft@c,f,c
 15771  005200  2A11               	incf	i2___lltoft@exp,f,c
 15772  005202                     i2l4276:
 15773  005202  0E00               	movlw	0
 15774  005204  1409               	andwf	i2___lltoft@c,w,c
 15775  005206  6E0D               	movwf	??i2___lltoft& (0+255),c
 15776  005208  0E00               	movlw	0
 15777  00520A  140A               	andwf	i2___lltoft@c+1,w,c
 15778  00520C  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 15779  00520E  0E00               	movlw	0
 15780  005210  140B               	andwf	i2___lltoft@c+2,w,c
 15781  005212  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 15782  005214  0EFF               	movlw	255
 15783  005216  140C               	andwf	i2___lltoft@c+3,w,c
 15784  005218  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 15785  00521A  500D               	movf	??i2___lltoft,w,c
 15786  00521C  100E               	iorwf	??i2___lltoft+1,w,c
 15787  00521E  100F               	iorwf	??i2___lltoft+2,w,c
 15788  005220  1010               	iorwf	??i2___lltoft+3,w,c
 15789  005222  A4D8               	btfss	status,2,c
 15790  005224  D7E8               	goto	i2l4274
 15791  005226  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 15792  00522A  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 15793  00522E  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 15794  005232  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 15795  005236  0E00               	movlw	0
 15796  005238  6E05               	movwf	i2___ftpack@sign,c
 15797  00523A  ECFE  F025         	call	i2___ftpack	;wreg free
 15798  00523E  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 15799  005242  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 15800  005246  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 15801  00524A  0012               	return	
 15802  00524C                     __end_ofi2___lltoft:
 15803                           	opt stack 0
 15804                           tosu	equ	0xFFF
 15805                           tosh	equ	0xFFE
 15806                           tosl	equ	0xFFD
 15807                           pclatu	equ	0xFFB
 15808                           pclath	equ	0xFFA
 15809                           tblptru	equ	0xFF8
 15810                           tblptrh	equ	0xFF7
 15811                           tblptrl	equ	0xFF6
 15812                           tablat	equ	0xFF5
 15813                           prodh	equ	0xFF4
 15814                           prodl	equ	0xFF3
 15815                           intcon	equ	0xFF2
 15816                           intcon2	equ	0xFF1
 15817                           postinc0	equ	0xFEE
 15818                           fsr0h	equ	0xFEA
 15819                           fsr0l	equ	0xFE9
 15820                           wreg	equ	0xFE8
 15821                           fsr1h	equ	0xFE2
 15822                           fsr1l	equ	0xFE1
 15823                           indf2	equ	0xFDF
 15824                           postinc2	equ	0xFDE
 15825                           postdec2	equ	0xFDD
 15826                           fsr2h	equ	0xFDA
 15827                           fsr2l	equ	0xFD9
 15828                           status	equ	0xFD8
 15829                           
 15830 ;; *************** function i2___llmod *****************
 15831 ;; Defined at:
 15832 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
 15833 ;; Parameters:    Size  Location     Type
 15834 ;;  dividend        4   13[COMRAM] unsigned long 
 15835 ;;  divisor         4   17[COMRAM] unsigned long 
 15836 ;; Auto vars:     Size  Location     Type
 15837 ;;  __llmod         1   21[COMRAM] unsigned char 
 15838 ;; Return value:  Size  Location     Type
 15839 ;;                  4   13[COMRAM] unsigned long 
 15840 ;; Registers used:
 15841 ;;		wreg, status,2, status,0
 15842 ;; Tracked objects:
 15843 ;;		On entry : 0/0
 15844 ;;		On exit  : 0/0
 15845 ;;		Unchanged: 0/0
 15846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15847 ;;      Params:         8       0       0       0       0       0       0
 15848 ;;      Locals:         1       0       0       0       0       0       0
 15849 ;;      Temps:          0       0       0       0       0       0       0
 15850 ;;      Totals:         9       0       0       0       0       0       0
 15851 ;;Total ram usage:        9 bytes
 15852 ;; Hardware stack levels used:    1
 15853 ;; This function calls:
 15854 ;;		Nothing
 15855 ;; This function is called by:
 15856 ;;		i2__doprnt
 15857 ;; This function uses a non-reentrant model
 15858 ;;
 15859                           
 15860                           	psect	text60
 15861  00518A                     __ptext60:
 15862                           	opt stack 0
 15863  00518A                     i2___llmod:
 15864                           	opt stack 21
 15865                           
 15866                           ;incstack = 0
 15867  00518A  5012               	movf	i2___llmod@divisor,w,c
 15868  00518C  1013               	iorwf	i2___llmod@divisor+1,w,c
 15869  00518E  1014               	iorwf	i2___llmod@divisor+2,w,c
 15870  005190  1015               	iorwf	i2___llmod@divisor+3,w,c
 15871  005192  B4D8               	btfsc	status,2,c
 15872  005194  D024               	goto	i2l884
 15873  005196  0E01               	movlw	1
 15874  005198  6E16               	movwf	i2___llmod@counter,c
 15875  00519A  D006               	goto	i2l4262
 15876  00519C                     i2l4260:
 15877  00519C  90D8               	bcf	status,0,c
 15878  00519E  3612               	rlcf	i2___llmod@divisor,f,c
 15879  0051A0  3613               	rlcf	i2___llmod@divisor+1,f,c
 15880  0051A2  3614               	rlcf	i2___llmod@divisor+2,f,c
 15881  0051A4  3615               	rlcf	i2___llmod@divisor+3,f,c
 15882  0051A6  2A16               	incf	i2___llmod@counter,f,c
 15883  0051A8                     i2l4262:
 15884  0051A8  AE15               	btfss	i2___llmod@divisor+3,7,c
 15885  0051AA  D7F8               	goto	i2l4260
 15886  0051AC                     i2l4264:
 15887  0051AC  5012               	movf	i2___llmod@divisor,w,c
 15888  0051AE  5C0E               	subwf	i2___llmod@dividend,w,c
 15889  0051B0  5013               	movf	i2___llmod@divisor+1,w,c
 15890  0051B2  580F               	subwfb	i2___llmod@dividend+1,w,c
 15891  0051B4  5014               	movf	i2___llmod@divisor+2,w,c
 15892  0051B6  5810               	subwfb	i2___llmod@dividend+2,w,c
 15893  0051B8  5015               	movf	i2___llmod@divisor+3,w,c
 15894  0051BA  5811               	subwfb	i2___llmod@dividend+3,w,c
 15895  0051BC  A0D8               	btfss	status,0,c
 15896  0051BE  D008               	goto	i2l4268
 15897  0051C0  5012               	movf	i2___llmod@divisor,w,c
 15898  0051C2  5E0E               	subwf	i2___llmod@dividend,f,c
 15899  0051C4  5013               	movf	i2___llmod@divisor+1,w,c
 15900  0051C6  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 15901  0051C8  5014               	movf	i2___llmod@divisor+2,w,c
 15902  0051CA  5A10               	subwfb	i2___llmod@dividend+2,f,c
 15903  0051CC  5015               	movf	i2___llmod@divisor+3,w,c
 15904  0051CE  5A11               	subwfb	i2___llmod@dividend+3,f,c
 15905  0051D0                     i2l4268:
 15906  0051D0  90D8               	bcf	status,0,c
 15907  0051D2  3215               	rrcf	i2___llmod@divisor+3,f,c
 15908  0051D4  3214               	rrcf	i2___llmod@divisor+2,f,c
 15909  0051D6  3213               	rrcf	i2___llmod@divisor+1,f,c
 15910  0051D8  3212               	rrcf	i2___llmod@divisor,f,c
 15911  0051DA  2E16               	decfsz	i2___llmod@counter,f,c
 15912  0051DC  D7E7               	goto	i2l4264
 15913  0051DE                     i2l884:
 15914  0051DE  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 15915  0051E2  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 15916  0051E6  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 15917  0051EA  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 15918  0051EE  0012               	return		;funcret
 15919  0051F0                     __end_ofi2___llmod:
 15920                           	opt stack 0
 15921                           tosu	equ	0xFFF
 15922                           tosh	equ	0xFFE
 15923                           tosl	equ	0xFFD
 15924                           pclatu	equ	0xFFB
 15925                           pclath	equ	0xFFA
 15926                           tblptru	equ	0xFF8
 15927                           tblptrh	equ	0xFF7
 15928                           tblptrl	equ	0xFF6
 15929                           tablat	equ	0xFF5
 15930                           prodh	equ	0xFF4
 15931                           prodl	equ	0xFF3
 15932                           intcon	equ	0xFF2
 15933                           intcon2	equ	0xFF1
 15934                           postinc0	equ	0xFEE
 15935                           fsr0h	equ	0xFEA
 15936                           fsr0l	equ	0xFE9
 15937                           wreg	equ	0xFE8
 15938                           fsr1h	equ	0xFE2
 15939                           fsr1l	equ	0xFE1
 15940                           indf2	equ	0xFDF
 15941                           postinc2	equ	0xFDE
 15942                           postdec2	equ	0xFDD
 15943                           fsr2h	equ	0xFDA
 15944                           fsr2l	equ	0xFD9
 15945                           status	equ	0xFD8
 15946                           
 15947 ;; *************** function i2___lldiv *****************
 15948 ;; Defined at:
 15949 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
 15950 ;; Parameters:    Size  Location     Type
 15951 ;;  dividend        4    0[COMRAM] unsigned long 
 15952 ;;  divisor         4    4[COMRAM] unsigned long 
 15953 ;; Auto vars:     Size  Location     Type
 15954 ;;  __lldiv         4    8[COMRAM] unsigned long 
 15955 ;;  __lldiv         1   12[COMRAM] unsigned char 
 15956 ;; Return value:  Size  Location     Type
 15957 ;;                  4    0[COMRAM] unsigned long 
 15958 ;; Registers used:
 15959 ;;		wreg, status,2, status,0
 15960 ;; Tracked objects:
 15961 ;;		On entry : 0/0
 15962 ;;		On exit  : 0/0
 15963 ;;		Unchanged: 0/0
 15964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15965 ;;      Params:         8       0       0       0       0       0       0
 15966 ;;      Locals:         5       0       0       0       0       0       0
 15967 ;;      Temps:          0       0       0       0       0       0       0
 15968 ;;      Totals:        13       0       0       0       0       0       0
 15969 ;;Total ram usage:       13 bytes
 15970 ;; Hardware stack levels used:    1
 15971 ;; This function calls:
 15972 ;;		Nothing
 15973 ;; This function is called by:
 15974 ;;		i2__doprnt
 15975 ;; This function uses a non-reentrant model
 15976 ;;
 15977                           
 15978                           	psect	text61
 15979  004FA2                     __ptext61:
 15980                           	opt stack 0
 15981  004FA2                     i2___lldiv:
 15982                           	opt stack 21
 15983                           
 15984                           ;incstack = 0
 15985  004FA2  0E00               	movlw	0
 15986  004FA4  6E09               	movwf	i2___lldiv@quotient,c
 15987  004FA6  0E00               	movlw	0
 15988  004FA8  6E0A               	movwf	i2___lldiv@quotient+1,c
 15989  004FAA  0E00               	movlw	0
 15990  004FAC  6E0B               	movwf	i2___lldiv@quotient+2,c
 15991  004FAE  0E00               	movlw	0
 15992  004FB0  6E0C               	movwf	i2___lldiv@quotient+3,c
 15993  004FB2  5005               	movf	i2___lldiv@divisor,w,c
 15994  004FB4  1006               	iorwf	i2___lldiv@divisor+1,w,c
 15995  004FB6  1007               	iorwf	i2___lldiv@divisor+2,w,c
 15996  004FB8  1008               	iorwf	i2___lldiv@divisor+3,w,c
 15997  004FBA  B4D8               	btfsc	status,2,c
 15998  004FBC  D02A               	goto	i2l874
 15999  004FBE  0E01               	movlw	1
 16000  004FC0  6E0D               	movwf	i2___lldiv@counter,c
 16001  004FC2  D006               	goto	i2l4242
 16002  004FC4                     i2l4240:
 16003  004FC4  90D8               	bcf	status,0,c
 16004  004FC6  3605               	rlcf	i2___lldiv@divisor,f,c
 16005  004FC8  3606               	rlcf	i2___lldiv@divisor+1,f,c
 16006  004FCA  3607               	rlcf	i2___lldiv@divisor+2,f,c
 16007  004FCC  3608               	rlcf	i2___lldiv@divisor+3,f,c
 16008  004FCE  2A0D               	incf	i2___lldiv@counter,f,c
 16009  004FD0                     i2l4242:
 16010  004FD0  AE08               	btfss	i2___lldiv@divisor+3,7,c
 16011  004FD2  D7F8               	goto	i2l4240
 16012  004FD4                     i2l4244:
 16013  004FD4  90D8               	bcf	status,0,c
 16014  004FD6  3609               	rlcf	i2___lldiv@quotient,f,c
 16015  004FD8  360A               	rlcf	i2___lldiv@quotient+1,f,c
 16016  004FDA  360B               	rlcf	i2___lldiv@quotient+2,f,c
 16017  004FDC  360C               	rlcf	i2___lldiv@quotient+3,f,c
 16018  004FDE  5005               	movf	i2___lldiv@divisor,w,c
 16019  004FE0  5C01               	subwf	i2___lldiv@dividend,w,c
 16020  004FE2  5006               	movf	i2___lldiv@divisor+1,w,c
 16021  004FE4  5802               	subwfb	i2___lldiv@dividend+1,w,c
 16022  004FE6  5007               	movf	i2___lldiv@divisor+2,w,c
 16023  004FE8  5803               	subwfb	i2___lldiv@dividend+2,w,c
 16024  004FEA  5008               	movf	i2___lldiv@divisor+3,w,c
 16025  004FEC  5804               	subwfb	i2___lldiv@dividend+3,w,c
 16026  004FEE  A0D8               	btfss	status,0,c
 16027  004FF0  D009               	goto	i2l4252
 16028  004FF2  5005               	movf	i2___lldiv@divisor,w,c
 16029  004FF4  5E01               	subwf	i2___lldiv@dividend,f,c
 16030  004FF6  5006               	movf	i2___lldiv@divisor+1,w,c
 16031  004FF8  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 16032  004FFA  5007               	movf	i2___lldiv@divisor+2,w,c
 16033  004FFC  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 16034  004FFE  5008               	movf	i2___lldiv@divisor+3,w,c
 16035  005000  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 16036  005002  8009               	bsf	i2___lldiv@quotient,0,c
 16037  005004                     i2l4252:
 16038  005004  90D8               	bcf	status,0,c
 16039  005006  3208               	rrcf	i2___lldiv@divisor+3,f,c
 16040  005008  3207               	rrcf	i2___lldiv@divisor+2,f,c
 16041  00500A  3206               	rrcf	i2___lldiv@divisor+1,f,c
 16042  00500C  3205               	rrcf	i2___lldiv@divisor,f,c
 16043  00500E  2E0D               	decfsz	i2___lldiv@counter,f,c
 16044  005010  D7E1               	goto	i2l4244
 16045  005012                     i2l874:
 16046  005012  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 16047  005016  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 16048  00501A  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 16049  00501E  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 16050  005022  0012               	return		;funcret
 16051  005024                     __end_ofi2___lldiv:
 16052                           	opt stack 0
 16053                           tosu	equ	0xFFF
 16054                           tosh	equ	0xFFE
 16055                           tosl	equ	0xFFD
 16056                           pclatu	equ	0xFFB
 16057                           pclath	equ	0xFFA
 16058                           tblptru	equ	0xFF8
 16059                           tblptrh	equ	0xFF7
 16060                           tblptrl	equ	0xFF6
 16061                           tablat	equ	0xFF5
 16062                           prodh	equ	0xFF4
 16063                           prodl	equ	0xFF3
 16064                           intcon	equ	0xFF2
 16065                           intcon2	equ	0xFF1
 16066                           postinc0	equ	0xFEE
 16067                           fsr0h	equ	0xFEA
 16068                           fsr0l	equ	0xFE9
 16069                           wreg	equ	0xFE8
 16070                           fsr1h	equ	0xFE2
 16071                           fsr1l	equ	0xFE1
 16072                           indf2	equ	0xFDF
 16073                           postinc2	equ	0xFDE
 16074                           postdec2	equ	0xFDD
 16075                           fsr2h	equ	0xFDA
 16076                           fsr2l	equ	0xFD9
 16077                           status	equ	0xFD8
 16078                           
 16079 ;; *************** function i2___fttol *****************
 16080 ;; Defined at:
 16081 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
 16082 ;; Parameters:    Size  Location     Type
 16083 ;;  f1              3   54[COMRAM] float 
 16084 ;; Auto vars:     Size  Location     Type
 16085 ;;  __fttol         4   64[COMRAM] unsigned long 
 16086 ;;  __fttol         1   68[COMRAM] unsigned char 
 16087 ;;  __fttol         1   63[COMRAM] unsigned char 
 16088 ;; Return value:  Size  Location     Type
 16089 ;;                  4   54[COMRAM] long 
 16090 ;; Registers used:
 16091 ;;		wreg, status,2, status,0
 16092 ;; Tracked objects:
 16093 ;;		On entry : 0/0
 16094 ;;		On exit  : 0/0
 16095 ;;		Unchanged: 0/0
 16096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16097 ;;      Params:         4       0       0       0       0       0       0
 16098 ;;      Locals:         6       0       0       0       0       0       0
 16099 ;;      Temps:          5       0       0       0       0       0       0
 16100 ;;      Totals:        15       0       0       0       0       0       0
 16101 ;;Total ram usage:       15 bytes
 16102 ;; Hardware stack levels used:    1
 16103 ;; This function calls:
 16104 ;;		Nothing
 16105 ;; This function is called by:
 16106 ;;		i2__doprnt
 16107 ;; This function uses a non-reentrant model
 16108 ;;
 16109                           
 16110                           	psect	text62
 16111  0047E0                     __ptext62:
 16112                           	opt stack 0
 16113  0047E0                     i2___fttol:
 16114                           	opt stack 21
 16115                           
 16116                           ;incstack = 0
 16117  0047E0  C039  F03B         	movff	i2___fttol@f1+2,??i2___fttol
 16118  0047E4  6A3C               	clrf	(??i2___fttol+1)& (0+255),c
 16119  0047E6  6A3D               	clrf	(??i2___fttol+2)& (0+255),c
 16120  0047E8  3438               	rlcf	i2___fttol@f1+1,w,c
 16121  0047EA  363B               	rlcf	??i2___fttol& (0+255),f,c
 16122  0047EC  E301               	bnc	u516_41
 16123  0047EE  803C               	bsf	(??i2___fttol+1)& (0+255),0,c
 16124  0047F0                     u516_41:
 16125  0047F0  503B               	movf	??i2___fttol,w,c
 16126  0047F2  6E45               	movwf	i2___fttol@exp1,c
 16127  0047F4  5045               	movf	i2___fttol@exp1,w,c
 16128  0047F6  A4D8               	btfss	status,2,c
 16129  0047F8  D009               	goto	i2l4182
 16130  0047FA  0E00               	movlw	0
 16131  0047FC  6E37               	movwf	?i2___fttol,c
 16132  0047FE  0E00               	movlw	0
 16133  004800  6E38               	movwf	?i2___fttol+1,c
 16134  004802  0E00               	movlw	0
 16135  004804  6E39               	movwf	?i2___fttol+2,c
 16136  004806  0E00               	movlw	0
 16137  004808  6E3A               	movwf	?i2___fttol+3,c
 16138  00480A  0012               	return	
 16139  00480C                     i2l4182:
 16140  00480C  0E17               	movlw	23
 16141  00480E  6E3B               	movwf	??i2___fttol& (0+255),c
 16142  004810  C037  F03C         	movff	i2___fttol@f1,??i2___fttol+1
 16143  004814  C038  F03D         	movff	i2___fttol@f1+1,??i2___fttol+2
 16144  004818  C039  F03E         	movff	i2___fttol@f1+2,??i2___fttol+3
 16145  00481C  283B               	incf	??i2___fttol,w,c
 16146  00481E  6E3F               	movwf	(??i2___fttol+4)& (0+255),c
 16147  004820  D004               	goto	i2u518_40
 16148  004822                     i2u518_45:
 16149  004822  90D8               	bcf	status,0,c
 16150  004824  323E               	rrcf	??i2___fttol+3,f,c
 16151  004826  323D               	rrcf	??i2___fttol+2,f,c
 16152  004828  323C               	rrcf	??i2___fttol+1,f,c
 16153  00482A                     i2u518_40:
 16154  00482A  2E3F               	decfsz	(??i2___fttol+4)& (0+255),f,c
 16155  00482C  D7FA               	goto	i2u518_45
 16156  00482E  503C               	movf	??i2___fttol+1,w,c
 16157  004830  6E40               	movwf	i2___fttol@sign1,c
 16158  004832  8E38               	bsf	i2___fttol@f1+1,7,c
 16159  004834  0EFF               	movlw	255
 16160  004836  1637               	andwf	i2___fttol@f1,f,c
 16161  004838  0EFF               	movlw	255
 16162  00483A  1638               	andwf	i2___fttol@f1+1,f,c
 16163  00483C  0E00               	movlw	0
 16164  00483E  1639               	andwf	i2___fttol@f1+2,f,c
 16165  004840  5037               	movf	i2___fttol@f1,w,c
 16166  004842  6E41               	movwf	i2___fttol@lval,c
 16167  004844  5038               	movf	i2___fttol@f1+1,w,c
 16168  004846  6E42               	movwf	i2___fttol@lval+1,c
 16169  004848  5039               	movf	i2___fttol@f1+2,w,c
 16170  00484A  6E43               	movwf	i2___fttol@lval+2,c
 16171  00484C  6A44               	clrf	i2___fttol@lval+3,c
 16172  00484E  0E8E               	movlw	142
 16173  004850  5E45               	subwf	i2___fttol@exp1,f,c
 16174  004852  AE45               	btfss	i2___fttol@exp1,7,c
 16175  004854  D016               	goto	i2l4204
 16176  004856  5045               	movf	i2___fttol@exp1,w,c
 16177  004858  0A80               	xorlw	128
 16178  00485A  0F8F               	addlw	143
 16179  00485C  B0D8               	btfsc	status,0,c
 16180  00485E  D009               	goto	i2l4200
 16181  004860  0E00               	movlw	0
 16182  004862  6E37               	movwf	?i2___fttol,c
 16183  004864  0E00               	movlw	0
 16184  004866  6E38               	movwf	?i2___fttol+1,c
 16185  004868  0E00               	movlw	0
 16186  00486A  6E39               	movwf	?i2___fttol+2,c
 16187  00486C  0E00               	movlw	0
 16188  00486E  6E3A               	movwf	?i2___fttol+3,c
 16189  004870  0012               	return	
 16190  004872                     i2l4200:
 16191  004872  90D8               	bcf	status,0,c
 16192  004874  3244               	rrcf	i2___fttol@lval+3,f,c
 16193  004876  3243               	rrcf	i2___fttol@lval+2,f,c
 16194  004878  3242               	rrcf	i2___fttol@lval+1,f,c
 16195  00487A  3241               	rrcf	i2___fttol@lval,f,c
 16196  00487C  3E45               	incfsz	i2___fttol@exp1,f,c
 16197  00487E  D7F9               	goto	i2l4200
 16198  004880  D015               	goto	i2l4214
 16199  004882                     i2l4204:
 16200  004882  0E17               	movlw	23
 16201  004884  6445               	cpfsgt	i2___fttol@exp1,c
 16202  004886  D00F               	goto	i2l4212
 16203  004888  0E00               	movlw	0
 16204  00488A  6E37               	movwf	?i2___fttol,c
 16205  00488C  0E00               	movlw	0
 16206  00488E  6E38               	movwf	?i2___fttol+1,c
 16207  004890  0E00               	movlw	0
 16208  004892  6E39               	movwf	?i2___fttol+2,c
 16209  004894  0E00               	movlw	0
 16210  004896  6E3A               	movwf	?i2___fttol+3,c
 16211  004898  0012               	return	
 16212  00489A                     i2l4210:
 16213  00489A  90D8               	bcf	status,0,c
 16214  00489C  3641               	rlcf	i2___fttol@lval,f,c
 16215  00489E  3642               	rlcf	i2___fttol@lval+1,f,c
 16216  0048A0  3643               	rlcf	i2___fttol@lval+2,f,c
 16217  0048A2  3644               	rlcf	i2___fttol@lval+3,f,c
 16218  0048A4  0645               	decf	i2___fttol@exp1,f,c
 16219  0048A6                     i2l4212:
 16220  0048A6  5045               	movf	i2___fttol@exp1,w,c
 16221  0048A8  A4D8               	btfss	status,2,c
 16222  0048AA  D7F7               	goto	i2l4210
 16223  0048AC                     i2l4214:
 16224  0048AC  5040               	movf	i2___fttol@sign1,w,c
 16225  0048AE  B4D8               	btfsc	status,2,c
 16226  0048B0  D008               	goto	i2l4218
 16227  0048B2  1E44               	comf	i2___fttol@lval+3,f,c
 16228  0048B4  1E43               	comf	i2___fttol@lval+2,f,c
 16229  0048B6  1E42               	comf	i2___fttol@lval+1,f,c
 16230  0048B8  6C41               	negf	i2___fttol@lval,c
 16231  0048BA  0E00               	movlw	0
 16232  0048BC  2242               	addwfc	i2___fttol@lval+1,f,c
 16233  0048BE  2243               	addwfc	i2___fttol@lval+2,f,c
 16234  0048C0  2244               	addwfc	i2___fttol@lval+3,f,c
 16235  0048C2                     i2l4218:
 16236  0048C2  C041  F037         	movff	i2___fttol@lval,?i2___fttol
 16237  0048C6  C042  F038         	movff	i2___fttol@lval+1,?i2___fttol+1
 16238  0048CA  C043  F039         	movff	i2___fttol@lval+2,?i2___fttol+2
 16239  0048CE  C044  F03A         	movff	i2___fttol@lval+3,?i2___fttol+3
 16240  0048D2  0012               	return	
 16241  0048D4                     __end_ofi2___fttol:
 16242                           	opt stack 0
 16243                           tosu	equ	0xFFF
 16244                           tosh	equ	0xFFE
 16245                           tosl	equ	0xFFD
 16246                           pclatu	equ	0xFFB
 16247                           pclath	equ	0xFFA
 16248                           tblptru	equ	0xFF8
 16249                           tblptrh	equ	0xFF7
 16250                           tblptrl	equ	0xFF6
 16251                           tablat	equ	0xFF5
 16252                           prodh	equ	0xFF4
 16253                           prodl	equ	0xFF3
 16254                           intcon	equ	0xFF2
 16255                           intcon2	equ	0xFF1
 16256                           postinc0	equ	0xFEE
 16257                           fsr0h	equ	0xFEA
 16258                           fsr0l	equ	0xFE9
 16259                           wreg	equ	0xFE8
 16260                           fsr1h	equ	0xFE2
 16261                           fsr1l	equ	0xFE1
 16262                           indf2	equ	0xFDF
 16263                           postinc2	equ	0xFDE
 16264                           postdec2	equ	0xFDD
 16265                           fsr2h	equ	0xFDA
 16266                           fsr2l	equ	0xFD9
 16267                           status	equ	0xFD8
 16268                           
 16269 ;; *************** function i2___ftsub *****************
 16270 ;; Defined at:
 16271 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
 16272 ;; Parameters:    Size  Location     Type
 16273 ;;  f1              3   32[COMRAM] float 
 16274 ;;  f2              3   35[COMRAM] float 
 16275 ;; Auto vars:     Size  Location     Type
 16276 ;;		None
 16277 ;; Return value:  Size  Location     Type
 16278 ;;                  3   32[COMRAM] float 
 16279 ;; Registers used:
 16280 ;;		wreg, status,2, status,0, cstack
 16281 ;; Tracked objects:
 16282 ;;		On entry : 0/0
 16283 ;;		On exit  : 0/0
 16284 ;;		Unchanged: 0/0
 16285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16286 ;;      Params:         6       0       0       0       0       0       0
 16287 ;;      Locals:         0       0       0       0       0       0       0
 16288 ;;      Temps:          0       0       0       0       0       0       0
 16289 ;;      Totals:         6       0       0       0       0       0       0
 16290 ;;Total ram usage:        6 bytes
 16291 ;; Hardware stack levels used:    1
 16292 ;; Hardware stack levels required when called:    2
 16293 ;; This function calls:
 16294 ;;		i2___ftadd
 16295 ;; This function is called by:
 16296 ;;		i2__doprnt
 16297 ;; This function uses a non-reentrant model
 16298 ;;
 16299                           
 16300                           	psect	text63
 16301  005402                     __ptext63:
 16302                           	opt stack 0
 16303  005402                     i2___ftsub:
 16304                           	opt stack 19
 16305                           
 16306                           ;incstack = 0
 16307  005402  5024               	movf	i2___ftsub@f2,w,c
 16308  005404  1025               	iorwf	i2___ftsub@f2+1,w,c
 16309  005406  1026               	iorwf	i2___ftsub@f2+2,w,c
 16310  005408  B4D8               	btfsc	status,2,c
 16311  00540A  D006               	goto	i2l4172
 16312  00540C  0E00               	movlw	0
 16313  00540E  1A24               	xorwf	i2___ftsub@f2,f,c
 16314  005410  0E00               	movlw	0
 16315  005412  1A25               	xorwf	i2___ftsub@f2+1,f,c
 16316  005414  0E80               	movlw	128
 16317  005416  1A26               	xorwf	i2___ftsub@f2+2,f,c
 16318  005418                     i2l4172:
 16319  005418  C021  F015         	movff	i2___ftsub@f1,i2___ftadd@f1
 16320  00541C  C022  F016         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 16321  005420  C023  F017         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 16322  005424  C024  F018         	movff	i2___ftsub@f2,i2___ftadd@f2
 16323  005428  C025  F019         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 16324  00542C  C026  F01A         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 16325  005430  ECB6  F01C         	call	i2___ftadd	;wreg free
 16326  005434  C015  F021         	movff	?i2___ftadd,?i2___ftsub
 16327  005438  C016  F022         	movff	?i2___ftadd+1,?i2___ftsub+1
 16328  00543C  C017  F023         	movff	?i2___ftadd+2,?i2___ftsub+2
 16329  005440  0012               	return	
 16330  005442                     __end_ofi2___ftsub:
 16331                           	opt stack 0
 16332                           tosu	equ	0xFFF
 16333                           tosh	equ	0xFFE
 16334                           tosl	equ	0xFFD
 16335                           pclatu	equ	0xFFB
 16336                           pclath	equ	0xFFA
 16337                           tblptru	equ	0xFF8
 16338                           tblptrh	equ	0xFF7
 16339                           tblptrl	equ	0xFF6
 16340                           tablat	equ	0xFF5
 16341                           prodh	equ	0xFF4
 16342                           prodl	equ	0xFF3
 16343                           intcon	equ	0xFF2
 16344                           intcon2	equ	0xFF1
 16345                           postinc0	equ	0xFEE
 16346                           fsr0h	equ	0xFEA
 16347                           fsr0l	equ	0xFE9
 16348                           wreg	equ	0xFE8
 16349                           fsr1h	equ	0xFE2
 16350                           fsr1l	equ	0xFE1
 16351                           indf2	equ	0xFDF
 16352                           postinc2	equ	0xFDE
 16353                           postdec2	equ	0xFDD
 16354                           fsr2h	equ	0xFDA
 16355                           fsr2l	equ	0xFD9
 16356                           status	equ	0xFD8
 16357                           
 16358 ;; *************** function i2___ftadd *****************
 16359 ;; Defined at:
 16360 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
 16361 ;; Parameters:    Size  Location     Type
 16362 ;;  f1              3   20[COMRAM] float 
 16363 ;;  f2              3   23[COMRAM] float 
 16364 ;; Auto vars:     Size  Location     Type
 16365 ;;  __ftadd         1   31[COMRAM] unsigned char 
 16366 ;;  __ftadd         1   30[COMRAM] unsigned char 
 16367 ;;  __ftadd         1   29[COMRAM] unsigned char 
 16368 ;; Return value:  Size  Location     Type
 16369 ;;                  3   20[COMRAM] float 
 16370 ;; Registers used:
 16371 ;;		wreg, status,2, status,0, cstack
 16372 ;; Tracked objects:
 16373 ;;		On entry : 0/0
 16374 ;;		On exit  : 0/0
 16375 ;;		Unchanged: 0/0
 16376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16377 ;;      Params:         6       0       0       0       0       0       0
 16378 ;;      Locals:         3       0       0       0       0       0       0
 16379 ;;      Temps:          3       0       0       0       0       0       0
 16380 ;;      Totals:        12       0       0       0       0       0       0
 16381 ;;Total ram usage:       12 bytes
 16382 ;; Hardware stack levels used:    1
 16383 ;; Hardware stack levels required when called:    1
 16384 ;; This function calls:
 16385 ;;		i2___ftpack
 16386 ;; This function is called by:
 16387 ;;		_INT0_ISR
 16388 ;;		i2__doprnt
 16389 ;;		i2___ftsub
 16390 ;; This function uses a non-reentrant model
 16391 ;;
 16392                           
 16393                           	psect	text64
 16394  00396C                     __ptext64:
 16395                           	opt stack 0
 16396  00396C                     i2___ftadd:
 16397                           	opt stack 22
 16398                           
 16399                           ;incstack = 0
 16400  00396C  C017  F01B         	movff	i2___ftadd@f1+2,??i2___ftadd
 16401  003970  6A1C               	clrf	(??i2___ftadd+1)& (0+255),c
 16402  003972  6A1D               	clrf	(??i2___ftadd+2)& (0+255),c
 16403  003974  3416               	rlcf	i2___ftadd@f1+1,w,c
 16404  003976  361B               	rlcf	??i2___ftadd& (0+255),f,c
 16405  003978  E301               	bnc	u421_41
 16406  00397A  801C               	bsf	(??i2___ftadd+1)& (0+255),0,c
 16407  00397C                     u421_41:
 16408  00397C  501B               	movf	??i2___ftadd,w,c
 16409  00397E  6E20               	movwf	i2___ftadd@exp1,c
 16410  003980  C01A  F01B         	movff	i2___ftadd@f2+2,??i2___ftadd
 16411  003984  6A1C               	clrf	(??i2___ftadd+1)& (0+255),c
 16412  003986  6A1D               	clrf	(??i2___ftadd+2)& (0+255),c
 16413  003988  3419               	rlcf	i2___ftadd@f2+1,w,c
 16414  00398A  361B               	rlcf	??i2___ftadd& (0+255),f,c
 16415  00398C  E301               	bnc	u422_41
 16416  00398E  801C               	bsf	(??i2___ftadd+1)& (0+255),0,c
 16417  003990                     u422_41:
 16418  003990  501B               	movf	??i2___ftadd,w,c
 16419  003992  6E1F               	movwf	i2___ftadd@exp2,c
 16420  003994  5020               	movf	i2___ftadd@exp1,w,c
 16421  003996  B4D8               	btfsc	status,2,c
 16422  003998  D00B               	goto	i2l728
 16423  00399A  501F               	movf	i2___ftadd@exp2,w,c
 16424  00399C  5C20               	subwf	i2___ftadd@exp1,w,c
 16425  00399E  B0D8               	btfsc	status,0,c
 16426  0039A0  D00E               	goto	i2l3650
 16427  0039A2  5020               	movf	i2___ftadd@exp1,w,c
 16428  0039A4  0800               	sublw	0
 16429  0039A6  241F               	addwf	i2___ftadd@exp2,w,c
 16430  0039A8  6E1B               	movwf	??i2___ftadd& (0+255),c
 16431  0039AA  0E18               	movlw	24
 16432  0039AC  641B               	cpfsgt	??i2___ftadd,c
 16433  0039AE  D007               	goto	i2l3650
 16434  0039B0                     i2l728:
 16435  0039B0  C018  F015         	movff	i2___ftadd@f2,?i2___ftadd
 16436  0039B4  C019  F016         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 16437  0039B8  C01A  F017         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 16438  0039BC  0012               	return	
 16439  0039BE                     i2l3650:
 16440  0039BE  501F               	movf	i2___ftadd@exp2,w,c
 16441  0039C0  B4D8               	btfsc	status,2,c
 16442  0039C2  D00B               	goto	i2l732
 16443  0039C4  5020               	movf	i2___ftadd@exp1,w,c
 16444  0039C6  5C1F               	subwf	i2___ftadd@exp2,w,c
 16445  0039C8  B0D8               	btfsc	status,0,c
 16446  0039CA  D00E               	goto	i2l3656
 16447  0039CC  501F               	movf	i2___ftadd@exp2,w,c
 16448  0039CE  0800               	sublw	0
 16449  0039D0  2420               	addwf	i2___ftadd@exp1,w,c
 16450  0039D2  6E1B               	movwf	??i2___ftadd& (0+255),c
 16451  0039D4  0E18               	movlw	24
 16452  0039D6  641B               	cpfsgt	??i2___ftadd,c
 16453  0039D8  D007               	goto	i2l3656
 16454  0039DA                     i2l732:
 16455  0039DA  C015  F015         	movff	i2___ftadd@f1,?i2___ftadd
 16456  0039DE  C016  F016         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 16457  0039E2  C017  F017         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 16458  0039E6  0012               	return	
 16459  0039E8                     i2l3656:
 16460  0039E8  0E06               	movlw	6
 16461  0039EA  6E1E               	movwf	i2___ftadd@sign,c
 16462  0039EC  BE17               	btfsc	i2___ftadd@f1+2,7,c
 16463  0039EE  8E1E               	bsf	i2___ftadd@sign,7,c
 16464  0039F0  BE1A               	btfsc	i2___ftadd@f2+2,7,c
 16465  0039F2  8C1E               	bsf	i2___ftadd@sign,6,c
 16466  0039F4  8E16               	bsf	i2___ftadd@f1+1,7,c
 16467  0039F6  0EFF               	movlw	255
 16468  0039F8  1615               	andwf	i2___ftadd@f1,f,c
 16469  0039FA  0EFF               	movlw	255
 16470  0039FC  1616               	andwf	i2___ftadd@f1+1,f,c
 16471  0039FE  0E00               	movlw	0
 16472  003A00  1617               	andwf	i2___ftadd@f1+2,f,c
 16473  003A02  8E19               	bsf	i2___ftadd@f2+1,7,c
 16474  003A04  0EFF               	movlw	255
 16475  003A06  1618               	andwf	i2___ftadd@f2,f,c
 16476  003A08  0EFF               	movlw	255
 16477  003A0A  1619               	andwf	i2___ftadd@f2+1,f,c
 16478  003A0C  0E00               	movlw	0
 16479  003A0E  161A               	andwf	i2___ftadd@f2+2,f,c
 16480  003A10  501F               	movf	i2___ftadd@exp2,w,c
 16481  003A12  5C20               	subwf	i2___ftadd@exp1,w,c
 16482  003A14  B0D8               	btfsc	status,0,c
 16483  003A16  D01B               	goto	i2l3682
 16484  003A18                     i2l3672:
 16485  003A18  90D8               	bcf	status,0,c
 16486  003A1A  3618               	rlcf	i2___ftadd@f2,f,c
 16487  003A1C  3619               	rlcf	i2___ftadd@f2+1,f,c
 16488  003A1E  361A               	rlcf	i2___ftadd@f2+2,f,c
 16489  003A20  061F               	decf	i2___ftadd@exp2,f,c
 16490  003A22  5020               	movf	i2___ftadd@exp1,w,c
 16491  003A24  181F               	xorwf	i2___ftadd@exp2,w,c
 16492  003A26  B4D8               	btfsc	status,2,c
 16493  003A28  D00D               	goto	i2l3680
 16494  003A2A  061E               	decf	i2___ftadd@sign,f,c
 16495  003A2C  C01E  F01B         	movff	i2___ftadd@sign,??i2___ftadd
 16496  003A30  0E07               	movlw	7
 16497  003A32  161B               	andwf	??i2___ftadd,f,c
 16498  003A34  B4D8               	btfsc	status,2,c
 16499  003A36  D006               	goto	i2l3680
 16500  003A38  D7EF               	goto	i2l3672
 16501  003A3A                     i2l3678:
 16502  003A3A  90D8               	bcf	status,0,c
 16503  003A3C  3217               	rrcf	i2___ftadd@f1+2,f,c
 16504  003A3E  3216               	rrcf	i2___ftadd@f1+1,f,c
 16505  003A40  3215               	rrcf	i2___ftadd@f1,f,c
 16506  003A42  2A20               	incf	i2___ftadd@exp1,f,c
 16507  003A44                     i2l3680:
 16508  003A44  501F               	movf	i2___ftadd@exp2,w,c
 16509  003A46  1820               	xorwf	i2___ftadd@exp1,w,c
 16510  003A48  B4D8               	btfsc	status,2,c
 16511  003A4A  D01F               	goto	i2l743
 16512  003A4C  D7F6               	goto	i2l3678
 16513  003A4E                     i2l3682:
 16514  003A4E  5020               	movf	i2___ftadd@exp1,w,c
 16515  003A50  5C1F               	subwf	i2___ftadd@exp2,w,c
 16516  003A52  B0D8               	btfsc	status,0,c
 16517  003A54  D01A               	goto	i2l743
 16518  003A56                     i2l3684:
 16519  003A56  90D8               	bcf	status,0,c
 16520  003A58  3615               	rlcf	i2___ftadd@f1,f,c
 16521  003A5A  3616               	rlcf	i2___ftadd@f1+1,f,c
 16522  003A5C  3617               	rlcf	i2___ftadd@f1+2,f,c
 16523  003A5E  0620               	decf	i2___ftadd@exp1,f,c
 16524  003A60  5020               	movf	i2___ftadd@exp1,w,c
 16525  003A62  181F               	xorwf	i2___ftadd@exp2,w,c
 16526  003A64  B4D8               	btfsc	status,2,c
 16527  003A66  D00D               	goto	i2l3692
 16528  003A68  061E               	decf	i2___ftadd@sign,f,c
 16529  003A6A  C01E  F01B         	movff	i2___ftadd@sign,??i2___ftadd
 16530  003A6E  0E07               	movlw	7
 16531  003A70  161B               	andwf	??i2___ftadd,f,c
 16532  003A72  B4D8               	btfsc	status,2,c
 16533  003A74  D006               	goto	i2l3692
 16534  003A76  D7EF               	goto	i2l3684
 16535  003A78                     i2l3690:
 16536  003A78  90D8               	bcf	status,0,c
 16537  003A7A  321A               	rrcf	i2___ftadd@f2+2,f,c
 16538  003A7C  3219               	rrcf	i2___ftadd@f2+1,f,c
 16539  003A7E  3218               	rrcf	i2___ftadd@f2,f,c
 16540  003A80  2A1F               	incf	i2___ftadd@exp2,f,c
 16541  003A82                     i2l3692:
 16542  003A82  501F               	movf	i2___ftadd@exp2,w,c
 16543  003A84  1820               	xorwf	i2___ftadd@exp1,w,c
 16544  003A86  A4D8               	btfss	status,2,c
 16545  003A88  D7F7               	goto	i2l3690
 16546  003A8A                     i2l743:
 16547  003A8A  AE1E               	btfss	i2___ftadd@sign,7,c
 16548  003A8C  D00C               	goto	i2l752
 16549  003A8E  0EFF               	movlw	255
 16550  003A90  1A15               	xorwf	i2___ftadd@f1,f,c
 16551  003A92  0EFF               	movlw	255
 16552  003A94  1A16               	xorwf	i2___ftadd@f1+1,f,c
 16553  003A96  0EFF               	movlw	255
 16554  003A98  1A17               	xorwf	i2___ftadd@f1+2,f,c
 16555  003A9A  0E01               	movlw	1
 16556  003A9C  2615               	addwf	i2___ftadd@f1,f,c
 16557  003A9E  0E00               	movlw	0
 16558  003AA0  2216               	addwfc	i2___ftadd@f1+1,f,c
 16559  003AA2  0E00               	movlw	0
 16560  003AA4  2217               	addwfc	i2___ftadd@f1+2,f,c
 16561  003AA6                     i2l752:
 16562  003AA6  AC1E               	btfss	i2___ftadd@sign,6,c
 16563  003AA8  D00C               	goto	i2l3698
 16564  003AAA  0EFF               	movlw	255
 16565  003AAC  1A18               	xorwf	i2___ftadd@f2,f,c
 16566  003AAE  0EFF               	movlw	255
 16567  003AB0  1A19               	xorwf	i2___ftadd@f2+1,f,c
 16568  003AB2  0EFF               	movlw	255
 16569  003AB4  1A1A               	xorwf	i2___ftadd@f2+2,f,c
 16570  003AB6  0E01               	movlw	1
 16571  003AB8  2618               	addwf	i2___ftadd@f2,f,c
 16572  003ABA  0E00               	movlw	0
 16573  003ABC  2219               	addwfc	i2___ftadd@f2+1,f,c
 16574  003ABE  0E00               	movlw	0
 16575  003AC0  221A               	addwfc	i2___ftadd@f2+2,f,c
 16576  003AC2                     i2l3698:
 16577  003AC2  0E00               	movlw	0
 16578  003AC4  6E1E               	movwf	i2___ftadd@sign,c
 16579  003AC6  5015               	movf	i2___ftadd@f1,w,c
 16580  003AC8  2618               	addwf	i2___ftadd@f2,f,c
 16581  003ACA  5016               	movf	i2___ftadd@f1+1,w,c
 16582  003ACC  2219               	addwfc	i2___ftadd@f2+1,f,c
 16583  003ACE  5017               	movf	i2___ftadd@f1+2,w,c
 16584  003AD0  221A               	addwfc	i2___ftadd@f2+2,f,c
 16585  003AD2  AE1A               	btfss	i2___ftadd@f2+2,7,c
 16586  003AD4  D00E               	goto	i2l3708
 16587  003AD6  0EFF               	movlw	255
 16588  003AD8  1A18               	xorwf	i2___ftadd@f2,f,c
 16589  003ADA  0EFF               	movlw	255
 16590  003ADC  1A19               	xorwf	i2___ftadd@f2+1,f,c
 16591  003ADE  0EFF               	movlw	255
 16592  003AE0  1A1A               	xorwf	i2___ftadd@f2+2,f,c
 16593  003AE2  0E01               	movlw	1
 16594  003AE4  2618               	addwf	i2___ftadd@f2,f,c
 16595  003AE6  0E00               	movlw	0
 16596  003AE8  2219               	addwfc	i2___ftadd@f2+1,f,c
 16597  003AEA  0E00               	movlw	0
 16598  003AEC  221A               	addwfc	i2___ftadd@f2+2,f,c
 16599  003AEE  0E01               	movlw	1
 16600  003AF0  6E1E               	movwf	i2___ftadd@sign,c
 16601  003AF2                     i2l3708:
 16602  003AF2  C018  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 16603  003AF6  C019  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 16604  003AFA  C01A  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 16605  003AFE  C020  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 16606  003B02  C01E  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 16607  003B06  ECFE  F025         	call	i2___ftpack	;wreg free
 16608  003B0A  C001  F015         	movff	?i2___ftpack,?i2___ftadd
 16609  003B0E  C002  F016         	movff	?i2___ftpack+1,?i2___ftadd+1
 16610  003B12  C003  F017         	movff	?i2___ftpack+2,?i2___ftadd+2
 16611  003B16  0012               	return	
 16612  003B18                     __end_ofi2___ftadd:
 16613                           	opt stack 0
 16614                           tosu	equ	0xFFF
 16615                           tosh	equ	0xFFE
 16616                           tosl	equ	0xFFD
 16617                           pclatu	equ	0xFFB
 16618                           pclath	equ	0xFFA
 16619                           tblptru	equ	0xFF8
 16620                           tblptrh	equ	0xFF7
 16621                           tblptrl	equ	0xFF6
 16622                           tablat	equ	0xFF5
 16623                           prodh	equ	0xFF4
 16624                           prodl	equ	0xFF3
 16625                           intcon	equ	0xFF2
 16626                           intcon2	equ	0xFF1
 16627                           postinc0	equ	0xFEE
 16628                           fsr0h	equ	0xFEA
 16629                           fsr0l	equ	0xFE9
 16630                           wreg	equ	0xFE8
 16631                           fsr1h	equ	0xFE2
 16632                           fsr1l	equ	0xFE1
 16633                           indf2	equ	0xFDF
 16634                           postinc2	equ	0xFDE
 16635                           postdec2	equ	0xFDD
 16636                           fsr2h	equ	0xFDA
 16637                           fsr2l	equ	0xFD9
 16638                           status	equ	0xFD8
 16639                           
 16640 ;; *************** function i2___ftneg *****************
 16641 ;; Defined at:
 16642 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
 16643 ;; Parameters:    Size  Location     Type
 16644 ;;  f1              3    0[COMRAM] float 
 16645 ;; Auto vars:     Size  Location     Type
 16646 ;;		None
 16647 ;; Return value:  Size  Location     Type
 16648 ;;                  3    0[COMRAM] float 
 16649 ;; Registers used:
 16650 ;;		wreg, status,2, status,0
 16651 ;; Tracked objects:
 16652 ;;		On entry : 0/0
 16653 ;;		On exit  : 0/0
 16654 ;;		Unchanged: 0/0
 16655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16656 ;;      Params:         3       0       0       0       0       0       0
 16657 ;;      Locals:         0       0       0       0       0       0       0
 16658 ;;      Temps:          0       0       0       0       0       0       0
 16659 ;;      Totals:         3       0       0       0       0       0       0
 16660 ;;Total ram usage:        3 bytes
 16661 ;; Hardware stack levels used:    1
 16662 ;; This function calls:
 16663 ;;		Nothing
 16664 ;; This function is called by:
 16665 ;;		i2__doprnt
 16666 ;; This function uses a non-reentrant model
 16667 ;;
 16668                           
 16669                           	psect	text65
 16670  00561E                     __ptext65:
 16671                           	opt stack 0
 16672  00561E                     i2___ftneg:
 16673                           	opt stack 21
 16674                           
 16675                           ;incstack = 0
 16676  00561E  5001               	movf	i2___ftneg@f1,w,c
 16677  005620  1002               	iorwf	i2___ftneg@f1+1,w,c
 16678  005622  1003               	iorwf	i2___ftneg@f1+2,w,c
 16679  005624  B4D8               	btfsc	status,2,c
 16680  005626  D006               	goto	i2l802
 16681  005628  0E00               	movlw	0
 16682  00562A  1A01               	xorwf	i2___ftneg@f1,f,c
 16683  00562C  0E00               	movlw	0
 16684  00562E  1A02               	xorwf	i2___ftneg@f1+1,f,c
 16685  005630  0E80               	movlw	128
 16686  005632  1A03               	xorwf	i2___ftneg@f1+2,f,c
 16687  005634                     i2l802:
 16688  005634  C001  F001         	movff	i2___ftneg@f1,?i2___ftneg
 16689  005638  C002  F002         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 16690  00563C  C003  F003         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 16691  005640  0012               	return		;funcret
 16692  005642                     __end_ofi2___ftneg:
 16693                           	opt stack 0
 16694                           tosu	equ	0xFFF
 16695                           tosh	equ	0xFFE
 16696                           tosl	equ	0xFFD
 16697                           pclatu	equ	0xFFB
 16698                           pclath	equ	0xFFA
 16699                           tblptru	equ	0xFF8
 16700                           tblptrh	equ	0xFF7
 16701                           tblptrl	equ	0xFF6
 16702                           tablat	equ	0xFF5
 16703                           prodh	equ	0xFF4
 16704                           prodl	equ	0xFF3
 16705                           intcon	equ	0xFF2
 16706                           intcon2	equ	0xFF1
 16707                           postinc0	equ	0xFEE
 16708                           fsr0h	equ	0xFEA
 16709                           fsr0l	equ	0xFE9
 16710                           wreg	equ	0xFE8
 16711                           fsr1h	equ	0xFE2
 16712                           fsr1l	equ	0xFE1
 16713                           indf2	equ	0xFDF
 16714                           postinc2	equ	0xFDE
 16715                           postdec2	equ	0xFDD
 16716                           fsr2h	equ	0xFDA
 16717                           fsr2l	equ	0xFD9
 16718                           status	equ	0xFD8
 16719                           
 16720 ;; *************** function i2___ftge *****************
 16721 ;; Defined at:
 16722 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
 16723 ;; Parameters:    Size  Location     Type
 16724 ;;  ff1             3    0[COMRAM] float 
 16725 ;;  ff2             3    3[COMRAM] float 
 16726 ;; Auto vars:     Size  Location     Type
 16727 ;;		None
 16728 ;; Return value:  Size  Location     Type
 16729 ;;		None               void
 16730 ;; Registers used:
 16731 ;;		wreg, status,2, status,0
 16732 ;; Tracked objects:
 16733 ;;		On entry : 0/0
 16734 ;;		On exit  : 0/0
 16735 ;;		Unchanged: 0/0
 16736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16737 ;;      Params:         6       0       0       0       0       0       0
 16738 ;;      Locals:         0       0       0       0       0       0       0
 16739 ;;      Temps:          3       0       0       0       0       0       0
 16740 ;;      Totals:         9       0       0       0       0       0       0
 16741 ;;Total ram usage:        9 bytes
 16742 ;; Hardware stack levels used:    1
 16743 ;; This function calls:
 16744 ;;		Nothing
 16745 ;; This function is called by:
 16746 ;;		i2__doprnt
 16747 ;; This function uses a non-reentrant model
 16748 ;;
 16749                           
 16750                           	psect	text66
 16751  004E8E                     __ptext66:
 16752                           	opt stack 0
 16753  004E8E                     i2___ftge:
 16754                           	opt stack 21
 16755                           
 16756                           ;incstack = 0
 16757  004E8E  AE03               	btfss	i2___ftge@ff1+2,7,c
 16758  004E90  D016               	goto	i2l4150
 16759  004E92  C001  F007         	movff	i2___ftge@ff1,??i2___ftge
 16760  004E96  C002  F008         	movff	i2___ftge@ff1+1,??i2___ftge+1
 16761  004E9A  C003  F009         	movff	i2___ftge@ff1+2,??i2___ftge+2
 16762  004E9E  1E07               	comf	??i2___ftge,f,c
 16763  004EA0  1E08               	comf	??i2___ftge+1,f,c
 16764  004EA2  1E09               	comf	??i2___ftge+2,f,c
 16765  004EA4  2A07               	incf	??i2___ftge,f,c
 16766  004EA6  0E00               	movlw	0
 16767  004EA8  2208               	addwfc	??i2___ftge+1,f,c
 16768  004EAA  2209               	addwfc	??i2___ftge+2,f,c
 16769  004EAC  0E00               	movlw	0
 16770  004EAE  2407               	addwf	??i2___ftge,w,c
 16771  004EB0  6E01               	movwf	i2___ftge@ff1,c
 16772  004EB2  0E00               	movlw	0
 16773  004EB4  2008               	addwfc	??i2___ftge+1,w,c
 16774  004EB6  6E02               	movwf	i2___ftge@ff1+1,c
 16775  004EB8  0E80               	movlw	128
 16776  004EBA  2009               	addwfc	??i2___ftge+2,w,c
 16777  004EBC  6E03               	movwf	i2___ftge@ff1+2,c
 16778  004EBE                     i2l4150:
 16779  004EBE  AE06               	btfss	i2___ftge@ff2+2,7,c
 16780  004EC0  D016               	goto	i2l4154
 16781  004EC2  C004  F007         	movff	i2___ftge@ff2,??i2___ftge
 16782  004EC6  C005  F008         	movff	i2___ftge@ff2+1,??i2___ftge+1
 16783  004ECA  C006  F009         	movff	i2___ftge@ff2+2,??i2___ftge+2
 16784  004ECE  1E07               	comf	??i2___ftge,f,c
 16785  004ED0  1E08               	comf	??i2___ftge+1,f,c
 16786  004ED2  1E09               	comf	??i2___ftge+2,f,c
 16787  004ED4  2A07               	incf	??i2___ftge,f,c
 16788  004ED6  0E00               	movlw	0
 16789  004ED8  2208               	addwfc	??i2___ftge+1,f,c
 16790  004EDA  2209               	addwfc	??i2___ftge+2,f,c
 16791  004EDC  0E00               	movlw	0
 16792  004EDE  2407               	addwf	??i2___ftge,w,c
 16793  004EE0  6E04               	movwf	i2___ftge@ff2,c
 16794  004EE2  0E00               	movlw	0
 16795  004EE4  2008               	addwfc	??i2___ftge+1,w,c
 16796  004EE6  6E05               	movwf	i2___ftge@ff2+1,c
 16797  004EE8  0E80               	movlw	128
 16798  004EEA  2009               	addwfc	??i2___ftge+2,w,c
 16799  004EEC  6E06               	movwf	i2___ftge@ff2+2,c
 16800  004EEE                     i2l4154:
 16801  004EEE  0E00               	movlw	0
 16802  004EF0  1A01               	xorwf	i2___ftge@ff1,f,c
 16803  004EF2  0E00               	movlw	0
 16804  004EF4  1A02               	xorwf	i2___ftge@ff1+1,f,c
 16805  004EF6  0E80               	movlw	128
 16806  004EF8  1A03               	xorwf	i2___ftge@ff1+2,f,c
 16807  004EFA  0E00               	movlw	0
 16808  004EFC  1A04               	xorwf	i2___ftge@ff2,f,c
 16809  004EFE  0E00               	movlw	0
 16810  004F00  1A05               	xorwf	i2___ftge@ff2+1,f,c
 16811  004F02  0E80               	movlw	128
 16812  004F04  1A06               	xorwf	i2___ftge@ff2+2,f,c
 16813  004F06  5004               	movf	i2___ftge@ff2,w,c
 16814  004F08  5C01               	subwf	i2___ftge@ff1,w,c
 16815  004F0A  5005               	movf	i2___ftge@ff2+1,w,c
 16816  004F0C  5802               	subwfb	i2___ftge@ff1+1,w,c
 16817  004F0E  5006               	movf	i2___ftge@ff2+2,w,c
 16818  004F10  5803               	subwfb	i2___ftge@ff1+2,w,c
 16819  004F12  B0D8               	btfsc	status,0,c
 16820  004F14  D002               	goto	i2l4160
 16821  004F16  90D8               	bcf	status,0,c
 16822  004F18  0012               	return	
 16823  004F1A                     i2l4160:
 16824  004F1A  80D8               	bsf	status,0,c
 16825  004F1C  0012               	return	
 16826  004F1E                     __end_ofi2___ftge:
 16827                           	opt stack 0
 16828                           tosu	equ	0xFFF
 16829                           tosh	equ	0xFFE
 16830                           tosl	equ	0xFFD
 16831                           pclatu	equ	0xFFB
 16832                           pclath	equ	0xFFA
 16833                           tblptru	equ	0xFF8
 16834                           tblptrh	equ	0xFF7
 16835                           tblptrl	equ	0xFF6
 16836                           tablat	equ	0xFF5
 16837                           prodh	equ	0xFF4
 16838                           prodl	equ	0xFF3
 16839                           intcon	equ	0xFF2
 16840                           intcon2	equ	0xFF1
 16841                           postinc0	equ	0xFEE
 16842                           fsr0h	equ	0xFEA
 16843                           fsr0l	equ	0xFE9
 16844                           wreg	equ	0xFE8
 16845                           fsr1h	equ	0xFE2
 16846                           fsr1l	equ	0xFE1
 16847                           indf2	equ	0xFDF
 16848                           postinc2	equ	0xFDE
 16849                           postdec2	equ	0xFDD
 16850                           fsr2h	equ	0xFDA
 16851                           fsr2l	equ	0xFD9
 16852                           status	equ	0xFD8
 16853                           
 16854 ;; *************** function ___lwtoft *****************
 16855 ;; Defined at:
 16856 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
 16857 ;; Parameters:    Size  Location     Type
 16858 ;;  c               2    8[COMRAM] unsigned int 
 16859 ;; Auto vars:     Size  Location     Type
 16860 ;;		None
 16861 ;; Return value:  Size  Location     Type
 16862 ;;                  3    8[COMRAM] float 
 16863 ;; Registers used:
 16864 ;;		wreg, status,2, status,0, cstack
 16865 ;; Tracked objects:
 16866 ;;		On entry : 0/0
 16867 ;;		On exit  : 0/0
 16868 ;;		Unchanged: 0/0
 16869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16870 ;;      Params:         3       0       0       0       0       0       0
 16871 ;;      Locals:         0       0       0       0       0       0       0
 16872 ;;      Temps:          0       0       0       0       0       0       0
 16873 ;;      Totals:         3       0       0       0       0       0       0
 16874 ;;Total ram usage:        3 bytes
 16875 ;; Hardware stack levels used:    1
 16876 ;; Hardware stack levels required when called:    1
 16877 ;; This function calls:
 16878 ;;		i2___ftpack
 16879 ;; This function is called by:
 16880 ;;		_INT0_ISR
 16881 ;; This function uses a non-reentrant model
 16882 ;;
 16883                           
 16884                           	psect	text67
 16885  005642                     __ptext67:
 16886                           	opt stack 0
 16887  005642                     ___lwtoft:
 16888                           	opt stack 22
 16889                           
 16890                           ;incstack = 0
 16891  005642  C009  F001         	movff	___lwtoft@c,i2___ftpack@arg
 16892  005646  C00A  F002         	movff	___lwtoft@c+1,i2___ftpack@arg+1
 16893  00564A  6A03               	clrf	i2___ftpack@arg+2,c
 16894  00564C  0E8E               	movlw	142
 16895  00564E  6E04               	movwf	i2___ftpack@exp,c
 16896  005650  0E00               	movlw	0
 16897  005652  6E05               	movwf	i2___ftpack@sign,c
 16898  005654  ECFE  F025         	call	i2___ftpack	;wreg free
 16899  005658  C001  F009         	movff	?i2___ftpack,?___lwtoft
 16900  00565C  C002  F00A         	movff	?i2___ftpack+1,?___lwtoft+1
 16901  005660  C003  F00B         	movff	?i2___ftpack+2,?___lwtoft+2
 16902  005664  0012               	return	
 16903  005666                     __end_of___lwtoft:
 16904                           	opt stack 0
 16905                           tosu	equ	0xFFF
 16906                           tosh	equ	0xFFE
 16907                           tosl	equ	0xFFD
 16908                           pclatu	equ	0xFFB
 16909                           pclath	equ	0xFFA
 16910                           tblptru	equ	0xFF8
 16911                           tblptrh	equ	0xFF7
 16912                           tblptrl	equ	0xFF6
 16913                           tablat	equ	0xFF5
 16914                           prodh	equ	0xFF4
 16915                           prodl	equ	0xFF3
 16916                           intcon	equ	0xFF2
 16917                           intcon2	equ	0xFF1
 16918                           postinc0	equ	0xFEE
 16919                           fsr0h	equ	0xFEA
 16920                           fsr0l	equ	0xFE9
 16921                           wreg	equ	0xFE8
 16922                           fsr1h	equ	0xFE2
 16923                           fsr1l	equ	0xFE1
 16924                           indf2	equ	0xFDF
 16925                           postinc2	equ	0xFDE
 16926                           postdec2	equ	0xFDD
 16927                           fsr2h	equ	0xFDA
 16928                           fsr2l	equ	0xFD9
 16929                           status	equ	0xFD8
 16930                           
 16931 ;; *************** function i2___ftpack *****************
 16932 ;; Defined at:
 16933 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
 16934 ;; Parameters:    Size  Location     Type
 16935 ;;  arg             3    0[COMRAM] unsigned um
 16936 ;;  exp             1    3[COMRAM] unsigned char 
 16937 ;;  sign            1    4[COMRAM] unsigned char 
 16938 ;; Auto vars:     Size  Location     Type
 16939 ;;		None
 16940 ;; Return value:  Size  Location     Type
 16941 ;;                  3    0[COMRAM] float 
 16942 ;; Registers used:
 16943 ;;		wreg, status,2, status,0
 16944 ;; Tracked objects:
 16945 ;;		On entry : 0/0
 16946 ;;		On exit  : 0/0
 16947 ;;		Unchanged: 0/0
 16948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16949 ;;      Params:         5       0       0       0       0       0       0
 16950 ;;      Locals:         0       0       0       0       0       0       0
 16951 ;;      Temps:          3       0       0       0       0       0       0
 16952 ;;      Totals:         8       0       0       0       0       0       0
 16953 ;;Total ram usage:        8 bytes
 16954 ;; Hardware stack levels used:    1
 16955 ;; This function calls:
 16956 ;;		Nothing
 16957 ;; This function is called by:
 16958 ;;		___lwtoft
 16959 ;;		i2___ftadd
 16960 ;;		i2___ftdiv
 16961 ;;		i2___ftmul
 16962 ;;		i2___lltoft
 16963 ;; This function uses a non-reentrant model
 16964 ;;
 16965                           
 16966                           	psect	text68
 16967  004BFC                     __ptext68:
 16968                           	opt stack 0
 16969  004BFC                     i2___ftpack:
 16970                           	opt stack 22
 16971                           
 16972                           ;incstack = 0
 16973  004BFC  5004               	movf	i2___ftpack@exp,w,c
 16974  004BFE  B4D8               	btfsc	status,2,c
 16975  004C00  D005               	goto	i2l3484
 16976  004C02  5001               	movf	i2___ftpack@arg,w,c
 16977  004C04  1002               	iorwf	i2___ftpack@arg+1,w,c
 16978  004C06  1003               	iorwf	i2___ftpack@arg+2,w,c
 16979  004C08  A4D8               	btfss	status,2,c
 16980  004C0A  D00C               	goto	i2l3490
 16981  004C0C                     i2l3484:
 16982  004C0C  0E00               	movlw	0
 16983  004C0E  6E01               	movwf	?i2___ftpack,c
 16984  004C10  0E00               	movlw	0
 16985  004C12  6E02               	movwf	?i2___ftpack+1,c
 16986  004C14  0E00               	movlw	0
 16987  004C16  6E03               	movwf	?i2___ftpack+2,c
 16988  004C18  0012               	return	
 16989  004C1A                     i2l3488:
 16990  004C1A  2A04               	incf	i2___ftpack@exp,f,c
 16991  004C1C  90D8               	bcf	status,0,c
 16992  004C1E  3203               	rrcf	i2___ftpack@arg+2,f,c
 16993  004C20  3202               	rrcf	i2___ftpack@arg+1,f,c
 16994  004C22  3201               	rrcf	i2___ftpack@arg,f,c
 16995  004C24                     i2l3490:
 16996  004C24  0E00               	movlw	0
 16997  004C26  1401               	andwf	i2___ftpack@arg,w,c
 16998  004C28  6E06               	movwf	??i2___ftpack& (0+255),c
 16999  004C2A  0E00               	movlw	0
 17000  004C2C  1402               	andwf	i2___ftpack@arg+1,w,c
 17001  004C2E  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 17002  004C30  0EFE               	movlw	254
 17003  004C32  1403               	andwf	i2___ftpack@arg+2,w,c
 17004  004C34  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 17005  004C36  5006               	movf	??i2___ftpack,w,c
 17006  004C38  1007               	iorwf	??i2___ftpack+1,w,c
 17007  004C3A  1008               	iorwf	??i2___ftpack+2,w,c
 17008  004C3C  B4D8               	btfsc	status,2,c
 17009  004C3E  D00C               	goto	i2l3496
 17010  004C40  D7EC               	goto	i2l3488
 17011  004C42                     i2l3492:
 17012  004C42  2A04               	incf	i2___ftpack@exp,f,c
 17013  004C44  0E01               	movlw	1
 17014  004C46  2601               	addwf	i2___ftpack@arg,f,c
 17015  004C48  0E00               	movlw	0
 17016  004C4A  2202               	addwfc	i2___ftpack@arg+1,f,c
 17017  004C4C  0E00               	movlw	0
 17018  004C4E  2203               	addwfc	i2___ftpack@arg+2,f,c
 17019  004C50  90D8               	bcf	status,0,c
 17020  004C52  3203               	rrcf	i2___ftpack@arg+2,f,c
 17021  004C54  3202               	rrcf	i2___ftpack@arg+1,f,c
 17022  004C56  3201               	rrcf	i2___ftpack@arg,f,c
 17023  004C58                     i2l3496:
 17024  004C58  0E00               	movlw	0
 17025  004C5A  1401               	andwf	i2___ftpack@arg,w,c
 17026  004C5C  6E06               	movwf	??i2___ftpack& (0+255),c
 17027  004C5E  0E00               	movlw	0
 17028  004C60  1402               	andwf	i2___ftpack@arg+1,w,c
 17029  004C62  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 17030  004C64  0EFF               	movlw	255
 17031  004C66  1403               	andwf	i2___ftpack@arg+2,w,c
 17032  004C68  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 17033  004C6A  5006               	movf	??i2___ftpack,w,c
 17034  004C6C  1007               	iorwf	??i2___ftpack+1,w,c
 17035  004C6E  1008               	iorwf	??i2___ftpack+2,w,c
 17036  004C70  B4D8               	btfsc	status,2,c
 17037  004C72  D006               	goto	i2l3500
 17038  004C74  D7E6               	goto	i2l3492
 17039  004C76                     i2l3498:
 17040  004C76  0604               	decf	i2___ftpack@exp,f,c
 17041  004C78  90D8               	bcf	status,0,c
 17042  004C7A  3601               	rlcf	i2___ftpack@arg,f,c
 17043  004C7C  3602               	rlcf	i2___ftpack@arg+1,f,c
 17044  004C7E  3603               	rlcf	i2___ftpack@arg+2,f,c
 17045  004C80                     i2l3500:
 17046  004C80  BE02               	btfsc	i2___ftpack@arg+1,7,c
 17047  004C82  D003               	goto	i2l705
 17048  004C84  0E02               	movlw	2
 17049  004C86  6004               	cpfslt	i2___ftpack@exp,c
 17050  004C88  D7F6               	goto	i2l3498
 17051  004C8A                     i2l705:
 17052  004C8A  A004               	btfss	i2___ftpack@exp,0,c
 17053  004C8C  9E02               	bcf	i2___ftpack@arg+1,7,c
 17054  004C8E  90D8               	bcf	status,0,c
 17055  004C90  3204               	rrcf	i2___ftpack@exp,f,c
 17056  004C92  5004               	movf	i2___ftpack@exp,w,c
 17057  004C94  1203               	iorwf	i2___ftpack@arg+2,f,c
 17058  004C96  5005               	movf	i2___ftpack@sign,w,c
 17059  004C98  A4D8               	btfss	status,2,c
 17060  004C9A  8E03               	bsf	i2___ftpack@arg+2,7,c
 17061  004C9C  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 17062  004CA0  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 17063  004CA4  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 17064  004CA8  0012               	return	
 17065  004CAA                     __end_ofi2___ftpack:
 17066                           	opt stack 0
 17067                           tosu	equ	0xFFF
 17068                           tosh	equ	0xFFE
 17069                           tosl	equ	0xFFD
 17070                           pclatu	equ	0xFFB
 17071                           pclath	equ	0xFFA
 17072                           tblptru	equ	0xFF8
 17073                           tblptrh	equ	0xFF7
 17074                           tblptrl	equ	0xFF6
 17075                           tablat	equ	0xFF5
 17076                           prodh	equ	0xFF4
 17077                           prodl	equ	0xFF3
 17078                           intcon	equ	0xFF2
 17079                           intcon2	equ	0xFF1
 17080                           postinc0	equ	0xFEE
 17081                           fsr0h	equ	0xFEA
 17082                           fsr0l	equ	0xFE9
 17083                           wreg	equ	0xFE8
 17084                           fsr1h	equ	0xFE2
 17085                           fsr1l	equ	0xFE1
 17086                           indf2	equ	0xFDF
 17087                           postinc2	equ	0xFDE
 17088                           postdec2	equ	0xFDD
 17089                           fsr2h	equ	0xFDA
 17090                           fsr2l	equ	0xFD9
 17091                           status	equ	0xFD8
 17092                           
 17093 ;; *************** function _TMR0_StopTimer *****************
 17094 ;; Defined at:
 17095 ;;		line 49 in file "mcc_generated_files/tmr0.c"
 17096 ;; Parameters:    Size  Location     Type
 17097 ;;		None
 17098 ;; Auto vars:     Size  Location     Type
 17099 ;;		None
 17100 ;; Return value:  Size  Location     Type
 17101 ;;                  1    wreg      void 
 17102 ;; Registers used:
 17103 ;;		None
 17104 ;; Tracked objects:
 17105 ;;		On entry : 0/0
 17106 ;;		On exit  : 0/0
 17107 ;;		Unchanged: 0/0
 17108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17109 ;;      Params:         0       0       0       0       0       0       0
 17110 ;;      Locals:         0       0       0       0       0       0       0
 17111 ;;      Temps:          0       0       0       0       0       0       0
 17112 ;;      Totals:         0       0       0       0       0       0       0
 17113 ;;Total ram usage:        0 bytes
 17114 ;; Hardware stack levels used:    1
 17115 ;; This function calls:
 17116 ;;		Nothing
 17117 ;; This function is called by:
 17118 ;;		_INT0_ISR
 17119 ;; This function uses a non-reentrant model
 17120 ;;
 17121                           
 17122                           	psect	text69
 17123  005768                     __ptext69:
 17124                           	opt stack 0
 17125  005768                     _TMR0_StopTimer:
 17126                           	opt stack 23
 17127                           
 17128                           ;tmr0.c: 52: T0CONbits.TMR0ON = 0;
 17129                           
 17130                           ;incstack = 0
 17131  005768  9ED5               	bcf	4053,7,c	;volatile
 17132  00576A  0012               	return		;funcret
 17133  00576C                     __end_of_TMR0_StopTimer:
 17134                           	opt stack 0
 17135                           tosu	equ	0xFFF
 17136                           tosh	equ	0xFFE
 17137                           tosl	equ	0xFFD
 17138                           pclatu	equ	0xFFB
 17139                           pclath	equ	0xFFA
 17140                           tblptru	equ	0xFF8
 17141                           tblptrh	equ	0xFF7
 17142                           tblptrl	equ	0xFF6
 17143                           tablat	equ	0xFF5
 17144                           prodh	equ	0xFF4
 17145                           prodl	equ	0xFF3
 17146                           intcon	equ	0xFF2
 17147                           intcon2	equ	0xFF1
 17148                           postinc0	equ	0xFEE
 17149                           fsr0h	equ	0xFEA
 17150                           fsr0l	equ	0xFE9
 17151                           wreg	equ	0xFE8
 17152                           fsr1h	equ	0xFE2
 17153                           fsr1l	equ	0xFE1
 17154                           indf2	equ	0xFDF
 17155                           postinc2	equ	0xFDE
 17156                           postdec2	equ	0xFDD
 17157                           fsr2h	equ	0xFDA
 17158                           fsr2l	equ	0xFD9
 17159                           status	equ	0xFD8
 17160                           
 17161 ;; *************** function _TMR0_Reload *****************
 17162 ;; Defined at:
 17163 ;;		line 77 in file "mcc_generated_files/tmr0.c"
 17164 ;; Parameters:    Size  Location     Type
 17165 ;;		None
 17166 ;; Auto vars:     Size  Location     Type
 17167 ;;		None
 17168 ;; Return value:  Size  Location     Type
 17169 ;;                  1    wreg      void 
 17170 ;; Registers used:
 17171 ;;		wreg, status,2
 17172 ;; Tracked objects:
 17173 ;;		On entry : 0/0
 17174 ;;		On exit  : 0/0
 17175 ;;		Unchanged: 0/0
 17176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17177 ;;      Params:         0       0       0       0       0       0       0
 17178 ;;      Locals:         0       0       0       0       0       0       0
 17179 ;;      Temps:          0       0       0       0       0       0       0
 17180 ;;      Totals:         0       0       0       0       0       0       0
 17181 ;;Total ram usage:        0 bytes
 17182 ;; Hardware stack levels used:    1
 17183 ;; This function calls:
 17184 ;;		Nothing
 17185 ;; This function is called by:
 17186 ;;		_INT0_ISR
 17187 ;; This function uses a non-reentrant model
 17188 ;;
 17189                           
 17190                           	psect	text70
 17191  005732                     __ptext70:
 17192                           	opt stack 0
 17193  005732                     _TMR0_Reload:
 17194                           	opt stack 23
 17195                           
 17196                           ;tmr0.c: 80: TMR0H = timer0ReloadVal >> 8;
 17197                           
 17198                           ;incstack = 0
 17199  005732  0100               	movlb	0	; () banked
 17200  005734  51D6               	movf	(_timer0ReloadVal+1)& (0+255),w,b	;volatile
 17201  005736  6ED7               	movwf	4055,c	;volatile
 17202                           
 17203                           ; BSR set to: 0
 17204                           ;tmr0.c: 81: TMR0L = (uint8_t) timer0ReloadVal;
 17205  005738  C0D5  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 17206                           
 17207                           ; BSR set to: 0
 17208  00573C  0012               	return		;funcret
 17209  00573E                     __end_of_TMR0_Reload:
 17210                           	opt stack 0
 17211                           tosu	equ	0xFFF
 17212                           tosh	equ	0xFFE
 17213                           tosl	equ	0xFFD
 17214                           pclatu	equ	0xFFB
 17215                           pclath	equ	0xFFA
 17216                           tblptru	equ	0xFF8
 17217                           tblptrh	equ	0xFF7
 17218                           tblptrl	equ	0xFF6
 17219                           tablat	equ	0xFF5
 17220                           prodh	equ	0xFF4
 17221                           prodl	equ	0xFF3
 17222                           intcon	equ	0xFF2
 17223                           intcon2	equ	0xFF1
 17224                           postinc0	equ	0xFEE
 17225                           fsr0h	equ	0xFEA
 17226                           fsr0l	equ	0xFE9
 17227                           wreg	equ	0xFE8
 17228                           fsr1h	equ	0xFE2
 17229                           fsr1l	equ	0xFE1
 17230                           indf2	equ	0xFDF
 17231                           postinc2	equ	0xFDE
 17232                           postdec2	equ	0xFDD
 17233                           fsr2h	equ	0xFDA
 17234                           fsr2l	equ	0xFD9
 17235                           status	equ	0xFD8
 17236                           
 17237 ;; *************** function _TMR0_ReadTimer *****************
 17238 ;; Defined at:
 17239 ;;		line 55 in file "mcc_generated_files/tmr0.c"
 17240 ;; Parameters:    Size  Location     Type
 17241 ;;		None
 17242 ;; Auto vars:     Size  Location     Type
 17243 ;;  readVal         2    6[COMRAM] unsigned int 
 17244 ;;  readValHigh     1    9[COMRAM] unsigned char 
 17245 ;;  readValLow      1    8[COMRAM] unsigned char 
 17246 ;; Return value:  Size  Location     Type
 17247 ;;                  2    0[COMRAM] unsigned int 
 17248 ;; Registers used:
 17249 ;;		wreg, status,2, status,0
 17250 ;; Tracked objects:
 17251 ;;		On entry : 0/0
 17252 ;;		On exit  : 0/0
 17253 ;;		Unchanged: 0/0
 17254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17255 ;;      Params:         2       0       0       0       0       0       0
 17256 ;;      Locals:         4       0       0       0       0       0       0
 17257 ;;      Temps:          4       0       0       0       0       0       0
 17258 ;;      Totals:        10       0       0       0       0       0       0
 17259 ;;Total ram usage:       10 bytes
 17260 ;; Hardware stack levels used:    1
 17261 ;; This function calls:
 17262 ;;		Nothing
 17263 ;; This function is called by:
 17264 ;;		_INT0_ISR
 17265 ;; This function uses a non-reentrant model
 17266 ;;
 17267                           
 17268                           	psect	text71
 17269  0053C0                     __ptext71:
 17270                           	opt stack 0
 17271  0053C0                     _TMR0_ReadTimer:
 17272                           	opt stack 23
 17273                           
 17274                           ;tmr0.c: 57: uint16_t readVal;
 17275                           ;tmr0.c: 58: uint8_t readValLow;
 17276                           ;tmr0.c: 59: uint8_t readValHigh;
 17277                           ;tmr0.c: 61: readValLow = TMR0L;
 17278                           
 17279                           ; BSR set to: 0
 17280                           ;incstack = 0
 17281  0053C0  CFD6 F009          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
 17282                           
 17283                           ;tmr0.c: 62: readValHigh = TMR0H;
 17284  0053C4  CFD7 F00A          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
 17285                           
 17286                           ;tmr0.c: 65: readVal = ((uint16_t)readValHigh << 8) + readValLow - (timer0ReloadVal);
 17287  0053C8  C0D5  F003         	movff	_timer0ReloadVal,??_TMR0_ReadTimer	;volatile
 17288  0053CC  C0D6  F004         	movff	_timer0ReloadVal+1,??_TMR0_ReadTimer+1	;volatile
 17289  0053D0  1E03               	comf	??_TMR0_ReadTimer,f,c
 17290  0053D2  1E04               	comf	??_TMR0_ReadTimer+1,f,c
 17291  0053D4  4A03               	infsnz	??_TMR0_ReadTimer,f,c
 17292  0053D6  2A04               	incf	??_TMR0_ReadTimer+1,f,c
 17293  0053D8  5009               	movf	TMR0_ReadTimer@readValLow,w,c
 17294  0053DA  C00A  F005         	movff	TMR0_ReadTimer@readValHigh,??_TMR0_ReadTimer+2
 17295  0053DE  6A06               	clrf	(??_TMR0_ReadTimer+3)& (0+255),c
 17296  0053E0  C005  F006         	movff	??_TMR0_ReadTimer+2,??_TMR0_ReadTimer+3
 17297  0053E4  6A05               	clrf	??_TMR0_ReadTimer+2,c
 17298  0053E6  2605               	addwf	??_TMR0_ReadTimer+2,f,c
 17299  0053E8  0E00               	movlw	0
 17300  0053EA  2206               	addwfc	??_TMR0_ReadTimer+3,f,c
 17301  0053EC  5003               	movf	??_TMR0_ReadTimer,w,c
 17302  0053EE  2405               	addwf	??_TMR0_ReadTimer+2,w,c
 17303  0053F0  6E07               	movwf	TMR0_ReadTimer@readVal,c
 17304  0053F2  5004               	movf	??_TMR0_ReadTimer+1,w,c
 17305  0053F4  2006               	addwfc	??_TMR0_ReadTimer+3,w,c
 17306  0053F6  6E08               	movwf	TMR0_ReadTimer@readVal+1,c
 17307                           
 17308                           ;tmr0.c: 67: return readVal;
 17309  0053F8  C007  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
 17310  0053FC  C008  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
 17311  005400  0012               	return	
 17312  005402                     __end_of_TMR0_ReadTimer:
 17313                           	opt stack 0
 17314                           tosu	equ	0xFFF
 17315                           tosh	equ	0xFFE
 17316                           tosl	equ	0xFFD
 17317                           pclatu	equ	0xFFB
 17318                           pclath	equ	0xFFA
 17319                           tblptru	equ	0xFF8
 17320                           tblptrh	equ	0xFF7
 17321                           tblptrl	equ	0xFF6
 17322                           tablat	equ	0xFF5
 17323                           prodh	equ	0xFF4
 17324                           prodl	equ	0xFF3
 17325                           intcon	equ	0xFF2
 17326                           intcon2	equ	0xFF1
 17327                           postinc0	equ	0xFEE
 17328                           fsr0h	equ	0xFEA
 17329                           fsr0l	equ	0xFE9
 17330                           wreg	equ	0xFE8
 17331                           fsr1h	equ	0xFE2
 17332                           fsr1l	equ	0xFE1
 17333                           indf2	equ	0xFDF
 17334                           postinc2	equ	0xFDE
 17335                           postdec2	equ	0xFDD
 17336                           fsr2h	equ	0xFDA
 17337                           fsr2l	equ	0xFD9
 17338                           status	equ	0xFD8
 17339                           tosu	equ	0xFFF
 17340                           tosh	equ	0xFFE
 17341                           tosl	equ	0xFFD
 17342                           pclatu	equ	0xFFB
 17343                           pclath	equ	0xFFA
 17344                           tblptru	equ	0xFF8
 17345                           tblptrh	equ	0xFF7
 17346                           tblptrl	equ	0xFF6
 17347                           tablat	equ	0xFF5
 17348                           prodh	equ	0xFF4
 17349                           prodl	equ	0xFF3
 17350                           intcon	equ	0xFF2
 17351                           intcon2	equ	0xFF1
 17352                           postinc0	equ	0xFEE
 17353                           fsr0h	equ	0xFEA
 17354                           fsr0l	equ	0xFE9
 17355                           wreg	equ	0xFE8
 17356                           fsr1h	equ	0xFE2
 17357                           fsr1l	equ	0xFE1
 17358                           indf2	equ	0xFDF
 17359                           postinc2	equ	0xFDE
 17360                           postdec2	equ	0xFDD
 17361                           fsr2h	equ	0xFDA
 17362                           fsr2l	equ	0xFD9
 17363                           status	equ	0xFD8
 17364                           
 17365                           	psect	text72
 17366  000000                     __ptext72:
 17367                           	opt stack 0
 17368                           tosu	equ	0xFFF
 17369                           tosh	equ	0xFFE
 17370                           tosl	equ	0xFFD
 17371                           pclatu	equ	0xFFB
 17372                           pclath	equ	0xFFA
 17373                           tblptru	equ	0xFF8
 17374                           tblptrh	equ	0xFF7
 17375                           tblptrl	equ	0xFF6
 17376                           tablat	equ	0xFF5
 17377                           prodh	equ	0xFF4
 17378                           prodl	equ	0xFF3
 17379                           intcon	equ	0xFF2
 17380                           intcon2	equ	0xFF1
 17381                           postinc0	equ	0xFEE
 17382                           fsr0h	equ	0xFEA
 17383                           fsr0l	equ	0xFE9
 17384                           wreg	equ	0xFE8
 17385                           fsr1h	equ	0xFE2
 17386                           fsr1l	equ	0xFE1
 17387                           indf2	equ	0xFDF
 17388                           postinc2	equ	0xFDE
 17389                           postdec2	equ	0xFDD
 17390                           fsr2h	equ	0xFDA
 17391                           fsr2l	equ	0xFD9
 17392                           status	equ	0xFD8
 17393                           
 17394                           	psect	rparam
 17395  0000                     tosu	equ	0xFFF
 17396                           tosh	equ	0xFFE
 17397                           tosl	equ	0xFFD
 17398                           pclatu	equ	0xFFB
 17399                           pclath	equ	0xFFA
 17400                           tblptru	equ	0xFF8
 17401                           tblptrh	equ	0xFF7
 17402                           tblptrl	equ	0xFF6
 17403                           tablat	equ	0xFF5
 17404                           prodh	equ	0xFF4
 17405                           prodl	equ	0xFF3
 17406                           intcon	equ	0xFF2
 17407                           intcon2	equ	0xFF1
 17408                           postinc0	equ	0xFEE
 17409                           fsr0h	equ	0xFEA
 17410                           fsr0l	equ	0xFE9
 17411                           wreg	equ	0xFE8
 17412                           fsr1h	equ	0xFE2
 17413                           fsr1l	equ	0xFE1
 17414                           indf2	equ	0xFDF
 17415                           postinc2	equ	0xFDE
 17416                           postdec2	equ	0xFDD
 17417                           fsr2h	equ	0xFDA
 17418                           fsr2l	equ	0xFD9
 17419                           status	equ	0xFD8
 17420                           
 17421                           	psect	temp
 17422  00005F                     btemp:
 17423                           	opt stack 0
 17424  00005F                     	ds	1
 17425  0000                     int$flags	set	btemp
 17426                           tosu	equ	0xFFF
 17427                           tosh	equ	0xFFE
 17428                           tosl	equ	0xFFD
 17429                           pclatu	equ	0xFFB
 17430                           pclath	equ	0xFFA
 17431                           tblptru	equ	0xFF8
 17432                           tblptrh	equ	0xFF7
 17433                           tblptrl	equ	0xFF6
 17434                           tablat	equ	0xFF5
 17435                           prodh	equ	0xFF4
 17436                           prodl	equ	0xFF3
 17437                           intcon	equ	0xFF2
 17438                           intcon2	equ	0xFF1
 17439                           postinc0	equ	0xFEE
 17440                           fsr0h	equ	0xFEA
 17441                           fsr0l	equ	0xFE9
 17442                           wreg	equ	0xFE8
 17443                           fsr1h	equ	0xFE2
 17444                           fsr1l	equ	0xFE1
 17445                           indf2	equ	0xFDF
 17446                           postinc2	equ	0xFDE
 17447                           postdec2	equ	0xFDD
 17448                           fsr2h	equ	0xFDA
 17449                           fsr2l	equ	0xFD9
 17450                           status	equ	0xFD8


Data Sizes:
    Strings     80
    Constant    118
    Data        2
    BSS         22
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     91     121
    BANK1           256     73      73
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[11]), STR_2(CODE[11]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), ?_printf(COMRAM[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_1(CODE[36]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), ?_printf(COMRAM[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> i2_putch(), putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> lcd_sendInt@displayString(COMRAM[10]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), printf@ap(COMRAM[2]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[11]), STR_2(CODE[11]), 
		 -> STR_1(CODE[36]), 

    S872__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    S872__prbuf$ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 5
		 -> sprintf@pb(BANK1[4]), printf@pb(COMRAM[4]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 10
		 -> lcd_sendUInt@displayString(COMRAM[10]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> lcd_sendInt@displayString(COMRAM[10]), 

    lcd_sendString@a	PTR const unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), lcd_sendUInt@displayString(COMRAM[10]), lcd_sendInt@displayString(COMRAM[10]), main@cap_string(BANK1[16]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_TMR0_DefaultInterruptHandler
    _INT0_ISR->_printf
    i2___ftdiv->i2___ftmul
    _printf->i2__doprnt
    i2__doprnt->i2___fttol
    i2_scale->i2___ftmul
    i2_putch->i2_EUSART1_Write
    i2_fround->i2___ftmul
    i2___wmul->i2___awdiv
    i2___ftmul->i2___ftadd
    i2___awdiv->i2___awmod
    i2___lltoft->i2___ftpack
    i2___llmod->i2___lldiv
    i2___fttol->i2_scale
    i2___ftsub->i2___ftadd
    i2___ftadd->i2___wmul
    ___lwtoft->i2___ftpack

Critical Paths under _main in BANK0

    __doprnt->___ftadd
    _scale->___ftmul
    _putch->_EUSART1_Write
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _lcd_sendString->_lcd_sendChar
    _lcd_sendChar->__lcd_Port
    _lcd_init->_lcd_sendCommand
    _lcd_clear->_lcd_sendCommand
    _lcd_sendCommand->__lcd_Port
    ___ftdiv->___ftpack
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _printf->i2__doprnt

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->__doprnt
    __doprnt->___ftsub
    ___ftsub->___ftadd

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   72710
                                             57 BANK1     16    16      0
                  _SYSTEM_Initialize
                            ___ftdiv
                             ___ftge
                          _lcd_clear
                           _lcd_init
                     _lcd_sendString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             13     6      7   66165
                                             44 BANK1     13     6      7
                            ___ftdiv (ARG)
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             41    35      6   62317
                                              9 BANK1     35    29      6
                   Absolute function *
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch *
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               10     7      3   11565
                                             72 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      44
                                             38 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      22
                                             37 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                             37 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              13    10      3   11286
                                             72 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2465
                                             51 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    5375
                                             57 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1448
                                             37 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1580
                                             43 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         15     9      6     431
                                             37 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          12     6      6     591
                                             37 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2655
                                             45 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     773
                                             50 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     750
                                             37 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     716
                                             79 BANK0      9     5      4
                                              0 BANK1      6     6      0
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    4628
                                              3 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    4150
                                             82 BANK0      9     3      6
                                              0 BANK1      3     3      0
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     160
                                             37 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     904
                                             37 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_sendString                                       4     2      2     588
                                             41 BANK0      4     2      2
                       _lcd_sendChar
 ---------------------------------------------------------------------------------
 (2) _lcd_sendChar                                         3     3      0     178
                                             38 BANK0      3     3      0
                          __lcd_Port
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     198
                                             40 BANK0      1     1      0
                          __lcd_Port
                    _lcd_sendCommand
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0     110
                    _lcd_sendCommand
 ---------------------------------------------------------------------------------
 (2) _lcd_sendCommand                                      2     2      0     110
                                             38 BANK0      2     2      0
                          __lcd_Port
 ---------------------------------------------------------------------------------
 (3) __lcd_Port                                            1     1      0      88
                                             37 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    3345
                                             45 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2419
                                             37 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      86
                                             39 BANK0      2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      86
                                             37 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      86
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      86
                                             37 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                          14    14      0   41416
                                             23 BANK0     14    14      0
                           _INT0_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _INT0_ISR                                             0     0      0   41416
                     _TMR0_ReadTimer
                        _TMR0_Reload
                     _TMR0_StopTimer
                           ___lwtoft
                             _printf
                  i2_TMR0_StartTimer
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
 ---------------------------------------------------------------------------------
 (8) i2___ftdiv                                           15     9      6     953
                                             47 COMRAM    15     9      6
                           ___lwtoft (ARG)
                          i2___ftadd (ARG)
                          i2___ftmul (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (8) i2_TMR0_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _printf                                              13     6      7   36343
                                             81 COMRAM    13     6      7
                          i2__doprnt
 ---------------------------------------------------------------------------------
 (9) i2__doprnt                                           41    35      6   33445
                                             69 COMRAM    12     6      6
                                              0 BANK0     23    23      0
                   Absolute function *
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch *
                            i2_scale
 ---------------------------------------------------------------------------------
 (10) i2_scale                                            13    10      3    4893
                                             47 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (10) i2_putch                                             1     1      0      44
                                              1 COMRAM     1     1      0
                    i2_EUSART1_Write
 ---------------------------------------------------------------------------------
 (11) i2_EUSART1_Write                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) i2_isdigit                                           3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (10) i2_fround                                           16    13      3    4695
                                             47 COMRAM    10     7      3
                          i2___awdiv
                          i2___awmod
                          i2___ftadd (ARG)
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (11) i2___wmul                                            6     2      4    1093
                                             14 COMRAM     6     2      4
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (8) i2___ftmul                                           15     9      6    1727
                                             32 COMRAM    15     9      6
                           ___lwtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___ftadd (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___awmod                                           6     2      4     764
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (11) i2___awdiv                                           8     4      4     820
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (10) i2__tdiv_to_l_                                      15     9      6     355
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (10) i2__div_to_l_                                       12     6      6     481
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (10) i2___lltoft                                          9     5      4     716
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (10) i2___llmod                                           9     1      8     367
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___lldiv                                          13     5      8     318
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (10) i2___fttol                                          15    11      4     330
                                             54 COMRAM    15    11      4
                          i2___ftmul (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftsub                                           6     0      6    1736
                                             32 COMRAM     6     0      6
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (8) i2___ftadd                                           12     6      6    1617
                                             20 COMRAM    12     6      6
                           ___lwtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftneg                                           3     0      3      71
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (10) i2___ftge                                            9     3      6     292
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (8) ___lwtoft                                             3     0      3     707
                                              8 COMRAM     3     0      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (9) i2___ftpack                                           8     3      5     621
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (8) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ReadTimer                                      10     8      2      69
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
   ___ftdiv
     ___ftpack
   ___ftge
   _lcd_clear
     _lcd_sendCommand
       __lcd_Port
   _lcd_init
     __lcd_Port
     _lcd_sendCommand
       __lcd_Port
   _lcd_sendString
     _lcd_sendChar
       __lcd_Port
   _sprintf
     ___ftdiv (ARG)
       ___ftpack
     __doprnt (ARG)
       Absolute function(Fake) *
       ___awdiv *
         ___awmod (ARG)
       ___ftadd *
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge *
       ___ftmul *
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg *
       ___ftsub *
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol *
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv *
       ___llmod *
         ___lldiv (ARG)
       ___lltoft *
         ___ftpack
       ___wmul *
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_ *
       __tdiv_to_l_ *
       _fround *
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit *
       _putch *
         _EUSART1_Write
       _scale *
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _INT0_ISR
     _TMR0_ReadTimer
     _TMR0_Reload
     _TMR0_StopTimer
     ___lwtoft
       i2___ftpack
     _printf
       i2__doprnt
         Absolute function(Fake) *
         i2___awdiv *
           i2___awmod (ARG)
         i2___ftadd *
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftge *
         i2___ftmul *
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftadd (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg *
         i2___ftsub *
           i2___ftadd
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___lltoft (ARG)
             i2___ftpack
         i2___fttol *
           i2___ftmul (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftadd (ARG)
                 ___lwtoft (ARG)
                   i2___ftpack
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lldiv *
         i2___llmod *
           i2___lldiv (ARG)
         i2___lltoft *
           i2___ftpack
         i2___wmul *
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2__div_to_l_ *
         i2__tdiv_to_l_ *
         i2_fround *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftadd (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2_isdigit *
         i2_putch *
           i2_EUSART1_Write
         i2_scale *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
     i2_TMR0_StartTimer
     i2___ftadd
       ___lwtoft (ARG)
         i2___ftpack
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
       i2___ftpack (ARG)
       i2___ftpack (ARG)
       i2___wmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
     i2___ftdiv
       ___lwtoft (ARG)
         i2___ftpack
       i2___ftadd (ARG)
         ___lwtoft (ARG)
           i2___ftpack
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftmul (ARG)
         ___lwtoft (ARG)
           i2___ftpack
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftadd (ARG)
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftpack (ARG)
     i2___ftmul
       ___lwtoft (ARG)
         i2___ftpack
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
       i2___ftadd (ARG)
         ___lwtoft (ARG)
           i2___ftpack
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftpack (ARG)
       i2___wmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     49      49       6       28.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     5B      79       4       75.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     120       9        0.0%
DATA                 0      0     120      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Wed Jan 18 19:23:51 2017

                           ?_lcd_sendChar 0001                              ___awdiv@sign 0090  
                     ___wmul@multiplicand 0095                                i2___ftpack 4BFC  
                         _timer0ReloadVal 00D5                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                              ___ftadd@exp1 0102  
                            ___ftadd@exp2 0101                                i2___lltoft 51F0  
                             __CFG_LVP$ON 000000                              ___ftadd@sign 0100  
                         ?_lcd_sendString 0089                          ?_lcd_sendCommand 0001  
                                     l215 3FAC                                       l409 10C2  
                                     l290 5492                                       l187 5700  
                                     l292 549E                                       l357 136C  
                                     l294 54AA                                       l288 5486  
                                     l705 46B8                                       l802 556A  
                                     l732 3560                                       l734 3588  
                                     l743 365E                                       l752 3688  
                                     l728 3526                                       l673 3E2C  
                                     l770 3BE0                                       l763 420C  
                                     l771 3C24                                       l777 3CA4  
                                     l874 4BEA                                       l884 4E7C  
                            __CFG_CPB$OFF 000000                              __CFG_CPD$OFF 000000  
              ??_INT0_SetInterruptHandler 0087                              ___awmod@sign 008A  
                                     tosl 000FFD                                       wreg 000FE8  
                            ___ftdiv@cntr 0096                              ___ftdiv@sign 009B  
                                    l4302 54A0                                      l6002 502C  
                                    l6004 503C                                      l4420 3C5A  
                                    l4510 4A3A                                      l4430 3C8A  
                                    l4600 4E26                                      l4440 3CDC  
                                    l4432 3C9A                                      l4424 3C6E  
                                    l4506 49FA                                      l4516 4A7E  
                                    l4604 4E6A                                      l4460 3D56  
                                    l4294 5488                                      l4446 3D02  
                                    l4390 3B8C                                      l3910 4ADE  
                                    l3902 4AB4                                      l4374 55C8  
                                    l5600 5316                                      l4480 3DE2  
                                    l4384 3B52                                      l3920 4B14  
                                    l3912 4AE4                                      l4298 5494  
                                    l4490 3E12                                      l4580 4B84  
                                    l4492 3E22                                      l4484 3DF6  
                                    l4468 3DAA                                      l3908 4AD2  
                                    l3924 4B22                                      l3940 4D6E  
                                    l3950 4D9E                                      l4576 4B6E  
                                    l3928 4B36                                      l3952 4DA4  
                                    l3960 4DD6                                      l3944 4D7E  
                                    l5810 3616                                      l4578 4B7E  
                                    l9010 0834                                      l5740 460E  
                                    l5804 35EE                                      l4588 4BD8  
                                    l4596 4E10                                      l3964 4DEA  
                                    l3956 4DC8                                      l3948 4D92  
                                    l9020 08A0                                      l9004 080C  
                                    l5750 469C                                      l5742 461C  
                                    l5806 35FC                                      l4598 4E20  
                                    l9102 0C42                                      l9030 08EA  
                                    l9022 08A6                                      l9014 087A  
                                    l5752 46AA                                      l5744 464C  
                                    l5736 45FA                                      l5824 36B2  
                                    l5816 3644                                      l5808 360A  
                                    l3896 4A9E                                      l5904 3476  
                                    l9120 0CDE                                      l9104 0C48  
                                    l9024 08AC                                      l9016 0890  
                                    l5834 3700                                      l5818 3652  
                                    l5850 3EB2                                      l9210 114C  
                                    l5764 46DE                                      l5748 466C  
                                    l5596 52F6                                      l5844 3E78  
                                    l5924 2BAC                                      l9300 15C0  
                                    l9140 0DD4                                      l9132 0D6A  
                                    l9124 0D06                                      l9116 0C8E  
                                    l9060 0A0C                                      l9044 095A  
                                    l9036 0906                                      l9028 08B4  
                                    l5758 46C2                                      l6822 4130  
                                    l5782 356E                                      l5950 52C0  
                                    l5942 2DFC                                      l5918 2AE6  
                                    l9310 1634                                      l9222 1264  
                                    l9214 119E                                      l9206 1122  
                                    l5776 3534                                      l5960 427C  
                                    l5864 3F00                                      l5936 2D36  
                                    l5928 2BD2                                      l9304 15EA  
                                    l9232 132C                                      l9224 1292  
                                    l9160 0EA0                                      l9152 0E5A  
                                    l9144 0DFE                                      l9136 0D96  
                                    l9072 0AAA                                      l5874 3F3E  
                                    l9322 16B2                                      l9314 165E  
                                    l9250 1400                                      l9242 13A4  
                                    l9226 12E0                                      l9170 0F2A  
                                    l9146 0E06                                      l9074 0AC0  
                                    l6828 416A                                      l5788 357E  
                                    l5868 3F1E                                      l9316 1668  
                                    l9252 1406                                      l9244 13DA  
                                    l9236 1356                                      l9228 12EE  
                                    l9156 0E84                                      l9148 0E1C  
                                    l9180 1012                                      l9084 0B50  
                                    l9076 0AF0                                      l9068 0A7C  
                                    l9420 40BC                                      l5798 35C0  
                                    l5990 434E                                      l5982 4322  
                                    l5878 3F5C                                      l9334 174E  
                                    l9326 16DC                                      l9318 1674  
                                    l9238 135E                                      l9190 1088  
                                    l9182 1020                                      l9166 0EFE  
                                    l9158 0E8C                                      l9078 0B06  
                                    l9350 186E                                      l9422 40E4  
                                    l9414 4020                                      l6848 41CA  
                                    l5992 4358                                      l5896 3392  
                                    l9344 182E                                      l9328 16F0  
                                    l9272 14A4                                      l9264 144C  
                                    l9192 1090                                      l9168 0F1A  
                                    l9088 0B7E                                      l9352 188C  
                                    l5978 430E                                      l9346 184A  
                                    l9338 176C                                      l9290 1552  
                                    l9194 10A4                                      l9186 105E  
                                    l9178 0FF0                                      l9098 0BDC  
                                    l5996 4374                                      l5988 433E  
                                    l9348 1858                                      l9292 155C  
                                    l9284 1510                                      l9268 1474  
                                    l9286 151A                                      l9278 14D8  
                                    l9198 10C6                                      l8980 0718  
                   __size_ofi2__div_to_l_ 0128                                      l8990 0766  
                                    l8974 06CC                                      STR_1 0677  
                                    l8984 0746                                      STR_2 06BC  
                                    STR_3 06A6                                      l8986 075C  
                                    STR_4 06B1                                      STR_5 069B  
                                    l8996 0796                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    u5461 3B2E                                      u8101 3E54  
                                    u5481 3B68                                      u8121 3E8E  
                                    u8241 4258                                      i2l74 004E  
                                    u8260 42A2                                      i2l78 0058  
                                    u8265 4298                                      u7901 34F2  
                                    u7891 34D4                                      _WPUB 000F61  
                           _EUSART1_Write 56FC                                      _main 3F9C  
                             i2__doprnt@c 0076                              ___ftpack@arg 0085  
                             i2__doprnt@f 0048                              ___ftpack@exp 0088  
                         _TMR0_StartTimer 575C                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                                    btemp 005F                             __CFG_BORV$190 000000  
                            i2___ftadd@f1 0015                              i2___ftadd@f2 0018  
                                    pclat 000FFA                              i2___ftge@ff1 0001  
                            i2___ftge@ff2 0004                                      prodh 000FF4  
                                    prodl 000FF3                                      start 0094  
                           __CFG_IESO$OFF 000000                              i2___ftdiv@f1 0030  
                            i2___ftdiv@f2 0033                              i2___ftdiv@f3 003A  
                         __end_ofi2_scale 3212                              i2___ftneg@f1 0001  
                         __end_ofi2_putch 575C                            ??_lcd_sendChar 0086  
                            ___ftmul@cntr 00A6                              i2___ftmul@f1 0021  
                            i2___ftmul@f2 0024                              ___param_bank 000010  
                            ___ftmul@sign 00A7                              i2___ftsub@f1 0021  
                            i2___ftsub@f2 0024                              i2___fttol@f1 0037  
                __size_ofi2_EUSART1_Write 000C                              ___fttol@exp1 0105  
                            i2___lltoft@c 0009                              ___fttol@lval 0101  
                 __end_of_TMR0_Initialize 537A                          __end_of_INT0_ISR 4D52  
          ??_TMR0_DefaultInterruptHandler 0001            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 5726                                     ?_main 0001  
                         __end_of___awdiv 4B40                           __end_of___ftadd 3726  
                         __end_of___awmod 4DF4                 TMR0_ReadTimer@readValHigh 000A  
                         __end_of___ftdiv 4242                           __end_of___ftneg 5578  
                         __end_of___lldiv 4BFC                                     u10111 4146  
                                   u10091 410C                           __end_of___ftmul 3F9C  
                                   _T0CON 000FD5                           ___awdiv@divisor 008D  
                         __end_of___llmod 4E8E                           __end_of___ftsub 52EA  
                         __end_of___fttol 4386                                     u15118 0DBE  
                                   u15208 0FD6                                     u15250 10BA  
                                   u15308 124A                                     u15148 0E44  
                                   u15238 1048                                     u15338 1316  
                                   u15098 0D54                                     u15188 0EE8  
                                   u15518 15AA                                     u14910 09A0  
                                   u15288 110C                                     u14915 0994  
                                   u15628 1738                                     u15548 161E  
                                   u14828 0700                            __CFG_DEBUG$OFF 000000  
                                   u15807 50AE                                     u15648 1816  
                                   u15817 50C6                                     u15827 50DE  
                                   u15588 169C                                     u15837 55EA  
                                   u15787 53A2                                     u15797 53B6  
                                   i2l409 21F6                                     i2l187 5728  
                                   i2l357 2492                                     i2l705 4C8A  
                                   i2l802 5634                                     i2l732 39DA  
                                   i2l743 3A8A                                     i2l752 3AA6  
                                   i2l728 39B0                                     i2l673 45CE  
                                   i2l770 4418                                     i2l771 4440  
                                   i2l763 4988                                     i2l777 44A6  
                                   i2l874 5012                                     i2l884 51DE  
                         ___awdiv@counter 008F                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                              i2__div_to_l_ 44B8  
                         __end_of__doprnt 1898                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
       __size_of_TMR0_SetInterruptHandler 000A                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
               ?_TMR0_SetInterruptHandler 0085                             __CFG_WRT3$OFF 000000  
                            ___lltoft@exp 0095                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                        __end_of_TMR0_ISR 5548                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                                i2isdigit@c 0003  
                         __end_of_dpowers 0629                                i2scale@scl 0036  
                            i2__doprnt@ap 004A                              i2__doprnt@pb 0046  
                                   _scale 2974                           __end_of_isdigit 55D2  
                      __CFG_MCLRE$EXTMCLR 000000                             ___ftpack@sign 0089  
                                   _putch 56E8                                     _units 00D7  
                          ?_EUSART1_Write 0001                                     pclath 000FFA  
                                   tablat 000FF5                          __end_ofi2___ftge 4F1E  
                        __end_ofi2___wmul 561E                                     status 000FD8  
                         __end_of_sprintf 529E                            __CFG_HFOFST$ON 000000  
                          __CFG_FOSC$HSMP 000000                          __end_ofi2_fround 396C  
                           i2___ftdiv@exp 003D                        __size_ofi2___awdiv 0084  
                      __size_ofi2___ftadd 01AC                        __size_ofi2___awmod 0070  
                          __CFG_PBADEN$ON 000000                        __size_ofi2___ftdiv 00E6  
                      __size_ofi2___ftneg 0024                        __size_ofi2___lldiv 0082  
                      __size_ofi2___ftmul 00F4                        __size_ofi2___llmod 0066  
                      __size_ofi2___ftsub 0040                        __size_ofi2___fttol 00F4  
                      __size_ofi2__doprnt 10DC                           __initialization 54E4  
                       i2___lldiv@divisor 0005                __end_of_EUSART1_Initialize 56E8  
                            __end_of_main 40F6                         i2___lldiv@counter 000D  
                           i2___ftmul@exp 002A                        __size_ofi2_isdigit 001E  
             ?_INTERRUPT_InterruptManager 0001                               ?i2___ftpack 0001  
                           lcd_sendChar@a 0088                             lcd_sendChar@y 0087  
                             ?i2___lltoft 0009                                    ??_main 00BB  
                           ___fttol@sign1 0100                             __activetblptr 000002  
                    __size_of__tdiv_to_l_ 019E                   __end_of_TMR0_StartTimer 5760  
                        ___llmod@dividend 0092                                    ?_scale 00A8  
                        ___awdiv@dividend 008B                                    _ANSELA 000F38  
                                  ?_putch 0001                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                          __end_of___ftpack 46EC  
                        __end_of___lltoft 50A0                                    i2l4002 2F56  
                                  i2l4020 314A                                    i2l4012 301E  
                                  i2l4102 43DE                                    i2l4200 4872  
                                  i2l4008 2FFA                                    i2l4210 489A  
                                  i2l4042 44F4                                    i2l4026 31EE  
                                  i2l3500 4C80                                    i2l4212 48A6  
                                  i2l4204 4882                                    i2l4036 44D6  
                                  i2l4132 446C                                    i2l4150 4EBE  
                                  i2l4214 48AC                                    i2l4142 4494  
                                  i2l4230 567C                            __CFG_WDTEN$OFF 000000  
                                  i2l4160 4F1A                                    i2l4240 4FC4  
                                  i2l4080 45A4                                    i2l4064 4566  
                                  i2l4056 4536                                    i2l4144 44A0  
                                  i2l4136 447C                                    i2l4154 4EEE  
                                  i2l4218 48C2                                    i2l4242 4FD0  
                                  i2l3602 4F98                                    i2l4172 5418  
                                  i2l4252 5004                                    i2l4244 4FD4  
                                  i2l4260 519C                                    i2l4076 4594  
                                  i2l4182 480C                                    i2l4262 51A8  
                                  i2l4086 45BC                                    i2l3630 5168  
                                  i2l3622 5148                                    i2l3614 512E  
                                  i2l4264 51AC                                    i2l4088 45C8  
                                  i2l4096 43B2                                    i2l3624 5150  
                                  i2l3490 4C24                                    i2l3650 39BE  
                                  i2l4274 51F6                                    i2l3570 4F32  
                                  i2l3626 5154                                    i2l3634 5172  
                                  i2l3618 513A                                    i2l3492 4C42  
                                  i2l3484 4C0C                                    i2l3708 3AF2  
                                  i2l4268 51D0                                    i2l4276 5202  
                                  i2l3724 473C                                    i2l3582 4F58  
                                  i2l3638 5180                                    i2l3742 477E  
                                  i2l3718 4714                                    i2l3496 4C58  
                                  i2l3488 4C1A                                    i2l3680 3A44  
                                  i2l3672 3A18                                    i2l3656 39E8  
                                  i2l3584 4F60                                    i2l3576 4F42  
                                  i2l3752 47A6                                    i2l3498 4C76  
                                  i2l3690 3A78                                    i2l3682 3A4E  
                                  i2l3594 4F80                                    i2l3586 4F64  
                                  i2l3738 476E                                    i2l5506 4962  
                                  i2l3692 3A82                                    i2l3684 3A56  
                                  i2l3748 4796                                    i2l3678 3A3A  
                                  i2l3598 4F8A                                    i2l5480 48FC  
                                  i2l3698 3AC2                                    i2l3980 386C  
                                  i2l5486 4924                                    i2l3988 392C  
                                  i2l8600 1930                             i2putch@txData 0002  
                                  i2l8620 19E6                                    i2l8630 1A46  
                                  i2l8606 1960                                    i2l8614 19C0  
                                  i2l8800 21BC                                    i2l8712 1DB6  
                                  i2l8640 1A8E                                    i2l8632 1A4C  
                                  i2l8624 1A20                                    i2l8802 21C4  
                                  i2l8730 1E44                                    i2l8714 1DBC  
                                  i2l8634 1A52                                    i2l8626 1A36  
                                  i2l8900 2660                                    i2l8820 227C  
                                  i2l8804 21D8                                    i2l8708 1D50  
                                  i2l8910 26C2                                    i2l8902 266A  
                                  i2l8750 1F22                                    i2l8742 1EBC  
                                  i2l8734 1E64                                    i2l8726 1E02  
                                  i2l8670 1BA0                                    i2l8654 1AFE  
                                  i2l8646 1AAA                                    i2l8638 1A5A  
                                  i2l8590 18E4                                    i2l8920 2732  
                                  i2l8832 238E                                    i2l8824 22CE  
                                  i2l8816 2252                                    i2l8808 21FA  
                                  i2l8584 189C                                    i2l8914 26EC  
                                  i2l8842 2452                                    i2l8834 23BC  
                                  i2l8770 1FEA                                    i2l8762 1FA4  
                                  i2l8754 1F4C                                    i2l8746 1EE8  
                                  i2l8682 1C2E                                    i2l8594 1912  
                                  i2l8932 27AC                                    i2l8924 275C  
                                  i2l8860 2526                                    i2l8852 24CA  
                                  i2l8836 240A                                    i2l8780 2068  
                                  i2l8756 1F54                                    i2l8684 1C44  
                                  i2l8596 1928                                    u421_41 397C  
                                  i2l8926 2766                                    i2l8862 252C  
                                  i2l8854 2500                                    i2l8846 247C  
                                  i2l8838 2418                                    i2l8766 1FCE  
                                  i2l8758 1F6A                                    i2l8790 214A  
                                  i2l8694 1CCC                                    i2l8686 1C74  
                                  i2l8678 1C08                                    i2l8944 283C  
                                  i2l8936 27D6                                    i2l8928 2772  
                                  i2l8848 2484                                    i2l8792 2158  
                                  i2l8776 203C                                    i2l8768 1FD6  
                                  i2l8688 1C8A                                    i2l8960 294E  
                                  i2l8954 290E                                    i2l8938 27EA  
                                  i2l8882 25C2                                    i2l8874 2572  
                                  i2l8778 2058                                    i2l8698 1CF2  
                                  i2l8962 296A                                    i2l8956 292A  
                                  i2l8948 285A                                    i2l8796 2192  
                                  i2l8788 2128                                    u422_41 3990  
                                  u502_41 4396                                    i2l8958 2938  
                                  i2l8894 2622                                    i2l8878 2596  
                                  i2l8896 262C                                    i2l8888 25EE  
                                  _RCREG1 000FAE                                    u504_41 43C2  
                               ??i2_scale 0033                          __end_of___lwtoft 5666  
                                  u442_41 46FC                                    u516_41 47F0  
                                  u444_41 4724                                    _RCSTA1 000FAB  
                                  _OSCCON 000FD3                                    _SPBRG1 000FAF  
                               ??i2_putch 0002                                    u757_41 48E4  
                                  u759_41 490C                                    _TXREG1 000FAD  
                                  _TXSTA1 000FAC                    __size_ofi2__tdiv_to_l_ 0132  
                            __doprnt$1622 0115                            __CFG_XINST$OFF 000000  
                            i2_scale$1803 0033                          __end_of__powers_ 0677  
                        __end_of_lcd_init 511A                              ?_TMR0_Reload 0001  
                                  ___ftge 49BA                          lcd_sendChar@temp 0086  
                                  ___wmul 5442                                 ??___awdiv 008F  
                               ??___ftadd 00B8                            __CFG_STVREN$ON 000000  
                               ??___awmod 0089                                 ??___ftdiv 0093  
                               ??___ftneg 0088                                 ??___lldiv 008D  
                               ??___ftmul 009F                                 ??___llmod 009A  
                               ??___ftsub 00BB                                 ??___fttol 00B3  
                               ??__doprnt 010F                          ?_TMR0_Initialize 0001  
                                  _fround 3212                             i2__doprnt@exp 0067  
                           i2__doprnt@val 0063                                    clear_0 5502  
                        ___awdiv@quotient 0091                           ___awmod@divisor 0087  
                                  _result 00BB                              __doprnt@flag 0122  
                         ___awmod@counter 0089                                    _printf 54AE  
                            __doprnt@fval 0126                              __doprnt@prec 0129  
                          i2___awdiv@sign 000C                     ___ftmul@f3_as_product 00A3  
                       ??i2_EUSART1_Write 0001                                 ??_isdigit 0085  
                       __end_ofi2___awdiv 4FA2                         __end_ofi2___ftadd 3B18  
                       __end_ofi2___awmod 518A                         __end_ofi2___ftdiv 49BA  
                          i2___ftadd@exp1 0020                            i2___ftadd@exp2 001F  
                       __end_ofi2___ftneg 5642                         __end_ofi2___lldiv 5024  
                       __end_ofi2___ftmul 47E0                         __end_ofi2___llmod 51F0  
                       __end_ofi2___ftsub 5442                         __end_ofi2___fttol 48D4  
                          i2___ftadd@sign 001E                              __mediumconst 0000  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                         __end_ofi2__doprnt 2974  
                    __end_of_lcd_sendChar 53C0                          lcd_sendCommand@a 0087  
                          i2___awmod@sign 0006                           ??_EUSART1_Write 0085  
TMR0_SetInterruptHandler@InterruptHandler 0085  INT0_SetInterruptHandler@InterruptHandler 0085  
                               ??_sprintf 00BB             __size_of_INTERRUPT_Initialize 0004  
                       __end_ofi2_isdigit 5684                         _SYSTEM_Initialize 56A0  
                          i2___ftdiv@cntr 0039                                __accesstop 0060  
                 __end_of__initialization 5508                            i2___ftdiv@sign 003E  
                               ?_INT0_ISR 0001                                ___ftadd@f1 00B2  
                              ___ftadd@f2 00B5                       __size_ofi2___ftpack 00AE  
                              ___ftge@ff1 0085                                ___ftge@ff2 0088  
                      ?_SYSTEM_Initialize 0001                       __size_ofi2___lltoft 005C  
                           ___rparam_used 000001                                ___ftdiv@f1 008D  
                              ___ftdiv@f2 0090                                ___ftdiv@f3 0097  
                              ___ftneg@f1 0085                        __size_of__lcd_Port 0036  
                          i2___ftpack@arg 0001                        i2__tdiv_to_l_@exp1 000F  
                       i2___llmod@divisor 0012                            i2___ftpack@exp 0004  
                      i2__tdiv_to_l_@cntr 000E                         i2___llmod@counter 0016  
                      i2__tdiv_to_l_@quot 000A                                ___ftmul@f1 0099  
                              ___ftmul@f2 009C                                ___ftsub@f1 0103  
                              ___ftsub@f2 0106                                ___fttol@f1 00AF  
                          __pcstackCOMRAM 0001                        i2___lldiv@dividend 0001  
                            __pidataBANK0 576C                       ??_SYSTEM_Initialize 0089  
                        ??_lcd_sendString 008B                                 ?_TMR0_ISR 0001  
                              ___lltoft@c 008D                            i2___ftmul@cntr 002E  
                           __end_of_scale 2E22                            i2___ftmul@sign 002F  
                           __end_of_putch 56FC                   __size_of_TMR0_ReadTimer 0042  
                          main@cap_string 0139                            i2___fttol@exp1 0045  
                              ___lwtoft@c 0009                            i2___fttol@lval 0041  
                               ?i2___ftge 0001                                 ?i2___wmul 000F  
                           i2__tdiv_to_l_ 4386               __size_of_EXT_INT_Initialize 0018  
                              __div_to_l_ 3CB6                                 ?i2_fround 0030  
                      __size_of_lcd_clear 000E                                __doprnt@ap 010D  
                              __doprnt@pb 0109                     i2EUSART1_Write@txData 0001  
                         __div_to_l_@exp1 0090                          ?_TMR0_StartTimer 0001  
                         __div_to_l_@cntr 008F                                   ??_scale 00AB  
               __end_of_SYSTEM_Initialize 56BA                            i2___lltoft@exp 0011  
                         __div_to_l_@quot 008B                                   ??_putch 0086  
                      i2___lldiv@quotient 0009                                __pbssBANK0 00BB  
                        i2__tdiv_to_l_@f1 0001                          i2__tdiv_to_l_@f2 0004  
                         __CFG_PLLCFG$OFF 000000                     _INT0_InterruptHandler 00D1  
                              ??_INT0_ISR 005F                             __div_to_l_@f1 0085  
                           __div_to_l_@f2 0088                        __CFG_CCP2MX$PORTC1 000000  
                                 ?___ftge 0085          __end_of_TMR0_SetInterruptHandler 5748  
                 __size_of_TMR0_StopTimer 0004                                   ?___wmul 0093  
                              ??_TMR0_ISR 0002                        __CFG_CCP3MX$PORTB5 000000  
                                 ?_fround 00A8                                 ?___ftpack 0085  
                                 ?_printf 0052                                 ?___lltoft 008D  
                          ?i2__tdiv_to_l_ 0001                                ??i2___ftge 0007  
                               ?___lwtoft 0009                                ??i2___wmul 0013  
                       __end_of__lcd_Port 54AE                                ??i2_fround 0033  
                                 _OSCCON2 000FD2                                   _OSCTUNE 000F9B  
                                 _SPBRGH1 000FB0                  __size_of_lcd_sendCommand 0026  
                               ?_lcd_init 0001                                   i2_scale 2E22  
                                 i2_putch 5752         __size_of_INT0_SetInterruptHandler 000A  
               ?_INT0_SetInterruptHandler 0085                           __CFG_PWRTEN$OFF 000000  
                       __end_of__npowers_ 0650                                   __Hparam 0000  
                              _scale$1621 00AB                                   __Lparam 0000  
                       __end_of_lcd_clear 5718                           __size_of___ftge 00C8  
                                 ___awdiv 4A82                            i2__doprnt$1804 0060  
                                 ___ftadd 34BE                                   ___awmod 4D52  
                                 ___ftdiv 40F6                                   ___ftneg 5548  
                                 ___lldiv 4B40                           __size_of___wmul 0036  
                                 ___ftmul 3E3E                                   ___llmod 4DF4  
                                 ___ftsub 529E                                   ___fttol 4242  
                            __psmallconst 0600                      __size_of_TMR0_Reload 000C  
                                 __doprnt 06C8                                   __pcinit 54E4  
                            ??i2___ftpack 0006                                ??___ftpack 008A  
                         __size_of_fround 02AC                   i2___ftmul@f3_as_product 002B  
                                 __ramtop 0600                              ??i2___lltoft 000D  
                              ??___lltoft 0091                                   __ptext0 3F9C  
                                 __ptext1 524C                                   __ptext2 06C8  
                                 __ptext3 2974                                   __ptext4 56E8  
                                 __ptext5 56FC                                   __ptext6 55A8  
                                 __ptext7 3212                                   __ptext8 5442  
                                 __ptext9 3E3E                           __size_of_printf 0036  
                   __size_of_lcd_sendChar 0046                                ??___lwtoft 000C  
                               _T0CONbits 000FD5                             i2_fround$1801 0036  
                           i2_fround$1802 0033                               ?__div_to_l_ 0085  
                                 _dpowers 0601                     _OSCILLATOR_Initialize 5718  
                            i2fround@prec 0039                                   _isdigit 55A8  
                          i2__doprnt@flag 0070                                   _reading 00CF  
                          i2__doprnt@fval 006D                          ___awmod@dividend 0085  
                          i2__doprnt@prec 0074                        _EUSART1_Initialize 56D2  
                ??_PIN_MANAGER_Initialize 0085                __size_of_SYSTEM_Initialize 001A  
                                 _sprintf 524C                             __doprnt@width 0124  
                              ??_lcd_init 0088                      end_of_initialization 5508  
                                 ftoa@buf 00BE                       ?_EUSART1_Initialize 0001  
                           __Lmediumconst 0000                       i2___wmul@multiplier 000F  
                               i2u1404_40 1B3E                                 i2u1404_45 1B34  
                               i2u1422_48 1EA6                                 i2u1431_48 2026  
                      __end_ofi2___ftpack 4CAA                                 i2u1424_48 1F0C  
                               i2u1441_48 223C                                 i2u1433_48 210E  
                               i2u1443_48 2374                                 i2u1427_48 1F8E  
                               i2u1436_48 217C                                 i2u1438_40 21EE  
                               i2u1446_48 243C                                 i2u1471_48 2796  
                               i2u1464_48 26AC                                 i2u1475_48 2826  
                               i2u1467_48 271C                                 i2u1395_48 18CC  
                               i2u1477_48 28F6                                 i2u1568_48 5532  
                      __end_ofi2___lltoft 524C                           ___lldiv@divisor 0089  
                         ___lldiv@counter 0091                           i2_EUSART1_Write 5726  
                   TMR0_ReadTimer@readVal 0007                                   printf@f 0052  
                            _lcd_sendChar 537A                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc2 000FDE  
                          __tdiv_to_l_@f1 0085                            __tdiv_to_l_@f2 0088  
                          _TMR0_ReadTimer 53C0                      ??_EUSART1_Initialize 0085  
                         ??i2__tdiv_to_l_ 0007                             ??__tdiv_to_l_ 008B  
                _TMR0_SetInterruptHandler 573E                                 i2___awdiv 4F1E  
                     EUSART1_Write@txData 0085                                 i2___ftadd 396C  
                               i2___awmod 511A                                 i2___ftdiv 48D4  
                               i2___ftneg 561E                                 i2___lldiv 4FA2  
                               i2___ftmul 46EC                                 i2___llmod 518A  
                               i2___ftsub 5402                                 i2___fttol 47E0  
                               i2__doprnt 1898                               ___ftdiv@exp 009A  
                      i2___llmod@dividend 000E                        i2___awdiv@dividend 0007  
                       ??_lcd_sendCommand 0086                           i2___ftpack@sign 0005  
                               i2_isdigit 5666                         __size_of_INT0_ISR 00A8  
                     __size_of__div_to_l_ 0188                               ___ftmul@exp 00A2  
                          _TMR0_StopTimer 5768                    __end_of_TMR0_ReadTimer 5402  
            __end_of_INTERRUPT_Initialize 5764              _INT0_DefaultInterruptHandler 000000  
                          __end_of___ftge 4A82                            __end_of___wmul 5478  
                       __size_of_TMR0_ISR 0032                    ?_OSCILLATOR_Initialize 0001  
                          __end_of_fround 34BE                          i2___wmul@product 0013  
                          __end_of_printf 54E4                       start_initialization 54E4  
                       __size_ofi2___ftge 0090                        i2___awdiv@quotient 000D  
                       __size_ofi2___wmul 0026                  __size_of_TMR0_Initialize 0048  
         __size_of_PIN_MANAGER_Initialize 0030                       __end_of__tdiv_to_l_ 3CB6  
                             __lcd_Port@a 0085                           i2___fttol@sign1 0040  
                       __size_ofi2_fround 0246                                ?i2___awdiv 0007  
                              ?i2___ftadd 0015                                ?i2___awmod 0001  
                              ?i2___ftdiv 0030                                ?i2___ftneg 0001  
                              ?i2___lldiv 0001                                ?i2___ftmul 0021  
                              ?i2___llmod 000E                                ?i2___ftsub 0021  
                              ?i2___fttol 0037                               putch@txData 0086  
                   __end_of_EUSART1_Write 570A                                ?i2__doprnt 0046  
                 __end_ofi2_EUSART1_Write 5732                           ___llmod@divisor 0096  
                         ___llmod@counter 009A                    __end_of_TMR0_StopTimer 576C  
                              ?i2_isdigit 0001                                  ??___ftge 008B  
                         ?_TMR0_ReadTimer 0001                                  ??___wmul 0097  
                             __doprnt@exp 011C                               __doprnt@val 0118  
                             __pdataBANK0 00D7                                  ??_fround 00AB  
              __end_of_EXT_INT_Initialize 56D2                                  ??_printf 0059  
                              fround@prec 00B1                             ?i2__div_to_l_ 0001  
                       __size_of___ftpack 010C                         __size_of___lltoft 007C  
        __end_of_INT0_SetInterruptHandler 5752                         __size_of___lwtoft 0024  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                            _isdigit$1164 0086                                 __lcd_Port 5478  
                                ?i2_scale 0030                         __size_of_lcd_init 007A  
                                ?i2_putch 0001                                 __doprnt@c 012B  
                               __doprnt@f 010B                     _TMR0_InterruptHandler 00D3  
                               __pnvBANK0 00D1                  __size_of_TMR0_StartTimer 0004  
                         lcd_sendString@a 0089                           lcd_sendString@i 008B  
                         ?_TMR0_StopTimer 0001                    _PIN_MANAGER_Initialize 5578  
                               __pintcode 0008                                  ?___awdiv 008B  
                                ?___ftadd 00B2                                  ?___awmod 0085  
                                ?___ftdiv 008D                                  ?___ftneg 0085  
                                ?___lldiv 0085                                  ?___ftmul 0099  
                                ?___llmod 0092                                  ?___ftsub 0103  
                               __npowers_ 0629                                  ?___fttol 00AF  
                                ?__doprnt 0109                                 _lcd_clear 570A  
            ??_INTERRUPT_InterruptManager 0077                          __CFG_PRICLKEN$ON 000000  
                             __tdiv_to_l_ 3B18                            ??i2__div_to_l_ 0007  
                            ??__div_to_l_ 008B                               __smallconst 0600  
                                _BAUDCON1 000FB8                                  ?_isdigit 0001  
                 __size_of_lcd_sendString 0048                               ??i2___awdiv 000B  
                             ??i2___ftadd 001B                               ??i2___awmod 0005  
                                ?_sprintf 012C                               ??i2___ftdiv 0036  
                             ??i2___ftneg 0004                               ??i2___lldiv 0009  
                             ??i2___ftmul 0027                            __size_of_scale 04AE  
                             ??i2___llmod 0016                               ??i2___ftsub 0027  
                             ??i2___fttol 003B                                ?__lcd_Port 0001  
                          __size_of_putch 0014                      _INTERRUPT_Initialize 5760  
                             ??i2__doprnt 004C                         ??_TMR0_Initialize 0087  
                                _INT0_ISR 4CAA                          ?i2_EUSART1_Write 0001  
                          ___wmul@product 0097                          i2__doprnt@tmpval 0069  
                                _LATAbits 000F89                                  _LATBbits 000F8A  
                             ??i2_isdigit 0001                         i2_TMR0_StartTimer 5764  
     __size_of_INTERRUPT_InterruptManager 008C                ??_TMR0_SetInterruptHandler 0087  
                                _PIR1bits 000F9E                        __end_of__div_to_l_ 3E3E  
                                i2u518_40 482A                                  i2u518_45 4822  
                           ??_TMR0_Reload 0001                                  i2u669_40 568C  
                                i2u669_46 568E                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                        ?i2_TMR0_StartTimer 0001  
                                _TMR0_ISR 5516                           i2__div_to_l_@f1 0001  
                         i2__div_to_l_@f2 0004                                ?_lcd_clear 0001  
                TMR0_ReadTimer@readValLow 0009                       ??i2_TMR0_StartTimer 0001  
                       ___wmul@multiplier 0093                                  i2___ftge 4E8E  
                                i2___wmul 55F8                         i2___awdiv@divisor 0009  
                                i2_fround 3726                         i2___awdiv@counter 000B  
                         _lcd_sendCommand 55D2                               _INTCON2bits 000FF1  
                   ?_INTERRUPT_Initialize 0001                  _INT0_SetInterruptHandler 5748  
                      i2___awmod@dividend 0001                          __size_ofi2_scale 03F0  
               __end_ofi2_TMR0_StartTimer 5768                          __size_ofi2_putch 000A  
                                __Hrparam 0000                                  __Lrparam 0000  
                      __CFG_BOREN$SBORDIS 000000                         __CFG_P2BMX$PORTB5 000000  
                 ??_OSCILLATOR_Initialize 0085                         ??_TMR0_StartTimer 0085  
                        __size_of___awdiv 00BE                          __size_of___ftadd 0268  
                        __size_of___awmod 00A2                          __size_of___ftdiv 014C  
                        __size_of___ftneg 0030                     i2___wmul@multiplicand 0011  
                        __size_of___lldiv 00BC                          __size_of___ftmul 015E  
                        __size_of___llmod 009A                          __size_of___ftsub 004C  
                        __size_of___fttol 0144               __size_of_EUSART1_Initialize 0016  
                                ___ftpack 45E0                               _fround$1620 00AB  
                        __size_of__doprnt 11D0                               _fround$1619 00AE  
                                ___lltoft 5024                     __end_ofi2__tdiv_to_l_ 44B8  
                     __end_of_TMR0_Reload 573E                           _putch$intlevel0 56EE  
                                ___lwtoft 5642                          __size_of_isdigit 002A  
                                __ptext10 4D52                                  __ptext11 4A82  
                                __ptext20 5548                                  __ptext12 3B18  
                                __ptext21 49BA                                  __ptext13 3CB6  
                                __ptext30 56A0                                  __ptext22 52EA  
                                __ptext14 5024                                  __ptext31 5332  
                                __ptext23 537A                                  __ptext15 4DF4  
                                __ptext32 575C                                  __ptext24 50A0  
                                __ptext16 4B40                                  __ptext41 5516  
                                __ptext33 573E                                  __ptext25 570A  
                                __ptext17 4242                                  __ptext50 5726  
                                __ptext42 5684                                  __ptext34 5578  
                                __ptext26 55D2                                  __ptext18 529E  
                                __ptext51 5666                                  __ptext43 4CAA  
                                __ptext35 5718                                  __ptext27 5478  
                                __ptext19 34BE                                  __ptext60 518A  
                                __ptext52 3726                                  __ptext44 48D4  
                                __ptext36 5760                                  __ptext28 40F6  
                                __ptext61 4FA2                                  __ptext53 55F8  
                                __ptext45 5764                                  __ptext37 56BA  
                                __ptext29 45E0                                  __ptext70 5732  
                                __ptext62 47E0                                  __ptext54 46EC  
                                __ptext46 54AE                                  __ptext38 5748  
                                __ptext71 53C0                                  __ptext63 5402  
                                __ptext55 511A                                  __ptext47 1898  
                                __ptext39 56D2                                  __ptext72 0000  
                                __ptext64 396C                                  __ptext56 4F1E  
                                __ptext48 2E22                                  __ptext65 561E  
                                __ptext57 4386                                  __ptext49 5752  
                                __ptext66 4E8E                                  __ptext58 44B8  
                                __ptext67 5642                                  __ptext59 51F0  
                                __ptext68 4BFC                                  __ptext69 5768  
                                __powers_ 0650                                  _lcd_init 50A0  
                             ??__lcd_Port 0085                          __size_of_sprintf 0052  
                          i2_isdigit$1164 0002                             __size_of_main 015A  
                        ??_TMR0_ReadTimer 0003                      __end_ofi2__div_to_l_ 45E0  
    __end_of_TMR0_DefaultInterruptHandler 56A0     __size_of_TMR0_DefaultInterruptHandler 001C  
            _TMR0_DefaultInterruptHandler 5684                           i2__doprnt@width 0072  
                                int$flags 005F        __end_of_INTERRUPT_InterruptManager 0094  
              _INTERRUPT_InterruptManager 0008                               ??_lcd_clear 0088  
                          __doprnt@tmpval 011E                   __end_of_lcd_sendCommand 55F8  
                       i2___awmod@divisor 0003                         i2___awmod@counter 0005  
                              _INTCONbits 000FF2                            _lcd_sendString 52EA  
                                isdigit@c 0087                    ??_INTERRUPT_Initialize 0085  
                                scale@scl 00AE                        _EXT_INT_Initialize 56BA  
                                intlevel2 0000                                 sprintf@ap 0133  
                               sprintf@pb 0135                          ??_TMR0_StopTimer 0001  
                        __tdiv_to_l_@exp1 0093                          __tdiv_to_l_@cntr 0092  
                               sprintf@wh 012C                          __tdiv_to_l_@quot 008E  
                        ___lldiv@dividend 0085                   ?_PIN_MANAGER_Initialize 0001  
              __size_ofi2_TMR0_StartTimer 0004                       ?_EXT_INT_Initialize 0001  
                              _RCSTA1bits 000FAB             ?_TMR0_DefaultInterruptHandler 0001  
                             _TMR0_Reload 5732                                  printf@ap 0059  
                                printf@pb 005B                    __size_of_EUSART1_Write 000E  
                            ?__tdiv_to_l_ 0085                    __end_of_lcd_sendString 5332  
                    ??_EXT_INT_Initialize 0087                                  sprintf@f 012E  
                        ___lldiv@quotient 008D                           _TMR0_Initialize 5332  
                       __CFG_T3CMX$PORTC0 000000            __end_of_PIN_MANAGER_Initialize 55A8  
                       i2__div_to_l_@exp1 000C                         i2__div_to_l_@cntr 000B  
                       i2__div_to_l_@quot 0007  
