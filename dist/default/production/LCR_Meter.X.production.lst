

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat Jan 21 01:02:36 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    95                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    96  0000                     
    97 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
    98  0000                     
    99 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
   100  0000                     
   101                           	psect	idataCOMRAM
   102  005B44                     __pidataCOMRAM:
   103                           	opt stack 0
   104                           
   105                           ;initializer for _range
   106  005B44  02                 	db	2
   107                           
   108                           	psect	idataBANK0
   109  005B42                     __pidataBANK0:
   110                           	opt stack 0
   111                           
   112                           ;initializer for _units
   113  005B42  70                 	db	112
   114  005B43  46                 	db	70
   115                           
   116                           	psect	smallconst
   117  000600                     __psmallconst:
   118                           	opt stack 0
   119  000600  00                 	db	0
   120  000601                     _dpowers:
   121                           	opt stack 0
   122  000601  0001               	dw	1
   123  000603  0000               	dw	0
   124  000605  000A               	dw	10
   125  000607  0000               	dw	0
   126  000609  0064               	dw	100
   127  00060B  0000               	dw	0
   128  00060D  03E8               	dw	1000
   129  00060F  0000               	dw	0
   130  000611  2710               	dw	10000
   131  000613  0000               	dw	0
   132  000615  86A0               	dw	34464
   133  000617  0001               	dw	1
   134  000619  4240               	dw	16960
   135  00061B  000F               	dw	15
   136  00061D  9680               	dw	38528
   137  00061F  0098               	dw	152
   138  000621  E100               	dw	57600
   139  000623  05F5               	dw	1525
   140  000625  CA00               	dw	51712
   141  000627  3B9A               	dw	15258
   142  000629                     __end_of_dpowers:
   143                           	opt stack 0
   144  000629                     __npowers_:
   145                           	opt stack 0
   146  000629  00                 	db	0
   147  00062A  80                 	db	128
   148  00062B  3F                 	db	63
   149  00062C  CD                 	db	205
   150  00062D  CC                 	db	204
   151  00062E  3D                 	db	61
   152  00062F  D7                 	db	215
   153  000630  23                 	db	35
   154  000631  3C                 	db	60
   155  000632  12                 	db	18
   156  000633  83                 	db	131
   157  000634  3A                 	db	58
   158  000635  B7                 	db	183
   159  000636  D1                 	db	209
   160  000637  38                 	db	56
   161  000638  C6                 	db	198
   162  000639  27                 	db	39
   163  00063A  37                 	db	55
   164  00063B  38                 	db	56
   165  00063C  86                 	db	134
   166  00063D  35                 	db	53
   167  00063E  C0                 	db	192
   168  00063F  D6                 	db	214
   169  000640  33                 	db	51
   170  000641  CC                 	db	204
   171  000642  2B                 	db	43
   172  000643  32                 	db	50
   173  000644  70                 	db	112
   174  000645  89                 	db	137
   175  000646  30                 	db	48
   176  000647  E7                 	db	231
   177  000648  DB                 	db	219
   178  000649  2E                 	db	46
   179  00064A  E5                 	db	229
   180  00064B  3C                 	db	60
   181  00064C  1E                 	db	30
   182  00064D  42                 	db	66
   183  00064E  A2                 	db	162
   184  00064F  0D                 	db	13
   185  000650                     __end_of__npowers_:
   186                           	opt stack 0
   187  000650                     __powers_:
   188                           	opt stack 0
   189  000650  00                 	db	0
   190  000651  80                 	db	128
   191  000652  3F                 	db	63
   192  000653  00                 	db	0
   193  000654  20                 	db	32
   194  000655  41                 	db	65
   195  000656  00                 	db	0
   196  000657  C8                 	db	200
   197  000658  42                 	db	66
   198  000659  00                 	db	0
   199  00065A  7A                 	db	122
   200  00065B  44                 	db	68
   201  00065C  40                 	db	64
   202  00065D  1C                 	db	28
   203  00065E  46                 	db	70
   204  00065F  50                 	db	80
   205  000660  C3                 	db	195
   206  000661  47                 	db	71
   207  000662  24                 	db	36
   208  000663  74                 	db	116
   209  000664  49                 	db	73
   210  000665  97                 	db	151
   211  000666  18                 	db	24
   212  000667  4B                 	db	75
   213  000668  BC                 	db	188
   214  000669  BE                 	db	190
   215  00066A  4C                 	db	76
   216  00066B  6B                 	db	107
   217  00066C  6E                 	db	110
   218  00066D  4E                 	db	78
   219  00066E  03                 	db	3
   220  00066F  15                 	db	21
   221  000670  50                 	db	80
   222  000671  79                 	db	121
   223  000672  AD                 	db	173
   224  000673  60                 	db	96
   225  000674  F3                 	db	243
   226  000675  49                 	db	73
   227  000676  71                 	db	113
   228  000677                     __end_of__powers_:
   229                           	opt stack 0
   230  000677                     _cal_current:
   231                           	opt stack 0
   232  000677  00                 	db	0
   233  000678  00                 	db	0
   234  000679  3F                 	db	63
   235  00067A  B8                 	db	184
   236  00067B  3E                 	db	62
   237  00067C  40                 	db	64
   238  00067D  DC                 	db	220
   239  00067E  D8                 	db	216
   240  00067F  42                 	db	66
   241  000680  68                 	db	104
   242  000681  8D                 	db	141
   243  000682  45                 	db	69
   244  000683  C0                 	db	192
   245  000684  DA                 	db	218
   246  000685  47                 	db	71
   247  000686                     __end_of_cal_current:
   248                           	opt stack 0
   249  000686                     _R1_BIT:
   250                           	opt stack 0
   251  000686  00                 	db	0
   252  000687  01                 	db	1
   253  000688  02                 	db	2
   254  000689  03                 	db	3
   255  00068A  04                 	db	4
   256  00068B                     __end_of_R1_BIT:
   257                           	opt stack 0
   258  00068B                     _RSET_BIT:
   259                           	opt stack 0
   260  00068B  02                 	db	2
   261  00068C  03                 	db	3
   262  00068D  03                 	db	3
   263  00068E  04                 	db	4
   264  00068F  05                 	db	5
   265  000690                     __end_of_RSET_BIT:
   266                           	opt stack 0
   267  000690                     STR_1:
   268  000690  43                 	db	67	;'C'
   269  000691  61                 	db	97	;'a'
   270  000692  70                 	db	112	;'p'
   271  000693  61                 	db	97	;'a'
   272  000694  63                 	db	99	;'c'
   273  000695  69                 	db	105	;'i'
   274  000696  74                 	db	116	;'t'
   275  000697  61                 	db	97	;'a'
   276  000698  6E                 	db	110	;'n'
   277  000699  63                 	db	99	;'c'
   278  00069A  65                 	db	101	;'e'
   279  00069B  3A                 	db	58	;':'
   280  00069C  20                 	db	32
   281  00069D  25                 	db	37
   282  00069E  30                 	db	48	;'0'
   283  00069F  2E                 	db	46
   284  0006A0  32                 	db	50	;'2'
   285  0006A1  66                 	db	102	;'f'
   286  0006A2  20                 	db	32
   287  0006A3  70                 	db	112	;'p'
   288  0006A4  46                 	db	70	;'F'
   289  0006A5  20                 	db	32
   290  0006A6  28                 	db	40
   291  0006A7  43                 	db	67	;'C'
   292  0006A8  6F                 	db	111	;'o'
   293  0006A9  75                 	db	117	;'u'
   294  0006AA  6E                 	db	110	;'n'
   295  0006AB  74                 	db	116	;'t'
   296  0006AC  3A                 	db	58	;':'
   297  0006AD  20                 	db	32
   298  0006AE  25                 	db	37
   299  0006AF  75                 	db	117	;'u'
   300  0006B0  29                 	db	41
   301  0006B1  20                 	db	32
   302  0006B2  2D                 	db	45
   303  0006B3  20                 	db	32
   304  0006B4  52                 	db	82	;'R'
   305  0006B5  61                 	db	97	;'a'
   306  0006B6  6E                 	db	110	;'n'
   307  0006B7  67                 	db	103	;'g'
   308  0006B8  65                 	db	101	;'e'
   309  0006B9  3A                 	db	58	;':'
   310  0006BA  20                 	db	32
   311  0006BB  25                 	db	37
   312  0006BC  64                 	db	100	;'d'
   313  0006BD  0D                 	db	13
   314  0006BE  0A                 	db	10
   315  0006BF  00                 	db	0
   316  0006C0  25                 	db	37
   317  0006C1  6C                 	db	108	;'l'
   318  0006C2  75                 	db	117	;'u'
   319  0006C3  2E                 	db	46
   320  0006C4  25                 	db	37
   321  0006C5  36                 	db	54	;'6'
   322  0006C6  2E                 	db	46
   323  0006C7  36                 	db	54	;'6'
   324  0006C8  6C                 	db	108	;'l'
   325  0006C9  75                 	db	117	;'u'
   326  0006CA  00                 	db	0
   327  0006CB                     STR_3:
   328  0006CB  43                 	db	67	;'C'
   329  0006CC  3D                 	db	61	;'='
   330  0006CD  25                 	db	37
   331  0006CE  31                 	db	49	;'1'
   332  0006CF  32                 	db	50	;'2'
   333  0006D0  2E                 	db	46
   334  0006D1  33                 	db	51	;'3'
   335  0006D2  66                 	db	102	;'f'
   336  0006D3  6E                 	db	110	;'n'
   337  0006D4  46                 	db	70	;'F'
   338  0006D5  00                 	db	0
   339  0006D6                     STR_4:
   340  0006D6  43                 	db	67	;'C'
   341  0006D7  3D                 	db	61	;'='
   342  0006D8  25                 	db	37
   343  0006D9  31                 	db	49	;'1'
   344  0006DA  32                 	db	50	;'2'
   345  0006DB  2E                 	db	46
   346  0006DC  30                 	db	48	;'0'
   347  0006DD  66                 	db	102	;'f'
   348  0006DE  70                 	db	112	;'p'
   349  0006DF  46                 	db	70	;'F'
   350  0006E0  00                 	db	0
   351  0006E1                     STR_2:
   352  0006E1  43                 	db	67	;'C'
   353  0006E2  3D                 	db	61	;'='
   354  0006E3  25                 	db	37
   355  0006E4  31                 	db	49	;'1'
   356  0006E5  32                 	db	50	;'2'
   357  0006E6  2E                 	db	46
   358  0006E7  36                 	db	54	;'6'
   359  0006E8  66                 	db	102	;'f'
   360  0006E9  75                 	db	117	;'u'
   361  0006EA  46                 	db	70	;'F'
   362  0006EB  00                 	db	0
   363                           
   364                           ; #config settings
   365  0006EC  00                 	db	0	; dummy byte at the end
   366  0000                     
   367                           	psect	nvCOMRAM
   368  00005C                     __pnvCOMRAM:
   369                           	opt stack 0
   370  00005C                     _timer0ReloadVal:
   371                           	opt stack 0
   372  00005C                     	ds	2
   373                           
   374                           	psect	nvBANK0
   375  0000CA                     __pnvBANK0:
   376                           	opt stack 0
   377  0000CA                     _INT0_InterruptHandler:
   378                           	opt stack 0
   379  0000CA                     	ds	2
   380  0000CC                     _INT1_InterruptHandler:
   381                           	opt stack 0
   382  0000CC                     	ds	2
   383  0000CE                     _TMR0_InterruptHandler:
   384                           	opt stack 0
   385  0000CE                     	ds	2
   386  0000                     _ANSELA	set	3896
   387  0000                     _ANSELB	set	3897
   388  0000                     _ANSELC	set	3898
   389  0000                     _BAUDCON1	set	4024
   390  0000                     _INTCON2bits	set	4081
   391  0000                     _INTCON3bits	set	4080
   392  0000                     _INTCONbits	set	4082
   393  0000                     _LATA	set	3977
   394  0000                     _LATAbits	set	3977
   395  0000                     _LATB	set	3978
   396  0000                     _LATC	set	3979
   397  0000                     _LATCbits	set	3979
   398  0000                     _OSCCON	set	4051
   399  0000                     _OSCCON2	set	4050
   400  0000                     _OSCTUNE	set	3995
   401  0000                     _PIR1bits	set	3998
   402  0000                     _RCONbits	set	4048
   403  0000                     _RCREG1	set	4014
   404  0000                     _RCSTA1	set	4011
   405  0000                     _RCSTA1bits	set	4011
   406  0000                     _SPBRG1	set	4015
   407  0000                     _SPBRGH1	set	4016
   408  0000                     _T0CON	set	4053
   409  0000                     _T0CONbits	set	4053
   410  0000                     _TMR0H	set	4055
   411  0000                     _TMR0L	set	4054
   412  0000                     _TRISA	set	3986
   413  0000                     _TRISB	set	3987
   414  0000                     _TRISC	set	3988
   415  0000                     _TXREG1	set	4013
   416  0000                     _TXSTA1	set	4012
   417  0000                     _WPUB	set	3937
   418                           
   419                           	psect	cinit
   420  005640                     __pcinit:
   421                           	opt stack 0
   422  005640                     start_initialization:
   423                           	opt stack 0
   424  005640                     __initialization:
   425                           	opt stack 0
   426                           
   427                           ; Initialize objects allocated to BANK0 (2 bytes)
   428                           ; load TBLPTR registers with __pidataBANK0
   429  005640  0E42               	movlw	low __pidataBANK0
   430  005642  6EF6               	movwf	tblptrl,c
   431  005644  0E5B               	movlw	high __pidataBANK0
   432  005646  6EF7               	movwf	tblptrh,c
   433  005648  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   434  00564A  6EF8               	movwf	tblptru,c
   435  00564C  0009               	tblrd		*+	;fetch initializer
   436  00564E  CFF5 F0D0          	movff	tablat,__pdataBANK0
   437  005652  0009               	tblrd		*+	;fetch initializer
   438  005654  CFF5 F0D1          	movff	tablat,__pdataBANK0+1
   439                           
   440                           ; Initialize objects allocated to COMRAM (1 bytes)
   441                           ; load TBLPTR registers with __pidataCOMRAM
   442  005658  0E44               	movlw	low __pidataCOMRAM
   443  00565A  6EF6               	movwf	tblptrl,c
   444  00565C  0E5B               	movlw	high __pidataCOMRAM
   445  00565E  6EF7               	movwf	tblptrh,c
   446  005660  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   447  005662  6EF8               	movwf	tblptru,c
   448  005664  0009               	tblrd		*+	;fetch initializer
   449  005666  CFF5 F05E          	movff	tablat,__pdataCOMRAM
   450                           
   451                           ; Clear objects allocated to BANK0 (19 bytes)
   452  00566A  EE00  F0B7         	lfsr	0,__pbssBANK0
   453  00566E  0E13               	movlw	19
   454  005670                     clear_0:
   455  005670  6AEE               	clrf	postinc0,c
   456  005672  06E8               	decf	wreg,f,c
   457  005674  E1FD               	bnz	clear_0
   458                           
   459                           ; Clear objects allocated to COMRAM (4 bytes)
   460  005676  6A5B               	clrf	(__pbssCOMRAM+3)& (0+255),c
   461  005678  6A5A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   462  00567A  6A59               	clrf	(__pbssCOMRAM+1)& (0+255),c
   463  00567C  6A58               	clrf	__pbssCOMRAM& (0+255),c
   464  00567E                     end_of_initialization:
   465                           	opt stack 0
   466  00567E                     __end_of__initialization:
   467                           	opt stack 0
   468  00567E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   469  005680  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   470  005682  0E00               	movlw	low (__Lmediumconst shr (0+16))
   471  005684  6EF8               	movwf	tblptru,c
   472  005686  0100               	movlb	0
   473  005688  EF65  F01D         	goto	_main	;jump to C main() function
   474                           tblptru	equ	0xFF8
   475                           tblptrh	equ	0xFF7
   476                           tblptrl	equ	0xFF6
   477                           tablat	equ	0xFF5
   478                           postinc0	equ	0xFEE
   479                           wreg	equ	0xFE8
   480                           
   481                           	psect	bssCOMRAM
   482  000058                     __pbssCOMRAM:
   483                           	opt stack 0
   484  000058                     _result:
   485                           	opt stack 0
   486  000058                     	ds	3
   487  00005B                     _delta_range:
   488                           	opt stack 0
   489  00005B                     	ds	1
   490                           tblptru	equ	0xFF8
   491                           tblptrh	equ	0xFF7
   492                           tblptrl	equ	0xFF6
   493                           tablat	equ	0xFF5
   494                           postinc0	equ	0xFEE
   495                           wreg	equ	0xFE8
   496                           
   497                           	psect	dataCOMRAM
   498  00005E                     __pdataCOMRAM:
   499                           	opt stack 0
   500  00005E                     _range:
   501                           	opt stack 0
   502  00005E                     	ds	1
   503                           tblptru	equ	0xFF8
   504                           tblptrh	equ	0xFF7
   505                           tblptrl	equ	0xFF6
   506                           tablat	equ	0xFF5
   507                           postinc0	equ	0xFEE
   508                           wreg	equ	0xFE8
   509                           
   510                           	psect	bssBANK0
   511  0000B7                     __pbssBANK0:
   512                           	opt stack 0
   513  0000B7                     _reading:
   514                           	opt stack 0
   515  0000B7                     	ds	2
   516  0000B9                     ftoa@buf:
   517                           	opt stack 0
   518  0000B9                     	ds	17
   519                           tblptru	equ	0xFF8
   520                           tblptrh	equ	0xFF7
   521                           tblptrl	equ	0xFF6
   522                           tablat	equ	0xFF5
   523                           postinc0	equ	0xFEE
   524                           wreg	equ	0xFE8
   525                           
   526                           	psect	dataBANK0
   527  0000D0                     __pdataBANK0:
   528                           	opt stack 0
   529  0000D0                     _units:
   530                           	opt stack 0
   531  0000D0                     	ds	2
   532                           tblptru	equ	0xFF8
   533                           tblptrh	equ	0xFF7
   534                           tblptrl	equ	0xFF6
   535                           tablat	equ	0xFF5
   536                           postinc0	equ	0xFEE
   537                           wreg	equ	0xFE8
   538                           
   539                           	psect	cstackBANK1
   540  000100                     __pcstackBANK1:
   541                           	opt stack 0
   542  000100                     _fround$1719:
   543                           	opt stack 0
   544  000100                     _scale$1720:
   545                           	opt stack 0
   546                           
   547                           ; 3 bytes @ 0x0
   548  000100                     	ds	3
   549  000103                     scale@scl:
   550                           	opt stack 0
   551  000103                     _fround$1718:
   552                           	opt stack 0
   553                           
   554                           ; 3 bytes @ 0x3
   555  000103                     	ds	1
   556  000104                     ?___fttol:
   557                           	opt stack 0
   558  000104                     ___fttol@f1:
   559                           	opt stack 0
   560                           
   561                           ; 3 bytes @ 0x4
   562  000104                     	ds	2
   563  000106                     fround@prec:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0x6
   567  000106                     	ds	1
   568  000107                     ?___ftadd:
   569                           	opt stack 0
   570  000107                     ___ftadd@f1:
   571                           	opt stack 0
   572                           
   573                           ; 3 bytes @ 0x7
   574  000107                     	ds	1
   575  000108                     ??___fttol:
   576                           
   577                           ; 1 bytes @ 0x8
   578  000108                     	ds	2
   579  00010A                     ___ftadd@f2:
   580                           	opt stack 0
   581                           
   582                           ; 3 bytes @ 0xA
   583  00010A                     	ds	3
   584  00010D                     ___ftadd@sign:
   585                           	opt stack 0
   586  00010D                     ___fttol@sign1:
   587                           	opt stack 0
   588                           
   589                           ; 1 bytes @ 0xD
   590  00010D                     	ds	1
   591  00010E                     ___ftadd@exp2:
   592                           	opt stack 0
   593  00010E                     ___fttol@lval:
   594                           	opt stack 0
   595                           
   596                           ; 4 bytes @ 0xE
   597  00010E                     	ds	1
   598  00010F                     ___ftadd@exp1:
   599                           	opt stack 0
   600                           
   601                           ; 1 bytes @ 0xF
   602  00010F                     	ds	1
   603  000110                     ?___ftsub:
   604                           	opt stack 0
   605  000110                     ___ftsub@f1:
   606                           	opt stack 0
   607                           
   608                           ; 3 bytes @ 0x10
   609  000110                     	ds	2
   610  000112                     ___fttol@exp1:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0x12
   614  000112                     	ds	1
   615  000113                     ___ftsub@f2:
   616                           	opt stack 0
   617                           
   618                           ; 3 bytes @ 0x13
   619  000113                     	ds	3
   620  000116                     ?__doprnt:
   621                           	opt stack 0
   622  000116                     __doprnt@pb:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x16
   626  000116                     	ds	2
   627  000118                     __doprnt@f:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x18
   631  000118                     	ds	2
   632  00011A                     __doprnt@ap:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x1A
   636  00011A                     	ds	2
   637  00011C                     ??__doprnt:
   638                           
   639                           ; 1 bytes @ 0x1C
   640  00011C                     	ds	6
   641  000122                     __doprnt$1721:
   642                           	opt stack 0
   643                           
   644                           ; 3 bytes @ 0x22
   645  000122                     	ds	3
   646  000125                     __doprnt@exp:
   647                           	opt stack 0
   648                           
   649                           ; 2 bytes @ 0x25
   650  000125                     	ds	2
   651  000127                     __doprnt@val:
   652                           	opt stack 0
   653                           
   654                           ; 4 bytes @ 0x27
   655  000127                     	ds	4
   656  00012B                     __doprnt@tmpval:
   657                           	opt stack 0
   658                           
   659                           ; 4 bytes @ 0x2B
   660  00012B                     	ds	4
   661  00012F                     __doprnt@width:
   662                           	opt stack 0
   663                           
   664                           ; 2 bytes @ 0x2F
   665  00012F                     	ds	2
   666  000131                     __doprnt@fval:
   667                           	opt stack 0
   668                           
   669                           ; 3 bytes @ 0x31
   670  000131                     	ds	3
   671  000134                     __doprnt@flag:
   672                           	opt stack 0
   673                           
   674                           ; 2 bytes @ 0x34
   675  000134                     	ds	2
   676  000136                     __doprnt@prec:
   677                           	opt stack 0
   678                           
   679                           ; 2 bytes @ 0x36
   680  000136                     	ds	2
   681  000138                     __doprnt@c:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0x38
   685  000138                     	ds	1
   686  000139                     ?_sprintf:
   687                           	opt stack 0
   688  000139                     sprintf@wh:
   689                           	opt stack 0
   690                           
   691                           ; 2 bytes @ 0x39
   692  000139                     	ds	2
   693  00013B                     sprintf@f:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x3B
   697  00013B                     	ds	5
   698  000140                     sprintf@ap:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0x40
   702  000140                     	ds	2
   703  000142                     sprintf@pb:
   704                           	opt stack 0
   705                           
   706                           ; 4 bytes @ 0x42
   707  000142                     	ds	4
   708  000146                     main@cap_string:
   709                           	opt stack 0
   710                           
   711                           ; 16 bytes @ 0x46
   712  000146                     	ds	16
   713                           tblptru	equ	0xFF8
   714                           tblptrh	equ	0xFF7
   715                           tblptrl	equ	0xFF6
   716                           tablat	equ	0xFF5
   717                           postinc0	equ	0xFEE
   718                           wreg	equ	0xFE8
   719                           
   720                           	psect	cstackBANK0
   721  000060                     __pcstackBANK0:
   722                           	opt stack 0
   723  000060                     i2__doprnt$1903:
   724                           	opt stack 0
   725                           
   726                           ; 3 bytes @ 0x0
   727  000060                     	ds	3
   728  000063                     i2__doprnt@exp:
   729                           	opt stack 0
   730                           
   731                           ; 2 bytes @ 0x3
   732  000063                     	ds	2
   733  000065                     i2__doprnt@val:
   734                           	opt stack 0
   735                           
   736                           ; 4 bytes @ 0x5
   737  000065                     	ds	4
   738  000069                     i2__doprnt@tmpval:
   739                           	opt stack 0
   740                           
   741                           ; 4 bytes @ 0x9
   742  000069                     	ds	4
   743  00006D                     i2__doprnt@fval:
   744                           	opt stack 0
   745                           
   746                           ; 3 bytes @ 0xD
   747  00006D                     	ds	3
   748  000070                     i2__doprnt@width:
   749                           	opt stack 0
   750                           
   751                           ; 2 bytes @ 0x10
   752  000070                     	ds	2
   753  000072                     i2__doprnt@flag:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0x12
   757  000072                     	ds	2
   758  000074                     i2__doprnt@prec:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0x14
   762  000074                     	ds	2
   763  000076                     i2__doprnt@c:
   764                           	opt stack 0
   765                           
   766                           ; 1 bytes @ 0x16
   767  000076                     	ds	1
   768  000077                     ?_printf:
   769                           	opt stack 0
   770  000077                     printf@f:
   771                           	opt stack 0
   772                           
   773                           ; 2 bytes @ 0x17
   774  000077                     	ds	9
   775  000080                     ??_INTERRUPT_InterruptManager:
   776                           
   777                           ; 1 bytes @ 0x20
   778  000080                     	ds	14
   779  00008E                     ??_isdigit:
   780  00008E                     ?___awmod:
   781                           	opt stack 0
   782  00008E                     ?___ftpack:
   783                           	opt stack 0
   784  00008E                     ?___ftneg:
   785                           	opt stack 0
   786  00008E                     ?__tdiv_to_l_:
   787                           	opt stack 0
   788  00008E                     ?__div_to_l_:
   789                           	opt stack 0
   790  00008E                     ?___lldiv:
   791                           	opt stack 0
   792  00008E                     EUSART1_Write@txData:
   793                           	opt stack 0
   794  00008E                     __lcd_Port@a:
   795                           	opt stack 0
   796  00008E                     INT1_SetInterruptHandler@InterruptHandler:
   797                           	opt stack 0
   798  00008E                     INT0_SetInterruptHandler@InterruptHandler:
   799                           	opt stack 0
   800  00008E                     TMR0_SetInterruptHandler@InterruptHandler:
   801                           	opt stack 0
   802  00008E                     ___awmod@dividend:
   803                           	opt stack 0
   804  00008E                     __div_to_l_@f1:
   805                           	opt stack 0
   806  00008E                     ___ftpack@arg:
   807                           	opt stack 0
   808  00008E                     __tdiv_to_l_@f1:
   809                           	opt stack 0
   810  00008E                     ___ftge@ff1:
   811                           	opt stack 0
   812  00008E                     ___ftneg@f1:
   813                           	opt stack 0
   814  00008E                     ___lldiv@dividend:
   815                           	opt stack 0
   816                           
   817                           ; 4 bytes @ 0x2E
   818  00008E                     	ds	1
   819  00008F                     ??_lcd_sendCommand:
   820  00008F                     putch@txData:
   821                           	opt stack 0
   822  00008F                     lcd_sendChar@temp:
   823                           	opt stack 0
   824  00008F                     _isdigit$1253:
   825                           	opt stack 0
   826                           
   827                           ; 1 bytes @ 0x2F
   828  00008F                     	ds	1
   829  000090                     ??_TMR0_Initialize:
   830  000090                     lcd_sendCommand@a:
   831                           	opt stack 0
   832  000090                     lcd_sendChar@y:
   833                           	opt stack 0
   834  000090                     isdigit@c:
   835                           	opt stack 0
   836  000090                     ___awmod@divisor:
   837                           	opt stack 0
   838                           
   839                           ; 2 bytes @ 0x30
   840  000090                     	ds	1
   841  000091                     ??_lcd_init:
   842  000091                     lcd_sendChar@a:
   843                           	opt stack 0
   844  000091                     ___ftpack@exp:
   845                           	opt stack 0
   846  000091                     __div_to_l_@f2:
   847                           	opt stack 0
   848  000091                     __tdiv_to_l_@f2:
   849                           	opt stack 0
   850  000091                     ___ftge@ff2:
   851                           	opt stack 0
   852                           
   853                           ; 3 bytes @ 0x31
   854  000091                     	ds	1
   855  000092                     ___awmod@counter:
   856                           	opt stack 0
   857  000092                     ___ftpack@sign:
   858                           	opt stack 0
   859  000092                     lcd_sendString@a:
   860                           	opt stack 0
   861  000092                     ___lldiv@divisor:
   862                           	opt stack 0
   863                           
   864                           ; 4 bytes @ 0x32
   865  000092                     	ds	1
   866  000093                     ??___ftpack:
   867  000093                     ___awmod@sign:
   868                           	opt stack 0
   869                           
   870                           ; 1 bytes @ 0x33
   871  000093                     	ds	1
   872  000094                     ??__tdiv_to_l_:
   873  000094                     ??___ftge:
   874  000094                     ?___awdiv:
   875                           	opt stack 0
   876  000094                     lcd_sendString@i:
   877                           	opt stack 0
   878  000094                     ___awdiv@dividend:
   879                           	opt stack 0
   880  000094                     __div_to_l_@quot:
   881                           	opt stack 0
   882                           
   883                           ; 4 bytes @ 0x34
   884  000094                     	ds	2
   885  000096                     ?___ftdiv:
   886                           	opt stack 0
   887  000096                     ?___lltoft:
   888                           	opt stack 0
   889  000096                     ___awdiv@divisor:
   890                           	opt stack 0
   891  000096                     ___ftdiv@f1:
   892                           	opt stack 0
   893  000096                     ___lldiv@quotient:
   894                           	opt stack 0
   895  000096                     ___lltoft@c:
   896                           	opt stack 0
   897                           
   898                           ; 4 bytes @ 0x36
   899  000096                     	ds	1
   900  000097                     __tdiv_to_l_@quot:
   901                           	opt stack 0
   902                           
   903                           ; 4 bytes @ 0x37
   904  000097                     	ds	1
   905  000098                     ___awdiv@counter:
   906                           	opt stack 0
   907  000098                     __div_to_l_@cntr:
   908                           	opt stack 0
   909                           
   910                           ; 1 bytes @ 0x38
   911  000098                     	ds	1
   912  000099                     ___awdiv@sign:
   913                           	opt stack 0
   914  000099                     __div_to_l_@exp1:
   915                           	opt stack 0
   916  000099                     ___ftdiv@f2:
   917                           	opt stack 0
   918                           
   919                           ; 3 bytes @ 0x39
   920  000099                     	ds	1
   921  00009A                     ??___lltoft:
   922  00009A                     ___lldiv@counter:
   923                           	opt stack 0
   924  00009A                     ___awdiv@quotient:
   925                           	opt stack 0
   926                           
   927                           ; 2 bytes @ 0x3A
   928  00009A                     	ds	1
   929  00009B                     ?___llmod:
   930                           	opt stack 0
   931  00009B                     __tdiv_to_l_@cntr:
   932                           	opt stack 0
   933  00009B                     ___llmod@dividend:
   934                           	opt stack 0
   935                           
   936                           ; 4 bytes @ 0x3B
   937  00009B                     	ds	1
   938  00009C                     ??___ftdiv:
   939  00009C                     ?___wmul:
   940                           	opt stack 0
   941  00009C                     __tdiv_to_l_@exp1:
   942                           	opt stack 0
   943  00009C                     ___wmul@multiplier:
   944                           	opt stack 0
   945                           
   946                           ; 2 bytes @ 0x3C
   947  00009C                     	ds	2
   948  00009E                     ___lltoft@exp:
   949                           	opt stack 0
   950  00009E                     ___wmul@multiplicand:
   951                           	opt stack 0
   952                           
   953                           ; 2 bytes @ 0x3E
   954  00009E                     	ds	1
   955  00009F                     ___ftdiv@cntr:
   956                           	opt stack 0
   957  00009F                     ___llmod@divisor:
   958                           	opt stack 0
   959                           
   960                           ; 4 bytes @ 0x3F
   961  00009F                     	ds	1
   962  0000A0                     ___wmul@product:
   963                           	opt stack 0
   964  0000A0                     ___ftdiv@f3:
   965                           	opt stack 0
   966                           
   967                           ; 3 bytes @ 0x40
   968  0000A0                     	ds	2
   969  0000A2                     ?___ftmul:
   970                           	opt stack 0
   971  0000A2                     ___ftmul@f1:
   972                           	opt stack 0
   973                           
   974                           ; 3 bytes @ 0x42
   975  0000A2                     	ds	1
   976  0000A3                     ___ftdiv@exp:
   977                           	opt stack 0
   978  0000A3                     ___llmod@counter:
   979                           	opt stack 0
   980                           
   981                           ; 1 bytes @ 0x43
   982  0000A3                     	ds	1
   983  0000A4                     ___ftdiv@sign:
   984                           	opt stack 0
   985                           
   986                           ; 1 bytes @ 0x44
   987  0000A4                     	ds	1
   988  0000A5                     ___ftmul@f2:
   989                           	opt stack 0
   990                           
   991                           ; 3 bytes @ 0x45
   992  0000A5                     	ds	3
   993  0000A8                     ??___ftmul:
   994                           
   995                           ; 1 bytes @ 0x48
   996  0000A8                     	ds	3
   997  0000AB                     ___ftmul@exp:
   998                           	opt stack 0
   999                           
  1000                           ; 1 bytes @ 0x4B
  1001  0000AB                     	ds	1
  1002  0000AC                     ___ftmul@f3_as_product:
  1003                           	opt stack 0
  1004                           
  1005                           ; 3 bytes @ 0x4C
  1006  0000AC                     	ds	3
  1007  0000AF                     ___ftmul@cntr:
  1008                           	opt stack 0
  1009                           
  1010                           ; 1 bytes @ 0x4F
  1011  0000AF                     	ds	1
  1012  0000B0                     ___ftmul@sign:
  1013                           	opt stack 0
  1014                           
  1015                           ; 1 bytes @ 0x50
  1016  0000B0                     	ds	1
  1017  0000B1                     ?_fround:
  1018                           	opt stack 0
  1019  0000B1                     ?_scale:
  1020                           	opt stack 0
  1021                           
  1022                           ; 3 bytes @ 0x51
  1023  0000B1                     	ds	3
  1024  0000B4                     ??___ftadd:
  1025  0000B4                     
  1026                           ; 1 bytes @ 0x54
  1027  0000B4                     	ds	3
  1028  0000B7                     tblptru	equ	0xFF8
  1029                           tblptrh	equ	0xFF7
  1030                           tblptrl	equ	0xFF6
  1031                           tablat	equ	0xFF5
  1032                           postinc0	equ	0xFEE
  1033                           wreg	equ	0xFE8
  1034                           
  1035                           ; 1 bytes @ 0x57
  1036                           
  1037                           	psect	cstackCOMRAM
  1038  000001                     __pcstackCOMRAM:
  1039                           	opt stack 0
  1040  000001                     ??_TMR0_DefaultInterruptHandler:
  1041  000001                     ??_INT1_ISR:
  1042  000001                     ??i2_isdigit:
  1043  000001                     ?_TMR0_ReadTimer:
  1044                           	opt stack 0
  1045  000001                     ?i2___awmod:
  1046                           	opt stack 0
  1047  000001                     ?i2___ftpack:
  1048                           	opt stack 0
  1049  000001                     ?i2___ftneg:
  1050                           	opt stack 0
  1051  000001                     ?i2__div_to_l_:
  1052                           	opt stack 0
  1053  000001                     ?i2__tdiv_to_l_:
  1054                           	opt stack 0
  1055  000001                     ?i2___lldiv:
  1056                           	opt stack 0
  1057  000001                     i2EUSART1_Write@txData:
  1058                           	opt stack 0
  1059  000001                     i2___awmod@dividend:
  1060                           	opt stack 0
  1061  000001                     i2__div_to_l_@f1:
  1062                           	opt stack 0
  1063  000001                     i2___ftpack@arg:
  1064                           	opt stack 0
  1065  000001                     i2__tdiv_to_l_@f1:
  1066                           	opt stack 0
  1067  000001                     i2___ftge@ff1:
  1068                           	opt stack 0
  1069  000001                     i2___ftneg@f1:
  1070                           	opt stack 0
  1071  000001                     i2___lldiv@dividend:
  1072                           	opt stack 0
  1073                           
  1074                           ; 4 bytes @ 0x0
  1075  000001                     	ds	1
  1076  000002                     i2putch@txData:
  1077                           	opt stack 0
  1078  000002                     i2_isdigit$1253:
  1079                           	opt stack 0
  1080                           
  1081                           ; 1 bytes @ 0x1
  1082  000002                     	ds	1
  1083  000003                     ??_TMR0_ReadTimer:
  1084  000003                     i2isdigit@c:
  1085                           	opt stack 0
  1086  000003                     i2___awmod@divisor:
  1087                           	opt stack 0
  1088                           
  1089                           ; 2 bytes @ 0x2
  1090  000003                     	ds	1
  1091  000004                     i2___ftpack@exp:
  1092                           	opt stack 0
  1093  000004                     i2__div_to_l_@f2:
  1094                           	opt stack 0
  1095  000004                     i2__tdiv_to_l_@f2:
  1096                           	opt stack 0
  1097  000004                     i2___ftge@ff2:
  1098                           	opt stack 0
  1099                           
  1100                           ; 3 bytes @ 0x3
  1101  000004                     	ds	1
  1102  000005                     i2___awmod@counter:
  1103                           	opt stack 0
  1104  000005                     i2___ftpack@sign:
  1105                           	opt stack 0
  1106  000005                     i2___lldiv@divisor:
  1107                           	opt stack 0
  1108                           
  1109                           ; 4 bytes @ 0x4
  1110  000005                     	ds	1
  1111  000006                     ??i2___ftpack:
  1112  000006                     i2___awmod@sign:
  1113                           	opt stack 0
  1114                           
  1115                           ; 1 bytes @ 0x5
  1116  000006                     	ds	1
  1117  000007                     ??i2__tdiv_to_l_:
  1118  000007                     ??i2___ftge:
  1119  000007                     ?i2___awdiv:
  1120                           	opt stack 0
  1121  000007                     TMR0_ReadTimer@readVal:
  1122                           	opt stack 0
  1123  000007                     i2___awdiv@dividend:
  1124                           	opt stack 0
  1125  000007                     i2__div_to_l_@quot:
  1126                           	opt stack 0
  1127                           
  1128                           ; 4 bytes @ 0x6
  1129  000007                     	ds	2
  1130  000009                     ?___lwtoft:
  1131                           	opt stack 0
  1132  000009                     ?i2___lltoft:
  1133                           	opt stack 0
  1134  000009                     TMR0_ReadTimer@readValLow:
  1135                           	opt stack 0
  1136  000009                     ___lwtoft@c:
  1137                           	opt stack 0
  1138  000009                     i2___awdiv@divisor:
  1139                           	opt stack 0
  1140  000009                     i2___lldiv@quotient:
  1141                           	opt stack 0
  1142  000009                     i2___lltoft@c:
  1143                           	opt stack 0
  1144                           
  1145                           ; 4 bytes @ 0x8
  1146  000009                     	ds	1
  1147  00000A                     TMR0_ReadTimer@readValHigh:
  1148                           	opt stack 0
  1149  00000A                     i2__tdiv_to_l_@quot:
  1150                           	opt stack 0
  1151                           
  1152                           ; 4 bytes @ 0x9
  1153  00000A                     	ds	1
  1154  00000B                     i2___awdiv@counter:
  1155                           	opt stack 0
  1156  00000B                     i2__div_to_l_@cntr:
  1157                           	opt stack 0
  1158                           
  1159                           ; 1 bytes @ 0xA
  1160  00000B                     	ds	1
  1161  00000C                     i2___awdiv@sign:
  1162                           	opt stack 0
  1163  00000C                     i2__div_to_l_@exp1:
  1164                           	opt stack 0
  1165                           
  1166                           ; 1 bytes @ 0xB
  1167  00000C                     	ds	1
  1168  00000D                     ??i2___lltoft:
  1169  00000D                     i2___lldiv@counter:
  1170                           	opt stack 0
  1171  00000D                     i2___awdiv@quotient:
  1172                           	opt stack 0
  1173                           
  1174                           ; 2 bytes @ 0xC
  1175  00000D                     	ds	1
  1176  00000E                     ?i2___llmod:
  1177                           	opt stack 0
  1178  00000E                     i2__tdiv_to_l_@cntr:
  1179                           	opt stack 0
  1180  00000E                     i2___llmod@dividend:
  1181                           	opt stack 0
  1182                           
  1183                           ; 4 bytes @ 0xD
  1184  00000E                     	ds	1
  1185  00000F                     ?i2___wmul:
  1186                           	opt stack 0
  1187  00000F                     i2__tdiv_to_l_@exp1:
  1188                           	opt stack 0
  1189  00000F                     i2___wmul@multiplier:
  1190                           	opt stack 0
  1191                           
  1192                           ; 2 bytes @ 0xE
  1193  00000F                     	ds	2
  1194  000011                     i2___lltoft@exp:
  1195                           	opt stack 0
  1196  000011                     i2___wmul@multiplicand:
  1197                           	opt stack 0
  1198                           
  1199                           ; 2 bytes @ 0x10
  1200  000011                     	ds	1
  1201  000012                     i2___llmod@divisor:
  1202                           	opt stack 0
  1203                           
  1204                           ; 4 bytes @ 0x11
  1205  000012                     	ds	1
  1206  000013                     i2___wmul@product:
  1207                           	opt stack 0
  1208                           
  1209                           ; 2 bytes @ 0x12
  1210  000013                     	ds	2
  1211  000015                     ?i2___ftadd:
  1212                           	opt stack 0
  1213  000015                     i2___ftadd@f1:
  1214                           	opt stack 0
  1215                           
  1216                           ; 3 bytes @ 0x14
  1217  000015                     	ds	1
  1218  000016                     i2___llmod@counter:
  1219                           	opt stack 0
  1220                           
  1221                           ; 1 bytes @ 0x15
  1222  000016                     	ds	2
  1223  000018                     i2___ftadd@f2:
  1224                           	opt stack 0
  1225                           
  1226                           ; 3 bytes @ 0x17
  1227  000018                     	ds	3
  1228  00001B                     ??i2___ftadd:
  1229                           
  1230                           ; 1 bytes @ 0x1A
  1231  00001B                     	ds	3
  1232  00001E                     i2___ftadd@sign:
  1233                           	opt stack 0
  1234                           
  1235                           ; 1 bytes @ 0x1D
  1236  00001E                     	ds	1
  1237  00001F                     i2___ftadd@exp2:
  1238                           	opt stack 0
  1239                           
  1240                           ; 1 bytes @ 0x1E
  1241  00001F                     	ds	1
  1242  000020                     i2___ftadd@exp1:
  1243                           	opt stack 0
  1244                           
  1245                           ; 1 bytes @ 0x1F
  1246  000020                     	ds	1
  1247  000021                     ?i2___ftmul:
  1248                           	opt stack 0
  1249  000021                     ?i2___ftsub:
  1250                           	opt stack 0
  1251  000021                     i2___ftmul@f1:
  1252                           	opt stack 0
  1253  000021                     i2___ftsub@f1:
  1254                           	opt stack 0
  1255                           
  1256                           ; 3 bytes @ 0x20
  1257  000021                     	ds	3
  1258  000024                     i2___ftmul@f2:
  1259                           	opt stack 0
  1260  000024                     i2___ftsub@f2:
  1261                           	opt stack 0
  1262                           
  1263                           ; 3 bytes @ 0x23
  1264  000024                     	ds	3
  1265  000027                     ??i2___ftmul:
  1266  000027                     
  1267                           ; 1 bytes @ 0x26
  1268  000027                     	ds	3
  1269  00002A                     i2___ftmul@exp:
  1270                           	opt stack 0
  1271                           
  1272                           ; 1 bytes @ 0x29
  1273  00002A                     	ds	1
  1274  00002B                     i2___ftmul@f3_as_product:
  1275                           	opt stack 0
  1276                           
  1277                           ; 3 bytes @ 0x2A
  1278  00002B                     	ds	3
  1279  00002E                     i2___ftmul@cntr:
  1280                           	opt stack 0
  1281                           
  1282                           ; 1 bytes @ 0x2D
  1283  00002E                     	ds	1
  1284  00002F                     i2___ftmul@sign:
  1285                           	opt stack 0
  1286                           
  1287                           ; 1 bytes @ 0x2E
  1288  00002F                     	ds	1
  1289  000030                     ?i2_fround:
  1290                           	opt stack 0
  1291  000030                     ?i2_scale:
  1292                           	opt stack 0
  1293  000030                     ?i2___ftdiv:
  1294                           	opt stack 0
  1295  000030                     i2___ftdiv@f1:
  1296                           	opt stack 0
  1297                           
  1298                           ; 3 bytes @ 0x2F
  1299  000030                     	ds	3
  1300  000033                     i2___ftdiv@f2:
  1301                           	opt stack 0
  1302  000033                     i2_fround$1901:
  1303                           	opt stack 0
  1304  000033                     i2_scale$1902:
  1305                           	opt stack 0
  1306                           
  1307                           ; 3 bytes @ 0x32
  1308  000033                     	ds	3
  1309  000036                     ??i2___ftdiv:
  1310  000036                     i2scale@scl:
  1311                           	opt stack 0
  1312  000036                     i2_fround$1900:
  1313                           	opt stack 0
  1314                           
  1315                           ; 3 bytes @ 0x35
  1316  000036                     	ds	1
  1317  000037                     ?i2___fttol:
  1318                           	opt stack 0
  1319  000037                     i2___fttol@f1:
  1320                           	opt stack 0
  1321                           
  1322                           ; 3 bytes @ 0x36
  1323  000037                     	ds	2
  1324  000039                     i2fround@prec:
  1325                           	opt stack 0
  1326  000039                     i2___ftdiv@cntr:
  1327                           	opt stack 0
  1328                           
  1329                           ; 1 bytes @ 0x38
  1330  000039                     	ds	1
  1331  00003A                     i2___ftdiv@f3:
  1332                           	opt stack 0
  1333                           
  1334                           ; 3 bytes @ 0x39
  1335  00003A                     	ds	1
  1336  00003B                     ??i2___fttol:
  1337                           
  1338                           ; 1 bytes @ 0x3A
  1339  00003B                     	ds	2
  1340  00003D                     i2___ftdiv@exp:
  1341                           	opt stack 0
  1342                           
  1343                           ; 1 bytes @ 0x3C
  1344  00003D                     	ds	1
  1345  00003E                     i2___ftdiv@sign:
  1346                           	opt stack 0
  1347                           
  1348                           ; 1 bytes @ 0x3D
  1349  00003E                     	ds	2
  1350  000040                     i2___fttol@sign1:
  1351                           	opt stack 0
  1352                           
  1353                           ; 1 bytes @ 0x3F
  1354  000040                     	ds	1
  1355  000041                     i2___fttol@lval:
  1356                           	opt stack 0
  1357                           
  1358                           ; 4 bytes @ 0x40
  1359  000041                     	ds	4
  1360  000045                     i2___fttol@exp1:
  1361                           	opt stack 0
  1362                           
  1363                           ; 1 bytes @ 0x44
  1364  000045                     	ds	1
  1365  000046                     ?i2__doprnt:
  1366                           	opt stack 0
  1367  000046                     i2__doprnt@pb:
  1368                           	opt stack 0
  1369                           
  1370                           ; 2 bytes @ 0x45
  1371  000046                     	ds	2
  1372  000048                     i2__doprnt@f:
  1373                           	opt stack 0
  1374                           
  1375                           ; 2 bytes @ 0x47
  1376  000048                     	ds	2
  1377  00004A                     i2__doprnt@ap:
  1378                           	opt stack 0
  1379                           
  1380                           ; 2 bytes @ 0x49
  1381  00004A                     	ds	2
  1382  00004C                     ??i2__doprnt:
  1383                           
  1384                           ; 1 bytes @ 0x4B
  1385  00004C                     	ds	6
  1386  000052                     printf@ap:
  1387                           	opt stack 0
  1388                           
  1389                           ; 2 bytes @ 0x51
  1390  000052                     	ds	2
  1391  000054                     printf@pb:
  1392                           	opt stack 0
  1393                           
  1394                           ; 4 bytes @ 0x53
  1395  000054                     	ds	4
  1396  000058                     tblptru	equ	0xFF8
  1397                           tblptrh	equ	0xFF7
  1398                           tblptrl	equ	0xFF6
  1399                           tablat	equ	0xFF5
  1400                           postinc0	equ	0xFEE
  1401                           wreg	equ	0xFE8
  1402                           
  1403                           ; 1 bytes @ 0x57
  1404 ;;
  1405 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1406 ;;
  1407 ;; *************** function _main *****************
  1408 ;; Defined at:
  1409 ;;		line 8 in file "main.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;		None
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;  cap_string     16   70[BANK1 ] unsigned char [16]
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      void 
  1416 ;; Registers used:
  1417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1423 ;;      Params:         0       0       0       0       0       0       0
  1424 ;;      Locals:         0       0      16       0       0       0       0
  1425 ;;      Temps:          0       0       0       0       0       0       0
  1426 ;;      Totals:         0       0      16       0       0       0       0
  1427 ;;Total ram usage:       16 bytes
  1428 ;; Hardware stack levels required when called:   12
  1429 ;; This function calls:
  1430 ;;		_SYSTEM_Initialize
  1431 ;;		___ftdiv
  1432 ;;		___ftge
  1433 ;;		_lcd_clear
  1434 ;;		_lcd_init
  1435 ;;		_lcd_sendString
  1436 ;;		_sprintf
  1437 ;; This function is called by:
  1438 ;;		Startup code after reset
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           	psect	text0
  1443  003ACA                     __ptext0:
  1444                           	opt stack 0
  1445  003ACA                     _main:
  1446                           	opt stack 19
  1447                           
  1448                           ;main.c: 11: SYSTEM_Initialize();
  1449                           
  1450                           ;incstack = 0
  1451  003ACA  EC43  F02D         	call	_SYSTEM_Initialize	;wreg free
  1452                           
  1453                           ;main.c: 30: (INTCONbits.GIE = 1);
  1454  003ACE  8EF2               	bsf	intcon,7,c	;volatile
  1455                           
  1456                           ;main.c: 33: (INTCONbits.PEIE = 1);
  1457  003AD0  8CF2               	bsf	intcon,6,c	;volatile
  1458                           
  1459                           ;main.c: 41: lcd_init();
  1460  003AD2  EC21  F02A         	call	_lcd_init	;wreg free
  1461                           
  1462                           ;main.c: 42: lcd_clear();
  1463  003AD6  EC6C  F02D         	call	_lcd_clear	;wreg free
  1464                           
  1465                           ;main.c: 46: LATC |= (1 << 0) | (1 << 1) | (1 << 2) | (1 << 3) | (1 << 4);
  1466  003ADA  0E1F               	movlw	31
  1467  003ADC  128B               	iorwf	3979,f,c	;volatile
  1468                           
  1469                           ;main.c: 47: LATB |= (1 << 2) | (1 << 3) | (1 << 4) | (1 << 5);
  1470  003ADE  0E3C               	movlw	60
  1471  003AE0  128A               	iorwf	3978,f,c	;volatile
  1472                           
  1473                           ;main.c: 50: LATC &= ~(1 << 1);
  1474  003AE2  928B               	bcf	3979,1,c	;volatile
  1475                           
  1476                           ;main.c: 51: LATB &= ~(1 << 3);
  1477  003AE4  968A               	bcf	3978,3,c	;volatile
  1478  003AE6                     l258:
  1479                           
  1480                           ;main.c: 54: {
  1481                           ;main.c: 56: char cap_string[16];
  1482                           ;main.c: 59: if (result >= 1000000.0)
  1483  003AE6  C058  F08E         	movff	_result,___ftge@ff1
  1484  003AEA  C059  F08F         	movff	_result+1,___ftge@ff1+1
  1485  003AEE  C05A  F090         	movff	_result+2,___ftge@ff1+2
  1486  003AF2  0E24               	movlw	36
  1487  003AF4  0100               	movlb	0	; () banked
  1488  003AF6  6F91               	movwf	___ftge@ff2& (0+255),b
  1489  003AF8  0E74               	movlw	116
  1490  003AFA  0100               	movlb	0	; () banked
  1491  003AFC  6F92               	movwf	(___ftge@ff2+1)& (0+255),b
  1492  003AFE  0E49               	movlw	73
  1493  003B00  0100               	movlb	0	; () banked
  1494  003B02  6F93               	movwf	(___ftge@ff2+2)& (0+255),b
  1495  003B04  EC02  F027         	call	___ftge	;wreg free
  1496  003B08  0100               	movlb	0	; () banked
  1497  003B0A  A0D8               	btfss	status,0,c
  1498  003B0C  D026               	goto	l9823
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;main.c: 60: {
  1502                           ;main.c: 61: sprintf(cap_string, "C=%12.6fuF", result / 1000000.0);
  1503  003B0E  0E46               	movlw	low main@cap_string
  1504  003B10  0101               	movlb	1	; () banked
  1505  003B12  6F39               	movwf	sprintf@wh& (0+255),b
  1506  003B14  0E01               	movlw	high main@cap_string
  1507  003B16  0101               	movlb	1	; () banked
  1508  003B18  6F3A               	movwf	(sprintf@wh+1)& (0+255),b
  1509  003B1A  0EE1               	movlw	low STR_2
  1510  003B1C  0101               	movlb	1	; () banked
  1511  003B1E  6F3B               	movwf	sprintf@f& (0+255),b
  1512  003B20  0E06               	movlw	high STR_2
  1513  003B22  0101               	movlb	1	; () banked
  1514  003B24  6F3C               	movwf	(sprintf@f+1)& (0+255),b
  1515  003B26  C058  F096         	movff	_result,___ftdiv@f1
  1516  003B2A  C059  F097         	movff	_result+1,___ftdiv@f1+1
  1517  003B2E  C05A  F098         	movff	_result+2,___ftdiv@f1+2
  1518  003B32  0E24               	movlw	36
  1519  003B34  0100               	movlb	0	; () banked
  1520  003B36  6F99               	movwf	___ftdiv@f2& (0+255),b
  1521  003B38  0E74               	movlw	116
  1522  003B3A  0100               	movlb	0	; () banked
  1523  003B3C  6F9A               	movwf	(___ftdiv@f2+1)& (0+255),b
  1524  003B3E  0E49               	movlw	73
  1525  003B40  0100               	movlb	0	; () banked
  1526  003B42  6F9B               	movwf	(___ftdiv@f2+2)& (0+255),b
  1527  003B44  EC31  F022         	call	___ftdiv	;wreg free
  1528  003B48  C096  F13D         	movff	?___ftdiv,?_sprintf+4
  1529  003B4C  C097  F13E         	movff	?___ftdiv+1,?_sprintf+5
  1530  003B50  C098  F13F         	movff	?___ftdiv+2,?_sprintf+6
  1531  003B54  ECF7  F02A         	call	_sprintf	;wreg free
  1532                           
  1533                           ;main.c: 62: }
  1534  003B58  D08A               	goto	l9835
  1535  003B5A                     l9823:
  1536                           
  1537                           ;main.c: 63: else if (result < 1000000 && result >= 1000.0)
  1538  003B5A  C058  F08E         	movff	_result,___ftge@ff1
  1539  003B5E  C059  F08F         	movff	_result+1,___ftge@ff1+1
  1540  003B62  C05A  F090         	movff	_result+2,___ftge@ff1+2
  1541  003B66  0E24               	movlw	36
  1542  003B68  0100               	movlb	0	; () banked
  1543  003B6A  6F91               	movwf	___ftge@ff2& (0+255),b
  1544  003B6C  0E74               	movlw	116
  1545  003B6E  0100               	movlb	0	; () banked
  1546  003B70  6F92               	movwf	(___ftge@ff2+1)& (0+255),b
  1547  003B72  0E49               	movlw	73
  1548  003B74  0100               	movlb	0	; () banked
  1549  003B76  6F93               	movwf	(___ftge@ff2+2)& (0+255),b
  1550  003B78  EC02  F027         	call	___ftge	;wreg free
  1551  003B7C  0100               	movlb	0	; () banked
  1552  003B7E  B0D8               	btfsc	status,0,c
  1553  003B80  D03A               	goto	l9829
  1554                           
  1555                           ; BSR set to: 0
  1556  003B82  C058  F08E         	movff	_result,___ftge@ff1
  1557  003B86  C059  F08F         	movff	_result+1,___ftge@ff1+1
  1558  003B8A  C05A  F090         	movff	_result+2,___ftge@ff1+2
  1559  003B8E  0E00               	movlw	0
  1560  003B90  0100               	movlb	0	; () banked
  1561  003B92  6F91               	movwf	___ftge@ff2& (0+255),b
  1562  003B94  0E7A               	movlw	122
  1563  003B96  0100               	movlb	0	; () banked
  1564  003B98  6F92               	movwf	(___ftge@ff2+1)& (0+255),b
  1565  003B9A  0E44               	movlw	68
  1566  003B9C  0100               	movlb	0	; () banked
  1567  003B9E  6F93               	movwf	(___ftge@ff2+2)& (0+255),b
  1568  003BA0  EC02  F027         	call	___ftge	;wreg free
  1569  003BA4  0100               	movlb	0	; () banked
  1570  003BA6  A0D8               	btfss	status,0,c
  1571  003BA8  D026               	goto	l9829
  1572                           
  1573                           ; BSR set to: 0
  1574                           ;main.c: 64: {
  1575                           ;main.c: 65: sprintf(cap_string, "C=%12.3fnF", result / 1000.0);
  1576  003BAA  0E46               	movlw	low main@cap_string
  1577  003BAC  0101               	movlb	1	; () banked
  1578  003BAE  6F39               	movwf	sprintf@wh& (0+255),b
  1579  003BB0  0E01               	movlw	high main@cap_string
  1580  003BB2  0101               	movlb	1	; () banked
  1581  003BB4  6F3A               	movwf	(sprintf@wh+1)& (0+255),b
  1582  003BB6  0ECB               	movlw	low STR_3
  1583  003BB8  0101               	movlb	1	; () banked
  1584  003BBA  6F3B               	movwf	sprintf@f& (0+255),b
  1585  003BBC  0E06               	movlw	high STR_3
  1586  003BBE  0101               	movlb	1	; () banked
  1587  003BC0  6F3C               	movwf	(sprintf@f+1)& (0+255),b
  1588  003BC2  C058  F096         	movff	_result,___ftdiv@f1
  1589  003BC6  C059  F097         	movff	_result+1,___ftdiv@f1+1
  1590  003BCA  C05A  F098         	movff	_result+2,___ftdiv@f1+2
  1591  003BCE  0E00               	movlw	0
  1592  003BD0  0100               	movlb	0	; () banked
  1593  003BD2  6F99               	movwf	___ftdiv@f2& (0+255),b
  1594  003BD4  0E7A               	movlw	122
  1595  003BD6  0100               	movlb	0	; () banked
  1596  003BD8  6F9A               	movwf	(___ftdiv@f2+1)& (0+255),b
  1597  003BDA  0E44               	movlw	68
  1598  003BDC  0100               	movlb	0	; () banked
  1599  003BDE  6F9B               	movwf	(___ftdiv@f2+2)& (0+255),b
  1600  003BE0  EC31  F022         	call	___ftdiv	;wreg free
  1601  003BE4  C096  F13D         	movff	?___ftdiv,?_sprintf+4
  1602  003BE8  C097  F13E         	movff	?___ftdiv+1,?_sprintf+5
  1603  003BEC  C098  F13F         	movff	?___ftdiv+2,?_sprintf+6
  1604  003BF0  ECF7  F02A         	call	_sprintf	;wreg free
  1605                           
  1606                           ;main.c: 66: }
  1607  003BF4  D03C               	goto	l9835
  1608  003BF6                     l9829:
  1609                           
  1610                           ;main.c: 67: else if (result < 1000 && result > 0)
  1611  003BF6  C058  F08E         	movff	_result,___ftge@ff1
  1612  003BFA  C059  F08F         	movff	_result+1,___ftge@ff1+1
  1613  003BFE  C05A  F090         	movff	_result+2,___ftge@ff1+2
  1614  003C02  0E00               	movlw	0
  1615  003C04  0100               	movlb	0	; () banked
  1616  003C06  6F91               	movwf	___ftge@ff2& (0+255),b
  1617  003C08  0E7A               	movlw	122
  1618  003C0A  0100               	movlb	0	; () banked
  1619  003C0C  6F92               	movwf	(___ftge@ff2+1)& (0+255),b
  1620  003C0E  0E44               	movlw	68
  1621  003C10  0100               	movlb	0	; () banked
  1622  003C12  6F93               	movwf	(___ftge@ff2+2)& (0+255),b
  1623  003C14  EC02  F027         	call	___ftge	;wreg free
  1624  003C18  0100               	movlb	0	; () banked
  1625  003C1A  B0D8               	btfsc	status,0,c
  1626  003C1C  D028               	goto	l9835
  1627                           
  1628                           ; BSR set to: 0
  1629  003C1E  0E00               	movlw	0
  1630  003C20  0100               	movlb	0	; () banked
  1631  003C22  6F8E               	movwf	___ftge@ff1& (0+255),b
  1632  003C24  0E00               	movlw	0
  1633  003C26  0100               	movlb	0	; () banked
  1634  003C28  6F8F               	movwf	(___ftge@ff1+1)& (0+255),b
  1635  003C2A  0E00               	movlw	0
  1636  003C2C  0100               	movlb	0	; () banked
  1637  003C2E  6F90               	movwf	(___ftge@ff1+2)& (0+255),b
  1638  003C30  C058  F091         	movff	_result,___ftge@ff2
  1639  003C34  C059  F092         	movff	_result+1,___ftge@ff2+1
  1640  003C38  C05A  F093         	movff	_result+2,___ftge@ff2+2
  1641  003C3C  EC02  F027         	call	___ftge	;wreg free
  1642  003C40  0100               	movlb	0	; () banked
  1643  003C42  B0D8               	btfsc	status,0,c
  1644  003C44  D014               	goto	l9835
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;main.c: 68: {
  1648                           ;main.c: 69: sprintf(cap_string, "C=%12.0fpF", result);
  1649  003C46  0E46               	movlw	low main@cap_string
  1650  003C48  0101               	movlb	1	; () banked
  1651  003C4A  6F39               	movwf	sprintf@wh& (0+255),b
  1652  003C4C  0E01               	movlw	high main@cap_string
  1653  003C4E  0101               	movlb	1	; () banked
  1654  003C50  6F3A               	movwf	(sprintf@wh+1)& (0+255),b
  1655  003C52  0ED6               	movlw	low STR_4
  1656  003C54  0101               	movlb	1	; () banked
  1657  003C56  6F3B               	movwf	sprintf@f& (0+255),b
  1658  003C58  0E06               	movlw	high STR_4
  1659  003C5A  0101               	movlb	1	; () banked
  1660  003C5C  6F3C               	movwf	(sprintf@f+1)& (0+255),b
  1661  003C5E  C058  F13D         	movff	_result,?_sprintf+4
  1662  003C62  C059  F13E         	movff	_result+1,?_sprintf+5
  1663  003C66  C05A  F13F         	movff	_result+2,?_sprintf+6
  1664  003C6A  ECF7  F02A         	call	_sprintf	;wreg free
  1665  003C6E                     l9835:
  1666                           
  1667                           ;main.c: 70: }
  1668                           ;main.c: 72: lcd_sendString(cap_string);
  1669  003C6E  0E46               	movlw	low main@cap_string
  1670  003C70  0100               	movlb	0	; () banked
  1671  003C72  6F92               	movwf	lcd_sendString@a& (0+255),b
  1672  003C74  0E01               	movlw	high main@cap_string
  1673  003C76  0100               	movlb	0	; () banked
  1674  003C78  6F93               	movwf	(lcd_sendString@a+1)& (0+255),b
  1675  003C7A  EC6C  F02B         	call	_lcd_sendString	;wreg free
  1676  003C7E  D733               	goto	l258
  1677  003C80                     __end_of_main:
  1678                           	opt stack 0
  1679                           tblptru	equ	0xFF8
  1680                           tblptrh	equ	0xFF7
  1681                           tblptrl	equ	0xFF6
  1682                           tablat	equ	0xFF5
  1683                           intcon	equ	0xFF2
  1684                           postinc0	equ	0xFEE
  1685                           wreg	equ	0xFE8
  1686                           status	equ	0xFD8
  1687                           
  1688 ;; *************** function _sprintf *****************
  1689 ;; Defined at:
  1690 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprintf.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;  wh              2   57[BANK1 ] PTR unsigned char 
  1693 ;;		 -> ftoa@buf(17), main@cap_string(16), 
  1694 ;;  f               2   59[BANK1 ] PTR const unsigned char 
  1695 ;;		 -> STR_5(11), STR_4(11), STR_3(11), STR_2(11), 
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;  pb              4   66[BANK1 ] struct __prbuf
  1698 ;;  ap              2   64[BANK1 ] PTR void [1]
  1699 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  2   57[BANK1 ] int 
  1702 ;; Registers used:
  1703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1709 ;;      Params:         0       0       7       0       0       0       0
  1710 ;;      Locals:         0       0       6       0       0       0       0
  1711 ;;      Temps:          0       0       0       0       0       0       0
  1712 ;;      Totals:         0       0      13       0       0       0       0
  1713 ;;Total ram usage:       13 bytes
  1714 ;; Hardware stack levels used:    1
  1715 ;; Hardware stack levels required when called:   11
  1716 ;; This function calls:
  1717 ;;		__doprnt
  1718 ;; This function is called by:
  1719 ;;		_main
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           	psect	text1
  1724  0055EE                     __ptext1:
  1725                           	opt stack 0
  1726  0055EE                     _sprintf:
  1727                           	opt stack 19
  1728                           
  1729                           ;incstack = 0
  1730  0055EE  C139  F142         	movff	sprintf@wh,sprintf@pb
  1731  0055F2  C13A  F143         	movff	sprintf@wh+1,sprintf@pb+1
  1732  0055F6  0E00               	movlw	0
  1733  0055F8  0101               	movlb	1	; () banked
  1734  0055FA  6F44               	movwf	(sprintf@pb+2)& (0+255),b
  1735  0055FC  0E00               	movlw	0
  1736  0055FE  0101               	movlb	1	; () banked
  1737  005600  6F45               	movwf	(sprintf@pb+3)& (0+255),b
  1738  005602  0E3D               	movlw	low (?_sprintf+4)
  1739  005604  0101               	movlb	1	; () banked
  1740  005606  6F40               	movwf	sprintf@ap& (0+255),b
  1741  005608  0E01               	movlw	high (?_sprintf+4)
  1742  00560A  0101               	movlb	1	; () banked
  1743  00560C  6F41               	movwf	(sprintf@ap+1)& (0+255),b
  1744                           
  1745                           ; BSR set to: 1
  1746  00560E  0E42               	movlw	low sprintf@pb
  1747  005610  0101               	movlb	1	; () banked
  1748  005612  6F16               	movwf	__doprnt@pb& (0+255),b
  1749  005614  0E01               	movlw	high sprintf@pb
  1750  005616  0101               	movlb	1	; () banked
  1751  005618  6F17               	movwf	(__doprnt@pb+1)& (0+255),b
  1752  00561A  C13B  F118         	movff	sprintf@f,__doprnt@f
  1753  00561E  C13C  F119         	movff	sprintf@f+1,__doprnt@f+1
  1754  005622  0E40               	movlw	low sprintf@ap
  1755  005624  0101               	movlb	1	; () banked
  1756  005626  6F1A               	movwf	__doprnt@ap& (0+255),b
  1757  005628  0E01               	movlw	high sprintf@ap
  1758  00562A  0101               	movlb	1	; () banked
  1759  00562C  6F1B               	movwf	(__doprnt@ap+1)& (0+255),b
  1760  00562E  EC77  F003         	call	__doprnt	;wreg free
  1761  005632  C142  FFD9         	movff	sprintf@pb,fsr2l
  1762  005636  C143  FFDA         	movff	sprintf@pb+1,fsr2h
  1763  00563A  0E00               	movlw	0
  1764  00563C  6EDF               	movwf	indf2,c
  1765  00563E  0012               	return	
  1766  005640                     __end_of_sprintf:
  1767                           	opt stack 0
  1768                           tblptru	equ	0xFF8
  1769                           tblptrh	equ	0xFF7
  1770                           tblptrl	equ	0xFF6
  1771                           tablat	equ	0xFF5
  1772                           intcon	equ	0xFF2
  1773                           postinc0	equ	0xFEE
  1774                           wreg	equ	0xFE8
  1775                           indf2	equ	0xFDF
  1776                           fsr2h	equ	0xFDA
  1777                           fsr2l	equ	0xFD9
  1778                           status	equ	0xFD8
  1779                           
  1780 ;; *************** function __doprnt *****************
  1781 ;; Defined at:
  1782 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  pb              2   22[BANK1 ] PTR struct __prbuf
  1785 ;;		 -> sprintf@pb(4), printf@pb(4), 
  1786 ;;  f               2   24[BANK1 ] PTR const unsigned char 
  1787 ;;		 -> STR_5(11), STR_4(11), STR_3(11), STR_2(11), 
  1788 ;;		 -> STR_1(48), 
  1789 ;;  ap              2   26[BANK1 ] PTR PTR void 
  1790 ;;		 -> sprintf@ap(2), printf@ap(2), 
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;  tmpval          4   43[BANK1 ] struct .
  1793 ;;  val             4   39[BANK1 ] unsigned long 
  1794 ;;  fval            3   49[BANK1 ] unsigned long 
  1795 ;;  cp              3    0        PTR const unsigned char 
  1796 ;;  prec            2   54[BANK1 ] int 
  1797 ;;  flag            2   52[BANK1 ] unsigned short 
  1798 ;;  width           2   47[BANK1 ] int 
  1799 ;;  exp             2   37[BANK1 ] int 
  1800 ;;  len             2    0        unsigned int 
  1801 ;;  c               1   56[BANK1 ] char 
  1802 ;;  d               1    0        unsigned char 
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  2   22[BANK1 ] int 
  1805 ;; Registers used:
  1806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1812 ;;      Params:         0       0       6       0       0       0       0
  1813 ;;      Locals:         0       0      23       0       0       0       0
  1814 ;;      Temps:          0       0       6       0       0       0       0
  1815 ;;      Totals:         0       0      35       0       0       0       0
  1816 ;;Total ram usage:       35 bytes
  1817 ;; Hardware stack levels used:    1
  1818 ;; Hardware stack levels required when called:   10
  1819 ;; This function calls:
  1820 ;;		Absolute function
  1821 ;;		___awdiv
  1822 ;;		___ftadd
  1823 ;;		___ftge
  1824 ;;		___ftmul
  1825 ;;		___ftneg
  1826 ;;		___ftsub
  1827 ;;		___fttol
  1828 ;;		___lldiv
  1829 ;;		___llmod
  1830 ;;		___lltoft
  1831 ;;		___wmul
  1832 ;;		__div_to_l_
  1833 ;;		__tdiv_to_l_
  1834 ;;		_fround
  1835 ;;		_isdigit
  1836 ;;		_putch
  1837 ;;		_scale
  1838 ;; This function is called by:
  1839 ;;		_sprintf
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           	psect	text2
  1844  0006EE                     __ptext2:
  1845                           	opt stack 0
  1846  0006EE                     __doprnt:
  1847                           	opt stack 19
  1848                           
  1849                           ;doprnt.c: 499: signed char c;
  1850                           ;doprnt.c: 501: int width;
  1851                           ;doprnt.c: 504: int prec;
  1852                           ;doprnt.c: 508: unsigned short flag;
  1853                           ;doprnt.c: 515: char d;
  1854                           ;doprnt.c: 516: double fval;
  1855                           ;doprnt.c: 517: int exp;
  1856                           ;doprnt.c: 523: union {
  1857                           ;doprnt.c: 524: unsigned long vd;
  1858                           ;doprnt.c: 525: double integ;
  1859                           ;doprnt.c: 526: } tmpval;
  1860                           ;doprnt.c: 528: unsigned long val;
  1861                           ;doprnt.c: 529: unsigned len;
  1862                           ;doprnt.c: 530: const char * cp;
  1863                           ;doprnt.c: 536: while(c = *f++) {
  1864                           
  1865                           ;incstack = 0
  1866  0006EE  EF98  F00C         	goto	l9747
  1867  0006F2                     l9359:
  1868                           
  1869                           ;doprnt.c: 538: if(c != '%')
  1870  0006F2  0E25               	movlw	37
  1871  0006F4  0101               	movlb	1	; () banked
  1872  0006F6  1938               	xorwf	__doprnt@c& (0+255),w,b
  1873  0006F8  B4D8               	btfsc	status,2,c
  1874  0006FA  D038               	goto	l9369
  1875                           
  1876                           ; BSR set to: 1
  1877                           ;doprnt.c: 540: {
  1878                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  1879  0006FC  0101               	movlb	1	; () banked
  1880  0006FE  EE20 F002          	lfsr	2,2
  1881  000702  5116               	movf	__doprnt@pb& (0+255),w,b
  1882  000704  26D9               	addwf	fsr2l,f,c
  1883  000706  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  1884  000708  22DA               	addwfc	fsr2h,f,c
  1885  00070A  50DE               	movf	postinc2,w,c
  1886  00070C  10DE               	iorwf	postinc2,w,c
  1887  00070E  B4D8               	btfsc	status,2,c
  1888  000710  D016               	goto	l9365
  1889                           
  1890                           ; BSR set to: 1
  1891  000712  0101               	movlb	1	; () banked
  1892  000714  EE20 F002          	lfsr	2,2
  1893  000718  5116               	movf	__doprnt@pb& (0+255),w,b
  1894  00071A  26D9               	addwf	fsr2l,f,c
  1895  00071C  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  1896  00071E  22DA               	addwfc	fsr2h,f,c
  1897  000720  D802               	call	u15598
  1898  000722  EF98  F00C         	goto	l9747
  1899  000726                     u15598:
  1900  000726  0005               	push	
  1901  000728  6EFA               	movwf	pclath,c
  1902  00072A  50DE               	movf	postinc2,w,c
  1903  00072C  6EFD               	movwf	tosl,c
  1904  00072E  50DE               	movf	postinc2,w,c
  1905  000730  6EFE               	movwf	tosh,c
  1906  000732  50F8               	movf	tblptru,w,c
  1907  000734  6EFF               	movwf	tosu,c
  1908  000736  50FA               	movf	pclath,w,c
  1909  000738  0101               	movlb	1	; () banked
  1910  00073A  5138               	movf	__doprnt@c& (0+255),w,b
  1911  00073C  0012               	return		;indir
  1912  00073E                     l9365:
  1913  00073E  C116  FFD9         	movff	__doprnt@pb,fsr2l
  1914  000742  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  1915  000746  CFDE F11C          	movff	postinc2,??__doprnt
  1916  00074A  CFDD F11D          	movff	postdec2,??__doprnt+1
  1917  00074E  C11C  FFD9         	movff	??__doprnt,fsr2l
  1918  000752  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  1919  000756  C138  FFDF         	movff	__doprnt@c,indf2
  1920  00075A  C116  FFD9         	movff	__doprnt@pb,fsr2l
  1921  00075E  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  1922  000762  2ADE               	incf	postinc2,f,c
  1923  000764  0E00               	movlw	0
  1924  000766  22DD               	addwfc	postdec2,f,c
  1925                           
  1926                           ;doprnt.c: 542: continue;
  1927  000768  EF98  F00C         	goto	l9747
  1928  00076C                     l9369:
  1929                           
  1930                           ;doprnt.c: 543: }
  1931                           ;doprnt.c: 546: width = 0;
  1932  00076C  0E00               	movlw	0
  1933  00076E  0101               	movlb	1	; () banked
  1934  000770  6F30               	movwf	(__doprnt@width+1)& (0+255),b
  1935  000772  0E00               	movlw	0
  1936  000774  6F2F               	movwf	__doprnt@width& (0+255),b
  1937                           
  1938                           ;doprnt.c: 548: flag = 0;
  1939  000776  0E00               	movlw	0
  1940  000778  0101               	movlb	1	; () banked
  1941  00077A  6F35               	movwf	(__doprnt@flag+1)& (0+255),b
  1942  00077C  0E00               	movlw	0
  1943  00077E  6F34               	movwf	__doprnt@flag& (0+255),b
  1944                           
  1945                           ; BSR set to: 1
  1946                           ;doprnt.c: 551: switch(*f) {
  1947                           
  1948                           ;doprnt.c: 550: for(;;) {
  1949  000780  D005               	goto	l9375
  1950  000782                     l9371:
  1951                           
  1952                           ;doprnt.c: 580: flag |= 0x04;
  1953  000782  0101               	movlb	1	; () banked
  1954  000784  8534               	bsf	__doprnt@flag& (0+255),2,b
  1955                           
  1956                           ;doprnt.c: 581: f++;
  1957  000786  0101               	movlb	1	; () banked
  1958  000788  4B18               	infsnz	__doprnt@f& (0+255),f,b
  1959  00078A  2B19               	incf	(__doprnt@f+1)& (0+255),f,b
  1960  00078C                     l9375:
  1961  00078C  C118  FFF6         	movff	__doprnt@f,tblptrl
  1962  000790  C119  FFF7         	movff	__doprnt@f+1,tblptrh
  1963  000794                     	if	0	;tblptru may be non-zero
  1964  000794                     	endif
  1965  000794                     	if	0	;tblptru may be non-zero
  1966  000794                     	endif
  1967  000794  0008               	tblrd		*
  1968  000796  50F5               	movf	tablat,w,c
  1969                           
  1970                           ; Switch size 1, requested type "space"
  1971                           ; Number of cases is 1, Range of values is 48 to 48
  1972                           ; switch strategies available:
  1973                           ; Name         Instructions Cycles
  1974                           ; simple_byte            4     3 (average)
  1975                           ;	Chosen strategy is simple_byte
  1976  000798  0A30               	xorlw	48	; case 48
  1977  00079A  B4D8               	btfsc	status,2,c
  1978  00079C  D7F2               	goto	l9371
  1979                           
  1980                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1981                           
  1982                           ;doprnt.c: 586: }
  1983                           
  1984                           ;doprnt.c: 585: break;
  1985  00079E  C118  FFF6         	movff	__doprnt@f,tblptrl
  1986  0007A2  C119  FFF7         	movff	__doprnt@f+1,tblptrh
  1987  0007A6                     	if	0	;tblptru may be non-zero
  1988  0007A6                     	endif
  1989  0007A6                     	if	0	;tblptru may be non-zero
  1990  0007A6                     	endif
  1991  0007A6  0008               	tblrd		*
  1992  0007A8  50F5               	movf	tablat,w,c
  1993  0007AA  ECC6  F02C         	call	_isdigit
  1994  0007AE  A0D8               	btfss	status,0,c
  1995  0007B0  D040               	goto	l9389
  1996                           
  1997                           ;doprnt.c: 598: width = 0;
  1998  0007B2  0E00               	movlw	0
  1999  0007B4  0101               	movlb	1	; () banked
  2000  0007B6  6F30               	movwf	(__doprnt@width+1)& (0+255),b
  2001  0007B8  0E00               	movlw	0
  2002  0007BA  6F2F               	movwf	__doprnt@width& (0+255),b
  2003  0007BC                     l9381:
  2004                           
  2005                           ;doprnt.c: 600: width *= 10;
  2006  0007BC  C12F  F09C         	movff	__doprnt@width,___wmul@multiplier
  2007  0007C0  C130  F09D         	movff	__doprnt@width+1,___wmul@multiplier+1
  2008  0007C4  0E00               	movlw	0
  2009  0007C6  0100               	movlb	0	; () banked
  2010  0007C8  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2011  0007CA  0E0A               	movlw	10
  2012  0007CC  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  2013  0007CE  EC16  F02C         	call	___wmul	;wreg free
  2014  0007D2  C09C  F12F         	movff	?___wmul,__doprnt@width
  2015  0007D6  C09D  F130         	movff	?___wmul+1,__doprnt@width+1
  2016                           
  2017                           ;doprnt.c: 601: width += *f++ - '0';
  2018  0007DA  0ED0               	movlw	208
  2019  0007DC  0101               	movlb	1	; () banked
  2020  0007DE  6F1C               	movwf	??__doprnt& (0+255),b
  2021  0007E0  0EFF               	movlw	255
  2022  0007E2  0101               	movlb	1	; () banked
  2023  0007E4  6F1D               	movwf	(??__doprnt+1)& (0+255),b
  2024  0007E6  C118  FFF6         	movff	__doprnt@f,tblptrl
  2025  0007EA  C119  FFF7         	movff	__doprnt@f+1,tblptrh
  2026  0007EE                     	if	0	;tblptru may be non-zero
  2027  0007EE                     	endif
  2028  0007EE                     	if	0	;tblptru may be non-zero
  2029  0007EE                     	endif
  2030  0007EE  0008               	tblrd		*
  2031  0007F0  50F5               	movf	tablat,w,c
  2032  0007F2  0101               	movlb	1	; () banked
  2033  0007F4  6F1E               	movwf	(??__doprnt+2)& (0+255),b
  2034  0007F6  6B1F               	clrf	(??__doprnt+3)& (0+255),b
  2035  0007F8  0101               	movlb	1	; () banked
  2036  0007FA  511C               	movf	??__doprnt& (0+255),w,b
  2037  0007FC  0101               	movlb	1	; () banked
  2038  0007FE  271E               	addwf	(??__doprnt+2)& (0+255),f,b
  2039  000800  0101               	movlb	1	; () banked
  2040  000802  511D               	movf	(??__doprnt+1)& (0+255),w,b
  2041  000804  0101               	movlb	1	; () banked
  2042  000806  231F               	addwfc	(??__doprnt+3)& (0+255),f,b
  2043  000808  0101               	movlb	1	; () banked
  2044  00080A  511E               	movf	(??__doprnt+2)& (0+255),w,b
  2045  00080C  0101               	movlb	1	; () banked
  2046  00080E  272F               	addwf	__doprnt@width& (0+255),f,b
  2047  000810  0101               	movlb	1	; () banked
  2048  000812  511F               	movf	(??__doprnt+3)& (0+255),w,b
  2049  000814  0101               	movlb	1	; () banked
  2050  000816  2330               	addwfc	(__doprnt@width+1)& (0+255),f,b
  2051                           
  2052                           ; BSR set to: 1
  2053  000818  0101               	movlb	1	; () banked
  2054  00081A  4B18               	infsnz	__doprnt@f& (0+255),f,b
  2055  00081C  2B19               	incf	(__doprnt@f+1)& (0+255),f,b
  2056                           
  2057                           ; BSR set to: 1
  2058                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2059  00081E  C118  FFF6         	movff	__doprnt@f,tblptrl
  2060  000822  C119  FFF7         	movff	__doprnt@f+1,tblptrh
  2061  000826                     	if	0	;tblptru may be non-zero
  2062  000826                     	endif
  2063  000826                     	if	0	;tblptru may be non-zero
  2064  000826                     	endif
  2065  000826  0008               	tblrd		*
  2066  000828  50F5               	movf	tablat,w,c
  2067  00082A  ECC6  F02C         	call	_isdigit
  2068  00082E  B0D8               	btfsc	status,0,c
  2069  000830  D7C5               	goto	l9381
  2070  000832                     l9389:
  2071                           
  2072                           ;doprnt.c: 608: }
  2073                           ;doprnt.c: 611: if(*f == '.') {
  2074  000832  C118  FFF6         	movff	__doprnt@f,tblptrl
  2075  000836  C119  FFF7         	movff	__doprnt@f+1,tblptrh
  2076  00083A                     	if	0	;tblptru may be non-zero
  2077  00083A                     	endif
  2078  00083A                     	if	0	;tblptru may be non-zero
  2079  00083A                     	endif
  2080  00083A  0008               	tblrd		*
  2081  00083C  50F5               	movf	tablat,w,c
  2082  00083E  0A2E               	xorlw	46
  2083  000840  A4D8               	btfss	status,2,c
  2084  000842  D039               	goto	l9401
  2085                           
  2086                           ;doprnt.c: 612: flag |= 0x4000;
  2087  000844  0101               	movlb	1	; () banked
  2088  000846  8D35               	bsf	(__doprnt@flag+1)& (0+255),6,b
  2089                           
  2090                           ;doprnt.c: 613: f++;
  2091  000848  0101               	movlb	1	; () banked
  2092  00084A  4B18               	infsnz	__doprnt@f& (0+255),f,b
  2093  00084C  2B19               	incf	(__doprnt@f+1)& (0+255),f,b
  2094                           
  2095                           ; BSR set to: 1
  2096                           ;doprnt.c: 620: {
  2097                           ;doprnt.c: 621: prec = 0;
  2098  00084E  0E00               	movlw	0
  2099  000850  0101               	movlb	1	; () banked
  2100  000852  6F37               	movwf	(__doprnt@prec+1)& (0+255),b
  2101  000854  0E00               	movlw	0
  2102  000856  6F36               	movwf	__doprnt@prec& (0+255),b
  2103                           
  2104                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  2105  000858  D023               	goto	l9399
  2106  00085A                     l9395:
  2107                           
  2108                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  2109  00085A  C136  F09C         	movff	__doprnt@prec,___wmul@multiplier
  2110  00085E  C137  F09D         	movff	__doprnt@prec+1,___wmul@multiplier+1
  2111  000862  0E00               	movlw	0
  2112  000864  0100               	movlb	0	; () banked
  2113  000866  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2114  000868  0E0A               	movlw	10
  2115  00086A  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  2116  00086C  EC16  F02C         	call	___wmul	;wreg free
  2117  000870  C118  FFF6         	movff	__doprnt@f,tblptrl
  2118  000874  C119  FFF7         	movff	__doprnt@f+1,tblptrh
  2119  000878                     	if	0	;tblptru may be non-zero
  2120  000878                     	endif
  2121  000878                     	if	0	;tblptru may be non-zero
  2122  000878                     	endif
  2123  000878  0008               	tblrd		*
  2124  00087A  50F5               	movf	tablat,w,c
  2125  00087C  0100               	movlb	0	; () banked
  2126  00087E  279C               	addwf	?___wmul& (0+255),f,b
  2127  000880  0E00               	movlw	0
  2128  000882  0100               	movlb	0	; () banked
  2129  000884  239D               	addwfc	(?___wmul+1)& (0+255),f,b
  2130  000886  0ED0               	movlw	208
  2131  000888  0100               	movlb	0	; () banked
  2132  00088A  259C               	addwf	?___wmul& (0+255),w,b
  2133  00088C  0101               	movlb	1	; () banked
  2134  00088E  6F36               	movwf	__doprnt@prec& (0+255),b
  2135  000890  0EFF               	movlw	255
  2136  000892  0100               	movlb	0	; () banked
  2137  000894  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  2138  000896  0101               	movlb	1	; () banked
  2139  000898  6F37               	movwf	(__doprnt@prec+1)& (0+255),b
  2140                           
  2141                           ; BSR set to: 1
  2142  00089A  0101               	movlb	1	; () banked
  2143  00089C  4B18               	infsnz	__doprnt@f& (0+255),f,b
  2144  00089E  2B19               	incf	(__doprnt@f+1)& (0+255),f,b
  2145  0008A0                     l9399:
  2146                           
  2147                           ; BSR set to: 1
  2148  0008A0  C118  FFF6         	movff	__doprnt@f,tblptrl
  2149  0008A4  C119  FFF7         	movff	__doprnt@f+1,tblptrh
  2150  0008A8                     	if	0	;tblptru may be non-zero
  2151  0008A8                     	endif
  2152  0008A8                     	if	0	;tblptru may be non-zero
  2153  0008A8                     	endif
  2154  0008A8  0008               	tblrd		*
  2155  0008AA  50F5               	movf	tablat,w,c
  2156  0008AC  ECC6  F02C         	call	_isdigit
  2157  0008B0  A0D8               	btfss	status,0,c
  2158  0008B2  D012               	goto	l9413
  2159  0008B4  D7D2               	goto	l9395
  2160  0008B6                     l9401:
  2161                           
  2162                           ;doprnt.c: 626: prec = 0;
  2163  0008B6  0E00               	movlw	0
  2164  0008B8  0101               	movlb	1	; () banked
  2165  0008BA  6F37               	movwf	(__doprnt@prec+1)& (0+255),b
  2166  0008BC  0E00               	movlw	0
  2167  0008BE  6F36               	movwf	__doprnt@prec& (0+255),b
  2168                           
  2169                           ; BSR set to: 1
  2170                           ;doprnt.c: 628: flag |= 0x1000;
  2171  0008C0  0101               	movlb	1	; () banked
  2172  0008C2  8935               	bsf	(__doprnt@flag+1)& (0+255),4,b
  2173                           
  2174                           ; BSR set to: 1
  2175                           ;doprnt.c: 635: switch(c = *f++) {
  2176                           
  2177                           ;doprnt.c: 630: }
  2178                           ;doprnt.c: 633: loop:
  2179                           
  2180                           ; BSR set to: 1
  2181  0008C4  D009               	goto	l9413
  2182  0008C6                     l9405:
  2183                           
  2184                           ; BSR set to: 1
  2185                           ;doprnt.c: 643: flag |= 0x10;
  2186  0008C6  0101               	movlb	1	; () banked
  2187  0008C8  8934               	bsf	__doprnt@flag& (0+255),4,b
  2188                           
  2189                           ;doprnt.c: 644: goto loop;
  2190  0008CA  D006               	goto	l9413
  2191  0008CC                     l9407:
  2192                           
  2193                           ; BSR set to: 1
  2194                           ;doprnt.c: 663: flag |= 0x400;
  2195  0008CC  0101               	movlb	1	; () banked
  2196  0008CE  8535               	bsf	(__doprnt@flag+1)& (0+255),2,b
  2197                           
  2198                           ; BSR set to: 1
  2199                           ;doprnt.c: 698: case 'i':
  2200                           ;doprnt.c: 699: break;
  2201                           
  2202                           ; BSR set to: 1
  2203                           
  2204                           ;doprnt.c: 697: case 'd':
  2205                           
  2206                           ;doprnt.c: 664: break;
  2207  0008D0  D024               	goto	l9415
  2208  0008D2                     l9409:
  2209                           
  2210                           ; BSR set to: 1
  2211                           ;doprnt.c: 818: flag |= 0x40;
  2212  0008D2  0101               	movlb	1	; () banked
  2213  0008D4  8D34               	bsf	__doprnt@flag& (0+255),6,b
  2214                           
  2215                           ; BSR set to: 1
  2216                           ;doprnt.c: 822: }
  2217                           
  2218                           ;doprnt.c: 819: break;
  2219  0008D6  D021               	goto	l9415
  2220  0008D8                     l9413:
  2221  0008D8  C118  FFF6         	movff	__doprnt@f,tblptrl
  2222  0008DC  C119  FFF7         	movff	__doprnt@f+1,tblptrh
  2223  0008E0  0101               	movlb	1	; () banked
  2224  0008E2  4B18               	infsnz	__doprnt@f& (0+255),f,b
  2225  0008E4  2B19               	incf	(__doprnt@f+1)& (0+255),f,b
  2226  0008E6                     	if	0	;tblptru may be non-zero
  2227  0008E6                     	endif
  2228  0008E6                     	if	0	;tblptru may be non-zero
  2229  0008E6                     	endif
  2230  0008E6  0008               	tblrd		*
  2231  0008E8  CFF5 F138          	movff	tablat,__doprnt@c
  2232  0008EC  0101               	movlb	1	; () banked
  2233  0008EE  5138               	movf	__doprnt@c& (0+255),w,b
  2234                           
  2235                           ; Switch size 1, requested type "space"
  2236                           ; Number of cases is 6, Range of values is 0 to 117
  2237                           ; switch strategies available:
  2238                           ; Name         Instructions Cycles
  2239                           ; simple_byte           19    10 (average)
  2240                           ;	Chosen strategy is simple_byte
  2241  0008F0  0A00               	xorlw	0	; case 0
  2242  0008F2  B4D8               	btfsc	status,2,c
  2243  0008F4  EFA7  F00C         	goto	l9749
  2244  0008F8  0A64               	xorlw	100	; case 100
  2245  0008FA  B4D8               	btfsc	status,2,c
  2246  0008FC  D00E               	goto	l9415
  2247  0008FE  0A02               	xorlw	2	; case 102
  2248  000900  B4D8               	btfsc	status,2,c
  2249  000902  D7E4               	goto	l9407
  2250  000904  0A0F               	xorlw	15	; case 105
  2251  000906  B4D8               	btfsc	status,2,c
  2252  000908  D008               	goto	l9415
  2253  00090A  0A05               	xorlw	5	; case 108
  2254  00090C  B4D8               	btfsc	status,2,c
  2255  00090E  D7DB               	goto	l9405
  2256  000910  0A19               	xorlw	25	; case 117
  2257  000912  B4D8               	btfsc	status,2,c
  2258  000914  D7DE               	goto	l9409
  2259  000916  EF98  F00C         	goto	l9747
  2260  00091A                     l9415:
  2261                           
  2262                           ; BSR set to: 1
  2263                           ;doprnt.c: 825: if(flag & (0x700)) {
  2264  00091A  0E07               	movlw	7
  2265  00091C  0101               	movlb	1	; () banked
  2266  00091E  1535               	andwf	(__doprnt@flag+1)& (0+255),w,b
  2267  000920  B4D8               	btfsc	status,2,c
  2268  000922  EFCE  F009         	goto	l403
  2269                           
  2270                           ; BSR set to: 1
  2271                           ;doprnt.c: 827: if(flag & 0x1000)
  2272  000926  0101               	movlb	1	; () banked
  2273  000928  A935               	btfss	(__doprnt@flag+1)& (0+255),4,b
  2274  00092A  D005               	goto	l9421
  2275                           
  2276                           ; BSR set to: 1
  2277                           ;doprnt.c: 829: prec = 6;
  2278  00092C  0E00               	movlw	0
  2279  00092E  0101               	movlb	1	; () banked
  2280  000930  6F37               	movwf	(__doprnt@prec+1)& (0+255),b
  2281  000932  0E06               	movlw	6
  2282  000934  6F36               	movwf	__doprnt@prec& (0+255),b
  2283  000936                     l9421:
  2284                           
  2285                           ; BSR set to: 1
  2286                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2287  000936  C11A  FFD9         	movff	__doprnt@ap,fsr2l
  2288  00093A  C11B  FFDA         	movff	__doprnt@ap+1,fsr2h
  2289  00093E  CFDF F11C          	movff	indf2,??__doprnt
  2290  000942  0E03               	movlw	3
  2291  000944  26DE               	addwf	postinc2,f,c
  2292  000946  CFDF F11D          	movff	indf2,??__doprnt+1
  2293  00094A  0E00               	movlw	0
  2294  00094C  22DD               	addwfc	postdec2,f,c
  2295  00094E  C11C  FFD9         	movff	??__doprnt,fsr2l
  2296  000952  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  2297  000956  CFDE F131          	movff	postinc2,__doprnt@fval
  2298  00095A  CFDE F132          	movff	postinc2,__doprnt@fval+1
  2299  00095E  CFDD F133          	movff	postdec2,__doprnt@fval+2
  2300                           
  2301                           ; BSR set to: 1
  2302                           ;doprnt.c: 831: if(fval < 0.0) {
  2303  000962  0101               	movlb	1	; () banked
  2304  000964  AF33               	btfss	(__doprnt@fval+2)& (0+255),7,b
  2305  000966  D011               	goto	l9429
  2306                           
  2307                           ; BSR set to: 1
  2308                           ;doprnt.c: 832: fval = -fval;
  2309  000968  C131  F08E         	movff	__doprnt@fval,___ftneg@f1
  2310  00096C  C132  F08F         	movff	__doprnt@fval+1,___ftneg@f1+1
  2311  000970  C133  F090         	movff	__doprnt@fval+2,___ftneg@f1+2
  2312  000974  EC67  F02C         	call	___ftneg	;wreg free
  2313  000978  C08E  F131         	movff	?___ftneg,__doprnt@fval
  2314  00097C  C08F  F132         	movff	?___ftneg+1,__doprnt@fval+1
  2315  000980  C090  F133         	movff	?___ftneg+2,__doprnt@fval+2
  2316                           
  2317                           ;doprnt.c: 833: flag |= 0x03;
  2318  000984  0E03               	movlw	3
  2319  000986  0101               	movlb	1	; () banked
  2320  000988  1334               	iorwf	__doprnt@flag& (0+255),f,b
  2321  00098A                     l9429:
  2322                           
  2323                           ; BSR set to: 1
  2324                           ;doprnt.c: 834: }
  2325                           ;doprnt.c: 835: exp = 0;
  2326  00098A  0E00               	movlw	0
  2327  00098C  0101               	movlb	1	; () banked
  2328  00098E  6F26               	movwf	(__doprnt@exp+1)& (0+255),b
  2329  000990  0E00               	movlw	0
  2330  000992  6F25               	movwf	__doprnt@exp& (0+255),b
  2331                           
  2332                           ; BSR set to: 1
  2333                           ;doprnt.c: 836: if( fval!=0) {
  2334  000994  0101               	movlb	1	; () banked
  2335  000996  5131               	movf	__doprnt@fval& (0+255),w,b
  2336  000998  0101               	movlb	1	; () banked
  2337  00099A  1132               	iorwf	(__doprnt@fval+1)& (0+255),w,b
  2338  00099C  0101               	movlb	1	; () banked
  2339  00099E  1133               	iorwf	(__doprnt@fval+2)& (0+255),w,b
  2340  0009A0  B4D8               	btfsc	status,2,c
  2341  0009A2  D09B               	goto	l9457
  2342                           
  2343                           ; BSR set to: 1
  2344                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2345  0009A4  0E82               	movlw	130
  2346  0009A6  0101               	movlb	1	; () banked
  2347  0009A8  6F1C               	movwf	??__doprnt& (0+255),b
  2348  0009AA  0EFF               	movlw	255
  2349  0009AC  0101               	movlb	1	; () banked
  2350  0009AE  6F1D               	movwf	(??__doprnt+1)& (0+255),b
  2351  0009B0  C131  F11E         	movff	__doprnt@fval,??__doprnt+2
  2352  0009B4  C132  F11F         	movff	__doprnt@fval+1,??__doprnt+3
  2353  0009B8  C133  F120         	movff	__doprnt@fval+2,??__doprnt+4
  2354  0009BC  C134  F121         	movff	__doprnt@fval+3,??__doprnt+5
  2355  0009C0  0E10               	movlw	16
  2356  0009C2  D006               	goto	u15680
  2357  0009C4                     u15685:
  2358  0009C4  0101               	movlb	1	; () banked
  2359  0009C6  90D8               	bcf	status,0,c
  2360  0009C8  3321               	rrcf	(??__doprnt+5)& (0+255),f,b
  2361  0009CA  3320               	rrcf	(??__doprnt+4)& (0+255),f,b
  2362  0009CC  331F               	rrcf	(??__doprnt+3)& (0+255),f,b
  2363  0009CE  331E               	rrcf	(??__doprnt+2)& (0+255),f,b
  2364  0009D0                     u15680:
  2365  0009D0  2EE8               	decfsz	wreg,f,c
  2366  0009D2  D7F8               	goto	u15685
  2367  0009D4  0101               	movlb	1	; () banked
  2368  0009D6  511E               	movf	(??__doprnt+2)& (0+255),w,b
  2369  0009D8  0101               	movlb	1	; () banked
  2370  0009DA  251C               	addwf	??__doprnt& (0+255),w,b
  2371  0009DC  0101               	movlb	1	; () banked
  2372  0009DE  6F25               	movwf	__doprnt@exp& (0+255),b
  2373  0009E0  0E00               	movlw	0
  2374  0009E2  0101               	movlb	1	; () banked
  2375  0009E4  211D               	addwfc	(??__doprnt+1)& (0+255),w,b
  2376  0009E6  0101               	movlb	1	; () banked
  2377  0009E8  6F26               	movwf	(__doprnt@exp+1)& (0+255),b
  2378                           
  2379                           ; BSR set to: 1
  2380                           ;doprnt.c: 838: exp--;
  2381  0009EA  0101               	movlb	1	; () banked
  2382  0009EC  0725               	decf	__doprnt@exp& (0+255),f,b
  2383  0009EE  A0D8               	btfss	status,0,c
  2384  0009F0  0726               	decf	(__doprnt@exp+1)& (0+255),f,b
  2385                           
  2386                           ; BSR set to: 1
  2387                           ;doprnt.c: 839: exp *= 3;
  2388  0009F2  C125  F09C         	movff	__doprnt@exp,___wmul@multiplier
  2389  0009F6  C126  F09D         	movff	__doprnt@exp+1,___wmul@multiplier+1
  2390  0009FA  0E00               	movlw	0
  2391  0009FC  0100               	movlb	0	; () banked
  2392  0009FE  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2393  000A00  0E03               	movlw	3
  2394  000A02  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  2395  000A04  EC16  F02C         	call	___wmul	;wreg free
  2396  000A08  C09C  F125         	movff	?___wmul,__doprnt@exp
  2397  000A0C  C09D  F126         	movff	?___wmul+1,__doprnt@exp+1
  2398                           
  2399                           ;doprnt.c: 840: exp /= 10;
  2400  000A10  C125  F094         	movff	__doprnt@exp,___awdiv@dividend
  2401  000A14  C126  F095         	movff	__doprnt@exp+1,___awdiv@dividend+1
  2402  000A18  0E00               	movlw	0
  2403  000A1A  0100               	movlb	0	; () banked
  2404  000A1C  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  2405  000A1E  0E0A               	movlw	10
  2406  000A20  6F96               	movwf	___awdiv@divisor& (0+255),b
  2407  000A22  EC66  F027         	call	___awdiv	;wreg free
  2408  000A26  C094  F125         	movff	?___awdiv,__doprnt@exp
  2409  000A2A  C095  F126         	movff	?___awdiv+1,__doprnt@exp+1
  2410                           
  2411                           ;doprnt.c: 841: if(exp < 0)
  2412  000A2E  0101               	movlb	1	; () banked
  2413  000A30  AF26               	btfss	(__doprnt@exp+1)& (0+255),7,b
  2414  000A32  D004               	goto	l9445
  2415                           
  2416                           ; BSR set to: 1
  2417                           ;doprnt.c: 842: exp--;
  2418  000A34  0101               	movlb	1	; () banked
  2419  000A36  0725               	decf	__doprnt@exp& (0+255),f,b
  2420  000A38  A0D8               	btfss	status,0,c
  2421  000A3A  0726               	decf	(__doprnt@exp+1)& (0+255),f,b
  2422  000A3C                     l9445:
  2423                           
  2424                           ; BSR set to: 1
  2425                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2426  000A3C  0101               	movlb	1	; () banked
  2427  000A3E  5125               	movf	__doprnt@exp& (0+255),w,b
  2428  000A40  0800               	sublw	0
  2429  000A42  EC69  F015         	call	_scale
  2430  000A46  C0B1  F12B         	movff	?_scale,__doprnt@tmpval
  2431  000A4A  C0B2  F12C         	movff	?_scale+1,__doprnt@tmpval+1
  2432  000A4E  C0B3  F12D         	movff	?_scale+2,__doprnt@tmpval+2
  2433                           
  2434                           ;doprnt.c: 847: tmpval.integ *= fval;
  2435  000A52  C12B  F0A2         	movff	__doprnt@tmpval,___ftmul@f1
  2436  000A56  C12C  F0A3         	movff	__doprnt@tmpval+1,___ftmul@f1+1
  2437  000A5A  C12D  F0A4         	movff	__doprnt@tmpval+2,___ftmul@f1+2
  2438  000A5E  C131  F0A5         	movff	__doprnt@fval,___ftmul@f2
  2439  000A62  C132  F0A6         	movff	__doprnt@fval+1,___ftmul@f2+1
  2440  000A66  C133  F0A7         	movff	__doprnt@fval+2,___ftmul@f2+2
  2441  000A6A  EC82  F021         	call	___ftmul	;wreg free
  2442  000A6E  C0A2  F12B         	movff	?___ftmul,__doprnt@tmpval
  2443  000A72  C0A3  F12C         	movff	?___ftmul+1,__doprnt@tmpval+1
  2444  000A76  C0A4  F12D         	movff	?___ftmul+2,__doprnt@tmpval+2
  2445                           
  2446                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2447  000A7A  C12B  F08E         	movff	__doprnt@tmpval,___ftge@ff1
  2448  000A7E  C12C  F08F         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  2449  000A82  C12D  F090         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  2450  000A86  0E00               	movlw	0
  2451  000A88  0100               	movlb	0	; () banked
  2452  000A8A  6F91               	movwf	___ftge@ff2& (0+255),b
  2453  000A8C  0E80               	movlw	128
  2454  000A8E  0100               	movlb	0	; () banked
  2455  000A90  6F92               	movwf	(___ftge@ff2+1)& (0+255),b
  2456  000A92  0E3F               	movlw	63
  2457  000A94  0100               	movlb	0	; () banked
  2458  000A96  6F93               	movwf	(___ftge@ff2+2)& (0+255),b
  2459  000A98  EC02  F027         	call	___ftge	;wreg free
  2460  000A9C  0100               	movlb	0	; () banked
  2461  000A9E  B0D8               	btfsc	status,0,c
  2462  000AA0  D005               	goto	l9453
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;doprnt.c: 849: exp--;
  2466  000AA2  0101               	movlb	1	; () banked
  2467  000AA4  0725               	decf	__doprnt@exp& (0+255),f,b
  2468  000AA6  A0D8               	btfss	status,0,c
  2469  000AA8  0726               	decf	(__doprnt@exp+1)& (0+255),f,b
  2470  000AAA  D017               	goto	l9457
  2471  000AAC                     l9453:
  2472                           
  2473                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2474  000AAC  C12B  F08E         	movff	__doprnt@tmpval,___ftge@ff1
  2475  000AB0  C12C  F08F         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  2476  000AB4  C12D  F090         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  2477  000AB8  0E00               	movlw	0
  2478  000ABA  0100               	movlb	0	; () banked
  2479  000ABC  6F91               	movwf	___ftge@ff2& (0+255),b
  2480  000ABE  0E20               	movlw	32
  2481  000AC0  0100               	movlb	0	; () banked
  2482  000AC2  6F92               	movwf	(___ftge@ff2+1)& (0+255),b
  2483  000AC4  0E41               	movlw	65
  2484  000AC6  0100               	movlb	0	; () banked
  2485  000AC8  6F93               	movwf	(___ftge@ff2+2)& (0+255),b
  2486  000ACA  EC02  F027         	call	___ftge	;wreg free
  2487  000ACE  0100               	movlb	0	; () banked
  2488  000AD0  A0D8               	btfss	status,0,c
  2489  000AD2  D003               	goto	l9457
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;doprnt.c: 851: exp++;
  2493  000AD4  0101               	movlb	1	; () banked
  2494  000AD6  4B25               	infsnz	__doprnt@exp& (0+255),f,b
  2495  000AD8  2B26               	incf	(__doprnt@exp+1)& (0+255),f,b
  2496  000ADA                     l9457:
  2497                           
  2498                           ;doprnt.c: 852: }
  2499                           ;doprnt.c: 1112: if(prec <= 12)
  2500  000ADA  0101               	movlb	1	; () banked
  2501  000ADC  BF37               	btfsc	(__doprnt@prec+1)& (0+255),7,b
  2502  000ADE  D008               	goto	l9459
  2503  000AE0  0101               	movlb	1	; () banked
  2504  000AE2  5137               	movf	(__doprnt@prec+1)& (0+255),w,b
  2505  000AE4  E11D               	bnz	l9461
  2506  000AE6  0E0D               	movlw	13
  2507  000AE8  0101               	movlb	1	; () banked
  2508  000AEA  5D36               	subwf	__doprnt@prec& (0+255),w,b
  2509  000AEC  B0D8               	btfsc	status,0,c
  2510  000AEE  D018               	goto	l9461
  2511  000AF0                     l9459:
  2512                           
  2513                           ; BSR set to: 1
  2514                           ;doprnt.c: 1113: fval += fround(prec);
  2515  000AF0  C131  F107         	movff	__doprnt@fval,___ftadd@f1
  2516  000AF4  C132  F108         	movff	__doprnt@fval+1,___ftadd@f1+1
  2517  000AF8  C133  F109         	movff	__doprnt@fval+2,___ftadd@f1+2
  2518  000AFC  0101               	movlb	1	; () banked
  2519  000AFE  5136               	movf	__doprnt@prec& (0+255),w,b
  2520  000B00  ECB8  F019         	call	_fround
  2521  000B04  C0B1  F10A         	movff	?_fround,___ftadd@f2
  2522  000B08  C0B2  F10B         	movff	?_fround+1,___ftadd@f2+1
  2523  000B0C  C0B3  F10C         	movff	?_fround+2,___ftadd@f2+2
  2524  000B10  EC0E  F01B         	call	___ftadd	;wreg free
  2525  000B14  C107  F131         	movff	?___ftadd,__doprnt@fval
  2526  000B18  C108  F132         	movff	?___ftadd+1,__doprnt@fval+1
  2527  000B1C  C109  F133         	movff	?___ftadd+2,__doprnt@fval+2
  2528  000B20                     l9461:
  2529                           
  2530                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2531  000B20  0101               	movlb	1	; () banked
  2532  000B22  BF26               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  2533  000B24  D008               	goto	l9463
  2534  000B26  0101               	movlb	1	; () banked
  2535  000B28  5126               	movf	(__doprnt@exp+1)& (0+255),w,b
  2536  000B2A  E12A               	bnz	l9469
  2537  000B2C  0E0A               	movlw	10
  2538  000B2E  0101               	movlb	1	; () banked
  2539  000B30  5D25               	subwf	__doprnt@exp& (0+255),w,b
  2540  000B32  B0D8               	btfsc	status,0,c
  2541  000B34  D025               	goto	l9469
  2542  000B36                     l9463:
  2543                           
  2544                           ; BSR set to: 1
  2545  000B36  0101               	movlb	1	; () banked
  2546  000B38  5131               	movf	__doprnt@fval& (0+255),w,b
  2547  000B3A  0101               	movlb	1	; () banked
  2548  000B3C  1132               	iorwf	(__doprnt@fval+1)& (0+255),w,b
  2549  000B3E  0101               	movlb	1	; () banked
  2550  000B40  1133               	iorwf	(__doprnt@fval+2)& (0+255),w,b
  2551  000B42  B4D8               	btfsc	status,2,c
  2552  000B44  D063               	goto	l9483
  2553                           
  2554                           ; BSR set to: 1
  2555  000B46  C131  F104         	movff	__doprnt@fval,___fttol@f1
  2556  000B4A  C132  F105         	movff	__doprnt@fval+1,___fttol@f1+1
  2557  000B4E  C133  F106         	movff	__doprnt@fval+2,___fttol@f1+2
  2558  000B52  ECD7  F022         	call	___fttol	;wreg free
  2559  000B56  0101               	movlb	1	; () banked
  2560  000B58  5104               	movf	?___fttol& (0+255),w,b
  2561  000B5A  0101               	movlb	1	; () banked
  2562  000B5C  1105               	iorwf	(?___fttol+1)& (0+255),w,b
  2563  000B5E  0101               	movlb	1	; () banked
  2564  000B60  1106               	iorwf	(?___fttol+2)& (0+255),w,b
  2565  000B62  0101               	movlb	1	; () banked
  2566  000B64  1107               	iorwf	(?___fttol+3)& (0+255),w,b
  2567  000B66  A4D8               	btfss	status,2,c
  2568  000B68  D051               	goto	l9483
  2569                           
  2570                           ; BSR set to: 1
  2571  000B6A  0101               	movlb	1	; () banked
  2572  000B6C  BF26               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  2573  000B6E  D04E               	goto	l9483
  2574  000B70  0101               	movlb	1	; () banked
  2575  000B72  5126               	movf	(__doprnt@exp+1)& (0+255),w,b
  2576  000B74  E105               	bnz	l9469
  2577  000B76  0E02               	movlw	2
  2578  000B78  0101               	movlb	1	; () banked
  2579  000B7A  5D25               	subwf	__doprnt@exp& (0+255),w,b
  2580  000B7C  A0D8               	btfss	status,0,c
  2581  000B7E  D046               	goto	l9483
  2582  000B80                     l9469:
  2583                           
  2584                           ; BSR set to: 1
  2585                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  2586  000B80  C12B  F08E         	movff	__doprnt@tmpval,___ftge@ff1
  2587  000B84  C12C  F08F         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  2588  000B88  C12D  F090         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  2589  000B8C  0E70               	movlw	112
  2590  000B8E  0100               	movlb	0	; () banked
  2591  000B90  6F91               	movwf	___ftge@ff2& (0+255),b
  2592  000B92  0E89               	movlw	137
  2593  000B94  0100               	movlb	0	; () banked
  2594  000B96  6F92               	movwf	(___ftge@ff2+1)& (0+255),b
  2595  000B98  0E40               	movlw	64
  2596  000B9A  0100               	movlb	0	; () banked
  2597  000B9C  6F93               	movwf	(___ftge@ff2+2)& (0+255),b
  2598  000B9E  EC02  F027         	call	___ftge	;wreg free
  2599  000BA2  0100               	movlb	0	; () banked
  2600  000BA4  B0D8               	btfsc	status,0,c
  2601  000BA6  D003               	goto	l9473
  2602                           
  2603                           ; BSR set to: 0
  2604                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2605  000BA8  0101               	movlb	1	; () banked
  2606  000BAA  0EF7               	movlw	247
  2607  000BAC  D002               	goto	L1
  2608  000BAE                     l9473:
  2609                           
  2610                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2611  000BAE  0101               	movlb	1	; () banked
  2612  000BB0  0EF8               	movlw	248
  2613  000BB2                     L1:
  2614  000BB2  2725               	addwf	__doprnt@exp& (0+255),f,b
  2615  000BB4  0EFF               	movlw	255
  2616  000BB6  2326               	addwfc	(__doprnt@exp+1)& (0+255),f,b
  2617                           
  2618                           ; BSR set to: 1
  2619                           ;doprnt.c: 1124: }
  2620                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  2621                           
  2622                           ; BSR set to: 1
  2623  000BB8  0101               	movlb	1	; () banked
  2624  000BBA  5125               	movf	__doprnt@exp& (0+255),w,b
  2625  000BBC  EC69  F015         	call	_scale
  2626  000BC0  C0B1  F12B         	movff	?_scale,__doprnt@tmpval
  2627  000BC4  C0B2  F12C         	movff	?_scale+1,__doprnt@tmpval+1
  2628  000BC8  C0B3  F12D         	movff	?_scale+2,__doprnt@tmpval+2
  2629                           
  2630                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2631  000BCC  C131  F08E         	movff	__doprnt@fval,__tdiv_to_l_@f1
  2632  000BD0  C132  F08F         	movff	__doprnt@fval+1,__tdiv_to_l_@f1+1
  2633  000BD4  C133  F090         	movff	__doprnt@fval+2,__tdiv_to_l_@f1+2
  2634  000BD8  C12B  F091         	movff	__doprnt@tmpval,__tdiv_to_l_@f2
  2635  000BDC  C12C  F092         	movff	__doprnt@tmpval+1,__tdiv_to_l_@f2+1
  2636  000BE0  C12D  F093         	movff	__doprnt@tmpval+2,__tdiv_to_l_@f2+2
  2637  000BE4  ECEF  F01F         	call	__tdiv_to_l_	;wreg free
  2638  000BE8  C08E  F127         	movff	?__tdiv_to_l_,__doprnt@val
  2639  000BEC  C08F  F128         	movff	?__tdiv_to_l_+1,__doprnt@val+1
  2640  000BF0  C090  F129         	movff	?__tdiv_to_l_+2,__doprnt@val+2
  2641  000BF4  C091  F12A         	movff	?__tdiv_to_l_+3,__doprnt@val+3
  2642                           
  2643                           ;doprnt.c: 1129: fval = 0.0;
  2644  000BF8  0E00               	movlw	0
  2645  000BFA  0101               	movlb	1	; () banked
  2646  000BFC  6F31               	movwf	__doprnt@fval& (0+255),b
  2647  000BFE  0E00               	movlw	0
  2648  000C00  0101               	movlb	1	; () banked
  2649  000C02  6F32               	movwf	(__doprnt@fval+1)& (0+255),b
  2650  000C04  0E00               	movlw	0
  2651  000C06  0101               	movlb	1	; () banked
  2652  000C08  6F33               	movwf	(__doprnt@fval+2)& (0+255),b
  2653                           
  2654                           ;doprnt.c: 1130: } else {
  2655  000C0A  D033               	goto	l9487
  2656  000C0C                     l9483:
  2657                           
  2658                           ; BSR set to: 1
  2659                           ;doprnt.c: 1131: val = (unsigned long)fval;
  2660  000C0C  C131  F104         	movff	__doprnt@fval,___fttol@f1
  2661  000C10  C132  F105         	movff	__doprnt@fval+1,___fttol@f1+1
  2662  000C14  C133  F106         	movff	__doprnt@fval+2,___fttol@f1+2
  2663  000C18  ECD7  F022         	call	___fttol	;wreg free
  2664  000C1C  C104  F127         	movff	?___fttol,__doprnt@val
  2665  000C20  C105  F128         	movff	?___fttol+1,__doprnt@val+1
  2666  000C24  C106  F129         	movff	?___fttol+2,__doprnt@val+2
  2667  000C28  C107  F12A         	movff	?___fttol+3,__doprnt@val+3
  2668                           
  2669                           ;doprnt.c: 1132: fval -= (double)val;
  2670  000C2C  C131  F110         	movff	__doprnt@fval,___ftsub@f1
  2671  000C30  C132  F111         	movff	__doprnt@fval+1,___ftsub@f1+1
  2672  000C34  C133  F112         	movff	__doprnt@fval+2,___ftsub@f1+2
  2673  000C38  C127  F096         	movff	__doprnt@val,___lltoft@c
  2674  000C3C  C128  F097         	movff	__doprnt@val+1,___lltoft@c+1
  2675  000C40  C129  F098         	movff	__doprnt@val+2,___lltoft@c+2
  2676  000C44  C12A  F099         	movff	__doprnt@val+3,___lltoft@c+3
  2677  000C48  ECE3  F029         	call	___lltoft	;wreg free
  2678  000C4C  C096  F113         	movff	?___lltoft,___ftsub@f2
  2679  000C50  C097  F114         	movff	?___lltoft+1,___ftsub@f2+1
  2680  000C54  C098  F115         	movff	?___lltoft+2,___ftsub@f2+2
  2681  000C58  EC46  F02B         	call	___ftsub	;wreg free
  2682  000C5C  C110  F131         	movff	?___ftsub,__doprnt@fval
  2683  000C60  C111  F132         	movff	?___ftsub+1,__doprnt@fval+1
  2684  000C64  C112  F133         	movff	?___ftsub+2,__doprnt@fval+2
  2685                           
  2686                           ;doprnt.c: 1133: exp = 0;
  2687  000C68  0E00               	movlw	0
  2688  000C6A  0101               	movlb	1	; () banked
  2689  000C6C  6F26               	movwf	(__doprnt@exp+1)& (0+255),b
  2690  000C6E  0E00               	movlw	0
  2691  000C70  6F25               	movwf	__doprnt@exp& (0+255),b
  2692  000C72                     l9487:
  2693                           
  2694                           ; BSR set to: 1
  2695                           ;doprnt.c: 1134: }
  2696                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2697  000C72  0E01               	movlw	1
  2698  000C74  0101               	movlb	1	; () banked
  2699  000C76  6F38               	movwf	__doprnt@c& (0+255),b
  2700  000C78                     l9489:
  2701                           
  2702                           ; BSR set to: 1
  2703  000C78  0E0A               	movlw	10
  2704  000C7A  0101               	movlb	1	; () banked
  2705  000C7C  1938               	xorwf	__doprnt@c& (0+255),w,b
  2706  000C7E  B4D8               	btfsc	status,2,c
  2707  000C80  D01E               	goto	l9501
  2708                           
  2709                           ; BSR set to: 1
  2710                           ;doprnt.c: 1137: if(val < dpowers[c])
  2711                           
  2712                           ; BSR set to: 1
  2713                           
  2714                           ; BSR set to: 1
  2715  000C82  0101               	movlb	1	; () banked
  2716  000C84  5138               	movf	__doprnt@c& (0+255),w,b
  2717  000C86  0D04               	mullw	4
  2718  000C88  0E01               	movlw	low _dpowers
  2719  000C8A  24F3               	addwf	prodl,w,c
  2720  000C8C  6EF6               	movwf	tblptrl,c
  2721  000C8E  0E06               	movlw	high _dpowers
  2722  000C90  20F4               	addwfc	prodh,w,c
  2723  000C92  6EF7               	movwf	tblptrh,c
  2724  000C94                     	if	0	;There are less than 3 active tblptr bytes
  2725  000C94                     	endif
  2726  000C94  0009               	tblrd		*+
  2727  000C96  50F5               	movf	tablat,w,c
  2728  000C98  0101               	movlb	1	; () banked
  2729  000C9A  5D27               	subwf	__doprnt@val& (0+255),w,b
  2730  000C9C  0009               	tblrd		*+
  2731  000C9E  50F5               	movf	tablat,w,c
  2732  000CA0  0101               	movlb	1	; () banked
  2733  000CA2  5928               	subwfb	(__doprnt@val+1)& (0+255),w,b
  2734  000CA4  0009               	tblrd		*+
  2735  000CA6  50F5               	movf	tablat,w,c
  2736  000CA8  0101               	movlb	1	; () banked
  2737  000CAA  5929               	subwfb	(__doprnt@val+2)& (0+255),w,b
  2738  000CAC  0009               	tblrd		*+
  2739  000CAE  50F5               	movf	tablat,w,c
  2740  000CB0  0101               	movlb	1	; () banked
  2741  000CB2  592A               	subwfb	(__doprnt@val+3)& (0+255),w,b
  2742  000CB4  A0D8               	btfss	status,0,c
  2743  000CB6  D003               	goto	l9501
  2744                           
  2745                           ; BSR set to: 1
  2746                           
  2747                           ; BSR set to: 1
  2748                           
  2749                           ; BSR set to: 1
  2750                           ;doprnt.c: 1138: break;
  2751  000CB8  0101               	movlb	1	; () banked
  2752  000CBA  2B38               	incf	__doprnt@c& (0+255),f,b
  2753  000CBC  D7DD               	goto	l9489
  2754  000CBE                     l9501:
  2755                           
  2756                           ; BSR set to: 1
  2757                           ;doprnt.c: 1142: width -= prec + c + exp;
  2758  000CBE  C138  F11C         	movff	__doprnt@c,??__doprnt
  2759  000CC2  0101               	movlb	1	; () banked
  2760  000CC4  6B1D               	clrf	(??__doprnt+1)& (0+255),b
  2761  000CC6  BF1C               	btfsc	??__doprnt& (0+255),7,b
  2762  000CC8  071D               	decf	(??__doprnt+1)& (0+255),f,b
  2763  000CCA  0101               	movlb	1	; () banked
  2764  000CCC  5136               	movf	__doprnt@prec& (0+255),w,b
  2765  000CCE  0101               	movlb	1	; () banked
  2766  000CD0  271C               	addwf	??__doprnt& (0+255),f,b
  2767  000CD2  0101               	movlb	1	; () banked
  2768  000CD4  5137               	movf	(__doprnt@prec+1)& (0+255),w,b
  2769  000CD6  0101               	movlb	1	; () banked
  2770  000CD8  231D               	addwfc	(??__doprnt+1)& (0+255),f,b
  2771  000CDA  0101               	movlb	1	; () banked
  2772  000CDC  5125               	movf	__doprnt@exp& (0+255),w,b
  2773  000CDE  0101               	movlb	1	; () banked
  2774  000CE0  271C               	addwf	??__doprnt& (0+255),f,b
  2775  000CE2  0101               	movlb	1	; () banked
  2776  000CE4  5126               	movf	(__doprnt@exp+1)& (0+255),w,b
  2777  000CE6  0101               	movlb	1	; () banked
  2778  000CE8  231D               	addwfc	(??__doprnt+1)& (0+255),f,b
  2779  000CEA  0101               	movlb	1	; () banked
  2780  000CEC  511C               	movf	??__doprnt& (0+255),w,b
  2781  000CEE  0101               	movlb	1	; () banked
  2782  000CF0  5F2F               	subwf	__doprnt@width& (0+255),f,b
  2783  000CF2  0101               	movlb	1	; () banked
  2784  000CF4  511D               	movf	(??__doprnt+1)& (0+255),w,b
  2785  000CF6  0101               	movlb	1	; () banked
  2786  000CF8  5B30               	subwfb	(__doprnt@width+1)& (0+255),f,b
  2787                           
  2788                           ;doprnt.c: 1143: if(
  2789                           ;doprnt.c: 1147: prec)
  2790  000CFA  0101               	movlb	1	; () banked
  2791  000CFC  5136               	movf	__doprnt@prec& (0+255),w,b
  2792  000CFE  0101               	movlb	1	; () banked
  2793  000D00  1137               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  2794  000D02  B4D8               	btfsc	status,2,c
  2795  000D04  D004               	goto	l9505
  2796                           
  2797                           ; BSR set to: 1
  2798                           ;doprnt.c: 1148: width--;
  2799  000D06  0101               	movlb	1	; () banked
  2800  000D08  072F               	decf	__doprnt@width& (0+255),f,b
  2801  000D0A  A0D8               	btfss	status,0,c
  2802  000D0C  0730               	decf	(__doprnt@width+1)& (0+255),f,b
  2803  000D0E                     l9505:
  2804                           
  2805                           ; BSR set to: 1
  2806                           ;doprnt.c: 1149: if(flag & 0x03)
  2807  000D0E  0E03               	movlw	3
  2808  000D10  0101               	movlb	1	; () banked
  2809  000D12  1534               	andwf	__doprnt@flag& (0+255),w,b
  2810  000D14  0101               	movlb	1	; () banked
  2811  000D16  6F1C               	movwf	??__doprnt& (0+255),b
  2812  000D18  0E00               	movlw	0
  2813  000D1A  0101               	movlb	1	; () banked
  2814  000D1C  1535               	andwf	(__doprnt@flag+1)& (0+255),w,b
  2815  000D1E  0101               	movlb	1	; () banked
  2816  000D20  6F1D               	movwf	(??__doprnt+1)& (0+255),b
  2817  000D22  0101               	movlb	1	; () banked
  2818  000D24  511C               	movf	??__doprnt& (0+255),w,b
  2819  000D26  0101               	movlb	1	; () banked
  2820  000D28  111D               	iorwf	(??__doprnt+1)& (0+255),w,b
  2821  000D2A  B4D8               	btfsc	status,2,c
  2822  000D2C  D004               	goto	l9509
  2823                           
  2824                           ; BSR set to: 1
  2825                           ;doprnt.c: 1150: width--;
  2826  000D2E  0101               	movlb	1	; () banked
  2827  000D30  072F               	decf	__doprnt@width& (0+255),f,b
  2828  000D32  A0D8               	btfss	status,0,c
  2829  000D34  0730               	decf	(__doprnt@width+1)& (0+255),f,b
  2830  000D36                     l9509:
  2831                           
  2832                           ; BSR set to: 1
  2833                           ;doprnt.c: 1153: if(flag & 0x04) {
  2834  000D36  0101               	movlb	1	; () banked
  2835  000D38  A534               	btfss	__doprnt@flag& (0+255),2,b
  2836  000D3A  D0C0               	goto	l9543
  2837                           
  2838                           ; BSR set to: 1
  2839                           ;doprnt.c: 1157: if(flag & 0x03)
  2840  000D3C  0E03               	movlw	3
  2841  000D3E  0101               	movlb	1	; () banked
  2842  000D40  1534               	andwf	__doprnt@flag& (0+255),w,b
  2843  000D42  0101               	movlb	1	; () banked
  2844  000D44  6F1C               	movwf	??__doprnt& (0+255),b
  2845  000D46  0E00               	movlw	0
  2846  000D48  0101               	movlb	1	; () banked
  2847  000D4A  1535               	andwf	(__doprnt@flag+1)& (0+255),w,b
  2848  000D4C  0101               	movlb	1	; () banked
  2849  000D4E  6F1D               	movwf	(??__doprnt+1)& (0+255),b
  2850  000D50  0101               	movlb	1	; () banked
  2851  000D52  511C               	movf	??__doprnt& (0+255),w,b
  2852  000D54  0101               	movlb	1	; () banked
  2853  000D56  111D               	iorwf	(??__doprnt+1)& (0+255),w,b
  2854  000D58  B4D8               	btfsc	status,2,c
  2855  000D5A  D06D               	goto	l9531
  2856                           
  2857                           ; BSR set to: 1
  2858                           ;doprnt.c: 1159: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  2859  000D5C  0101               	movlb	1	; () banked
  2860  000D5E  EE20 F002          	lfsr	2,2
  2861  000D62  5116               	movf	__doprnt@pb& (0+255),w,b
  2862  000D64  26D9               	addwf	fsr2l,f,c
  2863  000D66  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  2864  000D68  22DA               	addwfc	fsr2h,f,c
  2865  000D6A  50DE               	movf	postinc2,w,c
  2866  000D6C  10DE               	iorwf	postinc2,w,c
  2867  000D6E  B4D8               	btfsc	status,2,c
  2868  000D70  D014               	goto	l9517
  2869                           
  2870                           ; BSR set to: 1
  2871  000D72  0101               	movlb	1	; () banked
  2872  000D74  EE20 F002          	lfsr	2,2
  2873  000D78  5116               	movf	__doprnt@pb& (0+255),w,b
  2874  000D7A  26D9               	addwf	fsr2l,f,c
  2875  000D7C  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  2876  000D7E  22DA               	addwfc	fsr2h,f,c
  2877  000D80  D801               	call	u15868
  2878  000D82  D059               	goto	l9531
  2879  000D84                     u15868:
  2880  000D84  0005               	push	
  2881  000D86  6EFA               	movwf	pclath,c
  2882  000D88  50DE               	movf	postinc2,w,c
  2883  000D8A  6EFD               	movwf	tosl,c
  2884  000D8C  50DE               	movf	postinc2,w,c
  2885  000D8E  6EFE               	movwf	tosh,c
  2886  000D90  50F8               	movf	tblptru,w,c
  2887  000D92  6EFF               	movwf	tosu,c
  2888  000D94  50FA               	movf	pclath,w,c
  2889  000D96  0E2D               	movlw	45
  2890  000D98  0012               	return		;indir
  2891  000D9A                     l9517:
  2892  000D9A  C116  FFD9         	movff	__doprnt@pb,fsr2l
  2893  000D9E  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  2894  000DA2  CFDE F11C          	movff	postinc2,??__doprnt
  2895  000DA6  CFDD F11D          	movff	postdec2,??__doprnt+1
  2896  000DAA  C11C  FFD9         	movff	??__doprnt,fsr2l
  2897  000DAE  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  2898  000DB2  0E2D               	movlw	45
  2899  000DB4  6EDF               	movwf	indf2,c
  2900  000DB6  C116  FFD9         	movff	__doprnt@pb,fsr2l
  2901  000DBA  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  2902  000DBE  2ADE               	incf	postinc2,f,c
  2903  000DC0  0E00               	movlw	0
  2904  000DC2  22DD               	addwfc	postdec2,f,c
  2905                           
  2906                           ;doprnt.c: 1168: while(width > 0) {
  2907  000DC4  D038               	goto	l9531
  2908  000DC6                     l9521:
  2909                           
  2910                           ;doprnt.c: 1169: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  2911  000DC6  0101               	movlb	1	; () banked
  2912  000DC8  EE20 F002          	lfsr	2,2
  2913  000DCC  5116               	movf	__doprnt@pb& (0+255),w,b
  2914  000DCE  26D9               	addwf	fsr2l,f,c
  2915  000DD0  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  2916  000DD2  22DA               	addwfc	fsr2h,f,c
  2917  000DD4  50DE               	movf	postinc2,w,c
  2918  000DD6  10DE               	iorwf	postinc2,w,c
  2919  000DD8  B4D8               	btfsc	status,2,c
  2920  000DDA  D014               	goto	l9525
  2921                           
  2922                           ; BSR set to: 1
  2923  000DDC  0101               	movlb	1	; () banked
  2924  000DDE  EE20 F002          	lfsr	2,2
  2925  000DE2  5116               	movf	__doprnt@pb& (0+255),w,b
  2926  000DE4  26D9               	addwf	fsr2l,f,c
  2927  000DE6  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  2928  000DE8  22DA               	addwfc	fsr2h,f,c
  2929  000DEA  D801               	call	u15888
  2930  000DEC  D020               	goto	l9529
  2931  000DEE                     u15888:
  2932  000DEE  0005               	push	
  2933  000DF0  6EFA               	movwf	pclath,c
  2934  000DF2  50DE               	movf	postinc2,w,c
  2935  000DF4  6EFD               	movwf	tosl,c
  2936  000DF6  50DE               	movf	postinc2,w,c
  2937  000DF8  6EFE               	movwf	tosh,c
  2938  000DFA  50F8               	movf	tblptru,w,c
  2939  000DFC  6EFF               	movwf	tosu,c
  2940  000DFE  50FA               	movf	pclath,w,c
  2941  000E00  0E30               	movlw	48
  2942  000E02  0012               	return		;indir
  2943  000E04                     l9525:
  2944  000E04  C116  FFD9         	movff	__doprnt@pb,fsr2l
  2945  000E08  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  2946  000E0C  CFDE F11C          	movff	postinc2,??__doprnt
  2947  000E10  CFDD F11D          	movff	postdec2,??__doprnt+1
  2948  000E14  C11C  FFD9         	movff	??__doprnt,fsr2l
  2949  000E18  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  2950  000E1C  0E30               	movlw	48
  2951  000E1E  6EDF               	movwf	indf2,c
  2952  000E20  C116  FFD9         	movff	__doprnt@pb,fsr2l
  2953  000E24  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  2954  000E28  2ADE               	incf	postinc2,f,c
  2955  000E2A  0E00               	movlw	0
  2956  000E2C  22DD               	addwfc	postdec2,f,c
  2957  000E2E                     l9529:
  2958                           
  2959                           ;doprnt.c: 1170: width--;
  2960  000E2E  0101               	movlb	1	; () banked
  2961  000E30  072F               	decf	__doprnt@width& (0+255),f,b
  2962  000E32  A0D8               	btfss	status,0,c
  2963  000E34  0730               	decf	(__doprnt@width+1)& (0+255),f,b
  2964  000E36                     l9531:
  2965  000E36  0101               	movlb	1	; () banked
  2966  000E38  BF30               	btfsc	(__doprnt@width+1)& (0+255),7,b
  2967  000E3A  D103               	goto	l9565
  2968  000E3C  0101               	movlb	1	; () banked
  2969  000E3E  5130               	movf	(__doprnt@width+1)& (0+255),w,b
  2970  000E40  E1C2               	bnz	l9521
  2971  000E42  0101               	movlb	1	; () banked
  2972  000E44  052F               	decf	__doprnt@width& (0+255),w,b
  2973  000E46  A0D8               	btfss	status,0,c
  2974  000E48  D0FC               	goto	l9565
  2975  000E4A  D7BD               	goto	l9521
  2976  000E4C                     l9533:
  2977                           
  2978                           ; BSR set to: 1
  2979                           ;doprnt.c: 1181: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  2980  000E4C  0101               	movlb	1	; () banked
  2981  000E4E  EE20 F002          	lfsr	2,2
  2982  000E52  5116               	movf	__doprnt@pb& (0+255),w,b
  2983  000E54  26D9               	addwf	fsr2l,f,c
  2984  000E56  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  2985  000E58  22DA               	addwfc	fsr2h,f,c
  2986  000E5A  50DE               	movf	postinc2,w,c
  2987  000E5C  10DE               	iorwf	postinc2,w,c
  2988  000E5E  B4D8               	btfsc	status,2,c
  2989  000E60  D014               	goto	l9537
  2990                           
  2991                           ; BSR set to: 1
  2992  000E62  0101               	movlb	1	; () banked
  2993  000E64  EE20 F002          	lfsr	2,2
  2994  000E68  5116               	movf	__doprnt@pb& (0+255),w,b
  2995  000E6A  26D9               	addwf	fsr2l,f,c
  2996  000E6C  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  2997  000E6E  22DA               	addwfc	fsr2h,f,c
  2998  000E70  D801               	call	u15918
  2999  000E72  D020               	goto	l9541
  3000  000E74                     u15918:
  3001  000E74  0005               	push	
  3002  000E76  6EFA               	movwf	pclath,c
  3003  000E78  50DE               	movf	postinc2,w,c
  3004  000E7A  6EFD               	movwf	tosl,c
  3005  000E7C  50DE               	movf	postinc2,w,c
  3006  000E7E  6EFE               	movwf	tosh,c
  3007  000E80  50F8               	movf	tblptru,w,c
  3008  000E82  6EFF               	movwf	tosu,c
  3009  000E84  50FA               	movf	pclath,w,c
  3010  000E86  0E20               	movlw	32
  3011  000E88  0012               	return		;indir
  3012  000E8A                     l9537:
  3013  000E8A  C116  FFD9         	movff	__doprnt@pb,fsr2l
  3014  000E8E  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  3015  000E92  CFDE F11C          	movff	postinc2,??__doprnt
  3016  000E96  CFDD F11D          	movff	postdec2,??__doprnt+1
  3017  000E9A  C11C  FFD9         	movff	??__doprnt,fsr2l
  3018  000E9E  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  3019  000EA2  0E20               	movlw	32
  3020  000EA4  6EDF               	movwf	indf2,c
  3021  000EA6  C116  FFD9         	movff	__doprnt@pb,fsr2l
  3022  000EAA  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  3023  000EAE  2ADE               	incf	postinc2,f,c
  3024  000EB0  0E00               	movlw	0
  3025  000EB2  22DD               	addwfc	postdec2,f,c
  3026  000EB4                     l9541:
  3027                           
  3028                           ;doprnt.c: 1182: width--;
  3029  000EB4  0101               	movlb	1	; () banked
  3030  000EB6  072F               	decf	__doprnt@width& (0+255),f,b
  3031  000EB8  A0D8               	btfss	status,0,c
  3032  000EBA  0730               	decf	(__doprnt@width+1)& (0+255),f,b
  3033  000EBC                     l9543:
  3034                           
  3035                           ; BSR set to: 1
  3036  000EBC  0101               	movlb	1	; () banked
  3037  000EBE  BF30               	btfsc	(__doprnt@width+1)& (0+255),7,b
  3038  000EC0  D007               	goto	l9545
  3039  000EC2  0101               	movlb	1	; () banked
  3040  000EC4  5130               	movf	(__doprnt@width+1)& (0+255),w,b
  3041  000EC6  E1C2               	bnz	l9533
  3042  000EC8  0101               	movlb	1	; () banked
  3043  000ECA  052F               	decf	__doprnt@width& (0+255),w,b
  3044  000ECC  B0D8               	btfsc	status,0,c
  3045  000ECE  D7BE               	goto	l9533
  3046  000ED0                     l9545:
  3047                           
  3048                           ; BSR set to: 1
  3049                           ;doprnt.c: 1183: }
  3050                           ;doprnt.c: 1188: if(flag & 0x03)
  3051  000ED0  0E03               	movlw	3
  3052  000ED2  0101               	movlb	1	; () banked
  3053  000ED4  1534               	andwf	__doprnt@flag& (0+255),w,b
  3054  000ED6  0101               	movlb	1	; () banked
  3055  000ED8  6F1C               	movwf	??__doprnt& (0+255),b
  3056  000EDA  0E00               	movlw	0
  3057  000EDC  0101               	movlb	1	; () banked
  3058  000EDE  1535               	andwf	(__doprnt@flag+1)& (0+255),w,b
  3059  000EE0  0101               	movlb	1	; () banked
  3060  000EE2  6F1D               	movwf	(??__doprnt+1)& (0+255),b
  3061  000EE4  0101               	movlb	1	; () banked
  3062  000EE6  511C               	movf	??__doprnt& (0+255),w,b
  3063  000EE8  0101               	movlb	1	; () banked
  3064  000EEA  111D               	iorwf	(??__doprnt+1)& (0+255),w,b
  3065  000EEC  B4D8               	btfsc	status,2,c
  3066  000EEE  D0A9               	goto	l9565
  3067                           
  3068                           ; BSR set to: 1
  3069                           ;doprnt.c: 1190: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  3070  000EF0  0101               	movlb	1	; () banked
  3071  000EF2  EE20 F002          	lfsr	2,2
  3072  000EF6  5116               	movf	__doprnt@pb& (0+255),w,b
  3073  000EF8  26D9               	addwf	fsr2l,f,c
  3074  000EFA  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  3075  000EFC  22DA               	addwfc	fsr2h,f,c
  3076  000EFE  50DE               	movf	postinc2,w,c
  3077  000F00  10DE               	iorwf	postinc2,w,c
  3078  000F02  B4D8               	btfsc	status,2,c
  3079  000F04  D014               	goto	l9551
  3080                           
  3081                           ; BSR set to: 1
  3082  000F06  0101               	movlb	1	; () banked
  3083  000F08  EE20 F002          	lfsr	2,2
  3084  000F0C  5116               	movf	__doprnt@pb& (0+255),w,b
  3085  000F0E  26D9               	addwf	fsr2l,f,c
  3086  000F10  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  3087  000F12  22DA               	addwfc	fsr2h,f,c
  3088  000F14  D801               	call	u15958
  3089  000F16  D095               	goto	l9565
  3090  000F18                     u15958:
  3091  000F18  0005               	push	
  3092  000F1A  6EFA               	movwf	pclath,c
  3093  000F1C  50DE               	movf	postinc2,w,c
  3094  000F1E  6EFD               	movwf	tosl,c
  3095  000F20  50DE               	movf	postinc2,w,c
  3096  000F22  6EFE               	movwf	tosh,c
  3097  000F24  50F8               	movf	tblptru,w,c
  3098  000F26  6EFF               	movwf	tosu,c
  3099  000F28  50FA               	movf	pclath,w,c
  3100  000F2A  0E2D               	movlw	45
  3101  000F2C  0012               	return		;indir
  3102  000F2E                     l9551:
  3103  000F2E  C116  FFD9         	movff	__doprnt@pb,fsr2l
  3104  000F32  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  3105  000F36  CFDE F11C          	movff	postinc2,??__doprnt
  3106  000F3A  CFDD F11D          	movff	postdec2,??__doprnt+1
  3107  000F3E  C11C  FFD9         	movff	??__doprnt,fsr2l
  3108  000F42  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  3109  000F46  0E2D               	movlw	45
  3110  000F48  D07A               	goto	L2
  3111  000F4A                     l9553:
  3112  000F4A  C116  FFD9         	movff	__doprnt@pb,fsr2l
  3113  000F4E  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  3114  000F52  2ADE               	incf	postinc2,f,c
  3115  000F54  0E00               	movlw	0
  3116  000F56  22DD               	addwfc	postdec2,f,c
  3117                           
  3118                           ;doprnt.c: 1195: }
  3119                           ;doprnt.c: 1196: while(c--) {
  3120  000F58  D074               	goto	l9565
  3121  000F5A                     l9555:
  3122                           
  3123                           ;doprnt.c: 1200: {
  3124                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3125  000F5A  C127  F08E         	movff	__doprnt@val,___lldiv@dividend
  3126  000F5E  C128  F08F         	movff	__doprnt@val+1,___lldiv@dividend+1
  3127  000F62  C129  F090         	movff	__doprnt@val+2,___lldiv@dividend+2
  3128  000F66  C12A  F091         	movff	__doprnt@val+3,___lldiv@dividend+3
  3129  000F6A  0101               	movlb	1	; () banked
  3130  000F6C  5138               	movf	__doprnt@c& (0+255),w,b
  3131  000F6E  0D04               	mullw	4
  3132  000F70  0E01               	movlw	low _dpowers
  3133  000F72  24F3               	addwf	prodl,w,c
  3134  000F74  6EF6               	movwf	tblptrl,c
  3135  000F76  0E06               	movlw	high _dpowers
  3136  000F78  20F4               	addwfc	prodh,w,c
  3137  000F7A  6EF7               	movwf	tblptrh,c
  3138  000F7C                     	if	0	;There are less than 3 active tblptr bytes
  3139  000F7C                     	endif
  3140  000F7C  0009               	tblrd		*+
  3141  000F7E  CFF5 F092          	movff	tablat,___lldiv@divisor
  3142  000F82  0009               	tblrd		*+
  3143  000F84  CFF5 F093          	movff	tablat,___lldiv@divisor+1
  3144  000F88  0009               	tblrd		*+
  3145  000F8A  CFF5 F094          	movff	tablat,___lldiv@divisor+2
  3146  000F8E  000A               	tblrd		*-
  3147  000F90  CFF5 F095          	movff	tablat,___lldiv@divisor+3
  3148  000F94  ECC5  F027         	call	___lldiv
  3149  000F98  C08E  F12B         	movff	?___lldiv,__doprnt@tmpval
  3150  000F9C  C08F  F12C         	movff	?___lldiv+1,__doprnt@tmpval+1
  3151  000FA0  C090  F12D         	movff	?___lldiv+2,__doprnt@tmpval+2
  3152  000FA4  C091  F12E         	movff	?___lldiv+3,__doprnt@tmpval+3
  3153                           
  3154                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3155  000FA8  C12B  F09B         	movff	__doprnt@tmpval,___llmod@dividend
  3156  000FAC  C12C  F09C         	movff	__doprnt@tmpval+1,___llmod@dividend+1
  3157  000FB0  C12D  F09D         	movff	__doprnt@tmpval+2,___llmod@dividend+2
  3158  000FB4  C12E  F09E         	movff	__doprnt@tmpval+3,___llmod@dividend+3
  3159  000FB8  0E0A               	movlw	10
  3160  000FBA  0100               	movlb	0	; () banked
  3161  000FBC  6F9F               	movwf	___llmod@divisor& (0+255),b
  3162  000FBE  0E00               	movlw	0
  3163  000FC0  6FA0               	movwf	(___llmod@divisor+1)& (0+255),b
  3164  000FC2  0E00               	movlw	0
  3165  000FC4  6FA1               	movwf	(___llmod@divisor+2)& (0+255),b
  3166  000FC6  0E00               	movlw	0
  3167  000FC8  6FA2               	movwf	(___llmod@divisor+3)& (0+255),b
  3168  000FCA  ECCB  F028         	call	___llmod	;wreg free
  3169  000FCE  C09B  F12B         	movff	?___llmod,__doprnt@tmpval
  3170  000FD2  C09C  F12C         	movff	?___llmod+1,__doprnt@tmpval+1
  3171  000FD6  C09D  F12D         	movff	?___llmod+2,__doprnt@tmpval+2
  3172  000FDA  C09E  F12E         	movff	?___llmod+3,__doprnt@tmpval+3
  3173                           
  3174                           ;doprnt.c: 1203: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
  3175  000FDE  0101               	movlb	1	; () banked
  3176  000FE0  EE20 F002          	lfsr	2,2
  3177  000FE4  5116               	movf	__doprnt@pb& (0+255),w,b
  3178  000FE6  26D9               	addwf	fsr2l,f,c
  3179  000FE8  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  3180  000FEA  22DA               	addwfc	fsr2h,f,c
  3181  000FEC  50DE               	movf	postinc2,w,c
  3182  000FEE  10DE               	iorwf	postinc2,w,c
  3183  000FF0  B4D8               	btfsc	status,2,c
  3184  000FF2  D016               	goto	l9563
  3185                           
  3186                           ; BSR set to: 1
  3187  000FF4  0101               	movlb	1	; () banked
  3188  000FF6  EE20 F002          	lfsr	2,2
  3189  000FFA  5116               	movf	__doprnt@pb& (0+255),w,b
  3190  000FFC  26D9               	addwf	fsr2l,f,c
  3191  000FFE  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  3192  001000  22DA               	addwfc	fsr2h,f,c
  3193  001002  D801               	call	u15978
  3194  001004  D01E               	goto	l9565
  3195  001006                     u15978:
  3196  001006  0005               	push	
  3197  001008  6EFA               	movwf	pclath,c
  3198  00100A  50DE               	movf	postinc2,w,c
  3199  00100C  6EFD               	movwf	tosl,c
  3200  00100E  50DE               	movf	postinc2,w,c
  3201  001010  6EFE               	movwf	tosh,c
  3202  001012  50F8               	movf	tblptru,w,c
  3203  001014  6EFF               	movwf	tosu,c
  3204  001016  50FA               	movf	pclath,w,c
  3205  001018  0101               	movlb	1	; () banked
  3206  00101A  512B               	movf	__doprnt@tmpval& (0+255),w,b
  3207  00101C  0F30               	addlw	48
  3208  00101E  0012               	return		;indir
  3209  001020                     l9563:
  3210  001020  0101               	movlb	1	; () banked
  3211  001022  512B               	movf	__doprnt@tmpval& (0+255),w,b
  3212  001024  0F30               	addlw	48
  3213  001026  C116  FFD9         	movff	__doprnt@pb,fsr2l
  3214  00102A  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  3215  00102E  CFDE F11C          	movff	postinc2,??__doprnt
  3216  001032  CFDD F11D          	movff	postdec2,??__doprnt+1
  3217  001036  C11C  FFD9         	movff	??__doprnt,fsr2l
  3218  00103A  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  3219  00103E                     L2:
  3220  00103E  6EDF               	movwf	indf2,c
  3221  001040  D784               	goto	l9553
  3222  001042                     l9565:
  3223  001042  0101               	movlb	1	; () banked
  3224  001044  0738               	decf	__doprnt@c& (0+255),f,b
  3225  001046  0101               	movlb	1	; () banked
  3226  001048  2938               	incf	__doprnt@c& (0+255),w,b
  3227  00104A  B4D8               	btfsc	status,2,c
  3228  00104C  D039               	goto	l9577
  3229  00104E  D785               	goto	l9555
  3230  001050                     l9567:
  3231                           
  3232                           ; BSR set to: 1
  3233                           ;doprnt.c: 1208: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  3234  001050  0101               	movlb	1	; () banked
  3235  001052  EE20 F002          	lfsr	2,2
  3236  001056  5116               	movf	__doprnt@pb& (0+255),w,b
  3237  001058  26D9               	addwf	fsr2l,f,c
  3238  00105A  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  3239  00105C  22DA               	addwfc	fsr2h,f,c
  3240  00105E  50DE               	movf	postinc2,w,c
  3241  001060  10DE               	iorwf	postinc2,w,c
  3242  001062  B4D8               	btfsc	status,2,c
  3243  001064  D014               	goto	l9571
  3244                           
  3245                           ; BSR set to: 1
  3246  001066  0101               	movlb	1	; () banked
  3247  001068  EE20 F002          	lfsr	2,2
  3248  00106C  5116               	movf	__doprnt@pb& (0+255),w,b
  3249  00106E  26D9               	addwf	fsr2l,f,c
  3250  001070  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  3251  001072  22DA               	addwfc	fsr2h,f,c
  3252  001074  D801               	call	u16008
  3253  001076  D020               	goto	l9575
  3254  001078                     u16008:
  3255  001078  0005               	push	
  3256  00107A  6EFA               	movwf	pclath,c
  3257  00107C  50DE               	movf	postinc2,w,c
  3258  00107E  6EFD               	movwf	tosl,c
  3259  001080  50DE               	movf	postinc2,w,c
  3260  001082  6EFE               	movwf	tosh,c
  3261  001084  50F8               	movf	tblptru,w,c
  3262  001086  6EFF               	movwf	tosu,c
  3263  001088  50FA               	movf	pclath,w,c
  3264  00108A  0E30               	movlw	48
  3265  00108C  0012               	return		;indir
  3266  00108E                     l9571:
  3267  00108E  C116  FFD9         	movff	__doprnt@pb,fsr2l
  3268  001092  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  3269  001096  CFDE F11C          	movff	postinc2,??__doprnt
  3270  00109A  CFDD F11D          	movff	postdec2,??__doprnt+1
  3271  00109E  C11C  FFD9         	movff	??__doprnt,fsr2l
  3272  0010A2  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  3273  0010A6  0E30               	movlw	48
  3274  0010A8  6EDF               	movwf	indf2,c
  3275  0010AA  C116  FFD9         	movff	__doprnt@pb,fsr2l
  3276  0010AE  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  3277  0010B2  2ADE               	incf	postinc2,f,c
  3278  0010B4  0E00               	movlw	0
  3279  0010B6  22DD               	addwfc	postdec2,f,c
  3280  0010B8                     l9575:
  3281                           
  3282                           ;doprnt.c: 1209: exp--;
  3283  0010B8  0101               	movlb	1	; () banked
  3284  0010BA  0725               	decf	__doprnt@exp& (0+255),f,b
  3285  0010BC  A0D8               	btfss	status,0,c
  3286  0010BE  0726               	decf	(__doprnt@exp+1)& (0+255),f,b
  3287  0010C0                     l9577:
  3288                           
  3289                           ; BSR set to: 1
  3290  0010C0  0101               	movlb	1	; () banked
  3291  0010C2  BF26               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  3292  0010C4  D007               	goto	l9579
  3293  0010C6  0101               	movlb	1	; () banked
  3294  0010C8  5126               	movf	(__doprnt@exp+1)& (0+255),w,b
  3295  0010CA  E1C2               	bnz	l9567
  3296  0010CC  0101               	movlb	1	; () banked
  3297  0010CE  0525               	decf	__doprnt@exp& (0+255),w,b
  3298  0010D0  B0D8               	btfsc	status,0,c
  3299  0010D2  D7BE               	goto	l9567
  3300  0010D4                     l9579:
  3301                           
  3302                           ; BSR set to: 1
  3303                           ;doprnt.c: 1210: }
  3304                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3305  0010D4  0101               	movlb	1	; () banked
  3306  0010D6  BF37               	btfsc	(__doprnt@prec+1)& (0+255),7,b
  3307  0010D8  D00C               	goto	l455
  3308  0010DA  0101               	movlb	1	; () banked
  3309  0010DC  5137               	movf	(__doprnt@prec+1)& (0+255),w,b
  3310  0010DE  E105               	bnz	u16020
  3311  0010E0  0E09               	movlw	9
  3312  0010E2  0101               	movlb	1	; () banked
  3313  0010E4  5D36               	subwf	__doprnt@prec& (0+255),w,b
  3314  0010E6  A0D8               	btfss	status,0,c
  3315  0010E8  D004               	goto	l455
  3316  0010EA                     u16020:
  3317                           
  3318                           ; BSR set to: 1
  3319                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3320  0010EA  0E08               	movlw	8
  3321  0010EC  0101               	movlb	1	; () banked
  3322  0010EE  6F38               	movwf	__doprnt@c& (0+255),b
  3323  0010F0  D002               	goto	l9583
  3324  0010F2                     l455:
  3325                           
  3326                           ; BSR set to: 1
  3327                           ;doprnt.c: 1213: else
  3328                           ;doprnt.c: 1214: c = prec;
  3329  0010F2  C136  F138         	movff	__doprnt@prec,__doprnt@c
  3330  0010F6                     l9583:
  3331                           
  3332                           ; BSR set to: 1
  3333                           ;doprnt.c: 1215: prec -= c;
  3334  0010F6  0101               	movlb	1	; () banked
  3335  0010F8  5138               	movf	__doprnt@c& (0+255),w,b
  3336  0010FA  0101               	movlb	1	; () banked
  3337  0010FC  5F36               	subwf	__doprnt@prec& (0+255),f,b
  3338  0010FE  0E00               	movlw	0
  3339  001100  0101               	movlb	1	; () banked
  3340  001102  BF38               	btfsc	__doprnt@c& (0+255),7,b
  3341  001104  0EFF               	movlw	255
  3342  001106  0101               	movlb	1	; () banked
  3343  001108  5B37               	subwfb	(__doprnt@prec+1)& (0+255),f,b
  3344                           
  3345                           ; BSR set to: 1
  3346                           ;doprnt.c: 1219: if(c)
  3347  00110A  0101               	movlb	1	; () banked
  3348  00110C  5138               	movf	__doprnt@c& (0+255),w,b
  3349  00110E  0101               	movlb	1	; () banked
  3350  001110  B4D8               	btfsc	status,2,c
  3351  001112  D034               	goto	l9595
  3352                           
  3353                           ; BSR set to: 1
  3354                           ;doprnt.c: 1221: if(pb->func) (pb->func('.')); else ((*pb->ptr++ = '.'));
  3355  001114  0101               	movlb	1	; () banked
  3356  001116  EE20 F002          	lfsr	2,2
  3357  00111A  5116               	movf	__doprnt@pb& (0+255),w,b
  3358  00111C  26D9               	addwf	fsr2l,f,c
  3359  00111E  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  3360  001120  22DA               	addwfc	fsr2h,f,c
  3361  001122  50DE               	movf	postinc2,w,c
  3362  001124  10DE               	iorwf	postinc2,w,c
  3363  001126  B4D8               	btfsc	status,2,c
  3364  001128  D014               	goto	l9591
  3365                           
  3366                           ; BSR set to: 1
  3367  00112A  0101               	movlb	1	; () banked
  3368  00112C  EE20 F002          	lfsr	2,2
  3369  001130  5116               	movf	__doprnt@pb& (0+255),w,b
  3370  001132  26D9               	addwf	fsr2l,f,c
  3371  001134  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  3372  001136  22DA               	addwfc	fsr2h,f,c
  3373  001138  D801               	call	u16058
  3374  00113A  D020               	goto	l9595
  3375  00113C                     u16058:
  3376  00113C  0005               	push	
  3377  00113E  6EFA               	movwf	pclath,c
  3378  001140  50DE               	movf	postinc2,w,c
  3379  001142  6EFD               	movwf	tosl,c
  3380  001144  50DE               	movf	postinc2,w,c
  3381  001146  6EFE               	movwf	tosh,c
  3382  001148  50F8               	movf	tblptru,w,c
  3383  00114A  6EFF               	movwf	tosu,c
  3384  00114C  50FA               	movf	pclath,w,c
  3385  00114E  0E2E               	movlw	46
  3386  001150  0012               	return		;indir
  3387  001152                     l9591:
  3388  001152  C116  FFD9         	movff	__doprnt@pb,fsr2l
  3389  001156  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  3390  00115A  CFDE F11C          	movff	postinc2,??__doprnt
  3391  00115E  CFDD F11D          	movff	postdec2,??__doprnt+1
  3392  001162  C11C  FFD9         	movff	??__doprnt,fsr2l
  3393  001166  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  3394  00116A  0E2E               	movlw	46
  3395  00116C  6EDF               	movwf	indf2,c
  3396  00116E  C116  FFD9         	movff	__doprnt@pb,fsr2l
  3397  001172  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  3398  001176  2ADE               	incf	postinc2,f,c
  3399  001178  0E00               	movlw	0
  3400  00117A  22DD               	addwfc	postdec2,f,c
  3401  00117C                     l9595:
  3402                           
  3403                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3404  00117C  0101               	movlb	1	; () banked
  3405  00117E  5138               	movf	__doprnt@c& (0+255),w,b
  3406  001180  EC69  F015         	call	_scale
  3407  001184  C0B1  F122         	movff	?_scale,__doprnt$1721
  3408  001188  C0B2  F123         	movff	?_scale+1,__doprnt$1721+1
  3409  00118C  C0B3  F124         	movff	?_scale+2,__doprnt$1721+2
  3410                           
  3411                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3412  001190  C131  F0A5         	movff	__doprnt@fval,___ftmul@f2
  3413  001194  C132  F0A6         	movff	__doprnt@fval+1,___ftmul@f2+1
  3414  001198  C133  F0A7         	movff	__doprnt@fval+2,___ftmul@f2+2
  3415  00119C  C122  F0A2         	movff	__doprnt$1721,___ftmul@f1
  3416  0011A0  C123  F0A3         	movff	__doprnt$1721+1,___ftmul@f1+1
  3417  0011A4  C124  F0A4         	movff	__doprnt$1721+2,___ftmul@f1+2
  3418  0011A8  EC82  F021         	call	___ftmul	;wreg free
  3419  0011AC  C0A2  F104         	movff	?___ftmul,___fttol@f1
  3420  0011B0  C0A3  F105         	movff	?___ftmul+1,___fttol@f1+1
  3421  0011B4  C0A4  F106         	movff	?___ftmul+2,___fttol@f1+2
  3422  0011B8  ECD7  F022         	call	___fttol	;wreg free
  3423  0011BC  C104  F127         	movff	?___fttol,__doprnt@val
  3424  0011C0  C105  F128         	movff	?___fttol+1,__doprnt@val+1
  3425  0011C4  C106  F129         	movff	?___fttol+2,__doprnt@val+2
  3426  0011C8  C107  F12A         	movff	?___fttol+3,__doprnt@val+3
  3427                           
  3428                           ;doprnt.c: 1228: while(c--) {
  3429  0011CC  D0A1               	goto	l9611
  3430  0011CE                     l9599:
  3431                           
  3432                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3433  0011CE  C127  F08E         	movff	__doprnt@val,___lldiv@dividend
  3434  0011D2  C128  F08F         	movff	__doprnt@val+1,___lldiv@dividend+1
  3435  0011D6  C129  F090         	movff	__doprnt@val+2,___lldiv@dividend+2
  3436  0011DA  C12A  F091         	movff	__doprnt@val+3,___lldiv@dividend+3
  3437  0011DE  0101               	movlb	1	; () banked
  3438  0011E0  5138               	movf	__doprnt@c& (0+255),w,b
  3439  0011E2  0D04               	mullw	4
  3440  0011E4  0E01               	movlw	low _dpowers
  3441  0011E6  24F3               	addwf	prodl,w,c
  3442  0011E8  6EF6               	movwf	tblptrl,c
  3443  0011EA  0E06               	movlw	high _dpowers
  3444  0011EC  20F4               	addwfc	prodh,w,c
  3445  0011EE  6EF7               	movwf	tblptrh,c
  3446  0011F0                     	if	0	;There are less than 3 active tblptr bytes
  3447  0011F0                     	endif
  3448  0011F0  0009               	tblrd		*+
  3449  0011F2  CFF5 F092          	movff	tablat,___lldiv@divisor
  3450  0011F6  0009               	tblrd		*+
  3451  0011F8  CFF5 F093          	movff	tablat,___lldiv@divisor+1
  3452  0011FC  0009               	tblrd		*+
  3453  0011FE  CFF5 F094          	movff	tablat,___lldiv@divisor+2
  3454  001202  000A               	tblrd		*-
  3455  001204  CFF5 F095          	movff	tablat,___lldiv@divisor+3
  3456  001208  ECC5  F027         	call	___lldiv	;wreg free
  3457  00120C  C08E  F12B         	movff	?___lldiv,__doprnt@tmpval
  3458  001210  C08F  F12C         	movff	?___lldiv+1,__doprnt@tmpval+1
  3459  001214  C090  F12D         	movff	?___lldiv+2,__doprnt@tmpval+2
  3460  001218  C091  F12E         	movff	?___lldiv+3,__doprnt@tmpval+3
  3461                           
  3462                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3463  00121C  C12B  F09B         	movff	__doprnt@tmpval,___llmod@dividend
  3464  001220  C12C  F09C         	movff	__doprnt@tmpval+1,___llmod@dividend+1
  3465  001224  C12D  F09D         	movff	__doprnt@tmpval+2,___llmod@dividend+2
  3466  001228  C12E  F09E         	movff	__doprnt@tmpval+3,___llmod@dividend+3
  3467  00122C  0E0A               	movlw	10
  3468  00122E  0100               	movlb	0	; () banked
  3469  001230  6F9F               	movwf	___llmod@divisor& (0+255),b
  3470  001232  0E00               	movlw	0
  3471  001234  6FA0               	movwf	(___llmod@divisor+1)& (0+255),b
  3472  001236  0E00               	movlw	0
  3473  001238  6FA1               	movwf	(___llmod@divisor+2)& (0+255),b
  3474  00123A  0E00               	movlw	0
  3475  00123C  6FA2               	movwf	(___llmod@divisor+3)& (0+255),b
  3476  00123E  ECCB  F028         	call	___llmod	;wreg free
  3477  001242  C09B  F12B         	movff	?___llmod,__doprnt@tmpval
  3478  001246  C09C  F12C         	movff	?___llmod+1,__doprnt@tmpval+1
  3479  00124A  C09D  F12D         	movff	?___llmod+2,__doprnt@tmpval+2
  3480  00124E  C09E  F12E         	movff	?___llmod+3,__doprnt@tmpval+3
  3481                           
  3482                           ;doprnt.c: 1231: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
  3483  001252  0101               	movlb	1	; () banked
  3484  001254  EE20 F002          	lfsr	2,2
  3485  001258  5116               	movf	__doprnt@pb& (0+255),w,b
  3486  00125A  26D9               	addwf	fsr2l,f,c
  3487  00125C  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  3488  00125E  22DA               	addwfc	fsr2h,f,c
  3489  001260  50DE               	movf	postinc2,w,c
  3490  001262  10DE               	iorwf	postinc2,w,c
  3491  001264  B4D8               	btfsc	status,2,c
  3492  001266  D016               	goto	l9607
  3493                           
  3494                           ; BSR set to: 1
  3495  001268  0101               	movlb	1	; () banked
  3496  00126A  EE20 F002          	lfsr	2,2
  3497  00126E  5116               	movf	__doprnt@pb& (0+255),w,b
  3498  001270  26D9               	addwf	fsr2l,f,c
  3499  001272  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  3500  001274  22DA               	addwfc	fsr2h,f,c
  3501  001276  D801               	call	u16078
  3502  001278  D024               	goto	l9609
  3503  00127A                     u16078:
  3504  00127A  0005               	push	
  3505  00127C  6EFA               	movwf	pclath,c
  3506  00127E  50DE               	movf	postinc2,w,c
  3507  001280  6EFD               	movwf	tosl,c
  3508  001282  50DE               	movf	postinc2,w,c
  3509  001284  6EFE               	movwf	tosh,c
  3510  001286  50F8               	movf	tblptru,w,c
  3511  001288  6EFF               	movwf	tosu,c
  3512  00128A  50FA               	movf	pclath,w,c
  3513  00128C  0101               	movlb	1	; () banked
  3514  00128E  512B               	movf	__doprnt@tmpval& (0+255),w,b
  3515  001290  0F30               	addlw	48
  3516  001292  0012               	return		;indir
  3517  001294                     l9607:
  3518  001294  0101               	movlb	1	; () banked
  3519  001296  512B               	movf	__doprnt@tmpval& (0+255),w,b
  3520  001298  0F30               	addlw	48
  3521  00129A  C116  FFD9         	movff	__doprnt@pb,fsr2l
  3522  00129E  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  3523  0012A2  CFDE F11C          	movff	postinc2,??__doprnt
  3524  0012A6  CFDD F11D          	movff	postdec2,??__doprnt+1
  3525  0012AA  C11C  FFD9         	movff	??__doprnt,fsr2l
  3526  0012AE  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  3527  0012B2  6EDF               	movwf	indf2,c
  3528  0012B4  C116  FFD9         	movff	__doprnt@pb,fsr2l
  3529  0012B8  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  3530  0012BC  2ADE               	incf	postinc2,f,c
  3531  0012BE  0E00               	movlw	0
  3532  0012C0  22DD               	addwfc	postdec2,f,c
  3533  0012C2                     l9609:
  3534                           
  3535                           ;doprnt.c: 1232: val %= dpowers[c];
  3536  0012C2  C127  F09B         	movff	__doprnt@val,___llmod@dividend
  3537  0012C6  C128  F09C         	movff	__doprnt@val+1,___llmod@dividend+1
  3538  0012CA  C129  F09D         	movff	__doprnt@val+2,___llmod@dividend+2
  3539  0012CE  C12A  F09E         	movff	__doprnt@val+3,___llmod@dividend+3
  3540  0012D2  0101               	movlb	1	; () banked
  3541  0012D4  5138               	movf	__doprnt@c& (0+255),w,b
  3542  0012D6  0D04               	mullw	4
  3543  0012D8  0E01               	movlw	low _dpowers
  3544  0012DA  24F3               	addwf	prodl,w,c
  3545  0012DC  6EF6               	movwf	tblptrl,c
  3546  0012DE  0E06               	movlw	high _dpowers
  3547  0012E0  20F4               	addwfc	prodh,w,c
  3548  0012E2  6EF7               	movwf	tblptrh,c
  3549  0012E4                     	if	0	;There are less than 3 active tblptr bytes
  3550  0012E4                     	endif
  3551  0012E4  0009               	tblrd		*+
  3552  0012E6  CFF5 F09F          	movff	tablat,___llmod@divisor
  3553  0012EA  0009               	tblrd		*+
  3554  0012EC  CFF5 F0A0          	movff	tablat,___llmod@divisor+1
  3555  0012F0  0009               	tblrd		*+
  3556  0012F2  CFF5 F0A1          	movff	tablat,___llmod@divisor+2
  3557  0012F6  000A               	tblrd		*-
  3558  0012F8  CFF5 F0A2          	movff	tablat,___llmod@divisor+3
  3559  0012FC  ECCB  F028         	call	___llmod
  3560  001300  C09B  F127         	movff	?___llmod,__doprnt@val
  3561  001304  C09C  F128         	movff	?___llmod+1,__doprnt@val+1
  3562  001308  C09D  F129         	movff	?___llmod+2,__doprnt@val+2
  3563  00130C  C09E  F12A         	movff	?___llmod+3,__doprnt@val+3
  3564  001310                     l9611:
  3565  001310  0101               	movlb	1	; () banked
  3566  001312  0738               	decf	__doprnt@c& (0+255),f,b
  3567  001314  0101               	movlb	1	; () banked
  3568  001316  2938               	incf	__doprnt@c& (0+255),w,b
  3569  001318  B4D8               	btfsc	status,2,c
  3570  00131A  D039               	goto	l9623
  3571  00131C  D758               	goto	l9599
  3572  00131E                     l9613:
  3573                           
  3574                           ; BSR set to: 1
  3575                           ;doprnt.c: 1236: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  3576  00131E  0101               	movlb	1	; () banked
  3577  001320  EE20 F002          	lfsr	2,2
  3578  001324  5116               	movf	__doprnt@pb& (0+255),w,b
  3579  001326  26D9               	addwf	fsr2l,f,c
  3580  001328  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  3581  00132A  22DA               	addwfc	fsr2h,f,c
  3582  00132C  50DE               	movf	postinc2,w,c
  3583  00132E  10DE               	iorwf	postinc2,w,c
  3584  001330  B4D8               	btfsc	status,2,c
  3585  001332  D014               	goto	l9617
  3586                           
  3587                           ; BSR set to: 1
  3588  001334  0101               	movlb	1	; () banked
  3589  001336  EE20 F002          	lfsr	2,2
  3590  00133A  5116               	movf	__doprnt@pb& (0+255),w,b
  3591  00133C  26D9               	addwf	fsr2l,f,c
  3592  00133E  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  3593  001340  22DA               	addwfc	fsr2h,f,c
  3594  001342  D801               	call	u16108
  3595  001344  D020               	goto	l9621
  3596  001346                     u16108:
  3597  001346  0005               	push	
  3598  001348  6EFA               	movwf	pclath,c
  3599  00134A  50DE               	movf	postinc2,w,c
  3600  00134C  6EFD               	movwf	tosl,c
  3601  00134E  50DE               	movf	postinc2,w,c
  3602  001350  6EFE               	movwf	tosh,c
  3603  001352  50F8               	movf	tblptru,w,c
  3604  001354  6EFF               	movwf	tosu,c
  3605  001356  50FA               	movf	pclath,w,c
  3606  001358  0E30               	movlw	48
  3607  00135A  0012               	return		;indir
  3608  00135C                     l9617:
  3609  00135C  C116  FFD9         	movff	__doprnt@pb,fsr2l
  3610  001360  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  3611  001364  CFDE F11C          	movff	postinc2,??__doprnt
  3612  001368  CFDD F11D          	movff	postdec2,??__doprnt+1
  3613  00136C  C11C  FFD9         	movff	??__doprnt,fsr2l
  3614  001370  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  3615  001374  0E30               	movlw	48
  3616  001376  6EDF               	movwf	indf2,c
  3617  001378  C116  FFD9         	movff	__doprnt@pb,fsr2l
  3618  00137C  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  3619  001380  2ADE               	incf	postinc2,f,c
  3620  001382  0E00               	movlw	0
  3621  001384  22DD               	addwfc	postdec2,f,c
  3622  001386                     l9621:
  3623                           
  3624                           ;doprnt.c: 1237: prec--;
  3625  001386  0101               	movlb	1	; () banked
  3626  001388  0736               	decf	__doprnt@prec& (0+255),f,b
  3627  00138A  A0D8               	btfss	status,0,c
  3628  00138C  0737               	decf	(__doprnt@prec+1)& (0+255),f,b
  3629  00138E                     l9623:
  3630                           
  3631                           ; BSR set to: 1
  3632  00138E  0101               	movlb	1	; () banked
  3633  001390  5136               	movf	__doprnt@prec& (0+255),w,b
  3634  001392  0101               	movlb	1	; () banked
  3635  001394  1137               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  3636  001396  B4D8               	btfsc	status,2,c
  3637  001398  D2CB               	goto	l9747
  3638  00139A  D7C1               	goto	l9613
  3639  00139C                     l403:
  3640                           
  3641                           ; BSR set to: 1
  3642                           ;doprnt.c: 1246: }
  3643                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
  3644  00139C  0101               	movlb	1	; () banked
  3645  00139E  BD34               	btfsc	__doprnt@flag& (0+255),6,b
  3646  0013A0  D046               	goto	l470
  3647                           
  3648                           ; BSR set to: 1
  3649                           ;doprnt.c: 1253: {
  3650                           ;doprnt.c: 1255: if(flag & 0x10)
  3651  0013A2  0101               	movlb	1	; () banked
  3652  0013A4  A934               	btfss	__doprnt@flag& (0+255),4,b
  3653  0013A6  D019               	goto	l9629
  3654                           
  3655                           ; BSR set to: 1
  3656                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  3657  0013A8  C11A  FFD9         	movff	__doprnt@ap,fsr2l
  3658  0013AC  C11B  FFDA         	movff	__doprnt@ap+1,fsr2h
  3659  0013B0  CFDF F11C          	movff	indf2,??__doprnt
  3660  0013B4  0E04               	movlw	4
  3661  0013B6  26DE               	addwf	postinc2,f,c
  3662  0013B8  CFDF F11D          	movff	indf2,??__doprnt+1
  3663  0013BC  0E00               	movlw	0
  3664  0013BE  22DD               	addwfc	postdec2,f,c
  3665  0013C0  C11C  FFD9         	movff	??__doprnt,fsr2l
  3666  0013C4  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  3667  0013C8  CFDE F127          	movff	postinc2,__doprnt@val
  3668  0013CC  CFDE F128          	movff	postinc2,__doprnt@val+1
  3669  0013D0  CFDE F129          	movff	postinc2,__doprnt@val+2
  3670  0013D4  CFDE F12A          	movff	postinc2,__doprnt@val+3
  3671  0013D8  D01A               	goto	l9631
  3672  0013DA                     l9629:
  3673                           
  3674                           ; BSR set to: 1
  3675                           ;doprnt.c: 1257: else
  3676                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3677  0013DA  C11A  FFD9         	movff	__doprnt@ap,fsr2l
  3678  0013DE  C11B  FFDA         	movff	__doprnt@ap+1,fsr2h
  3679  0013E2  CFDF F11C          	movff	indf2,??__doprnt
  3680  0013E6  0E02               	movlw	2
  3681  0013E8  26DE               	addwf	postinc2,f,c
  3682  0013EA  CFDF F11D          	movff	indf2,??__doprnt+1
  3683  0013EE  0E00               	movlw	0
  3684  0013F0  22DD               	addwfc	postdec2,f,c
  3685  0013F2  C11C  FFD9         	movff	??__doprnt,fsr2l
  3686  0013F6  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  3687  0013FA  CFDE F127          	movff	postinc2,__doprnt@val
  3688  0013FE  CFDD F128          	movff	postdec2,__doprnt@val+1
  3689  001402  0101               	movlb	1	; () banked
  3690  001404  0E00               	movlw	0
  3691  001406  BF28               	btfsc	(__doprnt@val+1)& (0+255),7,b
  3692  001408  0EFF               	movlw	-1
  3693  00140A  6F29               	movwf	(__doprnt@val+2)& (0+255),b
  3694  00140C  6F2A               	movwf	(__doprnt@val+3)& (0+255),b
  3695  00140E                     l9631:
  3696                           
  3697                           ; BSR set to: 1
  3698                           ;doprnt.c: 1261: if((long)val < 0) {
  3699  00140E  0101               	movlb	1	; () banked
  3700  001410  AF2A               	btfss	(__doprnt@val+3)& (0+255),7,b
  3701  001412  D044               	goto	l9641
  3702                           
  3703                           ; BSR set to: 1
  3704                           ;doprnt.c: 1262: flag |= 0x03;
  3705  001414  0E03               	movlw	3
  3706  001416  0101               	movlb	1	; () banked
  3707  001418  1334               	iorwf	__doprnt@flag& (0+255),f,b
  3708                           
  3709                           ; BSR set to: 1
  3710                           ;doprnt.c: 1263: val = -val;
  3711  00141A  0101               	movlb	1	; () banked
  3712  00141C  1F2A               	comf	(__doprnt@val+3)& (0+255),f,b
  3713  00141E  1F29               	comf	(__doprnt@val+2)& (0+255),f,b
  3714  001420  1F28               	comf	(__doprnt@val+1)& (0+255),f,b
  3715  001422  6D27               	negf	__doprnt@val& (0+255),b
  3716  001424  0E00               	movlw	0
  3717  001426  2328               	addwfc	(__doprnt@val+1)& (0+255),f,b
  3718  001428  2329               	addwfc	(__doprnt@val+2)& (0+255),f,b
  3719  00142A  232A               	addwfc	(__doprnt@val+3)& (0+255),f,b
  3720                           
  3721                           ; BSR set to: 1
  3722                           ;doprnt.c: 1264: }
  3723                           ;doprnt.c: 1266: }
  3724  00142C  D037               	goto	l9641
  3725  00142E                     l470:
  3726                           
  3727                           ; BSR set to: 1
  3728                           ;doprnt.c: 1268: else
  3729                           ;doprnt.c: 1273: {
  3730                           ;doprnt.c: 1281: if(flag & 0x10)
  3731  00142E  0101               	movlb	1	; () banked
  3732  001430  A934               	btfss	__doprnt@flag& (0+255),4,b
  3733  001432  D019               	goto	l9639
  3734                           
  3735                           ; BSR set to: 1
  3736                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  3737  001434  C11A  FFD9         	movff	__doprnt@ap,fsr2l
  3738  001438  C11B  FFDA         	movff	__doprnt@ap+1,fsr2h
  3739  00143C  CFDF F11C          	movff	indf2,??__doprnt
  3740  001440  0E04               	movlw	4
  3741  001442  26DE               	addwf	postinc2,f,c
  3742  001444  CFDF F11D          	movff	indf2,??__doprnt+1
  3743  001448  0E00               	movlw	0
  3744  00144A  22DD               	addwfc	postdec2,f,c
  3745  00144C  C11C  FFD9         	movff	??__doprnt,fsr2l
  3746  001450  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  3747  001454  CFDE F127          	movff	postinc2,__doprnt@val
  3748  001458  CFDE F128          	movff	postinc2,__doprnt@val+1
  3749  00145C  CFDE F129          	movff	postinc2,__doprnt@val+2
  3750  001460  CFDE F12A          	movff	postinc2,__doprnt@val+3
  3751  001464  D01B               	goto	l9641
  3752  001466                     l9639:
  3753                           
  3754                           ; BSR set to: 1
  3755                           ;doprnt.c: 1283: else
  3756                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3757  001466  C11A  FFD9         	movff	__doprnt@ap,fsr2l
  3758  00146A  C11B  FFDA         	movff	__doprnt@ap+1,fsr2h
  3759  00146E  CFDF F11C          	movff	indf2,??__doprnt
  3760  001472  0E02               	movlw	2
  3761  001474  26DE               	addwf	postinc2,f,c
  3762  001476  CFDF F11D          	movff	indf2,??__doprnt+1
  3763  00147A  0E00               	movlw	0
  3764  00147C  22DD               	addwfc	postdec2,f,c
  3765  00147E  C11C  FFD9         	movff	??__doprnt,fsr2l
  3766  001482  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  3767  001486  CFDE F11E          	movff	postinc2,??__doprnt+2
  3768  00148A  CFDD F11F          	movff	postdec2,??__doprnt+3
  3769  00148E  C11E  F127         	movff	??__doprnt+2,__doprnt@val
  3770  001492  C11F  F128         	movff	??__doprnt+3,__doprnt@val+1
  3771  001496  0101               	movlb	1	; () banked
  3772  001498  6B29               	clrf	(__doprnt@val+2)& (0+255),b
  3773  00149A  6B2A               	clrf	(__doprnt@val+3)& (0+255),b
  3774  00149C                     l9641:
  3775                           
  3776                           ; BSR set to: 1
  3777                           ;doprnt.c: 1287: }
  3778                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3779  00149C  0101               	movlb	1	; () banked
  3780  00149E  5136               	movf	__doprnt@prec& (0+255),w,b
  3781  0014A0  0101               	movlb	1	; () banked
  3782  0014A2  1137               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  3783  0014A4  A4D8               	btfss	status,2,c
  3784  0014A6  D00D               	goto	l9647
  3785                           
  3786                           ; BSR set to: 1
  3787  0014A8  0101               	movlb	1	; () banked
  3788  0014AA  5127               	movf	__doprnt@val& (0+255),w,b
  3789  0014AC  0101               	movlb	1	; () banked
  3790  0014AE  1128               	iorwf	(__doprnt@val+1)& (0+255),w,b
  3791  0014B0  0101               	movlb	1	; () banked
  3792  0014B2  1129               	iorwf	(__doprnt@val+2)& (0+255),w,b
  3793  0014B4  0101               	movlb	1	; () banked
  3794  0014B6  112A               	iorwf	(__doprnt@val+3)& (0+255),w,b
  3795  0014B8  A4D8               	btfss	status,2,c
  3796  0014BA  D003               	goto	l9647
  3797                           
  3798                           ; BSR set to: 1
  3799                           ;doprnt.c: 1291: prec++;
  3800  0014BC  0101               	movlb	1	; () banked
  3801  0014BE  4B36               	infsnz	__doprnt@prec& (0+255),f,b
  3802  0014C0  2B37               	incf	(__doprnt@prec+1)& (0+255),f,b
  3803  0014C2                     l9647:
  3804                           
  3805                           ; BSR set to: 1
  3806                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3807  0014C2  0E01               	movlw	1
  3808  0014C4  0101               	movlb	1	; () banked
  3809  0014C6  6F38               	movwf	__doprnt@c& (0+255),b
  3810  0014C8                     l9649:
  3811                           
  3812                           ; BSR set to: 1
  3813  0014C8  0E0A               	movlw	10
  3814  0014CA  0101               	movlb	1	; () banked
  3815  0014CC  1938               	xorwf	__doprnt@c& (0+255),w,b
  3816  0014CE  B4D8               	btfsc	status,2,c
  3817  0014D0  D01E               	goto	l9661
  3818                           
  3819                           ; BSR set to: 1
  3820                           ;doprnt.c: 1306: if(val < dpowers[c])
  3821                           
  3822                           ; BSR set to: 1
  3823                           
  3824                           ; BSR set to: 1
  3825  0014D2  0101               	movlb	1	; () banked
  3826  0014D4  5138               	movf	__doprnt@c& (0+255),w,b
  3827  0014D6  0D04               	mullw	4
  3828  0014D8  0E01               	movlw	low _dpowers
  3829  0014DA  24F3               	addwf	prodl,w,c
  3830  0014DC  6EF6               	movwf	tblptrl,c
  3831  0014DE  0E06               	movlw	high _dpowers
  3832  0014E0  20F4               	addwfc	prodh,w,c
  3833  0014E2  6EF7               	movwf	tblptrh,c
  3834  0014E4                     	if	0	;There are less than 3 active tblptr bytes
  3835  0014E4                     	endif
  3836  0014E4  0009               	tblrd		*+
  3837  0014E6  50F5               	movf	tablat,w,c
  3838  0014E8  0101               	movlb	1	; () banked
  3839  0014EA  5D27               	subwf	__doprnt@val& (0+255),w,b
  3840  0014EC  0009               	tblrd		*+
  3841  0014EE  50F5               	movf	tablat,w,c
  3842  0014F0  0101               	movlb	1	; () banked
  3843  0014F2  5928               	subwfb	(__doprnt@val+1)& (0+255),w,b
  3844  0014F4  0009               	tblrd		*+
  3845  0014F6  50F5               	movf	tablat,w,c
  3846  0014F8  0101               	movlb	1	; () banked
  3847  0014FA  5929               	subwfb	(__doprnt@val+2)& (0+255),w,b
  3848  0014FC  0009               	tblrd		*+
  3849  0014FE  50F5               	movf	tablat,w,c
  3850  001500  0101               	movlb	1	; () banked
  3851  001502  592A               	subwfb	(__doprnt@val+3)& (0+255),w,b
  3852  001504  A0D8               	btfss	status,0,c
  3853  001506  D003               	goto	l9661
  3854                           
  3855                           ; BSR set to: 1
  3856                           
  3857                           ; BSR set to: 1
  3858                           
  3859                           ; BSR set to: 1
  3860                           ;doprnt.c: 1307: break;
  3861  001508  0101               	movlb	1	; () banked
  3862  00150A  2B38               	incf	__doprnt@c& (0+255),f,b
  3863  00150C  D7DD               	goto	l9649
  3864  00150E                     l9661:
  3865                           
  3866                           ; BSR set to: 1
  3867                           ;doprnt.c: 1339: if(c < prec)
  3868  00150E  0E80               	movlw	128
  3869  001510  0101               	movlb	1	; () banked
  3870  001512  BF38               	btfsc	__doprnt@c& (0+255),7,b
  3871  001514  0E7F               	movlw	127
  3872  001516  0101               	movlb	1	; () banked
  3873  001518  6F1C               	movwf	??__doprnt& (0+255),b
  3874  00151A  0101               	movlb	1	; () banked
  3875  00151C  5136               	movf	__doprnt@prec& (0+255),w,b
  3876  00151E  0101               	movlb	1	; () banked
  3877  001520  5D38               	subwf	__doprnt@c& (0+255),w,b
  3878  001522  0101               	movlb	1	; () banked
  3879  001524  5137               	movf	(__doprnt@prec+1)& (0+255),w,b
  3880  001526  0A80               	xorlw	128
  3881  001528  0101               	movlb	1	; () banked
  3882  00152A  591C               	subwfb	??__doprnt& (0+255),w,b
  3883  00152C  B0D8               	btfsc	status,0,c
  3884  00152E  D003               	goto	l9665
  3885                           
  3886                           ; BSR set to: 1
  3887                           ;doprnt.c: 1340: c = prec;
  3888  001530  C136  F138         	movff	__doprnt@prec,__doprnt@c
  3889  001534  D018               	goto	l9669
  3890  001536                     l9665:
  3891                           
  3892                           ; BSR set to: 1
  3893                           ;doprnt.c: 1341: else if(prec < c)
  3894  001536  0101               	movlb	1	; () banked
  3895  001538  5137               	movf	(__doprnt@prec+1)& (0+255),w,b
  3896  00153A  0A80               	xorlw	128
  3897  00153C  0101               	movlb	1	; () banked
  3898  00153E  6F1C               	movwf	??__doprnt& (0+255),b
  3899  001540  0101               	movlb	1	; () banked
  3900  001542  5138               	movf	__doprnt@c& (0+255),w,b
  3901  001544  0101               	movlb	1	; () banked
  3902  001546  5D36               	subwf	__doprnt@prec& (0+255),w,b
  3903  001548  0E80               	movlw	128
  3904  00154A  0101               	movlb	1	; () banked
  3905  00154C  BF38               	btfsc	__doprnt@c& (0+255),7,b
  3906  00154E  0E7F               	movlw	127
  3907  001550  0101               	movlb	1	; () banked
  3908  001552  591C               	subwfb	??__doprnt& (0+255),w,b
  3909  001554  B0D8               	btfsc	status,0,c
  3910  001556  D007               	goto	l9669
  3911                           
  3912                           ; BSR set to: 1
  3913                           ;doprnt.c: 1342: prec = c;
  3914  001558  0101               	movlb	1	; () banked
  3915  00155A  5138               	movf	__doprnt@c& (0+255),w,b
  3916  00155C  0101               	movlb	1	; () banked
  3917  00155E  6F36               	movwf	__doprnt@prec& (0+255),b
  3918  001560  6B37               	clrf	(__doprnt@prec+1)& (0+255),b
  3919  001562  BF36               	btfsc	__doprnt@prec& (0+255),7,b
  3920  001564  0737               	decf	(__doprnt@prec+1)& (0+255),f,b
  3921  001566                     l9669:
  3922                           
  3923                           ; BSR set to: 1
  3924                           ;doprnt.c: 1345: if(width && flag & 0x03)
  3925  001566  0101               	movlb	1	; () banked
  3926  001568  512F               	movf	__doprnt@width& (0+255),w,b
  3927  00156A  0101               	movlb	1	; () banked
  3928  00156C  1130               	iorwf	(__doprnt@width+1)& (0+255),w,b
  3929  00156E  B4D8               	btfsc	status,2,c
  3930  001570  D014               	goto	l9675
  3931                           
  3932                           ; BSR set to: 1
  3933  001572  0E03               	movlw	3
  3934  001574  0101               	movlb	1	; () banked
  3935  001576  1534               	andwf	__doprnt@flag& (0+255),w,b
  3936  001578  0101               	movlb	1	; () banked
  3937  00157A  6F1C               	movwf	??__doprnt& (0+255),b
  3938  00157C  0E00               	movlw	0
  3939  00157E  0101               	movlb	1	; () banked
  3940  001580  1535               	andwf	(__doprnt@flag+1)& (0+255),w,b
  3941  001582  0101               	movlb	1	; () banked
  3942  001584  6F1D               	movwf	(??__doprnt+1)& (0+255),b
  3943  001586  0101               	movlb	1	; () banked
  3944  001588  511C               	movf	??__doprnt& (0+255),w,b
  3945  00158A  0101               	movlb	1	; () banked
  3946  00158C  111D               	iorwf	(??__doprnt+1)& (0+255),w,b
  3947  00158E  B4D8               	btfsc	status,2,c
  3948  001590  D004               	goto	l9675
  3949                           
  3950                           ; BSR set to: 1
  3951                           ;doprnt.c: 1346: width--;
  3952  001592  0101               	movlb	1	; () banked
  3953  001594  072F               	decf	__doprnt@width& (0+255),f,b
  3954  001596  A0D8               	btfss	status,0,c
  3955  001598  0730               	decf	(__doprnt@width+1)& (0+255),f,b
  3956  00159A                     l9675:
  3957                           
  3958                           ; BSR set to: 1
  3959                           ;doprnt.c: 1348: if(flag & 0x4000) {
  3960  00159A  0101               	movlb	1	; () banked
  3961  00159C  AD35               	btfss	(__doprnt@flag+1)& (0+255),6,b
  3962  00159E  D01E               	goto	l9683
  3963                           
  3964                           ; BSR set to: 1
  3965                           ;doprnt.c: 1349: if(width > prec)
  3966  0015A0  0101               	movlb	1	; () banked
  3967  0015A2  512F               	movf	__doprnt@width& (0+255),w,b
  3968  0015A4  0101               	movlb	1	; () banked
  3969  0015A6  5D36               	subwf	__doprnt@prec& (0+255),w,b
  3970  0015A8  0101               	movlb	1	; () banked
  3971  0015AA  5137               	movf	(__doprnt@prec+1)& (0+255),w,b
  3972  0015AC  0A80               	xorlw	128
  3973  0015AE  0101               	movlb	1	; () banked
  3974  0015B0  6F1C               	movwf	??__doprnt& (0+255),b
  3975  0015B2  0101               	movlb	1	; () banked
  3976  0015B4  5130               	movf	(__doprnt@width+1)& (0+255),w,b
  3977  0015B6  0A80               	xorlw	128
  3978  0015B8  0101               	movlb	1	; () banked
  3979  0015BA  591C               	subwfb	??__doprnt& (0+255),w,b
  3980  0015BC  B0D8               	btfsc	status,0,c
  3981  0015BE  D009               	goto	l9681
  3982                           
  3983                           ; BSR set to: 1
  3984                           ;doprnt.c: 1350: width -= prec;
  3985  0015C0  0101               	movlb	1	; () banked
  3986  0015C2  5136               	movf	__doprnt@prec& (0+255),w,b
  3987  0015C4  0101               	movlb	1	; () banked
  3988  0015C6  5F2F               	subwf	__doprnt@width& (0+255),f,b
  3989  0015C8  0101               	movlb	1	; () banked
  3990  0015CA  5137               	movf	(__doprnt@prec+1)& (0+255),w,b
  3991  0015CC  0101               	movlb	1	; () banked
  3992  0015CE  5B30               	subwfb	(__doprnt@width+1)& (0+255),f,b
  3993  0015D0  D005               	goto	l9683
  3994  0015D2                     l9681:
  3995                           
  3996                           ; BSR set to: 1
  3997                           ;doprnt.c: 1351: else
  3998                           ;doprnt.c: 1352: width = 0;
  3999  0015D2  0E00               	movlw	0
  4000  0015D4  0101               	movlb	1	; () banked
  4001  0015D6  6F30               	movwf	(__doprnt@width+1)& (0+255),b
  4002  0015D8  0E00               	movlw	0
  4003  0015DA  6F2F               	movwf	__doprnt@width& (0+255),b
  4004  0015DC                     l9683:
  4005                           
  4006                           ; BSR set to: 1
  4007                           ;doprnt.c: 1353: }
  4008                           ;doprnt.c: 1381: if(width > c)
  4009  0015DC  0E80               	movlw	128
  4010  0015DE  0101               	movlb	1	; () banked
  4011  0015E0  BF38               	btfsc	__doprnt@c& (0+255),7,b
  4012  0015E2  0E7F               	movlw	127
  4013  0015E4  0101               	movlb	1	; () banked
  4014  0015E6  6F1C               	movwf	??__doprnt& (0+255),b
  4015  0015E8  0101               	movlb	1	; () banked
  4016  0015EA  512F               	movf	__doprnt@width& (0+255),w,b
  4017  0015EC  0101               	movlb	1	; () banked
  4018  0015EE  5D38               	subwf	__doprnt@c& (0+255),w,b
  4019  0015F0  0101               	movlb	1	; () banked
  4020  0015F2  5130               	movf	(__doprnt@width+1)& (0+255),w,b
  4021  0015F4  0A80               	xorlw	128
  4022  0015F6  0101               	movlb	1	; () banked
  4023  0015F8  591C               	subwfb	??__doprnt& (0+255),w,b
  4024  0015FA  B0D8               	btfsc	status,0,c
  4025  0015FC  D00B               	goto	l9687
  4026                           
  4027                           ; BSR set to: 1
  4028                           ;doprnt.c: 1382: width -= c;
  4029  0015FE  0101               	movlb	1	; () banked
  4030  001600  5138               	movf	__doprnt@c& (0+255),w,b
  4031  001602  0101               	movlb	1	; () banked
  4032  001604  5F2F               	subwf	__doprnt@width& (0+255),f,b
  4033  001606  0E00               	movlw	0
  4034  001608  0101               	movlb	1	; () banked
  4035  00160A  BF38               	btfsc	__doprnt@c& (0+255),7,b
  4036  00160C  0EFF               	movlw	255
  4037  00160E  0101               	movlb	1	; () banked
  4038  001610  5B30               	subwfb	(__doprnt@width+1)& (0+255),f,b
  4039  001612  D005               	goto	l9689
  4040  001614                     l9687:
  4041                           
  4042                           ; BSR set to: 1
  4043                           ;doprnt.c: 1383: else
  4044                           ;doprnt.c: 1384: width = 0;
  4045  001614  0E00               	movlw	0
  4046  001616  0101               	movlb	1	; () banked
  4047  001618  6F30               	movwf	(__doprnt@width+1)& (0+255),b
  4048  00161A  0E00               	movlw	0
  4049  00161C  6F2F               	movwf	__doprnt@width& (0+255),b
  4050  00161E                     l9689:
  4051                           
  4052                           ; BSR set to: 1
  4053                           ;doprnt.c: 1387: if(flag & 0x04) {
  4054  00161E  0101               	movlb	1	; () banked
  4055  001620  A534               	btfss	__doprnt@flag& (0+255),2,b
  4056  001622  D083               	goto	l9713
  4057                           
  4058                           ; BSR set to: 1
  4059                           ;doprnt.c: 1392: if(flag & 0x03)
  4060  001624  0E03               	movlw	3
  4061  001626  0101               	movlb	1	; () banked
  4062  001628  1534               	andwf	__doprnt@flag& (0+255),w,b
  4063  00162A  0101               	movlb	1	; () banked
  4064  00162C  6F1C               	movwf	??__doprnt& (0+255),b
  4065  00162E  0E00               	movlw	0
  4066  001630  0101               	movlb	1	; () banked
  4067  001632  1535               	andwf	(__doprnt@flag+1)& (0+255),w,b
  4068  001634  0101               	movlb	1	; () banked
  4069  001636  6F1D               	movwf	(??__doprnt+1)& (0+255),b
  4070  001638  0101               	movlb	1	; () banked
  4071  00163A  511C               	movf	??__doprnt& (0+255),w,b
  4072  00163C  0101               	movlb	1	; () banked
  4073  00163E  111D               	iorwf	(??__doprnt+1)& (0+255),w,b
  4074  001640  B4D8               	btfsc	status,2,c
  4075  001642  D034               	goto	l9701
  4076                           
  4077                           ; BSR set to: 1
  4078                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  4079  001644  0101               	movlb	1	; () banked
  4080  001646  EE20 F002          	lfsr	2,2
  4081  00164A  5116               	movf	__doprnt@pb& (0+255),w,b
  4082  00164C  26D9               	addwf	fsr2l,f,c
  4083  00164E  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  4084  001650  22DA               	addwfc	fsr2h,f,c
  4085  001652  50DE               	movf	postinc2,w,c
  4086  001654  10DE               	iorwf	postinc2,w,c
  4087  001656  B4D8               	btfsc	status,2,c
  4088  001658  D014               	goto	l9697
  4089                           
  4090                           ; BSR set to: 1
  4091  00165A  0101               	movlb	1	; () banked
  4092  00165C  EE20 F002          	lfsr	2,2
  4093  001660  5116               	movf	__doprnt@pb& (0+255),w,b
  4094  001662  26D9               	addwf	fsr2l,f,c
  4095  001664  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  4096  001666  22DA               	addwfc	fsr2h,f,c
  4097  001668  D801               	call	u16318
  4098  00166A  D020               	goto	l9701
  4099  00166C                     u16318:
  4100  00166C  0005               	push	
  4101  00166E  6EFA               	movwf	pclath,c
  4102  001670  50DE               	movf	postinc2,w,c
  4103  001672  6EFD               	movwf	tosl,c
  4104  001674  50DE               	movf	postinc2,w,c
  4105  001676  6EFE               	movwf	tosh,c
  4106  001678  50F8               	movf	tblptru,w,c
  4107  00167A  6EFF               	movwf	tosu,c
  4108  00167C  50FA               	movf	pclath,w,c
  4109  00167E  0E2D               	movlw	45
  4110  001680  0012               	return		;indir
  4111  001682                     l9697:
  4112  001682  C116  FFD9         	movff	__doprnt@pb,fsr2l
  4113  001686  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  4114  00168A  CFDE F11C          	movff	postinc2,??__doprnt
  4115  00168E  CFDD F11D          	movff	postdec2,??__doprnt+1
  4116  001692  C11C  FFD9         	movff	??__doprnt,fsr2l
  4117  001696  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  4118  00169A  0E2D               	movlw	45
  4119  00169C  6EDF               	movwf	indf2,c
  4120  00169E  C116  FFD9         	movff	__doprnt@pb,fsr2l
  4121  0016A2  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  4122  0016A6  2ADE               	incf	postinc2,f,c
  4123  0016A8  0E00               	movlw	0
  4124  0016AA  22DD               	addwfc	postdec2,f,c
  4125  0016AC                     l9701:
  4126                           
  4127                           ;doprnt.c: 1415: if(width)
  4128  0016AC  0101               	movlb	1	; () banked
  4129  0016AE  512F               	movf	__doprnt@width& (0+255),w,b
  4130  0016B0  0101               	movlb	1	; () banked
  4131  0016B2  1130               	iorwf	(__doprnt@width+1)& (0+255),w,b
  4132  0016B4  B4D8               	btfsc	status,2,c
  4133  0016B6  D131               	goto	l9745
  4134                           
  4135                           ; BSR set to: 1
  4136                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  4137                           
  4138                           ; BSR set to: 1
  4139                           
  4140                           ;doprnt.c: 1416: do
  4141  0016B8  0101               	movlb	1	; () banked
  4142  0016BA  EE20 F002          	lfsr	2,2
  4143  0016BE  5116               	movf	__doprnt@pb& (0+255),w,b
  4144  0016C0  26D9               	addwf	fsr2l,f,c
  4145  0016C2  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  4146  0016C4  22DA               	addwfc	fsr2h,f,c
  4147  0016C6  50DE               	movf	postinc2,w,c
  4148  0016C8  10DE               	iorwf	postinc2,w,c
  4149  0016CA  B4D8               	btfsc	status,2,c
  4150  0016CC  D014               	goto	l9707
  4151                           
  4152                           ; BSR set to: 1
  4153  0016CE  0101               	movlb	1	; () banked
  4154  0016D0  EE20 F002          	lfsr	2,2
  4155  0016D4  5116               	movf	__doprnt@pb& (0+255),w,b
  4156  0016D6  26D9               	addwf	fsr2l,f,c
  4157  0016D8  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  4158  0016DA  22DA               	addwfc	fsr2h,f,c
  4159  0016DC  D801               	call	u16348
  4160  0016DE  D020               	goto	l9711
  4161  0016E0                     u16348:
  4162  0016E0  0005               	push	
  4163  0016E2  6EFA               	movwf	pclath,c
  4164  0016E4  50DE               	movf	postinc2,w,c
  4165  0016E6  6EFD               	movwf	tosl,c
  4166  0016E8  50DE               	movf	postinc2,w,c
  4167  0016EA  6EFE               	movwf	tosh,c
  4168  0016EC  50F8               	movf	tblptru,w,c
  4169  0016EE  6EFF               	movwf	tosu,c
  4170  0016F0  50FA               	movf	pclath,w,c
  4171  0016F2  0E30               	movlw	48
  4172  0016F4  0012               	return		;indir
  4173  0016F6                     l9707:
  4174  0016F6  C116  FFD9         	movff	__doprnt@pb,fsr2l
  4175  0016FA  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  4176  0016FE  CFDE F11C          	movff	postinc2,??__doprnt
  4177  001702  CFDD F11D          	movff	postdec2,??__doprnt+1
  4178  001706  C11C  FFD9         	movff	??__doprnt,fsr2l
  4179  00170A  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  4180  00170E  0E30               	movlw	48
  4181  001710  6EDF               	movwf	indf2,c
  4182  001712  C116  FFD9         	movff	__doprnt@pb,fsr2l
  4183  001716  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  4184  00171A  2ADE               	incf	postinc2,f,c
  4185  00171C  0E00               	movlw	0
  4186  00171E  22DD               	addwfc	postdec2,f,c
  4187  001720                     l9711:
  4188                           
  4189                           ;doprnt.c: 1418: while(--width);
  4190  001720  0101               	movlb	1	; () banked
  4191  001722  072F               	decf	__doprnt@width& (0+255),f,b
  4192  001724  A0D8               	btfss	status,0,c
  4193  001726  0730               	decf	(__doprnt@width+1)& (0+255),f,b
  4194  001728  D7C1               	goto	l9701
  4195  00172A                     l9713:
  4196                           
  4197                           ; BSR set to: 1
  4198                           ;doprnt.c: 1422: {
  4199                           ;doprnt.c: 1424: if(width
  4200                           ;doprnt.c: 1428: )
  4201  00172A  0101               	movlb	1	; () banked
  4202  00172C  512F               	movf	__doprnt@width& (0+255),w,b
  4203  00172E  0101               	movlb	1	; () banked
  4204  001730  1130               	iorwf	(__doprnt@width+1)& (0+255),w,b
  4205  001732  B4D8               	btfsc	status,2,c
  4206  001734  D03E               	goto	l9725
  4207  001736                     l9715:
  4208                           
  4209                           ; BSR set to: 1
  4210                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  4211  001736  0101               	movlb	1	; () banked
  4212  001738  EE20 F002          	lfsr	2,2
  4213  00173C  5116               	movf	__doprnt@pb& (0+255),w,b
  4214  00173E  26D9               	addwf	fsr2l,f,c
  4215  001740  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  4216  001742  22DA               	addwfc	fsr2h,f,c
  4217  001744  50DE               	movf	postinc2,w,c
  4218  001746  10DE               	iorwf	postinc2,w,c
  4219  001748  B4D8               	btfsc	status,2,c
  4220  00174A  D014               	goto	l9719
  4221                           
  4222                           ; BSR set to: 1
  4223  00174C  0101               	movlb	1	; () banked
  4224  00174E  EE20 F002          	lfsr	2,2
  4225  001752  5116               	movf	__doprnt@pb& (0+255),w,b
  4226  001754  26D9               	addwf	fsr2l,f,c
  4227  001756  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  4228  001758  22DA               	addwfc	fsr2h,f,c
  4229  00175A  D801               	call	u16388
  4230  00175C  D020               	goto	l9723
  4231  00175E                     u16388:
  4232  00175E  0005               	push	
  4233  001760  6EFA               	movwf	pclath,c
  4234  001762  50DE               	movf	postinc2,w,c
  4235  001764  6EFD               	movwf	tosl,c
  4236  001766  50DE               	movf	postinc2,w,c
  4237  001768  6EFE               	movwf	tosh,c
  4238  00176A  50F8               	movf	tblptru,w,c
  4239  00176C  6EFF               	movwf	tosu,c
  4240  00176E  50FA               	movf	pclath,w,c
  4241  001770  0E20               	movlw	32
  4242  001772  0012               	return		;indir
  4243  001774                     l9719:
  4244  001774  C116  FFD9         	movff	__doprnt@pb,fsr2l
  4245  001778  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  4246  00177C  CFDE F11C          	movff	postinc2,??__doprnt
  4247  001780  CFDD F11D          	movff	postdec2,??__doprnt+1
  4248  001784  C11C  FFD9         	movff	??__doprnt,fsr2l
  4249  001788  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  4250  00178C  0E20               	movlw	32
  4251  00178E  6EDF               	movwf	indf2,c
  4252  001790  C116  FFD9         	movff	__doprnt@pb,fsr2l
  4253  001794  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  4254  001798  2ADE               	incf	postinc2,f,c
  4255  00179A  0E00               	movlw	0
  4256  00179C  22DD               	addwfc	postdec2,f,c
  4257  00179E                     l9723:
  4258                           
  4259                           ;doprnt.c: 1431: while(--width);
  4260  00179E  0101               	movlb	1	; () banked
  4261  0017A0  072F               	decf	__doprnt@width& (0+255),f,b
  4262  0017A2  A0D8               	btfss	status,0,c
  4263  0017A4  0730               	decf	(__doprnt@width+1)& (0+255),f,b
  4264  0017A6  0101               	movlb	1	; () banked
  4265  0017A8  512F               	movf	__doprnt@width& (0+255),w,b
  4266  0017AA  0101               	movlb	1	; () banked
  4267  0017AC  1130               	iorwf	(__doprnt@width+1)& (0+255),w,b
  4268  0017AE  A4D8               	btfss	status,2,c
  4269  0017B0  D7C2               	goto	l9715
  4270  0017B2                     l9725:
  4271                           
  4272                           ; BSR set to: 1
  4273                           ;doprnt.c: 1438: if(flag & 0x03)
  4274  0017B2  0E03               	movlw	3
  4275  0017B4  0101               	movlb	1	; () banked
  4276  0017B6  1534               	andwf	__doprnt@flag& (0+255),w,b
  4277  0017B8  0101               	movlb	1	; () banked
  4278  0017BA  6F1C               	movwf	??__doprnt& (0+255),b
  4279  0017BC  0E00               	movlw	0
  4280  0017BE  0101               	movlb	1	; () banked
  4281  0017C0  1535               	andwf	(__doprnt@flag+1)& (0+255),w,b
  4282  0017C2  0101               	movlb	1	; () banked
  4283  0017C4  6F1D               	movwf	(??__doprnt+1)& (0+255),b
  4284  0017C6  0101               	movlb	1	; () banked
  4285  0017C8  511C               	movf	??__doprnt& (0+255),w,b
  4286  0017CA  0101               	movlb	1	; () banked
  4287  0017CC  111D               	iorwf	(??__doprnt+1)& (0+255),w,b
  4288  0017CE  B4D8               	btfsc	status,2,c
  4289  0017D0  D0A4               	goto	l9745
  4290                           
  4291                           ; BSR set to: 1
  4292                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  4293  0017D2  0101               	movlb	1	; () banked
  4294  0017D4  EE20 F002          	lfsr	2,2
  4295  0017D8  5116               	movf	__doprnt@pb& (0+255),w,b
  4296  0017DA  26D9               	addwf	fsr2l,f,c
  4297  0017DC  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  4298  0017DE  22DA               	addwfc	fsr2h,f,c
  4299  0017E0  50DE               	movf	postinc2,w,c
  4300  0017E2  10DE               	iorwf	postinc2,w,c
  4301  0017E4  B4D8               	btfsc	status,2,c
  4302  0017E6  D014               	goto	l9731
  4303                           
  4304                           ; BSR set to: 1
  4305  0017E8  0101               	movlb	1	; () banked
  4306  0017EA  EE20 F002          	lfsr	2,2
  4307  0017EE  5116               	movf	__doprnt@pb& (0+255),w,b
  4308  0017F0  26D9               	addwf	fsr2l,f,c
  4309  0017F2  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  4310  0017F4  22DA               	addwfc	fsr2h,f,c
  4311  0017F6  D801               	call	u16428
  4312  0017F8  D090               	goto	l9745
  4313  0017FA                     u16428:
  4314  0017FA  0005               	push	
  4315  0017FC  6EFA               	movwf	pclath,c
  4316  0017FE  50DE               	movf	postinc2,w,c
  4317  001800  6EFD               	movwf	tosl,c
  4318  001802  50DE               	movf	postinc2,w,c
  4319  001804  6EFE               	movwf	tosh,c
  4320  001806  50F8               	movf	tblptru,w,c
  4321  001808  6EFF               	movwf	tosu,c
  4322  00180A  50FA               	movf	pclath,w,c
  4323  00180C  0E2D               	movlw	45
  4324  00180E  0012               	return		;indir
  4325  001810                     l9731:
  4326  001810  C116  FFD9         	movff	__doprnt@pb,fsr2l
  4327  001814  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  4328  001818  CFDE F11C          	movff	postinc2,??__doprnt
  4329  00181C  CFDD F11D          	movff	postdec2,??__doprnt+1
  4330  001820  C11C  FFD9         	movff	??__doprnt,fsr2l
  4331  001824  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  4332  001828  0E2D               	movlw	45
  4333  00182A  6EDF               	movwf	indf2,c
  4334  00182C  D06F               	goto	l9743
  4335  00182E                     l9735:
  4336                           
  4337                           ;doprnt.c: 1478: {
  4338                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4339  00182E  C136  F11C         	movff	__doprnt@prec,??__doprnt
  4340  001832  C137  F11D         	movff	__doprnt@prec+1,??__doprnt+1
  4341  001836  0101               	movlb	1	; () banked
  4342  001838  90D8               	bcf	status,0,c
  4343  00183A  371C               	rlcf	??__doprnt& (0+255),f,b
  4344  00183C  371D               	rlcf	(??__doprnt+1)& (0+255),f,b
  4345  00183E  0101               	movlb	1	; () banked
  4346  001840  90D8               	bcf	status,0,c
  4347  001842  371C               	rlcf	??__doprnt& (0+255),f,b
  4348  001844  371D               	rlcf	(??__doprnt+1)& (0+255),f,b
  4349  001846  0E01               	movlw	low _dpowers
  4350  001848  0101               	movlb	1	; () banked
  4351  00184A  251C               	addwf	??__doprnt& (0+255),w,b
  4352  00184C  6EF6               	movwf	tblptrl,c
  4353  00184E  0E06               	movlw	high _dpowers
  4354  001850  211D               	addwfc	(??__doprnt+1)& (0+255),w,b
  4355  001852  6EF7               	movwf	tblptrh,c
  4356  001854                     	if	0	;There are less than 3 active tblptr bytes
  4357  001854                     	endif
  4358  001854  0009               	tblrd		*+
  4359  001856  CFF5 F092          	movff	tablat,___lldiv@divisor
  4360  00185A  0009               	tblrd		*+
  4361  00185C  CFF5 F093          	movff	tablat,___lldiv@divisor+1
  4362  001860  0009               	tblrd		*+
  4363  001862  CFF5 F094          	movff	tablat,___lldiv@divisor+2
  4364  001866  000A               	tblrd		*-
  4365  001868  CFF5 F095          	movff	tablat,___lldiv@divisor+3
  4366  00186C  C127  F08E         	movff	__doprnt@val,___lldiv@dividend
  4367  001870  C128  F08F         	movff	__doprnt@val+1,___lldiv@dividend+1
  4368  001874  C129  F090         	movff	__doprnt@val+2,___lldiv@dividend+2
  4369  001878  C12A  F091         	movff	__doprnt@val+3,___lldiv@dividend+3
  4370  00187C  ECC5  F027         	call	___lldiv
  4371  001880  C08E  F09B         	movff	?___lldiv,___llmod@dividend
  4372  001884  C08F  F09C         	movff	?___lldiv+1,___llmod@dividend+1
  4373  001888  C090  F09D         	movff	?___lldiv+2,___llmod@dividend+2
  4374  00188C  C091  F09E         	movff	?___lldiv+3,___llmod@dividend+3
  4375  001890  0E0A               	movlw	10
  4376  001892  0100               	movlb	0	; () banked
  4377  001894  6F9F               	movwf	___llmod@divisor& (0+255),b
  4378  001896  0E00               	movlw	0
  4379  001898  6FA0               	movwf	(___llmod@divisor+1)& (0+255),b
  4380  00189A  0E00               	movlw	0
  4381  00189C  6FA1               	movwf	(___llmod@divisor+2)& (0+255),b
  4382  00189E  0E00               	movlw	0
  4383  0018A0  6FA2               	movwf	(___llmod@divisor+3)& (0+255),b
  4384  0018A2  ECCB  F028         	call	___llmod	;wreg free
  4385  0018A6  0100               	movlb	0	; () banked
  4386  0018A8  519B               	movf	?___llmod& (0+255),w,b
  4387  0018AA  0F30               	addlw	48
  4388  0018AC  0101               	movlb	1	; () banked
  4389  0018AE  6F38               	movwf	__doprnt@c& (0+255),b
  4390                           
  4391                           ; BSR set to: 1
  4392                           ;doprnt.c: 1523: }
  4393                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  4394  0018B0  0101               	movlb	1	; () banked
  4395  0018B2  EE20 F002          	lfsr	2,2
  4396  0018B6  5116               	movf	__doprnt@pb& (0+255),w,b
  4397  0018B8  26D9               	addwf	fsr2l,f,c
  4398  0018BA  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  4399  0018BC  22DA               	addwfc	fsr2h,f,c
  4400  0018BE  50DE               	movf	postinc2,w,c
  4401  0018C0  10DE               	iorwf	postinc2,w,c
  4402  0018C2  B4D8               	btfsc	status,2,c
  4403  0018C4  D015               	goto	l9741
  4404                           
  4405                           ; BSR set to: 1
  4406  0018C6  0101               	movlb	1	; () banked
  4407  0018C8  EE20 F002          	lfsr	2,2
  4408  0018CC  5116               	movf	__doprnt@pb& (0+255),w,b
  4409  0018CE  26D9               	addwf	fsr2l,f,c
  4410  0018D0  5117               	movf	(__doprnt@pb+1)& (0+255),w,b
  4411  0018D2  22DA               	addwfc	fsr2h,f,c
  4412  0018D4  D801               	call	u16448
  4413  0018D6  D021               	goto	l9745
  4414  0018D8                     u16448:
  4415  0018D8  0005               	push	
  4416  0018DA  6EFA               	movwf	pclath,c
  4417  0018DC  50DE               	movf	postinc2,w,c
  4418  0018DE  6EFD               	movwf	tosl,c
  4419  0018E0  50DE               	movf	postinc2,w,c
  4420  0018E2  6EFE               	movwf	tosh,c
  4421  0018E4  50F8               	movf	tblptru,w,c
  4422  0018E6  6EFF               	movwf	tosu,c
  4423  0018E8  50FA               	movf	pclath,w,c
  4424  0018EA  0101               	movlb	1	; () banked
  4425  0018EC  5138               	movf	__doprnt@c& (0+255),w,b
  4426  0018EE  0012               	return		;indir
  4427  0018F0                     l9741:
  4428  0018F0  C116  FFD9         	movff	__doprnt@pb,fsr2l
  4429  0018F4  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  4430  0018F8  CFDE F11C          	movff	postinc2,??__doprnt
  4431  0018FC  CFDD F11D          	movff	postdec2,??__doprnt+1
  4432  001900  C11C  FFD9         	movff	??__doprnt,fsr2l
  4433  001904  C11D  FFDA         	movff	??__doprnt+1,fsr2h
  4434  001908  C138  FFDF         	movff	__doprnt@c,indf2
  4435  00190C                     l9743:
  4436  00190C  C116  FFD9         	movff	__doprnt@pb,fsr2l
  4437  001910  C117  FFDA         	movff	__doprnt@pb+1,fsr2h
  4438  001914  2ADE               	incf	postinc2,f,c
  4439  001916  0E00               	movlw	0
  4440  001918  22DD               	addwfc	postdec2,f,c
  4441  00191A                     l9745:
  4442  00191A  0101               	movlb	1	; () banked
  4443  00191C  0736               	decf	__doprnt@prec& (0+255),f,b
  4444  00191E  A0D8               	btfss	status,0,c
  4445  001920  0737               	decf	(__doprnt@prec+1)& (0+255),f,b
  4446  001922  0101               	movlb	1	; () banked
  4447  001924  2936               	incf	__doprnt@prec& (0+255),w,b
  4448  001926  E183               	bnz	l9735
  4449  001928  0101               	movlb	1	; () banked
  4450  00192A  2937               	incf	(__doprnt@prec+1)& (0+255),w,b
  4451  00192C  A4D8               	btfss	status,2,c
  4452  00192E  D77F               	goto	l9735
  4453  001930                     l9747:
  4454  001930  C118  FFF6         	movff	__doprnt@f,tblptrl
  4455  001934  C119  FFF7         	movff	__doprnt@f+1,tblptrh
  4456  001938  0101               	movlb	1	; () banked
  4457  00193A  4B18               	infsnz	__doprnt@f& (0+255),f,b
  4458  00193C  2B19               	incf	(__doprnt@f+1)& (0+255),f,b
  4459  00193E                     	if	0	;tblptru may be non-zero
  4460  00193E                     	endif
  4461  00193E                     	if	0	;tblptru may be non-zero
  4462  00193E                     	endif
  4463  00193E  0008               	tblrd		*
  4464  001940  CFF5 F138          	movff	tablat,__doprnt@c
  4465  001944  0101               	movlb	1	; () banked
  4466  001946  5138               	movf	__doprnt@c& (0+255),w,b
  4467  001948  A4D8               	btfss	status,2,c
  4468  00194A  EF79  F003         	goto	l9359
  4469  00194E                     l9749:
  4470                           
  4471                           ; BSR set to: 1
  4472                           ;doprnt.c: 1540: return 0;
  4473  00194E  0E00               	movlw	0
  4474  001950  0101               	movlb	1	; () banked
  4475  001952  6F17               	movwf	(?__doprnt+1)& (0+255),b
  4476  001954  0E00               	movlw	0
  4477  001956  6F16               	movwf	?__doprnt& (0+255),b
  4478  001958  0012               	return	
  4479  00195A                     __end_of__doprnt:
  4480                           	opt stack 0
  4481                           tosu	equ	0xFFF
  4482                           tosh	equ	0xFFE
  4483                           tosl	equ	0xFFD
  4484                           pclath	equ	0xFFA
  4485                           tblptru	equ	0xFF8
  4486                           tblptrh	equ	0xFF7
  4487                           tblptrl	equ	0xFF6
  4488                           tablat	equ	0xFF5
  4489                           prodh	equ	0xFF4
  4490                           prodl	equ	0xFF3
  4491                           intcon	equ	0xFF2
  4492                           postinc0	equ	0xFEE
  4493                           wreg	equ	0xFE8
  4494                           indf2	equ	0xFDF
  4495                           postinc2	equ	0xFDE
  4496                           postdec2	equ	0xFDD
  4497                           fsr2h	equ	0xFDA
  4498                           fsr2l	equ	0xFD9
  4499                           status	equ	0xFD8
  4500                           
  4501 ;; *************** function _scale *****************
  4502 ;; Defined at:
  4503 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;  scl             1    wreg     char 
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;  scl             1    3[BANK1 ] char 
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  3   81[BANK0 ] char 
  4510 ;; Registers used:
  4511 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4517 ;;      Params:         0       3       0       0       0       0       0
  4518 ;;      Locals:         0       0       4       0       0       0       0
  4519 ;;      Temps:          0       0       0       0       0       0       0
  4520 ;;      Totals:         0       3       4       0       0       0       0
  4521 ;;Total ram usage:        7 bytes
  4522 ;; Hardware stack levels used:    1
  4523 ;; Hardware stack levels required when called:    9
  4524 ;; This function calls:
  4525 ;;		___awdiv
  4526 ;;		___awmod
  4527 ;;		___ftmul
  4528 ;;		___wmul
  4529 ;; This function is called by:
  4530 ;;		__doprnt
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           
  4534                           	psect	text3
  4535  002AD2                     __ptext3:
  4536                           	opt stack 0
  4537  002AD2                     _scale:
  4538                           	opt stack 19
  4539                           
  4540                           ; BSR set to: 1
  4541                           ;incstack = 0
  4542                           ;scale@scl stored from wreg
  4543  002AD2  0101               	movlb	1	; () banked
  4544  002AD4  6F03               	movwf	scale@scl& (0+255),b
  4545                           
  4546                           ;doprnt.c: 428: if(scl < 0) {
  4547  002AD6  0101               	movlb	1	; () banked
  4548  002AD8  AF03               	btfss	scale@scl& (0+255),7,b
  4549  002ADA  D12A               	goto	l6181
  4550                           
  4551                           ; BSR set to: 1
  4552                           ;doprnt.c: 429: scl = -scl;
  4553  002ADC  0101               	movlb	1	; () banked
  4554  002ADE  6D03               	negf	scale@scl& (0+255),b
  4555                           
  4556                           ;doprnt.c: 430: if(scl>=110)
  4557  002AE0  0101               	movlb	1	; () banked
  4558  002AE2  5103               	movf	scale@scl& (0+255),w,b
  4559  002AE4  0A80               	xorlw	128
  4560  002AE6  0F12               	addlw	-238
  4561  002AE8  A0D8               	btfss	status,0,c
  4562  002AEA  D0AC               	goto	l6171
  4563                           
  4564                           ; BSR set to: 1
  4565                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4566  002AEC  0E00               	movlw	0
  4567  002AEE  0100               	movlb	0	; () banked
  4568  002AF0  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4569  002AF2  0E03               	movlw	3
  4570  002AF4  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  4571  002AF6  0E00               	movlw	0
  4572  002AF8  0100               	movlb	0	; () banked
  4573  002AFA  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  4574  002AFC  0E0A               	movlw	10
  4575  002AFE  6F96               	movwf	___awdiv@divisor& (0+255),b
  4576  002B00  0E00               	movlw	0
  4577  002B02  0100               	movlb	0	; () banked
  4578  002B04  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  4579  002B06  0E64               	movlw	100
  4580  002B08  6F90               	movwf	___awmod@divisor& (0+255),b
  4581  002B0A  0101               	movlb	1	; () banked
  4582  002B0C  5103               	movf	scale@scl& (0+255),w,b
  4583  002B0E  0100               	movlb	0	; () banked
  4584  002B10  6F8E               	movwf	___awmod@dividend& (0+255),b
  4585  002B12  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  4586  002B14  BF8E               	btfsc	___awmod@dividend& (0+255),7,b
  4587  002B16  078F               	decf	(___awmod@dividend+1)& (0+255),f,b
  4588  002B18  EC7A  F028         	call	___awmod
  4589  002B1C  C08E  F094         	movff	?___awmod,___awdiv@dividend
  4590  002B20  C08F  F095         	movff	?___awmod+1,___awdiv@dividend+1
  4591  002B24  EC66  F027         	call	___awdiv	;wreg free
  4592  002B28  0E09               	movlw	9
  4593  002B2A  0100               	movlb	0	; () banked
  4594  002B2C  2594               	addwf	?___awdiv& (0+255),w,b
  4595  002B2E  0100               	movlb	0	; () banked
  4596  002B30  6F9C               	movwf	___wmul@multiplier& (0+255),b
  4597  002B32  0E00               	movlw	0
  4598  002B34  0100               	movlb	0	; () banked
  4599  002B36  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  4600  002B38  0100               	movlb	0	; () banked
  4601  002B3A  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  4602  002B3C  EC16  F02C         	call	___wmul	;wreg free
  4603  002B40  0E29               	movlw	low __npowers_
  4604  002B42  0100               	movlb	0	; () banked
  4605  002B44  259C               	addwf	?___wmul& (0+255),w,b
  4606  002B46  6EF6               	movwf	tblptrl,c
  4607  002B48  0E06               	movlw	high __npowers_
  4608  002B4A  0100               	movlb	0	; () banked
  4609  002B4C  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  4610  002B4E  6EF7               	movwf	tblptrh,c
  4611  002B50                     	if	0	;There are less than 3 active tblptr bytes
  4612  002B50                     	endif
  4613  002B50  0009               	tblrd		*+
  4614  002B52  CFF5 F0A5          	movff	tablat,___ftmul@f2
  4615  002B56  0009               	tblrd		*+
  4616  002B58  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  4617  002B5C  000A               	tblrd		*-
  4618  002B5E  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  4619  002B62  0E00               	movlw	0
  4620  002B64  0100               	movlb	0	; () banked
  4621  002B66  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  4622  002B68  0E64               	movlw	100
  4623  002B6A  6F96               	movwf	___awdiv@divisor& (0+255),b
  4624  002B6C  0101               	movlb	1	; () banked
  4625  002B6E  5103               	movf	scale@scl& (0+255),w,b
  4626  002B70  0100               	movlb	0	; () banked
  4627  002B72  6F94               	movwf	___awdiv@dividend& (0+255),b
  4628  002B74  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  4629  002B76  BF94               	btfsc	___awdiv@dividend& (0+255),7,b
  4630  002B78  0795               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4631  002B7A  EC66  F027         	call	___awdiv	;wreg free
  4632  002B7E  0E12               	movlw	18
  4633  002B80  0100               	movlb	0	; () banked
  4634  002B82  2594               	addwf	?___awdiv& (0+255),w,b
  4635  002B84  0100               	movlb	0	; () banked
  4636  002B86  6F9C               	movwf	___wmul@multiplier& (0+255),b
  4637  002B88  0E00               	movlw	0
  4638  002B8A  0100               	movlb	0	; () banked
  4639  002B8C  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  4640  002B8E  0100               	movlb	0	; () banked
  4641  002B90  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  4642  002B92  0E00               	movlw	0
  4643  002B94  0100               	movlb	0	; () banked
  4644  002B96  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4645  002B98  0E03               	movlw	3
  4646  002B9A  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  4647  002B9C  EC16  F02C         	call	___wmul	;wreg free
  4648  002BA0  0E29               	movlw	low __npowers_
  4649  002BA2  0100               	movlb	0	; () banked
  4650  002BA4  259C               	addwf	?___wmul& (0+255),w,b
  4651  002BA6  6EF6               	movwf	tblptrl,c
  4652  002BA8  0E06               	movlw	high __npowers_
  4653  002BAA  0100               	movlb	0	; () banked
  4654  002BAC  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  4655  002BAE  6EF7               	movwf	tblptrh,c
  4656  002BB0                     	if	0	;There are less than 3 active tblptr bytes
  4657  002BB0                     	endif
  4658  002BB0  0009               	tblrd		*+
  4659  002BB2  CFF5 F0A2          	movff	tablat,___ftmul@f1
  4660  002BB6  0009               	tblrd		*+
  4661  002BB8  CFF5 F0A3          	movff	tablat,___ftmul@f1+1
  4662  002BBC  000A               	tblrd		*-
  4663  002BBE  CFF5 F0A4          	movff	tablat,___ftmul@f1+2
  4664  002BC2  EC82  F021         	call	___ftmul	;wreg free
  4665  002BC6  C0A2  F100         	movff	?___ftmul,_scale$1720
  4666  002BCA  C0A3  F101         	movff	?___ftmul+1,_scale$1720+1
  4667  002BCE  C0A4  F102         	movff	?___ftmul+2,_scale$1720+2
  4668                           
  4669                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4670  002BD2  C100  F0A2         	movff	_scale$1720,___ftmul@f1
  4671  002BD6  C101  F0A3         	movff	_scale$1720+1,___ftmul@f1+1
  4672  002BDA  C102  F0A4         	movff	_scale$1720+2,___ftmul@f1+2
  4673  002BDE  0E00               	movlw	0
  4674  002BE0  0100               	movlb	0	; () banked
  4675  002BE2  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4676  002BE4  0E03               	movlw	3
  4677  002BE6  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  4678  002BE8  0E00               	movlw	0
  4679  002BEA  0100               	movlb	0	; () banked
  4680  002BEC  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  4681  002BEE  0E0A               	movlw	10
  4682  002BF0  6F90               	movwf	___awmod@divisor& (0+255),b
  4683  002BF2  0101               	movlb	1	; () banked
  4684  002BF4  5103               	movf	scale@scl& (0+255),w,b
  4685  002BF6  0100               	movlb	0	; () banked
  4686  002BF8  6F8E               	movwf	___awmod@dividend& (0+255),b
  4687  002BFA  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  4688  002BFC  BF8E               	btfsc	___awmod@dividend& (0+255),7,b
  4689  002BFE  078F               	decf	(___awmod@dividend+1)& (0+255),f,b
  4690  002C00  EC7A  F028         	call	___awmod	;wreg free
  4691  002C04  C08E  F09C         	movff	?___awmod,___wmul@multiplier
  4692  002C08  C08F  F09D         	movff	?___awmod+1,___wmul@multiplier+1
  4693  002C0C  EC16  F02C         	call	___wmul	;wreg free
  4694  002C10  0E29               	movlw	low __npowers_
  4695  002C12  0100               	movlb	0	; () banked
  4696  002C14  259C               	addwf	?___wmul& (0+255),w,b
  4697  002C16  6EF6               	movwf	tblptrl,c
  4698  002C18  0E06               	movlw	high __npowers_
  4699  002C1A  0100               	movlb	0	; () banked
  4700  002C1C  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  4701  002C1E  6EF7               	movwf	tblptrh,c
  4702  002C20                     	if	0	;There are less than 3 active tblptr bytes
  4703  002C20                     	endif
  4704  002C20  0009               	tblrd		*+
  4705  002C22  CFF5 F0A5          	movff	tablat,___ftmul@f2
  4706  002C26  0009               	tblrd		*+
  4707  002C28  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  4708  002C2C  000A               	tblrd		*-
  4709  002C2E  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  4710  002C32  EC82  F021         	call	___ftmul	;wreg free
  4711  002C36  C0A2  F0B1         	movff	?___ftmul,?_scale
  4712  002C3A  C0A3  F0B2         	movff	?___ftmul+1,?_scale+1
  4713  002C3E  C0A4  F0B3         	movff	?___ftmul+2,?_scale+2
  4714  002C42  0012               	return	
  4715  002C44                     l6171:
  4716                           
  4717                           ;doprnt.c: 432: else if(scl > 10)
  4718  002C44  0101               	movlb	1	; () banked
  4719  002C46  5103               	movf	scale@scl& (0+255),w,b
  4720  002C48  0A80               	xorlw	128
  4721  002C4A  0F75               	addlw	-139
  4722  002C4C  A0D8               	btfss	status,0,c
  4723  002C4E  D05D               	goto	l6177
  4724                           
  4725                           ; BSR set to: 1
  4726                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4727  002C50  0E00               	movlw	0
  4728  002C52  0100               	movlb	0	; () banked
  4729  002C54  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  4730  002C56  0E0A               	movlw	10
  4731  002C58  6F96               	movwf	___awdiv@divisor& (0+255),b
  4732  002C5A  0101               	movlb	1	; () banked
  4733  002C5C  5103               	movf	scale@scl& (0+255),w,b
  4734  002C5E  0100               	movlb	0	; () banked
  4735  002C60  6F94               	movwf	___awdiv@dividend& (0+255),b
  4736  002C62  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  4737  002C64  BF94               	btfsc	___awdiv@dividend& (0+255),7,b
  4738  002C66  0795               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4739  002C68  EC66  F027         	call	___awdiv	;wreg free
  4740  002C6C  0E09               	movlw	9
  4741  002C6E  0100               	movlb	0	; () banked
  4742  002C70  2594               	addwf	?___awdiv& (0+255),w,b
  4743  002C72  0100               	movlb	0	; () banked
  4744  002C74  6F9C               	movwf	___wmul@multiplier& (0+255),b
  4745  002C76  0E00               	movlw	0
  4746  002C78  0100               	movlb	0	; () banked
  4747  002C7A  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  4748  002C7C  0100               	movlb	0	; () banked
  4749  002C7E  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  4750  002C80  0E00               	movlw	0
  4751  002C82  0100               	movlb	0	; () banked
  4752  002C84  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4753  002C86  0E03               	movlw	3
  4754  002C88  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  4755  002C8A  EC16  F02C         	call	___wmul	;wreg free
  4756  002C8E  0E29               	movlw	low __npowers_
  4757  002C90  0100               	movlb	0	; () banked
  4758  002C92  259C               	addwf	?___wmul& (0+255),w,b
  4759  002C94  6EF6               	movwf	tblptrl,c
  4760  002C96  0E06               	movlw	high __npowers_
  4761  002C98  0100               	movlb	0	; () banked
  4762  002C9A  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  4763  002C9C  6EF7               	movwf	tblptrh,c
  4764  002C9E                     	if	0	;There are less than 3 active tblptr bytes
  4765  002C9E                     	endif
  4766  002C9E  0009               	tblrd		*+
  4767  002CA0  CFF5 F0A2          	movff	tablat,___ftmul@f1
  4768  002CA4  0009               	tblrd		*+
  4769  002CA6  CFF5 F0A3          	movff	tablat,___ftmul@f1+1
  4770  002CAA  000A               	tblrd		*-
  4771  002CAC  CFF5 F0A4          	movff	tablat,___ftmul@f1+2
  4772  002CB0  0E00               	movlw	0
  4773  002CB2  0100               	movlb	0	; () banked
  4774  002CB4  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4775  002CB6  0E03               	movlw	3
  4776  002CB8  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  4777  002CBA  0E00               	movlw	0
  4778  002CBC  0100               	movlb	0	; () banked
  4779  002CBE  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  4780  002CC0  0E0A               	movlw	10
  4781  002CC2  6F90               	movwf	___awmod@divisor& (0+255),b
  4782  002CC4  0101               	movlb	1	; () banked
  4783  002CC6  5103               	movf	scale@scl& (0+255),w,b
  4784  002CC8  0100               	movlb	0	; () banked
  4785  002CCA  6F8E               	movwf	___awmod@dividend& (0+255),b
  4786  002CCC  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  4787  002CCE  BF8E               	btfsc	___awmod@dividend& (0+255),7,b
  4788  002CD0  078F               	decf	(___awmod@dividend+1)& (0+255),f,b
  4789  002CD2  EC7A  F028         	call	___awmod	;wreg free
  4790  002CD6  C08E  F09C         	movff	?___awmod,___wmul@multiplier
  4791  002CDA  C08F  F09D         	movff	?___awmod+1,___wmul@multiplier+1
  4792  002CDE  EC16  F02C         	call	___wmul	;wreg free
  4793  002CE2  0E29               	movlw	low __npowers_
  4794  002CE4  0100               	movlb	0	; () banked
  4795  002CE6  259C               	addwf	?___wmul& (0+255),w,b
  4796  002CE8  6EF6               	movwf	tblptrl,c
  4797  002CEA  0E06               	movlw	high __npowers_
  4798  002CEC  0100               	movlb	0	; () banked
  4799  002CEE  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  4800  002CF0  6EF7               	movwf	tblptrh,c
  4801  002CF2                     	if	0	;There are less than 3 active tblptr bytes
  4802  002CF2                     	endif
  4803  002CF2  0009               	tblrd		*+
  4804  002CF4  CFF5 F0A5          	movff	tablat,___ftmul@f2
  4805  002CF8  0009               	tblrd		*+
  4806  002CFA  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  4807  002CFE  000A               	tblrd		*-
  4808  002D00  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  4809  002D04  EC82  F021         	call	___ftmul	;wreg free
  4810  002D08  D796               	goto	L3
  4811  002D0A                     l6177:
  4812                           
  4813                           ;doprnt.c: 434: return _npowers_[scl];
  4814  002D0A  0101               	movlb	1	; () banked
  4815  002D0C  5103               	movf	scale@scl& (0+255),w,b
  4816  002D0E  0D03               	mullw	3
  4817  002D10  0E29               	movlw	low __npowers_
  4818  002D12  24F3               	addwf	prodl,w,c
  4819  002D14  6EF6               	movwf	tblptrl,c
  4820  002D16  0E06               	movlw	high __npowers_
  4821  002D18  20F4               	addwfc	prodh,w,c
  4822  002D1A  6EF7               	movwf	tblptrh,c
  4823  002D1C                     	if	0	;There are less than 3 active tblptr bytes
  4824  002D1C                     	endif
  4825  002D1C  0009               	tblrd		*+
  4826  002D1E  CFF5 F0B1          	movff	tablat,?_scale
  4827  002D22  0009               	tblrd		*+
  4828  002D24  CFF5 F0B2          	movff	tablat,?_scale+1
  4829  002D28  000A               	tblrd		*-
  4830  002D2A  CFF5 F0B3          	movff	tablat,?_scale+2
  4831                           
  4832                           ; BSR set to: 1
  4833  002D2E  0012               	return	
  4834  002D30                     l6181:
  4835                           
  4836                           ; BSR set to: 1
  4837                           ;doprnt.c: 435: }
  4838                           ;doprnt.c: 436: if(scl>=110)
  4839  002D30  0101               	movlb	1	; () banked
  4840  002D32  5103               	movf	scale@scl& (0+255),w,b
  4841  002D34  0A80               	xorlw	128
  4842  002D36  0F12               	addlw	-238
  4843  002D38  A0D8               	btfss	status,0,c
  4844  002D3A  D0AC               	goto	l6189
  4845                           
  4846                           ; BSR set to: 1
  4847                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4848  002D3C  0E00               	movlw	0
  4849  002D3E  0100               	movlb	0	; () banked
  4850  002D40  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4851  002D42  0E03               	movlw	3
  4852  002D44  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  4853  002D46  0E00               	movlw	0
  4854  002D48  0100               	movlb	0	; () banked
  4855  002D4A  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  4856  002D4C  0E0A               	movlw	10
  4857  002D4E  6F96               	movwf	___awdiv@divisor& (0+255),b
  4858  002D50  0E00               	movlw	0
  4859  002D52  0100               	movlb	0	; () banked
  4860  002D54  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  4861  002D56  0E64               	movlw	100
  4862  002D58  6F90               	movwf	___awmod@divisor& (0+255),b
  4863  002D5A  0101               	movlb	1	; () banked
  4864  002D5C  5103               	movf	scale@scl& (0+255),w,b
  4865  002D5E  0100               	movlb	0	; () banked
  4866  002D60  6F8E               	movwf	___awmod@dividend& (0+255),b
  4867  002D62  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  4868  002D64  BF8E               	btfsc	___awmod@dividend& (0+255),7,b
  4869  002D66  078F               	decf	(___awmod@dividend+1)& (0+255),f,b
  4870  002D68  EC7A  F028         	call	___awmod	;wreg free
  4871  002D6C  C08E  F094         	movff	?___awmod,___awdiv@dividend
  4872  002D70  C08F  F095         	movff	?___awmod+1,___awdiv@dividend+1
  4873  002D74  EC66  F027         	call	___awdiv	;wreg free
  4874  002D78  0E09               	movlw	9
  4875  002D7A  0100               	movlb	0	; () banked
  4876  002D7C  2594               	addwf	?___awdiv& (0+255),w,b
  4877  002D7E  0100               	movlb	0	; () banked
  4878  002D80  6F9C               	movwf	___wmul@multiplier& (0+255),b
  4879  002D82  0E00               	movlw	0
  4880  002D84  0100               	movlb	0	; () banked
  4881  002D86  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  4882  002D88  0100               	movlb	0	; () banked
  4883  002D8A  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  4884  002D8C  EC16  F02C         	call	___wmul	;wreg free
  4885  002D90  0E50               	movlw	low __powers_
  4886  002D92  0100               	movlb	0	; () banked
  4887  002D94  259C               	addwf	?___wmul& (0+255),w,b
  4888  002D96  6EF6               	movwf	tblptrl,c
  4889  002D98  0E06               	movlw	high __powers_
  4890  002D9A  0100               	movlb	0	; () banked
  4891  002D9C  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  4892  002D9E  6EF7               	movwf	tblptrh,c
  4893  002DA0                     	if	0	;There are less than 3 active tblptr bytes
  4894  002DA0                     	endif
  4895  002DA0  0009               	tblrd		*+
  4896  002DA2  CFF5 F0A5          	movff	tablat,___ftmul@f2
  4897  002DA6  0009               	tblrd		*+
  4898  002DA8  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  4899  002DAC  000A               	tblrd		*-
  4900  002DAE  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  4901  002DB2  0E00               	movlw	0
  4902  002DB4  0100               	movlb	0	; () banked
  4903  002DB6  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  4904  002DB8  0E64               	movlw	100
  4905  002DBA  6F96               	movwf	___awdiv@divisor& (0+255),b
  4906  002DBC  0101               	movlb	1	; () banked
  4907  002DBE  5103               	movf	scale@scl& (0+255),w,b
  4908  002DC0  0100               	movlb	0	; () banked
  4909  002DC2  6F94               	movwf	___awdiv@dividend& (0+255),b
  4910  002DC4  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  4911  002DC6  BF94               	btfsc	___awdiv@dividend& (0+255),7,b
  4912  002DC8  0795               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4913  002DCA  EC66  F027         	call	___awdiv	;wreg free
  4914  002DCE  0E12               	movlw	18
  4915  002DD0  0100               	movlb	0	; () banked
  4916  002DD2  2594               	addwf	?___awdiv& (0+255),w,b
  4917  002DD4  0100               	movlb	0	; () banked
  4918  002DD6  6F9C               	movwf	___wmul@multiplier& (0+255),b
  4919  002DD8  0E00               	movlw	0
  4920  002DDA  0100               	movlb	0	; () banked
  4921  002DDC  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  4922  002DDE  0100               	movlb	0	; () banked
  4923  002DE0  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  4924  002DE2  0E00               	movlw	0
  4925  002DE4  0100               	movlb	0	; () banked
  4926  002DE6  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4927  002DE8  0E03               	movlw	3
  4928  002DEA  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  4929  002DEC  EC16  F02C         	call	___wmul	;wreg free
  4930  002DF0  0E50               	movlw	low __powers_
  4931  002DF2  0100               	movlb	0	; () banked
  4932  002DF4  259C               	addwf	?___wmul& (0+255),w,b
  4933  002DF6  6EF6               	movwf	tblptrl,c
  4934  002DF8  0E06               	movlw	high __powers_
  4935  002DFA  0100               	movlb	0	; () banked
  4936  002DFC  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  4937  002DFE  6EF7               	movwf	tblptrh,c
  4938  002E00                     	if	0	;There are less than 3 active tblptr bytes
  4939  002E00                     	endif
  4940  002E00  0009               	tblrd		*+
  4941  002E02  CFF5 F0A2          	movff	tablat,___ftmul@f1
  4942  002E06  0009               	tblrd		*+
  4943  002E08  CFF5 F0A3          	movff	tablat,___ftmul@f1+1
  4944  002E0C  000A               	tblrd		*-
  4945  002E0E  CFF5 F0A4          	movff	tablat,___ftmul@f1+2
  4946  002E12  EC82  F021         	call	___ftmul	;wreg free
  4947  002E16  C0A2  F100         	movff	?___ftmul,_scale$1720
  4948  002E1A  C0A3  F101         	movff	?___ftmul+1,_scale$1720+1
  4949  002E1E  C0A4  F102         	movff	?___ftmul+2,_scale$1720+2
  4950                           
  4951                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4952  002E22  C100  F0A2         	movff	_scale$1720,___ftmul@f1
  4953  002E26  C101  F0A3         	movff	_scale$1720+1,___ftmul@f1+1
  4954  002E2A  C102  F0A4         	movff	_scale$1720+2,___ftmul@f1+2
  4955  002E2E  0E00               	movlw	0
  4956  002E30  0100               	movlb	0	; () banked
  4957  002E32  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4958  002E34  0E03               	movlw	3
  4959  002E36  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  4960  002E38  0E00               	movlw	0
  4961  002E3A  0100               	movlb	0	; () banked
  4962  002E3C  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  4963  002E3E  0E0A               	movlw	10
  4964  002E40  6F90               	movwf	___awmod@divisor& (0+255),b
  4965  002E42  0101               	movlb	1	; () banked
  4966  002E44  5103               	movf	scale@scl& (0+255),w,b
  4967  002E46  0100               	movlb	0	; () banked
  4968  002E48  6F8E               	movwf	___awmod@dividend& (0+255),b
  4969  002E4A  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  4970  002E4C  BF8E               	btfsc	___awmod@dividend& (0+255),7,b
  4971  002E4E  078F               	decf	(___awmod@dividend+1)& (0+255),f,b
  4972  002E50  EC7A  F028         	call	___awmod	;wreg free
  4973  002E54  C08E  F09C         	movff	?___awmod,___wmul@multiplier
  4974  002E58  C08F  F09D         	movff	?___awmod+1,___wmul@multiplier+1
  4975  002E5C  EC16  F02C         	call	___wmul	;wreg free
  4976  002E60  0E50               	movlw	low __powers_
  4977  002E62  0100               	movlb	0	; () banked
  4978  002E64  259C               	addwf	?___wmul& (0+255),w,b
  4979  002E66  6EF6               	movwf	tblptrl,c
  4980  002E68  0E06               	movlw	high __powers_
  4981  002E6A  0100               	movlb	0	; () banked
  4982  002E6C  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  4983  002E6E  6EF7               	movwf	tblptrh,c
  4984  002E70                     	if	0	;There are less than 3 active tblptr bytes
  4985  002E70                     	endif
  4986  002E70  0009               	tblrd		*+
  4987  002E72  CFF5 F0A5          	movff	tablat,___ftmul@f2
  4988  002E76  0009               	tblrd		*+
  4989  002E78  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  4990  002E7C  000A               	tblrd		*-
  4991  002E7E  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  4992  002E82  EC82  F021         	call	___ftmul	;wreg free
  4993  002E86  C0A2  F0B1         	movff	?___ftmul,?_scale
  4994  002E8A  C0A3  F0B2         	movff	?___ftmul+1,?_scale+1
  4995  002E8E  C0A4  F0B3         	movff	?___ftmul+2,?_scale+2
  4996  002E92  0012               	return	
  4997  002E94                     l6189:
  4998                           
  4999                           ;doprnt.c: 438: else if(scl > 10)
  5000  002E94  0101               	movlb	1	; () banked
  5001  002E96  5103               	movf	scale@scl& (0+255),w,b
  5002  002E98  0A80               	xorlw	128
  5003  002E9A  0F75               	addlw	-139
  5004  002E9C  A0D8               	btfss	status,0,c
  5005  002E9E  D05D               	goto	l6195
  5006                           
  5007                           ; BSR set to: 1
  5008                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  5009  002EA0  0E00               	movlw	0
  5010  002EA2  0100               	movlb	0	; () banked
  5011  002EA4  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5012  002EA6  0E0A               	movlw	10
  5013  002EA8  6F96               	movwf	___awdiv@divisor& (0+255),b
  5014  002EAA  0101               	movlb	1	; () banked
  5015  002EAC  5103               	movf	scale@scl& (0+255),w,b
  5016  002EAE  0100               	movlb	0	; () banked
  5017  002EB0  6F94               	movwf	___awdiv@dividend& (0+255),b
  5018  002EB2  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  5019  002EB4  BF94               	btfsc	___awdiv@dividend& (0+255),7,b
  5020  002EB6  0795               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5021  002EB8  EC66  F027         	call	___awdiv	;wreg free
  5022  002EBC  0E09               	movlw	9
  5023  002EBE  0100               	movlb	0	; () banked
  5024  002EC0  2594               	addwf	?___awdiv& (0+255),w,b
  5025  002EC2  0100               	movlb	0	; () banked
  5026  002EC4  6F9C               	movwf	___wmul@multiplier& (0+255),b
  5027  002EC6  0E00               	movlw	0
  5028  002EC8  0100               	movlb	0	; () banked
  5029  002ECA  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  5030  002ECC  0100               	movlb	0	; () banked
  5031  002ECE  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  5032  002ED0  0E00               	movlw	0
  5033  002ED2  0100               	movlb	0	; () banked
  5034  002ED4  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5035  002ED6  0E03               	movlw	3
  5036  002ED8  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5037  002EDA  EC16  F02C         	call	___wmul	;wreg free
  5038  002EDE  0E50               	movlw	low __powers_
  5039  002EE0  0100               	movlb	0	; () banked
  5040  002EE2  259C               	addwf	?___wmul& (0+255),w,b
  5041  002EE4  6EF6               	movwf	tblptrl,c
  5042  002EE6  0E06               	movlw	high __powers_
  5043  002EE8  0100               	movlb	0	; () banked
  5044  002EEA  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5045  002EEC  6EF7               	movwf	tblptrh,c
  5046  002EEE                     	if	0	;There are less than 3 active tblptr bytes
  5047  002EEE                     	endif
  5048  002EEE  0009               	tblrd		*+
  5049  002EF0  CFF5 F0A2          	movff	tablat,___ftmul@f1
  5050  002EF4  0009               	tblrd		*+
  5051  002EF6  CFF5 F0A3          	movff	tablat,___ftmul@f1+1
  5052  002EFA  000A               	tblrd		*-
  5053  002EFC  CFF5 F0A4          	movff	tablat,___ftmul@f1+2
  5054  002F00  0E00               	movlw	0
  5055  002F02  0100               	movlb	0	; () banked
  5056  002F04  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5057  002F06  0E03               	movlw	3
  5058  002F08  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5059  002F0A  0E00               	movlw	0
  5060  002F0C  0100               	movlb	0	; () banked
  5061  002F0E  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  5062  002F10  0E0A               	movlw	10
  5063  002F12  6F90               	movwf	___awmod@divisor& (0+255),b
  5064  002F14  0101               	movlb	1	; () banked
  5065  002F16  5103               	movf	scale@scl& (0+255),w,b
  5066  002F18  0100               	movlb	0	; () banked
  5067  002F1A  6F8E               	movwf	___awmod@dividend& (0+255),b
  5068  002F1C  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  5069  002F1E  BF8E               	btfsc	___awmod@dividend& (0+255),7,b
  5070  002F20  078F               	decf	(___awmod@dividend+1)& (0+255),f,b
  5071  002F22  EC7A  F028         	call	___awmod	;wreg free
  5072  002F26  C08E  F09C         	movff	?___awmod,___wmul@multiplier
  5073  002F2A  C08F  F09D         	movff	?___awmod+1,___wmul@multiplier+1
  5074  002F2E  EC16  F02C         	call	___wmul	;wreg free
  5075  002F32  0E50               	movlw	low __powers_
  5076  002F34  0100               	movlb	0	; () banked
  5077  002F36  259C               	addwf	?___wmul& (0+255),w,b
  5078  002F38  6EF6               	movwf	tblptrl,c
  5079  002F3A  0E06               	movlw	high __powers_
  5080  002F3C  0100               	movlb	0	; () banked
  5081  002F3E  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5082  002F40  6EF7               	movwf	tblptrh,c
  5083  002F42                     	if	0	;There are less than 3 active tblptr bytes
  5084  002F42                     	endif
  5085  002F42  0009               	tblrd		*+
  5086  002F44  CFF5 F0A5          	movff	tablat,___ftmul@f2
  5087  002F48  0009               	tblrd		*+
  5088  002F4A  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  5089  002F4E  000A               	tblrd		*-
  5090  002F50  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  5091  002F54  EC82  F021         	call	___ftmul	;wreg free
  5092  002F58  D796               	goto	L4
  5093  002F5A                     l6195:
  5094                           
  5095                           ;doprnt.c: 440: return _powers_[scl];
  5096  002F5A  0101               	movlb	1	; () banked
  5097  002F5C  5103               	movf	scale@scl& (0+255),w,b
  5098  002F5E  0D03               	mullw	3
  5099  002F60  0E50               	movlw	low __powers_
  5100  002F62  24F3               	addwf	prodl,w,c
  5101  002F64  6EF6               	movwf	tblptrl,c
  5102  002F66  0E06               	movlw	high __powers_
  5103  002F68  20F4               	addwfc	prodh,w,c
  5104  002F6A  6EF7               	movwf	tblptrh,c
  5105  002F6C                     	if	0	;There are less than 3 active tblptr bytes
  5106  002F6C                     	endif
  5107  002F6C  0009               	tblrd		*+
  5108  002F6E  CFF5 F0B1          	movff	tablat,?_scale
  5109  002F72  0009               	tblrd		*+
  5110  002F74  CFF5 F0B2          	movff	tablat,?_scale+1
  5111  002F78  000A               	tblrd		*-
  5112  002F7A  CFF5 F0B3          	movff	tablat,?_scale+2
  5113  002F7E  0012               	return	
  5114  002F80                     __end_of_scale:
  5115                           	opt stack 0
  5116                           tosu	equ	0xFFF
  5117                           tosh	equ	0xFFE
  5118                           tosl	equ	0xFFD
  5119                           pclath	equ	0xFFA
  5120                           tblptru	equ	0xFF8
  5121                           tblptrh	equ	0xFF7
  5122                           tblptrl	equ	0xFF6
  5123                           tablat	equ	0xFF5
  5124                           prodh	equ	0xFF4
  5125                           prodl	equ	0xFF3
  5126                           intcon	equ	0xFF2
  5127                           postinc0	equ	0xFEE
  5128                           wreg	equ	0xFE8
  5129                           indf2	equ	0xFDF
  5130                           postinc2	equ	0xFDE
  5131                           postdec2	equ	0xFDD
  5132                           fsr2h	equ	0xFDA
  5133                           fsr2l	equ	0xFD9
  5134                           status	equ	0xFD8
  5135                           
  5136 ;; *************** function _putch *****************
  5137 ;; Defined at:
  5138 ;;		line 111 in file "mcc_generated_files/eusart1.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;  txData          1    wreg     unsigned char 
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;  txData          1   47[BANK0 ] unsigned char 
  5143 ;; Return value:  Size  Location     Type
  5144 ;;                  1    wreg      void 
  5145 ;; Registers used:
  5146 ;;		wreg, status,2, cstack
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5152 ;;      Params:         0       0       0       0       0       0       0
  5153 ;;      Locals:         0       1       0       0       0       0       0
  5154 ;;      Temps:          0       0       0       0       0       0       0
  5155 ;;      Totals:         0       1       0       0       0       0       0
  5156 ;;Total ram usage:        1 bytes
  5157 ;; Hardware stack levels used:    1
  5158 ;; Hardware stack levels required when called:    8
  5159 ;; This function calls:
  5160 ;;		_EUSART1_Write
  5161 ;; This function is called by:
  5162 ;;		i2__doprnt
  5163 ;;		__doprnt
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167                           	psect	text4
  5168  005AB6                     __ptext4:
  5169                           	opt stack 0
  5170  005AB6                     _putch:
  5171                           	opt stack 0
  5172                           
  5173                           ;Skip over the trampoline to the duplicate function for level 2
  5174  005AB6  B25F               	btfsc	btemp,1,c
  5175  005AB8  EF8F  F02D         	goto	i2_putch
  5176  005ABC                     _putch$intlevel0:
  5177                           	opt stack 20
  5178                           
  5179                           ;incstack = 0
  5180                           ;putch@txData stored from wreg
  5181  005ABC  0100               	movlb	0	; () banked
  5182  005ABE  6F8F               	movwf	putch@txData& (0+255),b
  5183                           
  5184                           ;eusart1.c: 113: EUSART1_Write(txData);
  5185  005AC0  0100               	movlb	0	; () banked
  5186  005AC2  518F               	movf	putch@txData& (0+255),w,b
  5187  005AC4  EC65  F02D         	call	_EUSART1_Write
  5188  005AC8  0012               	return		;funcret
  5189  005ACA                     __end_of_putch:
  5190                           	opt stack 0
  5191                           tosu	equ	0xFFF
  5192                           tosh	equ	0xFFE
  5193                           tosl	equ	0xFFD
  5194                           pclath	equ	0xFFA
  5195                           tblptru	equ	0xFF8
  5196                           tblptrh	equ	0xFF7
  5197                           tblptrl	equ	0xFF6
  5198                           tablat	equ	0xFF5
  5199                           prodh	equ	0xFF4
  5200                           prodl	equ	0xFF3
  5201                           intcon	equ	0xFF2
  5202                           postinc0	equ	0xFEE
  5203                           wreg	equ	0xFE8
  5204                           indf2	equ	0xFDF
  5205                           postinc2	equ	0xFDE
  5206                           postdec2	equ	0xFDD
  5207                           fsr2h	equ	0xFDA
  5208                           fsr2l	equ	0xFD9
  5209                           status	equ	0xFD8
  5210                           
  5211 ;; *************** function _EUSART1_Write *****************
  5212 ;; Defined at:
  5213 ;;		line 97 in file "mcc_generated_files/eusart1.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;  txData          1    wreg     unsigned char 
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;  txData          1   46[BANK0 ] unsigned char 
  5218 ;; Return value:  Size  Location     Type
  5219 ;;                  1    wreg      void 
  5220 ;; Registers used:
  5221 ;;		wreg
  5222 ;; Tracked objects:
  5223 ;;		On entry : 0/0
  5224 ;;		On exit  : 0/0
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5227 ;;      Params:         0       0       0       0       0       0       0
  5228 ;;      Locals:         0       1       0       0       0       0       0
  5229 ;;      Temps:          0       0       0       0       0       0       0
  5230 ;;      Totals:         0       1       0       0       0       0       0
  5231 ;;Total ram usage:        1 bytes
  5232 ;; Hardware stack levels used:    1
  5233 ;; Hardware stack levels required when called:    7
  5234 ;; This function calls:
  5235 ;;		Nothing
  5236 ;; This function is called by:
  5237 ;;		_putch
  5238 ;; This function uses a non-reentrant model
  5239 ;;
  5240                           
  5241                           	psect	text5
  5242  005ACA                     __ptext5:
  5243                           	opt stack 0
  5244  005ACA                     _EUSART1_Write:
  5245                           	opt stack 20
  5246                           
  5247                           ;incstack = 0
  5248                           ;EUSART1_Write@txData stored from wreg
  5249  005ACA  0100               	movlb	0	; () banked
  5250  005ACC  6F8E               	movwf	EUSART1_Write@txData& (0+255),b
  5251  005ACE                     l226:
  5252  005ACE  A89E               	btfss	3998,4,c	;volatile
  5253  005AD0  D7FE               	goto	l226
  5254                           
  5255                           ;eusart1.c: 101: }
  5256                           ;eusart1.c: 103: TXREG1 = txData;
  5257  005AD2  C08E  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  5258  005AD6  0012               	return		;funcret
  5259  005AD8                     __end_of_EUSART1_Write:
  5260                           	opt stack 0
  5261                           tosu	equ	0xFFF
  5262                           tosh	equ	0xFFE
  5263                           tosl	equ	0xFFD
  5264                           pclath	equ	0xFFA
  5265                           tblptru	equ	0xFF8
  5266                           tblptrh	equ	0xFF7
  5267                           tblptrl	equ	0xFF6
  5268                           tablat	equ	0xFF5
  5269                           prodh	equ	0xFF4
  5270                           prodl	equ	0xFF3
  5271                           intcon	equ	0xFF2
  5272                           postinc0	equ	0xFEE
  5273                           wreg	equ	0xFE8
  5274                           indf2	equ	0xFDF
  5275                           postinc2	equ	0xFDE
  5276                           postdec2	equ	0xFDD
  5277                           fsr2h	equ	0xFDA
  5278                           fsr2l	equ	0xFD9
  5279                           status	equ	0xFD8
  5280                           
  5281 ;; *************** function _isdigit *****************
  5282 ;; Defined at:
  5283 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;  c               1    wreg     unsigned char 
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;  c               1   48[BANK0 ] unsigned char 
  5288 ;; Return value:  Size  Location     Type
  5289 ;;		None               void
  5290 ;; Registers used:
  5291 ;;		wreg, status,2, status,0
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5297 ;;      Params:         0       0       0       0       0       0       0
  5298 ;;      Locals:         0       2       0       0       0       0       0
  5299 ;;      Temps:          0       1       0       0       0       0       0
  5300 ;;      Totals:         0       3       0       0       0       0       0
  5301 ;;Total ram usage:        3 bytes
  5302 ;; Hardware stack levels used:    1
  5303 ;; Hardware stack levels required when called:    7
  5304 ;; This function calls:
  5305 ;;		Nothing
  5306 ;; This function is called by:
  5307 ;;		__doprnt
  5308 ;; This function uses a non-reentrant model
  5309 ;;
  5310                           
  5311                           	psect	text6
  5312  00598C                     __ptext6:
  5313                           	opt stack 0
  5314  00598C                     _isdigit:
  5315                           	opt stack 21
  5316                           
  5317                           ;incstack = 0
  5318                           ;isdigit@c stored from wreg
  5319  00598C  0100               	movlb	0	; () banked
  5320  00598E  6F90               	movwf	isdigit@c& (0+255),b
  5321  005990  0E00               	movlw	0
  5322  005992  0100               	movlb	0	; () banked
  5323  005994  6F8F               	movwf	_isdigit$1253& (0+255),b
  5324                           
  5325                           ; BSR set to: 0
  5326  005996  0E3A               	movlw	58
  5327  005998  0100               	movlb	0	; () banked
  5328  00599A  6190               	cpfslt	isdigit@c& (0+255),b
  5329  00599C  D007               	goto	l4493
  5330                           
  5331                           ; BSR set to: 0
  5332  00599E  0E2F               	movlw	47
  5333  0059A0  0100               	movlb	0	; () banked
  5334  0059A2  6590               	cpfsgt	isdigit@c& (0+255),b
  5335  0059A4  D003               	goto	l4493
  5336                           
  5337                           ; BSR set to: 0
  5338  0059A6  0E01               	movlw	1
  5339  0059A8  0100               	movlb	0	; () banked
  5340  0059AA  6F8F               	movwf	_isdigit$1253& (0+255),b
  5341  0059AC                     l4493:
  5342                           
  5343                           ; BSR set to: 0
  5344  0059AC  C08F  F08E         	movff	_isdigit$1253,??_isdigit
  5345  0059B0  0100               	movlb	0	; () banked
  5346  0059B2  318E               	rrcf	??_isdigit& (0+255),w,b
  5347  0059B4  0012               	return	
  5348  0059B6                     __end_of_isdigit:
  5349                           	opt stack 0
  5350                           tosu	equ	0xFFF
  5351                           tosh	equ	0xFFE
  5352                           tosl	equ	0xFFD
  5353                           pclath	equ	0xFFA
  5354                           tblptru	equ	0xFF8
  5355                           tblptrh	equ	0xFF7
  5356                           tblptrl	equ	0xFF6
  5357                           tablat	equ	0xFF5
  5358                           prodh	equ	0xFF4
  5359                           prodl	equ	0xFF3
  5360                           intcon	equ	0xFF2
  5361                           postinc0	equ	0xFEE
  5362                           wreg	equ	0xFE8
  5363                           indf2	equ	0xFDF
  5364                           postinc2	equ	0xFDE
  5365                           postdec2	equ	0xFDD
  5366                           fsr2h	equ	0xFDA
  5367                           fsr2l	equ	0xFD9
  5368                           status	equ	0xFD8
  5369                           
  5370 ;; *************** function _fround *****************
  5371 ;; Defined at:
  5372 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  5373 ;; Parameters:    Size  Location     Type
  5374 ;;  prec            1    wreg     unsigned char 
  5375 ;; Auto vars:     Size  Location     Type
  5376 ;;  prec            1    6[BANK1 ] unsigned char 
  5377 ;; Return value:  Size  Location     Type
  5378 ;;                  3   81[BANK0 ] unsigned char 
  5379 ;; Registers used:
  5380 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5381 ;; Tracked objects:
  5382 ;;		On entry : 0/0
  5383 ;;		On exit  : 0/0
  5384 ;;		Unchanged: 0/0
  5385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5386 ;;      Params:         0       3       0       0       0       0       0
  5387 ;;      Locals:         0       0       7       0       0       0       0
  5388 ;;      Temps:          0       0       0       0       0       0       0
  5389 ;;      Totals:         0       3       7       0       0       0       0
  5390 ;;Total ram usage:       10 bytes
  5391 ;; Hardware stack levels used:    1
  5392 ;; Hardware stack levels required when called:    9
  5393 ;; This function calls:
  5394 ;;		___awdiv
  5395 ;;		___awmod
  5396 ;;		___ftmul
  5397 ;;		___wmul
  5398 ;; This function is called by:
  5399 ;;		__doprnt
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403                           	psect	text7
  5404  003370                     __ptext7:
  5405                           	opt stack 0
  5406  003370                     _fround:
  5407                           	opt stack 19
  5408                           
  5409                           ; BSR set to: 0
  5410                           ;incstack = 0
  5411                           ;fround@prec stored from wreg
  5412  003370  0101               	movlb	1	; () banked
  5413  003372  6F06               	movwf	fround@prec& (0+255),b
  5414                           
  5415                           ;doprnt.c: 413: if(prec>=110)
  5416  003374  0E6D               	movlw	109
  5417  003376  0101               	movlb	1	; () banked
  5418  003378  6506               	cpfsgt	fround@prec& (0+255),b
  5419  00337A  D0BA               	goto	l6149
  5420                           
  5421                           ; BSR set to: 1
  5422                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5423  00337C  0E00               	movlw	0
  5424  00337E  0100               	movlb	0	; () banked
  5425  003380  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5426  003382  0E03               	movlw	3
  5427  003384  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5428  003386  0E00               	movlw	0
  5429  003388  0100               	movlb	0	; () banked
  5430  00338A  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5431  00338C  0E0A               	movlw	10
  5432  00338E  6F96               	movwf	___awdiv@divisor& (0+255),b
  5433  003390  0E00               	movlw	0
  5434  003392  0100               	movlb	0	; () banked
  5435  003394  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  5436  003396  0E64               	movlw	100
  5437  003398  6F90               	movwf	___awmod@divisor& (0+255),b
  5438  00339A  C106  F08E         	movff	fround@prec,___awmod@dividend
  5439  00339E  0100               	movlb	0	; () banked
  5440  0033A0  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  5441  0033A2  EC7A  F028         	call	___awmod	;wreg free
  5442  0033A6  C08E  F094         	movff	?___awmod,___awdiv@dividend
  5443  0033AA  C08F  F095         	movff	?___awmod+1,___awdiv@dividend+1
  5444  0033AE  EC66  F027         	call	___awdiv	;wreg free
  5445  0033B2  0E09               	movlw	9
  5446  0033B4  0100               	movlb	0	; () banked
  5447  0033B6  2594               	addwf	?___awdiv& (0+255),w,b
  5448  0033B8  0100               	movlb	0	; () banked
  5449  0033BA  6F9C               	movwf	___wmul@multiplier& (0+255),b
  5450  0033BC  0E00               	movlw	0
  5451  0033BE  0100               	movlb	0	; () banked
  5452  0033C0  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  5453  0033C2  0100               	movlb	0	; () banked
  5454  0033C4  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  5455  0033C6  EC16  F02C         	call	___wmul	;wreg free
  5456  0033CA  0E29               	movlw	low __npowers_
  5457  0033CC  0100               	movlb	0	; () banked
  5458  0033CE  259C               	addwf	?___wmul& (0+255),w,b
  5459  0033D0  6EF6               	movwf	tblptrl,c
  5460  0033D2  0E06               	movlw	high __npowers_
  5461  0033D4  0100               	movlb	0	; () banked
  5462  0033D6  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5463  0033D8  6EF7               	movwf	tblptrh,c
  5464  0033DA                     	if	0	;There are less than 3 active tblptr bytes
  5465  0033DA                     	endif
  5466  0033DA  0009               	tblrd		*+
  5467  0033DC  CFF5 F0A5          	movff	tablat,___ftmul@f2
  5468  0033E0  0009               	tblrd		*+
  5469  0033E2  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  5470  0033E6  000A               	tblrd		*-
  5471  0033E8  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  5472  0033EC  0E00               	movlw	0
  5473  0033EE  0100               	movlb	0	; () banked
  5474  0033F0  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5475  0033F2  0E64               	movlw	100
  5476  0033F4  6F96               	movwf	___awdiv@divisor& (0+255),b
  5477  0033F6  C106  F094         	movff	fround@prec,___awdiv@dividend
  5478  0033FA  0100               	movlb	0	; () banked
  5479  0033FC  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  5480  0033FE  EC66  F027         	call	___awdiv	;wreg free
  5481  003402  0E12               	movlw	18
  5482  003404  0100               	movlb	0	; () banked
  5483  003406  2594               	addwf	?___awdiv& (0+255),w,b
  5484  003408  0100               	movlb	0	; () banked
  5485  00340A  6F9C               	movwf	___wmul@multiplier& (0+255),b
  5486  00340C  0E00               	movlw	0
  5487  00340E  0100               	movlb	0	; () banked
  5488  003410  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  5489  003412  0100               	movlb	0	; () banked
  5490  003414  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  5491  003416  0E00               	movlw	0
  5492  003418  0100               	movlb	0	; () banked
  5493  00341A  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5494  00341C  0E03               	movlw	3
  5495  00341E  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5496  003420  EC16  F02C         	call	___wmul	;wreg free
  5497  003424  0E29               	movlw	low __npowers_
  5498  003426  0100               	movlb	0	; () banked
  5499  003428  259C               	addwf	?___wmul& (0+255),w,b
  5500  00342A  6EF6               	movwf	tblptrl,c
  5501  00342C  0E06               	movlw	high __npowers_
  5502  00342E  0100               	movlb	0	; () banked
  5503  003430  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5504  003432  6EF7               	movwf	tblptrh,c
  5505  003434                     	if	0	;There are less than 3 active tblptr bytes
  5506  003434                     	endif
  5507  003434  0009               	tblrd		*+
  5508  003436  CFF5 F0A2          	movff	tablat,___ftmul@f1
  5509  00343A  0009               	tblrd		*+
  5510  00343C  CFF5 F0A3          	movff	tablat,___ftmul@f1+1
  5511  003440  000A               	tblrd		*-
  5512  003442  CFF5 F0A4          	movff	tablat,___ftmul@f1+2
  5513  003446  EC82  F021         	call	___ftmul	;wreg free
  5514  00344A  C0A2  F103         	movff	?___ftmul,_fround$1718
  5515  00344E  C0A3  F104         	movff	?___ftmul+1,_fround$1718+1
  5516  003452  C0A4  F105         	movff	?___ftmul+2,_fround$1718+2
  5517                           
  5518                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5519  003456  0E00               	movlw	0
  5520  003458  0100               	movlb	0	; () banked
  5521  00345A  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5522  00345C  0E03               	movlw	3
  5523  00345E  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5524  003460  0E00               	movlw	0
  5525  003462  0100               	movlb	0	; () banked
  5526  003464  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  5527  003466  0E0A               	movlw	10
  5528  003468  6F90               	movwf	___awmod@divisor& (0+255),b
  5529  00346A  C106  F08E         	movff	fround@prec,___awmod@dividend
  5530  00346E  0100               	movlb	0	; () banked
  5531  003470  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  5532  003472  EC7A  F028         	call	___awmod	;wreg free
  5533  003476  C08E  F09C         	movff	?___awmod,___wmul@multiplier
  5534  00347A  C08F  F09D         	movff	?___awmod+1,___wmul@multiplier+1
  5535  00347E  EC16  F02C         	call	___wmul	;wreg free
  5536  003482  0E29               	movlw	low __npowers_
  5537  003484  0100               	movlb	0	; () banked
  5538  003486  259C               	addwf	?___wmul& (0+255),w,b
  5539  003488  6EF6               	movwf	tblptrl,c
  5540  00348A  0E06               	movlw	high __npowers_
  5541  00348C  0100               	movlb	0	; () banked
  5542  00348E  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5543  003490  6EF7               	movwf	tblptrh,c
  5544  003492                     	if	0	;There are less than 3 active tblptr bytes
  5545  003492                     	endif
  5546  003492  0009               	tblrd		*+
  5547  003494  CFF5 F0A5          	movff	tablat,___ftmul@f2
  5548  003498  0009               	tblrd		*+
  5549  00349A  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  5550  00349E  000A               	tblrd		*-
  5551  0034A0  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  5552  0034A4  C103  F0A2         	movff	_fround$1718,___ftmul@f1
  5553  0034A8  C104  F0A3         	movff	_fround$1718+1,___ftmul@f1+1
  5554  0034AC  C105  F0A4         	movff	_fround$1718+2,___ftmul@f1+2
  5555  0034B0  EC82  F021         	call	___ftmul	;wreg free
  5556  0034B4  C0A2  F100         	movff	?___ftmul,_fround$1719
  5557  0034B8  C0A3  F101         	movff	?___ftmul+1,_fround$1719+1
  5558  0034BC  C0A4  F102         	movff	?___ftmul+2,_fround$1719+2
  5559                           
  5560                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5561  0034C0  C100  F0A2         	movff	_fround$1719,___ftmul@f1
  5562  0034C4  C101  F0A3         	movff	_fround$1719+1,___ftmul@f1+1
  5563  0034C8  C102  F0A4         	movff	_fround$1719+2,___ftmul@f1+2
  5564  0034CC  0E00               	movlw	0
  5565  0034CE  0100               	movlb	0	; () banked
  5566  0034D0  6FA5               	movwf	___ftmul@f2& (0+255),b
  5567  0034D2  0E00               	movlw	0
  5568  0034D4  0100               	movlb	0	; () banked
  5569  0034D6  6FA6               	movwf	(___ftmul@f2+1)& (0+255),b
  5570  0034D8  0E3F               	movlw	63
  5571  0034DA  0100               	movlb	0	; () banked
  5572  0034DC  6FA7               	movwf	(___ftmul@f2+2)& (0+255),b
  5573  0034DE  EC82  F021         	call	___ftmul	;wreg free
  5574  0034E2  C0A2  F0B1         	movff	?___ftmul,?_fround
  5575  0034E6  C0A3  F0B2         	movff	?___ftmul+1,?_fround+1
  5576  0034EA  C0A4  F0B3         	movff	?___ftmul+2,?_fround+2
  5577  0034EE  0012               	return	
  5578  0034F0                     l6149:
  5579                           
  5580                           ;doprnt.c: 415: else if(prec > 10)
  5581  0034F0  0E0A               	movlw	10
  5582  0034F2  0101               	movlb	1	; () banked
  5583  0034F4  6506               	cpfsgt	fround@prec& (0+255),b
  5584  0034F6  D06E               	goto	l6157
  5585                           
  5586                           ; BSR set to: 1
  5587                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5588  0034F8  0E00               	movlw	0
  5589  0034FA  0100               	movlb	0	; () banked
  5590  0034FC  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5591  0034FE  0E03               	movlw	3
  5592  003500  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5593  003502  0E00               	movlw	0
  5594  003504  0100               	movlb	0	; () banked
  5595  003506  6F91               	movwf	(___awmod@divisor+1)& (0+255),b
  5596  003508  0E0A               	movlw	10
  5597  00350A  6F90               	movwf	___awmod@divisor& (0+255),b
  5598  00350C  C106  F08E         	movff	fround@prec,___awmod@dividend
  5599  003510  0100               	movlb	0	; () banked
  5600  003512  6B8F               	clrf	(___awmod@dividend+1)& (0+255),b
  5601  003514  EC7A  F028         	call	___awmod	;wreg free
  5602  003518  C08E  F09C         	movff	?___awmod,___wmul@multiplier
  5603  00351C  C08F  F09D         	movff	?___awmod+1,___wmul@multiplier+1
  5604  003520  EC16  F02C         	call	___wmul	;wreg free
  5605  003524  0E29               	movlw	low __npowers_
  5606  003526  0100               	movlb	0	; () banked
  5607  003528  259C               	addwf	?___wmul& (0+255),w,b
  5608  00352A  6EF6               	movwf	tblptrl,c
  5609  00352C  0E06               	movlw	high __npowers_
  5610  00352E  0100               	movlb	0	; () banked
  5611  003530  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5612  003532  6EF7               	movwf	tblptrh,c
  5613  003534                     	if	0	;There are less than 3 active tblptr bytes
  5614  003534                     	endif
  5615  003534  0009               	tblrd		*+
  5616  003536  CFF5 F0A5          	movff	tablat,___ftmul@f2
  5617  00353A  0009               	tblrd		*+
  5618  00353C  CFF5 F0A6          	movff	tablat,___ftmul@f2+1
  5619  003540  000A               	tblrd		*-
  5620  003542  CFF5 F0A7          	movff	tablat,___ftmul@f2+2
  5621  003546  0E00               	movlw	0
  5622  003548  0100               	movlb	0	; () banked
  5623  00354A  6F97               	movwf	(___awdiv@divisor+1)& (0+255),b
  5624  00354C  0E0A               	movlw	10
  5625  00354E  6F96               	movwf	___awdiv@divisor& (0+255),b
  5626  003550  C106  F094         	movff	fround@prec,___awdiv@dividend
  5627  003554  0100               	movlb	0	; () banked
  5628  003556  6B95               	clrf	(___awdiv@dividend+1)& (0+255),b
  5629  003558  EC66  F027         	call	___awdiv	;wreg free
  5630  00355C  0E09               	movlw	9
  5631  00355E  0100               	movlb	0	; () banked
  5632  003560  2594               	addwf	?___awdiv& (0+255),w,b
  5633  003562  0100               	movlb	0	; () banked
  5634  003564  6F9C               	movwf	___wmul@multiplier& (0+255),b
  5635  003566  0E00               	movlw	0
  5636  003568  0100               	movlb	0	; () banked
  5637  00356A  2195               	addwfc	(?___awdiv+1)& (0+255),w,b
  5638  00356C  0100               	movlb	0	; () banked
  5639  00356E  6F9D               	movwf	(___wmul@multiplier+1)& (0+255),b
  5640  003570  0E00               	movlw	0
  5641  003572  0100               	movlb	0	; () banked
  5642  003574  6F9F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5643  003576  0E03               	movlw	3
  5644  003578  6F9E               	movwf	___wmul@multiplicand& (0+255),b
  5645  00357A  EC16  F02C         	call	___wmul	;wreg free
  5646  00357E  0E29               	movlw	low __npowers_
  5647  003580  0100               	movlb	0	; () banked
  5648  003582  259C               	addwf	?___wmul& (0+255),w,b
  5649  003584  6EF6               	movwf	tblptrl,c
  5650  003586  0E06               	movlw	high __npowers_
  5651  003588  0100               	movlb	0	; () banked
  5652  00358A  219D               	addwfc	(?___wmul+1)& (0+255),w,b
  5653  00358C  6EF7               	movwf	tblptrh,c
  5654  00358E                     	if	0	;There are less than 3 active tblptr bytes
  5655  00358E                     	endif
  5656  00358E  0009               	tblrd		*+
  5657  003590  CFF5 F0A2          	movff	tablat,___ftmul@f1
  5658  003594  0009               	tblrd		*+
  5659  003596  CFF5 F0A3          	movff	tablat,___ftmul@f1+1
  5660  00359A  000A               	tblrd		*-
  5661  00359C  CFF5 F0A4          	movff	tablat,___ftmul@f1+2
  5662  0035A0  EC82  F021         	call	___ftmul	;wreg free
  5663  0035A4  C0A2  F103         	movff	?___ftmul,_fround$1718
  5664  0035A8  C0A3  F104         	movff	?___ftmul+1,_fround$1718+1
  5665  0035AC  C0A4  F105         	movff	?___ftmul+2,_fround$1718+2
  5666                           
  5667                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5668  0035B0  C103  F0A2         	movff	_fround$1718,___ftmul@f1
  5669  0035B4  C104  F0A3         	movff	_fround$1718+1,___ftmul@f1+1
  5670  0035B8  C105  F0A4         	movff	_fround$1718+2,___ftmul@f1+2
  5671  0035BC  0E00               	movlw	0
  5672  0035BE  0100               	movlb	0	; () banked
  5673  0035C0  6FA5               	movwf	___ftmul@f2& (0+255),b
  5674  0035C2  0E00               	movlw	0
  5675  0035C4  0100               	movlb	0	; () banked
  5676  0035C6  6FA6               	movwf	(___ftmul@f2+1)& (0+255),b
  5677  0035C8  0E3F               	movlw	63
  5678  0035CA  0100               	movlb	0	; () banked
  5679  0035CC  6FA7               	movwf	(___ftmul@f2+2)& (0+255),b
  5680  0035CE  EC82  F021         	call	___ftmul	;wreg free
  5681  0035D2  D787               	goto	L5
  5682  0035D4                     l6157:
  5683                           
  5684                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5685  0035D4  0101               	movlb	1	; () banked
  5686  0035D6  5106               	movf	fround@prec& (0+255),w,b
  5687  0035D8  0D03               	mullw	3
  5688  0035DA  0E29               	movlw	low __npowers_
  5689  0035DC  24F3               	addwf	prodl,w,c
  5690  0035DE  6EF6               	movwf	tblptrl,c
  5691  0035E0  0E06               	movlw	high __npowers_
  5692  0035E2  20F4               	addwfc	prodh,w,c
  5693  0035E4  6EF7               	movwf	tblptrh,c
  5694  0035E6                     	if	0	;There are less than 3 active tblptr bytes
  5695  0035E6                     	endif
  5696  0035E6  0009               	tblrd		*+
  5697  0035E8  CFF5 F0A2          	movff	tablat,___ftmul@f1
  5698  0035EC  0009               	tblrd		*+
  5699  0035EE  CFF5 F0A3          	movff	tablat,___ftmul@f1+1
  5700  0035F2  000A               	tblrd		*-
  5701  0035F4  CFF5 F0A4          	movff	tablat,___ftmul@f1+2
  5702  0035F8  0E00               	movlw	0
  5703  0035FA  0100               	movlb	0	; () banked
  5704  0035FC  6FA5               	movwf	___ftmul@f2& (0+255),b
  5705  0035FE  0E00               	movlw	0
  5706  003600  0100               	movlb	0	; () banked
  5707  003602  6FA6               	movwf	(___ftmul@f2+1)& (0+255),b
  5708  003604  0E3F               	movlw	63
  5709  003606  0100               	movlb	0	; () banked
  5710  003608  6FA7               	movwf	(___ftmul@f2+2)& (0+255),b
  5711  00360A  EC82  F021         	call	___ftmul	;wreg free
  5712  00360E  C0A2  F0B1         	movff	?___ftmul,?_fround
  5713  003612  C0A3  F0B2         	movff	?___ftmul+1,?_fround+1
  5714  003616  C0A4  F0B3         	movff	?___ftmul+2,?_fround+2
  5715  00361A  0012               	return	
  5716  00361C                     __end_of_fround:
  5717                           	opt stack 0
  5718                           tosu	equ	0xFFF
  5719                           tosh	equ	0xFFE
  5720                           tosl	equ	0xFFD
  5721                           pclath	equ	0xFFA
  5722                           tblptru	equ	0xFF8
  5723                           tblptrh	equ	0xFF7
  5724                           tblptrl	equ	0xFF6
  5725                           tablat	equ	0xFF5
  5726                           prodh	equ	0xFF4
  5727                           prodl	equ	0xFF3
  5728                           intcon	equ	0xFF2
  5729                           postinc0	equ	0xFEE
  5730                           wreg	equ	0xFE8
  5731                           indf2	equ	0xFDF
  5732                           postinc2	equ	0xFDE
  5733                           postdec2	equ	0xFDD
  5734                           fsr2h	equ	0xFDA
  5735                           fsr2l	equ	0xFD9
  5736                           status	equ	0xFD8
  5737                           
  5738 ;; *************** function ___wmul *****************
  5739 ;; Defined at:
  5740 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;  multiplier      2   60[BANK0 ] unsigned int 
  5743 ;;  multiplicand    2   62[BANK0 ] unsigned int 
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;  product         2   64[BANK0 ] unsigned int 
  5746 ;; Return value:  Size  Location     Type
  5747 ;;                  2   60[BANK0 ] unsigned int 
  5748 ;; Registers used:
  5749 ;;		wreg, status,2, status,0, prodl, prodh
  5750 ;; Tracked objects:
  5751 ;;		On entry : 0/0
  5752 ;;		On exit  : 0/0
  5753 ;;		Unchanged: 0/0
  5754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5755 ;;      Params:         0       4       0       0       0       0       0
  5756 ;;      Locals:         0       2       0       0       0       0       0
  5757 ;;      Temps:          0       0       0       0       0       0       0
  5758 ;;      Totals:         0       6       0       0       0       0       0
  5759 ;;Total ram usage:        6 bytes
  5760 ;; Hardware stack levels used:    1
  5761 ;; Hardware stack levels required when called:    7
  5762 ;; This function calls:
  5763 ;;		Nothing
  5764 ;; This function is called by:
  5765 ;;		_fround
  5766 ;;		_scale
  5767 ;;		__doprnt
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771                           	psect	text8
  5772  00582C                     __ptext8:
  5773                           	opt stack 0
  5774  00582C                     ___wmul:
  5775                           	opt stack 20
  5776                           
  5777                           ;incstack = 0
  5778  00582C  0100               	movlb	0	; () banked
  5779  00582E  519C               	movf	___wmul@multiplier& (0+255),w,b
  5780  005830  0100               	movlb	0	; () banked
  5781  005832  039E               	mulwf	___wmul@multiplicand& (0+255),b
  5782  005834  CFF3 F0A0          	movff	prodl,___wmul@product
  5783  005838  CFF4 F0A1          	movff	prodh,___wmul@product+1
  5784  00583C  0100               	movlb	0	; () banked
  5785  00583E  519C               	movf	___wmul@multiplier& (0+255),w,b
  5786  005840  0100               	movlb	0	; () banked
  5787  005842  039F               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5788  005844  50F3               	movf	prodl,w,c
  5789  005846  0100               	movlb	0	; () banked
  5790  005848  27A1               	addwf	(___wmul@product+1)& (0+255),f,b
  5791  00584A  0100               	movlb	0	; () banked
  5792  00584C  519D               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5793  00584E  0100               	movlb	0	; () banked
  5794  005850  039E               	mulwf	___wmul@multiplicand& (0+255),b
  5795  005852  50F3               	movf	prodl,w,c
  5796  005854  0100               	movlb	0	; () banked
  5797  005856  27A1               	addwf	(___wmul@product+1)& (0+255),f,b
  5798                           
  5799                           ; BSR set to: 0
  5800  005858  C0A0  F09C         	movff	___wmul@product,?___wmul
  5801  00585C  C0A1  F09D         	movff	___wmul@product+1,?___wmul+1
  5802  005860  0012               	return	
  5803  005862                     __end_of___wmul:
  5804                           	opt stack 0
  5805                           tosu	equ	0xFFF
  5806                           tosh	equ	0xFFE
  5807                           tosl	equ	0xFFD
  5808                           pclath	equ	0xFFA
  5809                           tblptru	equ	0xFF8
  5810                           tblptrh	equ	0xFF7
  5811                           tblptrl	equ	0xFF6
  5812                           tablat	equ	0xFF5
  5813                           prodh	equ	0xFF4
  5814                           prodl	equ	0xFF3
  5815                           intcon	equ	0xFF2
  5816                           postinc0	equ	0xFEE
  5817                           wreg	equ	0xFE8
  5818                           indf2	equ	0xFDF
  5819                           postinc2	equ	0xFDE
  5820                           postdec2	equ	0xFDD
  5821                           fsr2h	equ	0xFDA
  5822                           fsr2l	equ	0xFD9
  5823                           status	equ	0xFD8
  5824                           
  5825 ;; *************** function ___ftmul *****************
  5826 ;; Defined at:
  5827 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  5828 ;; Parameters:    Size  Location     Type
  5829 ;;  f1              3   66[BANK0 ] float 
  5830 ;;  f2              3   69[BANK0 ] float 
  5831 ;; Auto vars:     Size  Location     Type
  5832 ;;  f3_as_produc    3   76[BANK0 ] unsigned um
  5833 ;;  sign            1   80[BANK0 ] unsigned char 
  5834 ;;  cntr            1   79[BANK0 ] unsigned char 
  5835 ;;  exp             1   75[BANK0 ] unsigned char 
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  3   66[BANK0 ] float 
  5838 ;; Registers used:
  5839 ;;		wreg, status,2, status,0, cstack
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5845 ;;      Params:         0       6       0       0       0       0       0
  5846 ;;      Locals:         0       6       0       0       0       0       0
  5847 ;;      Temps:          0       3       0       0       0       0       0
  5848 ;;      Totals:         0      15       0       0       0       0       0
  5849 ;;Total ram usage:       15 bytes
  5850 ;; Hardware stack levels used:    1
  5851 ;; Hardware stack levels required when called:    8
  5852 ;; This function calls:
  5853 ;;		___ftpack
  5854 ;; This function is called by:
  5855 ;;		_fround
  5856 ;;		_scale
  5857 ;;		__doprnt
  5858 ;; This function uses a non-reentrant model
  5859 ;;
  5860                           
  5861                           	psect	text9
  5862  004304                     __ptext9:
  5863                           	opt stack 0
  5864  004304                     ___ftmul:
  5865                           	opt stack 19
  5866                           
  5867                           ; BSR set to: 0
  5868                           ;incstack = 0
  5869  004304  C0A4  F0A8         	movff	___ftmul@f1+2,??___ftmul
  5870  004308  0100               	movlb	0	; () banked
  5871  00430A  6BA9               	clrf	(??___ftmul+1)& (0+255),b
  5872  00430C  6BAA               	clrf	(??___ftmul+2)& (0+255),b
  5873  00430E  0100               	movlb	0	; () banked
  5874  004310  35A3               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  5875  004312  0100               	movlb	0	; () banked
  5876  004314  37A8               	rlcf	??___ftmul& (0+255),f,b
  5877  004316  E301               	bnc	u8421
  5878  004318  81A9               	bsf	(??___ftmul+1)& (0+255),0,b
  5879  00431A                     u8421:
  5880  00431A  0100               	movlb	0	; () banked
  5881  00431C  51A8               	movf	??___ftmul& (0+255),w,b
  5882  00431E  0100               	movlb	0	; () banked
  5883  004320  6FAB               	movwf	___ftmul@exp& (0+255),b
  5884  004322  0100               	movlb	0	; () banked
  5885  004324  51AB               	movf	___ftmul@exp& (0+255),w,b
  5886  004326  A4D8               	btfss	status,2,c
  5887  004328  D00A               	goto	l6017
  5888                           
  5889                           ; BSR set to: 0
  5890  00432A  0E00               	movlw	0
  5891  00432C  0100               	movlb	0	; () banked
  5892  00432E  6FA2               	movwf	?___ftmul& (0+255),b
  5893  004330  0E00               	movlw	0
  5894  004332  0100               	movlb	0	; () banked
  5895  004334  6FA3               	movwf	(?___ftmul+1)& (0+255),b
  5896  004336  0E00               	movlw	0
  5897  004338  0100               	movlb	0	; () banked
  5898  00433A  6FA4               	movwf	(?___ftmul+2)& (0+255),b
  5899                           
  5900                           ; BSR set to: 0
  5901  00433C  0012               	return	
  5902  00433E                     l6017:
  5903                           
  5904                           ; BSR set to: 0
  5905  00433E  C0A7  F0A8         	movff	___ftmul@f2+2,??___ftmul
  5906  004342  0100               	movlb	0	; () banked
  5907  004344  6BA9               	clrf	(??___ftmul+1)& (0+255),b
  5908  004346  6BAA               	clrf	(??___ftmul+2)& (0+255),b
  5909  004348  0100               	movlb	0	; () banked
  5910  00434A  35A6               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  5911  00434C  0100               	movlb	0	; () banked
  5912  00434E  37A8               	rlcf	??___ftmul& (0+255),f,b
  5913  004350  E301               	bnc	u8441
  5914  004352  81A9               	bsf	(??___ftmul+1)& (0+255),0,b
  5915  004354                     u8441:
  5916  004354  0100               	movlb	0	; () banked
  5917  004356  51A8               	movf	??___ftmul& (0+255),w,b
  5918  004358  0100               	movlb	0	; () banked
  5919  00435A  6FB0               	movwf	___ftmul@sign& (0+255),b
  5920  00435C  0100               	movlb	0	; () banked
  5921  00435E  51B0               	movf	___ftmul@sign& (0+255),w,b
  5922  004360  A4D8               	btfss	status,2,c
  5923  004362  D00A               	goto	l6023
  5924                           
  5925                           ; BSR set to: 0
  5926  004364  0E00               	movlw	0
  5927  004366  0100               	movlb	0	; () banked
  5928  004368  6FA2               	movwf	?___ftmul& (0+255),b
  5929  00436A  0E00               	movlw	0
  5930  00436C  0100               	movlb	0	; () banked
  5931  00436E  6FA3               	movwf	(?___ftmul+1)& (0+255),b
  5932  004370  0E00               	movlw	0
  5933  004372  0100               	movlb	0	; () banked
  5934  004374  6FA4               	movwf	(?___ftmul+2)& (0+255),b
  5935                           
  5936                           ; BSR set to: 0
  5937  004376  0012               	return	
  5938  004378                     l6023:
  5939                           
  5940                           ; BSR set to: 0
  5941  004378  0100               	movlb	0	; () banked
  5942  00437A  51B0               	movf	___ftmul@sign& (0+255),w,b
  5943  00437C  0F7B               	addlw	123
  5944  00437E  0100               	movlb	0	; () banked
  5945  004380  27AB               	addwf	___ftmul@exp& (0+255),f,b
  5946                           
  5947                           ; BSR set to: 0
  5948  004382  C0A4  F0B0         	movff	___ftmul@f1+2,___ftmul@sign
  5949  004386  0100               	movlb	0	; () banked
  5950  004388  51A7               	movf	(___ftmul@f2+2)& (0+255),w,b
  5951  00438A  0100               	movlb	0	; () banked
  5952  00438C  1BB0               	xorwf	___ftmul@sign& (0+255),f,b
  5953  00438E  0E80               	movlw	128
  5954  004390  0100               	movlb	0	; () banked
  5955  004392  17B0               	andwf	___ftmul@sign& (0+255),f,b
  5956                           
  5957                           ; BSR set to: 0
  5958  004394  0100               	movlb	0	; () banked
  5959  004396  8FA3               	bsf	(___ftmul@f1+1)& (0+255),7,b
  5960                           
  5961                           ; BSR set to: 0
  5962  004398  0100               	movlb	0	; () banked
  5963  00439A  8FA6               	bsf	(___ftmul@f2+1)& (0+255),7,b
  5964                           
  5965                           ; BSR set to: 0
  5966  00439C  0EFF               	movlw	255
  5967  00439E  0100               	movlb	0	; () banked
  5968  0043A0  17A5               	andwf	___ftmul@f2& (0+255),f,b
  5969  0043A2  0EFF               	movlw	255
  5970  0043A4  0100               	movlb	0	; () banked
  5971  0043A6  17A6               	andwf	(___ftmul@f2+1)& (0+255),f,b
  5972  0043A8  0E00               	movlw	0
  5973  0043AA  0100               	movlb	0	; () banked
  5974  0043AC  17A7               	andwf	(___ftmul@f2+2)& (0+255),f,b
  5975                           
  5976                           ; BSR set to: 0
  5977  0043AE  0E00               	movlw	0
  5978  0043B0  0100               	movlb	0	; () banked
  5979  0043B2  6FAC               	movwf	___ftmul@f3_as_product& (0+255),b
  5980  0043B4  0E00               	movlw	0
  5981  0043B6  0100               	movlb	0	; () banked
  5982  0043B8  6FAD               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  5983  0043BA  0E00               	movlw	0
  5984  0043BC  0100               	movlb	0	; () banked
  5985  0043BE  6FAE               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  5986                           
  5987                           ; BSR set to: 0
  5988  0043C0  0E07               	movlw	7
  5989  0043C2  0100               	movlb	0	; () banked
  5990  0043C4  6FAF               	movwf	___ftmul@cntr& (0+255),b
  5991  0043C6                     l6037:
  5992                           
  5993                           ; BSR set to: 0
  5994  0043C6  0100               	movlb	0	; () banked
  5995  0043C8  A1A2               	btfss	___ftmul@f1& (0+255),0,b
  5996  0043CA  D00C               	goto	l6041
  5997                           
  5998                           ; BSR set to: 0
  5999  0043CC  0100               	movlb	0	; () banked
  6000  0043CE  51A5               	movf	___ftmul@f2& (0+255),w,b
  6001  0043D0  0100               	movlb	0	; () banked
  6002  0043D2  27AC               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6003  0043D4  0100               	movlb	0	; () banked
  6004  0043D6  51A6               	movf	(___ftmul@f2+1)& (0+255),w,b
  6005  0043D8  0100               	movlb	0	; () banked
  6006  0043DA  23AD               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6007  0043DC  0100               	movlb	0	; () banked
  6008  0043DE  51A7               	movf	(___ftmul@f2+2)& (0+255),w,b
  6009  0043E0  0100               	movlb	0	; () banked
  6010  0043E2  23AE               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6011  0043E4                     l6041:
  6012                           
  6013                           ; BSR set to: 0
  6014  0043E4  0100               	movlb	0	; () banked
  6015  0043E6  90D8               	bcf	status,0,c
  6016  0043E8  33A4               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6017  0043EA  33A3               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6018  0043EC  33A2               	rrcf	___ftmul@f1& (0+255),f,b
  6019  0043EE  0100               	movlb	0	; () banked
  6020  0043F0  90D8               	bcf	status,0,c
  6021  0043F2  37A5               	rlcf	___ftmul@f2& (0+255),f,b
  6022  0043F4  37A6               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  6023  0043F6  37A7               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  6024                           
  6025                           ; BSR set to: 0
  6026  0043F8  0100               	movlb	0	; () banked
  6027  0043FA  2FAF               	decfsz	___ftmul@cntr& (0+255),f,b
  6028  0043FC  D7E4               	goto	l6037
  6029                           
  6030                           ; BSR set to: 0
  6031                           
  6032                           ; BSR set to: 0
  6033  0043FE  0E09               	movlw	9
  6034  004400  0100               	movlb	0	; () banked
  6035  004402  6FAF               	movwf	___ftmul@cntr& (0+255),b
  6036  004404                     l6047:
  6037                           
  6038                           ; BSR set to: 0
  6039  004404  0100               	movlb	0	; () banked
  6040  004406  A1A2               	btfss	___ftmul@f1& (0+255),0,b
  6041  004408  D00C               	goto	l6051
  6042                           
  6043                           ; BSR set to: 0
  6044  00440A  0100               	movlb	0	; () banked
  6045  00440C  51A5               	movf	___ftmul@f2& (0+255),w,b
  6046  00440E  0100               	movlb	0	; () banked
  6047  004410  27AC               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6048  004412  0100               	movlb	0	; () banked
  6049  004414  51A6               	movf	(___ftmul@f2+1)& (0+255),w,b
  6050  004416  0100               	movlb	0	; () banked
  6051  004418  23AD               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6052  00441A  0100               	movlb	0	; () banked
  6053  00441C  51A7               	movf	(___ftmul@f2+2)& (0+255),w,b
  6054  00441E  0100               	movlb	0	; () banked
  6055  004420  23AE               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6056  004422                     l6051:
  6057                           
  6058                           ; BSR set to: 0
  6059  004422  0100               	movlb	0	; () banked
  6060  004424  90D8               	bcf	status,0,c
  6061  004426  33A4               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6062  004428  33A3               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6063  00442A  33A2               	rrcf	___ftmul@f1& (0+255),f,b
  6064  00442C  0100               	movlb	0	; () banked
  6065  00442E  90D8               	bcf	status,0,c
  6066  004430  33AE               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  6067  004432  33AD               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  6068  004434  33AC               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  6069                           
  6070                           ; BSR set to: 0
  6071  004436  0100               	movlb	0	; () banked
  6072  004438  2FAF               	decfsz	___ftmul@cntr& (0+255),f,b
  6073  00443A  D7E4               	goto	l6047
  6074                           
  6075                           ; BSR set to: 0
  6076                           
  6077                           ; BSR set to: 0
  6078  00443C  C0AC  F08E         	movff	___ftmul@f3_as_product,___ftpack@arg
  6079  004440  C0AD  F08F         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6080  004444  C0AE  F090         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6081  004448  C0AB  F091         	movff	___ftmul@exp,___ftpack@exp
  6082  00444C  C0B0  F092         	movff	___ftmul@sign,___ftpack@sign
  6083  004450  ECA6  F024         	call	___ftpack	;wreg free
  6084  004454  C08E  F0A2         	movff	?___ftpack,?___ftmul
  6085  004458  C08F  F0A3         	movff	?___ftpack+1,?___ftmul+1
  6086  00445C  C090  F0A4         	movff	?___ftpack+2,?___ftmul+2
  6087  004460  0012               	return	
  6088  004462                     __end_of___ftmul:
  6089                           	opt stack 0
  6090                           tosu	equ	0xFFF
  6091                           tosh	equ	0xFFE
  6092                           tosl	equ	0xFFD
  6093                           pclath	equ	0xFFA
  6094                           tblptru	equ	0xFF8
  6095                           tblptrh	equ	0xFF7
  6096                           tblptrl	equ	0xFF6
  6097                           tablat	equ	0xFF5
  6098                           prodh	equ	0xFF4
  6099                           prodl	equ	0xFF3
  6100                           intcon	equ	0xFF2
  6101                           postinc0	equ	0xFEE
  6102                           wreg	equ	0xFE8
  6103                           indf2	equ	0xFDF
  6104                           postinc2	equ	0xFDE
  6105                           postdec2	equ	0xFDD
  6106                           fsr2h	equ	0xFDA
  6107                           fsr2l	equ	0xFD9
  6108                           status	equ	0xFD8
  6109                           
  6110 ;; *************** function ___awmod *****************
  6111 ;; Defined at:
  6112 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  6113 ;; Parameters:    Size  Location     Type
  6114 ;;  dividend        2   46[BANK0 ] int 
  6115 ;;  divisor         2   48[BANK0 ] int 
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;  sign            1   51[BANK0 ] unsigned char 
  6118 ;;  counter         1   50[BANK0 ] unsigned char 
  6119 ;; Return value:  Size  Location     Type
  6120 ;;                  2   46[BANK0 ] int 
  6121 ;; Registers used:
  6122 ;;		wreg, status,2, status,0
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6128 ;;      Params:         0       4       0       0       0       0       0
  6129 ;;      Locals:         0       2       0       0       0       0       0
  6130 ;;      Temps:          0       0       0       0       0       0       0
  6131 ;;      Totals:         0       6       0       0       0       0       0
  6132 ;;Total ram usage:        6 bytes
  6133 ;; Hardware stack levels used:    1
  6134 ;; Hardware stack levels required when called:    7
  6135 ;; This function calls:
  6136 ;;		Nothing
  6137 ;; This function is called by:
  6138 ;;		_fround
  6139 ;;		_scale
  6140 ;; This function uses a non-reentrant model
  6141 ;;
  6142                           
  6143                           	psect	text10
  6144  0050F4                     __ptext10:
  6145                           	opt stack 0
  6146  0050F4                     ___awmod:
  6147                           	opt stack 20
  6148                           
  6149                           ;incstack = 0
  6150  0050F4  0E00               	movlw	0
  6151  0050F6  0100               	movlb	0	; () banked
  6152  0050F8  6F93               	movwf	___awmod@sign& (0+255),b
  6153                           
  6154                           ; BSR set to: 0
  6155  0050FA  0100               	movlb	0	; () banked
  6156  0050FC  AF8F               	btfss	(___awmod@dividend+1)& (0+255),7,b
  6157  0050FE  D008               	goto	l6111
  6158                           
  6159                           ; BSR set to: 0
  6160  005100  0100               	movlb	0	; () banked
  6161  005102  6D8E               	negf	___awmod@dividend& (0+255),b
  6162  005104  1F8F               	comf	(___awmod@dividend+1)& (0+255),f,b
  6163  005106  B0D8               	btfsc	status,0,c
  6164  005108  2B8F               	incf	(___awmod@dividend+1)& (0+255),f,b
  6165                           
  6166                           ; BSR set to: 0
  6167  00510A  0E01               	movlw	1
  6168  00510C  0100               	movlb	0	; () banked
  6169  00510E  6F93               	movwf	___awmod@sign& (0+255),b
  6170  005110                     l6111:
  6171                           
  6172                           ; BSR set to: 0
  6173  005110  0100               	movlb	0	; () banked
  6174  005112  AF91               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6175  005114  D005               	goto	l6115
  6176                           
  6177                           ; BSR set to: 0
  6178  005116  0100               	movlb	0	; () banked
  6179  005118  6D90               	negf	___awmod@divisor& (0+255),b
  6180  00511A  1F91               	comf	(___awmod@divisor+1)& (0+255),f,b
  6181  00511C  B0D8               	btfsc	status,0,c
  6182  00511E  2B91               	incf	(___awmod@divisor+1)& (0+255),f,b
  6183  005120                     l6115:
  6184                           
  6185                           ; BSR set to: 0
  6186  005120  0100               	movlb	0	; () banked
  6187  005122  5190               	movf	___awmod@divisor& (0+255),w,b
  6188  005124  0100               	movlb	0	; () banked
  6189  005126  1191               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6190  005128  B4D8               	btfsc	status,2,c
  6191  00512A  D026               	goto	l6131
  6192                           
  6193                           ; BSR set to: 0
  6194  00512C  0E01               	movlw	1
  6195  00512E  0100               	movlb	0	; () banked
  6196  005130  6F92               	movwf	___awmod@counter& (0+255),b
  6197  005132  D006               	goto	l6121
  6198  005134                     l6119:
  6199                           
  6200                           ; BSR set to: 0
  6201  005134  0100               	movlb	0	; () banked
  6202  005136  90D8               	bcf	status,0,c
  6203  005138  3790               	rlcf	___awmod@divisor& (0+255),f,b
  6204  00513A  3791               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6205  00513C  0100               	movlb	0	; () banked
  6206  00513E  2B92               	incf	___awmod@counter& (0+255),f,b
  6207  005140                     l6121:
  6208                           
  6209                           ; BSR set to: 0
  6210  005140  0100               	movlb	0	; () banked
  6211  005142  AF91               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6212  005144  D7F7               	goto	l6119
  6213  005146                     l6123:
  6214                           
  6215                           ; BSR set to: 0
  6216  005146  0100               	movlb	0	; () banked
  6217  005148  5190               	movf	___awmod@divisor& (0+255),w,b
  6218  00514A  0100               	movlb	0	; () banked
  6219  00514C  5D8E               	subwf	___awmod@dividend& (0+255),w,b
  6220  00514E  0100               	movlb	0	; () banked
  6221  005150  5191               	movf	(___awmod@divisor+1)& (0+255),w,b
  6222  005152  0100               	movlb	0	; () banked
  6223  005154  598F               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6224  005156  A0D8               	btfss	status,0,c
  6225  005158  D008               	goto	l6127
  6226                           
  6227                           ; BSR set to: 0
  6228  00515A  0100               	movlb	0	; () banked
  6229  00515C  5190               	movf	___awmod@divisor& (0+255),w,b
  6230  00515E  0100               	movlb	0	; () banked
  6231  005160  5F8E               	subwf	___awmod@dividend& (0+255),f,b
  6232  005162  0100               	movlb	0	; () banked
  6233  005164  5191               	movf	(___awmod@divisor+1)& (0+255),w,b
  6234  005166  0100               	movlb	0	; () banked
  6235  005168  5B8F               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6236  00516A                     l6127:
  6237                           
  6238                           ; BSR set to: 0
  6239  00516A  0100               	movlb	0	; () banked
  6240  00516C  90D8               	bcf	status,0,c
  6241  00516E  3391               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6242  005170  3390               	rrcf	___awmod@divisor& (0+255),f,b
  6243                           
  6244                           ; BSR set to: 0
  6245  005172  0100               	movlb	0	; () banked
  6246  005174  2F92               	decfsz	___awmod@counter& (0+255),f,b
  6247  005176  D7E7               	goto	l6123
  6248  005178                     l6131:
  6249                           
  6250                           ; BSR set to: 0
  6251  005178  0100               	movlb	0	; () banked
  6252  00517A  5193               	movf	___awmod@sign& (0+255),w,b
  6253  00517C  0100               	movlb	0	; () banked
  6254  00517E  B4D8               	btfsc	status,2,c
  6255  005180  D005               	goto	l6135
  6256                           
  6257                           ; BSR set to: 0
  6258  005182  0100               	movlb	0	; () banked
  6259  005184  6D8E               	negf	___awmod@dividend& (0+255),b
  6260  005186  1F8F               	comf	(___awmod@dividend+1)& (0+255),f,b
  6261  005188  B0D8               	btfsc	status,0,c
  6262  00518A  2B8F               	incf	(___awmod@dividend+1)& (0+255),f,b
  6263  00518C                     l6135:
  6264                           
  6265                           ; BSR set to: 0
  6266  00518C  C08E  F08E         	movff	___awmod@dividend,?___awmod
  6267  005190  C08F  F08F         	movff	___awmod@dividend+1,?___awmod+1
  6268  005194  0012               	return	
  6269  005196                     __end_of___awmod:
  6270                           	opt stack 0
  6271                           tosu	equ	0xFFF
  6272                           tosh	equ	0xFFE
  6273                           tosl	equ	0xFFD
  6274                           pclath	equ	0xFFA
  6275                           tblptru	equ	0xFF8
  6276                           tblptrh	equ	0xFF7
  6277                           tblptrl	equ	0xFF6
  6278                           tablat	equ	0xFF5
  6279                           prodh	equ	0xFF4
  6280                           prodl	equ	0xFF3
  6281                           intcon	equ	0xFF2
  6282                           postinc0	equ	0xFEE
  6283                           wreg	equ	0xFE8
  6284                           indf2	equ	0xFDF
  6285                           postinc2	equ	0xFDE
  6286                           postdec2	equ	0xFDD
  6287                           fsr2h	equ	0xFDA
  6288                           fsr2l	equ	0xFD9
  6289                           status	equ	0xFD8
  6290                           
  6291 ;; *************** function ___awdiv *****************
  6292 ;; Defined at:
  6293 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  6294 ;; Parameters:    Size  Location     Type
  6295 ;;  dividend        2   52[BANK0 ] int 
  6296 ;;  divisor         2   54[BANK0 ] int 
  6297 ;; Auto vars:     Size  Location     Type
  6298 ;;  quotient        2   58[BANK0 ] int 
  6299 ;;  sign            1   57[BANK0 ] unsigned char 
  6300 ;;  counter         1   56[BANK0 ] unsigned char 
  6301 ;; Return value:  Size  Location     Type
  6302 ;;                  2   52[BANK0 ] int 
  6303 ;; Registers used:
  6304 ;;		wreg, status,2, status,0
  6305 ;; Tracked objects:
  6306 ;;		On entry : 0/0
  6307 ;;		On exit  : 0/0
  6308 ;;		Unchanged: 0/0
  6309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6310 ;;      Params:         0       4       0       0       0       0       0
  6311 ;;      Locals:         0       4       0       0       0       0       0
  6312 ;;      Temps:          0       0       0       0       0       0       0
  6313 ;;      Totals:         0       8       0       0       0       0       0
  6314 ;;Total ram usage:        8 bytes
  6315 ;; Hardware stack levels used:    1
  6316 ;; Hardware stack levels required when called:    7
  6317 ;; This function calls:
  6318 ;;		Nothing
  6319 ;; This function is called by:
  6320 ;;		_fround
  6321 ;;		_scale
  6322 ;;		__doprnt
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325                           
  6326                           	psect	text11
  6327  004ECC                     __ptext11:
  6328                           	opt stack 0
  6329  004ECC                     ___awdiv:
  6330                           	opt stack 20
  6331                           
  6332                           ; BSR set to: 0
  6333                           ;incstack = 0
  6334  004ECC  0E00               	movlw	0
  6335  004ECE  0100               	movlb	0	; () banked
  6336  004ED0  6F99               	movwf	___awdiv@sign& (0+255),b
  6337                           
  6338                           ; BSR set to: 0
  6339  004ED2  0100               	movlb	0	; () banked
  6340  004ED4  AF97               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6341  004ED6  D008               	goto	l6067
  6342                           
  6343                           ; BSR set to: 0
  6344  004ED8  0100               	movlb	0	; () banked
  6345  004EDA  6D96               	negf	___awdiv@divisor& (0+255),b
  6346  004EDC  1F97               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6347  004EDE  B0D8               	btfsc	status,0,c
  6348  004EE0  2B97               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6349                           
  6350                           ; BSR set to: 0
  6351  004EE2  0E01               	movlw	1
  6352  004EE4  0100               	movlb	0	; () banked
  6353  004EE6  6F99               	movwf	___awdiv@sign& (0+255),b
  6354  004EE8                     l6067:
  6355                           
  6356                           ; BSR set to: 0
  6357  004EE8  0100               	movlb	0	; () banked
  6358  004EEA  AF95               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6359  004EEC  D008               	goto	l6073
  6360                           
  6361                           ; BSR set to: 0
  6362  004EEE  0100               	movlb	0	; () banked
  6363  004EF0  6D94               	negf	___awdiv@dividend& (0+255),b
  6364  004EF2  1F95               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6365  004EF4  B0D8               	btfsc	status,0,c
  6366  004EF6  2B95               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6367                           
  6368                           ; BSR set to: 0
  6369  004EF8  0E01               	movlw	1
  6370  004EFA  0100               	movlb	0	; () banked
  6371  004EFC  1B99               	xorwf	___awdiv@sign& (0+255),f,b
  6372  004EFE                     l6073:
  6373                           
  6374                           ; BSR set to: 0
  6375  004EFE  0E00               	movlw	0
  6376  004F00  0100               	movlb	0	; () banked
  6377  004F02  6F9B               	movwf	(___awdiv@quotient+1)& (0+255),b
  6378  004F04  0E00               	movlw	0
  6379  004F06  6F9A               	movwf	___awdiv@quotient& (0+255),b
  6380                           
  6381                           ; BSR set to: 0
  6382  004F08  0100               	movlb	0	; () banked
  6383  004F0A  5196               	movf	___awdiv@divisor& (0+255),w,b
  6384  004F0C  0100               	movlb	0	; () banked
  6385  004F0E  1197               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6386  004F10  B4D8               	btfsc	status,2,c
  6387  004F12  D02C               	goto	l6095
  6388                           
  6389                           ; BSR set to: 0
  6390  004F14  0E01               	movlw	1
  6391  004F16  0100               	movlb	0	; () banked
  6392  004F18  6F98               	movwf	___awdiv@counter& (0+255),b
  6393  004F1A  D006               	goto	l6081
  6394  004F1C                     l6079:
  6395                           
  6396                           ; BSR set to: 0
  6397  004F1C  0100               	movlb	0	; () banked
  6398  004F1E  90D8               	bcf	status,0,c
  6399  004F20  3796               	rlcf	___awdiv@divisor& (0+255),f,b
  6400  004F22  3797               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6401  004F24  0100               	movlb	0	; () banked
  6402  004F26  2B98               	incf	___awdiv@counter& (0+255),f,b
  6403  004F28                     l6081:
  6404                           
  6405                           ; BSR set to: 0
  6406  004F28  0100               	movlb	0	; () banked
  6407  004F2A  AF97               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6408  004F2C  D7F7               	goto	l6079
  6409  004F2E                     l6083:
  6410                           
  6411                           ; BSR set to: 0
  6412  004F2E  0100               	movlb	0	; () banked
  6413  004F30  90D8               	bcf	status,0,c
  6414  004F32  379A               	rlcf	___awdiv@quotient& (0+255),f,b
  6415  004F34  379B               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6416                           
  6417                           ; BSR set to: 0
  6418  004F36  0100               	movlb	0	; () banked
  6419  004F38  5196               	movf	___awdiv@divisor& (0+255),w,b
  6420  004F3A  0100               	movlb	0	; () banked
  6421  004F3C  5D94               	subwf	___awdiv@dividend& (0+255),w,b
  6422  004F3E  0100               	movlb	0	; () banked
  6423  004F40  5197               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6424  004F42  0100               	movlb	0	; () banked
  6425  004F44  5995               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6426  004F46  A0D8               	btfss	status,0,c
  6427  004F48  D00A               	goto	l6091
  6428                           
  6429                           ; BSR set to: 0
  6430  004F4A  0100               	movlb	0	; () banked
  6431  004F4C  5196               	movf	___awdiv@divisor& (0+255),w,b
  6432  004F4E  0100               	movlb	0	; () banked
  6433  004F50  5F94               	subwf	___awdiv@dividend& (0+255),f,b
  6434  004F52  0100               	movlb	0	; () banked
  6435  004F54  5197               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6436  004F56  0100               	movlb	0	; () banked
  6437  004F58  5B95               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6438                           
  6439                           ; BSR set to: 0
  6440  004F5A  0100               	movlb	0	; () banked
  6441  004F5C  819A               	bsf	___awdiv@quotient& (0+255),0,b
  6442  004F5E                     l6091:
  6443                           
  6444                           ; BSR set to: 0
  6445  004F5E  0100               	movlb	0	; () banked
  6446  004F60  90D8               	bcf	status,0,c
  6447  004F62  3397               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6448  004F64  3396               	rrcf	___awdiv@divisor& (0+255),f,b
  6449                           
  6450                           ; BSR set to: 0
  6451  004F66  0100               	movlb	0	; () banked
  6452  004F68  2F98               	decfsz	___awdiv@counter& (0+255),f,b
  6453  004F6A  D7E1               	goto	l6083
  6454  004F6C                     l6095:
  6455                           
  6456                           ; BSR set to: 0
  6457  004F6C  0100               	movlb	0	; () banked
  6458  004F6E  5199               	movf	___awdiv@sign& (0+255),w,b
  6459  004F70  0100               	movlb	0	; () banked
  6460  004F72  B4D8               	btfsc	status,2,c
  6461  004F74  D005               	goto	l6099
  6462                           
  6463                           ; BSR set to: 0
  6464  004F76  0100               	movlb	0	; () banked
  6465  004F78  6D9A               	negf	___awdiv@quotient& (0+255),b
  6466  004F7A  1F9B               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6467  004F7C  B0D8               	btfsc	status,0,c
  6468  004F7E  2B9B               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6469  004F80                     l6099:
  6470                           
  6471                           ; BSR set to: 0
  6472  004F80  C09A  F094         	movff	___awdiv@quotient,?___awdiv
  6473  004F84  C09B  F095         	movff	___awdiv@quotient+1,?___awdiv+1
  6474  004F88  0012               	return	
  6475  004F8A                     __end_of___awdiv:
  6476                           	opt stack 0
  6477                           tosu	equ	0xFFF
  6478                           tosh	equ	0xFFE
  6479                           tosl	equ	0xFFD
  6480                           pclath	equ	0xFFA
  6481                           tblptru	equ	0xFF8
  6482                           tblptrh	equ	0xFF7
  6483                           tblptrl	equ	0xFF6
  6484                           tablat	equ	0xFF5
  6485                           prodh	equ	0xFF4
  6486                           prodl	equ	0xFF3
  6487                           intcon	equ	0xFF2
  6488                           postinc0	equ	0xFEE
  6489                           wreg	equ	0xFE8
  6490                           indf2	equ	0xFDF
  6491                           postinc2	equ	0xFDE
  6492                           postdec2	equ	0xFDD
  6493                           fsr2h	equ	0xFDA
  6494                           fsr2l	equ	0xFD9
  6495                           status	equ	0xFD8
  6496                           
  6497 ;; *************** function __tdiv_to_l_ *****************
  6498 ;; Defined at:
  6499 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdivl.c"
  6500 ;; Parameters:    Size  Location     Type
  6501 ;;  f1              3   46[BANK0 ] float 
  6502 ;;  f2              3   49[BANK0 ] float 
  6503 ;; Auto vars:     Size  Location     Type
  6504 ;;  quot            4   55[BANK0 ] unsigned long 
  6505 ;;  exp1            1   60[BANK0 ] unsigned char 
  6506 ;;  cntr            1   59[BANK0 ] unsigned char 
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  4   46[BANK0 ] unsigned long 
  6509 ;; Registers used:
  6510 ;;		wreg, status,2, status,0
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6516 ;;      Params:         0       6       0       0       0       0       0
  6517 ;;      Locals:         0       6       0       0       0       0       0
  6518 ;;      Temps:          0       3       0       0       0       0       0
  6519 ;;      Totals:         0      15       0       0       0       0       0
  6520 ;;Total ram usage:       15 bytes
  6521 ;; Hardware stack levels used:    1
  6522 ;; Hardware stack levels required when called:    7
  6523 ;; This function calls:
  6524 ;;		Nothing
  6525 ;; This function is called by:
  6526 ;;		__doprnt
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530                           	psect	text12
  6531  003FDE                     __ptext12:
  6532                           	opt stack 0
  6533  003FDE                     __tdiv_to_l_:
  6534                           	opt stack 21
  6535                           
  6536                           ; BSR set to: 0
  6537                           ;incstack = 0
  6538  003FDE  C090  F094         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  6539  003FE2  0100               	movlb	0	; () banked
  6540  003FE4  6B95               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  6541  003FE6  6B96               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  6542  003FE8  0100               	movlb	0	; () banked
  6543  003FEA  358F               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6544  003FEC  0100               	movlb	0	; () banked
  6545  003FEE  3794               	rlcf	??__tdiv_to_l_& (0+255),f,b
  6546  003FF0  E301               	bnc	u5681
  6547  003FF2  8195               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  6548  003FF4                     u5681:
  6549  003FF4  0100               	movlb	0	; () banked
  6550  003FF6  5194               	movf	??__tdiv_to_l_& (0+255),w,b
  6551  003FF8  0100               	movlb	0	; () banked
  6552  003FFA  6F9C               	movwf	__tdiv_to_l_@exp1& (0+255),b
  6553  003FFC  0100               	movlb	0	; () banked
  6554  003FFE  519C               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6555  004000  A4D8               	btfss	status,2,c
  6556  004002  D00A               	goto	l4503
  6557                           
  6558                           ; BSR set to: 0
  6559  004004  0E00               	movlw	0
  6560  004006  0100               	movlb	0	; () banked
  6561  004008  6F8E               	movwf	?__tdiv_to_l_& (0+255),b
  6562  00400A  0E00               	movlw	0
  6563  00400C  6F8F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6564  00400E  0E00               	movlw	0
  6565  004010  6F90               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6566  004012  0E00               	movlw	0
  6567  004014  6F91               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6568                           
  6569                           ; BSR set to: 0
  6570  004016  0012               	return	
  6571  004018                     l4503:
  6572                           
  6573                           ; BSR set to: 0
  6574  004018  C093  F094         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  6575  00401C  0100               	movlb	0	; () banked
  6576  00401E  6B95               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  6577  004020  6B96               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  6578  004022  0100               	movlb	0	; () banked
  6579  004024  3592               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6580  004026  0100               	movlb	0	; () banked
  6581  004028  3794               	rlcf	??__tdiv_to_l_& (0+255),f,b
  6582  00402A  E301               	bnc	u5701
  6583  00402C  8195               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  6584  00402E                     u5701:
  6585  00402E  0100               	movlb	0	; () banked
  6586  004030  5194               	movf	??__tdiv_to_l_& (0+255),w,b
  6587  004032  0100               	movlb	0	; () banked
  6588  004034  6F9B               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6589  004036  0100               	movlb	0	; () banked
  6590  004038  519B               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6591  00403A  A4D8               	btfss	status,2,c
  6592  00403C  D00A               	goto	l4509
  6593                           
  6594                           ; BSR set to: 0
  6595  00403E  0E00               	movlw	0
  6596  004040  0100               	movlb	0	; () banked
  6597  004042  6F8E               	movwf	?__tdiv_to_l_& (0+255),b
  6598  004044  0E00               	movlw	0
  6599  004046  6F8F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6600  004048  0E00               	movlw	0
  6601  00404A  6F90               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6602  00404C  0E00               	movlw	0
  6603  00404E  6F91               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6604                           
  6605                           ; BSR set to: 0
  6606  004050  0012               	return	
  6607  004052                     l4509:
  6608                           
  6609                           ; BSR set to: 0
  6610  004052  0100               	movlb	0	; () banked
  6611  004054  8F8F               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  6612                           
  6613                           ; BSR set to: 0
  6614  004056  0EFF               	movlw	255
  6615  004058  0100               	movlb	0	; () banked
  6616  00405A  178E               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  6617  00405C  0EFF               	movlw	255
  6618  00405E  0100               	movlb	0	; () banked
  6619  004060  178F               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6620  004062  0E00               	movlw	0
  6621  004064  0100               	movlb	0	; () banked
  6622  004066  1790               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6623  004068  0100               	movlb	0	; () banked
  6624  00406A  8F92               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  6625                           
  6626                           ; BSR set to: 0
  6627  00406C  0EFF               	movlw	255
  6628  00406E  0100               	movlb	0	; () banked
  6629  004070  1791               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  6630  004072  0EFF               	movlw	255
  6631  004074  0100               	movlb	0	; () banked
  6632  004076  1792               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  6633  004078  0E00               	movlw	0
  6634  00407A  0100               	movlb	0	; () banked
  6635  00407C  1793               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  6636                           
  6637                           ; BSR set to: 0
  6638  00407E  0E00               	movlw	0
  6639  004080  0100               	movlb	0	; () banked
  6640  004082  6F97               	movwf	__tdiv_to_l_@quot& (0+255),b
  6641  004084  0E00               	movlw	0
  6642  004086  6F98               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  6643  004088  0E00               	movlw	0
  6644  00408A  6F99               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  6645  00408C  0E00               	movlw	0
  6646  00408E  6F9A               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  6647                           
  6648                           ; BSR set to: 0
  6649  004090  0E7F               	movlw	127
  6650  004092  0100               	movlb	0	; () banked
  6651  004094  5F9C               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6652                           
  6653                           ; BSR set to: 0
  6654  004096  0100               	movlb	0	; () banked
  6655  004098  519B               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6656  00409A  0F98               	addlw	152
  6657  00409C  0100               	movlb	0	; () banked
  6658  00409E  5F9C               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6659                           
  6660                           ; BSR set to: 0
  6661  0040A0  0E18               	movlw	24
  6662  0040A2  0100               	movlb	0	; () banked
  6663  0040A4  6F9B               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6664  0040A6                     l821:
  6665                           
  6666                           ; BSR set to: 0
  6667  0040A6  0100               	movlb	0	; () banked
  6668  0040A8  90D8               	bcf	status,0,c
  6669  0040AA  3797               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6670  0040AC  3798               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6671  0040AE  3799               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6672  0040B0  379A               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6673                           
  6674                           ; BSR set to: 0
  6675  0040B2  0100               	movlb	0	; () banked
  6676  0040B4  5191               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6677  0040B6  0100               	movlb	0	; () banked
  6678  0040B8  5D8E               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  6679  0040BA  0100               	movlb	0	; () banked
  6680  0040BC  5192               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6681  0040BE  0100               	movlb	0	; () banked
  6682  0040C0  598F               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6683  0040C2  0100               	movlb	0	; () banked
  6684  0040C4  5193               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6685  0040C6  0100               	movlb	0	; () banked
  6686  0040C8  5990               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  6687  0040CA  A0D8               	btfss	status,0,c
  6688  0040CC  D00E               	goto	l822
  6689                           
  6690                           ; BSR set to: 0
  6691  0040CE  0100               	movlb	0	; () banked
  6692  0040D0  5191               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6693  0040D2  0100               	movlb	0	; () banked
  6694  0040D4  5F8E               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  6695  0040D6  0100               	movlb	0	; () banked
  6696  0040D8  5192               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6697  0040DA  0100               	movlb	0	; () banked
  6698  0040DC  5B8F               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6699  0040DE  0100               	movlb	0	; () banked
  6700  0040E0  5193               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6701  0040E2  0100               	movlb	0	; () banked
  6702  0040E4  5B90               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6703                           
  6704                           ; BSR set to: 0
  6705  0040E6  0100               	movlb	0	; () banked
  6706  0040E8  8197               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  6707  0040EA                     l822:
  6708                           
  6709                           ; BSR set to: 0
  6710  0040EA  0100               	movlb	0	; () banked
  6711  0040EC  90D8               	bcf	status,0,c
  6712  0040EE  378E               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  6713  0040F0  378F               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6714  0040F2  3790               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6715                           
  6716                           ; BSR set to: 0
  6717  0040F4  0100               	movlb	0	; () banked
  6718  0040F6  2F9B               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  6719  0040F8  D7D6               	goto	l821
  6720                           
  6721                           ; BSR set to: 0
  6722                           
  6723                           ; BSR set to: 0
  6724  0040FA  0100               	movlb	0	; () banked
  6725  0040FC  AF9C               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  6726  0040FE  D01A               	goto	l4543
  6727                           
  6728                           ; BSR set to: 0
  6729  004100  0100               	movlb	0	; () banked
  6730  004102  519C               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6731  004104  0A80               	xorlw	128
  6732  004106  0F97               	addlw	151
  6733  004108  B0D8               	btfsc	status,0,c
  6734  00410A  D00A               	goto	l4539
  6735                           
  6736                           ; BSR set to: 0
  6737  00410C  0E00               	movlw	0
  6738  00410E  0100               	movlb	0	; () banked
  6739  004110  6F8E               	movwf	?__tdiv_to_l_& (0+255),b
  6740  004112  0E00               	movlw	0
  6741  004114  6F8F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6742  004116  0E00               	movlw	0
  6743  004118  6F90               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6744  00411A  0E00               	movlw	0
  6745  00411C  6F91               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6746                           
  6747                           ; BSR set to: 0
  6748  00411E  0012               	return	
  6749  004120                     l4539:
  6750                           
  6751                           ; BSR set to: 0
  6752  004120  0100               	movlb	0	; () banked
  6753  004122  90D8               	bcf	status,0,c
  6754  004124  339A               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6755  004126  3399               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6756  004128  3398               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6757  00412A  3397               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  6758                           
  6759                           ; BSR set to: 0
  6760  00412C  0100               	movlb	0	; () banked
  6761  00412E  3F9C               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  6762  004130  D7F7               	goto	l4539
  6763                           
  6764                           ; BSR set to: 0
  6765  004132  D01B               	goto	l828
  6766  004134                     l4543:
  6767                           
  6768                           ; BSR set to: 0
  6769  004134  0E17               	movlw	23
  6770  004136  0100               	movlb	0	; () banked
  6771  004138  659C               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  6772  00413A  D012               	goto	l4551
  6773                           
  6774                           ; BSR set to: 0
  6775  00413C  0E00               	movlw	0
  6776  00413E  0100               	movlb	0	; () banked
  6777  004140  6F8E               	movwf	?__tdiv_to_l_& (0+255),b
  6778  004142  0E00               	movlw	0
  6779  004144  6F8F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6780  004146  0E00               	movlw	0
  6781  004148  6F90               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6782  00414A  0E00               	movlw	0
  6783  00414C  6F91               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6784                           
  6785                           ; BSR set to: 0
  6786  00414E  0012               	return	
  6787  004150                     l4549:
  6788                           
  6789                           ; BSR set to: 0
  6790  004150  0100               	movlb	0	; () banked
  6791  004152  90D8               	bcf	status,0,c
  6792  004154  3797               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6793  004156  3798               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6794  004158  3799               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6795  00415A  379A               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6796  00415C  0100               	movlb	0	; () banked
  6797  00415E  079C               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  6798  004160                     l4551:
  6799                           
  6800                           ; BSR set to: 0
  6801  004160  0100               	movlb	0	; () banked
  6802  004162  519C               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6803  004164  0100               	movlb	0	; () banked
  6804  004166  A4D8               	btfss	status,2,c
  6805  004168  D7F3               	goto	l4549
  6806  00416A                     l828:
  6807                           
  6808                           ; BSR set to: 0
  6809  00416A  C097  F08E         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  6810  00416E  C098  F08F         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  6811  004172  C099  F090         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  6812  004176  C09A  F091         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  6813                           
  6814                           ; BSR set to: 0
  6815  00417A  0012               	return		;funcret
  6816  00417C                     __end_of__tdiv_to_l_:
  6817                           	opt stack 0
  6818                           tosu	equ	0xFFF
  6819                           tosh	equ	0xFFE
  6820                           tosl	equ	0xFFD
  6821                           pclath	equ	0xFFA
  6822                           tblptru	equ	0xFF8
  6823                           tblptrh	equ	0xFF7
  6824                           tblptrl	equ	0xFF6
  6825                           tablat	equ	0xFF5
  6826                           prodh	equ	0xFF4
  6827                           prodl	equ	0xFF3
  6828                           intcon	equ	0xFF2
  6829                           postinc0	equ	0xFEE
  6830                           wreg	equ	0xFE8
  6831                           indf2	equ	0xFDF
  6832                           postinc2	equ	0xFDE
  6833                           postdec2	equ	0xFDD
  6834                           fsr2h	equ	0xFDA
  6835                           fsr2l	equ	0xFD9
  6836                           status	equ	0xFD8
  6837                           
  6838 ;; *************** function __div_to_l_ *****************
  6839 ;; Defined at:
  6840 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fldivl.c"
  6841 ;; Parameters:    Size  Location     Type
  6842 ;;  f1              3   46[BANK0 ] unsigned long 
  6843 ;;  f2              3   49[BANK0 ] unsigned long 
  6844 ;; Auto vars:     Size  Location     Type
  6845 ;;  quot            4   52[BANK0 ] unsigned long 
  6846 ;;  exp1            1   57[BANK0 ] unsigned char 
  6847 ;;  cntr            1   56[BANK0 ] unsigned char 
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  4   46[BANK0 ] unsigned long 
  6850 ;; Registers used:
  6851 ;;		wreg, status,2, status,0
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6857 ;;      Params:         0       6       0       0       0       0       0
  6858 ;;      Locals:         0       6       0       0       0       0       0
  6859 ;;      Temps:          0       0       0       0       0       0       0
  6860 ;;      Totals:         0      12       0       0       0       0       0
  6861 ;;Total ram usage:       12 bytes
  6862 ;; Hardware stack levels used:    1
  6863 ;; Hardware stack levels required when called:    7
  6864 ;; This function calls:
  6865 ;;		Nothing
  6866 ;; This function is called by:
  6867 ;;		__doprnt
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           	psect	text13
  6872  00417C                     __ptext13:
  6873                           	opt stack 0
  6874  00417C                     __div_to_l_:
  6875                           	opt stack 21
  6876                           
  6877                           ; BSR set to: 0
  6878                           ;incstack = 0
  6879  00417C  0100               	movlb	0	; () banked
  6880  00417E  3590               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  6881  004180  3591               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  6882  004182  0100               	movlb	0	; () banked
  6883  004184  6F99               	movwf	__div_to_l_@exp1& (0+255),b
  6884  004186  0100               	movlb	0	; () banked
  6885  004188  5199               	movf	__div_to_l_@exp1& (0+255),w,b
  6886  00418A  A4D8               	btfss	status,2,c
  6887  00418C  D00A               	goto	l4559
  6888                           
  6889                           ; BSR set to: 0
  6890  00418E  0E00               	movlw	0
  6891  004190  0100               	movlb	0	; () banked
  6892  004192  6F8E               	movwf	?__div_to_l_& (0+255),b
  6893  004194  0E00               	movlw	0
  6894  004196  6F8F               	movwf	(?__div_to_l_+1)& (0+255),b
  6895  004198  0E00               	movlw	0
  6896  00419A  6F90               	movwf	(?__div_to_l_+2)& (0+255),b
  6897  00419C  0E00               	movlw	0
  6898  00419E  6F91               	movwf	(?__div_to_l_+3)& (0+255),b
  6899                           
  6900                           ; BSR set to: 0
  6901  0041A0  0012               	return	
  6902  0041A2                     l4559:
  6903                           
  6904                           ; BSR set to: 0
  6905  0041A2  0100               	movlb	0	; () banked
  6906  0041A4  3593               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  6907  0041A6  3594               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  6908  0041A8  0100               	movlb	0	; () banked
  6909  0041AA  6F98               	movwf	__div_to_l_@cntr& (0+255),b
  6910  0041AC  0100               	movlb	0	; () banked
  6911  0041AE  5198               	movf	__div_to_l_@cntr& (0+255),w,b
  6912  0041B0  A4D8               	btfss	status,2,c
  6913  0041B2  D00A               	goto	l4565
  6914                           
  6915                           ; BSR set to: 0
  6916  0041B4  0E00               	movlw	0
  6917  0041B6  0100               	movlb	0	; () banked
  6918  0041B8  6F8E               	movwf	?__div_to_l_& (0+255),b
  6919  0041BA  0E00               	movlw	0
  6920  0041BC  6F8F               	movwf	(?__div_to_l_+1)& (0+255),b
  6921  0041BE  0E00               	movlw	0
  6922  0041C0  6F90               	movwf	(?__div_to_l_+2)& (0+255),b
  6923  0041C2  0E00               	movlw	0
  6924  0041C4  6F91               	movwf	(?__div_to_l_+3)& (0+255),b
  6925                           
  6926                           ; BSR set to: 0
  6927  0041C6  0012               	return	
  6928  0041C8                     l4565:
  6929                           
  6930                           ; BSR set to: 0
  6931  0041C8  0100               	movlb	0	; () banked
  6932  0041CA  8F90               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  6933                           
  6934                           ; BSR set to: 0
  6935  0041CC  0EFF               	movlw	255
  6936  0041CE  0100               	movlb	0	; () banked
  6937  0041D0  178E               	andwf	__div_to_l_@f1& (0+255),f,b
  6938  0041D2  0EFF               	movlw	255
  6939  0041D4  178F               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  6940  0041D6  0EFF               	movlw	255
  6941  0041D8  1790               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  6942  0041DA  0E00               	movlw	0
  6943  0041DC  1791               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  6944                           
  6945                           ; BSR set to: 0
  6946  0041DE  0100               	movlb	0	; () banked
  6947  0041E0  8F93               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  6948  0041E2  0EFF               	movlw	255
  6949  0041E4  0100               	movlb	0	; () banked
  6950  0041E6  1791               	andwf	__div_to_l_@f2& (0+255),f,b
  6951  0041E8  0EFF               	movlw	255
  6952  0041EA  1792               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  6953  0041EC  0EFF               	movlw	255
  6954  0041EE  1793               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  6955  0041F0  0E00               	movlw	0
  6956  0041F2  1794               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  6957                           
  6958                           ; BSR set to: 0
  6959  0041F4  0E00               	movlw	0
  6960  0041F6  0100               	movlb	0	; () banked
  6961  0041F8  6F94               	movwf	__div_to_l_@quot& (0+255),b
  6962  0041FA  0E00               	movlw	0
  6963  0041FC  6F95               	movwf	(__div_to_l_@quot+1)& (0+255),b
  6964  0041FE  0E00               	movlw	0
  6965  004200  6F96               	movwf	(__div_to_l_@quot+2)& (0+255),b
  6966  004202  0E00               	movlw	0
  6967  004204  6F97               	movwf	(__div_to_l_@quot+3)& (0+255),b
  6968                           
  6969                           ; BSR set to: 0
  6970  004206  0E7F               	movlw	127
  6971  004208  0100               	movlb	0	; () banked
  6972  00420A  5F99               	subwf	__div_to_l_@exp1& (0+255),f,b
  6973                           
  6974                           ; BSR set to: 0
  6975  00420C  0100               	movlb	0	; () banked
  6976  00420E  5198               	movf	__div_to_l_@cntr& (0+255),w,b
  6977  004210  0FA0               	addlw	160
  6978  004212  0100               	movlb	0	; () banked
  6979  004214  5F99               	subwf	__div_to_l_@exp1& (0+255),f,b
  6980                           
  6981                           ; BSR set to: 0
  6982  004216  0E20               	movlw	32
  6983  004218  0100               	movlb	0	; () banked
  6984  00421A  6F98               	movwf	__div_to_l_@cntr& (0+255),b
  6985  00421C                     l4579:
  6986                           
  6987                           ; BSR set to: 0
  6988  00421C  0100               	movlb	0	; () banked
  6989  00421E  90D8               	bcf	status,0,c
  6990  004220  3794               	rlcf	__div_to_l_@quot& (0+255),f,b
  6991  004222  3795               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  6992  004224  3796               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  6993  004226  3797               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  6994                           
  6995                           ; BSR set to: 0
  6996  004228  0100               	movlb	0	; () banked
  6997  00422A  5191               	movf	__div_to_l_@f2& (0+255),w,b
  6998  00422C  0100               	movlb	0	; () banked
  6999  00422E  5D8E               	subwf	__div_to_l_@f1& (0+255),w,b
  7000  004230  0100               	movlb	0	; () banked
  7001  004232  5192               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7002  004234  0100               	movlb	0	; () banked
  7003  004236  598F               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  7004  004238  0100               	movlb	0	; () banked
  7005  00423A  5193               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7006  00423C  0100               	movlb	0	; () banked
  7007  00423E  5990               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  7008  004240  0100               	movlb	0	; () banked
  7009  004242  5194               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7010  004244  0100               	movlb	0	; () banked
  7011  004246  5991               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  7012  004248  A0D8               	btfss	status,0,c
  7013  00424A  D012               	goto	l4587
  7014                           
  7015                           ; BSR set to: 0
  7016  00424C  0100               	movlb	0	; () banked
  7017  00424E  5191               	movf	__div_to_l_@f2& (0+255),w,b
  7018  004250  0100               	movlb	0	; () banked
  7019  004252  5F8E               	subwf	__div_to_l_@f1& (0+255),f,b
  7020  004254  0100               	movlb	0	; () banked
  7021  004256  5192               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7022  004258  0100               	movlb	0	; () banked
  7023  00425A  5B8F               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  7024  00425C  0100               	movlb	0	; () banked
  7025  00425E  5193               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7026  004260  0100               	movlb	0	; () banked
  7027  004262  5B90               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  7028  004264  0100               	movlb	0	; () banked
  7029  004266  5194               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7030  004268  0100               	movlb	0	; () banked
  7031  00426A  5B91               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  7032                           
  7033                           ; BSR set to: 0
  7034  00426C  0100               	movlb	0	; () banked
  7035  00426E  8194               	bsf	__div_to_l_@quot& (0+255),0,b
  7036  004270                     l4587:
  7037                           
  7038                           ; BSR set to: 0
  7039  004270  0100               	movlb	0	; () banked
  7040  004272  90D8               	bcf	status,0,c
  7041  004274  378E               	rlcf	__div_to_l_@f1& (0+255),f,b
  7042  004276  378F               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  7043  004278  3790               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  7044  00427A  3791               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  7045                           
  7046                           ; BSR set to: 0
  7047  00427C  0100               	movlb	0	; () banked
  7048  00427E  2F98               	decfsz	__div_to_l_@cntr& (0+255),f,b
  7049  004280  D7CD               	goto	l4579
  7050                           
  7051                           ; BSR set to: 0
  7052                           
  7053                           ; BSR set to: 0
  7054  004282  0100               	movlb	0	; () banked
  7055  004284  AF99               	btfss	__div_to_l_@exp1& (0+255),7,b
  7056  004286  D01A               	goto	l4603
  7057                           
  7058                           ; BSR set to: 0
  7059  004288  0100               	movlb	0	; () banked
  7060  00428A  5199               	movf	__div_to_l_@exp1& (0+255),w,b
  7061  00428C  0A80               	xorlw	128
  7062  00428E  0F9F               	addlw	159
  7063  004290  B0D8               	btfsc	status,0,c
  7064  004292  D00A               	goto	l4599
  7065                           
  7066                           ; BSR set to: 0
  7067  004294  0E00               	movlw	0
  7068  004296  0100               	movlb	0	; () banked
  7069  004298  6F8E               	movwf	?__div_to_l_& (0+255),b
  7070  00429A  0E00               	movlw	0
  7071  00429C  6F8F               	movwf	(?__div_to_l_+1)& (0+255),b
  7072  00429E  0E00               	movlw	0
  7073  0042A0  6F90               	movwf	(?__div_to_l_+2)& (0+255),b
  7074  0042A2  0E00               	movlw	0
  7075  0042A4  6F91               	movwf	(?__div_to_l_+3)& (0+255),b
  7076                           
  7077                           ; BSR set to: 0
  7078  0042A6  0012               	return	
  7079  0042A8                     l4599:
  7080                           
  7081                           ; BSR set to: 0
  7082  0042A8  0100               	movlb	0	; () banked
  7083  0042AA  90D8               	bcf	status,0,c
  7084  0042AC  3397               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  7085  0042AE  3396               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  7086  0042B0  3395               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  7087  0042B2  3394               	rrcf	__div_to_l_@quot& (0+255),f,b
  7088                           
  7089                           ; BSR set to: 0
  7090  0042B4  0100               	movlb	0	; () banked
  7091  0042B6  3F99               	incfsz	__div_to_l_@exp1& (0+255),f,b
  7092  0042B8  D7F7               	goto	l4599
  7093                           
  7094                           ; BSR set to: 0
  7095  0042BA  D01B               	goto	l724
  7096  0042BC                     l4603:
  7097                           
  7098                           ; BSR set to: 0
  7099  0042BC  0E1F               	movlw	31
  7100  0042BE  0100               	movlb	0	; () banked
  7101  0042C0  6599               	cpfsgt	__div_to_l_@exp1& (0+255),b
  7102  0042C2  D012               	goto	l4611
  7103                           
  7104                           ; BSR set to: 0
  7105  0042C4  0E00               	movlw	0
  7106  0042C6  0100               	movlb	0	; () banked
  7107  0042C8  6F8E               	movwf	?__div_to_l_& (0+255),b
  7108  0042CA  0E00               	movlw	0
  7109  0042CC  6F8F               	movwf	(?__div_to_l_+1)& (0+255),b
  7110  0042CE  0E00               	movlw	0
  7111  0042D0  6F90               	movwf	(?__div_to_l_+2)& (0+255),b
  7112  0042D2  0E00               	movlw	0
  7113  0042D4  6F91               	movwf	(?__div_to_l_+3)& (0+255),b
  7114                           
  7115                           ; BSR set to: 0
  7116  0042D6  0012               	return	
  7117  0042D8                     l4609:
  7118                           
  7119                           ; BSR set to: 0
  7120  0042D8  0100               	movlb	0	; () banked
  7121  0042DA  90D8               	bcf	status,0,c
  7122  0042DC  3794               	rlcf	__div_to_l_@quot& (0+255),f,b
  7123  0042DE  3795               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7124  0042E0  3796               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7125  0042E2  3797               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7126  0042E4  0100               	movlb	0	; () banked
  7127  0042E6  0799               	decf	__div_to_l_@exp1& (0+255),f,b
  7128  0042E8                     l4611:
  7129                           
  7130                           ; BSR set to: 0
  7131  0042E8  0100               	movlb	0	; () banked
  7132  0042EA  5199               	movf	__div_to_l_@exp1& (0+255),w,b
  7133  0042EC  0100               	movlb	0	; () banked
  7134  0042EE  A4D8               	btfss	status,2,c
  7135  0042F0  D7F3               	goto	l4609
  7136  0042F2                     l724:
  7137                           
  7138                           ; BSR set to: 0
  7139  0042F2  C094  F08E         	movff	__div_to_l_@quot,?__div_to_l_
  7140  0042F6  C095  F08F         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  7141  0042FA  C096  F090         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  7142  0042FE  C097  F091         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  7143                           
  7144                           ; BSR set to: 0
  7145  004302  0012               	return		;funcret
  7146  004304                     __end_of__div_to_l_:
  7147                           	opt stack 0
  7148                           tosu	equ	0xFFF
  7149                           tosh	equ	0xFFE
  7150                           tosl	equ	0xFFD
  7151                           pclath	equ	0xFFA
  7152                           tblptru	equ	0xFF8
  7153                           tblptrh	equ	0xFF7
  7154                           tblptrl	equ	0xFF6
  7155                           tablat	equ	0xFF5
  7156                           prodh	equ	0xFF4
  7157                           prodl	equ	0xFF3
  7158                           intcon	equ	0xFF2
  7159                           postinc0	equ	0xFEE
  7160                           wreg	equ	0xFE8
  7161                           indf2	equ	0xFDF
  7162                           postinc2	equ	0xFDE
  7163                           postdec2	equ	0xFDD
  7164                           fsr2h	equ	0xFDA
  7165                           fsr2l	equ	0xFD9
  7166                           status	equ	0xFD8
  7167                           
  7168 ;; *************** function ___lltoft *****************
  7169 ;; Defined at:
  7170 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lltoft.c"
  7171 ;; Parameters:    Size  Location     Type
  7172 ;;  c               4   54[BANK0 ] unsigned long 
  7173 ;; Auto vars:     Size  Location     Type
  7174 ;;  exp             1   62[BANK0 ] unsigned char 
  7175 ;; Return value:  Size  Location     Type
  7176 ;;                  3   54[BANK0 ] float 
  7177 ;; Registers used:
  7178 ;;		wreg, status,2, status,0, cstack
  7179 ;; Tracked objects:
  7180 ;;		On entry : 0/0
  7181 ;;		On exit  : 0/0
  7182 ;;		Unchanged: 0/0
  7183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7184 ;;      Params:         0       4       0       0       0       0       0
  7185 ;;      Locals:         0       1       0       0       0       0       0
  7186 ;;      Temps:          0       4       0       0       0       0       0
  7187 ;;      Totals:         0       9       0       0       0       0       0
  7188 ;;Total ram usage:        9 bytes
  7189 ;; Hardware stack levels used:    1
  7190 ;; Hardware stack levels required when called:    8
  7191 ;; This function calls:
  7192 ;;		___ftpack
  7193 ;; This function is called by:
  7194 ;;		__doprnt
  7195 ;; This function uses a non-reentrant model
  7196 ;;
  7197                           
  7198                           	psect	text14
  7199  0053C6                     __ptext14:
  7200                           	opt stack 0
  7201  0053C6                     ___lltoft:
  7202                           	opt stack 20
  7203                           
  7204                           ; BSR set to: 0
  7205                           ;incstack = 0
  7206  0053C6  0E8E               	movlw	142
  7207  0053C8  0100               	movlb	0	; () banked
  7208  0053CA  6F9E               	movwf	___lltoft@exp& (0+255),b
  7209  0053CC  D008               	goto	l6257
  7210  0053CE                     l6255:
  7211                           
  7212                           ; BSR set to: 0
  7213  0053CE  0100               	movlb	0	; () banked
  7214  0053D0  90D8               	bcf	status,0,c
  7215  0053D2  3399               	rrcf	(___lltoft@c+3)& (0+255),f,b
  7216  0053D4  3398               	rrcf	(___lltoft@c+2)& (0+255),f,b
  7217  0053D6  3397               	rrcf	(___lltoft@c+1)& (0+255),f,b
  7218  0053D8  3396               	rrcf	___lltoft@c& (0+255),f,b
  7219  0053DA  0100               	movlb	0	; () banked
  7220  0053DC  2B9E               	incf	___lltoft@exp& (0+255),f,b
  7221  0053DE                     l6257:
  7222                           
  7223                           ; BSR set to: 0
  7224  0053DE  0E00               	movlw	0
  7225  0053E0  0100               	movlb	0	; () banked
  7226  0053E2  1596               	andwf	___lltoft@c& (0+255),w,b
  7227  0053E4  0100               	movlb	0	; () banked
  7228  0053E6  6F9A               	movwf	??___lltoft& (0+255),b
  7229  0053E8  0E00               	movlw	0
  7230  0053EA  0100               	movlb	0	; () banked
  7231  0053EC  1597               	andwf	(___lltoft@c+1)& (0+255),w,b
  7232  0053EE  0100               	movlb	0	; () banked
  7233  0053F0  6F9B               	movwf	(??___lltoft+1)& (0+255),b
  7234  0053F2  0E00               	movlw	0
  7235  0053F4  0100               	movlb	0	; () banked
  7236  0053F6  1598               	andwf	(___lltoft@c+2)& (0+255),w,b
  7237  0053F8  0100               	movlb	0	; () banked
  7238  0053FA  6F9C               	movwf	(??___lltoft+2)& (0+255),b
  7239  0053FC  0EFF               	movlw	255
  7240  0053FE  0100               	movlb	0	; () banked
  7241  005400  1599               	andwf	(___lltoft@c+3)& (0+255),w,b
  7242  005402  0100               	movlb	0	; () banked
  7243  005404  6F9D               	movwf	(??___lltoft+3)& (0+255),b
  7244  005406  0100               	movlb	0	; () banked
  7245  005408  519A               	movf	??___lltoft& (0+255),w,b
  7246  00540A  0100               	movlb	0	; () banked
  7247  00540C  119B               	iorwf	(??___lltoft+1)& (0+255),w,b
  7248  00540E  0100               	movlb	0	; () banked
  7249  005410  119C               	iorwf	(??___lltoft+2)& (0+255),w,b
  7250  005412  0100               	movlb	0	; () banked
  7251  005414  119D               	iorwf	(??___lltoft+3)& (0+255),w,b
  7252  005416  A4D8               	btfss	status,2,c
  7253  005418  D7DA               	goto	l6255
  7254                           
  7255                           ; BSR set to: 0
  7256                           
  7257                           ; BSR set to: 0
  7258  00541A  C096  F08E         	movff	___lltoft@c,___ftpack@arg
  7259  00541E  C097  F08F         	movff	___lltoft@c+1,___ftpack@arg+1
  7260  005422  C098  F090         	movff	___lltoft@c+2,___ftpack@arg+2
  7261  005426  C09E  F091         	movff	___lltoft@exp,___ftpack@exp
  7262  00542A  0E00               	movlw	0
  7263  00542C  0100               	movlb	0	; () banked
  7264  00542E  6F92               	movwf	___ftpack@sign& (0+255),b
  7265  005430  ECA6  F024         	call	___ftpack	;wreg free
  7266  005434  C08E  F096         	movff	?___ftpack,?___lltoft
  7267  005438  C08F  F097         	movff	?___ftpack+1,?___lltoft+1
  7268  00543C  C090  F098         	movff	?___ftpack+2,?___lltoft+2
  7269  005440  0012               	return	
  7270  005442                     __end_of___lltoft:
  7271                           	opt stack 0
  7272                           tosu	equ	0xFFF
  7273                           tosh	equ	0xFFE
  7274                           tosl	equ	0xFFD
  7275                           pclath	equ	0xFFA
  7276                           tblptru	equ	0xFF8
  7277                           tblptrh	equ	0xFF7
  7278                           tblptrl	equ	0xFF6
  7279                           tablat	equ	0xFF5
  7280                           prodh	equ	0xFF4
  7281                           prodl	equ	0xFF3
  7282                           intcon	equ	0xFF2
  7283                           postinc0	equ	0xFEE
  7284                           wreg	equ	0xFE8
  7285                           indf2	equ	0xFDF
  7286                           postinc2	equ	0xFDE
  7287                           postdec2	equ	0xFDD
  7288                           fsr2h	equ	0xFDA
  7289                           fsr2l	equ	0xFD9
  7290                           status	equ	0xFD8
  7291                           
  7292 ;; *************** function ___llmod *****************
  7293 ;; Defined at:
  7294 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;  dividend        4   59[BANK0 ] unsigned long 
  7297 ;;  divisor         4   63[BANK0 ] unsigned long 
  7298 ;; Auto vars:     Size  Location     Type
  7299 ;;  counter         1   67[BANK0 ] unsigned char 
  7300 ;; Return value:  Size  Location     Type
  7301 ;;                  4   59[BANK0 ] unsigned long 
  7302 ;; Registers used:
  7303 ;;		wreg, status,2, status,0
  7304 ;; Tracked objects:
  7305 ;;		On entry : 0/0
  7306 ;;		On exit  : 0/0
  7307 ;;		Unchanged: 0/0
  7308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7309 ;;      Params:         0       8       0       0       0       0       0
  7310 ;;      Locals:         0       1       0       0       0       0       0
  7311 ;;      Temps:          0       0       0       0       0       0       0
  7312 ;;      Totals:         0       9       0       0       0       0       0
  7313 ;;Total ram usage:        9 bytes
  7314 ;; Hardware stack levels used:    1
  7315 ;; Hardware stack levels required when called:    7
  7316 ;; This function calls:
  7317 ;;		Nothing
  7318 ;; This function is called by:
  7319 ;;		__doprnt
  7320 ;; This function uses a non-reentrant model
  7321 ;;
  7322                           
  7323                           	psect	text15
  7324  005196                     __ptext15:
  7325                           	opt stack 0
  7326  005196                     ___llmod:
  7327                           	opt stack 21
  7328                           
  7329                           ;incstack = 0
  7330  005196  0100               	movlb	0	; () banked
  7331  005198  519F               	movf	___llmod@divisor& (0+255),w,b
  7332  00519A  0100               	movlb	0	; () banked
  7333  00519C  11A0               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  7334  00519E  0100               	movlb	0	; () banked
  7335  0051A0  11A1               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  7336  0051A2  0100               	movlb	0	; () banked
  7337  0051A4  11A2               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  7338  0051A6  B4D8               	btfsc	status,2,c
  7339  0051A8  D03A               	goto	l935
  7340                           
  7341                           ; BSR set to: 0
  7342  0051AA  0E01               	movlw	1
  7343  0051AC  0100               	movlb	0	; () banked
  7344  0051AE  6FA3               	movwf	___llmod@counter& (0+255),b
  7345  0051B0  D008               	goto	l4717
  7346  0051B2                     l4715:
  7347                           
  7348                           ; BSR set to: 0
  7349  0051B2  0100               	movlb	0	; () banked
  7350  0051B4  90D8               	bcf	status,0,c
  7351  0051B6  379F               	rlcf	___llmod@divisor& (0+255),f,b
  7352  0051B8  37A0               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  7353  0051BA  37A1               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  7354  0051BC  37A2               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  7355  0051BE  0100               	movlb	0	; () banked
  7356  0051C0  2BA3               	incf	___llmod@counter& (0+255),f,b
  7357  0051C2                     l4717:
  7358                           
  7359                           ; BSR set to: 0
  7360  0051C2  0100               	movlb	0	; () banked
  7361  0051C4  AFA2               	btfss	(___llmod@divisor+3)& (0+255),7,b
  7362  0051C6  D7F5               	goto	l4715
  7363  0051C8                     l4719:
  7364                           
  7365                           ; BSR set to: 0
  7366  0051C8  0100               	movlb	0	; () banked
  7367  0051CA  519F               	movf	___llmod@divisor& (0+255),w,b
  7368  0051CC  0100               	movlb	0	; () banked
  7369  0051CE  5D9B               	subwf	___llmod@dividend& (0+255),w,b
  7370  0051D0  0100               	movlb	0	; () banked
  7371  0051D2  51A0               	movf	(___llmod@divisor+1)& (0+255),w,b
  7372  0051D4  0100               	movlb	0	; () banked
  7373  0051D6  599C               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  7374  0051D8  0100               	movlb	0	; () banked
  7375  0051DA  51A1               	movf	(___llmod@divisor+2)& (0+255),w,b
  7376  0051DC  0100               	movlb	0	; () banked
  7377  0051DE  599D               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  7378  0051E0  0100               	movlb	0	; () banked
  7379  0051E2  51A2               	movf	(___llmod@divisor+3)& (0+255),w,b
  7380  0051E4  0100               	movlb	0	; () banked
  7381  0051E6  599E               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  7382  0051E8  A0D8               	btfss	status,0,c
  7383  0051EA  D010               	goto	l4723
  7384                           
  7385                           ; BSR set to: 0
  7386  0051EC  0100               	movlb	0	; () banked
  7387  0051EE  519F               	movf	___llmod@divisor& (0+255),w,b
  7388  0051F0  0100               	movlb	0	; () banked
  7389  0051F2  5F9B               	subwf	___llmod@dividend& (0+255),f,b
  7390  0051F4  0100               	movlb	0	; () banked
  7391  0051F6  51A0               	movf	(___llmod@divisor+1)& (0+255),w,b
  7392  0051F8  0100               	movlb	0	; () banked
  7393  0051FA  5B9C               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  7394  0051FC  0100               	movlb	0	; () banked
  7395  0051FE  51A1               	movf	(___llmod@divisor+2)& (0+255),w,b
  7396  005200  0100               	movlb	0	; () banked
  7397  005202  5B9D               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  7398  005204  0100               	movlb	0	; () banked
  7399  005206  51A2               	movf	(___llmod@divisor+3)& (0+255),w,b
  7400  005208  0100               	movlb	0	; () banked
  7401  00520A  5B9E               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  7402  00520C                     l4723:
  7403                           
  7404                           ; BSR set to: 0
  7405  00520C  0100               	movlb	0	; () banked
  7406  00520E  90D8               	bcf	status,0,c
  7407  005210  33A2               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  7408  005212  33A1               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  7409  005214  33A0               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  7410  005216  339F               	rrcf	___llmod@divisor& (0+255),f,b
  7411                           
  7412                           ; BSR set to: 0
  7413  005218  0100               	movlb	0	; () banked
  7414  00521A  2FA3               	decfsz	___llmod@counter& (0+255),f,b
  7415  00521C  D7D5               	goto	l4719
  7416  00521E                     l935:
  7417                           
  7418                           ; BSR set to: 0
  7419  00521E  C09B  F09B         	movff	___llmod@dividend,?___llmod
  7420  005222  C09C  F09C         	movff	___llmod@dividend+1,?___llmod+1
  7421  005226  C09D  F09D         	movff	___llmod@dividend+2,?___llmod+2
  7422  00522A  C09E  F09E         	movff	___llmod@dividend+3,?___llmod+3
  7423                           
  7424                           ; BSR set to: 0
  7425  00522E  0012               	return		;funcret
  7426  005230                     __end_of___llmod:
  7427                           	opt stack 0
  7428                           tosu	equ	0xFFF
  7429                           tosh	equ	0xFFE
  7430                           tosl	equ	0xFFD
  7431                           pclath	equ	0xFFA
  7432                           tblptru	equ	0xFF8
  7433                           tblptrh	equ	0xFF7
  7434                           tblptrl	equ	0xFF6
  7435                           tablat	equ	0xFF5
  7436                           prodh	equ	0xFF4
  7437                           prodl	equ	0xFF3
  7438                           intcon	equ	0xFF2
  7439                           postinc0	equ	0xFEE
  7440                           wreg	equ	0xFE8
  7441                           indf2	equ	0xFDF
  7442                           postinc2	equ	0xFDE
  7443                           postdec2	equ	0xFDD
  7444                           fsr2h	equ	0xFDA
  7445                           fsr2l	equ	0xFD9
  7446                           status	equ	0xFD8
  7447                           
  7448 ;; *************** function ___lldiv *****************
  7449 ;; Defined at:
  7450 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
  7451 ;; Parameters:    Size  Location     Type
  7452 ;;  dividend        4   46[BANK0 ] unsigned long 
  7453 ;;  divisor         4   50[BANK0 ] unsigned long 
  7454 ;; Auto vars:     Size  Location     Type
  7455 ;;  quotient        4   54[BANK0 ] unsigned long 
  7456 ;;  counter         1   58[BANK0 ] unsigned char 
  7457 ;; Return value:  Size  Location     Type
  7458 ;;                  4   46[BANK0 ] unsigned long 
  7459 ;; Registers used:
  7460 ;;		wreg, status,2, status,0
  7461 ;; Tracked objects:
  7462 ;;		On entry : 0/0
  7463 ;;		On exit  : 0/0
  7464 ;;		Unchanged: 0/0
  7465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7466 ;;      Params:         0       8       0       0       0       0       0
  7467 ;;      Locals:         0       5       0       0       0       0       0
  7468 ;;      Temps:          0       0       0       0       0       0       0
  7469 ;;      Totals:         0      13       0       0       0       0       0
  7470 ;;Total ram usage:       13 bytes
  7471 ;; Hardware stack levels used:    1
  7472 ;; Hardware stack levels required when called:    7
  7473 ;; This function calls:
  7474 ;;		Nothing
  7475 ;; This function is called by:
  7476 ;;		__doprnt
  7477 ;; This function uses a non-reentrant model
  7478 ;;
  7479                           
  7480                           	psect	text16
  7481  004F8A                     __ptext16:
  7482                           	opt stack 0
  7483  004F8A                     ___lldiv:
  7484                           	opt stack 21
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;incstack = 0
  7488  004F8A  0E00               	movlw	0
  7489  004F8C  0100               	movlb	0	; () banked
  7490  004F8E  6F96               	movwf	___lldiv@quotient& (0+255),b
  7491  004F90  0E00               	movlw	0
  7492  004F92  6F97               	movwf	(___lldiv@quotient+1)& (0+255),b
  7493  004F94  0E00               	movlw	0
  7494  004F96  6F98               	movwf	(___lldiv@quotient+2)& (0+255),b
  7495  004F98  0E00               	movlw	0
  7496  004F9A  6F99               	movwf	(___lldiv@quotient+3)& (0+255),b
  7497                           
  7498                           ; BSR set to: 0
  7499  004F9C  0100               	movlb	0	; () banked
  7500  004F9E  5192               	movf	___lldiv@divisor& (0+255),w,b
  7501  004FA0  0100               	movlb	0	; () banked
  7502  004FA2  1193               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7503  004FA4  0100               	movlb	0	; () banked
  7504  004FA6  1194               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7505  004FA8  0100               	movlb	0	; () banked
  7506  004FAA  1195               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  7507  004FAC  B4D8               	btfsc	status,2,c
  7508  004FAE  D042               	goto	l925
  7509                           
  7510                           ; BSR set to: 0
  7511  004FB0  0E01               	movlw	1
  7512  004FB2  0100               	movlb	0	; () banked
  7513  004FB4  6F9A               	movwf	___lldiv@counter& (0+255),b
  7514  004FB6  D008               	goto	l4697
  7515  004FB8                     l4695:
  7516                           
  7517                           ; BSR set to: 0
  7518  004FB8  0100               	movlb	0	; () banked
  7519  004FBA  90D8               	bcf	status,0,c
  7520  004FBC  3792               	rlcf	___lldiv@divisor& (0+255),f,b
  7521  004FBE  3793               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7522  004FC0  3794               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7523  004FC2  3795               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7524  004FC4  0100               	movlb	0	; () banked
  7525  004FC6  2B9A               	incf	___lldiv@counter& (0+255),f,b
  7526  004FC8                     l4697:
  7527                           
  7528                           ; BSR set to: 0
  7529  004FC8  0100               	movlb	0	; () banked
  7530  004FCA  AF95               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  7531  004FCC  D7F5               	goto	l4695
  7532  004FCE                     l4699:
  7533                           
  7534                           ; BSR set to: 0
  7535  004FCE  0100               	movlb	0	; () banked
  7536  004FD0  90D8               	bcf	status,0,c
  7537  004FD2  3796               	rlcf	___lldiv@quotient& (0+255),f,b
  7538  004FD4  3797               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  7539  004FD6  3798               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  7540  004FD8  3799               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  7541                           
  7542                           ; BSR set to: 0
  7543  004FDA  0100               	movlb	0	; () banked
  7544  004FDC  5192               	movf	___lldiv@divisor& (0+255),w,b
  7545  004FDE  0100               	movlb	0	; () banked
  7546  004FE0  5D8E               	subwf	___lldiv@dividend& (0+255),w,b
  7547  004FE2  0100               	movlb	0	; () banked
  7548  004FE4  5193               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7549  004FE6  0100               	movlb	0	; () banked
  7550  004FE8  598F               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7551  004FEA  0100               	movlb	0	; () banked
  7552  004FEC  5194               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7553  004FEE  0100               	movlb	0	; () banked
  7554  004FF0  5990               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7555  004FF2  0100               	movlb	0	; () banked
  7556  004FF4  5195               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7557  004FF6  0100               	movlb	0	; () banked
  7558  004FF8  5991               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7559  004FFA  A0D8               	btfss	status,0,c
  7560  004FFC  D012               	goto	l4707
  7561                           
  7562                           ; BSR set to: 0
  7563  004FFE  0100               	movlb	0	; () banked
  7564  005000  5192               	movf	___lldiv@divisor& (0+255),w,b
  7565  005002  0100               	movlb	0	; () banked
  7566  005004  5F8E               	subwf	___lldiv@dividend& (0+255),f,b
  7567  005006  0100               	movlb	0	; () banked
  7568  005008  5193               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7569  00500A  0100               	movlb	0	; () banked
  7570  00500C  5B8F               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7571  00500E  0100               	movlb	0	; () banked
  7572  005010  5194               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7573  005012  0100               	movlb	0	; () banked
  7574  005014  5B90               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7575  005016  0100               	movlb	0	; () banked
  7576  005018  5195               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7577  00501A  0100               	movlb	0	; () banked
  7578  00501C  5B91               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7579                           
  7580                           ; BSR set to: 0
  7581  00501E  0100               	movlb	0	; () banked
  7582  005020  8196               	bsf	___lldiv@quotient& (0+255),0,b
  7583  005022                     l4707:
  7584                           
  7585                           ; BSR set to: 0
  7586  005022  0100               	movlb	0	; () banked
  7587  005024  90D8               	bcf	status,0,c
  7588  005026  3395               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7589  005028  3394               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7590  00502A  3393               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7591  00502C  3392               	rrcf	___lldiv@divisor& (0+255),f,b
  7592                           
  7593                           ; BSR set to: 0
  7594  00502E  0100               	movlb	0	; () banked
  7595  005030  2F9A               	decfsz	___lldiv@counter& (0+255),f,b
  7596  005032  D7CD               	goto	l4699
  7597  005034                     l925:
  7598                           
  7599                           ; BSR set to: 0
  7600  005034  C096  F08E         	movff	___lldiv@quotient,?___lldiv
  7601  005038  C097  F08F         	movff	___lldiv@quotient+1,?___lldiv+1
  7602  00503C  C098  F090         	movff	___lldiv@quotient+2,?___lldiv+2
  7603  005040  C099  F091         	movff	___lldiv@quotient+3,?___lldiv+3
  7604                           
  7605                           ; BSR set to: 0
  7606  005044  0012               	return		;funcret
  7607  005046                     __end_of___lldiv:
  7608                           	opt stack 0
  7609                           tosu	equ	0xFFF
  7610                           tosh	equ	0xFFE
  7611                           tosl	equ	0xFFD
  7612                           pclath	equ	0xFFA
  7613                           tblptru	equ	0xFF8
  7614                           tblptrh	equ	0xFF7
  7615                           tblptrl	equ	0xFF6
  7616                           tablat	equ	0xFF5
  7617                           prodh	equ	0xFF4
  7618                           prodl	equ	0xFF3
  7619                           intcon	equ	0xFF2
  7620                           postinc0	equ	0xFEE
  7621                           wreg	equ	0xFE8
  7622                           indf2	equ	0xFDF
  7623                           postinc2	equ	0xFDE
  7624                           postdec2	equ	0xFDD
  7625                           fsr2h	equ	0xFDA
  7626                           fsr2l	equ	0xFD9
  7627                           status	equ	0xFD8
  7628                           
  7629 ;; *************** function ___fttol *****************
  7630 ;; Defined at:
  7631 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;  f1              3    4[BANK1 ] float 
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;  lval            4   14[BANK1 ] unsigned long 
  7636 ;;  exp1            1   18[BANK1 ] unsigned char 
  7637 ;;  sign1           1   13[BANK1 ] unsigned char 
  7638 ;; Return value:  Size  Location     Type
  7639 ;;                  4    4[BANK1 ] long 
  7640 ;; Registers used:
  7641 ;;		wreg, status,2, status,0
  7642 ;; Tracked objects:
  7643 ;;		On entry : 0/0
  7644 ;;		On exit  : 0/0
  7645 ;;		Unchanged: 0/0
  7646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7647 ;;      Params:         0       0       4       0       0       0       0
  7648 ;;      Locals:         0       0       6       0       0       0       0
  7649 ;;      Temps:          0       0       5       0       0       0       0
  7650 ;;      Totals:         0       0      15       0       0       0       0
  7651 ;;Total ram usage:       15 bytes
  7652 ;; Hardware stack levels used:    1
  7653 ;; Hardware stack levels required when called:    7
  7654 ;; This function calls:
  7655 ;;		Nothing
  7656 ;; This function is called by:
  7657 ;;		__doprnt
  7658 ;; This function uses a non-reentrant model
  7659 ;;
  7660                           
  7661                           	psect	text17
  7662  0045AE                     __ptext17:
  7663                           	opt stack 0
  7664  0045AE                     ___fttol:
  7665                           	opt stack 21
  7666                           
  7667                           ; BSR set to: 0
  7668                           ;incstack = 0
  7669  0045AE  C106  F108         	movff	___fttol@f1+2,??___fttol
  7670  0045B2  0101               	movlb	1	; () banked
  7671  0045B4  6B09               	clrf	(??___fttol+1)& (0+255),b
  7672  0045B6  6B0A               	clrf	(??___fttol+2)& (0+255),b
  7673  0045B8  0101               	movlb	1	; () banked
  7674  0045BA  3505               	rlcf	(___fttol@f1+1)& (0+255),w,b
  7675  0045BC  0101               	movlb	1	; () banked
  7676  0045BE  3708               	rlcf	??___fttol& (0+255),f,b
  7677  0045C0  E301               	bnc	u8681
  7678  0045C2  8109               	bsf	(??___fttol+1)& (0+255),0,b
  7679  0045C4                     u8681:
  7680  0045C4  0101               	movlb	1	; () banked
  7681  0045C6  5108               	movf	??___fttol& (0+255),w,b
  7682  0045C8  0101               	movlb	1	; () banked
  7683  0045CA  6F12               	movwf	___fttol@exp1& (0+255),b
  7684  0045CC  0101               	movlb	1	; () banked
  7685  0045CE  5112               	movf	___fttol@exp1& (0+255),w,b
  7686  0045D0  A4D8               	btfss	status,2,c
  7687  0045D2  D00A               	goto	l6213
  7688                           
  7689                           ; BSR set to: 1
  7690  0045D4  0E00               	movlw	0
  7691  0045D6  0101               	movlb	1	; () banked
  7692  0045D8  6F04               	movwf	?___fttol& (0+255),b
  7693  0045DA  0E00               	movlw	0
  7694  0045DC  6F05               	movwf	(?___fttol+1)& (0+255),b
  7695  0045DE  0E00               	movlw	0
  7696  0045E0  6F06               	movwf	(?___fttol+2)& (0+255),b
  7697  0045E2  0E00               	movlw	0
  7698  0045E4  6F07               	movwf	(?___fttol+3)& (0+255),b
  7699                           
  7700                           ; BSR set to: 1
  7701  0045E6  0012               	return	
  7702  0045E8                     l6213:
  7703                           
  7704                           ; BSR set to: 1
  7705  0045E8  0E17               	movlw	23
  7706  0045EA  0101               	movlb	1	; () banked
  7707  0045EC  6F08               	movwf	??___fttol& (0+255),b
  7708  0045EE  C104  F109         	movff	___fttol@f1,??___fttol+1
  7709  0045F2  C105  F10A         	movff	___fttol@f1+1,??___fttol+2
  7710  0045F6  C106  F10B         	movff	___fttol@f1+2,??___fttol+3
  7711  0045FA  0101               	movlb	1	; () banked
  7712  0045FC  2908               	incf	??___fttol& (0+255),w,b
  7713  0045FE  0101               	movlb	1	; () banked
  7714  004600  6F0C               	movwf	(??___fttol+4)& (0+255),b
  7715  004602  D005               	goto	u8700
  7716  004604                     u8705:
  7717  004604  0101               	movlb	1	; () banked
  7718  004606  90D8               	bcf	status,0,c
  7719  004608  330B               	rrcf	(??___fttol+3)& (0+255),f,b
  7720  00460A  330A               	rrcf	(??___fttol+2)& (0+255),f,b
  7721  00460C  3309               	rrcf	(??___fttol+1)& (0+255),f,b
  7722  00460E                     u8700:
  7723  00460E  0101               	movlb	1	; () banked
  7724  004610  2F0C               	decfsz	(??___fttol+4)& (0+255),f,b
  7725  004612  D7F8               	goto	u8705
  7726  004614  0101               	movlb	1	; () banked
  7727  004616  5109               	movf	(??___fttol+1)& (0+255),w,b
  7728  004618  0101               	movlb	1	; () banked
  7729  00461A  6F0D               	movwf	___fttol@sign1& (0+255),b
  7730                           
  7731                           ; BSR set to: 1
  7732  00461C  0101               	movlb	1	; () banked
  7733  00461E  8F05               	bsf	(___fttol@f1+1)& (0+255),7,b
  7734                           
  7735                           ; BSR set to: 1
  7736  004620  0EFF               	movlw	255
  7737  004622  0101               	movlb	1	; () banked
  7738  004624  1704               	andwf	___fttol@f1& (0+255),f,b
  7739  004626  0EFF               	movlw	255
  7740  004628  0101               	movlb	1	; () banked
  7741  00462A  1705               	andwf	(___fttol@f1+1)& (0+255),f,b
  7742  00462C  0E00               	movlw	0
  7743  00462E  0101               	movlb	1	; () banked
  7744  004630  1706               	andwf	(___fttol@f1+2)& (0+255),f,b
  7745                           
  7746                           ; BSR set to: 1
  7747  004632  0101               	movlb	1	; () banked
  7748  004634  5104               	movf	___fttol@f1& (0+255),w,b
  7749  004636  0101               	movlb	1	; () banked
  7750  004638  6F0E               	movwf	___fttol@lval& (0+255),b
  7751  00463A  0101               	movlb	1	; () banked
  7752  00463C  5105               	movf	(___fttol@f1+1)& (0+255),w,b
  7753  00463E  0101               	movlb	1	; () banked
  7754  004640  6F0F               	movwf	(___fttol@lval+1)& (0+255),b
  7755  004642  0101               	movlb	1	; () banked
  7756  004644  5106               	movf	(___fttol@f1+2)& (0+255),w,b
  7757  004646  0101               	movlb	1	; () banked
  7758  004648  6F10               	movwf	(___fttol@lval+2)& (0+255),b
  7759  00464A  0101               	movlb	1	; () banked
  7760  00464C  6B11               	clrf	(___fttol@lval+3)& (0+255),b
  7761                           
  7762                           ; BSR set to: 1
  7763  00464E  0E8E               	movlw	142
  7764  004650  0101               	movlb	1	; () banked
  7765  004652  5F12               	subwf	___fttol@exp1& (0+255),f,b
  7766                           
  7767                           ; BSR set to: 1
  7768  004654  0101               	movlb	1	; () banked
  7769  004656  AF12               	btfss	___fttol@exp1& (0+255),7,b
  7770  004658  D01A               	goto	l6235
  7771                           
  7772                           ; BSR set to: 1
  7773  00465A  0101               	movlb	1	; () banked
  7774  00465C  5112               	movf	___fttol@exp1& (0+255),w,b
  7775  00465E  0A80               	xorlw	128
  7776  004660  0F8F               	addlw	143
  7777  004662  B0D8               	btfsc	status,0,c
  7778  004664  D00A               	goto	l6231
  7779                           
  7780                           ; BSR set to: 1
  7781  004666  0E00               	movlw	0
  7782  004668  0101               	movlb	1	; () banked
  7783  00466A  6F04               	movwf	?___fttol& (0+255),b
  7784  00466C  0E00               	movlw	0
  7785  00466E  6F05               	movwf	(?___fttol+1)& (0+255),b
  7786  004670  0E00               	movlw	0
  7787  004672  6F06               	movwf	(?___fttol+2)& (0+255),b
  7788  004674  0E00               	movlw	0
  7789  004676  6F07               	movwf	(?___fttol+3)& (0+255),b
  7790                           
  7791                           ; BSR set to: 1
  7792  004678  0012               	return	
  7793  00467A                     l6231:
  7794                           
  7795                           ; BSR set to: 1
  7796  00467A  0101               	movlb	1	; () banked
  7797  00467C  90D8               	bcf	status,0,c
  7798  00467E  3311               	rrcf	(___fttol@lval+3)& (0+255),f,b
  7799  004680  3310               	rrcf	(___fttol@lval+2)& (0+255),f,b
  7800  004682  330F               	rrcf	(___fttol@lval+1)& (0+255),f,b
  7801  004684  330E               	rrcf	___fttol@lval& (0+255),f,b
  7802                           
  7803                           ; BSR set to: 1
  7804  004686  0101               	movlb	1	; () banked
  7805  004688  3F12               	incfsz	___fttol@exp1& (0+255),f,b
  7806  00468A  D7F7               	goto	l6231
  7807                           
  7808                           ; BSR set to: 1
  7809  00468C  D01B               	goto	l6245
  7810  00468E                     l6235:
  7811                           
  7812                           ; BSR set to: 1
  7813  00468E  0E17               	movlw	23
  7814  004690  0101               	movlb	1	; () banked
  7815  004692  6512               	cpfsgt	___fttol@exp1& (0+255),b
  7816  004694  D012               	goto	l6243
  7817                           
  7818                           ; BSR set to: 1
  7819  004696  0E00               	movlw	0
  7820  004698  0101               	movlb	1	; () banked
  7821  00469A  6F04               	movwf	?___fttol& (0+255),b
  7822  00469C  0E00               	movlw	0
  7823  00469E  6F05               	movwf	(?___fttol+1)& (0+255),b
  7824  0046A0  0E00               	movlw	0
  7825  0046A2  6F06               	movwf	(?___fttol+2)& (0+255),b
  7826  0046A4  0E00               	movlw	0
  7827  0046A6  6F07               	movwf	(?___fttol+3)& (0+255),b
  7828                           
  7829                           ; BSR set to: 1
  7830  0046A8  0012               	return	
  7831  0046AA                     l6241:
  7832                           
  7833                           ; BSR set to: 1
  7834  0046AA  0101               	movlb	1	; () banked
  7835  0046AC  90D8               	bcf	status,0,c
  7836  0046AE  370E               	rlcf	___fttol@lval& (0+255),f,b
  7837  0046B0  370F               	rlcf	(___fttol@lval+1)& (0+255),f,b
  7838  0046B2  3710               	rlcf	(___fttol@lval+2)& (0+255),f,b
  7839  0046B4  3711               	rlcf	(___fttol@lval+3)& (0+255),f,b
  7840  0046B6  0101               	movlb	1	; () banked
  7841  0046B8  0712               	decf	___fttol@exp1& (0+255),f,b
  7842  0046BA                     l6243:
  7843                           
  7844                           ; BSR set to: 1
  7845  0046BA  0101               	movlb	1	; () banked
  7846  0046BC  5112               	movf	___fttol@exp1& (0+255),w,b
  7847  0046BE  0101               	movlb	1	; () banked
  7848  0046C0  A4D8               	btfss	status,2,c
  7849  0046C2  D7F3               	goto	l6241
  7850  0046C4                     l6245:
  7851                           
  7852                           ; BSR set to: 1
  7853  0046C4  0101               	movlb	1	; () banked
  7854  0046C6  510D               	movf	___fttol@sign1& (0+255),w,b
  7855  0046C8  0101               	movlb	1	; () banked
  7856  0046CA  B4D8               	btfsc	status,2,c
  7857  0046CC  D009               	goto	l6249
  7858                           
  7859                           ; BSR set to: 1
  7860  0046CE  0101               	movlb	1	; () banked
  7861  0046D0  1F11               	comf	(___fttol@lval+3)& (0+255),f,b
  7862  0046D2  1F10               	comf	(___fttol@lval+2)& (0+255),f,b
  7863  0046D4  1F0F               	comf	(___fttol@lval+1)& (0+255),f,b
  7864  0046D6  6D0E               	negf	___fttol@lval& (0+255),b
  7865  0046D8  0E00               	movlw	0
  7866  0046DA  230F               	addwfc	(___fttol@lval+1)& (0+255),f,b
  7867  0046DC  2310               	addwfc	(___fttol@lval+2)& (0+255),f,b
  7868  0046DE  2311               	addwfc	(___fttol@lval+3)& (0+255),f,b
  7869  0046E0                     l6249:
  7870                           
  7871                           ; BSR set to: 1
  7872  0046E0  C10E  F104         	movff	___fttol@lval,?___fttol
  7873  0046E4  C10F  F105         	movff	___fttol@lval+1,?___fttol+1
  7874  0046E8  C110  F106         	movff	___fttol@lval+2,?___fttol+2
  7875  0046EC  C111  F107         	movff	___fttol@lval+3,?___fttol+3
  7876  0046F0  0012               	return	
  7877  0046F2                     __end_of___fttol:
  7878                           	opt stack 0
  7879                           tosu	equ	0xFFF
  7880                           tosh	equ	0xFFE
  7881                           tosl	equ	0xFFD
  7882                           pclath	equ	0xFFA
  7883                           tblptru	equ	0xFF8
  7884                           tblptrh	equ	0xFF7
  7885                           tblptrl	equ	0xFF6
  7886                           tablat	equ	0xFF5
  7887                           prodh	equ	0xFF4
  7888                           prodl	equ	0xFF3
  7889                           intcon	equ	0xFF2
  7890                           postinc0	equ	0xFEE
  7891                           wreg	equ	0xFE8
  7892                           indf2	equ	0xFDF
  7893                           postinc2	equ	0xFDE
  7894                           postdec2	equ	0xFDD
  7895                           fsr2h	equ	0xFDA
  7896                           fsr2l	equ	0xFD9
  7897                           status	equ	0xFD8
  7898                           
  7899 ;; *************** function ___ftsub *****************
  7900 ;; Defined at:
  7901 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  7902 ;; Parameters:    Size  Location     Type
  7903 ;;  f1              3   16[BANK1 ] float 
  7904 ;;  f2              3   19[BANK1 ] float 
  7905 ;; Auto vars:     Size  Location     Type
  7906 ;;		None
  7907 ;; Return value:  Size  Location     Type
  7908 ;;                  3   16[BANK1 ] float 
  7909 ;; Registers used:
  7910 ;;		wreg, status,2, status,0, cstack
  7911 ;; Tracked objects:
  7912 ;;		On entry : 0/0
  7913 ;;		On exit  : 0/0
  7914 ;;		Unchanged: 0/0
  7915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7916 ;;      Params:         0       0       6       0       0       0       0
  7917 ;;      Locals:         0       0       0       0       0       0       0
  7918 ;;      Temps:          0       0       0       0       0       0       0
  7919 ;;      Totals:         0       0       6       0       0       0       0
  7920 ;;Total ram usage:        6 bytes
  7921 ;; Hardware stack levels used:    1
  7922 ;; Hardware stack levels required when called:    9
  7923 ;; This function calls:
  7924 ;;		___ftadd
  7925 ;; This function is called by:
  7926 ;;		__doprnt
  7927 ;; This function uses a non-reentrant model
  7928 ;;
  7929                           
  7930                           	psect	text18
  7931  00568C                     __ptext18:
  7932                           	opt stack 0
  7933  00568C                     ___ftsub:
  7934                           	opt stack 19
  7935                           
  7936                           ; BSR set to: 1
  7937                           ;incstack = 0
  7938  00568C  0101               	movlb	1	; () banked
  7939  00568E  5113               	movf	___ftsub@f2& (0+255),w,b
  7940  005690  0101               	movlb	1	; () banked
  7941  005692  1114               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  7942  005694  0101               	movlb	1	; () banked
  7943  005696  1115               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  7944  005698  B4D8               	btfsc	status,2,c
  7945  00569A  D009               	goto	l6203
  7946                           
  7947                           ; BSR set to: 1
  7948  00569C  0E00               	movlw	0
  7949  00569E  0101               	movlb	1	; () banked
  7950  0056A0  1B13               	xorwf	___ftsub@f2& (0+255),f,b
  7951  0056A2  0E00               	movlw	0
  7952  0056A4  0101               	movlb	1	; () banked
  7953  0056A6  1B14               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  7954  0056A8  0E80               	movlw	128
  7955  0056AA  0101               	movlb	1	; () banked
  7956  0056AC  1B15               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  7957  0056AE                     l6203:
  7958                           
  7959                           ; BSR set to: 1
  7960  0056AE  C110  F107         	movff	___ftsub@f1,___ftadd@f1
  7961  0056B2  C111  F108         	movff	___ftsub@f1+1,___ftadd@f1+1
  7962  0056B6  C112  F109         	movff	___ftsub@f1+2,___ftadd@f1+2
  7963  0056BA  C113  F10A         	movff	___ftsub@f2,___ftadd@f2
  7964  0056BE  C114  F10B         	movff	___ftsub@f2+1,___ftadd@f2+1
  7965  0056C2  C115  F10C         	movff	___ftsub@f2+2,___ftadd@f2+2
  7966  0056C6  EC0E  F01B         	call	___ftadd	;wreg free
  7967  0056CA  C107  F110         	movff	?___ftadd,?___ftsub
  7968  0056CE  C108  F111         	movff	?___ftadd+1,?___ftsub+1
  7969  0056D2  C109  F112         	movff	?___ftadd+2,?___ftsub+2
  7970  0056D6  0012               	return	
  7971  0056D8                     __end_of___ftsub:
  7972                           	opt stack 0
  7973                           tosu	equ	0xFFF
  7974                           tosh	equ	0xFFE
  7975                           tosl	equ	0xFFD
  7976                           pclath	equ	0xFFA
  7977                           tblptru	equ	0xFF8
  7978                           tblptrh	equ	0xFF7
  7979                           tblptrl	equ	0xFF6
  7980                           tablat	equ	0xFF5
  7981                           prodh	equ	0xFF4
  7982                           prodl	equ	0xFF3
  7983                           intcon	equ	0xFF2
  7984                           postinc0	equ	0xFEE
  7985                           wreg	equ	0xFE8
  7986                           indf2	equ	0xFDF
  7987                           postinc2	equ	0xFDE
  7988                           postdec2	equ	0xFDD
  7989                           fsr2h	equ	0xFDA
  7990                           fsr2l	equ	0xFD9
  7991                           status	equ	0xFD8
  7992                           
  7993 ;; *************** function ___ftadd *****************
  7994 ;; Defined at:
  7995 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  7996 ;; Parameters:    Size  Location     Type
  7997 ;;  f1              3    7[BANK1 ] float 
  7998 ;;  f2              3   10[BANK1 ] float 
  7999 ;; Auto vars:     Size  Location     Type
  8000 ;;  exp1            1   15[BANK1 ] unsigned char 
  8001 ;;  exp2            1   14[BANK1 ] unsigned char 
  8002 ;;  sign            1   13[BANK1 ] unsigned char 
  8003 ;; Return value:  Size  Location     Type
  8004 ;;                  3    7[BANK1 ] float 
  8005 ;; Registers used:
  8006 ;;		wreg, status,2, status,0, cstack
  8007 ;; Tracked objects:
  8008 ;;		On entry : 0/0
  8009 ;;		On exit  : 0/0
  8010 ;;		Unchanged: 0/0
  8011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8012 ;;      Params:         0       0       6       0       0       0       0
  8013 ;;      Locals:         0       0       3       0       0       0       0
  8014 ;;      Temps:          0       3       0       0       0       0       0
  8015 ;;      Totals:         0       3       9       0       0       0       0
  8016 ;;Total ram usage:       12 bytes
  8017 ;; Hardware stack levels used:    1
  8018 ;; Hardware stack levels required when called:    8
  8019 ;; This function calls:
  8020 ;;		___ftpack
  8021 ;; This function is called by:
  8022 ;;		__doprnt
  8023 ;;		___ftsub
  8024 ;; This function uses a non-reentrant model
  8025 ;;
  8026                           
  8027                           	psect	text19
  8028  00361C                     __ptext19:
  8029                           	opt stack 0
  8030  00361C                     ___ftadd:
  8031                           	opt stack 19
  8032                           
  8033                           ;incstack = 0
  8034  00361C  C109  F0B4         	movff	___ftadd@f1+2,??___ftadd
  8035  003620  0100               	movlb	0	; () banked
  8036  003622  6BB5               	clrf	(??___ftadd+1)& (0+255),b
  8037  003624  6BB6               	clrf	(??___ftadd+2)& (0+255),b
  8038  003626  0101               	movlb	1	; () banked
  8039  003628  3508               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  8040  00362A  0100               	movlb	0	; () banked
  8041  00362C  37B4               	rlcf	??___ftadd& (0+255),f,b
  8042  00362E  E301               	bnc	u8211
  8043  003630  81B5               	bsf	(??___ftadd+1)& (0+255),0,b
  8044  003632                     u8211:
  8045  003632  0100               	movlb	0	; () banked
  8046  003634  51B4               	movf	??___ftadd& (0+255),w,b
  8047  003636  0101               	movlb	1	; () banked
  8048  003638  6F0F               	movwf	___ftadd@exp1& (0+255),b
  8049  00363A  C10C  F0B4         	movff	___ftadd@f2+2,??___ftadd
  8050  00363E  0100               	movlb	0	; () banked
  8051  003640  6BB5               	clrf	(??___ftadd+1)& (0+255),b
  8052  003642  6BB6               	clrf	(??___ftadd+2)& (0+255),b
  8053  003644  0101               	movlb	1	; () banked
  8054  003646  350B               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  8055  003648  0100               	movlb	0	; () banked
  8056  00364A  37B4               	rlcf	??___ftadd& (0+255),f,b
  8057  00364C  E301               	bnc	u8221
  8058  00364E  81B5               	bsf	(??___ftadd+1)& (0+255),0,b
  8059  003650                     u8221:
  8060  003650  0100               	movlb	0	; () banked
  8061  003652  51B4               	movf	??___ftadd& (0+255),w,b
  8062  003654  0101               	movlb	1	; () banked
  8063  003656  6F0E               	movwf	___ftadd@exp2& (0+255),b
  8064                           
  8065                           ; BSR set to: 1
  8066  003658  0101               	movlb	1	; () banked
  8067  00365A  510F               	movf	___ftadd@exp1& (0+255),w,b
  8068  00365C  0101               	movlb	1	; () banked
  8069  00365E  B4D8               	btfsc	status,2,c
  8070  003660  D011               	goto	l779
  8071                           
  8072                           ; BSR set to: 1
  8073  003662  0101               	movlb	1	; () banked
  8074  003664  510E               	movf	___ftadd@exp2& (0+255),w,b
  8075  003666  0101               	movlb	1	; () banked
  8076  003668  5D0F               	subwf	___ftadd@exp1& (0+255),w,b
  8077  00366A  B0D8               	btfsc	status,0,c
  8078  00366C  D012               	goto	l5949
  8079                           
  8080                           ; BSR set to: 1
  8081  00366E  0101               	movlb	1	; () banked
  8082  003670  510F               	movf	___ftadd@exp1& (0+255),w,b
  8083  003672  0800               	sublw	0
  8084  003674  0101               	movlb	1	; () banked
  8085  003676  250E               	addwf	___ftadd@exp2& (0+255),w,b
  8086  003678  0100               	movlb	0	; () banked
  8087  00367A  6FB4               	movwf	??___ftadd& (0+255),b
  8088  00367C  0E18               	movlw	24
  8089  00367E  0100               	movlb	0	; () banked
  8090  003680  65B4               	cpfsgt	??___ftadd& (0+255),b
  8091  003682  D007               	goto	l5949
  8092  003684                     l779:
  8093  003684  C10A  F107         	movff	___ftadd@f2,?___ftadd
  8094  003688  C10B  F108         	movff	___ftadd@f2+1,?___ftadd+1
  8095  00368C  C10C  F109         	movff	___ftadd@f2+2,?___ftadd+2
  8096  003690  0012               	return	
  8097  003692                     l5949:
  8098  003692  0101               	movlb	1	; () banked
  8099  003694  510E               	movf	___ftadd@exp2& (0+255),w,b
  8100  003696  0101               	movlb	1	; () banked
  8101  003698  B4D8               	btfsc	status,2,c
  8102  00369A  D011               	goto	l783
  8103                           
  8104                           ; BSR set to: 1
  8105  00369C  0101               	movlb	1	; () banked
  8106  00369E  510F               	movf	___ftadd@exp1& (0+255),w,b
  8107  0036A0  0101               	movlb	1	; () banked
  8108  0036A2  5D0E               	subwf	___ftadd@exp2& (0+255),w,b
  8109  0036A4  B0D8               	btfsc	status,0,c
  8110  0036A6  D012               	goto	l5955
  8111                           
  8112                           ; BSR set to: 1
  8113  0036A8  0101               	movlb	1	; () banked
  8114  0036AA  510E               	movf	___ftadd@exp2& (0+255),w,b
  8115  0036AC  0800               	sublw	0
  8116  0036AE  0101               	movlb	1	; () banked
  8117  0036B0  250F               	addwf	___ftadd@exp1& (0+255),w,b
  8118  0036B2  0100               	movlb	0	; () banked
  8119  0036B4  6FB4               	movwf	??___ftadd& (0+255),b
  8120  0036B6  0E18               	movlw	24
  8121  0036B8  0100               	movlb	0	; () banked
  8122  0036BA  65B4               	cpfsgt	??___ftadd& (0+255),b
  8123  0036BC  D007               	goto	l5955
  8124  0036BE                     l783:
  8125  0036BE  C107  F107         	movff	___ftadd@f1,?___ftadd
  8126  0036C2  C108  F108         	movff	___ftadd@f1+1,?___ftadd+1
  8127  0036C6  C109  F109         	movff	___ftadd@f1+2,?___ftadd+2
  8128  0036CA  0012               	return	
  8129  0036CC                     l5955:
  8130  0036CC  0E06               	movlw	6
  8131  0036CE  0101               	movlb	1	; () banked
  8132  0036D0  6F0D               	movwf	___ftadd@sign& (0+255),b
  8133                           
  8134                           ; BSR set to: 1
  8135  0036D2  0101               	movlb	1	; () banked
  8136  0036D4  AF09               	btfss	(___ftadd@f1+2)& (0+255),7,b
  8137  0036D6  D002               	goto	l5961
  8138                           
  8139                           ; BSR set to: 1
  8140  0036D8  0101               	movlb	1	; () banked
  8141  0036DA  8F0D               	bsf	___ftadd@sign& (0+255),7,b
  8142  0036DC                     l5961:
  8143                           
  8144                           ; BSR set to: 1
  8145  0036DC  0101               	movlb	1	; () banked
  8146  0036DE  AF0C               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8147  0036E0  D002               	goto	l785
  8148                           
  8149                           ; BSR set to: 1
  8150  0036E2  0101               	movlb	1	; () banked
  8151  0036E4  8D0D               	bsf	___ftadd@sign& (0+255),6,b
  8152  0036E6                     l785:
  8153                           
  8154                           ; BSR set to: 1
  8155  0036E6  0101               	movlb	1	; () banked
  8156  0036E8  8F08               	bsf	(___ftadd@f1+1)& (0+255),7,b
  8157                           
  8158                           ; BSR set to: 1
  8159  0036EA  0EFF               	movlw	255
  8160  0036EC  0101               	movlb	1	; () banked
  8161  0036EE  1707               	andwf	___ftadd@f1& (0+255),f,b
  8162  0036F0  0EFF               	movlw	255
  8163  0036F2  0101               	movlb	1	; () banked
  8164  0036F4  1708               	andwf	(___ftadd@f1+1)& (0+255),f,b
  8165  0036F6  0E00               	movlw	0
  8166  0036F8  0101               	movlb	1	; () banked
  8167  0036FA  1709               	andwf	(___ftadd@f1+2)& (0+255),f,b
  8168  0036FC  0101               	movlb	1	; () banked
  8169  0036FE  8F0B               	bsf	(___ftadd@f2+1)& (0+255),7,b
  8170                           
  8171                           ; BSR set to: 1
  8172  003700  0EFF               	movlw	255
  8173  003702  0101               	movlb	1	; () banked
  8174  003704  170A               	andwf	___ftadd@f2& (0+255),f,b
  8175  003706  0EFF               	movlw	255
  8176  003708  0101               	movlb	1	; () banked
  8177  00370A  170B               	andwf	(___ftadd@f2+1)& (0+255),f,b
  8178  00370C  0E00               	movlw	0
  8179  00370E  0101               	movlb	1	; () banked
  8180  003710  170C               	andwf	(___ftadd@f2+2)& (0+255),f,b
  8181                           
  8182                           ; BSR set to: 1
  8183  003712  0101               	movlb	1	; () banked
  8184  003714  510E               	movf	___ftadd@exp2& (0+255),w,b
  8185  003716  0101               	movlb	1	; () banked
  8186  003718  5D0F               	subwf	___ftadd@exp1& (0+255),w,b
  8187  00371A  B0D8               	btfsc	status,0,c
  8188  00371C  D025               	goto	l5981
  8189  00371E                     l5971:
  8190  00371E  0101               	movlb	1	; () banked
  8191  003720  90D8               	bcf	status,0,c
  8192  003722  370A               	rlcf	___ftadd@f2& (0+255),f,b
  8193  003724  370B               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  8194  003726  370C               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  8195  003728  0101               	movlb	1	; () banked
  8196  00372A  070E               	decf	___ftadd@exp2& (0+255),f,b
  8197                           
  8198                           ; BSR set to: 1
  8199  00372C  0101               	movlb	1	; () banked
  8200  00372E  510F               	movf	___ftadd@exp1& (0+255),w,b
  8201  003730  0101               	movlb	1	; () banked
  8202  003732  190E               	xorwf	___ftadd@exp2& (0+255),w,b
  8203  003734  B4D8               	btfsc	status,2,c
  8204  003736  D011               	goto	l5979
  8205                           
  8206                           ; BSR set to: 1
  8207  003738  0101               	movlb	1	; () banked
  8208  00373A  070D               	decf	___ftadd@sign& (0+255),f,b
  8209  00373C  C10D  F0B4         	movff	___ftadd@sign,??___ftadd
  8210  003740  0E07               	movlw	7
  8211  003742  0100               	movlb	0	; () banked
  8212  003744  17B4               	andwf	??___ftadd& (0+255),f,b
  8213  003746  B4D8               	btfsc	status,2,c
  8214  003748  D008               	goto	l5979
  8215  00374A  D7E9               	goto	l5971
  8216  00374C                     l5977:
  8217  00374C  0101               	movlb	1	; () banked
  8218  00374E  90D8               	bcf	status,0,c
  8219  003750  3309               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  8220  003752  3308               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  8221  003754  3307               	rrcf	___ftadd@f1& (0+255),f,b
  8222  003756  0101               	movlb	1	; () banked
  8223  003758  2B0F               	incf	___ftadd@exp1& (0+255),f,b
  8224  00375A                     l5979:
  8225  00375A  0101               	movlb	1	; () banked
  8226  00375C  510E               	movf	___ftadd@exp2& (0+255),w,b
  8227  00375E  0101               	movlb	1	; () banked
  8228  003760  190F               	xorwf	___ftadd@exp1& (0+255),w,b
  8229  003762  B4D8               	btfsc	status,2,c
  8230  003764  D02B               	goto	l794
  8231  003766  D7F2               	goto	l5977
  8232  003768                     l5981:
  8233                           
  8234                           ; BSR set to: 1
  8235  003768  0101               	movlb	1	; () banked
  8236  00376A  510F               	movf	___ftadd@exp1& (0+255),w,b
  8237  00376C  0101               	movlb	1	; () banked
  8238  00376E  5D0E               	subwf	___ftadd@exp2& (0+255),w,b
  8239  003770  B0D8               	btfsc	status,0,c
  8240  003772  D024               	goto	l794
  8241  003774                     l5983:
  8242  003774  0101               	movlb	1	; () banked
  8243  003776  90D8               	bcf	status,0,c
  8244  003778  3707               	rlcf	___ftadd@f1& (0+255),f,b
  8245  00377A  3708               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  8246  00377C  3709               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  8247  00377E  0101               	movlb	1	; () banked
  8248  003780  070F               	decf	___ftadd@exp1& (0+255),f,b
  8249                           
  8250                           ; BSR set to: 1
  8251  003782  0101               	movlb	1	; () banked
  8252  003784  510F               	movf	___ftadd@exp1& (0+255),w,b
  8253  003786  0101               	movlb	1	; () banked
  8254  003788  190E               	xorwf	___ftadd@exp2& (0+255),w,b
  8255  00378A  B4D8               	btfsc	status,2,c
  8256  00378C  D011               	goto	l5991
  8257                           
  8258                           ; BSR set to: 1
  8259  00378E  0101               	movlb	1	; () banked
  8260  003790  070D               	decf	___ftadd@sign& (0+255),f,b
  8261  003792  C10D  F0B4         	movff	___ftadd@sign,??___ftadd
  8262  003796  0E07               	movlw	7
  8263  003798  0100               	movlb	0	; () banked
  8264  00379A  17B4               	andwf	??___ftadd& (0+255),f,b
  8265  00379C  B4D8               	btfsc	status,2,c
  8266  00379E  D008               	goto	l5991
  8267  0037A0  D7E9               	goto	l5983
  8268  0037A2                     l5989:
  8269  0037A2  0101               	movlb	1	; () banked
  8270  0037A4  90D8               	bcf	status,0,c
  8271  0037A6  330C               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  8272  0037A8  330B               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  8273  0037AA  330A               	rrcf	___ftadd@f2& (0+255),f,b
  8274  0037AC  0101               	movlb	1	; () banked
  8275  0037AE  2B0E               	incf	___ftadd@exp2& (0+255),f,b
  8276  0037B0                     l5991:
  8277  0037B0  0101               	movlb	1	; () banked
  8278  0037B2  510E               	movf	___ftadd@exp2& (0+255),w,b
  8279  0037B4  0101               	movlb	1	; () banked
  8280  0037B6  190F               	xorwf	___ftadd@exp1& (0+255),w,b
  8281  0037B8  A4D8               	btfss	status,2,c
  8282  0037BA  D7F3               	goto	l5989
  8283  0037BC                     l794:
  8284                           
  8285                           ; BSR set to: 1
  8286  0037BC  0101               	movlb	1	; () banked
  8287  0037BE  AF0D               	btfss	___ftadd@sign& (0+255),7,b
  8288  0037C0  D012               	goto	l803
  8289                           
  8290                           ; BSR set to: 1
  8291  0037C2  0EFF               	movlw	255
  8292  0037C4  0101               	movlb	1	; () banked
  8293  0037C6  1B07               	xorwf	___ftadd@f1& (0+255),f,b
  8294  0037C8  0EFF               	movlw	255
  8295  0037CA  0101               	movlb	1	; () banked
  8296  0037CC  1B08               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  8297  0037CE  0EFF               	movlw	255
  8298  0037D0  0101               	movlb	1	; () banked
  8299  0037D2  1B09               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  8300  0037D4  0E01               	movlw	1
  8301  0037D6  0101               	movlb	1	; () banked
  8302  0037D8  2707               	addwf	___ftadd@f1& (0+255),f,b
  8303  0037DA  0E00               	movlw	0
  8304  0037DC  0101               	movlb	1	; () banked
  8305  0037DE  2308               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  8306  0037E0  0E00               	movlw	0
  8307  0037E2  0101               	movlb	1	; () banked
  8308  0037E4  2309               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  8309  0037E6                     l803:
  8310                           
  8311                           ; BSR set to: 1
  8312  0037E6  0101               	movlb	1	; () banked
  8313  0037E8  AD0D               	btfss	___ftadd@sign& (0+255),6,b
  8314  0037EA  D012               	goto	l5997
  8315                           
  8316                           ; BSR set to: 1
  8317  0037EC  0EFF               	movlw	255
  8318  0037EE  0101               	movlb	1	; () banked
  8319  0037F0  1B0A               	xorwf	___ftadd@f2& (0+255),f,b
  8320  0037F2  0EFF               	movlw	255
  8321  0037F4  0101               	movlb	1	; () banked
  8322  0037F6  1B0B               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8323  0037F8  0EFF               	movlw	255
  8324  0037FA  0101               	movlb	1	; () banked
  8325  0037FC  1B0C               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8326  0037FE  0E01               	movlw	1
  8327  003800  0101               	movlb	1	; () banked
  8328  003802  270A               	addwf	___ftadd@f2& (0+255),f,b
  8329  003804  0E00               	movlw	0
  8330  003806  0101               	movlb	1	; () banked
  8331  003808  230B               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8332  00380A  0E00               	movlw	0
  8333  00380C  0101               	movlb	1	; () banked
  8334  00380E  230C               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8335  003810                     l5997:
  8336                           
  8337                           ; BSR set to: 1
  8338  003810  0E00               	movlw	0
  8339  003812  0101               	movlb	1	; () banked
  8340  003814  6F0D               	movwf	___ftadd@sign& (0+255),b
  8341                           
  8342                           ; BSR set to: 1
  8343  003816  0101               	movlb	1	; () banked
  8344  003818  5107               	movf	___ftadd@f1& (0+255),w,b
  8345  00381A  0101               	movlb	1	; () banked
  8346  00381C  270A               	addwf	___ftadd@f2& (0+255),f,b
  8347  00381E  0101               	movlb	1	; () banked
  8348  003820  5108               	movf	(___ftadd@f1+1)& (0+255),w,b
  8349  003822  0101               	movlb	1	; () banked
  8350  003824  230B               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8351  003826  0101               	movlb	1	; () banked
  8352  003828  5109               	movf	(___ftadd@f1+2)& (0+255),w,b
  8353  00382A  0101               	movlb	1	; () banked
  8354  00382C  230C               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8355                           
  8356                           ; BSR set to: 1
  8357  00382E  0101               	movlb	1	; () banked
  8358  003830  AF0C               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8359  003832  D015               	goto	l6007
  8360                           
  8361                           ; BSR set to: 1
  8362  003834  0EFF               	movlw	255
  8363  003836  0101               	movlb	1	; () banked
  8364  003838  1B0A               	xorwf	___ftadd@f2& (0+255),f,b
  8365  00383A  0EFF               	movlw	255
  8366  00383C  0101               	movlb	1	; () banked
  8367  00383E  1B0B               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8368  003840  0EFF               	movlw	255
  8369  003842  0101               	movlb	1	; () banked
  8370  003844  1B0C               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8371  003846  0E01               	movlw	1
  8372  003848  0101               	movlb	1	; () banked
  8373  00384A  270A               	addwf	___ftadd@f2& (0+255),f,b
  8374  00384C  0E00               	movlw	0
  8375  00384E  0101               	movlb	1	; () banked
  8376  003850  230B               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8377  003852  0E00               	movlw	0
  8378  003854  0101               	movlb	1	; () banked
  8379  003856  230C               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8380                           
  8381                           ; BSR set to: 1
  8382  003858  0E01               	movlw	1
  8383  00385A  0101               	movlb	1	; () banked
  8384  00385C  6F0D               	movwf	___ftadd@sign& (0+255),b
  8385  00385E                     l6007:
  8386                           
  8387                           ; BSR set to: 1
  8388  00385E  C10A  F08E         	movff	___ftadd@f2,___ftpack@arg
  8389  003862  C10B  F08F         	movff	___ftadd@f2+1,___ftpack@arg+1
  8390  003866  C10C  F090         	movff	___ftadd@f2+2,___ftpack@arg+2
  8391  00386A  C10F  F091         	movff	___ftadd@exp1,___ftpack@exp
  8392  00386E  C10D  F092         	movff	___ftadd@sign,___ftpack@sign
  8393  003872  ECA6  F024         	call	___ftpack	;wreg free
  8394  003876  C08E  F107         	movff	?___ftpack,?___ftadd
  8395  00387A  C08F  F108         	movff	?___ftpack+1,?___ftadd+1
  8396  00387E  C090  F109         	movff	?___ftpack+2,?___ftadd+2
  8397  003882  0012               	return	
  8398  003884                     __end_of___ftadd:
  8399                           	opt stack 0
  8400                           tosu	equ	0xFFF
  8401                           tosh	equ	0xFFE
  8402                           tosl	equ	0xFFD
  8403                           pclath	equ	0xFFA
  8404                           tblptru	equ	0xFF8
  8405                           tblptrh	equ	0xFF7
  8406                           tblptrl	equ	0xFF6
  8407                           tablat	equ	0xFF5
  8408                           prodh	equ	0xFF4
  8409                           prodl	equ	0xFF3
  8410                           intcon	equ	0xFF2
  8411                           postinc0	equ	0xFEE
  8412                           wreg	equ	0xFE8
  8413                           indf2	equ	0xFDF
  8414                           postinc2	equ	0xFDE
  8415                           postdec2	equ	0xFDD
  8416                           fsr2h	equ	0xFDA
  8417                           fsr2l	equ	0xFD9
  8418                           status	equ	0xFD8
  8419                           
  8420 ;; *************** function ___ftneg *****************
  8421 ;; Defined at:
  8422 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
  8423 ;; Parameters:    Size  Location     Type
  8424 ;;  f1              3   46[BANK0 ] float 
  8425 ;; Auto vars:     Size  Location     Type
  8426 ;;		None
  8427 ;; Return value:  Size  Location     Type
  8428 ;;                  3   46[BANK0 ] float 
  8429 ;; Registers used:
  8430 ;;		wreg, status,2, status,0
  8431 ;; Tracked objects:
  8432 ;;		On entry : 0/0
  8433 ;;		On exit  : 0/0
  8434 ;;		Unchanged: 0/0
  8435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8436 ;;      Params:         0       3       0       0       0       0       0
  8437 ;;      Locals:         0       0       0       0       0       0       0
  8438 ;;      Temps:          0       0       0       0       0       0       0
  8439 ;;      Totals:         0       3       0       0       0       0       0
  8440 ;;Total ram usage:        3 bytes
  8441 ;; Hardware stack levels used:    1
  8442 ;; Hardware stack levels required when called:    7
  8443 ;; This function calls:
  8444 ;;		Nothing
  8445 ;; This function is called by:
  8446 ;;		__doprnt
  8447 ;; This function uses a non-reentrant model
  8448 ;;
  8449                           
  8450                           	psect	text20
  8451  0058CE                     __ptext20:
  8452                           	opt stack 0
  8453  0058CE                     ___ftneg:
  8454                           	opt stack 21
  8455                           
  8456                           ;incstack = 0
  8457  0058CE  0100               	movlb	0	; () banked
  8458  0058D0  518E               	movf	___ftneg@f1& (0+255),w,b
  8459  0058D2  0100               	movlb	0	; () banked
  8460  0058D4  118F               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  8461  0058D6  0100               	movlb	0	; () banked
  8462  0058D8  1190               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  8463  0058DA  B4D8               	btfsc	status,2,c
  8464  0058DC  D009               	goto	l853
  8465                           
  8466                           ; BSR set to: 0
  8467  0058DE  0E00               	movlw	0
  8468  0058E0  0100               	movlb	0	; () banked
  8469  0058E2  1B8E               	xorwf	___ftneg@f1& (0+255),f,b
  8470  0058E4  0E00               	movlw	0
  8471  0058E6  0100               	movlb	0	; () banked
  8472  0058E8  1B8F               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  8473  0058EA  0E80               	movlw	128
  8474  0058EC  0100               	movlb	0	; () banked
  8475  0058EE  1B90               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  8476  0058F0                     l853:
  8477                           
  8478                           ; BSR set to: 0
  8479  0058F0  C08E  F08E         	movff	___ftneg@f1,?___ftneg
  8480  0058F4  C08F  F08F         	movff	___ftneg@f1+1,?___ftneg+1
  8481  0058F8  C090  F090         	movff	___ftneg@f1+2,?___ftneg+2
  8482                           
  8483                           ; BSR set to: 0
  8484  0058FC  0012               	return		;funcret
  8485  0058FE                     __end_of___ftneg:
  8486                           	opt stack 0
  8487                           tosu	equ	0xFFF
  8488                           tosh	equ	0xFFE
  8489                           tosl	equ	0xFFD
  8490                           pclath	equ	0xFFA
  8491                           tblptru	equ	0xFF8
  8492                           tblptrh	equ	0xFF7
  8493                           tblptrl	equ	0xFF6
  8494                           tablat	equ	0xFF5
  8495                           prodh	equ	0xFF4
  8496                           prodl	equ	0xFF3
  8497                           intcon	equ	0xFF2
  8498                           postinc0	equ	0xFEE
  8499                           wreg	equ	0xFE8
  8500                           indf2	equ	0xFDF
  8501                           postinc2	equ	0xFDE
  8502                           postdec2	equ	0xFDD
  8503                           fsr2h	equ	0xFDA
  8504                           fsr2l	equ	0xFD9
  8505                           status	equ	0xFD8
  8506                           
  8507 ;; *************** function ___ftge *****************
  8508 ;; Defined at:
  8509 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  8510 ;; Parameters:    Size  Location     Type
  8511 ;;  ff1             3   46[BANK0 ] float 
  8512 ;;  ff2             3   49[BANK0 ] float 
  8513 ;; Auto vars:     Size  Location     Type
  8514 ;;		None
  8515 ;; Return value:  Size  Location     Type
  8516 ;;		None               void
  8517 ;; Registers used:
  8518 ;;		wreg, status,2, status,0
  8519 ;; Tracked objects:
  8520 ;;		On entry : 0/0
  8521 ;;		On exit  : 0/0
  8522 ;;		Unchanged: 0/0
  8523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8524 ;;      Params:         0       6       0       0       0       0       0
  8525 ;;      Locals:         0       0       0       0       0       0       0
  8526 ;;      Temps:          0       3       0       0       0       0       0
  8527 ;;      Totals:         0       9       0       0       0       0       0
  8528 ;;Total ram usage:        9 bytes
  8529 ;; Hardware stack levels used:    1
  8530 ;; Hardware stack levels required when called:    7
  8531 ;; This function calls:
  8532 ;;		Nothing
  8533 ;; This function is called by:
  8534 ;;		_main
  8535 ;;		__doprnt
  8536 ;; This function uses a non-reentrant model
  8537 ;;
  8538                           
  8539                           	psect	text21
  8540  004E04                     __ptext21:
  8541                           	opt stack 0
  8542  004E04                     ___ftge:
  8543                           	opt stack 21
  8544                           
  8545                           ; BSR set to: 0
  8546                           ;incstack = 0
  8547  004E04  0100               	movlb	0	; () banked
  8548  004E06  AF90               	btfss	(___ftge@ff1+2)& (0+255),7,b
  8549  004E08  D01D               	goto	l4625
  8550                           
  8551                           ; BSR set to: 0
  8552  004E0A  C08E  F094         	movff	___ftge@ff1,??___ftge
  8553  004E0E  C08F  F095         	movff	___ftge@ff1+1,??___ftge+1
  8554  004E12  C090  F096         	movff	___ftge@ff1+2,??___ftge+2
  8555  004E16  0100               	movlb	0	; () banked
  8556  004E18  1F94               	comf	??___ftge& (0+255),f,b
  8557  004E1A  1F95               	comf	(??___ftge+1)& (0+255),f,b
  8558  004E1C  1F96               	comf	(??___ftge+2)& (0+255),f,b
  8559  004E1E  2B94               	incf	??___ftge& (0+255),f,b
  8560  004E20  0E00               	movlw	0
  8561  004E22  2395               	addwfc	(??___ftge+1)& (0+255),f,b
  8562  004E24  2396               	addwfc	(??___ftge+2)& (0+255),f,b
  8563  004E26  0E00               	movlw	0
  8564  004E28  0100               	movlb	0	; () banked
  8565  004E2A  2594               	addwf	??___ftge& (0+255),w,b
  8566  004E2C  0100               	movlb	0	; () banked
  8567  004E2E  6F8E               	movwf	___ftge@ff1& (0+255),b
  8568  004E30  0E00               	movlw	0
  8569  004E32  0100               	movlb	0	; () banked
  8570  004E34  2195               	addwfc	(??___ftge+1)& (0+255),w,b
  8571  004E36  0100               	movlb	0	; () banked
  8572  004E38  6F8F               	movwf	(___ftge@ff1+1)& (0+255),b
  8573  004E3A  0E80               	movlw	128
  8574  004E3C  0100               	movlb	0	; () banked
  8575  004E3E  2196               	addwfc	(??___ftge+2)& (0+255),w,b
  8576  004E40  0100               	movlb	0	; () banked
  8577  004E42  6F90               	movwf	(___ftge@ff1+2)& (0+255),b
  8578  004E44                     l4625:
  8579                           
  8580                           ; BSR set to: 0
  8581  004E44  0100               	movlb	0	; () banked
  8582  004E46  AF93               	btfss	(___ftge@ff2+2)& (0+255),7,b
  8583  004E48  D01D               	goto	l4629
  8584                           
  8585                           ; BSR set to: 0
  8586  004E4A  C091  F094         	movff	___ftge@ff2,??___ftge
  8587  004E4E  C092  F095         	movff	___ftge@ff2+1,??___ftge+1
  8588  004E52  C093  F096         	movff	___ftge@ff2+2,??___ftge+2
  8589  004E56  0100               	movlb	0	; () banked
  8590  004E58  1F94               	comf	??___ftge& (0+255),f,b
  8591  004E5A  1F95               	comf	(??___ftge+1)& (0+255),f,b
  8592  004E5C  1F96               	comf	(??___ftge+2)& (0+255),f,b
  8593  004E5E  2B94               	incf	??___ftge& (0+255),f,b
  8594  004E60  0E00               	movlw	0
  8595  004E62  2395               	addwfc	(??___ftge+1)& (0+255),f,b
  8596  004E64  2396               	addwfc	(??___ftge+2)& (0+255),f,b
  8597  004E66  0E00               	movlw	0
  8598  004E68  0100               	movlb	0	; () banked
  8599  004E6A  2594               	addwf	??___ftge& (0+255),w,b
  8600  004E6C  0100               	movlb	0	; () banked
  8601  004E6E  6F91               	movwf	___ftge@ff2& (0+255),b
  8602  004E70  0E00               	movlw	0
  8603  004E72  0100               	movlb	0	; () banked
  8604  004E74  2195               	addwfc	(??___ftge+1)& (0+255),w,b
  8605  004E76  0100               	movlb	0	; () banked
  8606  004E78  6F92               	movwf	(___ftge@ff2+1)& (0+255),b
  8607  004E7A  0E80               	movlw	128
  8608  004E7C  0100               	movlb	0	; () banked
  8609  004E7E  2196               	addwfc	(??___ftge+2)& (0+255),w,b
  8610  004E80  0100               	movlb	0	; () banked
  8611  004E82  6F93               	movwf	(___ftge@ff2+2)& (0+255),b
  8612  004E84                     l4629:
  8613                           
  8614                           ; BSR set to: 0
  8615  004E84  0E00               	movlw	0
  8616  004E86  0100               	movlb	0	; () banked
  8617  004E88  1B8E               	xorwf	___ftge@ff1& (0+255),f,b
  8618  004E8A  0E00               	movlw	0
  8619  004E8C  0100               	movlb	0	; () banked
  8620  004E8E  1B8F               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  8621  004E90  0E80               	movlw	128
  8622  004E92  0100               	movlb	0	; () banked
  8623  004E94  1B90               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  8624                           
  8625                           ; BSR set to: 0
  8626  004E96  0E00               	movlw	0
  8627  004E98  0100               	movlb	0	; () banked
  8628  004E9A  1B91               	xorwf	___ftge@ff2& (0+255),f,b
  8629  004E9C  0E00               	movlw	0
  8630  004E9E  0100               	movlb	0	; () banked
  8631  004EA0  1B92               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  8632  004EA2  0E80               	movlw	128
  8633  004EA4  0100               	movlb	0	; () banked
  8634  004EA6  1B93               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  8635  004EA8  0100               	movlb	0	; () banked
  8636  004EAA  5191               	movf	___ftge@ff2& (0+255),w,b
  8637  004EAC  0100               	movlb	0	; () banked
  8638  004EAE  5D8E               	subwf	___ftge@ff1& (0+255),w,b
  8639  004EB0  0100               	movlb	0	; () banked
  8640  004EB2  5192               	movf	(___ftge@ff2+1)& (0+255),w,b
  8641  004EB4  0100               	movlb	0	; () banked
  8642  004EB6  598F               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  8643  004EB8  0100               	movlb	0	; () banked
  8644  004EBA  5193               	movf	(___ftge@ff2+2)& (0+255),w,b
  8645  004EBC  0100               	movlb	0	; () banked
  8646  004EBE  5990               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  8647  004EC0  B0D8               	btfsc	status,0,c
  8648  004EC2  D002               	goto	l4635
  8649                           
  8650                           ; BSR set to: 0
  8651  004EC4  90D8               	bcf	status,0,c
  8652  004EC6  0012               	return	
  8653  004EC8                     l4635:
  8654                           
  8655                           ; BSR set to: 0
  8656  004EC8  80D8               	bsf	status,0,c
  8657                           
  8658                           ; BSR set to: 0
  8659  004ECA  0012               	return	
  8660  004ECC                     __end_of___ftge:
  8661                           	opt stack 0
  8662                           tosu	equ	0xFFF
  8663                           tosh	equ	0xFFE
  8664                           tosl	equ	0xFFD
  8665                           pclath	equ	0xFFA
  8666                           tblptru	equ	0xFF8
  8667                           tblptrh	equ	0xFF7
  8668                           tblptrl	equ	0xFF6
  8669                           tablat	equ	0xFF5
  8670                           prodh	equ	0xFF4
  8671                           prodl	equ	0xFF3
  8672                           intcon	equ	0xFF2
  8673                           postinc0	equ	0xFEE
  8674                           wreg	equ	0xFE8
  8675                           indf2	equ	0xFDF
  8676                           postinc2	equ	0xFDE
  8677                           postdec2	equ	0xFDD
  8678                           fsr2h	equ	0xFDA
  8679                           fsr2l	equ	0xFD9
  8680                           status	equ	0xFD8
  8681                           
  8682 ;; *************** function _lcd_sendString *****************
  8683 ;; Defined at:
  8684 ;;		line 74 in file "lcd.c"
  8685 ;; Parameters:    Size  Location     Type
  8686 ;;  a               2   50[BANK0 ] PTR const unsigned char 
  8687 ;;		 -> ftoa@buf(17), lcd_sendUInt@displayString(10), lcd_sendInt@displayString(10), main@cap_string(16), 
  8688 ;; Auto vars:     Size  Location     Type
  8689 ;;  i               2   52[BANK0 ] int 
  8690 ;; Return value:  Size  Location     Type
  8691 ;;                  1    wreg      void 
  8692 ;; Registers used:
  8693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8694 ;; Tracked objects:
  8695 ;;		On entry : 0/0
  8696 ;;		On exit  : 0/0
  8697 ;;		Unchanged: 0/0
  8698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8699 ;;      Params:         0       2       0       0       0       0       0
  8700 ;;      Locals:         0       2       0       0       0       0       0
  8701 ;;      Temps:          0       0       0       0       0       0       0
  8702 ;;      Totals:         0       4       0       0       0       0       0
  8703 ;;Total ram usage:        4 bytes
  8704 ;; Hardware stack levels used:    1
  8705 ;; Hardware stack levels required when called:    9
  8706 ;; This function calls:
  8707 ;;		_lcd_sendChar
  8708 ;; This function is called by:
  8709 ;;		_main
  8710 ;;		_lcd_sendStringToPos
  8711 ;;		_lcd_sendInt
  8712 ;;		_lcd_sendFloat
  8713 ;;		_lcd_sendUInt
  8714 ;; This function uses a non-reentrant model
  8715 ;;
  8716                           
  8717                           	psect	text22
  8718  0056D8                     __ptext22:
  8719                           	opt stack 0
  8720  0056D8                     _lcd_sendString:
  8721                           	opt stack 21
  8722                           
  8723                           ;lcd.c: 76: int i;
  8724                           ;lcd.c: 77: for(i=0;a[i]!='\0';i++)
  8725                           
  8726                           ; BSR set to: 0
  8727                           ;incstack = 0
  8728  0056D8  0E00               	movlw	0
  8729  0056DA  0100               	movlb	0	; () banked
  8730  0056DC  6F95               	movwf	(lcd_sendString@i+1)& (0+255),b
  8731  0056DE  0E00               	movlw	0
  8732  0056E0  6F94               	movwf	lcd_sendString@i& (0+255),b
  8733  0056E2  D010               	goto	l5749
  8734  0056E4                     l5745:
  8735                           
  8736                           ; BSR set to: 0
  8737                           ;lcd.c: 78: lcd_sendChar(a[i]);
  8738  0056E4  0100               	movlb	0	; () banked
  8739  0056E6  5194               	movf	lcd_sendString@i& (0+255),w,b
  8740  0056E8  0100               	movlb	0	; () banked
  8741  0056EA  2592               	addwf	lcd_sendString@a& (0+255),w,b
  8742  0056EC  6ED9               	movwf	fsr2l,c
  8743  0056EE  0100               	movlb	0	; () banked
  8744  0056F0  5195               	movf	(lcd_sendString@i+1)& (0+255),w,b
  8745  0056F2  0100               	movlb	0	; () banked
  8746  0056F4  2193               	addwfc	(lcd_sendString@a+1)& (0+255),w,b
  8747  0056F6  6EDA               	movwf	fsr2h,c
  8748  0056F8  50DF               	movf	indf2,w,c
  8749  0056FA  EC90  F02B         	call	_lcd_sendChar
  8750  0056FE  0100               	movlb	0	; () banked
  8751  005700  4B94               	infsnz	lcd_sendString@i& (0+255),f,b
  8752  005702  2B95               	incf	(lcd_sendString@i+1)& (0+255),f,b
  8753  005704                     l5749:
  8754                           
  8755                           ; BSR set to: 0
  8756  005704  0100               	movlb	0	; () banked
  8757  005706  5194               	movf	lcd_sendString@i& (0+255),w,b
  8758  005708  0100               	movlb	0	; () banked
  8759  00570A  2592               	addwf	lcd_sendString@a& (0+255),w,b
  8760  00570C  6ED9               	movwf	fsr2l,c
  8761  00570E  0100               	movlb	0	; () banked
  8762  005710  5195               	movf	(lcd_sendString@i+1)& (0+255),w,b
  8763  005712  0100               	movlb	0	; () banked
  8764  005714  2193               	addwfc	(lcd_sendString@a+1)& (0+255),w,b
  8765  005716  6EDA               	movwf	fsr2h,c
  8766  005718  50DF               	movf	indf2,w,c
  8767  00571A  B4D8               	btfsc	status,2,c
  8768  00571C  0012               	return	
  8769  00571E  D7E2               	goto	l5745
  8770  005720                     __end_of_lcd_sendString:
  8771                           	opt stack 0
  8772                           tosu	equ	0xFFF
  8773                           tosh	equ	0xFFE
  8774                           tosl	equ	0xFFD
  8775                           pclath	equ	0xFFA
  8776                           tblptru	equ	0xFF8
  8777                           tblptrh	equ	0xFF7
  8778                           tblptrl	equ	0xFF6
  8779                           tablat	equ	0xFF5
  8780                           prodh	equ	0xFF4
  8781                           prodl	equ	0xFF3
  8782                           intcon	equ	0xFF2
  8783                           postinc0	equ	0xFEE
  8784                           wreg	equ	0xFE8
  8785                           indf2	equ	0xFDF
  8786                           postinc2	equ	0xFDE
  8787                           postdec2	equ	0xFDD
  8788                           fsr2h	equ	0xFDA
  8789                           fsr2l	equ	0xFD9
  8790                           status	equ	0xFD8
  8791                           
  8792 ;; *************** function _lcd_sendChar *****************
  8793 ;; Defined at:
  8794 ;;		line 58 in file "lcd.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;  a               1    wreg     const unsigned char 
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;  a               1   49[BANK0 ] const unsigned char 
  8799 ;;  y               1   48[BANK0 ] unsigned char 
  8800 ;;  temp            1   47[BANK0 ] unsigned char 
  8801 ;; Return value:  Size  Location     Type
  8802 ;;                  1    wreg      void 
  8803 ;; Registers used:
  8804 ;;		wreg, status,2, status,0, cstack
  8805 ;; Tracked objects:
  8806 ;;		On entry : 0/0
  8807 ;;		On exit  : 0/0
  8808 ;;		Unchanged: 0/0
  8809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8810 ;;      Params:         0       0       0       0       0       0       0
  8811 ;;      Locals:         0       3       0       0       0       0       0
  8812 ;;      Temps:          0       0       0       0       0       0       0
  8813 ;;      Totals:         0       3       0       0       0       0       0
  8814 ;;Total ram usage:        3 bytes
  8815 ;; Hardware stack levels used:    1
  8816 ;; Hardware stack levels required when called:    8
  8817 ;; This function calls:
  8818 ;;		__lcd_Port
  8819 ;; This function is called by:
  8820 ;;		_lcd_sendString
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           	psect	text23
  8825  005720                     __ptext23:
  8826                           	opt stack 0
  8827  005720                     _lcd_sendChar:
  8828                           	opt stack 21
  8829                           
  8830                           ; BSR set to: 0
  8831                           ;incstack = 0
  8832                           ;lcd_sendChar@a stored from wreg
  8833  005720  0100               	movlb	0	; () banked
  8834  005722  6F91               	movwf	lcd_sendChar@a& (0+255),b
  8835                           
  8836                           ;lcd.c: 60: char temp,y;
  8837                           ;lcd.c: 61: temp = a&0x0F;
  8838  005724  0100               	movlb	0	; () banked
  8839  005726  5191               	movf	lcd_sendChar@a& (0+255),w,b
  8840  005728  0B0F               	andlw	15
  8841  00572A  0100               	movlb	0	; () banked
  8842  00572C  6F8F               	movwf	lcd_sendChar@temp& (0+255),b
  8843                           
  8844                           ;lcd.c: 62: y = a&0xF0;
  8845  00572E  0100               	movlb	0	; () banked
  8846  005730  5191               	movf	lcd_sendChar@a& (0+255),w,b
  8847  005732  0BF0               	andlw	240
  8848  005734  0100               	movlb	0	; () banked
  8849  005736  6F90               	movwf	lcd_sendChar@y& (0+255),b
  8850                           
  8851                           ; BSR set to: 0
  8852                           ;lcd.c: 63: LATAbits.LA4 = 1;
  8853  005738  8889               	bsf	3977,4,c	;volatile
  8854                           
  8855                           ; BSR set to: 0
  8856                           ;lcd.c: 64: _lcd_Port(y>>4);
  8857  00573A  0100               	movlb	0	; () banked
  8858  00573C  3990               	swapf	lcd_sendChar@y& (0+255),w,b
  8859  00573E  0B0F               	andlw	15
  8860  005740  EC31  F02C         	call	__lcd_Port
  8861                           
  8862                           ;lcd.c: 65: LATAbits.LA5 = 1;
  8863  005744  8A89               	bsf	3977,5,c	;volatile
  8864                           
  8865                           ;lcd.c: 66: _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  8866  005746  0E35               	movlw	53
  8867  005748                     u16627:
  8868  005748  2EE8               	decfsz	wreg,f,c
  8869  00574A  D7FE               	goto	u16627
  8870  00574C  F000               	nop	
  8871                           
  8872                           ;lcd.c: 67: LATAbits.LA5 = 0;
  8873  00574E  9A89               	bcf	3977,5,c	;volatile
  8874                           
  8875                           ;lcd.c: 68: _lcd_Port(temp);
  8876  005750  0100               	movlb	0	; () banked
  8877  005752  518F               	movf	lcd_sendChar@temp& (0+255),w,b
  8878  005754  EC31  F02C         	call	__lcd_Port
  8879                           
  8880                           ;lcd.c: 69: LATAbits.LA5 = 1;
  8881  005758  8A89               	bsf	3977,5,c	;volatile
  8882                           
  8883                           ;lcd.c: 70: _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  8884  00575A  0E35               	movlw	53
  8885  00575C                     u16637:
  8886  00575C  2EE8               	decfsz	wreg,f,c
  8887  00575E  D7FE               	goto	u16637
  8888  005760  F000               	nop	
  8889                           
  8890                           ;lcd.c: 71: LATAbits.LA5 = 0;
  8891  005762  9A89               	bcf	3977,5,c	;volatile
  8892  005764  0012               	return		;funcret
  8893  005766                     __end_of_lcd_sendChar:
  8894                           	opt stack 0
  8895                           tosu	equ	0xFFF
  8896                           tosh	equ	0xFFE
  8897                           tosl	equ	0xFFD
  8898                           pclath	equ	0xFFA
  8899                           tblptru	equ	0xFF8
  8900                           tblptrh	equ	0xFF7
  8901                           tblptrl	equ	0xFF6
  8902                           tablat	equ	0xFF5
  8903                           prodh	equ	0xFF4
  8904                           prodl	equ	0xFF3
  8905                           intcon	equ	0xFF2
  8906                           postinc0	equ	0xFEE
  8907                           wreg	equ	0xFE8
  8908                           indf2	equ	0xFDF
  8909                           postinc2	equ	0xFDE
  8910                           postdec2	equ	0xFDD
  8911                           fsr2h	equ	0xFDA
  8912                           fsr2l	equ	0xFD9
  8913                           status	equ	0xFD8
  8914                           
  8915 ;; *************** function _lcd_init *****************
  8916 ;; Defined at:
  8917 ;;		line 39 in file "lcd.c"
  8918 ;; Parameters:    Size  Location     Type
  8919 ;;		None
  8920 ;; Auto vars:     Size  Location     Type
  8921 ;;		None
  8922 ;; Return value:  Size  Location     Type
  8923 ;;                  1    wreg      void 
  8924 ;; Registers used:
  8925 ;;		wreg, status,2, cstack
  8926 ;; Tracked objects:
  8927 ;;		On entry : 0/0
  8928 ;;		On exit  : 0/0
  8929 ;;		Unchanged: 0/0
  8930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8931 ;;      Params:         0       0       0       0       0       0       0
  8932 ;;      Locals:         0       0       0       0       0       0       0
  8933 ;;      Temps:          0       1       0       0       0       0       0
  8934 ;;      Totals:         0       1       0       0       0       0       0
  8935 ;;Total ram usage:        1 bytes
  8936 ;; Hardware stack levels used:    1
  8937 ;; Hardware stack levels required when called:    9
  8938 ;; This function calls:
  8939 ;;		__lcd_Port
  8940 ;;		_lcd_sendCommand
  8941 ;; This function is called by:
  8942 ;;		_main
  8943 ;; This function uses a non-reentrant model
  8944 ;;
  8945                           
  8946                           	psect	text24
  8947  005442                     __ptext24:
  8948                           	opt stack 0
  8949  005442                     _lcd_init:
  8950                           	opt stack 21
  8951                           
  8952                           ;lcd.c: 41: _lcd_Port(0x00);
  8953                           
  8954                           ;incstack = 0
  8955  005442  0E00               	movlw	0
  8956  005444  EC31  F02C         	call	__lcd_Port
  8957                           
  8958                           ;lcd.c: 42: _delay((unsigned long)((20)*(16000000UL/4000.0)));
  8959  005448  0E68               	movlw	104
  8960  00544A  0100               	movlb	0	; () banked
  8961  00544C  6F91               	movwf	??_lcd_init& (0+255),b
  8962  00544E  0EE4               	movlw	228
  8963  005450                     u16647:
  8964  005450  2EE8               	decfsz	wreg,f,c
  8965  005452  D7FE               	goto	u16647
  8966  005454  2F91               	decfsz	??_lcd_init& (0+255),f,b
  8967  005456  D7FC               	goto	u16647
  8968  005458  D000               	nop2	
  8969                           
  8970                           ;lcd.c: 43: lcd_sendCommand(0x03);
  8971  00545A  0E03               	movlw	3
  8972  00545C  ECDB  F02C         	call	_lcd_sendCommand
  8973                           
  8974                           ;lcd.c: 44: _delay((unsigned long)((5)*(16000000UL/4000.0)));
  8975  005460  0E1A               	movlw	26
  8976  005462  0100               	movlb	0	; () banked
  8977  005464  6F91               	movwf	??_lcd_init& (0+255),b
  8978  005466  0EF8               	movlw	248
  8979  005468                     u16657:
  8980  005468  2EE8               	decfsz	wreg,f,c
  8981  00546A  D7FE               	goto	u16657
  8982  00546C  2F91               	decfsz	??_lcd_init& (0+255),f,b
  8983  00546E  D7FC               	goto	u16657
  8984  005470  D000               	nop2	
  8985                           
  8986                           ;lcd.c: 45: lcd_sendCommand(0x03);
  8987  005472  0E03               	movlw	3
  8988  005474  ECDB  F02C         	call	_lcd_sendCommand
  8989                           
  8990                           ;lcd.c: 46: _delay((unsigned long)((11)*(16000000UL/4000.0)));
  8991  005478  0E3A               	movlw	58
  8992  00547A  0100               	movlb	0	; () banked
  8993  00547C  6F91               	movwf	??_lcd_init& (0+255),b
  8994  00547E  0E23               	movlw	35
  8995  005480                     u16667:
  8996  005480  2EE8               	decfsz	wreg,f,c
  8997  005482  D7FE               	goto	u16667
  8998  005484  2F91               	decfsz	??_lcd_init& (0+255),f,b
  8999  005486  D7FC               	goto	u16667
  9000  005488  F000               	nop	
  9001                           
  9002                           ;lcd.c: 47: lcd_sendCommand(0x03);
  9003  00548A  0E03               	movlw	3
  9004  00548C  ECDB  F02C         	call	_lcd_sendCommand
  9005                           
  9006                           ;lcd.c: 49: lcd_sendCommand(0x02);
  9007  005490  0E02               	movlw	2
  9008  005492  ECDB  F02C         	call	_lcd_sendCommand
  9009                           
  9010                           ;lcd.c: 50: lcd_sendCommand(0x02);
  9011  005496  0E02               	movlw	2
  9012  005498  ECDB  F02C         	call	_lcd_sendCommand
  9013                           
  9014                           ;lcd.c: 51: lcd_sendCommand(0x08);
  9015  00549C  0E08               	movlw	8
  9016  00549E  ECDB  F02C         	call	_lcd_sendCommand
  9017                           
  9018                           ;lcd.c: 52: lcd_sendCommand(0x00);
  9019  0054A2  0E00               	movlw	0
  9020  0054A4  ECDB  F02C         	call	_lcd_sendCommand
  9021                           
  9022                           ;lcd.c: 53: lcd_sendCommand(0x0C);
  9023  0054A8  0E0C               	movlw	12
  9024  0054AA  ECDB  F02C         	call	_lcd_sendCommand
  9025                           
  9026                           ;lcd.c: 54: lcd_sendCommand(0x00);
  9027  0054AE  0E00               	movlw	0
  9028  0054B0  ECDB  F02C         	call	_lcd_sendCommand
  9029                           
  9030                           ;lcd.c: 55: lcd_sendCommand(0x06);
  9031  0054B4  0E06               	movlw	6
  9032  0054B6  ECDB  F02C         	call	_lcd_sendCommand
  9033  0054BA  0012               	return		;funcret
  9034  0054BC                     __end_of_lcd_init:
  9035                           	opt stack 0
  9036                           tosu	equ	0xFFF
  9037                           tosh	equ	0xFFE
  9038                           tosl	equ	0xFFD
  9039                           pclath	equ	0xFFA
  9040                           tblptru	equ	0xFF8
  9041                           tblptrh	equ	0xFF7
  9042                           tblptrl	equ	0xFF6
  9043                           tablat	equ	0xFF5
  9044                           prodh	equ	0xFF4
  9045                           prodl	equ	0xFF3
  9046                           intcon	equ	0xFF2
  9047                           postinc0	equ	0xFEE
  9048                           wreg	equ	0xFE8
  9049                           indf2	equ	0xFDF
  9050                           postinc2	equ	0xFDE
  9051                           postdec2	equ	0xFDD
  9052                           fsr2h	equ	0xFDA
  9053                           fsr2l	equ	0xFD9
  9054                           status	equ	0xFD8
  9055                           
  9056 ;; *************** function _lcd_clear *****************
  9057 ;; Defined at:
  9058 ;;		line 12 in file "lcd.c"
  9059 ;; Parameters:    Size  Location     Type
  9060 ;;		None
  9061 ;; Auto vars:     Size  Location     Type
  9062 ;;		None
  9063 ;; Return value:  Size  Location     Type
  9064 ;;                  1    wreg      void 
  9065 ;; Registers used:
  9066 ;;		wreg, status,2, cstack
  9067 ;; Tracked objects:
  9068 ;;		On entry : 0/0
  9069 ;;		On exit  : 0/0
  9070 ;;		Unchanged: 0/0
  9071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9072 ;;      Params:         0       0       0       0       0       0       0
  9073 ;;      Locals:         0       0       0       0       0       0       0
  9074 ;;      Temps:          0       0       0       0       0       0       0
  9075 ;;      Totals:         0       0       0       0       0       0       0
  9076 ;;Total ram usage:        0 bytes
  9077 ;; Hardware stack levels used:    1
  9078 ;; Hardware stack levels required when called:    9
  9079 ;; This function calls:
  9080 ;;		_lcd_sendCommand
  9081 ;; This function is called by:
  9082 ;;		_main
  9083 ;; This function uses a non-reentrant model
  9084 ;;
  9085                           
  9086                           	psect	text25
  9087  005AD8                     __ptext25:
  9088                           	opt stack 0
  9089  005AD8                     _lcd_clear:
  9090                           	opt stack 21
  9091                           
  9092                           ;lcd.c: 14: lcd_sendCommand(0);
  9093                           
  9094                           ;incstack = 0
  9095  005AD8  0E00               	movlw	0
  9096  005ADA  ECDB  F02C         	call	_lcd_sendCommand
  9097                           
  9098                           ;lcd.c: 15: lcd_sendCommand(1);
  9099  005ADE  0E01               	movlw	1
  9100  005AE0  ECDB  F02C         	call	_lcd_sendCommand
  9101  005AE4  0012               	return		;funcret
  9102  005AE6                     __end_of_lcd_clear:
  9103                           	opt stack 0
  9104                           tosu	equ	0xFFF
  9105                           tosh	equ	0xFFE
  9106                           tosl	equ	0xFFD
  9107                           pclath	equ	0xFFA
  9108                           tblptru	equ	0xFF8
  9109                           tblptrh	equ	0xFF7
  9110                           tblptrl	equ	0xFF6
  9111                           tablat	equ	0xFF5
  9112                           prodh	equ	0xFF4
  9113                           prodl	equ	0xFF3
  9114                           intcon	equ	0xFF2
  9115                           postinc0	equ	0xFEE
  9116                           wreg	equ	0xFE8
  9117                           indf2	equ	0xFDF
  9118                           postinc2	equ	0xFDE
  9119                           postdec2	equ	0xFDD
  9120                           fsr2h	equ	0xFDA
  9121                           fsr2l	equ	0xFD9
  9122                           status	equ	0xFD8
  9123                           
  9124 ;; *************** function _lcd_sendCommand *****************
  9125 ;; Defined at:
  9126 ;;		line 3 in file "lcd.c"
  9127 ;; Parameters:    Size  Location     Type
  9128 ;;  a               1    wreg     unsigned char 
  9129 ;; Auto vars:     Size  Location     Type
  9130 ;;  a               1   48[BANK0 ] unsigned char 
  9131 ;; Return value:  Size  Location     Type
  9132 ;;                  1    wreg      void 
  9133 ;; Registers used:
  9134 ;;		wreg, status,2, cstack
  9135 ;; Tracked objects:
  9136 ;;		On entry : 0/0
  9137 ;;		On exit  : 0/0
  9138 ;;		Unchanged: 0/0
  9139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9140 ;;      Params:         0       0       0       0       0       0       0
  9141 ;;      Locals:         0       1       0       0       0       0       0
  9142 ;;      Temps:          0       1       0       0       0       0       0
  9143 ;;      Totals:         0       2       0       0       0       0       0
  9144 ;;Total ram usage:        2 bytes
  9145 ;; Hardware stack levels used:    1
  9146 ;; Hardware stack levels required when called:    8
  9147 ;; This function calls:
  9148 ;;		__lcd_Port
  9149 ;; This function is called by:
  9150 ;;		_lcd_clear
  9151 ;;		_lcd_init
  9152 ;;		_lcd_setPosition
  9153 ;;		_lcd_shiftRight
  9154 ;;		_lcd_shiftLeft
  9155 ;; This function uses a non-reentrant model
  9156 ;;
  9157                           
  9158                           	psect	text26
  9159  0059B6                     __ptext26:
  9160                           	opt stack 0
  9161  0059B6                     _lcd_sendCommand:
  9162                           	opt stack 21
  9163                           
  9164                           ;incstack = 0
  9165                           ;lcd_sendCommand@a stored from wreg
  9166  0059B6  0100               	movlb	0	; () banked
  9167  0059B8  6F90               	movwf	lcd_sendCommand@a& (0+255),b
  9168                           
  9169                           ;lcd.c: 5: LATAbits.LA4 = 0;
  9170  0059BA  9889               	bcf	3977,4,c	;volatile
  9171                           
  9172                           ;lcd.c: 6: _lcd_Port(a);
  9173  0059BC  0100               	movlb	0	; () banked
  9174  0059BE  5190               	movf	lcd_sendCommand@a& (0+255),w,b
  9175  0059C0  EC31  F02C         	call	__lcd_Port
  9176                           
  9177                           ;lcd.c: 7: LATAbits.LA5 = 1;
  9178  0059C4  8A89               	bsf	3977,5,c	;volatile
  9179                           
  9180                           ;lcd.c: 8: _delay((unsigned long)((4)*(16000000UL/4000.0)));
  9181  0059C6  0E15               	movlw	21
  9182  0059C8  0100               	movlb	0	; () banked
  9183  0059CA  6F8F               	movwf	??_lcd_sendCommand& (0+255),b
  9184  0059CC  0EC6               	movlw	198
  9185  0059CE                     u16677:
  9186  0059CE  2EE8               	decfsz	wreg,f,c
  9187  0059D0  D7FE               	goto	u16677
  9188  0059D2  2F8F               	decfsz	??_lcd_sendCommand& (0+255),f,b
  9189  0059D4  D7FC               	goto	u16677
  9190  0059D6  D000               	nop2	
  9191                           
  9192                           ;lcd.c: 9: LATAbits.LA5 = 0;
  9193  0059D8  9A89               	bcf	3977,5,c	;volatile
  9194  0059DA  0012               	return		;funcret
  9195  0059DC                     __end_of_lcd_sendCommand:
  9196                           	opt stack 0
  9197                           tosu	equ	0xFFF
  9198                           tosh	equ	0xFFE
  9199                           tosl	equ	0xFFD
  9200                           pclath	equ	0xFFA
  9201                           tblptru	equ	0xFF8
  9202                           tblptrh	equ	0xFF7
  9203                           tblptrl	equ	0xFF6
  9204                           tablat	equ	0xFF5
  9205                           prodh	equ	0xFF4
  9206                           prodl	equ	0xFF3
  9207                           intcon	equ	0xFF2
  9208                           postinc0	equ	0xFEE
  9209                           wreg	equ	0xFE8
  9210                           indf2	equ	0xFDF
  9211                           postinc2	equ	0xFDE
  9212                           postdec2	equ	0xFDD
  9213                           fsr2h	equ	0xFDA
  9214                           fsr2l	equ	0xFD9
  9215                           status	equ	0xFD8
  9216                           
  9217 ;; *************** function __lcd_Port *****************
  9218 ;; Defined at:
  9219 ;;		line 139 in file "lcd.c"
  9220 ;; Parameters:    Size  Location     Type
  9221 ;;  a               1    wreg     unsigned char 
  9222 ;; Auto vars:     Size  Location     Type
  9223 ;;  a               1   46[BANK0 ] unsigned char 
  9224 ;; Return value:  Size  Location     Type
  9225 ;;                  1    wreg      void 
  9226 ;; Registers used:
  9227 ;;		wreg
  9228 ;; Tracked objects:
  9229 ;;		On entry : 0/0
  9230 ;;		On exit  : 0/0
  9231 ;;		Unchanged: 0/0
  9232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9233 ;;      Params:         0       0       0       0       0       0       0
  9234 ;;      Locals:         0       1       0       0       0       0       0
  9235 ;;      Temps:          0       0       0       0       0       0       0
  9236 ;;      Totals:         0       1       0       0       0       0       0
  9237 ;;Total ram usage:        1 bytes
  9238 ;; Hardware stack levels used:    1
  9239 ;; Hardware stack levels required when called:    7
  9240 ;; This function calls:
  9241 ;;		Nothing
  9242 ;; This function is called by:
  9243 ;;		_lcd_sendCommand
  9244 ;;		_lcd_init
  9245 ;;		_lcd_sendChar
  9246 ;; This function uses a non-reentrant model
  9247 ;;
  9248                           
  9249                           	psect	text27
  9250  005862                     __ptext27:
  9251                           	opt stack 0
  9252  005862                     __lcd_Port:
  9253                           	opt stack 21
  9254                           
  9255                           ;incstack = 0
  9256                           ;__lcd_Port@a stored from wreg
  9257  005862  0100               	movlb	0	; () banked
  9258  005864  6F8E               	movwf	__lcd_Port@a& (0+255),b
  9259                           
  9260                           ;lcd.c: 141: if(a & 1)
  9261  005866  0100               	movlb	0	; () banked
  9262  005868  A18E               	btfss	__lcd_Port@a& (0+255),0,b
  9263  00586A  D002               	goto	l332
  9264                           
  9265                           ; BSR set to: 0
  9266                           ;lcd.c: 142: LATAbits.LA0 = 1;
  9267  00586C  8089               	bsf	3977,0,c	;volatile
  9268  00586E  D001               	goto	l4413
  9269  005870                     l332:
  9270                           
  9271                           ; BSR set to: 0
  9272                           ;lcd.c: 143: else
  9273                           ;lcd.c: 144: LATAbits.LA0 = 0;
  9274  005870  9089               	bcf	3977,0,c	;volatile
  9275  005872                     l4413:
  9276                           
  9277                           ; BSR set to: 0
  9278                           ;lcd.c: 146: if(a & 2)
  9279  005872  0100               	movlb	0	; () banked
  9280  005874  A38E               	btfss	__lcd_Port@a& (0+255),1,b
  9281  005876  D002               	goto	l334
  9282                           
  9283                           ; BSR set to: 0
  9284                           ;lcd.c: 147: LATAbits.LA1 = 1;
  9285  005878  8289               	bsf	3977,1,c	;volatile
  9286  00587A  D001               	goto	l4417
  9287  00587C                     l334:
  9288                           
  9289                           ; BSR set to: 0
  9290                           ;lcd.c: 148: else
  9291                           ;lcd.c: 149: LATAbits.LA1 = 0;
  9292  00587C  9289               	bcf	3977,1,c	;volatile
  9293  00587E                     l4417:
  9294                           
  9295                           ; BSR set to: 0
  9296                           ;lcd.c: 151: if(a & 4)
  9297  00587E  0100               	movlb	0	; () banked
  9298  005880  A58E               	btfss	__lcd_Port@a& (0+255),2,b
  9299  005882  D002               	goto	l336
  9300                           
  9301                           ; BSR set to: 0
  9302                           ;lcd.c: 152: LATAbits.LA2 = 1;
  9303  005884  8489               	bsf	3977,2,c	;volatile
  9304  005886  D001               	goto	l4421
  9305  005888                     l336:
  9306                           
  9307                           ; BSR set to: 0
  9308                           ;lcd.c: 153: else
  9309                           ;lcd.c: 154: LATAbits.LA2 = 0;
  9310  005888  9489               	bcf	3977,2,c	;volatile
  9311  00588A                     l4421:
  9312                           
  9313                           ; BSR set to: 0
  9314                           ;lcd.c: 156: if(a & 8)
  9315  00588A  0100               	movlb	0	; () banked
  9316  00588C  A78E               	btfss	__lcd_Port@a& (0+255),3,b
  9317  00588E  D002               	goto	l338
  9318                           
  9319                           ; BSR set to: 0
  9320                           ;lcd.c: 157: LATAbits.LA3 = 1;
  9321  005890  8689               	bsf	3977,3,c	;volatile
  9322  005892  0012               	return	
  9323  005894                     l338:
  9324                           
  9325                           ; BSR set to: 0
  9326                           ;lcd.c: 158: else
  9327                           ;lcd.c: 159: LATAbits.LA3 = 0;
  9328  005894  9689               	bcf	3977,3,c	;volatile
  9329  005896  0012               	return	
  9330  005898                     __end_of__lcd_Port:
  9331                           	opt stack 0
  9332                           tosu	equ	0xFFF
  9333                           tosh	equ	0xFFE
  9334                           tosl	equ	0xFFD
  9335                           pclath	equ	0xFFA
  9336                           tblptru	equ	0xFF8
  9337                           tblptrh	equ	0xFF7
  9338                           tblptrl	equ	0xFF6
  9339                           tablat	equ	0xFF5
  9340                           prodh	equ	0xFF4
  9341                           prodl	equ	0xFF3
  9342                           intcon	equ	0xFF2
  9343                           postinc0	equ	0xFEE
  9344                           wreg	equ	0xFE8
  9345                           indf2	equ	0xFDF
  9346                           postinc2	equ	0xFDE
  9347                           postdec2	equ	0xFDD
  9348                           fsr2h	equ	0xFDA
  9349                           fsr2l	equ	0xFD9
  9350                           status	equ	0xFD8
  9351                           
  9352 ;; *************** function ___ftdiv *****************
  9353 ;; Defined at:
  9354 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  9355 ;; Parameters:    Size  Location     Type
  9356 ;;  f1              3   54[BANK0 ] float 
  9357 ;;  f2              3   57[BANK0 ] float 
  9358 ;; Auto vars:     Size  Location     Type
  9359 ;;  f3              3   64[BANK0 ] float 
  9360 ;;  sign            1   68[BANK0 ] unsigned char 
  9361 ;;  exp             1   67[BANK0 ] unsigned char 
  9362 ;;  cntr            1   63[BANK0 ] unsigned char 
  9363 ;; Return value:  Size  Location     Type
  9364 ;;                  3   54[BANK0 ] float 
  9365 ;; Registers used:
  9366 ;;		wreg, status,2, status,0, cstack
  9367 ;; Tracked objects:
  9368 ;;		On entry : 0/0
  9369 ;;		On exit  : 0/0
  9370 ;;		Unchanged: 0/0
  9371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9372 ;;      Params:         0       6       0       0       0       0       0
  9373 ;;      Locals:         0       6       0       0       0       0       0
  9374 ;;      Temps:          0       3       0       0       0       0       0
  9375 ;;      Totals:         0      15       0       0       0       0       0
  9376 ;;Total ram usage:       15 bytes
  9377 ;; Hardware stack levels used:    1
  9378 ;; Hardware stack levels required when called:    8
  9379 ;; This function calls:
  9380 ;;		___ftpack
  9381 ;; This function is called by:
  9382 ;;		_main
  9383 ;; This function uses a non-reentrant model
  9384 ;;
  9385                           
  9386                           	psect	text28
  9387  004462                     __ptext28:
  9388                           	opt stack 0
  9389  004462                     ___ftdiv:
  9390                           	opt stack 22
  9391                           
  9392                           ; BSR set to: 0
  9393                           ;incstack = 0
  9394  004462  C098  F09C         	movff	___ftdiv@f1+2,??___ftdiv
  9395  004466  0100               	movlb	0	; () banked
  9396  004468  6B9D               	clrf	(??___ftdiv+1)& (0+255),b
  9397  00446A  6B9E               	clrf	(??___ftdiv+2)& (0+255),b
  9398  00446C  0100               	movlb	0	; () banked
  9399  00446E  3597               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  9400  004470  0100               	movlb	0	; () banked
  9401  004472  379C               	rlcf	??___ftdiv& (0+255),f,b
  9402  004474  E301               	bnc	u10591
  9403  004476  819D               	bsf	(??___ftdiv+1)& (0+255),0,b
  9404  004478                     u10591:
  9405  004478  0100               	movlb	0	; () banked
  9406  00447A  519C               	movf	??___ftdiv& (0+255),w,b
  9407  00447C  0100               	movlb	0	; () banked
  9408  00447E  6FA3               	movwf	___ftdiv@exp& (0+255),b
  9409  004480  0100               	movlb	0	; () banked
  9410  004482  51A3               	movf	___ftdiv@exp& (0+255),w,b
  9411  004484  A4D8               	btfss	status,2,c
  9412  004486  D00A               	goto	l7099
  9413                           
  9414                           ; BSR set to: 0
  9415  004488  0E00               	movlw	0
  9416  00448A  0100               	movlb	0	; () banked
  9417  00448C  6F96               	movwf	?___ftdiv& (0+255),b
  9418  00448E  0E00               	movlw	0
  9419  004490  0100               	movlb	0	; () banked
  9420  004492  6F97               	movwf	(?___ftdiv+1)& (0+255),b
  9421  004494  0E00               	movlw	0
  9422  004496  0100               	movlb	0	; () banked
  9423  004498  6F98               	movwf	(?___ftdiv+2)& (0+255),b
  9424                           
  9425                           ; BSR set to: 0
  9426  00449A  0012               	return	
  9427  00449C                     l7099:
  9428                           
  9429                           ; BSR set to: 0
  9430  00449C  C09B  F09C         	movff	___ftdiv@f2+2,??___ftdiv
  9431  0044A0  0100               	movlb	0	; () banked
  9432  0044A2  6B9D               	clrf	(??___ftdiv+1)& (0+255),b
  9433  0044A4  6B9E               	clrf	(??___ftdiv+2)& (0+255),b
  9434  0044A6  0100               	movlb	0	; () banked
  9435  0044A8  359A               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  9436  0044AA  0100               	movlb	0	; () banked
  9437  0044AC  379C               	rlcf	??___ftdiv& (0+255),f,b
  9438  0044AE  E301               	bnc	u10611
  9439  0044B0  819D               	bsf	(??___ftdiv+1)& (0+255),0,b
  9440  0044B2                     u10611:
  9441  0044B2  0100               	movlb	0	; () banked
  9442  0044B4  519C               	movf	??___ftdiv& (0+255),w,b
  9443  0044B6  0100               	movlb	0	; () banked
  9444  0044B8  6FA4               	movwf	___ftdiv@sign& (0+255),b
  9445  0044BA  0100               	movlb	0	; () banked
  9446  0044BC  51A4               	movf	___ftdiv@sign& (0+255),w,b
  9447  0044BE  A4D8               	btfss	status,2,c
  9448  0044C0  D00A               	goto	l7105
  9449                           
  9450                           ; BSR set to: 0
  9451  0044C2  0E00               	movlw	0
  9452  0044C4  0100               	movlb	0	; () banked
  9453  0044C6  6F96               	movwf	?___ftdiv& (0+255),b
  9454  0044C8  0E00               	movlw	0
  9455  0044CA  0100               	movlb	0	; () banked
  9456  0044CC  6F97               	movwf	(?___ftdiv+1)& (0+255),b
  9457  0044CE  0E00               	movlw	0
  9458  0044D0  0100               	movlb	0	; () banked
  9459  0044D2  6F98               	movwf	(?___ftdiv+2)& (0+255),b
  9460                           
  9461                           ; BSR set to: 0
  9462  0044D4  0012               	return	
  9463  0044D6                     l7105:
  9464                           
  9465                           ; BSR set to: 0
  9466  0044D6  0E00               	movlw	0
  9467  0044D8  0100               	movlb	0	; () banked
  9468  0044DA  6FA0               	movwf	___ftdiv@f3& (0+255),b
  9469  0044DC  0E00               	movlw	0
  9470  0044DE  0100               	movlb	0	; () banked
  9471  0044E0  6FA1               	movwf	(___ftdiv@f3+1)& (0+255),b
  9472  0044E2  0E00               	movlw	0
  9473  0044E4  0100               	movlb	0	; () banked
  9474  0044E6  6FA2               	movwf	(___ftdiv@f3+2)& (0+255),b
  9475                           
  9476                           ; BSR set to: 0
  9477  0044E8  0100               	movlb	0	; () banked
  9478  0044EA  51A4               	movf	___ftdiv@sign& (0+255),w,b
  9479  0044EC  0F89               	addlw	137
  9480  0044EE  0100               	movlb	0	; () banked
  9481  0044F0  5FA3               	subwf	___ftdiv@exp& (0+255),f,b
  9482                           
  9483                           ; BSR set to: 0
  9484  0044F2  C098  F0A4         	movff	___ftdiv@f1+2,___ftdiv@sign
  9485                           
  9486                           ; BSR set to: 0
  9487  0044F6  0100               	movlb	0	; () banked
  9488  0044F8  519B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9489  0044FA  0100               	movlb	0	; () banked
  9490  0044FC  1BA4               	xorwf	___ftdiv@sign& (0+255),f,b
  9491                           
  9492                           ; BSR set to: 0
  9493  0044FE  0E80               	movlw	128
  9494  004500  0100               	movlb	0	; () banked
  9495  004502  17A4               	andwf	___ftdiv@sign& (0+255),f,b
  9496                           
  9497                           ; BSR set to: 0
  9498  004504  0100               	movlb	0	; () banked
  9499  004506  8F97               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  9500                           
  9501                           ; BSR set to: 0
  9502  004508  0EFF               	movlw	255
  9503  00450A  0100               	movlb	0	; () banked
  9504  00450C  1796               	andwf	___ftdiv@f1& (0+255),f,b
  9505  00450E  0EFF               	movlw	255
  9506  004510  0100               	movlb	0	; () banked
  9507  004512  1797               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  9508  004514  0E00               	movlw	0
  9509  004516  0100               	movlb	0	; () banked
  9510  004518  1798               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  9511                           
  9512                           ; BSR set to: 0
  9513  00451A  0100               	movlb	0	; () banked
  9514  00451C  8F9A               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  9515                           
  9516                           ; BSR set to: 0
  9517  00451E  0EFF               	movlw	255
  9518  004520  0100               	movlb	0	; () banked
  9519  004522  1799               	andwf	___ftdiv@f2& (0+255),f,b
  9520  004524  0EFF               	movlw	255
  9521  004526  0100               	movlb	0	; () banked
  9522  004528  179A               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  9523  00452A  0E00               	movlw	0
  9524  00452C  0100               	movlb	0	; () banked
  9525  00452E  179B               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  9526                           
  9527                           ; BSR set to: 0
  9528  004530  0E18               	movlw	24
  9529  004532  0100               	movlb	0	; () banked
  9530  004534  6F9F               	movwf	___ftdiv@cntr& (0+255),b
  9531  004536                     l7125:
  9532                           
  9533                           ; BSR set to: 0
  9534  004536  0100               	movlb	0	; () banked
  9535  004538  90D8               	bcf	status,0,c
  9536  00453A  37A0               	rlcf	___ftdiv@f3& (0+255),f,b
  9537  00453C  37A1               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  9538  00453E  37A2               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  9539                           
  9540                           ; BSR set to: 0
  9541  004540  0100               	movlb	0	; () banked
  9542  004542  5199               	movf	___ftdiv@f2& (0+255),w,b
  9543  004544  0100               	movlb	0	; () banked
  9544  004546  5D96               	subwf	___ftdiv@f1& (0+255),w,b
  9545  004548  0100               	movlb	0	; () banked
  9546  00454A  519A               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9547  00454C  0100               	movlb	0	; () banked
  9548  00454E  5997               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  9549  004550  0100               	movlb	0	; () banked
  9550  004552  519B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9551  004554  0100               	movlb	0	; () banked
  9552  004556  5998               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  9553  004558  A0D8               	btfss	status,0,c
  9554  00455A  D00E               	goto	l814
  9555                           
  9556                           ; BSR set to: 0
  9557  00455C  0100               	movlb	0	; () banked
  9558  00455E  5199               	movf	___ftdiv@f2& (0+255),w,b
  9559  004560  0100               	movlb	0	; () banked
  9560  004562  5F96               	subwf	___ftdiv@f1& (0+255),f,b
  9561  004564  0100               	movlb	0	; () banked
  9562  004566  519A               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9563  004568  0100               	movlb	0	; () banked
  9564  00456A  5B97               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  9565  00456C  0100               	movlb	0	; () banked
  9566  00456E  519B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9567  004570  0100               	movlb	0	; () banked
  9568  004572  5B98               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  9569                           
  9570                           ; BSR set to: 0
  9571  004574  0100               	movlb	0	; () banked
  9572  004576  81A0               	bsf	___ftdiv@f3& (0+255),0,b
  9573  004578                     l814:
  9574                           
  9575                           ; BSR set to: 0
  9576  004578  0100               	movlb	0	; () banked
  9577  00457A  90D8               	bcf	status,0,c
  9578  00457C  3796               	rlcf	___ftdiv@f1& (0+255),f,b
  9579  00457E  3797               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  9580  004580  3798               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  9581                           
  9582                           ; BSR set to: 0
  9583  004582  0100               	movlb	0	; () banked
  9584  004584  2F9F               	decfsz	___ftdiv@cntr& (0+255),f,b
  9585  004586  D7D7               	goto	l7125
  9586                           
  9587                           ; BSR set to: 0
  9588                           
  9589                           ; BSR set to: 0
  9590  004588  C0A0  F08E         	movff	___ftdiv@f3,___ftpack@arg
  9591  00458C  C0A1  F08F         	movff	___ftdiv@f3+1,___ftpack@arg+1
  9592  004590  C0A2  F090         	movff	___ftdiv@f3+2,___ftpack@arg+2
  9593  004594  C0A3  F091         	movff	___ftdiv@exp,___ftpack@exp
  9594  004598  C0A4  F092         	movff	___ftdiv@sign,___ftpack@sign
  9595  00459C  ECA6  F024         	call	___ftpack	;wreg free
  9596  0045A0  C08E  F096         	movff	?___ftpack,?___ftdiv
  9597  0045A4  C08F  F097         	movff	?___ftpack+1,?___ftdiv+1
  9598  0045A8  C090  F098         	movff	?___ftpack+2,?___ftdiv+2
  9599  0045AC  0012               	return	
  9600  0045AE                     __end_of___ftdiv:
  9601                           	opt stack 0
  9602                           tosu	equ	0xFFF
  9603                           tosh	equ	0xFFE
  9604                           tosl	equ	0xFFD
  9605                           pclath	equ	0xFFA
  9606                           tblptru	equ	0xFF8
  9607                           tblptrh	equ	0xFF7
  9608                           tblptrl	equ	0xFF6
  9609                           tablat	equ	0xFF5
  9610                           prodh	equ	0xFF4
  9611                           prodl	equ	0xFF3
  9612                           intcon	equ	0xFF2
  9613                           postinc0	equ	0xFEE
  9614                           wreg	equ	0xFE8
  9615                           indf2	equ	0xFDF
  9616                           postinc2	equ	0xFDE
  9617                           postdec2	equ	0xFDD
  9618                           fsr2h	equ	0xFDA
  9619                           fsr2l	equ	0xFD9
  9620                           status	equ	0xFD8
  9621                           
  9622 ;; *************** function ___ftpack *****************
  9623 ;; Defined at:
  9624 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  9625 ;; Parameters:    Size  Location     Type
  9626 ;;  arg             3   46[BANK0 ] unsigned um
  9627 ;;  exp             1   49[BANK0 ] unsigned char 
  9628 ;;  sign            1   50[BANK0 ] unsigned char 
  9629 ;; Auto vars:     Size  Location     Type
  9630 ;;		None
  9631 ;; Return value:  Size  Location     Type
  9632 ;;                  3   46[BANK0 ] float 
  9633 ;; Registers used:
  9634 ;;		wreg, status,2, status,0
  9635 ;; Tracked objects:
  9636 ;;		On entry : 0/0
  9637 ;;		On exit  : 0/0
  9638 ;;		Unchanged: 0/0
  9639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9640 ;;      Params:         0       5       0       0       0       0       0
  9641 ;;      Locals:         0       0       0       0       0       0       0
  9642 ;;      Temps:          0       3       0       0       0       0       0
  9643 ;;      Totals:         0       8       0       0       0       0       0
  9644 ;;Total ram usage:        8 bytes
  9645 ;; Hardware stack levels used:    1
  9646 ;; Hardware stack levels required when called:    7
  9647 ;; This function calls:
  9648 ;;		Nothing
  9649 ;; This function is called by:
  9650 ;;		___ftadd
  9651 ;;		___ftdiv
  9652 ;;		___ftmul
  9653 ;;		___lltoft
  9654 ;; This function uses a non-reentrant model
  9655 ;;
  9656                           
  9657                           	psect	text29
  9658  00494C                     __ptext29:
  9659                           	opt stack 0
  9660  00494C                     ___ftpack:
  9661                           	opt stack 19
  9662                           
  9663                           ;incstack = 0
  9664  00494C  0100               	movlb	0	; () banked
  9665  00494E  5191               	movf	___ftpack@exp& (0+255),w,b
  9666  004950  0100               	movlb	0	; () banked
  9667  004952  B4D8               	btfsc	status,2,c
  9668  004954  D008               	goto	l5903
  9669                           
  9670                           ; BSR set to: 0
  9671  004956  0100               	movlb	0	; () banked
  9672  004958  518E               	movf	___ftpack@arg& (0+255),w,b
  9673  00495A  0100               	movlb	0	; () banked
  9674  00495C  118F               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  9675  00495E  0100               	movlb	0	; () banked
  9676  004960  1190               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  9677  004962  A4D8               	btfss	status,2,c
  9678  004964  D011               	goto	l5909
  9679  004966                     l5903:
  9680                           
  9681                           ; BSR set to: 0
  9682  004966  0E00               	movlw	0
  9683  004968  0100               	movlb	0	; () banked
  9684  00496A  6F8E               	movwf	?___ftpack& (0+255),b
  9685  00496C  0E00               	movlw	0
  9686  00496E  0100               	movlb	0	; () banked
  9687  004970  6F8F               	movwf	(?___ftpack+1)& (0+255),b
  9688  004972  0E00               	movlw	0
  9689  004974  0100               	movlb	0	; () banked
  9690  004976  6F90               	movwf	(?___ftpack+2)& (0+255),b
  9691                           
  9692                           ; BSR set to: 0
  9693  004978  0012               	return	
  9694  00497A                     l5907:
  9695                           
  9696                           ; BSR set to: 0
  9697  00497A  0100               	movlb	0	; () banked
  9698  00497C  2B91               	incf	___ftpack@exp& (0+255),f,b
  9699  00497E  0100               	movlb	0	; () banked
  9700  004980  90D8               	bcf	status,0,c
  9701  004982  3390               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9702  004984  338F               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9703  004986  338E               	rrcf	___ftpack@arg& (0+255),f,b
  9704  004988                     l5909:
  9705                           
  9706                           ; BSR set to: 0
  9707  004988  0E00               	movlw	0
  9708  00498A  0100               	movlb	0	; () banked
  9709  00498C  158E               	andwf	___ftpack@arg& (0+255),w,b
  9710  00498E  0100               	movlb	0	; () banked
  9711  004990  6F93               	movwf	??___ftpack& (0+255),b
  9712  004992  0E00               	movlw	0
  9713  004994  0100               	movlb	0	; () banked
  9714  004996  158F               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9715  004998  0100               	movlb	0	; () banked
  9716  00499A  6F94               	movwf	(??___ftpack+1)& (0+255),b
  9717  00499C  0EFE               	movlw	254
  9718  00499E  0100               	movlb	0	; () banked
  9719  0049A0  1590               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9720  0049A2  0100               	movlb	0	; () banked
  9721  0049A4  6F95               	movwf	(??___ftpack+2)& (0+255),b
  9722  0049A6  0100               	movlb	0	; () banked
  9723  0049A8  5193               	movf	??___ftpack& (0+255),w,b
  9724  0049AA  0100               	movlb	0	; () banked
  9725  0049AC  1194               	iorwf	(??___ftpack+1)& (0+255),w,b
  9726  0049AE  0100               	movlb	0	; () banked
  9727  0049B0  1195               	iorwf	(??___ftpack+2)& (0+255),w,b
  9728  0049B2  B4D8               	btfsc	status,2,c
  9729  0049B4  D011               	goto	l5915
  9730  0049B6  D7E1               	goto	l5907
  9731  0049B8                     l5911:
  9732                           
  9733                           ; BSR set to: 0
  9734  0049B8  0100               	movlb	0	; () banked
  9735  0049BA  2B91               	incf	___ftpack@exp& (0+255),f,b
  9736                           
  9737                           ; BSR set to: 0
  9738  0049BC  0E01               	movlw	1
  9739  0049BE  0100               	movlb	0	; () banked
  9740  0049C0  278E               	addwf	___ftpack@arg& (0+255),f,b
  9741  0049C2  0E00               	movlw	0
  9742  0049C4  0100               	movlb	0	; () banked
  9743  0049C6  238F               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  9744  0049C8  0E00               	movlw	0
  9745  0049CA  0100               	movlb	0	; () banked
  9746  0049CC  2390               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  9747  0049CE  0100               	movlb	0	; () banked
  9748  0049D0  90D8               	bcf	status,0,c
  9749  0049D2  3390               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9750  0049D4  338F               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9751  0049D6  338E               	rrcf	___ftpack@arg& (0+255),f,b
  9752  0049D8                     l5915:
  9753                           
  9754                           ; BSR set to: 0
  9755  0049D8  0E00               	movlw	0
  9756  0049DA  0100               	movlb	0	; () banked
  9757  0049DC  158E               	andwf	___ftpack@arg& (0+255),w,b
  9758  0049DE  0100               	movlb	0	; () banked
  9759  0049E0  6F93               	movwf	??___ftpack& (0+255),b
  9760  0049E2  0E00               	movlw	0
  9761  0049E4  0100               	movlb	0	; () banked
  9762  0049E6  158F               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9763  0049E8  0100               	movlb	0	; () banked
  9764  0049EA  6F94               	movwf	(??___ftpack+1)& (0+255),b
  9765  0049EC  0EFF               	movlw	255
  9766  0049EE  0100               	movlb	0	; () banked
  9767  0049F0  1590               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9768  0049F2  0100               	movlb	0	; () banked
  9769  0049F4  6F95               	movwf	(??___ftpack+2)& (0+255),b
  9770  0049F6  0100               	movlb	0	; () banked
  9771  0049F8  5193               	movf	??___ftpack& (0+255),w,b
  9772  0049FA  0100               	movlb	0	; () banked
  9773  0049FC  1194               	iorwf	(??___ftpack+1)& (0+255),w,b
  9774  0049FE  0100               	movlb	0	; () banked
  9775  004A00  1195               	iorwf	(??___ftpack+2)& (0+255),w,b
  9776  004A02  B4D8               	btfsc	status,2,c
  9777  004A04  D008               	goto	l5919
  9778  004A06  D7D8               	goto	l5911
  9779  004A08                     l5917:
  9780                           
  9781                           ; BSR set to: 0
  9782  004A08  0100               	movlb	0	; () banked
  9783  004A0A  0791               	decf	___ftpack@exp& (0+255),f,b
  9784  004A0C  0100               	movlb	0	; () banked
  9785  004A0E  90D8               	bcf	status,0,c
  9786  004A10  378E               	rlcf	___ftpack@arg& (0+255),f,b
  9787  004A12  378F               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  9788  004A14  3790               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  9789  004A16                     l5919:
  9790                           
  9791                           ; BSR set to: 0
  9792  004A16  0100               	movlb	0	; () banked
  9793  004A18  BF8F               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  9794  004A1A  D004               	goto	l756
  9795                           
  9796                           ; BSR set to: 0
  9797  004A1C  0E02               	movlw	2
  9798  004A1E  0100               	movlb	0	; () banked
  9799  004A20  6191               	cpfslt	___ftpack@exp& (0+255),b
  9800  004A22  D7F2               	goto	l5917
  9801  004A24                     l756:
  9802                           
  9803                           ; BSR set to: 0
  9804  004A24  0100               	movlb	0	; () banked
  9805  004A26  B191               	btfsc	___ftpack@exp& (0+255),0,b
  9806  004A28  D002               	goto	l5925
  9807                           
  9808                           ; BSR set to: 0
  9809  004A2A  0100               	movlb	0	; () banked
  9810  004A2C  9F8F               	bcf	(___ftpack@arg+1)& (0+255),7,b
  9811  004A2E                     l5925:
  9812                           
  9813                           ; BSR set to: 0
  9814  004A2E  0100               	movlb	0	; () banked
  9815  004A30  90D8               	bcf	status,0,c
  9816  004A32  3391               	rrcf	___ftpack@exp& (0+255),f,b
  9817  004A34  0100               	movlb	0	; () banked
  9818  004A36  5191               	movf	___ftpack@exp& (0+255),w,b
  9819  004A38  0100               	movlb	0	; () banked
  9820  004A3A  1390               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  9821                           
  9822                           ; BSR set to: 0
  9823  004A3C  0100               	movlb	0	; () banked
  9824  004A3E  5192               	movf	___ftpack@sign& (0+255),w,b
  9825  004A40  0100               	movlb	0	; () banked
  9826  004A42  B4D8               	btfsc	status,2,c
  9827  004A44  D002               	goto	l5931
  9828                           
  9829                           ; BSR set to: 0
  9830  004A46  0100               	movlb	0	; () banked
  9831  004A48  8F90               	bsf	(___ftpack@arg+2)& (0+255),7,b
  9832  004A4A                     l5931:
  9833                           
  9834                           ; BSR set to: 0
  9835  004A4A  C08E  F08E         	movff	___ftpack@arg,?___ftpack
  9836  004A4E  C08F  F08F         	movff	___ftpack@arg+1,?___ftpack+1
  9837  004A52  C090  F090         	movff	___ftpack@arg+2,?___ftpack+2
  9838  004A56  0012               	return	
  9839  004A58                     __end_of___ftpack:
  9840                           	opt stack 0
  9841                           tosu	equ	0xFFF
  9842                           tosh	equ	0xFFE
  9843                           tosl	equ	0xFFD
  9844                           pclath	equ	0xFFA
  9845                           tblptru	equ	0xFF8
  9846                           tblptrh	equ	0xFF7
  9847                           tblptrl	equ	0xFF6
  9848                           tablat	equ	0xFF5
  9849                           prodh	equ	0xFF4
  9850                           prodl	equ	0xFF3
  9851                           intcon	equ	0xFF2
  9852                           postinc0	equ	0xFEE
  9853                           wreg	equ	0xFE8
  9854                           indf2	equ	0xFDF
  9855                           postinc2	equ	0xFDE
  9856                           postdec2	equ	0xFDD
  9857                           fsr2h	equ	0xFDA
  9858                           fsr2l	equ	0xFD9
  9859                           status	equ	0xFD8
  9860                           
  9861 ;; *************** function _SYSTEM_Initialize *****************
  9862 ;; Defined at:
  9863 ;;		line 111 in file "mcc_generated_files/mcc.c"
  9864 ;; Parameters:    Size  Location     Type
  9865 ;;		None
  9866 ;; Auto vars:     Size  Location     Type
  9867 ;;		None
  9868 ;; Return value:  Size  Location     Type
  9869 ;;                  1    wreg      void 
  9870 ;; Registers used:
  9871 ;;		wreg, status,2, status,0, cstack
  9872 ;; Tracked objects:
  9873 ;;		On entry : 0/0
  9874 ;;		On exit  : 0/0
  9875 ;;		Unchanged: 0/0
  9876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9877 ;;      Params:         0       0       0       0       0       0       0
  9878 ;;      Locals:         0       0       0       0       0       0       0
  9879 ;;      Temps:          0       0       0       0       0       0       0
  9880 ;;      Totals:         0       0       0       0       0       0       0
  9881 ;;Total ram usage:        0 bytes
  9882 ;; Hardware stack levels used:    1
  9883 ;; Hardware stack levels required when called:    9
  9884 ;; This function calls:
  9885 ;;		_EUSART1_Initialize
  9886 ;;		_EXT_INT_Initialize
  9887 ;;		_INTERRUPT_Initialize
  9888 ;;		_OSCILLATOR_Initialize
  9889 ;;		_PIN_MANAGER_Initialize
  9890 ;;		_TMR0_Initialize
  9891 ;; This function is called by:
  9892 ;;		_main
  9893 ;; This function uses a non-reentrant model
  9894 ;;
  9895                           
  9896                           	psect	text30
  9897  005A86                     __ptext30:
  9898                           	opt stack 0
  9899  005A86                     _SYSTEM_Initialize:
  9900                           	opt stack 21
  9901                           
  9902                           ;mcc.c: 114: INTERRUPT_Initialize();
  9903                           
  9904                           ; BSR set to: 0
  9905                           ;incstack = 0
  9906  005A86  EC9B  F02D         	call	_INTERRUPT_Initialize	;wreg free
  9907                           
  9908                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  9909  005A8A  EC7F  F02C         	call	_PIN_MANAGER_Initialize	;wreg free
  9910                           
  9911                           ;mcc.c: 116: OSCILLATOR_Initialize();
  9912  005A8E  EC73  F02D         	call	_OSCILLATOR_Initialize	;wreg free
  9913                           
  9914                           ;mcc.c: 117: EXT_INT_Initialize();
  9915  005A92  ECAF  F02C         	call	_EXT_INT_Initialize	;wreg free
  9916                           
  9917                           ;mcc.c: 118: TMR0_Initialize();
  9918  005A96  ECB3  F02B         	call	_TMR0_Initialize	;wreg free
  9919                           
  9920                           ;mcc.c: 119: EUSART1_Initialize();
  9921  005A9A  EC50  F02D         	call	_EUSART1_Initialize	;wreg free
  9922  005A9E  0012               	return		;funcret
  9923  005AA0                     __end_of_SYSTEM_Initialize:
  9924                           	opt stack 0
  9925                           tosu	equ	0xFFF
  9926                           tosh	equ	0xFFE
  9927                           tosl	equ	0xFFD
  9928                           pclath	equ	0xFFA
  9929                           tblptru	equ	0xFF8
  9930                           tblptrh	equ	0xFF7
  9931                           tblptrl	equ	0xFF6
  9932                           tablat	equ	0xFF5
  9933                           prodh	equ	0xFF4
  9934                           prodl	equ	0xFF3
  9935                           intcon	equ	0xFF2
  9936                           postinc0	equ	0xFEE
  9937                           wreg	equ	0xFE8
  9938                           indf2	equ	0xFDF
  9939                           postinc2	equ	0xFDE
  9940                           postdec2	equ	0xFDD
  9941                           fsr2h	equ	0xFDA
  9942                           fsr2l	equ	0xFD9
  9943                           status	equ	0xFD8
  9944                           
  9945 ;; *************** function _TMR0_Initialize *****************
  9946 ;; Defined at:
  9947 ;;		line 16 in file "mcc_generated_files/tmr0.c"
  9948 ;; Parameters:    Size  Location     Type
  9949 ;;		None
  9950 ;; Auto vars:     Size  Location     Type
  9951 ;;		None
  9952 ;; Return value:  Size  Location     Type
  9953 ;;                  1    wreg      void 
  9954 ;; Registers used:
  9955 ;;		wreg, status,2, status,0, cstack
  9956 ;; Tracked objects:
  9957 ;;		On entry : 0/0
  9958 ;;		On exit  : 0/0
  9959 ;;		Unchanged: 0/0
  9960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9961 ;;      Params:         0       0       0       0       0       0       0
  9962 ;;      Locals:         0       0       0       0       0       0       0
  9963 ;;      Temps:          0       2       0       0       0       0       0
  9964 ;;      Totals:         0       2       0       0       0       0       0
  9965 ;;Total ram usage:        2 bytes
  9966 ;; Hardware stack levels used:    1
  9967 ;; Hardware stack levels required when called:    8
  9968 ;; This function calls:
  9969 ;;		_TMR0_SetInterruptHandler
  9970 ;;		_TMR0_StartTimer
  9971 ;; This function is called by:
  9972 ;;		_SYSTEM_Initialize
  9973 ;; This function uses a non-reentrant model
  9974 ;;
  9975                           
  9976                           	psect	text31
  9977  005766                     __ptext31:
  9978                           	opt stack 0
  9979  005766                     _TMR0_Initialize:
  9980                           	opt stack 21
  9981                           
  9982                           ;tmr0.c: 21: T0CON = 0x11;
  9983                           
  9984                           ;incstack = 0
  9985  005766  0E11               	movlw	17
  9986  005768  6ED5               	movwf	4053,c	;volatile
  9987                           
  9988                           ;tmr0.c: 24: TMR0H = 0x15;
  9989  00576A  0E15               	movlw	21
  9990  00576C  6ED7               	movwf	4055,c	;volatile
  9991                           
  9992                           ;tmr0.c: 27: TMR0L = 0x9F;
  9993  00576E  0E9F               	movlw	159
  9994  005770  6ED6               	movwf	4054,c	;volatile
  9995                           
  9996                           ;tmr0.c: 30: timer0ReloadVal = (TMR0H << 8) | TMR0L;
  9997  005772  50D6               	movf	4054,w,c	;volatile
  9998  005774  CFD7 F090          	movff	4055,??_TMR0_Initialize	;volatile
  9999  005778  0100               	movlb	0	; () banked
 10000  00577A  6B91               	clrf	(??_TMR0_Initialize+1)& (0+255),b
 10001  00577C  C090  F091         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 10002  005780  0100               	movlb	0	; () banked
 10003  005782  6B90               	clrf	??_TMR0_Initialize& (0+255),b
 10004  005784  0100               	movlb	0	; () banked
 10005  005786  1190               	iorwf	??_TMR0_Initialize& (0+255),w,b
 10006  005788  6E5C               	movwf	_timer0ReloadVal,c	;volatile
 10007  00578A  0100               	movlb	0	; () banked
 10008  00578C  5191               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
 10009  00578E  6E5D               	movwf	_timer0ReloadVal+1,c	;volatile
 10010                           
 10011                           ; BSR set to: 0
 10012                           ;tmr0.c: 33: INTCONbits.TMR0IF = 0;
 10013  005790  94F2               	bcf	intcon,2,c	;volatile
 10014                           
 10015                           ; BSR set to: 0
 10016                           ;tmr0.c: 36: INTCONbits.TMR0IE = 1;
 10017  005792  8AF2               	bsf	intcon,5,c	;volatile
 10018                           
 10019                           ; BSR set to: 0
 10020                           ;tmr0.c: 39: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 10021  005794  0E4A               	movlw	low _TMR0_DefaultInterruptHandler
 10022  005796  0100               	movlb	0	; () banked
 10023  005798  6F8E               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
 10024  00579A  0E5A               	movlw	high _TMR0_DefaultInterruptHandler
 10025  00579C  0100               	movlb	0	; () banked
 10026  00579E  6F8F               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 10027  0057A0  EC80  F02D         	call	_TMR0_SetInterruptHandler	;wreg free
 10028                           
 10029                           ;tmr0.c: 42: TMR0_StartTimer();
 10030  0057A4  EC99  F02D         	call	_TMR0_StartTimer	;wreg free
 10031  0057A8  0012               	return		;funcret
 10032  0057AA                     __end_of_TMR0_Initialize:
 10033                           	opt stack 0
 10034                           tosu	equ	0xFFF
 10035                           tosh	equ	0xFFE
 10036                           tosl	equ	0xFFD
 10037                           pclath	equ	0xFFA
 10038                           tblptru	equ	0xFF8
 10039                           tblptrh	equ	0xFF7
 10040                           tblptrl	equ	0xFF6
 10041                           tablat	equ	0xFF5
 10042                           prodh	equ	0xFF4
 10043                           prodl	equ	0xFF3
 10044                           intcon	equ	0xFF2
 10045                           postinc0	equ	0xFEE
 10046                           wreg	equ	0xFE8
 10047                           indf2	equ	0xFDF
 10048                           postinc2	equ	0xFDE
 10049                           postdec2	equ	0xFDD
 10050                           fsr2h	equ	0xFDA
 10051                           fsr2l	equ	0xFD9
 10052                           status	equ	0xFD8
 10053                           
 10054 ;; *************** function _TMR0_StartTimer *****************
 10055 ;; Defined at:
 10056 ;;		line 45 in file "mcc_generated_files/tmr0.c"
 10057 ;; Parameters:    Size  Location     Type
 10058 ;;		None
 10059 ;; Auto vars:     Size  Location     Type
 10060 ;;		None
 10061 ;; Return value:  Size  Location     Type
 10062 ;;                  1    wreg      void 
 10063 ;; Registers used:
 10064 ;;		None
 10065 ;; Tracked objects:
 10066 ;;		On entry : 0/0
 10067 ;;		On exit  : 0/0
 10068 ;;		Unchanged: 0/0
 10069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10070 ;;      Params:         0       0       0       0       0       0       0
 10071 ;;      Locals:         0       0       0       0       0       0       0
 10072 ;;      Temps:          0       0       0       0       0       0       0
 10073 ;;      Totals:         0       0       0       0       0       0       0
 10074 ;;Total ram usage:        0 bytes
 10075 ;; Hardware stack levels used:    1
 10076 ;; Hardware stack levels required when called:    7
 10077 ;; This function calls:
 10078 ;;		Nothing
 10079 ;; This function is called by:
 10080 ;;		_TMR0_Initialize
 10081 ;; This function uses a non-reentrant model
 10082 ;;
 10083                           
 10084                           	psect	text32
 10085  005B32                     __ptext32:
 10086                           	opt stack 0
 10087  005B32                     _TMR0_StartTimer:
 10088                           	opt stack 21
 10089                           
 10090                           ;tmr0.c: 48: T0CONbits.TMR0ON = 1;
 10091                           
 10092                           ;incstack = 0
 10093  005B32  8ED5               	bsf	4053,7,c	;volatile
 10094  005B34  0012               	return		;funcret
 10095  005B36                     __end_of_TMR0_StartTimer:
 10096                           	opt stack 0
 10097                           tosu	equ	0xFFF
 10098                           tosh	equ	0xFFE
 10099                           tosl	equ	0xFFD
 10100                           pclath	equ	0xFFA
 10101                           tblptru	equ	0xFF8
 10102                           tblptrh	equ	0xFF7
 10103                           tblptrl	equ	0xFF6
 10104                           tablat	equ	0xFF5
 10105                           prodh	equ	0xFF4
 10106                           prodl	equ	0xFF3
 10107                           intcon	equ	0xFF2
 10108                           postinc0	equ	0xFEE
 10109                           wreg	equ	0xFE8
 10110                           indf2	equ	0xFDF
 10111                           postinc2	equ	0xFDE
 10112                           postdec2	equ	0xFDD
 10113                           fsr2h	equ	0xFDA
 10114                           fsr2l	equ	0xFD9
 10115                           status	equ	0xFD8
 10116                           
 10117 ;; *************** function _TMR0_SetInterruptHandler *****************
 10118 ;; Defined at:
 10119 ;;		line 104 in file "mcc_generated_files/tmr0.c"
 10120 ;; Parameters:    Size  Location     Type
 10121 ;;  InterruptHan    2   46[BANK0 ] PTR void 
 10122 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 10123 ;; Auto vars:     Size  Location     Type
 10124 ;;		None
 10125 ;; Return value:  Size  Location     Type
 10126 ;;                  1    wreg      void 
 10127 ;; Registers used:
 10128 ;;		wreg, status,2, status,0
 10129 ;; Tracked objects:
 10130 ;;		On entry : 0/0
 10131 ;;		On exit  : 0/0
 10132 ;;		Unchanged: 0/0
 10133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10134 ;;      Params:         0       2       0       0       0       0       0
 10135 ;;      Locals:         0       0       0       0       0       0       0
 10136 ;;      Temps:          0       0       0       0       0       0       0
 10137 ;;      Totals:         0       2       0       0       0       0       0
 10138 ;;Total ram usage:        2 bytes
 10139 ;; Hardware stack levels used:    1
 10140 ;; Hardware stack levels required when called:    7
 10141 ;; This function calls:
 10142 ;;		Nothing
 10143 ;; This function is called by:
 10144 ;;		_TMR0_Initialize
 10145 ;; This function uses a non-reentrant model
 10146 ;;
 10147                           
 10148                           	psect	text33
 10149  005B00                     __ptext33:
 10150                           	opt stack 0
 10151  005B00                     _TMR0_SetInterruptHandler:
 10152                           	opt stack 21
 10153                           
 10154                           ;tmr0.c: 105: TMR0_InterruptHandler = InterruptHandler;
 10155                           
 10156                           ;incstack = 0
 10157  005B00  C08E  F0CE         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 10158  005B04  C08F  F0CF         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 10159  005B08  0012               	return		;funcret
 10160  005B0A                     __end_of_TMR0_SetInterruptHandler:
 10161                           	opt stack 0
 10162                           tosu	equ	0xFFF
 10163                           tosh	equ	0xFFE
 10164                           tosl	equ	0xFFD
 10165                           pclath	equ	0xFFA
 10166                           tblptru	equ	0xFF8
 10167                           tblptrh	equ	0xFF7
 10168                           tblptrl	equ	0xFF6
 10169                           tablat	equ	0xFF5
 10170                           prodh	equ	0xFF4
 10171                           prodl	equ	0xFF3
 10172                           intcon	equ	0xFF2
 10173                           postinc0	equ	0xFEE
 10174                           wreg	equ	0xFE8
 10175                           indf2	equ	0xFDF
 10176                           postinc2	equ	0xFDE
 10177                           postdec2	equ	0xFDD
 10178                           fsr2h	equ	0xFDA
 10179                           fsr2l	equ	0xFD9
 10180                           status	equ	0xFD8
 10181                           
 10182 ;; *************** function _PIN_MANAGER_Initialize *****************
 10183 ;; Defined at:
 10184 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
 10185 ;; Parameters:    Size  Location     Type
 10186 ;;		None
 10187 ;; Auto vars:     Size  Location     Type
 10188 ;;		None
 10189 ;; Return value:  Size  Location     Type
 10190 ;;                  1    wreg      void 
 10191 ;; Registers used:
 10192 ;;		wreg, status,2
 10193 ;; Tracked objects:
 10194 ;;		On entry : 0/0
 10195 ;;		On exit  : 0/0
 10196 ;;		Unchanged: 0/0
 10197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10198 ;;      Params:         0       0       0       0       0       0       0
 10199 ;;      Locals:         0       0       0       0       0       0       0
 10200 ;;      Temps:          0       0       0       0       0       0       0
 10201 ;;      Totals:         0       0       0       0       0       0       0
 10202 ;;Total ram usage:        0 bytes
 10203 ;; Hardware stack levels used:    1
 10204 ;; Hardware stack levels required when called:    7
 10205 ;; This function calls:
 10206 ;;		Nothing
 10207 ;; This function is called by:
 10208 ;;		_SYSTEM_Initialize
 10209 ;; This function uses a non-reentrant model
 10210 ;;
 10211                           
 10212                           	psect	text34
 10213  0058FE                     __ptext34:
 10214                           	opt stack 0
 10215  0058FE                     _PIN_MANAGER_Initialize:
 10216                           	opt stack 22
 10217                           
 10218                           ;pin_manager.c: 56: LATA = 0x00;
 10219                           
 10220                           ;incstack = 0
 10221  0058FE  0E00               	movlw	0
 10222  005900  6E89               	movwf	3977,c	;volatile
 10223                           
 10224                           ;pin_manager.c: 57: LATB = 0x3C;
 10225  005902  0E3C               	movlw	60
 10226  005904  6E8A               	movwf	3978,c	;volatile
 10227                           
 10228                           ;pin_manager.c: 58: LATC = 0x1F;
 10229  005906  0E1F               	movlw	31
 10230  005908  6E8B               	movwf	3979,c	;volatile
 10231                           
 10232                           ;pin_manager.c: 63: TRISA = 0xC0;
 10233  00590A  0EC0               	movlw	192
 10234  00590C  6E92               	movwf	3986,c	;volatile
 10235                           
 10236                           ;pin_manager.c: 64: TRISB = 0xC3;
 10237  00590E  0EC3               	movlw	195
 10238  005910  6E93               	movwf	3987,c	;volatile
 10239                           
 10240                           ;pin_manager.c: 65: TRISC = 0x20;
 10241  005912  0E20               	movlw	32
 10242  005914  6E94               	movwf	3988,c	;volatile
 10243                           
 10244                           ;pin_manager.c: 70: ANSELC = 0x20;
 10245  005916  0E20               	movlw	32
 10246  005918  010F               	movlb	15	; () banked
 10247  00591A  6F3A               	movwf	58,b	;volatile
 10248                           
 10249                           ;pin_manager.c: 71: ANSELB = 0x00;
 10250  00591C  0E00               	movlw	0
 10251  00591E  010F               	movlb	15	; () banked
 10252  005920  6F39               	movwf	57,b	;volatile
 10253                           
 10254                           ;pin_manager.c: 72: ANSELA = 0x00;
 10255  005922  0E00               	movlw	0
 10256  005924  010F               	movlb	15	; () banked
 10257  005926  6F38               	movwf	56,b	;volatile
 10258                           
 10259                           ; BSR set to: 15
 10260                           ;pin_manager.c: 77: WPUB = 0xFF;
 10261  005928  6861               	setf	3937,c	;volatile
 10262                           
 10263                           ; BSR set to: 15
 10264                           ;pin_manager.c: 78: INTCON2bits.nRBPU = 0;
 10265  00592A  9EF1               	bcf	intcon2,7,c	;volatile
 10266                           
 10267                           ; BSR set to: 15
 10268  00592C  0012               	return		;funcret
 10269  00592E                     __end_of_PIN_MANAGER_Initialize:
 10270                           	opt stack 0
 10271                           tosu	equ	0xFFF
 10272                           tosh	equ	0xFFE
 10273                           tosl	equ	0xFFD
 10274                           pclath	equ	0xFFA
 10275                           tblptru	equ	0xFF8
 10276                           tblptrh	equ	0xFF7
 10277                           tblptrl	equ	0xFF6
 10278                           tablat	equ	0xFF5
 10279                           prodh	equ	0xFF4
 10280                           prodl	equ	0xFF3
 10281                           intcon	equ	0xFF2
 10282                           intcon2	equ	0xFF1
 10283                           postinc0	equ	0xFEE
 10284                           wreg	equ	0xFE8
 10285                           indf2	equ	0xFDF
 10286                           postinc2	equ	0xFDE
 10287                           postdec2	equ	0xFDD
 10288                           fsr2h	equ	0xFDA
 10289                           fsr2l	equ	0xFD9
 10290                           status	equ	0xFD8
 10291                           
 10292 ;; *************** function _OSCILLATOR_Initialize *****************
 10293 ;; Defined at:
 10294 ;;		line 122 in file "mcc_generated_files/mcc.c"
 10295 ;; Parameters:    Size  Location     Type
 10296 ;;		None
 10297 ;; Auto vars:     Size  Location     Type
 10298 ;;		None
 10299 ;; Return value:  Size  Location     Type
 10300 ;;                  1    wreg      void 
 10301 ;; Registers used:
 10302 ;;		wreg, status,2
 10303 ;; Tracked objects:
 10304 ;;		On entry : 0/0
 10305 ;;		On exit  : 0/0
 10306 ;;		Unchanged: 0/0
 10307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10308 ;;      Params:         0       0       0       0       0       0       0
 10309 ;;      Locals:         0       0       0       0       0       0       0
 10310 ;;      Temps:          0       0       0       0       0       0       0
 10311 ;;      Totals:         0       0       0       0       0       0       0
 10312 ;;Total ram usage:        0 bytes
 10313 ;; Hardware stack levels used:    1
 10314 ;; Hardware stack levels required when called:    7
 10315 ;; This function calls:
 10316 ;;		Nothing
 10317 ;; This function is called by:
 10318 ;;		_SYSTEM_Initialize
 10319 ;; This function uses a non-reentrant model
 10320 ;;
 10321                           
 10322                           	psect	text35
 10323  005AE6                     __ptext35:
 10324                           	opt stack 0
 10325  005AE6                     _OSCILLATOR_Initialize:
 10326                           	opt stack 22
 10327                           
 10328                           ;mcc.c: 125: OSCCON = 0x70;
 10329                           
 10330                           ; BSR set to: 15
 10331                           ;incstack = 0
 10332  005AE6  0E70               	movlw	112
 10333  005AE8  6ED3               	movwf	4051,c	;volatile
 10334                           
 10335                           ;mcc.c: 127: OSCCON2 = 0x04;
 10336  005AEA  0E04               	movlw	4
 10337  005AEC  6ED2               	movwf	4050,c	;volatile
 10338                           
 10339                           ;mcc.c: 129: OSCTUNE = 0x00;
 10340  005AEE  0E00               	movlw	0
 10341  005AF0  6E9B               	movwf	3995,c	;volatile
 10342  005AF2  0012               	return		;funcret
 10343  005AF4                     __end_of_OSCILLATOR_Initialize:
 10344                           	opt stack 0
 10345                           tosu	equ	0xFFF
 10346                           tosh	equ	0xFFE
 10347                           tosl	equ	0xFFD
 10348                           pclath	equ	0xFFA
 10349                           tblptru	equ	0xFF8
 10350                           tblptrh	equ	0xFF7
 10351                           tblptrl	equ	0xFF6
 10352                           tablat	equ	0xFF5
 10353                           prodh	equ	0xFF4
 10354                           prodl	equ	0xFF3
 10355                           intcon	equ	0xFF2
 10356                           intcon2	equ	0xFF1
 10357                           postinc0	equ	0xFEE
 10358                           wreg	equ	0xFE8
 10359                           indf2	equ	0xFDF
 10360                           postinc2	equ	0xFDE
 10361                           postdec2	equ	0xFDD
 10362                           fsr2h	equ	0xFDA
 10363                           fsr2l	equ	0xFD9
 10364                           status	equ	0xFD8
 10365                           
 10366 ;; *************** function _INTERRUPT_Initialize *****************
 10367 ;; Defined at:
 10368 ;;		line 4 in file "mcc_generated_files/interrupt_manager.c"
 10369 ;; Parameters:    Size  Location     Type
 10370 ;;		None
 10371 ;; Auto vars:     Size  Location     Type
 10372 ;;		None
 10373 ;; Return value:  Size  Location     Type
 10374 ;;                  1    wreg      void 
 10375 ;; Registers used:
 10376 ;;		None
 10377 ;; Tracked objects:
 10378 ;;		On entry : 0/0
 10379 ;;		On exit  : 0/0
 10380 ;;		Unchanged: 0/0
 10381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10382 ;;      Params:         0       0       0       0       0       0       0
 10383 ;;      Locals:         0       0       0       0       0       0       0
 10384 ;;      Temps:          0       0       0       0       0       0       0
 10385 ;;      Totals:         0       0       0       0       0       0       0
 10386 ;;Total ram usage:        0 bytes
 10387 ;; Hardware stack levels used:    1
 10388 ;; Hardware stack levels required when called:    7
 10389 ;; This function calls:
 10390 ;;		Nothing
 10391 ;; This function is called by:
 10392 ;;		_SYSTEM_Initialize
 10393 ;; This function uses a non-reentrant model
 10394 ;;
 10395                           
 10396                           	psect	text36
 10397  005B36                     __ptext36:
 10398                           	opt stack 0
 10399  005B36                     _INTERRUPT_Initialize:
 10400                           	opt stack 22
 10401                           
 10402                           ;interrupt_manager.c: 7: RCONbits.IPEN = 0;
 10403                           
 10404                           ;incstack = 0
 10405  005B36  9ED0               	bcf	4048,7,c	;volatile
 10406  005B38  0012               	return		;funcret
 10407  005B3A                     __end_of_INTERRUPT_Initialize:
 10408                           	opt stack 0
 10409                           tosu	equ	0xFFF
 10410                           tosh	equ	0xFFE
 10411                           tosl	equ	0xFFD
 10412                           pclath	equ	0xFFA
 10413                           tblptru	equ	0xFF8
 10414                           tblptrh	equ	0xFF7
 10415                           tblptrl	equ	0xFF6
 10416                           tablat	equ	0xFF5
 10417                           prodh	equ	0xFF4
 10418                           prodl	equ	0xFF3
 10419                           intcon	equ	0xFF2
 10420                           intcon2	equ	0xFF1
 10421                           postinc0	equ	0xFEE
 10422                           wreg	equ	0xFE8
 10423                           indf2	equ	0xFDF
 10424                           postinc2	equ	0xFDE
 10425                           postdec2	equ	0xFDD
 10426                           fsr2h	equ	0xFDA
 10427                           fsr2l	equ	0xFD9
 10428                           status	equ	0xFD8
 10429                           
 10430 ;; *************** function _EXT_INT_Initialize *****************
 10431 ;; Defined at:
 10432 ;;		line 146 in file "mcc_generated_files/ext_int.c"
 10433 ;; Parameters:    Size  Location     Type
 10434 ;;		None
 10435 ;; Auto vars:     Size  Location     Type
 10436 ;;		None
 10437 ;; Return value:  Size  Location     Type
 10438 ;;                  1    wreg      void 
 10439 ;; Registers used:
 10440 ;;		wreg, status,2, status,0, cstack
 10441 ;; Tracked objects:
 10442 ;;		On entry : 0/0
 10443 ;;		On exit  : 0/0
 10444 ;;		Unchanged: 0/0
 10445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10446 ;;      Params:         0       0       0       0       0       0       0
 10447 ;;      Locals:         0       0       0       0       0       0       0
 10448 ;;      Temps:          0       0       0       0       0       0       0
 10449 ;;      Totals:         0       0       0       0       0       0       0
 10450 ;;Total ram usage:        0 bytes
 10451 ;; Hardware stack levels used:    1
 10452 ;; Hardware stack levels required when called:    8
 10453 ;; This function calls:
 10454 ;;		_INT0_SetInterruptHandler
 10455 ;;		_INT1_SetInterruptHandler
 10456 ;; This function is called by:
 10457 ;;		_SYSTEM_Initialize
 10458 ;; This function uses a non-reentrant model
 10459 ;;
 10460                           
 10461                           	psect	text37
 10462  00595E                     __ptext37:
 10463                           	opt stack 0
 10464  00595E                     _EXT_INT_Initialize:
 10465                           	opt stack 21
 10466                           
 10467                           ;ext_int.c: 155: (INTCON3bits.INT1IF = 0);
 10468                           
 10469                           ;incstack = 0
 10470  00595E  90F0               	bcf	intcon3,0,c	;volatile
 10471                           
 10472                           ;ext_int.c: 156: (INTCON2bits.INTEDG1 = 0);
 10473  005960  9AF1               	bcf	intcon2,5,c	;volatile
 10474                           
 10475                           ;ext_int.c: 158: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
 10476  005962  0E00               	movlw	0
 10477  005964  0100               	movlb	0	; () banked
 10478  005966  6F8E               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
 10479  005968  0E00               	movlw	0
 10480  00596A  0100               	movlb	0	; () banked
 10481  00596C  6F8F               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 10482  00596E  EC85  F02D         	call	_INT1_SetInterruptHandler	;wreg free
 10483                           
 10484                           ;ext_int.c: 159: (INTCON3bits.INT1IE = 1);
 10485  005972  86F0               	bsf	intcon3,3,c	;volatile
 10486                           
 10487                           ;ext_int.c: 170: (INTCONbits.INT0IF = 0);
 10488  005974  92F2               	bcf	intcon,1,c	;volatile
 10489                           
 10490                           ;ext_int.c: 171: (INTCON2bits.INTEDG0 = 0);
 10491  005976  9CF1               	bcf	intcon2,6,c	;volatile
 10492                           
 10493                           ;ext_int.c: 173: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
 10494  005978  0E00               	movlw	0
 10495  00597A  0100               	movlb	0	; () banked
 10496  00597C  6F8E               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
 10497  00597E  0E00               	movlw	0
 10498  005980  0100               	movlb	0	; () banked
 10499  005982  6F8F               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 10500  005984  EC8A  F02D         	call	_INT0_SetInterruptHandler	;wreg free
 10501                           
 10502                           ;ext_int.c: 174: (INTCONbits.INT0IE = 1);
 10503  005988  88F2               	bsf	intcon,4,c	;volatile
 10504  00598A  0012               	return		;funcret
 10505  00598C                     __end_of_EXT_INT_Initialize:
 10506                           	opt stack 0
 10507                           tosu	equ	0xFFF
 10508                           tosh	equ	0xFFE
 10509                           tosl	equ	0xFFD
 10510                           pclath	equ	0xFFA
 10511                           tblptru	equ	0xFF8
 10512                           tblptrh	equ	0xFF7
 10513                           tblptrl	equ	0xFF6
 10514                           tablat	equ	0xFF5
 10515                           prodh	equ	0xFF4
 10516                           prodl	equ	0xFF3
 10517                           intcon	equ	0xFF2
 10518                           intcon2	equ	0xFF1
 10519                           intcon3	equ	0xFF0
 10520                           postinc0	equ	0xFEE
 10521                           wreg	equ	0xFE8
 10522                           indf2	equ	0xFDF
 10523                           postinc2	equ	0xFDE
 10524                           postdec2	equ	0xFDD
 10525                           fsr2h	equ	0xFDA
 10526                           fsr2l	equ	0xFD9
 10527                           status	equ	0xFD8
 10528                           
 10529 ;; *************** function _INT1_SetInterruptHandler *****************
 10530 ;; Defined at:
 10531 ;;		line 73 in file "mcc_generated_files/ext_int.c"
 10532 ;; Parameters:    Size  Location     Type
 10533 ;;  InterruptHan    2   46[BANK0 ] PTR void 
 10534 ;;		 -> INT1_DefaultInterruptHandler(1), 
 10535 ;; Auto vars:     Size  Location     Type
 10536 ;;		None
 10537 ;; Return value:  Size  Location     Type
 10538 ;;                  1    wreg      void 
 10539 ;; Registers used:
 10540 ;;		wreg, status,2, status,0
 10541 ;; Tracked objects:
 10542 ;;		On entry : 0/0
 10543 ;;		On exit  : 0/0
 10544 ;;		Unchanged: 0/0
 10545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10546 ;;      Params:         0       2       0       0       0       0       0
 10547 ;;      Locals:         0       0       0       0       0       0       0
 10548 ;;      Temps:          0       0       0       0       0       0       0
 10549 ;;      Totals:         0       2       0       0       0       0       0
 10550 ;;Total ram usage:        2 bytes
 10551 ;; Hardware stack levels used:    1
 10552 ;; Hardware stack levels required when called:    7
 10553 ;; This function calls:
 10554 ;;		Nothing
 10555 ;; This function is called by:
 10556 ;;		_EXT_INT_Initialize
 10557 ;; This function uses a non-reentrant model
 10558 ;;
 10559                           
 10560                           	psect	text38
 10561  005B0A                     __ptext38:
 10562                           	opt stack 0
 10563  005B0A                     _INT1_SetInterruptHandler:
 10564                           	opt stack 21
 10565                           
 10566                           ;ext_int.c: 74: INT1_InterruptHandler = InterruptHandler;
 10567                           
 10568                           ;incstack = 0
 10569  005B0A  C08E  F0CC         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
 10570  005B0E  C08F  F0CD         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
 10571  005B12  0012               	return		;funcret
 10572  005B14                     __end_of_INT1_SetInterruptHandler:
 10573                           	opt stack 0
 10574                           tosu	equ	0xFFF
 10575                           tosh	equ	0xFFE
 10576                           tosl	equ	0xFFD
 10577                           pclath	equ	0xFFA
 10578                           tblptru	equ	0xFF8
 10579                           tblptrh	equ	0xFF7
 10580                           tblptrl	equ	0xFF6
 10581                           tablat	equ	0xFF5
 10582                           prodh	equ	0xFF4
 10583                           prodl	equ	0xFF3
 10584                           intcon	equ	0xFF2
 10585                           intcon2	equ	0xFF1
 10586                           intcon3	equ	0xFF0
 10587                           postinc0	equ	0xFEE
 10588                           wreg	equ	0xFE8
 10589                           indf2	equ	0xFDF
 10590                           postinc2	equ	0xFDE
 10591                           postdec2	equ	0xFDD
 10592                           fsr2h	equ	0xFDA
 10593                           fsr2l	equ	0xFD9
 10594                           status	equ	0xFD8
 10595                           
 10596 ;; *************** function _INT0_SetInterruptHandler *****************
 10597 ;; Defined at:
 10598 ;;		line 125 in file "mcc_generated_files/ext_int.c"
 10599 ;; Parameters:    Size  Location     Type
 10600 ;;  InterruptHan    2   46[BANK0 ] PTR void 
 10601 ;;		 -> INT0_DefaultInterruptHandler(1), 
 10602 ;; Auto vars:     Size  Location     Type
 10603 ;;		None
 10604 ;; Return value:  Size  Location     Type
 10605 ;;                  1    wreg      void 
 10606 ;; Registers used:
 10607 ;;		wreg, status,2, status,0
 10608 ;; Tracked objects:
 10609 ;;		On entry : 0/0
 10610 ;;		On exit  : 0/0
 10611 ;;		Unchanged: 0/0
 10612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10613 ;;      Params:         0       2       0       0       0       0       0
 10614 ;;      Locals:         0       0       0       0       0       0       0
 10615 ;;      Temps:          0       0       0       0       0       0       0
 10616 ;;      Totals:         0       2       0       0       0       0       0
 10617 ;;Total ram usage:        2 bytes
 10618 ;; Hardware stack levels used:    1
 10619 ;; Hardware stack levels required when called:    7
 10620 ;; This function calls:
 10621 ;;		Nothing
 10622 ;; This function is called by:
 10623 ;;		_EXT_INT_Initialize
 10624 ;; This function uses a non-reentrant model
 10625 ;;
 10626                           
 10627                           	psect	text39
 10628  005B14                     __ptext39:
 10629                           	opt stack 0
 10630  005B14                     _INT0_SetInterruptHandler:
 10631                           	opt stack 21
 10632                           
 10633                           ;ext_int.c: 126: INT0_InterruptHandler = InterruptHandler;
 10634                           
 10635                           ;incstack = 0
 10636  005B14  C08E  F0CA         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 10637  005B18  C08F  F0CB         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 10638  005B1C  0012               	return		;funcret
 10639  005B1E                     __end_of_INT0_SetInterruptHandler:
 10640                           	opt stack 0
 10641                           tosu	equ	0xFFF
 10642                           tosh	equ	0xFFE
 10643                           tosl	equ	0xFFD
 10644                           pclath	equ	0xFFA
 10645                           tblptru	equ	0xFF8
 10646                           tblptrh	equ	0xFF7
 10647                           tblptrl	equ	0xFF6
 10648                           tablat	equ	0xFF5
 10649                           prodh	equ	0xFF4
 10650                           prodl	equ	0xFF3
 10651                           intcon	equ	0xFF2
 10652                           intcon2	equ	0xFF1
 10653                           intcon3	equ	0xFF0
 10654                           postinc0	equ	0xFEE
 10655                           wreg	equ	0xFE8
 10656                           indf2	equ	0xFDF
 10657                           postinc2	equ	0xFDE
 10658                           postdec2	equ	0xFDD
 10659                           fsr2h	equ	0xFDA
 10660                           fsr2l	equ	0xFD9
 10661                           status	equ	0xFD8
 10662                           
 10663 ;; *************** function _EUSART1_Initialize *****************
 10664 ;; Defined at:
 10665 ;;		line 55 in file "mcc_generated_files/eusart1.c"
 10666 ;; Parameters:    Size  Location     Type
 10667 ;;		None
 10668 ;; Auto vars:     Size  Location     Type
 10669 ;;		None
 10670 ;; Return value:  Size  Location     Type
 10671 ;;                  1    wreg      void 
 10672 ;; Registers used:
 10673 ;;		wreg, status,2
 10674 ;; Tracked objects:
 10675 ;;		On entry : 0/0
 10676 ;;		On exit  : 0/0
 10677 ;;		Unchanged: 0/0
 10678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10679 ;;      Params:         0       0       0       0       0       0       0
 10680 ;;      Locals:         0       0       0       0       0       0       0
 10681 ;;      Temps:          0       0       0       0       0       0       0
 10682 ;;      Totals:         0       0       0       0       0       0       0
 10683 ;;Total ram usage:        0 bytes
 10684 ;; Hardware stack levels used:    1
 10685 ;; Hardware stack levels required when called:    7
 10686 ;; This function calls:
 10687 ;;		Nothing
 10688 ;; This function is called by:
 10689 ;;		_SYSTEM_Initialize
 10690 ;; This function uses a non-reentrant model
 10691 ;;
 10692                           
 10693                           	psect	text40
 10694  005AA0                     __ptext40:
 10695                           	opt stack 0
 10696  005AA0                     _EUSART1_Initialize:
 10697                           	opt stack 22
 10698                           
 10699                           ;eusart1.c: 60: BAUDCON1 = 0x08;
 10700                           
 10701                           ;incstack = 0
 10702  005AA0  0E08               	movlw	8
 10703  005AA2  6EB8               	movwf	4024,c	;volatile
 10704                           
 10705                           ;eusart1.c: 63: RCSTA1 = 0x80;
 10706  005AA4  0E80               	movlw	128
 10707  005AA6  6EAB               	movwf	4011,c	;volatile
 10708                           
 10709                           ;eusart1.c: 66: TXSTA1 = 0x24;
 10710  005AA8  0E24               	movlw	36
 10711  005AAA  6EAC               	movwf	4012,c	;volatile
 10712                           
 10713                           ;eusart1.c: 69: SPBRG1 = 0xA0;
 10714  005AAC  0EA0               	movlw	160
 10715  005AAE  6EAF               	movwf	4015,c	;volatile
 10716                           
 10717                           ;eusart1.c: 72: SPBRGH1 = 0x01;
 10718  005AB0  0E01               	movlw	1
 10719  005AB2  6EB0               	movwf	4016,c	;volatile
 10720  005AB4  0012               	return		;funcret
 10721  005AB6                     __end_of_EUSART1_Initialize:
 10722                           	opt stack 0
 10723                           tosu	equ	0xFFF
 10724                           tosh	equ	0xFFE
 10725                           tosl	equ	0xFFD
 10726                           pclath	equ	0xFFA
 10727                           tblptru	equ	0xFF8
 10728                           tblptrh	equ	0xFF7
 10729                           tblptrl	equ	0xFF6
 10730                           tablat	equ	0xFF5
 10731                           prodh	equ	0xFF4
 10732                           prodl	equ	0xFF3
 10733                           intcon	equ	0xFF2
 10734                           intcon2	equ	0xFF1
 10735                           intcon3	equ	0xFF0
 10736                           postinc0	equ	0xFEE
 10737                           wreg	equ	0xFE8
 10738                           indf2	equ	0xFDF
 10739                           postinc2	equ	0xFDE
 10740                           postdec2	equ	0xFDD
 10741                           fsr2h	equ	0xFDA
 10742                           fsr2l	equ	0xFD9
 10743                           status	equ	0xFD8
 10744                           
 10745 ;; *************** function _INTERRUPT_InterruptManager *****************
 10746 ;; Defined at:
 10747 ;;		line 10 in file "mcc_generated_files/interrupt_manager.c"
 10748 ;; Parameters:    Size  Location     Type
 10749 ;;		None
 10750 ;; Auto vars:     Size  Location     Type
 10751 ;;		None
 10752 ;; Return value:  Size  Location     Type
 10753 ;;                  1    wreg      void 
 10754 ;; Registers used:
 10755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10756 ;; Tracked objects:
 10757 ;;		On entry : 0/0
 10758 ;;		On exit  : 0/0
 10759 ;;		Unchanged: 0/0
 10760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10761 ;;      Params:         0       0       0       0       0       0       0
 10762 ;;      Locals:         0       0       0       0       0       0       0
 10763 ;;      Temps:          0      14       0       0       0       0       0
 10764 ;;      Totals:         0      14       0       0       0       0       0
 10765 ;;Total ram usage:       14 bytes
 10766 ;; Hardware stack levels used:    1
 10767 ;; Hardware stack levels required when called:    6
 10768 ;; This function calls:
 10769 ;;		_INT0_ISR
 10770 ;;		_INT1_ISR
 10771 ;;		_TMR0_ISR
 10772 ;; This function is called by:
 10773 ;;		Interrupt level 2
 10774 ;; This function uses a non-reentrant model
 10775 ;;
 10776                           
 10777                           	psect	intcode
 10778  000008                     __pintcode:
 10779                           	opt stack 0
 10780  000008                     _INTERRUPT_InterruptManager:
 10781                           	opt stack 19
 10782                           
 10783                           ;incstack = 0
 10784  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10785  00000A  CFFA F080          	movff	pclath,??_INTERRUPT_InterruptManager
 10786  00000E  CFFB F081          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 10787  000012  CFE9 F082          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 10788  000016  CFEA F083          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 10789  00001A  CFE1 F084          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 10790  00001E  CFE2 F085          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 10791  000022  CFD9 F086          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 10792  000026  CFDA F087          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 10793  00002A  CFF3 F088          	movff	prodl,??_INTERRUPT_InterruptManager+8
 10794  00002E  CFF4 F089          	movff	prodh,??_INTERRUPT_InterruptManager+9
 10795  000032  CFF6 F08A          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 10796  000036  CFF7 F08B          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 10797  00003A  CFF8 F08C          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 10798  00003E  CFF5 F08D          	movff	tablat,??_INTERRUPT_InterruptManager+13
 10799                           
 10800                           ;interrupt_manager.c: 13: if(INTCONbits.INT0IE == 1 && INTCONbits.INT0IF == 1)
 10801  000042  B8F2               	btfsc	intcon,4,c	;volatile
 10802  000044  A2F2               	btfss	intcon,1,c	;volatile
 10803  000046  D003               	goto	i2l111
 10804                           
 10805                           ;interrupt_manager.c: 14: {
 10806                           ;interrupt_manager.c: 15: INT0_ISR();
 10807  000048  EC93  F026         	call	_INT0_ISR	;wreg free
 10808                           
 10809                           ;interrupt_manager.c: 16: }
 10810  00004C  D00B               	goto	i2l117
 10811  00004E                     i2l111:
 10812                           
 10813                           ;interrupt_manager.c: 17: else if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 10814  00004E  B6F0               	btfsc	intcon3,3,c	;volatile
 10815  000050  A0F0               	btfss	intcon3,0,c	;volatile
 10816  000052  D003               	goto	i2l113
 10817                           
 10818                           ;interrupt_manager.c: 18: {
 10819                           ;interrupt_manager.c: 19: INT1_ISR();
 10820  000054  EC40  F01E         	call	_INT1_ISR	;wreg free
 10821                           
 10822                           ;interrupt_manager.c: 20: }
 10823  000058  D005               	goto	i2l117
 10824  00005A                     i2l113:
 10825                           
 10826                           ;interrupt_manager.c: 21: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 10827  00005A  BAF2               	btfsc	intcon,5,c	;volatile
 10828  00005C  A4F2               	btfss	intcon,2,c	;volatile
 10829  00005E  D002               	goto	i2l117
 10830                           
 10831                           ;interrupt_manager.c: 22: {
 10832                           ;interrupt_manager.c: 23: TMR0_ISR();
 10833  000060  EC97  F02C         	call	_TMR0_ISR	;wreg free
 10834  000064                     i2l117:
 10835  000064  C08D  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 10836  000068  C08C  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 10837  00006C  C08B  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 10838  000070  C08A  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 10839  000074  C089  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 10840  000078  C088  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 10841  00007C  C087  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 10842  000080  C086  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 10843  000084  C085  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 10844  000088  C084  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 10845  00008C  C083  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 10846  000090  C082  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 10847  000094  C081  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 10848  000098  C080  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 10849  00009C  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10850  00009E  0011               	retfie		f
 10851  0000A0                     __end_of_INTERRUPT_InterruptManager:
 10852                           	opt stack 0
 10853                           tosu	equ	0xFFF
 10854                           tosh	equ	0xFFE
 10855                           tosl	equ	0xFFD
 10856                           pclatu	equ	0xFFB
 10857                           pclath	equ	0xFFA
 10858                           tblptru	equ	0xFF8
 10859                           tblptrh	equ	0xFF7
 10860                           tblptrl	equ	0xFF6
 10861                           tablat	equ	0xFF5
 10862                           prodh	equ	0xFF4
 10863                           prodl	equ	0xFF3
 10864                           intcon	equ	0xFF2
 10865                           intcon2	equ	0xFF1
 10866                           intcon3	equ	0xFF0
 10867                           postinc0	equ	0xFEE
 10868                           fsr0h	equ	0xFEA
 10869                           fsr0l	equ	0xFE9
 10870                           wreg	equ	0xFE8
 10871                           fsr1h	equ	0xFE2
 10872                           fsr1l	equ	0xFE1
 10873                           indf2	equ	0xFDF
 10874                           postinc2	equ	0xFDE
 10875                           postdec2	equ	0xFDD
 10876                           fsr2h	equ	0xFDA
 10877                           fsr2l	equ	0xFD9
 10878                           status	equ	0xFD8
 10879                           
 10880 ;; *************** function _TMR0_ISR *****************
 10881 ;; Defined at:
 10882 ;;		line 86 in file "mcc_generated_files/tmr0.c"
 10883 ;; Parameters:    Size  Location     Type
 10884 ;;		None
 10885 ;; Auto vars:     Size  Location     Type
 10886 ;;		None
 10887 ;; Return value:  Size  Location     Type
 10888 ;;                  1    wreg      void 
 10889 ;; Registers used:
 10890 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 10891 ;; Tracked objects:
 10892 ;;		On entry : 0/0
 10893 ;;		On exit  : 0/0
 10894 ;;		Unchanged: 0/0
 10895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10896 ;;      Params:         0       0       0       0       0       0       0
 10897 ;;      Locals:         0       0       0       0       0       0       0
 10898 ;;      Temps:          0       0       0       0       0       0       0
 10899 ;;      Totals:         0       0       0       0       0       0       0
 10900 ;;Total ram usage:        0 bytes
 10901 ;; Hardware stack levels used:    1
 10902 ;; Hardware stack levels required when called:    1
 10903 ;; This function calls:
 10904 ;;		Absolute function
 10905 ;;		_TMR0_DefaultInterruptHandler
 10906 ;; This function is called by:
 10907 ;;		_INTERRUPT_InterruptManager
 10908 ;; This function uses a non-reentrant model
 10909 ;;
 10910                           
 10911                           	psect	text42
 10912  00592E                     __ptext42:
 10913                           	opt stack 0
 10914  00592E                     _TMR0_ISR:
 10915                           	opt stack 23
 10916                           
 10917                           ;tmr0.c: 90: INTCONbits.TMR0IF = 0;
 10918                           
 10919                           ;incstack = 0
 10920  00592E  94F2               	bcf	intcon,2,c	;volatile
 10921                           
 10922                           ;tmr0.c: 94: TMR0H = timer0ReloadVal >> 8;
 10923  005930  505D               	movf	_timer0ReloadVal+1,w,c	;volatile
 10924  005932  6ED7               	movwf	4055,c	;volatile
 10925                           
 10926                           ;tmr0.c: 95: TMR0L = (uint8_t) timer0ReloadVal;
 10927  005934  C05C  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 10928                           
 10929                           ;tmr0.c: 97: if(TMR0_InterruptHandler)
 10930  005938  0100               	movlb	0	; () banked
 10931  00593A  51CE               	movf	_TMR0_InterruptHandler& (0+255),w,b
 10932  00593C  0100               	movlb	0	; () banked
 10933  00593E  11CF               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 10934  005940  B4D8               	btfsc	status,2,c
 10935  005942  0012               	return	
 10936                           
 10937                           ; BSR set to: 0
 10938                           ;tmr0.c: 98: {
 10939                           ;tmr0.c: 99: TMR0_InterruptHandler();
 10940  005944  D801               	call	i2u1648_48
 10941  005946  0012               	return	
 10942  005948                     i2u1648_48:
 10943  005948  0005               	push	
 10944  00594A  0100               	movlb	0	; () banked
 10945  00594C  6EFA               	movwf	pclath,c
 10946  00594E  51CE               	movf	_TMR0_InterruptHandler& (0+255),w,b
 10947  005950  6EFD               	movwf	tosl,c
 10948  005952  51CF               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 10949  005954  6EFE               	movwf	tosh,c
 10950  005956  50F8               	movf	tblptru,w,c
 10951  005958  6EFF               	movwf	tosu,c
 10952  00595A  50FA               	movf	pclath,w,c
 10953  00595C  0012               	return		;indir
 10954  00595E                     __end_of_TMR0_ISR:
 10955                           	opt stack 0
 10956                           tosu	equ	0xFFF
 10957                           tosh	equ	0xFFE
 10958                           tosl	equ	0xFFD
 10959                           pclatu	equ	0xFFB
 10960                           pclath	equ	0xFFA
 10961                           tblptru	equ	0xFF8
 10962                           tblptrh	equ	0xFF7
 10963                           tblptrl	equ	0xFF6
 10964                           tablat	equ	0xFF5
 10965                           prodh	equ	0xFF4
 10966                           prodl	equ	0xFF3
 10967                           intcon	equ	0xFF2
 10968                           intcon2	equ	0xFF1
 10969                           intcon3	equ	0xFF0
 10970                           postinc0	equ	0xFEE
 10971                           fsr0h	equ	0xFEA
 10972                           fsr0l	equ	0xFE9
 10973                           wreg	equ	0xFE8
 10974                           fsr1h	equ	0xFE2
 10975                           fsr1l	equ	0xFE1
 10976                           indf2	equ	0xFDF
 10977                           postinc2	equ	0xFDE
 10978                           postdec2	equ	0xFDD
 10979                           fsr2h	equ	0xFDA
 10980                           fsr2l	equ	0xFD9
 10981                           status	equ	0xFD8
 10982                           
 10983 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 10984 ;; Defined at:
 10985 ;;		line 108 in file "mcc_generated_files/tmr0.c"
 10986 ;; Parameters:    Size  Location     Type
 10987 ;;		None
 10988 ;; Auto vars:     Size  Location     Type
 10989 ;;		None
 10990 ;; Return value:  Size  Location     Type
 10991 ;;                  1    wreg      void 
 10992 ;; Registers used:
 10993 ;;		wreg, status,2, status,0
 10994 ;; Tracked objects:
 10995 ;;		On entry : 0/0
 10996 ;;		On exit  : 0/0
 10997 ;;		Unchanged: 0/0
 10998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10999 ;;      Params:         0       0       0       0       0       0       0
 11000 ;;      Locals:         0       0       0       0       0       0       0
 11001 ;;      Temps:          1       0       0       0       0       0       0
 11002 ;;      Totals:         1       0       0       0       0       0       0
 11003 ;;Total ram usage:        1 bytes
 11004 ;; Hardware stack levels used:    1
 11005 ;; This function calls:
 11006 ;;		Nothing
 11007 ;; This function is called by:
 11008 ;;		_TMR0_Initialize
 11009 ;;		_TMR0_ISR
 11010 ;; This function uses a non-reentrant model
 11011 ;;
 11012                           
 11013                           	psect	text43
 11014  005A4A                     __ptext43:
 11015                           	opt stack 0
 11016  005A4A                     _TMR0_DefaultInterruptHandler:
 11017                           	opt stack 23
 11018                           
 11019                           ;tmr0.c: 109: LATCbits.LATC7 = ~LATCbits.LATC7;
 11020                           
 11021                           ;incstack = 0
 11022  005A4A  AE8B               	btfss	3979,7,c	;volatile
 11023  005A4C  D002               	goto	i2u694_40
 11024  005A4E  0E01               	movlw	1
 11025  005A50  D001               	goto	i2u694_46
 11026  005A52                     i2u694_40:
 11027  005A52  0E00               	movlw	0
 11028  005A54                     i2u694_46:
 11029  005A54  0AFF               	xorlw	255
 11030  005A56  6E01               	movwf	??_TMR0_DefaultInterruptHandler& (0+255),c
 11031  005A58  3201               	rrcf	??_TMR0_DefaultInterruptHandler,f,c
 11032  005A5A  3201               	rrcf	??_TMR0_DefaultInterruptHandler,f,c
 11033  005A5C  508B               	movf	3979,w,c	;volatile
 11034  005A5E  1801               	xorwf	??_TMR0_DefaultInterruptHandler,w,c
 11035  005A60  0B7F               	andlw	-129
 11036  005A62  1801               	xorwf	??_TMR0_DefaultInterruptHandler,w,c
 11037  005A64  6E8B               	movwf	3979,c	;volatile
 11038  005A66  0012               	return		;funcret
 11039  005A68                     __end_of_TMR0_DefaultInterruptHandler:
 11040                           	opt stack 0
 11041                           tosu	equ	0xFFF
 11042                           tosh	equ	0xFFE
 11043                           tosl	equ	0xFFD
 11044                           pclatu	equ	0xFFB
 11045                           pclath	equ	0xFFA
 11046                           tblptru	equ	0xFF8
 11047                           tblptrh	equ	0xFF7
 11048                           tblptrl	equ	0xFF6
 11049                           tablat	equ	0xFF5
 11050                           prodh	equ	0xFF4
 11051                           prodl	equ	0xFF3
 11052                           intcon	equ	0xFF2
 11053                           intcon2	equ	0xFF1
 11054                           intcon3	equ	0xFF0
 11055                           postinc0	equ	0xFEE
 11056                           fsr0h	equ	0xFEA
 11057                           fsr0l	equ	0xFE9
 11058                           wreg	equ	0xFE8
 11059                           fsr1h	equ	0xFE2
 11060                           fsr1l	equ	0xFE1
 11061                           indf2	equ	0xFDF
 11062                           postinc2	equ	0xFDE
 11063                           postdec2	equ	0xFDD
 11064                           fsr2h	equ	0xFDA
 11065                           fsr2l	equ	0xFD9
 11066                           status	equ	0xFD8
 11067                           
 11068 ;; *************** function _INT1_ISR *****************
 11069 ;; Defined at:
 11070 ;;		line 34 in file "mcc_generated_files/ext_int.c"
 11071 ;; Parameters:    Size  Location     Type
 11072 ;;		None
 11073 ;; Auto vars:     Size  Location     Type
 11074 ;;		None
 11075 ;; Return value:  Size  Location     Type
 11076 ;;                  1    wreg      void 
 11077 ;; Registers used:
 11078 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 11079 ;; Tracked objects:
 11080 ;;		On entry : 0/0
 11081 ;;		On exit  : 0/0
 11082 ;;		Unchanged: 0/0
 11083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11084 ;;      Params:         0       0       0       0       0       0       0
 11085 ;;      Locals:         0       0       0       0       0       0       0
 11086 ;;      Temps:         10       0       0       0       0       0       0
 11087 ;;      Totals:        10       0       0       0       0       0       0
 11088 ;;Total ram usage:       10 bytes
 11089 ;; Hardware stack levels used:    1
 11090 ;; This function calls:
 11091 ;;		Nothing
 11092 ;; This function is called by:
 11093 ;;		_INTERRUPT_InterruptManager
 11094 ;; This function uses a non-reentrant model
 11095 ;;
 11096                           
 11097                           	psect	text44
 11098  003C80                     __ptext44:
 11099                           	opt stack 0
 11100  003C80                     _INT1_ISR:
 11101                           	opt stack 24
 11102                           
 11103                           ;ext_int.c: 37: if (range < 5)
 11104                           
 11105                           ;incstack = 0
 11106  003C80  0E05               	movlw	5
 11107  003C82  605E               	cpfslt	_range,c
 11108  003C84  D002               	goto	i2l3331
 11109                           
 11110                           ;ext_int.c: 38: {
 11111                           ;ext_int.c: 39: range += 1;
 11112  003C86  2A5E               	incf	_range,f,c
 11113                           
 11114                           ;ext_int.c: 40: }
 11115  003C88  D002               	goto	i2l3333
 11116  003C8A                     i2l3331:
 11117                           
 11118                           ;ext_int.c: 41: else
 11119                           ;ext_int.c: 42: {
 11120                           ;ext_int.c: 43: range -= 3;
 11121  003C8A  0E03               	movlw	3
 11122  003C8C  5E5E               	subwf	_range,f,c
 11123  003C8E                     i2l3333:
 11124                           
 11125                           ;ext_int.c: 44: }
 11126                           ;ext_int.c: 47: LATC |= (1 << R1_BIT[0]) | (1 << R1_BIT[1]) | (1 << R1_BIT[2]) | (1 << R
      +                          1_BIT[3]) | (1 << R1_BIT[4]);
 11127  003C8E  0E8A               	movlw	low (_R1_BIT+4)
 11128  003C90  6EF6               	movwf	tblptrl,c
 11129  003C92  0E06               	movlw	high (_R1_BIT+4)
 11130  003C94  6EF7               	movwf	tblptrh,c
 11131  003C96                     	if	0	;tblptru may be non-zero
 11132  003C96                     	endif
 11133  003C96                     	if	0	;tblptru may be non-zero
 11134  003C96                     	endif
 11135  003C96  0008               	tblrd		*
 11136  003C98  CFF5 F001          	movff	tablat,??_INT1_ISR
 11137  003C9C  0E01               	movlw	1
 11138  003C9E  6E02               	movwf	(??_INT1_ISR+1)& (0+255),c
 11139  003CA0  2A01               	incf	??_INT1_ISR,f,c
 11140  003CA2  D002               	goto	i2u378_44
 11141  003CA4                     i2u378_45:
 11142  003CA4  90D8               	bcf	status,0,c
 11143  003CA6  3602               	rlcf	??_INT1_ISR+1,f,c
 11144  003CA8                     i2u378_44:
 11145  003CA8  2E01               	decfsz	??_INT1_ISR,f,c
 11146  003CAA  D7FC               	goto	i2u378_45
 11147  003CAC  0E89               	movlw	low (_R1_BIT+3)
 11148  003CAE  6EF6               	movwf	tblptrl,c
 11149  003CB0  0E06               	movlw	high (_R1_BIT+3)
 11150  003CB2  6EF7               	movwf	tblptrh,c
 11151  003CB4                     	if	0	;tblptru may be non-zero
 11152  003CB4                     	endif
 11153  003CB4                     	if	0	;tblptru may be non-zero
 11154  003CB4                     	endif
 11155  003CB4  0008               	tblrd		*
 11156  003CB6  CFF5 F003          	movff	tablat,??_INT1_ISR+2
 11157  003CBA  0E01               	movlw	1
 11158  003CBC  6E04               	movwf	(??_INT1_ISR+3)& (0+255),c
 11159  003CBE  2A03               	incf	??_INT1_ISR+2,f,c
 11160  003CC0  D002               	goto	i2u379_44
 11161  003CC2                     i2u379_45:
 11162  003CC2  90D8               	bcf	status,0,c
 11163  003CC4  3604               	rlcf	??_INT1_ISR+3,f,c
 11164  003CC6                     i2u379_44:
 11165  003CC6  2E03               	decfsz	??_INT1_ISR+2,f,c
 11166  003CC8  D7FC               	goto	i2u379_45
 11167  003CCA  0E88               	movlw	low (_R1_BIT+2)
 11168  003CCC  6EF6               	movwf	tblptrl,c
 11169  003CCE  0E06               	movlw	high (_R1_BIT+2)
 11170  003CD0  6EF7               	movwf	tblptrh,c
 11171  003CD2                     	if	0	;tblptru may be non-zero
 11172  003CD2                     	endif
 11173  003CD2                     	if	0	;tblptru may be non-zero
 11174  003CD2                     	endif
 11175  003CD2  0008               	tblrd		*
 11176  003CD4  CFF5 F005          	movff	tablat,??_INT1_ISR+4
 11177  003CD8  0E01               	movlw	1
 11178  003CDA  6E06               	movwf	(??_INT1_ISR+5)& (0+255),c
 11179  003CDC  2A05               	incf	??_INT1_ISR+4,f,c
 11180  003CDE  D002               	goto	i2u380_44
 11181  003CE0                     i2u380_45:
 11182  003CE0  90D8               	bcf	status,0,c
 11183  003CE2  3606               	rlcf	??_INT1_ISR+5,f,c
 11184  003CE4                     i2u380_44:
 11185  003CE4  2E05               	decfsz	??_INT1_ISR+4,f,c
 11186  003CE6  D7FC               	goto	i2u380_45
 11187  003CE8  0E87               	movlw	low (_R1_BIT+1)
 11188  003CEA  6EF6               	movwf	tblptrl,c
 11189  003CEC  0E06               	movlw	high (_R1_BIT+1)
 11190  003CEE  6EF7               	movwf	tblptrh,c
 11191  003CF0                     	if	0	;tblptru may be non-zero
 11192  003CF0                     	endif
 11193  003CF0                     	if	0	;tblptru may be non-zero
 11194  003CF0                     	endif
 11195  003CF0  0008               	tblrd		*
 11196  003CF2  CFF5 F007          	movff	tablat,??_INT1_ISR+6
 11197  003CF6  0E01               	movlw	1
 11198  003CF8  6E08               	movwf	(??_INT1_ISR+7)& (0+255),c
 11199  003CFA  2A07               	incf	??_INT1_ISR+6,f,c
 11200  003CFC  D002               	goto	i2u381_44
 11201  003CFE                     i2u381_45:
 11202  003CFE  90D8               	bcf	status,0,c
 11203  003D00  3608               	rlcf	??_INT1_ISR+7,f,c
 11204  003D02                     i2u381_44:
 11205  003D02  2E07               	decfsz	??_INT1_ISR+6,f,c
 11206  003D04  D7FC               	goto	i2u381_45
 11207  003D06  0E86               	movlw	low _R1_BIT
 11208  003D08  6EF6               	movwf	tblptrl,c
 11209  003D0A                     	if	1	;There is more than 1 active tblptr byte
 11210  003D0A  0E06               	movlw	high _R1_BIT
 11211  003D0C  6EF7               	movwf	tblptrh,c
 11212  003D0E                     	endif
 11213  003D0E                     	if	0	;There are less than 3 active tblptr bytes
 11214  003D0E                     	endif
 11215  003D0E  0008               	tblrd		*
 11216  003D10  CFF5 F009          	movff	tablat,??_INT1_ISR+8
 11217  003D14  0E01               	movlw	1
 11218  003D16  6E0A               	movwf	(??_INT1_ISR+9)& (0+255),c
 11219  003D18  2A09               	incf	??_INT1_ISR+8,f,c
 11220  003D1A  D002               	goto	i2u382_44
 11221  003D1C                     i2u382_45:
 11222  003D1C  90D8               	bcf	status,0,c
 11223  003D1E  360A               	rlcf	??_INT1_ISR+9,f,c
 11224  003D20                     i2u382_44:
 11225  003D20  2E09               	decfsz	??_INT1_ISR+8,f,c
 11226  003D22  D7FC               	goto	i2u382_45
 11227  003D24  500A               	movf	??_INT1_ISR+9,w,c
 11228  003D26  1008               	iorwf	??_INT1_ISR+7,w,c
 11229  003D28  1006               	iorwf	??_INT1_ISR+5,w,c
 11230  003D2A  1004               	iorwf	??_INT1_ISR+3,w,c
 11231  003D2C  1002               	iorwf	??_INT1_ISR+1,w,c
 11232  003D2E  128B               	iorwf	3979,f,c	;volatile
 11233                           
 11234                           ;ext_int.c: 48: LATB |= (1 << RSET_BIT[0]) | (1 << RSET_BIT[1]) | (1 << RSET_BIT[3]) | (
      +                          1 << RSET_BIT[4]);
 11235  003D30  0E8F               	movlw	low (_RSET_BIT+4)
 11236  003D32  6EF6               	movwf	tblptrl,c
 11237  003D34  0E06               	movlw	high (_RSET_BIT+4)
 11238  003D36  6EF7               	movwf	tblptrh,c
 11239  003D38                     	if	0	;tblptru may be non-zero
 11240  003D38                     	endif
 11241  003D38                     	if	0	;tblptru may be non-zero
 11242  003D38                     	endif
 11243  003D38  0008               	tblrd		*
 11244  003D3A  CFF5 F001          	movff	tablat,??_INT1_ISR
 11245  003D3E  0E01               	movlw	1
 11246  003D40  6E02               	movwf	(??_INT1_ISR+1)& (0+255),c
 11247  003D42  2A01               	incf	??_INT1_ISR,f,c
 11248  003D44  D002               	goto	i2u383_44
 11249  003D46                     i2u383_45:
 11250  003D46  90D8               	bcf	status,0,c
 11251  003D48  3602               	rlcf	??_INT1_ISR+1,f,c
 11252  003D4A                     i2u383_44:
 11253  003D4A  2E01               	decfsz	??_INT1_ISR,f,c
 11254  003D4C  D7FC               	goto	i2u383_45
 11255  003D4E  0E8E               	movlw	low (_RSET_BIT+3)
 11256  003D50  6EF6               	movwf	tblptrl,c
 11257  003D52  0E06               	movlw	high (_RSET_BIT+3)
 11258  003D54  6EF7               	movwf	tblptrh,c
 11259  003D56                     	if	0	;tblptru may be non-zero
 11260  003D56                     	endif
 11261  003D56                     	if	0	;tblptru may be non-zero
 11262  003D56                     	endif
 11263  003D56  0008               	tblrd		*
 11264  003D58  CFF5 F003          	movff	tablat,??_INT1_ISR+2
 11265  003D5C  0E01               	movlw	1
 11266  003D5E  6E04               	movwf	(??_INT1_ISR+3)& (0+255),c
 11267  003D60  2A03               	incf	??_INT1_ISR+2,f,c
 11268  003D62  D002               	goto	i2u384_44
 11269  003D64                     i2u384_45:
 11270  003D64  90D8               	bcf	status,0,c
 11271  003D66  3604               	rlcf	??_INT1_ISR+3,f,c
 11272  003D68                     i2u384_44:
 11273  003D68  2E03               	decfsz	??_INT1_ISR+2,f,c
 11274  003D6A  D7FC               	goto	i2u384_45
 11275  003D6C  0E8C               	movlw	low (_RSET_BIT+1)
 11276  003D6E  6EF6               	movwf	tblptrl,c
 11277  003D70  0E06               	movlw	high (_RSET_BIT+1)
 11278  003D72  6EF7               	movwf	tblptrh,c
 11279  003D74                     	if	0	;tblptru may be non-zero
 11280  003D74                     	endif
 11281  003D74                     	if	0	;tblptru may be non-zero
 11282  003D74                     	endif
 11283  003D74  0008               	tblrd		*
 11284  003D76  CFF5 F005          	movff	tablat,??_INT1_ISR+4
 11285  003D7A  0E01               	movlw	1
 11286  003D7C  6E06               	movwf	(??_INT1_ISR+5)& (0+255),c
 11287  003D7E  2A05               	incf	??_INT1_ISR+4,f,c
 11288  003D80  D002               	goto	i2u385_44
 11289  003D82                     i2u385_45:
 11290  003D82  90D8               	bcf	status,0,c
 11291  003D84  3606               	rlcf	??_INT1_ISR+5,f,c
 11292  003D86                     i2u385_44:
 11293  003D86  2E05               	decfsz	??_INT1_ISR+4,f,c
 11294  003D88  D7FC               	goto	i2u385_45
 11295  003D8A  0E8B               	movlw	low _RSET_BIT
 11296  003D8C  6EF6               	movwf	tblptrl,c
 11297  003D8E                     	if	1	;There is more than 1 active tblptr byte
 11298  003D8E  0E06               	movlw	high _RSET_BIT
 11299  003D90  6EF7               	movwf	tblptrh,c
 11300  003D92                     	endif
 11301  003D92                     	if	0	;There are less than 3 active tblptr bytes
 11302  003D92                     	endif
 11303  003D92  0008               	tblrd		*
 11304  003D94  CFF5 F007          	movff	tablat,??_INT1_ISR+6
 11305  003D98  0E01               	movlw	1
 11306  003D9A  6E08               	movwf	(??_INT1_ISR+7)& (0+255),c
 11307  003D9C  2A07               	incf	??_INT1_ISR+6,f,c
 11308  003D9E  D002               	goto	i2u386_44
 11309  003DA0                     i2u386_45:
 11310  003DA0  90D8               	bcf	status,0,c
 11311  003DA2  3608               	rlcf	??_INT1_ISR+7,f,c
 11312  003DA4                     i2u386_44:
 11313  003DA4  2E07               	decfsz	??_INT1_ISR+6,f,c
 11314  003DA6  D7FC               	goto	i2u386_45
 11315  003DA8  5008               	movf	??_INT1_ISR+7,w,c
 11316  003DAA  1006               	iorwf	??_INT1_ISR+5,w,c
 11317  003DAC  1004               	iorwf	??_INT1_ISR+3,w,c
 11318  003DAE  1002               	iorwf	??_INT1_ISR+1,w,c
 11319  003DB0  128A               	iorwf	3978,f,c	;volatile
 11320                           
 11321                           ;ext_int.c: 50: LATC &= ~(1 << R1_BIT[range - 1]);
 11322  003DB2  0EFF               	movlw	255
 11323  003DB4  6E01               	movwf	??_INT1_ISR& (0+255),c
 11324  003DB6  0EFF               	movlw	255
 11325  003DB8  6E02               	movwf	(??_INT1_ISR+1)& (0+255),c
 11326  003DBA  505E               	movf	_range,w,c
 11327  003DBC  6E03               	movwf	(??_INT1_ISR+2)& (0+255),c
 11328  003DBE  6A04               	clrf	(??_INT1_ISR+3)& (0+255),c
 11329  003DC0  5001               	movf	??_INT1_ISR,w,c
 11330  003DC2  2603               	addwf	??_INT1_ISR+2,f,c
 11331  003DC4  5002               	movf	??_INT1_ISR+1,w,c
 11332  003DC6  2204               	addwfc	??_INT1_ISR+3,f,c
 11333  003DC8  0E86               	movlw	low _R1_BIT
 11334  003DCA  2403               	addwf	??_INT1_ISR+2,w,c
 11335  003DCC  6EF6               	movwf	tblptrl,c
 11336  003DCE  0E06               	movlw	high _R1_BIT
 11337  003DD0  2004               	addwfc	??_INT1_ISR+3,w,c
 11338  003DD2  6EF7               	movwf	tblptrh,c
 11339  003DD4                     	if	0	;There are less than 3 active tblptr bytes
 11340  003DD4                     	endif
 11341  003DD4  0008               	tblrd		*
 11342  003DD6  CFF5 F005          	movff	tablat,??_INT1_ISR+4
 11343  003DDA  0E01               	movlw	1
 11344  003DDC  6E06               	movwf	(??_INT1_ISR+5)& (0+255),c
 11345  003DDE  2A05               	incf	??_INT1_ISR+4,f,c
 11346  003DE0  D002               	goto	i2u387_44
 11347  003DE2                     i2u387_45:
 11348  003DE2  90D8               	bcf	status,0,c
 11349  003DE4  3606               	rlcf	??_INT1_ISR+5,f,c
 11350  003DE6                     i2u387_44:
 11351  003DE6  2E05               	decfsz	??_INT1_ISR+4,f,c
 11352  003DE8  D7FC               	goto	i2u387_45
 11353  003DEA  5006               	movf	??_INT1_ISR+5,w,c
 11354  003DEC  0AFF               	xorlw	255
 11355  003DEE  168B               	andwf	3979,f,c	;volatile
 11356                           
 11357                           ;ext_int.c: 51: LATB &= ~(1 << RSET_BIT[range - 1]);
 11358  003DF0  0EFF               	movlw	255
 11359  003DF2  6E01               	movwf	??_INT1_ISR& (0+255),c
 11360  003DF4  0EFF               	movlw	255
 11361  003DF6  6E02               	movwf	(??_INT1_ISR+1)& (0+255),c
 11362  003DF8  505E               	movf	_range,w,c
 11363  003DFA  6E03               	movwf	(??_INT1_ISR+2)& (0+255),c
 11364  003DFC  6A04               	clrf	(??_INT1_ISR+3)& (0+255),c
 11365  003DFE  5001               	movf	??_INT1_ISR,w,c
 11366  003E00  2603               	addwf	??_INT1_ISR+2,f,c
 11367  003E02  5002               	movf	??_INT1_ISR+1,w,c
 11368  003E04  2204               	addwfc	??_INT1_ISR+3,f,c
 11369  003E06  0E8B               	movlw	low _RSET_BIT
 11370  003E08  2403               	addwf	??_INT1_ISR+2,w,c
 11371  003E0A  6EF6               	movwf	tblptrl,c
 11372  003E0C  0E06               	movlw	high _RSET_BIT
 11373  003E0E  2004               	addwfc	??_INT1_ISR+3,w,c
 11374  003E10  6EF7               	movwf	tblptrh,c
 11375  003E12                     	if	0	;There are less than 3 active tblptr bytes
 11376  003E12                     	endif
 11377  003E12  0008               	tblrd		*
 11378  003E14  CFF5 F005          	movff	tablat,??_INT1_ISR+4
 11379  003E18  0E01               	movlw	1
 11380  003E1A  6E06               	movwf	(??_INT1_ISR+5)& (0+255),c
 11381  003E1C  2A05               	incf	??_INT1_ISR+4,f,c
 11382  003E1E  D002               	goto	i2u388_44
 11383  003E20                     i2u388_45:
 11384  003E20  90D8               	bcf	status,0,c
 11385  003E22  3606               	rlcf	??_INT1_ISR+5,f,c
 11386  003E24                     i2u388_44:
 11387  003E24  2E05               	decfsz	??_INT1_ISR+4,f,c
 11388  003E26  D7FC               	goto	i2u388_45
 11389  003E28  5006               	movf	??_INT1_ISR+5,w,c
 11390  003E2A  0AFF               	xorlw	255
 11391  003E2C  168A               	andwf	3978,f,c	;volatile
 11392                           
 11393                           ;ext_int.c: 55: (INTCON3bits.INT1IF = 0);
 11394  003E2E  90F0               	bcf	intcon3,0,c	;volatile
 11395  003E30  0012               	return		;funcret
 11396  003E32                     __end_of_INT1_ISR:
 11397                           	opt stack 0
 11398                           tosu	equ	0xFFF
 11399                           tosh	equ	0xFFE
 11400                           tosl	equ	0xFFD
 11401                           pclatu	equ	0xFFB
 11402                           pclath	equ	0xFFA
 11403                           tblptru	equ	0xFF8
 11404                           tblptrh	equ	0xFF7
 11405                           tblptrl	equ	0xFF6
 11406                           tablat	equ	0xFF5
 11407                           prodh	equ	0xFF4
 11408                           prodl	equ	0xFF3
 11409                           intcon	equ	0xFF2
 11410                           intcon2	equ	0xFF1
 11411                           intcon3	equ	0xFF0
 11412                           postinc0	equ	0xFEE
 11413                           fsr0h	equ	0xFEA
 11414                           fsr0l	equ	0xFE9
 11415                           wreg	equ	0xFE8
 11416                           fsr1h	equ	0xFE2
 11417                           fsr1l	equ	0xFE1
 11418                           indf2	equ	0xFDF
 11419                           postinc2	equ	0xFDE
 11420                           postdec2	equ	0xFDD
 11421                           fsr2h	equ	0xFDA
 11422                           fsr2l	equ	0xFD9
 11423                           status	equ	0xFD8
 11424                           
 11425 ;; *************** function _INT0_ISR *****************
 11426 ;; Defined at:
 11427 ;;		line 87 in file "mcc_generated_files/ext_int.c"
 11428 ;; Parameters:    Size  Location     Type
 11429 ;;		None
 11430 ;; Auto vars:     Size  Location     Type
 11431 ;;		None
 11432 ;; Return value:  Size  Location     Type
 11433 ;;                  1    wreg      void 
 11434 ;; Registers used:
 11435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11436 ;; Tracked objects:
 11437 ;;		On entry : 0/0
 11438 ;;		On exit  : 0/0
 11439 ;;		Unchanged: 0/0
 11440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11441 ;;      Params:         0       0       0       0       0       0       0
 11442 ;;      Locals:         0       0       0       0       0       0       0
 11443 ;;      Temps:          0       0       0       0       0       0       0
 11444 ;;      Totals:         0       0       0       0       0       0       0
 11445 ;;Total ram usage:        0 bytes
 11446 ;; Hardware stack levels used:    1
 11447 ;; Hardware stack levels required when called:    5
 11448 ;; This function calls:
 11449 ;;		_TMR0_ReadTimer
 11450 ;;		_TMR0_Reload
 11451 ;;		_TMR0_StopTimer
 11452 ;;		___lwtoft
 11453 ;;		_printf
 11454 ;;		i2_TMR0_StartTimer
 11455 ;;		i2___ftadd
 11456 ;;		i2___ftdiv
 11457 ;;		i2___ftmul
 11458 ;;		i2___wmul
 11459 ;; This function is called by:
 11460 ;;		_INTERRUPT_InterruptManager
 11461 ;; This function uses a non-reentrant model
 11462 ;;
 11463                           
 11464                           	psect	text45
 11465  004D26                     __ptext45:
 11466                           	opt stack 0
 11467  004D26                     _INT0_ISR:
 11468                           	opt stack 19
 11469                           
 11470                           ;ext_int.c: 90: TMR0_StopTimer();
 11471                           
 11472                           ;incstack = 0
 11473  004D26  EC9F  F02D         	call	_TMR0_StopTimer	;wreg free
 11474                           
 11475                           ;ext_int.c: 91: reading = TMR0_ReadTimer();
 11476  004D2A  ECD5  F02B         	call	_TMR0_ReadTimer	;wreg free
 11477  004D2E  C001  F0B7         	movff	?_TMR0_ReadTimer,_reading
 11478  004D32  C002  F0B8         	movff	?_TMR0_ReadTimer+1,_reading+1
 11479                           
 11480                           ;ext_int.c: 95: result = cal_current[range - 1] * ((float)reading - 27) / 3.01004;
 11481  004D36  0E00               	movlw	0
 11482  004D38  6E12               	movwf	i2___wmul@multiplicand+1,c
 11483  004D3A  0E03               	movlw	3
 11484  004D3C  6E11               	movwf	i2___wmul@multiplicand,c
 11485  004D3E  0EFF               	movlw	255
 11486  004D40  245E               	addwf	_range,w,c
 11487  004D42  6E0F               	movwf	i2___wmul@multiplier,c
 11488  004D44  6A10               	clrf	i2___wmul@multiplier+1,c
 11489  004D46  0EFF               	movlw	255
 11490  004D48  2210               	addwfc	i2___wmul@multiplier+1,f,c
 11491  004D4A  ECEE  F02C         	call	i2___wmul	;wreg free
 11492  004D4E  0E77               	movlw	low _cal_current
 11493  004D50  240F               	addwf	?i2___wmul,w,c
 11494  004D52  6EF6               	movwf	tblptrl,c
 11495  004D54  0E06               	movlw	high _cal_current
 11496  004D56  2010               	addwfc	?i2___wmul+1,w,c
 11497  004D58  6EF7               	movwf	tblptrh,c
 11498  004D5A                     	if	0	;There are less than 3 active tblptr bytes
 11499  004D5A                     	endif
 11500  004D5A  0009               	tblrd		*+
 11501  004D5C  CFF5 F024          	movff	tablat,i2___ftmul@f2
 11502  004D60  0009               	tblrd		*+
 11503  004D62  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 11504  004D66  000A               	tblrd		*-
 11505  004D68  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 11506  004D6C  0E00               	movlw	0
 11507  004D6E  6E18               	movwf	i2___ftadd@f2,c
 11508  004D70  0ED8               	movlw	216
 11509  004D72  6E19               	movwf	i2___ftadd@f2+1,c
 11510  004D74  0EC1               	movlw	193
 11511  004D76  6E1A               	movwf	i2___ftadd@f2+2,c
 11512  004D78  C0B7  F009         	movff	_reading,___lwtoft@c
 11513  004D7C  C0B8  F00A         	movff	_reading+1,___lwtoft@c+1
 11514  004D80  EC13  F02D         	call	___lwtoft	;wreg free
 11515  004D84  C009  F015         	movff	?___lwtoft,i2___ftadd@f1
 11516  004D88  C00A  F016         	movff	?___lwtoft+1,i2___ftadd@f1+1
 11517  004D8C  C00B  F017         	movff	?___lwtoft+2,i2___ftadd@f1+2
 11518  004D90  EC19  F01F         	call	i2___ftadd	;wreg free
 11519  004D94  C015  F021         	movff	?i2___ftadd,i2___ftmul@f1
 11520  004D98  C016  F022         	movff	?i2___ftadd+1,i2___ftmul@f1+1
 11521  004D9C  C017  F023         	movff	?i2___ftadd+2,i2___ftmul@f1+2
 11522  004DA0  EC2C  F025         	call	i2___ftmul	;wreg free
 11523  004DA4  C021  F030         	movff	?i2___ftmul,i2___ftdiv@f1
 11524  004DA8  C022  F031         	movff	?i2___ftmul+1,i2___ftdiv@f1+1
 11525  004DAC  C023  F032         	movff	?i2___ftmul+2,i2___ftdiv@f1+2
 11526  004DB0  0EA4               	movlw	164
 11527  004DB2  6E33               	movwf	i2___ftdiv@f2,c
 11528  004DB4  0E40               	movlw	64
 11529  004DB6  6E34               	movwf	i2___ftdiv@f2+1,c
 11530  004DB8  0E40               	movlw	64
 11531  004DBA  6E35               	movwf	i2___ftdiv@f2+2,c
 11532  004DBC  EC20  F026         	call	i2___ftdiv	;wreg free
 11533  004DC0  C030  F058         	movff	?i2___ftdiv,_result
 11534  004DC4  C031  F059         	movff	?i2___ftdiv+1,_result+1
 11535  004DC8  C032  F05A         	movff	?i2___ftdiv+2,_result+2
 11536                           
 11537                           ;ext_int.c: 98: printf("Capacitance: %0.2f pF (Count: %u) - Range: %d\r\n", result, read
      +                          ing, range);
 11538  004DCC  0E90               	movlw	low STR_1
 11539  004DCE  0100               	movlb	0	; () banked
 11540  004DD0  6F77               	movwf	printf@f& (0+255),b
 11541  004DD2  0E06               	movlw	high STR_1
 11542  004DD4  0100               	movlb	0	; () banked
 11543  004DD6  6F78               	movwf	(printf@f+1)& (0+255),b
 11544  004DD8  C058  F079         	movff	_result,?_printf+2
 11545  004DDC  C059  F07A         	movff	_result+1,?_printf+3
 11546  004DE0  C05A  F07B         	movff	_result+2,?_printf+4
 11547  004DE4  C0B7  F07C         	movff	_reading,?_printf+5
 11548  004DE8  C0B8  F07D         	movff	_reading+1,?_printf+6
 11549  004DEC  C05E  F07E         	movff	_range,?_printf+7
 11550  004DF0  0100               	movlb	0	; () banked
 11551  004DF2  6B7F               	clrf	(?_printf+8)& (0+255),b
 11552  004DF4  EC4C  F02C         	call	_printf	;wreg free
 11553                           
 11554                           ;ext_int.c: 101: TMR0_Reload();
 11555  004DF8  EC94  F02D         	call	_TMR0_Reload	;wreg free
 11556                           
 11557                           ;ext_int.c: 104: TMR0_StartTimer();
 11558  004DFC  EC9D  F02D         	call	i2_TMR0_StartTimer	;wreg free
 11559                           
 11560                           ;ext_int.c: 107: (INTCONbits.INT0IF = 0);
 11561  004E00  92F2               	bcf	intcon,1,c	;volatile
 11562  004E02  0012               	return		;funcret
 11563  004E04                     __end_of_INT0_ISR:
 11564                           	opt stack 0
 11565                           tosu	equ	0xFFF
 11566                           tosh	equ	0xFFE
 11567                           tosl	equ	0xFFD
 11568                           pclatu	equ	0xFFB
 11569                           pclath	equ	0xFFA
 11570                           tblptru	equ	0xFF8
 11571                           tblptrh	equ	0xFF7
 11572                           tblptrl	equ	0xFF6
 11573                           tablat	equ	0xFF5
 11574                           prodh	equ	0xFF4
 11575                           prodl	equ	0xFF3
 11576                           intcon	equ	0xFF2
 11577                           intcon2	equ	0xFF1
 11578                           intcon3	equ	0xFF0
 11579                           postinc0	equ	0xFEE
 11580                           fsr0h	equ	0xFEA
 11581                           fsr0l	equ	0xFE9
 11582                           wreg	equ	0xFE8
 11583                           fsr1h	equ	0xFE2
 11584                           fsr1l	equ	0xFE1
 11585                           indf2	equ	0xFDF
 11586                           postinc2	equ	0xFDE
 11587                           postdec2	equ	0xFDD
 11588                           fsr2h	equ	0xFDA
 11589                           fsr2l	equ	0xFD9
 11590                           status	equ	0xFD8
 11591                           
 11592 ;; *************** function i2___ftdiv *****************
 11593 ;; Defined at:
 11594 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
 11595 ;; Parameters:    Size  Location     Type
 11596 ;;  f1              3   47[COMRAM] float 
 11597 ;;  f2              3   50[COMRAM] float 
 11598 ;; Auto vars:     Size  Location     Type
 11599 ;;  __ftdiv         3   57[COMRAM] float 
 11600 ;;  __ftdiv         1   61[COMRAM] unsigned char 
 11601 ;;  __ftdiv         1   60[COMRAM] unsigned char 
 11602 ;;  __ftdiv         1   56[COMRAM] unsigned char 
 11603 ;; Return value:  Size  Location     Type
 11604 ;;                  3   47[COMRAM] float 
 11605 ;; Registers used:
 11606 ;;		wreg, status,2, status,0, cstack
 11607 ;; Tracked objects:
 11608 ;;		On entry : 0/0
 11609 ;;		On exit  : 0/0
 11610 ;;		Unchanged: 0/0
 11611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11612 ;;      Params:         6       0       0       0       0       0       0
 11613 ;;      Locals:         6       0       0       0       0       0       0
 11614 ;;      Temps:          3       0       0       0       0       0       0
 11615 ;;      Totals:        15       0       0       0       0       0       0
 11616 ;;Total ram usage:       15 bytes
 11617 ;; Hardware stack levels used:    1
 11618 ;; Hardware stack levels required when called:    1
 11619 ;; This function calls:
 11620 ;;		i2___ftpack
 11621 ;; This function is called by:
 11622 ;;		_INT0_ISR
 11623 ;; This function uses a non-reentrant model
 11624 ;;
 11625                           
 11626                           	psect	text46
 11627  004C40                     __ptext46:
 11628                           	opt stack 0
 11629  004C40                     i2___ftdiv:
 11630                           	opt stack 22
 11631                           
 11632                           ;incstack = 0
 11633  004C40  C032  F036         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 11634  004C44  6A37               	clrf	(??i2___ftdiv+1)& (0+255),c
 11635  004C46  6A38               	clrf	(??i2___ftdiv+2)& (0+255),c
 11636  004C48  3431               	rlcf	i2___ftdiv@f1+1,w,c
 11637  004C4A  3636               	rlcf	??i2___ftdiv& (0+255),f,c
 11638  004C4C  E301               	bnc	u785_41
 11639  004C4E  8037               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 11640  004C50                     u785_41:
 11641  004C50  5036               	movf	??i2___ftdiv,w,c
 11642  004C52  6E3D               	movwf	i2___ftdiv@exp,c
 11643  004C54  503D               	movf	i2___ftdiv@exp,w,c
 11644  004C56  A4D8               	btfss	status,2,c
 11645  004C58  D007               	goto	i2l5629
 11646  004C5A  0E00               	movlw	0
 11647  004C5C  6E30               	movwf	?i2___ftdiv,c
 11648  004C5E  0E00               	movlw	0
 11649  004C60  6E31               	movwf	?i2___ftdiv+1,c
 11650  004C62  0E00               	movlw	0
 11651  004C64  6E32               	movwf	?i2___ftdiv+2,c
 11652  004C66  0012               	return	
 11653  004C68                     i2l5629:
 11654  004C68  C035  F036         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 11655  004C6C  6A37               	clrf	(??i2___ftdiv+1)& (0+255),c
 11656  004C6E  6A38               	clrf	(??i2___ftdiv+2)& (0+255),c
 11657  004C70  3434               	rlcf	i2___ftdiv@f2+1,w,c
 11658  004C72  3636               	rlcf	??i2___ftdiv& (0+255),f,c
 11659  004C74  E301               	bnc	u787_41
 11660  004C76  8037               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 11661  004C78                     u787_41:
 11662  004C78  5036               	movf	??i2___ftdiv,w,c
 11663  004C7A  6E3E               	movwf	i2___ftdiv@sign,c
 11664  004C7C  503E               	movf	i2___ftdiv@sign,w,c
 11665  004C7E  A4D8               	btfss	status,2,c
 11666  004C80  D007               	goto	i2l5635
 11667  004C82  0E00               	movlw	0
 11668  004C84  6E30               	movwf	?i2___ftdiv,c
 11669  004C86  0E00               	movlw	0
 11670  004C88  6E31               	movwf	?i2___ftdiv+1,c
 11671  004C8A  0E00               	movlw	0
 11672  004C8C  6E32               	movwf	?i2___ftdiv+2,c
 11673  004C8E  0012               	return	
 11674  004C90                     i2l5635:
 11675  004C90  0E00               	movlw	0
 11676  004C92  6E3A               	movwf	i2___ftdiv@f3,c
 11677  004C94  0E00               	movlw	0
 11678  004C96  6E3B               	movwf	i2___ftdiv@f3+1,c
 11679  004C98  0E00               	movlw	0
 11680  004C9A  6E3C               	movwf	i2___ftdiv@f3+2,c
 11681  004C9C  503E               	movf	i2___ftdiv@sign,w,c
 11682  004C9E  0F89               	addlw	137
 11683  004CA0  5E3D               	subwf	i2___ftdiv@exp,f,c
 11684  004CA2  C032  F03E         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 11685  004CA6  5035               	movf	i2___ftdiv@f2+2,w,c
 11686  004CA8  1A3E               	xorwf	i2___ftdiv@sign,f,c
 11687  004CAA  0E80               	movlw	128
 11688  004CAC  163E               	andwf	i2___ftdiv@sign,f,c
 11689  004CAE  8E31               	bsf	i2___ftdiv@f1+1,7,c
 11690  004CB0  0EFF               	movlw	255
 11691  004CB2  1630               	andwf	i2___ftdiv@f1,f,c
 11692  004CB4  0EFF               	movlw	255
 11693  004CB6  1631               	andwf	i2___ftdiv@f1+1,f,c
 11694  004CB8  0E00               	movlw	0
 11695  004CBA  1632               	andwf	i2___ftdiv@f1+2,f,c
 11696  004CBC  8E34               	bsf	i2___ftdiv@f2+1,7,c
 11697  004CBE  0EFF               	movlw	255
 11698  004CC0  1633               	andwf	i2___ftdiv@f2,f,c
 11699  004CC2  0EFF               	movlw	255
 11700  004CC4  1634               	andwf	i2___ftdiv@f2+1,f,c
 11701  004CC6  0E00               	movlw	0
 11702  004CC8  1635               	andwf	i2___ftdiv@f2+2,f,c
 11703  004CCA  0E18               	movlw	24
 11704  004CCC  6E39               	movwf	i2___ftdiv@cntr,c
 11705  004CCE                     i2l5655:
 11706  004CCE  90D8               	bcf	status,0,c
 11707  004CD0  363A               	rlcf	i2___ftdiv@f3,f,c
 11708  004CD2  363B               	rlcf	i2___ftdiv@f3+1,f,c
 11709  004CD4  363C               	rlcf	i2___ftdiv@f3+2,f,c
 11710  004CD6  5033               	movf	i2___ftdiv@f2,w,c
 11711  004CD8  5C30               	subwf	i2___ftdiv@f1,w,c
 11712  004CDA  5034               	movf	i2___ftdiv@f2+1,w,c
 11713  004CDC  5831               	subwfb	i2___ftdiv@f1+1,w,c
 11714  004CDE  5035               	movf	i2___ftdiv@f2+2,w,c
 11715  004CE0  5832               	subwfb	i2___ftdiv@f1+2,w,c
 11716  004CE2  A0D8               	btfss	status,0,c
 11717  004CE4  D007               	goto	i2l814
 11718  004CE6  5033               	movf	i2___ftdiv@f2,w,c
 11719  004CE8  5E30               	subwf	i2___ftdiv@f1,f,c
 11720  004CEA  5034               	movf	i2___ftdiv@f2+1,w,c
 11721  004CEC  5A31               	subwfb	i2___ftdiv@f1+1,f,c
 11722  004CEE  5035               	movf	i2___ftdiv@f2+2,w,c
 11723  004CF0  5A32               	subwfb	i2___ftdiv@f1+2,f,c
 11724  004CF2  803A               	bsf	i2___ftdiv@f3,0,c
 11725  004CF4                     i2l814:
 11726  004CF4  90D8               	bcf	status,0,c
 11727  004CF6  3630               	rlcf	i2___ftdiv@f1,f,c
 11728  004CF8  3631               	rlcf	i2___ftdiv@f1+1,f,c
 11729  004CFA  3632               	rlcf	i2___ftdiv@f1+2,f,c
 11730  004CFC  2E39               	decfsz	i2___ftdiv@cntr,f,c
 11731  004CFE  D7E7               	goto	i2l5655
 11732  004D00  C03A  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 11733  004D04  C03B  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 11734  004D08  C03C  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 11735  004D0C  C03D  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 11736  004D10  C03E  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 11737  004D14  EC23  F028         	call	i2___ftpack	;wreg free
 11738  004D18  C001  F030         	movff	?i2___ftpack,?i2___ftdiv
 11739  004D1C  C002  F031         	movff	?i2___ftpack+1,?i2___ftdiv+1
 11740  004D20  C003  F032         	movff	?i2___ftpack+2,?i2___ftdiv+2
 11741  004D24  0012               	return	
 11742  004D26                     __end_ofi2___ftdiv:
 11743                           	opt stack 0
 11744                           tosu	equ	0xFFF
 11745                           tosh	equ	0xFFE
 11746                           tosl	equ	0xFFD
 11747                           pclatu	equ	0xFFB
 11748                           pclath	equ	0xFFA
 11749                           tblptru	equ	0xFF8
 11750                           tblptrh	equ	0xFF7
 11751                           tblptrl	equ	0xFF6
 11752                           tablat	equ	0xFF5
 11753                           prodh	equ	0xFF4
 11754                           prodl	equ	0xFF3
 11755                           intcon	equ	0xFF2
 11756                           intcon2	equ	0xFF1
 11757                           intcon3	equ	0xFF0
 11758                           postinc0	equ	0xFEE
 11759                           fsr0h	equ	0xFEA
 11760                           fsr0l	equ	0xFE9
 11761                           wreg	equ	0xFE8
 11762                           fsr1h	equ	0xFE2
 11763                           fsr1l	equ	0xFE1
 11764                           indf2	equ	0xFDF
 11765                           postinc2	equ	0xFDE
 11766                           postdec2	equ	0xFDD
 11767                           fsr2h	equ	0xFDA
 11768                           fsr2l	equ	0xFD9
 11769                           status	equ	0xFD8
 11770                           
 11771 ;; *************** function i2_TMR0_StartTimer *****************
 11772 ;; Defined at:
 11773 ;;		line 45 in file "mcc_generated_files/tmr0.c"
 11774 ;; Parameters:    Size  Location     Type
 11775 ;;		None
 11776 ;; Auto vars:     Size  Location     Type
 11777 ;;		None
 11778 ;; Return value:  Size  Location     Type
 11779 ;;                  1    wreg      void 
 11780 ;; Registers used:
 11781 ;;		None
 11782 ;; Tracked objects:
 11783 ;;		On entry : 0/0
 11784 ;;		On exit  : 0/0
 11785 ;;		Unchanged: 0/0
 11786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11787 ;;      Params:         0       0       0       0       0       0       0
 11788 ;;      Locals:         0       0       0       0       0       0       0
 11789 ;;      Temps:          0       0       0       0       0       0       0
 11790 ;;      Totals:         0       0       0       0       0       0       0
 11791 ;;Total ram usage:        0 bytes
 11792 ;; Hardware stack levels used:    1
 11793 ;; This function calls:
 11794 ;;		Nothing
 11795 ;; This function is called by:
 11796 ;;		_INT0_ISR
 11797 ;; This function uses a non-reentrant model
 11798 ;;
 11799                           
 11800                           	psect	text47
 11801  005B3A                     __ptext47:
 11802                           	opt stack 0
 11803  005B3A                     i2_TMR0_StartTimer:
 11804                           	opt stack 23
 11805                           
 11806                           ;tmr0.c: 48: T0CONbits.TMR0ON = 1;
 11807                           
 11808                           ;incstack = 0
 11809  005B3A  8ED5               	bsf	4053,7,c	;volatile
 11810  005B3C  0012               	return		;funcret
 11811  005B3E                     __end_ofi2_TMR0_StartTimer:
 11812                           	opt stack 0
 11813                           tosu	equ	0xFFF
 11814                           tosh	equ	0xFFE
 11815                           tosl	equ	0xFFD
 11816                           pclatu	equ	0xFFB
 11817                           pclath	equ	0xFFA
 11818                           tblptru	equ	0xFF8
 11819                           tblptrh	equ	0xFF7
 11820                           tblptrl	equ	0xFF6
 11821                           tablat	equ	0xFF5
 11822                           prodh	equ	0xFF4
 11823                           prodl	equ	0xFF3
 11824                           intcon	equ	0xFF2
 11825                           intcon2	equ	0xFF1
 11826                           intcon3	equ	0xFF0
 11827                           postinc0	equ	0xFEE
 11828                           fsr0h	equ	0xFEA
 11829                           fsr0l	equ	0xFE9
 11830                           wreg	equ	0xFE8
 11831                           fsr1h	equ	0xFE2
 11832                           fsr1l	equ	0xFE1
 11833                           indf2	equ	0xFDF
 11834                           postinc2	equ	0xFDE
 11835                           postdec2	equ	0xFDD
 11836                           fsr2h	equ	0xFDA
 11837                           fsr2l	equ	0xFD9
 11838                           status	equ	0xFD8
 11839                           
 11840 ;; *************** function _printf *****************
 11841 ;; Defined at:
 11842 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\printf.c"
 11843 ;; Parameters:    Size  Location     Type
 11844 ;;  f               2   23[BANK0 ] PTR const unsigned char 
 11845 ;;		 -> STR_1(48), 
 11846 ;; Auto vars:     Size  Location     Type
 11847 ;;  pb              4   83[COMRAM] struct __prbuf
 11848 ;;  ap              2   81[COMRAM] PTR void [1]
 11849 ;;		 -> ?_sprintf(2), ?_printf(2), 
 11850 ;; Return value:  Size  Location     Type
 11851 ;;                  2   23[BANK0 ] int 
 11852 ;; Registers used:
 11853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11854 ;; Tracked objects:
 11855 ;;		On entry : 0/0
 11856 ;;		On exit  : 0/0
 11857 ;;		Unchanged: 0/0
 11858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11859 ;;      Params:         0       9       0       0       0       0       0
 11860 ;;      Locals:         6       0       0       0       0       0       0
 11861 ;;      Temps:          0       0       0       0       0       0       0
 11862 ;;      Totals:         6       9       0       0       0       0       0
 11863 ;;Total ram usage:       15 bytes
 11864 ;; Hardware stack levels used:    1
 11865 ;; Hardware stack levels required when called:    4
 11866 ;; This function calls:
 11867 ;;		i2__doprnt
 11868 ;; This function is called by:
 11869 ;;		_INT0_ISR
 11870 ;; This function uses a non-reentrant model
 11871 ;;
 11872                           
 11873                           	psect	text48
 11874  005898                     __ptext48:
 11875                           	opt stack 0
 11876  005898                     _printf:
 11877                           	opt stack 19
 11878                           
 11879                           ;incstack = 0
 11880  005898  0E00               	movlw	0
 11881  00589A  6E54               	movwf	printf@pb,c
 11882  00589C  0E00               	movlw	0
 11883  00589E  6E55               	movwf	printf@pb+1,c
 11884  0058A0  0E1E               	movlw	low i2_putch
 11885  0058A2  6E56               	movwf	printf@pb+2,c
 11886  0058A4  0E5B               	movlw	high i2_putch
 11887  0058A6  6E57               	movwf	printf@pb+3,c
 11888  0058A8  0E79               	movlw	low (?_printf+2)
 11889  0058AA  6E52               	movwf	printf@ap,c
 11890  0058AC  0E00               	movlw	high (?_printf+2)
 11891  0058AE  6E53               	movwf	printf@ap+1,c
 11892                           
 11893                           ;	Return value of _printf is never used
 11894  0058B0  0E54               	movlw	low printf@pb
 11895  0058B2  6E46               	movwf	i2__doprnt@pb,c
 11896  0058B4  0E00               	movlw	high printf@pb
 11897  0058B6  6E47               	movwf	i2__doprnt@pb+1,c
 11898  0058B8  C077  F048         	movff	printf@f,i2__doprnt@f
 11899  0058BC  C078  F049         	movff	printf@f+1,i2__doprnt@f+1
 11900  0058C0  0E52               	movlw	low printf@ap
 11901  0058C2  6E4A               	movwf	i2__doprnt@ap,c
 11902  0058C4  0E00               	movlw	high printf@ap
 11903  0058C6  6E4B               	movwf	i2__doprnt@ap+1,c
 11904  0058C8  ECAD  F00C         	call	i2__doprnt	;wreg free
 11905  0058CC  0012               	return	
 11906  0058CE                     __end_of_printf:
 11907                           	opt stack 0
 11908                           tosu	equ	0xFFF
 11909                           tosh	equ	0xFFE
 11910                           tosl	equ	0xFFD
 11911                           pclatu	equ	0xFFB
 11912                           pclath	equ	0xFFA
 11913                           tblptru	equ	0xFF8
 11914                           tblptrh	equ	0xFF7
 11915                           tblptrl	equ	0xFF6
 11916                           tablat	equ	0xFF5
 11917                           prodh	equ	0xFF4
 11918                           prodl	equ	0xFF3
 11919                           intcon	equ	0xFF2
 11920                           intcon2	equ	0xFF1
 11921                           intcon3	equ	0xFF0
 11922                           postinc0	equ	0xFEE
 11923                           fsr0h	equ	0xFEA
 11924                           fsr0l	equ	0xFE9
 11925                           wreg	equ	0xFE8
 11926                           fsr1h	equ	0xFE2
 11927                           fsr1l	equ	0xFE1
 11928                           indf2	equ	0xFDF
 11929                           postinc2	equ	0xFDE
 11930                           postdec2	equ	0xFDD
 11931                           fsr2h	equ	0xFDA
 11932                           fsr2l	equ	0xFD9
 11933                           status	equ	0xFD8
 11934                           
 11935 ;; *************** function i2__doprnt *****************
 11936 ;; Defined at:
 11937 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 11938 ;; Parameters:    Size  Location     Type
 11939 ;;  pb              2   69[COMRAM] PTR struct __prbuf
 11940 ;;		 -> sprintf@pb(4), printf@pb(4), 
 11941 ;;  f               2   71[COMRAM] PTR const unsigned char 
 11942 ;;		 -> STR_5(11), STR_4(11), STR_3(11), STR_2(11), 
 11943 ;;		 -> STR_1(48), 
 11944 ;;  ap              2   73[COMRAM] PTR PTR void 
 11945 ;;		 -> sprintf@ap(2), printf@ap(2), 
 11946 ;; Auto vars:     Size  Location     Type
 11947 ;;  _doprnt         4    9[BANK0 ] struct .
 11948 ;;  _doprnt         4    5[BANK0 ] unsigned long 
 11949 ;;  _doprnt         3   13[BANK0 ] unsigned long 
 11950 ;;  _doprnt         3    0        PTR const unsigned char 
 11951 ;;  _doprnt         2   20[BANK0 ] int 
 11952 ;;  _doprnt         2   18[BANK0 ] unsigned short 
 11953 ;;  _doprnt         2   16[BANK0 ] int 
 11954 ;;  _doprnt         2    3[BANK0 ] int 
 11955 ;;  _doprnt         2    0        unsigned int 
 11956 ;;  _doprnt         1   22[BANK0 ] char 
 11957 ;;  _doprnt         1    0        unsigned char 
 11958 ;; Return value:  Size  Location     Type
 11959 ;;                  2   69[COMRAM] int 
 11960 ;; Registers used:
 11961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11962 ;; Tracked objects:
 11963 ;;		On entry : 0/0
 11964 ;;		On exit  : 0/0
 11965 ;;		Unchanged: 0/0
 11966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11967 ;;      Params:         6       0       0       0       0       0       0
 11968 ;;      Locals:         0      23       0       0       0       0       0
 11969 ;;      Temps:          6       0       0       0       0       0       0
 11970 ;;      Totals:        12      23       0       0       0       0       0
 11971 ;;Total ram usage:       35 bytes
 11972 ;; Hardware stack levels used:    1
 11973 ;; Hardware stack levels required when called:    3
 11974 ;; This function calls:
 11975 ;;		Absolute function
 11976 ;;		i2___awdiv
 11977 ;;		i2___ftadd
 11978 ;;		i2___ftge
 11979 ;;		i2___ftmul
 11980 ;;		i2___ftneg
 11981 ;;		i2___ftsub
 11982 ;;		i2___fttol
 11983 ;;		i2___lldiv
 11984 ;;		i2___llmod
 11985 ;;		i2___lltoft
 11986 ;;		i2___wmul
 11987 ;;		i2__div_to_l_
 11988 ;;		i2__tdiv_to_l_
 11989 ;;		i2_fround
 11990 ;;		i2_isdigit
 11991 ;;		i2_putch
 11992 ;;		i2_scale
 11993 ;; This function is called by:
 11994 ;;		_printf
 11995 ;; This function uses a non-reentrant model
 11996 ;;
 11997                           
 11998                           	psect	text49
 11999  00195A                     __ptext49:
 12000                           	opt stack 0
 12001  00195A                     i2__doprnt:
 12002                           	opt stack 19
 12003                           
 12004                           ;doprnt.c: 499: signed char c;
 12005                           ;doprnt.c: 501: int width;
 12006                           ;doprnt.c: 504: int prec;
 12007                           ;doprnt.c: 508: unsigned short flag;
 12008                           ;doprnt.c: 515: char d;
 12009                           ;doprnt.c: 516: double fval;
 12010                           ;doprnt.c: 517: int exp;
 12011                           ;doprnt.c: 523: union {
 12012                           ;doprnt.c: 524: unsigned long vd;
 12013                           ;doprnt.c: 525: double integ;
 12014                           ;doprnt.c: 526: } tmpval;
 12015                           ;doprnt.c: 528: unsigned long val;
 12016                           ;doprnt.c: 529: unsigned len;
 12017                           ;doprnt.c: 530: const char * cp;
 12018                           ;doprnt.c: 536: while(c = *f++) {
 12019                           
 12020                           ;incstack = 0
 12021  00195A  EF56  F015         	goto	i2l9345
 12022  00195E                     i2l8957:
 12023                           
 12024                           ;doprnt.c: 538: if(c != '%')
 12025  00195E  0E25               	movlw	37
 12026  001960  0100               	movlb	0	; () banked
 12027  001962  1976               	xorwf	i2__doprnt@c& (0+255),w,b
 12028  001964  B4D8               	btfsc	status,2,c
 12029  001966  D036               	goto	i2l8967
 12030                           
 12031                           ; BSR set to: 0
 12032                           ;doprnt.c: 540: {
 12033                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 12034  001968  EE20 F002          	lfsr	2,2
 12035  00196C  5046               	movf	i2__doprnt@pb,w,c
 12036  00196E  26D9               	addwf	fsr2l,f,c
 12037  001970  5047               	movf	i2__doprnt@pb+1,w,c
 12038  001972  22DA               	addwfc	fsr2h,f,c
 12039  001974  50DE               	movf	postinc2,w,c
 12040  001976  10DE               	iorwf	postinc2,w,c
 12041  001978  B4D8               	btfsc	status,2,c
 12042  00197A  D015               	goto	i2l8963
 12043                           
 12044                           ; BSR set to: 0
 12045  00197C  EE20 F002          	lfsr	2,2
 12046  001980  5046               	movf	i2__doprnt@pb,w,c
 12047  001982  26D9               	addwf	fsr2l,f,c
 12048  001984  5047               	movf	i2__doprnt@pb+1,w,c
 12049  001986  22DA               	addwfc	fsr2h,f,c
 12050  001988  D802               	call	i2u1469_48
 12051  00198A  EF56  F015         	goto	i2l9345
 12052  00198E                     i2u1469_48:
 12053  00198E  0005               	push	
 12054  001990  6EFA               	movwf	pclath,c
 12055  001992  50DE               	movf	postinc2,w,c
 12056  001994  6EFD               	movwf	tosl,c
 12057  001996  50DE               	movf	postinc2,w,c
 12058  001998  6EFE               	movwf	tosh,c
 12059  00199A  50F8               	movf	tblptru,w,c
 12060  00199C  6EFF               	movwf	tosu,c
 12061  00199E  50FA               	movf	pclath,w,c
 12062  0019A0  0100               	movlb	0	; () banked
 12063  0019A2  5176               	movf	i2__doprnt@c& (0+255),w,b
 12064  0019A4  0012               	return		;indir
 12065  0019A6                     i2l8963:
 12066  0019A6  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12067  0019AA  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12068  0019AE  CFDE F04C          	movff	postinc2,??i2__doprnt
 12069  0019B2  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12070  0019B6  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12071  0019BA  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12072  0019BE  C076  FFDF         	movff	i2__doprnt@c,indf2
 12073  0019C2  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12074  0019C6  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12075  0019CA  2ADE               	incf	postinc2,f,c
 12076  0019CC  0E00               	movlw	0
 12077  0019CE  22DD               	addwfc	postdec2,f,c
 12078                           
 12079                           ;doprnt.c: 542: continue;
 12080  0019D0  EF56  F015         	goto	i2l9345
 12081  0019D4                     i2l8967:
 12082                           
 12083                           ;doprnt.c: 543: }
 12084                           ;doprnt.c: 546: width = 0;
 12085  0019D4  0E00               	movlw	0
 12086  0019D6  0100               	movlb	0	; () banked
 12087  0019D8  6F71               	movwf	(i2__doprnt@width+1)& (0+255),b
 12088  0019DA  0E00               	movlw	0
 12089  0019DC  6F70               	movwf	i2__doprnt@width& (0+255),b
 12090                           
 12091                           ;doprnt.c: 548: flag = 0;
 12092  0019DE  0E00               	movlw	0
 12093  0019E0  0100               	movlb	0	; () banked
 12094  0019E2  6F73               	movwf	(i2__doprnt@flag+1)& (0+255),b
 12095  0019E4  0E00               	movlw	0
 12096  0019E6  6F72               	movwf	i2__doprnt@flag& (0+255),b
 12097                           
 12098                           ; BSR set to: 0
 12099                           ;doprnt.c: 551: switch(*f) {
 12100                           
 12101                           ;doprnt.c: 550: for(;;) {
 12102  0019E8  D004               	goto	i2l8973
 12103  0019EA                     i2l8969:
 12104                           
 12105                           ;doprnt.c: 580: flag |= 0x04;
 12106  0019EA  0100               	movlb	0	; () banked
 12107  0019EC  8572               	bsf	i2__doprnt@flag& (0+255),2,b
 12108                           
 12109                           ;doprnt.c: 581: f++;
 12110  0019EE  4A48               	infsnz	i2__doprnt@f,f,c
 12111  0019F0  2A49               	incf	i2__doprnt@f+1,f,c
 12112  0019F2                     i2l8973:
 12113  0019F2  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12114  0019F6  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12115  0019FA                     	if	0	;tblptru may be non-zero
 12116  0019FA                     	endif
 12117  0019FA                     	if	0	;tblptru may be non-zero
 12118  0019FA                     	endif
 12119  0019FA  0008               	tblrd		*
 12120  0019FC  50F5               	movf	tablat,w,c
 12121                           
 12122                           ; Switch size 1, requested type "space"
 12123                           ; Number of cases is 1, Range of values is 48 to 48
 12124                           ; switch strategies available:
 12125                           ; Name         Instructions Cycles
 12126                           ; simple_byte            4     3 (average)
 12127                           ;	Chosen strategy is simple_byte
 12128  0019FE  0A30               	xorlw	48	; case 48
 12129  001A00  B4D8               	btfsc	status,2,c
 12130  001A02  D7F3               	goto	i2l8969
 12131                           
 12132                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 12133                           
 12134                           ;doprnt.c: 586: }
 12135                           
 12136                           ;doprnt.c: 585: break;
 12137  001A04  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12138  001A08  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12139  001A0C                     	if	0	;tblptru may be non-zero
 12140  001A0C                     	endif
 12141  001A0C                     	if	0	;tblptru may be non-zero
 12142  001A0C                     	endif
 12143  001A0C  0008               	tblrd		*
 12144  001A0E  50F5               	movf	tablat,w,c
 12145  001A10  EC34  F02D         	call	i2_isdigit
 12146  001A14  A0D8               	btfss	status,0,c
 12147  001A16  D035               	goto	i2l8987
 12148                           
 12149                           ;doprnt.c: 598: width = 0;
 12150  001A18  0E00               	movlw	0
 12151  001A1A  0100               	movlb	0	; () banked
 12152  001A1C  6F71               	movwf	(i2__doprnt@width+1)& (0+255),b
 12153  001A1E  0E00               	movlw	0
 12154  001A20  6F70               	movwf	i2__doprnt@width& (0+255),b
 12155  001A22                     i2l8979:
 12156                           
 12157                           ;doprnt.c: 600: width *= 10;
 12158  001A22  C070  F00F         	movff	i2__doprnt@width,i2___wmul@multiplier
 12159  001A26  C071  F010         	movff	i2__doprnt@width+1,i2___wmul@multiplier+1
 12160  001A2A  0E00               	movlw	0
 12161  001A2C  6E12               	movwf	i2___wmul@multiplicand+1,c
 12162  001A2E  0E0A               	movlw	10
 12163  001A30  6E11               	movwf	i2___wmul@multiplicand,c
 12164  001A32  ECEE  F02C         	call	i2___wmul	;wreg free
 12165  001A36  C00F  F070         	movff	?i2___wmul,i2__doprnt@width
 12166  001A3A  C010  F071         	movff	?i2___wmul+1,i2__doprnt@width+1
 12167                           
 12168                           ;doprnt.c: 601: width += *f++ - '0';
 12169  001A3E  0ED0               	movlw	208
 12170  001A40  6E4C               	movwf	??i2__doprnt& (0+255),c
 12171  001A42  0EFF               	movlw	255
 12172  001A44  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 12173  001A46  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12174  001A4A  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12175  001A4E                     	if	0	;tblptru may be non-zero
 12176  001A4E                     	endif
 12177  001A4E                     	if	0	;tblptru may be non-zero
 12178  001A4E                     	endif
 12179  001A4E  0008               	tblrd		*
 12180  001A50  50F5               	movf	tablat,w,c
 12181  001A52  6E4E               	movwf	(??i2__doprnt+2)& (0+255),c
 12182  001A54  6A4F               	clrf	(??i2__doprnt+3)& (0+255),c
 12183  001A56  504C               	movf	??i2__doprnt,w,c
 12184  001A58  264E               	addwf	??i2__doprnt+2,f,c
 12185  001A5A  504D               	movf	??i2__doprnt+1,w,c
 12186  001A5C  224F               	addwfc	??i2__doprnt+3,f,c
 12187  001A5E  504E               	movf	??i2__doprnt+2,w,c
 12188  001A60  0100               	movlb	0	; () banked
 12189  001A62  2770               	addwf	i2__doprnt@width& (0+255),f,b
 12190  001A64  504F               	movf	??i2__doprnt+3,w,c
 12191  001A66  0100               	movlb	0	; () banked
 12192  001A68  2371               	addwfc	(i2__doprnt@width+1)& (0+255),f,b
 12193                           
 12194                           ; BSR set to: 0
 12195  001A6A  4A48               	infsnz	i2__doprnt@f,f,c
 12196  001A6C  2A49               	incf	i2__doprnt@f+1,f,c
 12197                           
 12198                           ; BSR set to: 0
 12199                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 12200  001A6E  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12201  001A72  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12202  001A76                     	if	0	;tblptru may be non-zero
 12203  001A76                     	endif
 12204  001A76                     	if	0	;tblptru may be non-zero
 12205  001A76                     	endif
 12206  001A76  0008               	tblrd		*
 12207  001A78  50F5               	movf	tablat,w,c
 12208  001A7A  EC34  F02D         	call	i2_isdigit
 12209  001A7E  B0D8               	btfsc	status,0,c
 12210  001A80  D7D0               	goto	i2l8979
 12211  001A82                     i2l8987:
 12212                           
 12213                           ;doprnt.c: 608: }
 12214                           ;doprnt.c: 611: if(*f == '.') {
 12215  001A82  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12216  001A86  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12217  001A8A                     	if	0	;tblptru may be non-zero
 12218  001A8A                     	endif
 12219  001A8A                     	if	0	;tblptru may be non-zero
 12220  001A8A                     	endif
 12221  001A8A  0008               	tblrd		*
 12222  001A8C  50F5               	movf	tablat,w,c
 12223  001A8E  0A2E               	xorlw	46
 12224  001A90  A4D8               	btfss	status,2,c
 12225  001A92  D032               	goto	i2l8999
 12226                           
 12227                           ;doprnt.c: 612: flag |= 0x4000;
 12228  001A94  0100               	movlb	0	; () banked
 12229  001A96  8D73               	bsf	(i2__doprnt@flag+1)& (0+255),6,b
 12230                           
 12231                           ;doprnt.c: 613: f++;
 12232  001A98  4A48               	infsnz	i2__doprnt@f,f,c
 12233  001A9A  2A49               	incf	i2__doprnt@f+1,f,c
 12234                           
 12235                           ; BSR set to: 0
 12236                           ;doprnt.c: 620: {
 12237                           ;doprnt.c: 621: prec = 0;
 12238  001A9C  0E00               	movlw	0
 12239  001A9E  0100               	movlb	0	; () banked
 12240  001AA0  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 12241  001AA2  0E00               	movlw	0
 12242  001AA4  6F74               	movwf	i2__doprnt@prec& (0+255),b
 12243                           
 12244                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 12245  001AA6  D01D               	goto	i2l8997
 12246  001AA8                     i2l8993:
 12247                           
 12248                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 12249  001AA8  C074  F00F         	movff	i2__doprnt@prec,i2___wmul@multiplier
 12250  001AAC  C075  F010         	movff	i2__doprnt@prec+1,i2___wmul@multiplier+1
 12251  001AB0  0E00               	movlw	0
 12252  001AB2  6E12               	movwf	i2___wmul@multiplicand+1,c
 12253  001AB4  0E0A               	movlw	10
 12254  001AB6  6E11               	movwf	i2___wmul@multiplicand,c
 12255  001AB8  ECEE  F02C         	call	i2___wmul	;wreg free
 12256  001ABC  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12257  001AC0  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12258  001AC4                     	if	0	;tblptru may be non-zero
 12259  001AC4                     	endif
 12260  001AC4                     	if	0	;tblptru may be non-zero
 12261  001AC4                     	endif
 12262  001AC4  0008               	tblrd		*
 12263  001AC6  50F5               	movf	tablat,w,c
 12264  001AC8  260F               	addwf	?i2___wmul,f,c
 12265  001ACA  0E00               	movlw	0
 12266  001ACC  2210               	addwfc	?i2___wmul+1,f,c
 12267  001ACE  0ED0               	movlw	208
 12268  001AD0  240F               	addwf	?i2___wmul,w,c
 12269  001AD2  0100               	movlb	0	; () banked
 12270  001AD4  6F74               	movwf	i2__doprnt@prec& (0+255),b
 12271  001AD6  0EFF               	movlw	255
 12272  001AD8  2010               	addwfc	?i2___wmul+1,w,c
 12273  001ADA  0100               	movlb	0	; () banked
 12274  001ADC  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 12275                           
 12276                           ; BSR set to: 0
 12277  001ADE  4A48               	infsnz	i2__doprnt@f,f,c
 12278  001AE0  2A49               	incf	i2__doprnt@f+1,f,c
 12279  001AE2                     i2l8997:
 12280                           
 12281                           ; BSR set to: 0
 12282  001AE2  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12283  001AE6  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12284  001AEA                     	if	0	;tblptru may be non-zero
 12285  001AEA                     	endif
 12286  001AEA                     	if	0	;tblptru may be non-zero
 12287  001AEA                     	endif
 12288  001AEA  0008               	tblrd		*
 12289  001AEC  50F5               	movf	tablat,w,c
 12290  001AEE  EC34  F02D         	call	i2_isdigit
 12291  001AF2  A0D8               	btfss	status,0,c
 12292  001AF4  D012               	goto	i2l9011
 12293  001AF6  D7D8               	goto	i2l8993
 12294  001AF8                     i2l8999:
 12295                           
 12296                           ;doprnt.c: 626: prec = 0;
 12297  001AF8  0E00               	movlw	0
 12298  001AFA  0100               	movlb	0	; () banked
 12299  001AFC  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 12300  001AFE  0E00               	movlw	0
 12301  001B00  6F74               	movwf	i2__doprnt@prec& (0+255),b
 12302                           
 12303                           ; BSR set to: 0
 12304                           ;doprnt.c: 628: flag |= 0x1000;
 12305  001B02  0100               	movlb	0	; () banked
 12306  001B04  8973               	bsf	(i2__doprnt@flag+1)& (0+255),4,b
 12307                           
 12308                           ; BSR set to: 0
 12309                           ;doprnt.c: 635: switch(c = *f++) {
 12310                           
 12311                           ;doprnt.c: 630: }
 12312                           ;doprnt.c: 633: loop:
 12313                           
 12314                           ; BSR set to: 0
 12315  001B06  D009               	goto	i2l9011
 12316  001B08                     i2l9003:
 12317                           
 12318                           ; BSR set to: 0
 12319                           ;doprnt.c: 643: flag |= 0x10;
 12320  001B08  0100               	movlb	0	; () banked
 12321  001B0A  8972               	bsf	i2__doprnt@flag& (0+255),4,b
 12322                           
 12323                           ;doprnt.c: 644: goto loop;
 12324  001B0C  D006               	goto	i2l9011
 12325  001B0E                     i2l9005:
 12326                           
 12327                           ; BSR set to: 0
 12328                           ;doprnt.c: 663: flag |= 0x400;
 12329  001B0E  0100               	movlb	0	; () banked
 12330  001B10  8573               	bsf	(i2__doprnt@flag+1)& (0+255),2,b
 12331                           
 12332                           ; BSR set to: 0
 12333                           ;doprnt.c: 698: case 'i':
 12334                           ;doprnt.c: 699: break;
 12335                           
 12336                           ; BSR set to: 0
 12337                           
 12338                           ;doprnt.c: 697: case 'd':
 12339                           
 12340                           ;doprnt.c: 664: break;
 12341  001B12  D023               	goto	i2l9013
 12342  001B14                     i2l9007:
 12343                           
 12344                           ; BSR set to: 0
 12345                           ;doprnt.c: 818: flag |= 0x40;
 12346  001B14  0100               	movlb	0	; () banked
 12347  001B16  8D72               	bsf	i2__doprnt@flag& (0+255),6,b
 12348                           
 12349                           ; BSR set to: 0
 12350                           ;doprnt.c: 822: }
 12351                           
 12352                           ;doprnt.c: 819: break;
 12353  001B18  D020               	goto	i2l9013
 12354  001B1A                     i2l9011:
 12355  001B1A  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12356  001B1E  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12357  001B22  4A48               	infsnz	i2__doprnt@f,f,c
 12358  001B24  2A49               	incf	i2__doprnt@f+1,f,c
 12359  001B26                     	if	0	;tblptru may be non-zero
 12360  001B26                     	endif
 12361  001B26                     	if	0	;tblptru may be non-zero
 12362  001B26                     	endif
 12363  001B26  0008               	tblrd		*
 12364  001B28  CFF5 F076          	movff	tablat,i2__doprnt@c
 12365  001B2C  0100               	movlb	0	; () banked
 12366  001B2E  5176               	movf	i2__doprnt@c& (0+255),w,b
 12367                           
 12368                           ; Switch size 1, requested type "space"
 12369                           ; Number of cases is 6, Range of values is 0 to 117
 12370                           ; switch strategies available:
 12371                           ; Name         Instructions Cycles
 12372                           ; simple_byte           19    10 (average)
 12373                           ;	Chosen strategy is simple_byte
 12374  001B30  0A00               	xorlw	0	; case 0
 12375  001B32  B4D8               	btfsc	status,2,c
 12376  001B34  EF64  F015         	goto	i2l9347
 12377  001B38  0A64               	xorlw	100	; case 100
 12378  001B3A  B4D8               	btfsc	status,2,c
 12379  001B3C  D00E               	goto	i2l9013
 12380  001B3E  0A02               	xorlw	2	; case 102
 12381  001B40  B4D8               	btfsc	status,2,c
 12382  001B42  D7E5               	goto	i2l9005
 12383  001B44  0A0F               	xorlw	15	; case 105
 12384  001B46  B4D8               	btfsc	status,2,c
 12385  001B48  D008               	goto	i2l9013
 12386  001B4A  0A05               	xorlw	5	; case 108
 12387  001B4C  B4D8               	btfsc	status,2,c
 12388  001B4E  D7DC               	goto	i2l9003
 12389  001B50  0A19               	xorlw	25	; case 117
 12390  001B52  B4D8               	btfsc	status,2,c
 12391  001B54  D7DF               	goto	i2l9007
 12392  001B56  EF56  F015         	goto	i2l9345
 12393  001B5A                     i2l9013:
 12394                           
 12395                           ; BSR set to: 0
 12396                           ;doprnt.c: 825: if(flag & (0x700)) {
 12397  001B5A  0E07               	movlw	7
 12398  001B5C  0100               	movlb	0	; () banked
 12399  001B5E  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 12400  001B60  B4D8               	btfsc	status,2,c
 12401  001B62  EFAF  F012         	goto	i2l403
 12402                           
 12403                           ; BSR set to: 0
 12404                           ;doprnt.c: 827: if(flag & 0x1000)
 12405  001B66  0100               	movlb	0	; () banked
 12406  001B68  A973               	btfss	(i2__doprnt@flag+1)& (0+255),4,b
 12407  001B6A  D005               	goto	i2l9019
 12408                           
 12409                           ; BSR set to: 0
 12410                           ;doprnt.c: 829: prec = 6;
 12411  001B6C  0E00               	movlw	0
 12412  001B6E  0100               	movlb	0	; () banked
 12413  001B70  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 12414  001B72  0E06               	movlw	6
 12415  001B74  6F74               	movwf	i2__doprnt@prec& (0+255),b
 12416  001B76                     i2l9019:
 12417                           
 12418                           ; BSR set to: 0
 12419                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 12420  001B76  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 12421  001B7A  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 12422  001B7E  CFDF F04C          	movff	indf2,??i2__doprnt
 12423  001B82  0E03               	movlw	3
 12424  001B84  26DE               	addwf	postinc2,f,c
 12425  001B86  CFDF F04D          	movff	indf2,??i2__doprnt+1
 12426  001B8A  0E00               	movlw	0
 12427  001B8C  22DD               	addwfc	postdec2,f,c
 12428  001B8E  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12429  001B92  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12430  001B96  CFDE F06D          	movff	postinc2,i2__doprnt@fval
 12431  001B9A  CFDE F06E          	movff	postinc2,i2__doprnt@fval+1
 12432  001B9E  CFDD F06F          	movff	postdec2,i2__doprnt@fval+2
 12433                           
 12434                           ; BSR set to: 0
 12435                           ;doprnt.c: 831: if(fval < 0.0) {
 12436  001BA2  0100               	movlb	0	; () banked
 12437  001BA4  AF6F               	btfss	(i2__doprnt@fval+2)& (0+255),7,b
 12438  001BA6  D011               	goto	i2l9027
 12439                           
 12440                           ; BSR set to: 0
 12441                           ;doprnt.c: 832: fval = -fval;
 12442  001BA8  C06D  F001         	movff	i2__doprnt@fval,i2___ftneg@f1
 12443  001BAC  C06E  F002         	movff	i2__doprnt@fval+1,i2___ftneg@f1+1
 12444  001BB0  C06F  F003         	movff	i2__doprnt@fval+2,i2___ftneg@f1+2
 12445  001BB4  EC01  F02D         	call	i2___ftneg	;wreg free
 12446  001BB8  C001  F06D         	movff	?i2___ftneg,i2__doprnt@fval
 12447  001BBC  C002  F06E         	movff	?i2___ftneg+1,i2__doprnt@fval+1
 12448  001BC0  C003  F06F         	movff	?i2___ftneg+2,i2__doprnt@fval+2
 12449                           
 12450                           ;doprnt.c: 833: flag |= 0x03;
 12451  001BC4  0E03               	movlw	3
 12452  001BC6  0100               	movlb	0	; () banked
 12453  001BC8  1372               	iorwf	i2__doprnt@flag& (0+255),f,b
 12454  001BCA                     i2l9027:
 12455                           
 12456                           ; BSR set to: 0
 12457                           ;doprnt.c: 834: }
 12458                           ;doprnt.c: 835: exp = 0;
 12459  001BCA  0E00               	movlw	0
 12460  001BCC  0100               	movlb	0	; () banked
 12461  001BCE  6F64               	movwf	(i2__doprnt@exp+1)& (0+255),b
 12462  001BD0  0E00               	movlw	0
 12463  001BD2  6F63               	movwf	i2__doprnt@exp& (0+255),b
 12464                           
 12465                           ; BSR set to: 0
 12466                           ;doprnt.c: 836: if( fval!=0) {
 12467  001BD4  0100               	movlb	0	; () banked
 12468  001BD6  516D               	movf	i2__doprnt@fval& (0+255),w,b
 12469  001BD8  0100               	movlb	0	; () banked
 12470  001BDA  116E               	iorwf	(i2__doprnt@fval+1)& (0+255),w,b
 12471  001BDC  0100               	movlb	0	; () banked
 12472  001BDE  116F               	iorwf	(i2__doprnt@fval+2)& (0+255),w,b
 12473  001BE0  B4D8               	btfsc	status,2,c
 12474  001BE2  D08B               	goto	i2l9055
 12475                           
 12476                           ; BSR set to: 0
 12477                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 12478  001BE4  0E82               	movlw	130
 12479  001BE6  6E4C               	movwf	??i2__doprnt& (0+255),c
 12480  001BE8  0EFF               	movlw	255
 12481  001BEA  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 12482  001BEC  C06D  F04E         	movff	i2__doprnt@fval,??i2__doprnt+2
 12483  001BF0  C06E  F04F         	movff	i2__doprnt@fval+1,??i2__doprnt+3
 12484  001BF4  C06F  F050         	movff	i2__doprnt@fval+2,??i2__doprnt+4
 12485  001BF8  C070  F051         	movff	i2__doprnt@fval+3,??i2__doprnt+5
 12486  001BFC  0E10               	movlw	16
 12487  001BFE  D005               	goto	i2u1478_40
 12488  001C00                     i2u1478_45:
 12489  001C00  90D8               	bcf	status,0,c
 12490  001C02  3251               	rrcf	??i2__doprnt+5,f,c
 12491  001C04  3250               	rrcf	??i2__doprnt+4,f,c
 12492  001C06  324F               	rrcf	??i2__doprnt+3,f,c
 12493  001C08  324E               	rrcf	??i2__doprnt+2,f,c
 12494  001C0A                     i2u1478_40:
 12495  001C0A  2EE8               	decfsz	wreg,f,c
 12496  001C0C  D7F9               	goto	i2u1478_45
 12497  001C0E  504E               	movf	??i2__doprnt+2,w,c
 12498  001C10  244C               	addwf	??i2__doprnt,w,c
 12499  001C12  0100               	movlb	0	; () banked
 12500  001C14  6F63               	movwf	i2__doprnt@exp& (0+255),b
 12501  001C16  0E00               	movlw	0
 12502  001C18  204D               	addwfc	??i2__doprnt+1,w,c
 12503  001C1A  0100               	movlb	0	; () banked
 12504  001C1C  6F64               	movwf	(i2__doprnt@exp+1)& (0+255),b
 12505                           
 12506                           ; BSR set to: 0
 12507                           ;doprnt.c: 838: exp--;
 12508  001C1E  0100               	movlb	0	; () banked
 12509  001C20  0763               	decf	i2__doprnt@exp& (0+255),f,b
 12510  001C22  A0D8               	btfss	status,0,c
 12511  001C24  0764               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 12512                           
 12513                           ; BSR set to: 0
 12514                           ;doprnt.c: 839: exp *= 3;
 12515  001C26  C063  F00F         	movff	i2__doprnt@exp,i2___wmul@multiplier
 12516  001C2A  C064  F010         	movff	i2__doprnt@exp+1,i2___wmul@multiplier+1
 12517  001C2E  0E00               	movlw	0
 12518  001C30  6E12               	movwf	i2___wmul@multiplicand+1,c
 12519  001C32  0E03               	movlw	3
 12520  001C34  6E11               	movwf	i2___wmul@multiplicand,c
 12521  001C36  ECEE  F02C         	call	i2___wmul	;wreg free
 12522  001C3A  C00F  F063         	movff	?i2___wmul,i2__doprnt@exp
 12523  001C3E  C010  F064         	movff	?i2___wmul+1,i2__doprnt@exp+1
 12524                           
 12525                           ;doprnt.c: 840: exp /= 10;
 12526  001C42  C063  F007         	movff	i2__doprnt@exp,i2___awdiv@dividend
 12527  001C46  C064  F008         	movff	i2__doprnt@exp+1,i2___awdiv@dividend+1
 12528  001C4A  0E00               	movlw	0
 12529  001C4C  6E0A               	movwf	i2___awdiv@divisor+1,c
 12530  001C4E  0E0A               	movlw	10
 12531  001C50  6E09               	movwf	i2___awdiv@divisor,c
 12532  001C52  EC60  F029         	call	i2___awdiv	;wreg free
 12533  001C56  C007  F063         	movff	?i2___awdiv,i2__doprnt@exp
 12534  001C5A  C008  F064         	movff	?i2___awdiv+1,i2__doprnt@exp+1
 12535                           
 12536                           ;doprnt.c: 841: if(exp < 0)
 12537  001C5E  0100               	movlb	0	; () banked
 12538  001C60  AF64               	btfss	(i2__doprnt@exp+1)& (0+255),7,b
 12539  001C62  D004               	goto	i2l9043
 12540                           
 12541                           ; BSR set to: 0
 12542                           ;doprnt.c: 842: exp--;
 12543  001C64  0100               	movlb	0	; () banked
 12544  001C66  0763               	decf	i2__doprnt@exp& (0+255),f,b
 12545  001C68  A0D8               	btfss	status,0,c
 12546  001C6A  0764               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 12547  001C6C                     i2l9043:
 12548                           
 12549                           ; BSR set to: 0
 12550                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 12551  001C6C  0100               	movlb	0	; () banked
 12552  001C6E  5163               	movf	i2__doprnt@exp& (0+255),w,b
 12553  001C70  0800               	sublw	0
 12554  001C72  ECC0  F017         	call	i2_scale
 12555  001C76  C030  F069         	movff	?i2_scale,i2__doprnt@tmpval
 12556  001C7A  C031  F06A         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 12557  001C7E  C032  F06B         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 12558                           
 12559                           ;doprnt.c: 847: tmpval.integ *= fval;
 12560  001C82  C069  F021         	movff	i2__doprnt@tmpval,i2___ftmul@f1
 12561  001C86  C06A  F022         	movff	i2__doprnt@tmpval+1,i2___ftmul@f1+1
 12562  001C8A  C06B  F023         	movff	i2__doprnt@tmpval+2,i2___ftmul@f1+2
 12563  001C8E  C06D  F024         	movff	i2__doprnt@fval,i2___ftmul@f2
 12564  001C92  C06E  F025         	movff	i2__doprnt@fval+1,i2___ftmul@f2+1
 12565  001C96  C06F  F026         	movff	i2__doprnt@fval+2,i2___ftmul@f2+2
 12566  001C9A  EC2C  F025         	call	i2___ftmul	;wreg free
 12567  001C9E  C021  F069         	movff	?i2___ftmul,i2__doprnt@tmpval
 12568  001CA2  C022  F06A         	movff	?i2___ftmul+1,i2__doprnt@tmpval+1
 12569  001CA6  C023  F06B         	movff	?i2___ftmul+2,i2__doprnt@tmpval+2
 12570                           
 12571                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 12572  001CAA  C069  F001         	movff	i2__doprnt@tmpval,i2___ftge@ff1
 12573  001CAE  C06A  F002         	movff	i2__doprnt@tmpval+1,i2___ftge@ff1+1
 12574  001CB2  C06B  F003         	movff	i2__doprnt@tmpval+2,i2___ftge@ff1+2
 12575  001CB6  0E00               	movlw	0
 12576  001CB8  6E04               	movwf	i2___ftge@ff2,c
 12577  001CBA  0E80               	movlw	128
 12578  001CBC  6E05               	movwf	i2___ftge@ff2+1,c
 12579  001CBE  0E3F               	movlw	63
 12580  001CC0  6E06               	movwf	i2___ftge@ff2+2,c
 12581  001CC2  EC18  F029         	call	i2___ftge	;wreg free
 12582  001CC6  B0D8               	btfsc	status,0,c
 12583  001CC8  D005               	goto	i2l9051
 12584                           
 12585                           ;doprnt.c: 849: exp--;
 12586  001CCA  0100               	movlb	0	; () banked
 12587  001CCC  0763               	decf	i2__doprnt@exp& (0+255),f,b
 12588  001CCE  A0D8               	btfss	status,0,c
 12589  001CD0  0764               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 12590  001CD2  D013               	goto	i2l9055
 12591  001CD4                     i2l9051:
 12592                           
 12593                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 12594  001CD4  C069  F001         	movff	i2__doprnt@tmpval,i2___ftge@ff1
 12595  001CD8  C06A  F002         	movff	i2__doprnt@tmpval+1,i2___ftge@ff1+1
 12596  001CDC  C06B  F003         	movff	i2__doprnt@tmpval+2,i2___ftge@ff1+2
 12597  001CE0  0E00               	movlw	0
 12598  001CE2  6E04               	movwf	i2___ftge@ff2,c
 12599  001CE4  0E20               	movlw	32
 12600  001CE6  6E05               	movwf	i2___ftge@ff2+1,c
 12601  001CE8  0E41               	movlw	65
 12602  001CEA  6E06               	movwf	i2___ftge@ff2+2,c
 12603  001CEC  EC18  F029         	call	i2___ftge	;wreg free
 12604  001CF0  A0D8               	btfss	status,0,c
 12605  001CF2  D003               	goto	i2l9055
 12606                           
 12607                           ;doprnt.c: 851: exp++;
 12608  001CF4  0100               	movlb	0	; () banked
 12609  001CF6  4B63               	infsnz	i2__doprnt@exp& (0+255),f,b
 12610  001CF8  2B64               	incf	(i2__doprnt@exp+1)& (0+255),f,b
 12611  001CFA                     i2l9055:
 12612                           
 12613                           ;doprnt.c: 852: }
 12614                           ;doprnt.c: 1112: if(prec <= 12)
 12615  001CFA  0100               	movlb	0	; () banked
 12616  001CFC  BF75               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 12617  001CFE  D008               	goto	i2l9057
 12618  001D00  0100               	movlb	0	; () banked
 12619  001D02  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 12620  001D04  E11D               	bnz	i2l9059
 12621  001D06  0E0D               	movlw	13
 12622  001D08  0100               	movlb	0	; () banked
 12623  001D0A  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 12624  001D0C  B0D8               	btfsc	status,0,c
 12625  001D0E  D018               	goto	i2l9059
 12626  001D10                     i2l9057:
 12627                           
 12628                           ; BSR set to: 0
 12629                           ;doprnt.c: 1113: fval += fround(prec);
 12630  001D10  C06D  F015         	movff	i2__doprnt@fval,i2___ftadd@f1
 12631  001D14  C06E  F016         	movff	i2__doprnt@fval+1,i2___ftadd@f1+1
 12632  001D18  C06F  F017         	movff	i2__doprnt@fval+2,i2___ftadd@f1+2
 12633  001D1C  0100               	movlb	0	; () banked
 12634  001D1E  5174               	movf	i2__doprnt@prec& (0+255),w,b
 12635  001D20  EC42  F01C         	call	i2_fround
 12636  001D24  C030  F018         	movff	?i2_fround,i2___ftadd@f2
 12637  001D28  C031  F019         	movff	?i2_fround+1,i2___ftadd@f2+1
 12638  001D2C  C032  F01A         	movff	?i2_fround+2,i2___ftadd@f2+2
 12639  001D30  EC19  F01F         	call	i2___ftadd	;wreg free
 12640  001D34  C015  F06D         	movff	?i2___ftadd,i2__doprnt@fval
 12641  001D38  C016  F06E         	movff	?i2___ftadd+1,i2__doprnt@fval+1
 12642  001D3C  C017  F06F         	movff	?i2___ftadd+2,i2__doprnt@fval+2
 12643  001D40                     i2l9059:
 12644                           
 12645                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 12646  001D40  0100               	movlb	0	; () banked
 12647  001D42  BF64               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 12648  001D44  D008               	goto	i2l9061
 12649  001D46  0100               	movlb	0	; () banked
 12650  001D48  5164               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 12651  001D4A  E126               	bnz	i2l9067
 12652  001D4C  0E0A               	movlw	10
 12653  001D4E  0100               	movlb	0	; () banked
 12654  001D50  5D63               	subwf	i2__doprnt@exp& (0+255),w,b
 12655  001D52  B0D8               	btfsc	status,0,c
 12656  001D54  D021               	goto	i2l9067
 12657  001D56                     i2l9061:
 12658                           
 12659                           ; BSR set to: 0
 12660  001D56  0100               	movlb	0	; () banked
 12661  001D58  516D               	movf	i2__doprnt@fval& (0+255),w,b
 12662  001D5A  0100               	movlb	0	; () banked
 12663  001D5C  116E               	iorwf	(i2__doprnt@fval+1)& (0+255),w,b
 12664  001D5E  0100               	movlb	0	; () banked
 12665  001D60  116F               	iorwf	(i2__doprnt@fval+2)& (0+255),w,b
 12666  001D62  B4D8               	btfsc	status,2,c
 12667  001D64  D05B               	goto	i2l9081
 12668                           
 12669                           ; BSR set to: 0
 12670  001D66  C06D  F037         	movff	i2__doprnt@fval,i2___fttol@f1
 12671  001D6A  C06E  F038         	movff	i2__doprnt@fval+1,i2___fttol@f1+1
 12672  001D6E  C06F  F039         	movff	i2__doprnt@fval+2,i2___fttol@f1+2
 12673  001D72  ECA6  F025         	call	i2___fttol	;wreg free
 12674  001D76  5037               	movf	?i2___fttol,w,c
 12675  001D78  1038               	iorwf	?i2___fttol+1,w,c
 12676  001D7A  1039               	iorwf	?i2___fttol+2,w,c
 12677  001D7C  103A               	iorwf	?i2___fttol+3,w,c
 12678  001D7E  A4D8               	btfss	status,2,c
 12679  001D80  D04D               	goto	i2l9081
 12680  001D82  0100               	movlb	0	; () banked
 12681  001D84  BF64               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 12682  001D86  D04A               	goto	i2l9081
 12683  001D88  0100               	movlb	0	; () banked
 12684  001D8A  5164               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 12685  001D8C  E105               	bnz	i2l9067
 12686  001D8E  0E02               	movlw	2
 12687  001D90  0100               	movlb	0	; () banked
 12688  001D92  5D63               	subwf	i2__doprnt@exp& (0+255),w,b
 12689  001D94  A0D8               	btfss	status,0,c
 12690  001D96  D042               	goto	i2l9081
 12691  001D98                     i2l9067:
 12692                           
 12693                           ; BSR set to: 0
 12694                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 12695  001D98  C069  F001         	movff	i2__doprnt@tmpval,i2___ftge@ff1
 12696  001D9C  C06A  F002         	movff	i2__doprnt@tmpval+1,i2___ftge@ff1+1
 12697  001DA0  C06B  F003         	movff	i2__doprnt@tmpval+2,i2___ftge@ff1+2
 12698  001DA4  0E70               	movlw	112
 12699  001DA6  6E04               	movwf	i2___ftge@ff2,c
 12700  001DA8  0E89               	movlw	137
 12701  001DAA  6E05               	movwf	i2___ftge@ff2+1,c
 12702  001DAC  0E40               	movlw	64
 12703  001DAE  6E06               	movwf	i2___ftge@ff2+2,c
 12704  001DB0  EC18  F029         	call	i2___ftge	;wreg free
 12705  001DB4  B0D8               	btfsc	status,0,c
 12706  001DB6  D003               	goto	i2l9071
 12707                           
 12708                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 12709  001DB8  0100               	movlb	0	; () banked
 12710  001DBA  0EF7               	movlw	247
 12711  001DBC  D002               	goto	L6
 12712  001DBE                     i2l9071:
 12713                           
 12714                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 12715  001DBE  0100               	movlb	0	; () banked
 12716  001DC0  0EF8               	movlw	248
 12717  001DC2                     L6:
 12718  001DC2  2763               	addwf	i2__doprnt@exp& (0+255),f,b
 12719  001DC4  0EFF               	movlw	255
 12720  001DC6  2364               	addwfc	(i2__doprnt@exp+1)& (0+255),f,b
 12721                           
 12722                           ; BSR set to: 0
 12723                           ;doprnt.c: 1124: }
 12724                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 12725                           
 12726                           ; BSR set to: 0
 12727  001DC8  0100               	movlb	0	; () banked
 12728  001DCA  5163               	movf	i2__doprnt@exp& (0+255),w,b
 12729  001DCC  ECC0  F017         	call	i2_scale
 12730  001DD0  C030  F069         	movff	?i2_scale,i2__doprnt@tmpval
 12731  001DD4  C031  F06A         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 12732  001DD8  C032  F06B         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 12733                           
 12734                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 12735  001DDC  C06D  F001         	movff	i2__doprnt@fval,i2__tdiv_to_l_@f1
 12736  001DE0  C06E  F002         	movff	i2__doprnt@fval+1,i2__tdiv_to_l_@f1+1
 12737  001DE4  C06F  F003         	movff	i2__doprnt@fval+2,i2__tdiv_to_l_@f1+2
 12738  001DE8  C069  F004         	movff	i2__doprnt@tmpval,i2__tdiv_to_l_@f2
 12739  001DEC  C06A  F005         	movff	i2__doprnt@tmpval+1,i2__tdiv_to_l_@f2+1
 12740  001DF0  C06B  F006         	movff	i2__doprnt@tmpval+2,i2__tdiv_to_l_@f2+2
 12741  001DF4  EC79  F023         	call	i2__tdiv_to_l_	;wreg free
 12742  001DF8  C001  F065         	movff	?i2__tdiv_to_l_,i2__doprnt@val
 12743  001DFC  C002  F066         	movff	?i2__tdiv_to_l_+1,i2__doprnt@val+1
 12744  001E00  C003  F067         	movff	?i2__tdiv_to_l_+2,i2__doprnt@val+2
 12745  001E04  C004  F068         	movff	?i2__tdiv_to_l_+3,i2__doprnt@val+3
 12746                           
 12747                           ;doprnt.c: 1129: fval = 0.0;
 12748  001E08  0E00               	movlw	0
 12749  001E0A  0100               	movlb	0	; () banked
 12750  001E0C  6F6D               	movwf	i2__doprnt@fval& (0+255),b
 12751  001E0E  0E00               	movlw	0
 12752  001E10  0100               	movlb	0	; () banked
 12753  001E12  6F6E               	movwf	(i2__doprnt@fval+1)& (0+255),b
 12754  001E14  0E00               	movlw	0
 12755  001E16  0100               	movlb	0	; () banked
 12756  001E18  6F6F               	movwf	(i2__doprnt@fval+2)& (0+255),b
 12757                           
 12758                           ;doprnt.c: 1130: } else {
 12759  001E1A  D033               	goto	i2l9085
 12760  001E1C                     i2l9081:
 12761                           
 12762                           ;doprnt.c: 1131: val = (unsigned long)fval;
 12763  001E1C  C06D  F037         	movff	i2__doprnt@fval,i2___fttol@f1
 12764  001E20  C06E  F038         	movff	i2__doprnt@fval+1,i2___fttol@f1+1
 12765  001E24  C06F  F039         	movff	i2__doprnt@fval+2,i2___fttol@f1+2
 12766  001E28  ECA6  F025         	call	i2___fttol	;wreg free
 12767  001E2C  C037  F065         	movff	?i2___fttol,i2__doprnt@val
 12768  001E30  C038  F066         	movff	?i2___fttol+1,i2__doprnt@val+1
 12769  001E34  C039  F067         	movff	?i2___fttol+2,i2__doprnt@val+2
 12770  001E38  C03A  F068         	movff	?i2___fttol+3,i2__doprnt@val+3
 12771                           
 12772                           ;doprnt.c: 1132: fval -= (double)val;
 12773  001E3C  C06D  F021         	movff	i2__doprnt@fval,i2___ftsub@f1
 12774  001E40  C06E  F022         	movff	i2__doprnt@fval+1,i2___ftsub@f1+1
 12775  001E44  C06F  F023         	movff	i2__doprnt@fval+2,i2___ftsub@f1+2
 12776  001E48  C065  F009         	movff	i2__doprnt@val,i2___lltoft@c
 12777  001E4C  C066  F00A         	movff	i2__doprnt@val+1,i2___lltoft@c+1
 12778  001E50  C067  F00B         	movff	i2__doprnt@val+2,i2___lltoft@c+2
 12779  001E54  C068  F00C         	movff	i2__doprnt@val+3,i2___lltoft@c+3
 12780  001E58  ECC9  F02A         	call	i2___lltoft	;wreg free
 12781  001E5C  C009  F024         	movff	?i2___lltoft,i2___ftsub@f2
 12782  001E60  C00A  F025         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 12783  001E64  C00B  F026         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 12784  001E68  ECF6  F02B         	call	i2___ftsub	;wreg free
 12785  001E6C  C021  F06D         	movff	?i2___ftsub,i2__doprnt@fval
 12786  001E70  C022  F06E         	movff	?i2___ftsub+1,i2__doprnt@fval+1
 12787  001E74  C023  F06F         	movff	?i2___ftsub+2,i2__doprnt@fval+2
 12788                           
 12789                           ;doprnt.c: 1133: exp = 0;
 12790  001E78  0E00               	movlw	0
 12791  001E7A  0100               	movlb	0	; () banked
 12792  001E7C  6F64               	movwf	(i2__doprnt@exp+1)& (0+255),b
 12793  001E7E  0E00               	movlw	0
 12794  001E80  6F63               	movwf	i2__doprnt@exp& (0+255),b
 12795  001E82                     i2l9085:
 12796                           
 12797                           ; BSR set to: 0
 12798                           ;doprnt.c: 1134: }
 12799                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 12800  001E82  0E01               	movlw	1
 12801  001E84  0100               	movlb	0	; () banked
 12802  001E86  6F76               	movwf	i2__doprnt@c& (0+255),b
 12803  001E88                     i2l9087:
 12804                           
 12805                           ; BSR set to: 0
 12806  001E88  0E0A               	movlw	10
 12807  001E8A  0100               	movlb	0	; () banked
 12808  001E8C  1976               	xorwf	i2__doprnt@c& (0+255),w,b
 12809  001E8E  B4D8               	btfsc	status,2,c
 12810  001E90  D01E               	goto	i2l9099
 12811                           
 12812                           ; BSR set to: 0
 12813                           ;doprnt.c: 1137: if(val < dpowers[c])
 12814                           
 12815                           ; BSR set to: 0
 12816                           
 12817                           ; BSR set to: 0
 12818  001E92  0100               	movlb	0	; () banked
 12819  001E94  5176               	movf	i2__doprnt@c& (0+255),w,b
 12820  001E96  0D04               	mullw	4
 12821  001E98  0E01               	movlw	low _dpowers
 12822  001E9A  24F3               	addwf	prodl,w,c
 12823  001E9C  6EF6               	movwf	tblptrl,c
 12824  001E9E  0E06               	movlw	high _dpowers
 12825  001EA0  20F4               	addwfc	prodh,w,c
 12826  001EA2  6EF7               	movwf	tblptrh,c
 12827  001EA4                     	if	0	;There are less than 3 active tblptr bytes
 12828  001EA4                     	endif
 12829  001EA4  0009               	tblrd		*+
 12830  001EA6  50F5               	movf	tablat,w,c
 12831  001EA8  0100               	movlb	0	; () banked
 12832  001EAA  5D65               	subwf	i2__doprnt@val& (0+255),w,b
 12833  001EAC  0009               	tblrd		*+
 12834  001EAE  50F5               	movf	tablat,w,c
 12835  001EB0  0100               	movlb	0	; () banked
 12836  001EB2  5966               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 12837  001EB4  0009               	tblrd		*+
 12838  001EB6  50F5               	movf	tablat,w,c
 12839  001EB8  0100               	movlb	0	; () banked
 12840  001EBA  5967               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 12841  001EBC  0009               	tblrd		*+
 12842  001EBE  50F5               	movf	tablat,w,c
 12843  001EC0  0100               	movlb	0	; () banked
 12844  001EC2  5968               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 12845  001EC4  A0D8               	btfss	status,0,c
 12846  001EC6  D003               	goto	i2l9099
 12847                           
 12848                           ; BSR set to: 0
 12849                           
 12850                           ; BSR set to: 0
 12851                           
 12852                           ; BSR set to: 0
 12853                           ;doprnt.c: 1138: break;
 12854  001EC8  0100               	movlb	0	; () banked
 12855  001ECA  2B76               	incf	i2__doprnt@c& (0+255),f,b
 12856  001ECC  D7DD               	goto	i2l9087
 12857  001ECE                     i2l9099:
 12858                           
 12859                           ; BSR set to: 0
 12860                           ;doprnt.c: 1142: width -= prec + c + exp;
 12861  001ECE  C076  F04C         	movff	i2__doprnt@c,??i2__doprnt
 12862  001ED2  6A4D               	clrf	(??i2__doprnt+1)& (0+255),c
 12863  001ED4  BE4C               	btfsc	??i2__doprnt& (0+255),7,c
 12864  001ED6  064D               	decf	(??i2__doprnt+1)& (0+255),f,c
 12865  001ED8  0100               	movlb	0	; () banked
 12866  001EDA  5174               	movf	i2__doprnt@prec& (0+255),w,b
 12867  001EDC  264C               	addwf	??i2__doprnt,f,c
 12868  001EDE  0100               	movlb	0	; () banked
 12869  001EE0  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 12870  001EE2  224D               	addwfc	??i2__doprnt+1,f,c
 12871  001EE4  0100               	movlb	0	; () banked
 12872  001EE6  5163               	movf	i2__doprnt@exp& (0+255),w,b
 12873  001EE8  264C               	addwf	??i2__doprnt,f,c
 12874  001EEA  0100               	movlb	0	; () banked
 12875  001EEC  5164               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 12876  001EEE  224D               	addwfc	??i2__doprnt+1,f,c
 12877  001EF0  504C               	movf	??i2__doprnt,w,c
 12878  001EF2  0100               	movlb	0	; () banked
 12879  001EF4  5F70               	subwf	i2__doprnt@width& (0+255),f,b
 12880  001EF6  504D               	movf	??i2__doprnt+1,w,c
 12881  001EF8  0100               	movlb	0	; () banked
 12882  001EFA  5B71               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 12883                           
 12884                           ;doprnt.c: 1143: if(
 12885                           ;doprnt.c: 1147: prec)
 12886  001EFC  0100               	movlb	0	; () banked
 12887  001EFE  5174               	movf	i2__doprnt@prec& (0+255),w,b
 12888  001F00  0100               	movlb	0	; () banked
 12889  001F02  1175               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 12890  001F04  B4D8               	btfsc	status,2,c
 12891  001F06  D004               	goto	i2l9103
 12892                           
 12893                           ; BSR set to: 0
 12894                           ;doprnt.c: 1148: width--;
 12895  001F08  0100               	movlb	0	; () banked
 12896  001F0A  0770               	decf	i2__doprnt@width& (0+255),f,b
 12897  001F0C  A0D8               	btfss	status,0,c
 12898  001F0E  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 12899  001F10                     i2l9103:
 12900                           
 12901                           ; BSR set to: 0
 12902                           ;doprnt.c: 1149: if(flag & 0x03)
 12903  001F10  0E03               	movlw	3
 12904  001F12  0100               	movlb	0	; () banked
 12905  001F14  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 12906  001F16  6E4C               	movwf	??i2__doprnt& (0+255),c
 12907  001F18  0E00               	movlw	0
 12908  001F1A  0100               	movlb	0	; () banked
 12909  001F1C  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 12910  001F1E  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 12911  001F20  504C               	movf	??i2__doprnt,w,c
 12912  001F22  104D               	iorwf	??i2__doprnt+1,w,c
 12913  001F24  B4D8               	btfsc	status,2,c
 12914  001F26  D004               	goto	i2l9107
 12915                           
 12916                           ; BSR set to: 0
 12917                           ;doprnt.c: 1150: width--;
 12918  001F28  0100               	movlb	0	; () banked
 12919  001F2A  0770               	decf	i2__doprnt@width& (0+255),f,b
 12920  001F2C  A0D8               	btfss	status,0,c
 12921  001F2E  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 12922  001F30                     i2l9107:
 12923                           
 12924                           ; BSR set to: 0
 12925                           ;doprnt.c: 1153: if(flag & 0x04) {
 12926  001F30  0100               	movlb	0	; () banked
 12927  001F32  A572               	btfss	i2__doprnt@flag& (0+255),2,b
 12928  001F34  D0B6               	goto	i2l9141
 12929                           
 12930                           ; BSR set to: 0
 12931                           ;doprnt.c: 1157: if(flag & 0x03)
 12932  001F36  0E03               	movlw	3
 12933  001F38  0100               	movlb	0	; () banked
 12934  001F3A  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 12935  001F3C  6E4C               	movwf	??i2__doprnt& (0+255),c
 12936  001F3E  0E00               	movlw	0
 12937  001F40  0100               	movlb	0	; () banked
 12938  001F42  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 12939  001F44  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 12940  001F46  504C               	movf	??i2__doprnt,w,c
 12941  001F48  104D               	iorwf	??i2__doprnt+1,w,c
 12942  001F4A  B4D8               	btfsc	status,2,c
 12943  001F4C  D069               	goto	i2l9129
 12944                           
 12945                           ; BSR set to: 0
 12946                           ;doprnt.c: 1159: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 12947  001F4E  EE20 F002          	lfsr	2,2
 12948  001F52  5046               	movf	i2__doprnt@pb,w,c
 12949  001F54  26D9               	addwf	fsr2l,f,c
 12950  001F56  5047               	movf	i2__doprnt@pb+1,w,c
 12951  001F58  22DA               	addwfc	fsr2h,f,c
 12952  001F5A  50DE               	movf	postinc2,w,c
 12953  001F5C  10DE               	iorwf	postinc2,w,c
 12954  001F5E  B4D8               	btfsc	status,2,c
 12955  001F60  D013               	goto	i2l9115
 12956                           
 12957                           ; BSR set to: 0
 12958  001F62  EE20 F002          	lfsr	2,2
 12959  001F66  5046               	movf	i2__doprnt@pb,w,c
 12960  001F68  26D9               	addwf	fsr2l,f,c
 12961  001F6A  5047               	movf	i2__doprnt@pb+1,w,c
 12962  001F6C  22DA               	addwfc	fsr2h,f,c
 12963  001F6E  D801               	call	i2u1496_48
 12964  001F70  D057               	goto	i2l9129
 12965  001F72                     i2u1496_48:
 12966  001F72  0005               	push	
 12967  001F74  6EFA               	movwf	pclath,c
 12968  001F76  50DE               	movf	postinc2,w,c
 12969  001F78  6EFD               	movwf	tosl,c
 12970  001F7A  50DE               	movf	postinc2,w,c
 12971  001F7C  6EFE               	movwf	tosh,c
 12972  001F7E  50F8               	movf	tblptru,w,c
 12973  001F80  6EFF               	movwf	tosu,c
 12974  001F82  50FA               	movf	pclath,w,c
 12975  001F84  0E2D               	movlw	45
 12976  001F86  0012               	return		;indir
 12977  001F88                     i2l9115:
 12978  001F88  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12979  001F8C  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12980  001F90  CFDE F04C          	movff	postinc2,??i2__doprnt
 12981  001F94  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12982  001F98  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12983  001F9C  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12984  001FA0  0E2D               	movlw	45
 12985  001FA2  6EDF               	movwf	indf2,c
 12986  001FA4  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12987  001FA8  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12988  001FAC  2ADE               	incf	postinc2,f,c
 12989  001FAE  0E00               	movlw	0
 12990  001FB0  22DD               	addwfc	postdec2,f,c
 12991                           
 12992                           ;doprnt.c: 1168: while(width > 0) {
 12993  001FB2  D036               	goto	i2l9129
 12994  001FB4                     i2l9119:
 12995                           
 12996                           ;doprnt.c: 1169: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 12997  001FB4  EE20 F002          	lfsr	2,2
 12998  001FB8  5046               	movf	i2__doprnt@pb,w,c
 12999  001FBA  26D9               	addwf	fsr2l,f,c
 13000  001FBC  5047               	movf	i2__doprnt@pb+1,w,c
 13001  001FBE  22DA               	addwfc	fsr2h,f,c
 13002  001FC0  50DE               	movf	postinc2,w,c
 13003  001FC2  10DE               	iorwf	postinc2,w,c
 13004  001FC4  B4D8               	btfsc	status,2,c
 13005  001FC6  D013               	goto	i2l9123
 13006  001FC8  EE20 F002          	lfsr	2,2
 13007  001FCC  5046               	movf	i2__doprnt@pb,w,c
 13008  001FCE  26D9               	addwf	fsr2l,f,c
 13009  001FD0  5047               	movf	i2__doprnt@pb+1,w,c
 13010  001FD2  22DA               	addwfc	fsr2h,f,c
 13011  001FD4  D801               	call	i2u1498_48
 13012  001FD6  D020               	goto	i2l9127
 13013  001FD8                     i2u1498_48:
 13014  001FD8  0005               	push	
 13015  001FDA  6EFA               	movwf	pclath,c
 13016  001FDC  50DE               	movf	postinc2,w,c
 13017  001FDE  6EFD               	movwf	tosl,c
 13018  001FE0  50DE               	movf	postinc2,w,c
 13019  001FE2  6EFE               	movwf	tosh,c
 13020  001FE4  50F8               	movf	tblptru,w,c
 13021  001FE6  6EFF               	movwf	tosu,c
 13022  001FE8  50FA               	movf	pclath,w,c
 13023  001FEA  0E30               	movlw	48
 13024  001FEC  0012               	return		;indir
 13025  001FEE                     i2l9123:
 13026  001FEE  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13027  001FF2  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13028  001FF6  CFDE F04C          	movff	postinc2,??i2__doprnt
 13029  001FFA  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13030  001FFE  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13031  002002  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13032  002006  0E30               	movlw	48
 13033  002008  6EDF               	movwf	indf2,c
 13034  00200A  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13035  00200E  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13036  002012  2ADE               	incf	postinc2,f,c
 13037  002014  0E00               	movlw	0
 13038  002016  22DD               	addwfc	postdec2,f,c
 13039  002018                     i2l9127:
 13040                           
 13041                           ;doprnt.c: 1170: width--;
 13042  002018  0100               	movlb	0	; () banked
 13043  00201A  0770               	decf	i2__doprnt@width& (0+255),f,b
 13044  00201C  A0D8               	btfss	status,0,c
 13045  00201E  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 13046  002020                     i2l9129:
 13047  002020  0100               	movlb	0	; () banked
 13048  002022  BF71               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 13049  002024  D0F8               	goto	i2l9163
 13050  002026  0100               	movlb	0	; () banked
 13051  002028  5171               	movf	(i2__doprnt@width+1)& (0+255),w,b
 13052  00202A  E1C4               	bnz	i2l9119
 13053  00202C  0100               	movlb	0	; () banked
 13054  00202E  0570               	decf	i2__doprnt@width& (0+255),w,b
 13055  002030  A0D8               	btfss	status,0,c
 13056  002032  D0F1               	goto	i2l9163
 13057  002034  D7BF               	goto	i2l9119
 13058  002036                     i2l9131:
 13059                           
 13060                           ; BSR set to: 0
 13061                           ;doprnt.c: 1181: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 13062  002036  EE20 F002          	lfsr	2,2
 13063  00203A  5046               	movf	i2__doprnt@pb,w,c
 13064  00203C  26D9               	addwf	fsr2l,f,c
 13065  00203E  5047               	movf	i2__doprnt@pb+1,w,c
 13066  002040  22DA               	addwfc	fsr2h,f,c
 13067  002042  50DE               	movf	postinc2,w,c
 13068  002044  10DE               	iorwf	postinc2,w,c
 13069  002046  B4D8               	btfsc	status,2,c
 13070  002048  D013               	goto	i2l9135
 13071                           
 13072                           ; BSR set to: 0
 13073  00204A  EE20 F002          	lfsr	2,2
 13074  00204E  5046               	movf	i2__doprnt@pb,w,c
 13075  002050  26D9               	addwf	fsr2l,f,c
 13076  002052  5047               	movf	i2__doprnt@pb+1,w,c
 13077  002054  22DA               	addwfc	fsr2h,f,c
 13078  002056  D801               	call	i2u1501_48
 13079  002058  D020               	goto	i2l9139
 13080  00205A                     i2u1501_48:
 13081  00205A  0005               	push	
 13082  00205C  6EFA               	movwf	pclath,c
 13083  00205E  50DE               	movf	postinc2,w,c
 13084  002060  6EFD               	movwf	tosl,c
 13085  002062  50DE               	movf	postinc2,w,c
 13086  002064  6EFE               	movwf	tosh,c
 13087  002066  50F8               	movf	tblptru,w,c
 13088  002068  6EFF               	movwf	tosu,c
 13089  00206A  50FA               	movf	pclath,w,c
 13090  00206C  0E20               	movlw	32
 13091  00206E  0012               	return		;indir
 13092  002070                     i2l9135:
 13093  002070  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13094  002074  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13095  002078  CFDE F04C          	movff	postinc2,??i2__doprnt
 13096  00207C  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13097  002080  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13098  002084  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13099  002088  0E20               	movlw	32
 13100  00208A  6EDF               	movwf	indf2,c
 13101  00208C  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13102  002090  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13103  002094  2ADE               	incf	postinc2,f,c
 13104  002096  0E00               	movlw	0
 13105  002098  22DD               	addwfc	postdec2,f,c
 13106  00209A                     i2l9139:
 13107                           
 13108                           ;doprnt.c: 1182: width--;
 13109  00209A  0100               	movlb	0	; () banked
 13110  00209C  0770               	decf	i2__doprnt@width& (0+255),f,b
 13111  00209E  A0D8               	btfss	status,0,c
 13112  0020A0  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 13113  0020A2                     i2l9141:
 13114                           
 13115                           ; BSR set to: 0
 13116  0020A2  0100               	movlb	0	; () banked
 13117  0020A4  BF71               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 13118  0020A6  D007               	goto	i2l9143
 13119  0020A8  0100               	movlb	0	; () banked
 13120  0020AA  5171               	movf	(i2__doprnt@width+1)& (0+255),w,b
 13121  0020AC  E1C4               	bnz	i2l9131
 13122  0020AE  0100               	movlb	0	; () banked
 13123  0020B0  0570               	decf	i2__doprnt@width& (0+255),w,b
 13124  0020B2  B0D8               	btfsc	status,0,c
 13125  0020B4  D7C0               	goto	i2l9131
 13126  0020B6                     i2l9143:
 13127                           
 13128                           ; BSR set to: 0
 13129                           ;doprnt.c: 1183: }
 13130                           ;doprnt.c: 1188: if(flag & 0x03)
 13131  0020B6  0E03               	movlw	3
 13132  0020B8  0100               	movlb	0	; () banked
 13133  0020BA  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 13134  0020BC  6E4C               	movwf	??i2__doprnt& (0+255),c
 13135  0020BE  0E00               	movlw	0
 13136  0020C0  0100               	movlb	0	; () banked
 13137  0020C2  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 13138  0020C4  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 13139  0020C6  504C               	movf	??i2__doprnt,w,c
 13140  0020C8  104D               	iorwf	??i2__doprnt+1,w,c
 13141  0020CA  B4D8               	btfsc	status,2,c
 13142  0020CC  D0A4               	goto	i2l9163
 13143                           
 13144                           ; BSR set to: 0
 13145                           ;doprnt.c: 1190: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 13146  0020CE  EE20 F002          	lfsr	2,2
 13147  0020D2  5046               	movf	i2__doprnt@pb,w,c
 13148  0020D4  26D9               	addwf	fsr2l,f,c
 13149  0020D6  5047               	movf	i2__doprnt@pb+1,w,c
 13150  0020D8  22DA               	addwfc	fsr2h,f,c
 13151  0020DA  50DE               	movf	postinc2,w,c
 13152  0020DC  10DE               	iorwf	postinc2,w,c
 13153  0020DE  B4D8               	btfsc	status,2,c
 13154  0020E0  D013               	goto	i2l9149
 13155                           
 13156                           ; BSR set to: 0
 13157  0020E2  EE20 F002          	lfsr	2,2
 13158  0020E6  5046               	movf	i2__doprnt@pb,w,c
 13159  0020E8  26D9               	addwf	fsr2l,f,c
 13160  0020EA  5047               	movf	i2__doprnt@pb+1,w,c
 13161  0020EC  22DA               	addwfc	fsr2h,f,c
 13162  0020EE  D801               	call	i2u1505_48
 13163  0020F0  D092               	goto	i2l9163
 13164  0020F2                     i2u1505_48:
 13165  0020F2  0005               	push	
 13166  0020F4  6EFA               	movwf	pclath,c
 13167  0020F6  50DE               	movf	postinc2,w,c
 13168  0020F8  6EFD               	movwf	tosl,c
 13169  0020FA  50DE               	movf	postinc2,w,c
 13170  0020FC  6EFE               	movwf	tosh,c
 13171  0020FE  50F8               	movf	tblptru,w,c
 13172  002100  6EFF               	movwf	tosu,c
 13173  002102  50FA               	movf	pclath,w,c
 13174  002104  0E2D               	movlw	45
 13175  002106  0012               	return		;indir
 13176  002108                     i2l9149:
 13177  002108  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13178  00210C  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13179  002110  CFDE F04C          	movff	postinc2,??i2__doprnt
 13180  002114  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13181  002118  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13182  00211C  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13183  002120  0E2D               	movlw	45
 13184  002122  D077               	goto	L7
 13185  002124                     i2l9151:
 13186  002124  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13187  002128  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13188  00212C  2ADE               	incf	postinc2,f,c
 13189  00212E  0E00               	movlw	0
 13190  002130  22DD               	addwfc	postdec2,f,c
 13191                           
 13192                           ;doprnt.c: 1195: }
 13193                           ;doprnt.c: 1196: while(c--) {
 13194  002132  D071               	goto	i2l9163
 13195  002134                     i2l9153:
 13196                           
 13197                           ;doprnt.c: 1200: {
 13198                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 13199  002134  C065  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 13200  002138  C066  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 13201  00213C  C067  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 13202  002140  C068  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 13203  002144  0100               	movlb	0	; () banked
 13204  002146  5176               	movf	i2__doprnt@c& (0+255),w,b
 13205  002148  0D04               	mullw	4
 13206  00214A  0E01               	movlw	low _dpowers
 13207  00214C  24F3               	addwf	prodl,w,c
 13208  00214E  6EF6               	movwf	tblptrl,c
 13209  002150  0E06               	movlw	high _dpowers
 13210  002152  20F4               	addwfc	prodh,w,c
 13211  002154  6EF7               	movwf	tblptrh,c
 13212  002156                     	if	0	;There are less than 3 active tblptr bytes
 13213  002156                     	endif
 13214  002156  0009               	tblrd		*+
 13215  002158  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 13216  00215C  0009               	tblrd		*+
 13217  00215E  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 13218  002162  0009               	tblrd		*+
 13219  002164  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 13220  002168  000A               	tblrd		*-
 13221  00216A  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 13222  00216E  ECA2  F029         	call	i2___lldiv
 13223  002172  C001  F069         	movff	?i2___lldiv,i2__doprnt@tmpval
 13224  002176  C002  F06A         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 13225  00217A  C003  F06B         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 13226  00217E  C004  F06C         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 13227                           
 13228                           ;doprnt.c: 1202: tmpval.vd %= 10;
 13229  002182  C069  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 13230  002186  C06A  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 13231  00218A  C06B  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 13232  00218E  C06C  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 13233  002192  0E0A               	movlw	10
 13234  002194  6E12               	movwf	i2___llmod@divisor,c
 13235  002196  0E00               	movlw	0
 13236  002198  6E13               	movwf	i2___llmod@divisor+1,c
 13237  00219A  0E00               	movlw	0
 13238  00219C  6E14               	movwf	i2___llmod@divisor+2,c
 13239  00219E  0E00               	movlw	0
 13240  0021A0  6E15               	movwf	i2___llmod@divisor+3,c
 13241  0021A2  EC96  F02A         	call	i2___llmod	;wreg free
 13242  0021A6  C00E  F069         	movff	?i2___llmod,i2__doprnt@tmpval
 13243  0021AA  C00F  F06A         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 13244  0021AE  C010  F06B         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 13245  0021B2  C011  F06C         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 13246                           
 13247                           ;doprnt.c: 1203: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 13248  0021B6  EE20 F002          	lfsr	2,2
 13249  0021BA  5046               	movf	i2__doprnt@pb,w,c
 13250  0021BC  26D9               	addwf	fsr2l,f,c
 13251  0021BE  5047               	movf	i2__doprnt@pb+1,w,c
 13252  0021C0  22DA               	addwfc	fsr2h,f,c
 13253  0021C2  50DE               	movf	postinc2,w,c
 13254  0021C4  10DE               	iorwf	postinc2,w,c
 13255  0021C6  B4D8               	btfsc	status,2,c
 13256  0021C8  D015               	goto	i2l9161
 13257  0021CA  EE20 F002          	lfsr	2,2
 13258  0021CE  5046               	movf	i2__doprnt@pb,w,c
 13259  0021D0  26D9               	addwf	fsr2l,f,c
 13260  0021D2  5047               	movf	i2__doprnt@pb+1,w,c
 13261  0021D4  22DA               	addwfc	fsr2h,f,c
 13262  0021D6  D801               	call	i2u1507_48
 13263  0021D8  D01E               	goto	i2l9163
 13264  0021DA                     i2u1507_48:
 13265  0021DA  0005               	push	
 13266  0021DC  6EFA               	movwf	pclath,c
 13267  0021DE  50DE               	movf	postinc2,w,c
 13268  0021E0  6EFD               	movwf	tosl,c
 13269  0021E2  50DE               	movf	postinc2,w,c
 13270  0021E4  6EFE               	movwf	tosh,c
 13271  0021E6  50F8               	movf	tblptru,w,c
 13272  0021E8  6EFF               	movwf	tosu,c
 13273  0021EA  50FA               	movf	pclath,w,c
 13274  0021EC  0100               	movlb	0	; () banked
 13275  0021EE  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 13276  0021F0  0F30               	addlw	48
 13277  0021F2  0012               	return		;indir
 13278  0021F4                     i2l9161:
 13279  0021F4  0100               	movlb	0	; () banked
 13280  0021F6  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 13281  0021F8  0F30               	addlw	48
 13282  0021FA  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13283  0021FE  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13284  002202  CFDE F04C          	movff	postinc2,??i2__doprnt
 13285  002206  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13286  00220A  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13287  00220E  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13288  002212                     L7:
 13289  002212  6EDF               	movwf	indf2,c
 13290  002214  D787               	goto	i2l9151
 13291  002216                     i2l9163:
 13292  002216  0100               	movlb	0	; () banked
 13293  002218  0776               	decf	i2__doprnt@c& (0+255),f,b
 13294  00221A  0100               	movlb	0	; () banked
 13295  00221C  2976               	incf	i2__doprnt@c& (0+255),w,b
 13296  00221E  B4D8               	btfsc	status,2,c
 13297  002220  D037               	goto	i2l9175
 13298  002222  D788               	goto	i2l9153
 13299  002224                     i2l9165:
 13300                           
 13301                           ; BSR set to: 0
 13302                           ;doprnt.c: 1208: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 13303  002224  EE20 F002          	lfsr	2,2
 13304  002228  5046               	movf	i2__doprnt@pb,w,c
 13305  00222A  26D9               	addwf	fsr2l,f,c
 13306  00222C  5047               	movf	i2__doprnt@pb+1,w,c
 13307  00222E  22DA               	addwfc	fsr2h,f,c
 13308  002230  50DE               	movf	postinc2,w,c
 13309  002232  10DE               	iorwf	postinc2,w,c
 13310  002234  B4D8               	btfsc	status,2,c
 13311  002236  D013               	goto	i2l9169
 13312                           
 13313                           ; BSR set to: 0
 13314  002238  EE20 F002          	lfsr	2,2
 13315  00223C  5046               	movf	i2__doprnt@pb,w,c
 13316  00223E  26D9               	addwf	fsr2l,f,c
 13317  002240  5047               	movf	i2__doprnt@pb+1,w,c
 13318  002242  22DA               	addwfc	fsr2h,f,c
 13319  002244  D801               	call	i2u1510_48
 13320  002246  D020               	goto	i2l9173
 13321  002248                     i2u1510_48:
 13322  002248  0005               	push	
 13323  00224A  6EFA               	movwf	pclath,c
 13324  00224C  50DE               	movf	postinc2,w,c
 13325  00224E  6EFD               	movwf	tosl,c
 13326  002250  50DE               	movf	postinc2,w,c
 13327  002252  6EFE               	movwf	tosh,c
 13328  002254  50F8               	movf	tblptru,w,c
 13329  002256  6EFF               	movwf	tosu,c
 13330  002258  50FA               	movf	pclath,w,c
 13331  00225A  0E30               	movlw	48
 13332  00225C  0012               	return		;indir
 13333  00225E                     i2l9169:
 13334  00225E  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13335  002262  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13336  002266  CFDE F04C          	movff	postinc2,??i2__doprnt
 13337  00226A  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13338  00226E  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13339  002272  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13340  002276  0E30               	movlw	48
 13341  002278  6EDF               	movwf	indf2,c
 13342  00227A  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13343  00227E  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13344  002282  2ADE               	incf	postinc2,f,c
 13345  002284  0E00               	movlw	0
 13346  002286  22DD               	addwfc	postdec2,f,c
 13347  002288                     i2l9173:
 13348                           
 13349                           ;doprnt.c: 1209: exp--;
 13350  002288  0100               	movlb	0	; () banked
 13351  00228A  0763               	decf	i2__doprnt@exp& (0+255),f,b
 13352  00228C  A0D8               	btfss	status,0,c
 13353  00228E  0764               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 13354  002290                     i2l9175:
 13355                           
 13356                           ; BSR set to: 0
 13357  002290  0100               	movlb	0	; () banked
 13358  002292  BF64               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 13359  002294  D007               	goto	i2l9177
 13360  002296  0100               	movlb	0	; () banked
 13361  002298  5164               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 13362  00229A  E1C4               	bnz	i2l9165
 13363  00229C  0100               	movlb	0	; () banked
 13364  00229E  0563               	decf	i2__doprnt@exp& (0+255),w,b
 13365  0022A0  B0D8               	btfsc	status,0,c
 13366  0022A2  D7C0               	goto	i2l9165
 13367  0022A4                     i2l9177:
 13368                           
 13369                           ; BSR set to: 0
 13370                           ;doprnt.c: 1210: }
 13371                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 13372  0022A4  0100               	movlb	0	; () banked
 13373  0022A6  BF75               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 13374  0022A8  D00C               	goto	i2l455
 13375  0022AA  0100               	movlb	0	; () banked
 13376  0022AC  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 13377  0022AE  E105               	bnz	i2u1512_40
 13378  0022B0  0E09               	movlw	9
 13379  0022B2  0100               	movlb	0	; () banked
 13380  0022B4  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 13381  0022B6  A0D8               	btfss	status,0,c
 13382  0022B8  D004               	goto	i2l455
 13383  0022BA                     i2u1512_40:
 13384                           
 13385                           ; BSR set to: 0
 13386                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 13387  0022BA  0E08               	movlw	8
 13388  0022BC  0100               	movlb	0	; () banked
 13389  0022BE  6F76               	movwf	i2__doprnt@c& (0+255),b
 13390  0022C0  D002               	goto	i2l9181
 13391  0022C2                     i2l455:
 13392                           
 13393                           ; BSR set to: 0
 13394                           ;doprnt.c: 1213: else
 13395                           ;doprnt.c: 1214: c = prec;
 13396  0022C2  C074  F076         	movff	i2__doprnt@prec,i2__doprnt@c
 13397  0022C6                     i2l9181:
 13398                           
 13399                           ; BSR set to: 0
 13400                           ;doprnt.c: 1215: prec -= c;
 13401  0022C6  0100               	movlb	0	; () banked
 13402  0022C8  5176               	movf	i2__doprnt@c& (0+255),w,b
 13403  0022CA  0100               	movlb	0	; () banked
 13404  0022CC  5F74               	subwf	i2__doprnt@prec& (0+255),f,b
 13405  0022CE  0E00               	movlw	0
 13406  0022D0  0100               	movlb	0	; () banked
 13407  0022D2  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 13408  0022D4  0EFF               	movlw	255
 13409  0022D6  0100               	movlb	0	; () banked
 13410  0022D8  5B75               	subwfb	(i2__doprnt@prec+1)& (0+255),f,b
 13411                           
 13412                           ; BSR set to: 0
 13413                           ;doprnt.c: 1219: if(c)
 13414  0022DA  0100               	movlb	0	; () banked
 13415  0022DC  5176               	movf	i2__doprnt@c& (0+255),w,b
 13416  0022DE  0100               	movlb	0	; () banked
 13417  0022E0  B4D8               	btfsc	status,2,c
 13418  0022E2  D032               	goto	i2l9193
 13419                           
 13420                           ; BSR set to: 0
 13421                           ;doprnt.c: 1221: if(pb->func) (pb->func('.')); else ((*pb->ptr++ = '.'));
 13422  0022E4  EE20 F002          	lfsr	2,2
 13423  0022E8  5046               	movf	i2__doprnt@pb,w,c
 13424  0022EA  26D9               	addwf	fsr2l,f,c
 13425  0022EC  5047               	movf	i2__doprnt@pb+1,w,c
 13426  0022EE  22DA               	addwfc	fsr2h,f,c
 13427  0022F0  50DE               	movf	postinc2,w,c
 13428  0022F2  10DE               	iorwf	postinc2,w,c
 13429  0022F4  B4D8               	btfsc	status,2,c
 13430  0022F6  D013               	goto	i2l9189
 13431                           
 13432                           ; BSR set to: 0
 13433  0022F8  EE20 F002          	lfsr	2,2
 13434  0022FC  5046               	movf	i2__doprnt@pb,w,c
 13435  0022FE  26D9               	addwf	fsr2l,f,c
 13436  002300  5047               	movf	i2__doprnt@pb+1,w,c
 13437  002302  22DA               	addwfc	fsr2h,f,c
 13438  002304  D801               	call	i2u1515_48
 13439  002306  D020               	goto	i2l9193
 13440  002308                     i2u1515_48:
 13441  002308  0005               	push	
 13442  00230A  6EFA               	movwf	pclath,c
 13443  00230C  50DE               	movf	postinc2,w,c
 13444  00230E  6EFD               	movwf	tosl,c
 13445  002310  50DE               	movf	postinc2,w,c
 13446  002312  6EFE               	movwf	tosh,c
 13447  002314  50F8               	movf	tblptru,w,c
 13448  002316  6EFF               	movwf	tosu,c
 13449  002318  50FA               	movf	pclath,w,c
 13450  00231A  0E2E               	movlw	46
 13451  00231C  0012               	return		;indir
 13452  00231E                     i2l9189:
 13453  00231E  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13454  002322  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13455  002326  CFDE F04C          	movff	postinc2,??i2__doprnt
 13456  00232A  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13457  00232E  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13458  002332  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13459  002336  0E2E               	movlw	46
 13460  002338  6EDF               	movwf	indf2,c
 13461  00233A  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13462  00233E  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13463  002342  2ADE               	incf	postinc2,f,c
 13464  002344  0E00               	movlw	0
 13465  002346  22DD               	addwfc	postdec2,f,c
 13466  002348                     i2l9193:
 13467                           
 13468                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 13469  002348  0100               	movlb	0	; () banked
 13470  00234A  5176               	movf	i2__doprnt@c& (0+255),w,b
 13471  00234C  ECC0  F017         	call	i2_scale
 13472  002350  C030  F060         	movff	?i2_scale,i2__doprnt$1903
 13473  002354  C031  F061         	movff	?i2_scale+1,i2__doprnt$1903+1
 13474  002358  C032  F062         	movff	?i2_scale+2,i2__doprnt$1903+2
 13475                           
 13476                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 13477  00235C  C06D  F024         	movff	i2__doprnt@fval,i2___ftmul@f2
 13478  002360  C06E  F025         	movff	i2__doprnt@fval+1,i2___ftmul@f2+1
 13479  002364  C06F  F026         	movff	i2__doprnt@fval+2,i2___ftmul@f2+2
 13480  002368  C060  F021         	movff	i2__doprnt$1903,i2___ftmul@f1
 13481  00236C  C061  F022         	movff	i2__doprnt$1903+1,i2___ftmul@f1+1
 13482  002370  C062  F023         	movff	i2__doprnt$1903+2,i2___ftmul@f1+2
 13483  002374  EC2C  F025         	call	i2___ftmul	;wreg free
 13484  002378  C021  F037         	movff	?i2___ftmul,i2___fttol@f1
 13485  00237C  C022  F038         	movff	?i2___ftmul+1,i2___fttol@f1+1
 13486  002380  C023  F039         	movff	?i2___ftmul+2,i2___fttol@f1+2
 13487  002384  ECA6  F025         	call	i2___fttol	;wreg free
 13488  002388  C037  F065         	movff	?i2___fttol,i2__doprnt@val
 13489  00238C  C038  F066         	movff	?i2___fttol+1,i2__doprnt@val+1
 13490  002390  C039  F067         	movff	?i2___fttol+2,i2__doprnt@val+2
 13491  002394  C03A  F068         	movff	?i2___fttol+3,i2__doprnt@val+3
 13492                           
 13493                           ;doprnt.c: 1228: while(c--) {
 13494  002398  D09E               	goto	i2l9209
 13495  00239A                     i2l9197:
 13496                           
 13497                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 13498  00239A  C065  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 13499  00239E  C066  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 13500  0023A2  C067  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 13501  0023A6  C068  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 13502  0023AA  0100               	movlb	0	; () banked
 13503  0023AC  5176               	movf	i2__doprnt@c& (0+255),w,b
 13504  0023AE  0D04               	mullw	4
 13505  0023B0  0E01               	movlw	low _dpowers
 13506  0023B2  24F3               	addwf	prodl,w,c
 13507  0023B4  6EF6               	movwf	tblptrl,c
 13508  0023B6  0E06               	movlw	high _dpowers
 13509  0023B8  20F4               	addwfc	prodh,w,c
 13510  0023BA  6EF7               	movwf	tblptrh,c
 13511  0023BC                     	if	0	;There are less than 3 active tblptr bytes
 13512  0023BC                     	endif
 13513  0023BC  0009               	tblrd		*+
 13514  0023BE  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 13515  0023C2  0009               	tblrd		*+
 13516  0023C4  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 13517  0023C8  0009               	tblrd		*+
 13518  0023CA  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 13519  0023CE  000A               	tblrd		*-
 13520  0023D0  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 13521  0023D4  ECA2  F029         	call	i2___lldiv	;wreg free
 13522  0023D8  C001  F069         	movff	?i2___lldiv,i2__doprnt@tmpval
 13523  0023DC  C002  F06A         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 13524  0023E0  C003  F06B         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 13525  0023E4  C004  F06C         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 13526                           
 13527                           ;doprnt.c: 1230: tmpval.vd %= 10;
 13528  0023E8  C069  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 13529  0023EC  C06A  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 13530  0023F0  C06B  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 13531  0023F4  C06C  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 13532  0023F8  0E0A               	movlw	10
 13533  0023FA  6E12               	movwf	i2___llmod@divisor,c
 13534  0023FC  0E00               	movlw	0
 13535  0023FE  6E13               	movwf	i2___llmod@divisor+1,c
 13536  002400  0E00               	movlw	0
 13537  002402  6E14               	movwf	i2___llmod@divisor+2,c
 13538  002404  0E00               	movlw	0
 13539  002406  6E15               	movwf	i2___llmod@divisor+3,c
 13540  002408  EC96  F02A         	call	i2___llmod	;wreg free
 13541  00240C  C00E  F069         	movff	?i2___llmod,i2__doprnt@tmpval
 13542  002410  C00F  F06A         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 13543  002414  C010  F06B         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 13544  002418  C011  F06C         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 13545                           
 13546                           ;doprnt.c: 1231: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 13547  00241C  EE20 F002          	lfsr	2,2
 13548  002420  5046               	movf	i2__doprnt@pb,w,c
 13549  002422  26D9               	addwf	fsr2l,f,c
 13550  002424  5047               	movf	i2__doprnt@pb+1,w,c
 13551  002426  22DA               	addwfc	fsr2h,f,c
 13552  002428  50DE               	movf	postinc2,w,c
 13553  00242A  10DE               	iorwf	postinc2,w,c
 13554  00242C  B4D8               	btfsc	status,2,c
 13555  00242E  D015               	goto	i2l9205
 13556  002430  EE20 F002          	lfsr	2,2
 13557  002434  5046               	movf	i2__doprnt@pb,w,c
 13558  002436  26D9               	addwf	fsr2l,f,c
 13559  002438  5047               	movf	i2__doprnt@pb+1,w,c
 13560  00243A  22DA               	addwfc	fsr2h,f,c
 13561  00243C  D801               	call	i2u1517_48
 13562  00243E  D024               	goto	i2l9207
 13563  002440                     i2u1517_48:
 13564  002440  0005               	push	
 13565  002442  6EFA               	movwf	pclath,c
 13566  002444  50DE               	movf	postinc2,w,c
 13567  002446  6EFD               	movwf	tosl,c
 13568  002448  50DE               	movf	postinc2,w,c
 13569  00244A  6EFE               	movwf	tosh,c
 13570  00244C  50F8               	movf	tblptru,w,c
 13571  00244E  6EFF               	movwf	tosu,c
 13572  002450  50FA               	movf	pclath,w,c
 13573  002452  0100               	movlb	0	; () banked
 13574  002454  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 13575  002456  0F30               	addlw	48
 13576  002458  0012               	return		;indir
 13577  00245A                     i2l9205:
 13578  00245A  0100               	movlb	0	; () banked
 13579  00245C  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 13580  00245E  0F30               	addlw	48
 13581  002460  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13582  002464  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13583  002468  CFDE F04C          	movff	postinc2,??i2__doprnt
 13584  00246C  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13585  002470  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13586  002474  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13587  002478  6EDF               	movwf	indf2,c
 13588  00247A  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13589  00247E  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13590  002482  2ADE               	incf	postinc2,f,c
 13591  002484  0E00               	movlw	0
 13592  002486  22DD               	addwfc	postdec2,f,c
 13593  002488                     i2l9207:
 13594                           
 13595                           ;doprnt.c: 1232: val %= dpowers[c];
 13596  002488  C065  F00E         	movff	i2__doprnt@val,i2___llmod@dividend
 13597  00248C  C066  F00F         	movff	i2__doprnt@val+1,i2___llmod@dividend+1
 13598  002490  C067  F010         	movff	i2__doprnt@val+2,i2___llmod@dividend+2
 13599  002494  C068  F011         	movff	i2__doprnt@val+3,i2___llmod@dividend+3
 13600  002498  0100               	movlb	0	; () banked
 13601  00249A  5176               	movf	i2__doprnt@c& (0+255),w,b
 13602  00249C  0D04               	mullw	4
 13603  00249E  0E01               	movlw	low _dpowers
 13604  0024A0  24F3               	addwf	prodl,w,c
 13605  0024A2  6EF6               	movwf	tblptrl,c
 13606  0024A4  0E06               	movlw	high _dpowers
 13607  0024A6  20F4               	addwfc	prodh,w,c
 13608  0024A8  6EF7               	movwf	tblptrh,c
 13609  0024AA                     	if	0	;There are less than 3 active tblptr bytes
 13610  0024AA                     	endif
 13611  0024AA  0009               	tblrd		*+
 13612  0024AC  CFF5 F012          	movff	tablat,i2___llmod@divisor
 13613  0024B0  0009               	tblrd		*+
 13614  0024B2  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 13615  0024B6  0009               	tblrd		*+
 13616  0024B8  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 13617  0024BC  000A               	tblrd		*-
 13618  0024BE  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 13619  0024C2  EC96  F02A         	call	i2___llmod
 13620  0024C6  C00E  F065         	movff	?i2___llmod,i2__doprnt@val
 13621  0024CA  C00F  F066         	movff	?i2___llmod+1,i2__doprnt@val+1
 13622  0024CE  C010  F067         	movff	?i2___llmod+2,i2__doprnt@val+2
 13623  0024D2  C011  F068         	movff	?i2___llmod+3,i2__doprnt@val+3
 13624  0024D6                     i2l9209:
 13625  0024D6  0100               	movlb	0	; () banked
 13626  0024D8  0776               	decf	i2__doprnt@c& (0+255),f,b
 13627  0024DA  0100               	movlb	0	; () banked
 13628  0024DC  2976               	incf	i2__doprnt@c& (0+255),w,b
 13629  0024DE  B4D8               	btfsc	status,2,c
 13630  0024E0  D037               	goto	i2l9221
 13631  0024E2  D75B               	goto	i2l9197
 13632  0024E4                     i2l9211:
 13633                           
 13634                           ; BSR set to: 0
 13635                           ;doprnt.c: 1236: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 13636  0024E4  EE20 F002          	lfsr	2,2
 13637  0024E8  5046               	movf	i2__doprnt@pb,w,c
 13638  0024EA  26D9               	addwf	fsr2l,f,c
 13639  0024EC  5047               	movf	i2__doprnt@pb+1,w,c
 13640  0024EE  22DA               	addwfc	fsr2h,f,c
 13641  0024F0  50DE               	movf	postinc2,w,c
 13642  0024F2  10DE               	iorwf	postinc2,w,c
 13643  0024F4  B4D8               	btfsc	status,2,c
 13644  0024F6  D013               	goto	i2l9215
 13645                           
 13646                           ; BSR set to: 0
 13647  0024F8  EE20 F002          	lfsr	2,2
 13648  0024FC  5046               	movf	i2__doprnt@pb,w,c
 13649  0024FE  26D9               	addwf	fsr2l,f,c
 13650  002500  5047               	movf	i2__doprnt@pb+1,w,c
 13651  002502  22DA               	addwfc	fsr2h,f,c
 13652  002504  D801               	call	i2u1520_48
 13653  002506  D020               	goto	i2l9219
 13654  002508                     i2u1520_48:
 13655  002508  0005               	push	
 13656  00250A  6EFA               	movwf	pclath,c
 13657  00250C  50DE               	movf	postinc2,w,c
 13658  00250E  6EFD               	movwf	tosl,c
 13659  002510  50DE               	movf	postinc2,w,c
 13660  002512  6EFE               	movwf	tosh,c
 13661  002514  50F8               	movf	tblptru,w,c
 13662  002516  6EFF               	movwf	tosu,c
 13663  002518  50FA               	movf	pclath,w,c
 13664  00251A  0E30               	movlw	48
 13665  00251C  0012               	return		;indir
 13666  00251E                     i2l9215:
 13667  00251E  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13668  002522  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13669  002526  CFDE F04C          	movff	postinc2,??i2__doprnt
 13670  00252A  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13671  00252E  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13672  002532  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13673  002536  0E30               	movlw	48
 13674  002538  6EDF               	movwf	indf2,c
 13675  00253A  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13676  00253E  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13677  002542  2ADE               	incf	postinc2,f,c
 13678  002544  0E00               	movlw	0
 13679  002546  22DD               	addwfc	postdec2,f,c
 13680  002548                     i2l9219:
 13681                           
 13682                           ;doprnt.c: 1237: prec--;
 13683  002548  0100               	movlb	0	; () banked
 13684  00254A  0774               	decf	i2__doprnt@prec& (0+255),f,b
 13685  00254C  A0D8               	btfss	status,0,c
 13686  00254E  0775               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 13687  002550                     i2l9221:
 13688                           
 13689                           ; BSR set to: 0
 13690  002550  0100               	movlb	0	; () banked
 13691  002552  5174               	movf	i2__doprnt@prec& (0+255),w,b
 13692  002554  0100               	movlb	0	; () banked
 13693  002556  1175               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 13694  002558  B4D8               	btfsc	status,2,c
 13695  00255A  D2A8               	goto	i2l9345
 13696  00255C  D7C3               	goto	i2l9211
 13697  00255E                     i2l403:
 13698                           
 13699                           ; BSR set to: 0
 13700                           ;doprnt.c: 1246: }
 13701                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
 13702  00255E  0100               	movlb	0	; () banked
 13703  002560  BD72               	btfsc	i2__doprnt@flag& (0+255),6,b
 13704  002562  D046               	goto	i2l470
 13705                           
 13706                           ; BSR set to: 0
 13707                           ;doprnt.c: 1253: {
 13708                           ;doprnt.c: 1255: if(flag & 0x10)
 13709  002564  0100               	movlb	0	; () banked
 13710  002566  A972               	btfss	i2__doprnt@flag& (0+255),4,b
 13711  002568  D019               	goto	i2l9227
 13712                           
 13713                           ; BSR set to: 0
 13714                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 13715  00256A  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 13716  00256E  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 13717  002572  CFDF F04C          	movff	indf2,??i2__doprnt
 13718  002576  0E04               	movlw	4
 13719  002578  26DE               	addwf	postinc2,f,c
 13720  00257A  CFDF F04D          	movff	indf2,??i2__doprnt+1
 13721  00257E  0E00               	movlw	0
 13722  002580  22DD               	addwfc	postdec2,f,c
 13723  002582  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13724  002586  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13725  00258A  CFDE F065          	movff	postinc2,i2__doprnt@val
 13726  00258E  CFDE F066          	movff	postinc2,i2__doprnt@val+1
 13727  002592  CFDE F067          	movff	postinc2,i2__doprnt@val+2
 13728  002596  CFDE F068          	movff	postinc2,i2__doprnt@val+3
 13729  00259A  D01A               	goto	i2l9229
 13730  00259C                     i2l9227:
 13731                           
 13732                           ; BSR set to: 0
 13733                           ;doprnt.c: 1257: else
 13734                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 13735  00259C  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 13736  0025A0  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 13737  0025A4  CFDF F04C          	movff	indf2,??i2__doprnt
 13738  0025A8  0E02               	movlw	2
 13739  0025AA  26DE               	addwf	postinc2,f,c
 13740  0025AC  CFDF F04D          	movff	indf2,??i2__doprnt+1
 13741  0025B0  0E00               	movlw	0
 13742  0025B2  22DD               	addwfc	postdec2,f,c
 13743  0025B4  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13744  0025B8  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13745  0025BC  CFDE F065          	movff	postinc2,i2__doprnt@val
 13746  0025C0  CFDD F066          	movff	postdec2,i2__doprnt@val+1
 13747  0025C4  0100               	movlb	0	; () banked
 13748  0025C6  0E00               	movlw	0
 13749  0025C8  BF66               	btfsc	(i2__doprnt@val+1)& (0+255),7,b
 13750  0025CA  0EFF               	movlw	-1
 13751  0025CC  6F67               	movwf	(i2__doprnt@val+2)& (0+255),b
 13752  0025CE  6F68               	movwf	(i2__doprnt@val+3)& (0+255),b
 13753  0025D0                     i2l9229:
 13754                           
 13755                           ; BSR set to: 0
 13756                           ;doprnt.c: 1261: if((long)val < 0) {
 13757  0025D0  0100               	movlb	0	; () banked
 13758  0025D2  AF68               	btfss	(i2__doprnt@val+3)& (0+255),7,b
 13759  0025D4  D044               	goto	i2l9239
 13760                           
 13761                           ; BSR set to: 0
 13762                           ;doprnt.c: 1262: flag |= 0x03;
 13763  0025D6  0E03               	movlw	3
 13764  0025D8  0100               	movlb	0	; () banked
 13765  0025DA  1372               	iorwf	i2__doprnt@flag& (0+255),f,b
 13766                           
 13767                           ; BSR set to: 0
 13768                           ;doprnt.c: 1263: val = -val;
 13769  0025DC  0100               	movlb	0	; () banked
 13770  0025DE  1F68               	comf	(i2__doprnt@val+3)& (0+255),f,b
 13771  0025E0  1F67               	comf	(i2__doprnt@val+2)& (0+255),f,b
 13772  0025E2  1F66               	comf	(i2__doprnt@val+1)& (0+255),f,b
 13773  0025E4  6D65               	negf	i2__doprnt@val& (0+255),b
 13774  0025E6  0E00               	movlw	0
 13775  0025E8  2366               	addwfc	(i2__doprnt@val+1)& (0+255),f,b
 13776  0025EA  2367               	addwfc	(i2__doprnt@val+2)& (0+255),f,b
 13777  0025EC  2368               	addwfc	(i2__doprnt@val+3)& (0+255),f,b
 13778                           
 13779                           ; BSR set to: 0
 13780                           ;doprnt.c: 1264: }
 13781                           ;doprnt.c: 1266: }
 13782  0025EE  D037               	goto	i2l9239
 13783  0025F0                     i2l470:
 13784                           
 13785                           ; BSR set to: 0
 13786                           ;doprnt.c: 1268: else
 13787                           ;doprnt.c: 1273: {
 13788                           ;doprnt.c: 1281: if(flag & 0x10)
 13789  0025F0  0100               	movlb	0	; () banked
 13790  0025F2  A972               	btfss	i2__doprnt@flag& (0+255),4,b
 13791  0025F4  D019               	goto	i2l9237
 13792                           
 13793                           ; BSR set to: 0
 13794                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 13795  0025F6  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 13796  0025FA  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 13797  0025FE  CFDF F04C          	movff	indf2,??i2__doprnt
 13798  002602  0E04               	movlw	4
 13799  002604  26DE               	addwf	postinc2,f,c
 13800  002606  CFDF F04D          	movff	indf2,??i2__doprnt+1
 13801  00260A  0E00               	movlw	0
 13802  00260C  22DD               	addwfc	postdec2,f,c
 13803  00260E  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13804  002612  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13805  002616  CFDE F065          	movff	postinc2,i2__doprnt@val
 13806  00261A  CFDE F066          	movff	postinc2,i2__doprnt@val+1
 13807  00261E  CFDE F067          	movff	postinc2,i2__doprnt@val+2
 13808  002622  CFDE F068          	movff	postinc2,i2__doprnt@val+3
 13809  002626  D01B               	goto	i2l9239
 13810  002628                     i2l9237:
 13811                           
 13812                           ; BSR set to: 0
 13813                           ;doprnt.c: 1283: else
 13814                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 13815  002628  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 13816  00262C  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 13817  002630  CFDF F04C          	movff	indf2,??i2__doprnt
 13818  002634  0E02               	movlw	2
 13819  002636  26DE               	addwf	postinc2,f,c
 13820  002638  CFDF F04D          	movff	indf2,??i2__doprnt+1
 13821  00263C  0E00               	movlw	0
 13822  00263E  22DD               	addwfc	postdec2,f,c
 13823  002640  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13824  002644  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13825  002648  CFDE F04E          	movff	postinc2,??i2__doprnt+2
 13826  00264C  CFDD F04F          	movff	postdec2,??i2__doprnt+3
 13827  002650  C04E  F065         	movff	??i2__doprnt+2,i2__doprnt@val
 13828  002654  C04F  F066         	movff	??i2__doprnt+3,i2__doprnt@val+1
 13829  002658  0100               	movlb	0	; () banked
 13830  00265A  6B67               	clrf	(i2__doprnt@val+2)& (0+255),b
 13831  00265C  6B68               	clrf	(i2__doprnt@val+3)& (0+255),b
 13832  00265E                     i2l9239:
 13833                           
 13834                           ; BSR set to: 0
 13835                           ;doprnt.c: 1287: }
 13836                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 13837  00265E  0100               	movlb	0	; () banked
 13838  002660  5174               	movf	i2__doprnt@prec& (0+255),w,b
 13839  002662  0100               	movlb	0	; () banked
 13840  002664  1175               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 13841  002666  A4D8               	btfss	status,2,c
 13842  002668  D00D               	goto	i2l9245
 13843                           
 13844                           ; BSR set to: 0
 13845  00266A  0100               	movlb	0	; () banked
 13846  00266C  5165               	movf	i2__doprnt@val& (0+255),w,b
 13847  00266E  0100               	movlb	0	; () banked
 13848  002670  1166               	iorwf	(i2__doprnt@val+1)& (0+255),w,b
 13849  002672  0100               	movlb	0	; () banked
 13850  002674  1167               	iorwf	(i2__doprnt@val+2)& (0+255),w,b
 13851  002676  0100               	movlb	0	; () banked
 13852  002678  1168               	iorwf	(i2__doprnt@val+3)& (0+255),w,b
 13853  00267A  A4D8               	btfss	status,2,c
 13854  00267C  D003               	goto	i2l9245
 13855                           
 13856                           ; BSR set to: 0
 13857                           ;doprnt.c: 1291: prec++;
 13858  00267E  0100               	movlb	0	; () banked
 13859  002680  4B74               	infsnz	i2__doprnt@prec& (0+255),f,b
 13860  002682  2B75               	incf	(i2__doprnt@prec+1)& (0+255),f,b
 13861  002684                     i2l9245:
 13862                           
 13863                           ; BSR set to: 0
 13864                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 13865  002684  0E01               	movlw	1
 13866  002686  0100               	movlb	0	; () banked
 13867  002688  6F76               	movwf	i2__doprnt@c& (0+255),b
 13868  00268A                     i2l9247:
 13869                           
 13870                           ; BSR set to: 0
 13871  00268A  0E0A               	movlw	10
 13872  00268C  0100               	movlb	0	; () banked
 13873  00268E  1976               	xorwf	i2__doprnt@c& (0+255),w,b
 13874  002690  B4D8               	btfsc	status,2,c
 13875  002692  D01E               	goto	i2l9259
 13876                           
 13877                           ; BSR set to: 0
 13878                           ;doprnt.c: 1306: if(val < dpowers[c])
 13879                           
 13880                           ; BSR set to: 0
 13881                           
 13882                           ; BSR set to: 0
 13883  002694  0100               	movlb	0	; () banked
 13884  002696  5176               	movf	i2__doprnt@c& (0+255),w,b
 13885  002698  0D04               	mullw	4
 13886  00269A  0E01               	movlw	low _dpowers
 13887  00269C  24F3               	addwf	prodl,w,c
 13888  00269E  6EF6               	movwf	tblptrl,c
 13889  0026A0  0E06               	movlw	high _dpowers
 13890  0026A2  20F4               	addwfc	prodh,w,c
 13891  0026A4  6EF7               	movwf	tblptrh,c
 13892  0026A6                     	if	0	;There are less than 3 active tblptr bytes
 13893  0026A6                     	endif
 13894  0026A6  0009               	tblrd		*+
 13895  0026A8  50F5               	movf	tablat,w,c
 13896  0026AA  0100               	movlb	0	; () banked
 13897  0026AC  5D65               	subwf	i2__doprnt@val& (0+255),w,b
 13898  0026AE  0009               	tblrd		*+
 13899  0026B0  50F5               	movf	tablat,w,c
 13900  0026B2  0100               	movlb	0	; () banked
 13901  0026B4  5966               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 13902  0026B6  0009               	tblrd		*+
 13903  0026B8  50F5               	movf	tablat,w,c
 13904  0026BA  0100               	movlb	0	; () banked
 13905  0026BC  5967               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 13906  0026BE  0009               	tblrd		*+
 13907  0026C0  50F5               	movf	tablat,w,c
 13908  0026C2  0100               	movlb	0	; () banked
 13909  0026C4  5968               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 13910  0026C6  A0D8               	btfss	status,0,c
 13911  0026C8  D003               	goto	i2l9259
 13912                           
 13913                           ; BSR set to: 0
 13914                           
 13915                           ; BSR set to: 0
 13916                           
 13917                           ; BSR set to: 0
 13918                           ;doprnt.c: 1307: break;
 13919  0026CA  0100               	movlb	0	; () banked
 13920  0026CC  2B76               	incf	i2__doprnt@c& (0+255),f,b
 13921  0026CE  D7DD               	goto	i2l9247
 13922  0026D0                     i2l9259:
 13923                           
 13924                           ; BSR set to: 0
 13925                           ;doprnt.c: 1339: if(c < prec)
 13926  0026D0  0E80               	movlw	128
 13927  0026D2  0100               	movlb	0	; () banked
 13928  0026D4  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 13929  0026D6  0E7F               	movlw	127
 13930  0026D8  6E4C               	movwf	??i2__doprnt& (0+255),c
 13931  0026DA  0100               	movlb	0	; () banked
 13932  0026DC  5174               	movf	i2__doprnt@prec& (0+255),w,b
 13933  0026DE  0100               	movlb	0	; () banked
 13934  0026E0  5D76               	subwf	i2__doprnt@c& (0+255),w,b
 13935  0026E2  0100               	movlb	0	; () banked
 13936  0026E4  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 13937  0026E6  0A80               	xorlw	128
 13938  0026E8  584C               	subwfb	??i2__doprnt& (0+255),w,c
 13939  0026EA  B0D8               	btfsc	status,0,c
 13940  0026EC  D003               	goto	i2l9263
 13941                           
 13942                           ; BSR set to: 0
 13943                           ;doprnt.c: 1340: c = prec;
 13944  0026EE  C074  F076         	movff	i2__doprnt@prec,i2__doprnt@c
 13945  0026F2  D016               	goto	i2l9267
 13946  0026F4                     i2l9263:
 13947                           
 13948                           ; BSR set to: 0
 13949                           ;doprnt.c: 1341: else if(prec < c)
 13950  0026F4  0100               	movlb	0	; () banked
 13951  0026F6  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 13952  0026F8  0A80               	xorlw	128
 13953  0026FA  6E4C               	movwf	??i2__doprnt& (0+255),c
 13954  0026FC  0100               	movlb	0	; () banked
 13955  0026FE  5176               	movf	i2__doprnt@c& (0+255),w,b
 13956  002700  0100               	movlb	0	; () banked
 13957  002702  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 13958  002704  0E80               	movlw	128
 13959  002706  0100               	movlb	0	; () banked
 13960  002708  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 13961  00270A  0E7F               	movlw	127
 13962  00270C  584C               	subwfb	??i2__doprnt& (0+255),w,c
 13963  00270E  B0D8               	btfsc	status,0,c
 13964  002710  D007               	goto	i2l9267
 13965                           
 13966                           ; BSR set to: 0
 13967                           ;doprnt.c: 1342: prec = c;
 13968  002712  0100               	movlb	0	; () banked
 13969  002714  5176               	movf	i2__doprnt@c& (0+255),w,b
 13970  002716  0100               	movlb	0	; () banked
 13971  002718  6F74               	movwf	i2__doprnt@prec& (0+255),b
 13972  00271A  6B75               	clrf	(i2__doprnt@prec+1)& (0+255),b
 13973  00271C  BF74               	btfsc	i2__doprnt@prec& (0+255),7,b
 13974  00271E  0775               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 13975  002720                     i2l9267:
 13976                           
 13977                           ; BSR set to: 0
 13978                           ;doprnt.c: 1345: if(width && flag & 0x03)
 13979  002720  0100               	movlb	0	; () banked
 13980  002722  5170               	movf	i2__doprnt@width& (0+255),w,b
 13981  002724  0100               	movlb	0	; () banked
 13982  002726  1171               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 13983  002728  B4D8               	btfsc	status,2,c
 13984  00272A  D010               	goto	i2l9273
 13985                           
 13986                           ; BSR set to: 0
 13987  00272C  0E03               	movlw	3
 13988  00272E  0100               	movlb	0	; () banked
 13989  002730  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 13990  002732  6E4C               	movwf	??i2__doprnt& (0+255),c
 13991  002734  0E00               	movlw	0
 13992  002736  0100               	movlb	0	; () banked
 13993  002738  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 13994  00273A  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 13995  00273C  504C               	movf	??i2__doprnt,w,c
 13996  00273E  104D               	iorwf	??i2__doprnt+1,w,c
 13997  002740  B4D8               	btfsc	status,2,c
 13998  002742  D004               	goto	i2l9273
 13999                           
 14000                           ; BSR set to: 0
 14001                           ;doprnt.c: 1346: width--;
 14002  002744  0100               	movlb	0	; () banked
 14003  002746  0770               	decf	i2__doprnt@width& (0+255),f,b
 14004  002748  A0D8               	btfss	status,0,c
 14005  00274A  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 14006  00274C                     i2l9273:
 14007                           
 14008                           ; BSR set to: 0
 14009                           ;doprnt.c: 1348: if(flag & 0x4000) {
 14010  00274C  0100               	movlb	0	; () banked
 14011  00274E  AD73               	btfss	(i2__doprnt@flag+1)& (0+255),6,b
 14012  002750  D01C               	goto	i2l9281
 14013                           
 14014                           ; BSR set to: 0
 14015                           ;doprnt.c: 1349: if(width > prec)
 14016  002752  0100               	movlb	0	; () banked
 14017  002754  5170               	movf	i2__doprnt@width& (0+255),w,b
 14018  002756  0100               	movlb	0	; () banked
 14019  002758  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 14020  00275A  0100               	movlb	0	; () banked
 14021  00275C  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 14022  00275E  0A80               	xorlw	128
 14023  002760  6E4C               	movwf	??i2__doprnt& (0+255),c
 14024  002762  0100               	movlb	0	; () banked
 14025  002764  5171               	movf	(i2__doprnt@width+1)& (0+255),w,b
 14026  002766  0A80               	xorlw	128
 14027  002768  584C               	subwfb	??i2__doprnt& (0+255),w,c
 14028  00276A  B0D8               	btfsc	status,0,c
 14029  00276C  D009               	goto	i2l9279
 14030                           
 14031                           ; BSR set to: 0
 14032                           ;doprnt.c: 1350: width -= prec;
 14033  00276E  0100               	movlb	0	; () banked
 14034  002770  5174               	movf	i2__doprnt@prec& (0+255),w,b
 14035  002772  0100               	movlb	0	; () banked
 14036  002774  5F70               	subwf	i2__doprnt@width& (0+255),f,b
 14037  002776  0100               	movlb	0	; () banked
 14038  002778  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 14039  00277A  0100               	movlb	0	; () banked
 14040  00277C  5B71               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 14041  00277E  D005               	goto	i2l9281
 14042  002780                     i2l9279:
 14043                           
 14044                           ; BSR set to: 0
 14045                           ;doprnt.c: 1351: else
 14046                           ;doprnt.c: 1352: width = 0;
 14047  002780  0E00               	movlw	0
 14048  002782  0100               	movlb	0	; () banked
 14049  002784  6F71               	movwf	(i2__doprnt@width+1)& (0+255),b
 14050  002786  0E00               	movlw	0
 14051  002788  6F70               	movwf	i2__doprnt@width& (0+255),b
 14052  00278A                     i2l9281:
 14053                           
 14054                           ; BSR set to: 0
 14055                           ;doprnt.c: 1353: }
 14056                           ;doprnt.c: 1381: if(width > c)
 14057  00278A  0E80               	movlw	128
 14058  00278C  0100               	movlb	0	; () banked
 14059  00278E  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 14060  002790  0E7F               	movlw	127
 14061  002792  6E4C               	movwf	??i2__doprnt& (0+255),c
 14062  002794  0100               	movlb	0	; () banked
 14063  002796  5170               	movf	i2__doprnt@width& (0+255),w,b
 14064  002798  0100               	movlb	0	; () banked
 14065  00279A  5D76               	subwf	i2__doprnt@c& (0+255),w,b
 14066  00279C  0100               	movlb	0	; () banked
 14067  00279E  5171               	movf	(i2__doprnt@width+1)& (0+255),w,b
 14068  0027A0  0A80               	xorlw	128
 14069  0027A2  584C               	subwfb	??i2__doprnt& (0+255),w,c
 14070  0027A4  B0D8               	btfsc	status,0,c
 14071  0027A6  D00B               	goto	i2l9285
 14072                           
 14073                           ; BSR set to: 0
 14074                           ;doprnt.c: 1382: width -= c;
 14075  0027A8  0100               	movlb	0	; () banked
 14076  0027AA  5176               	movf	i2__doprnt@c& (0+255),w,b
 14077  0027AC  0100               	movlb	0	; () banked
 14078  0027AE  5F70               	subwf	i2__doprnt@width& (0+255),f,b
 14079  0027B0  0E00               	movlw	0
 14080  0027B2  0100               	movlb	0	; () banked
 14081  0027B4  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 14082  0027B6  0EFF               	movlw	255
 14083  0027B8  0100               	movlb	0	; () banked
 14084  0027BA  5B71               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 14085  0027BC  D005               	goto	i2l9287
 14086  0027BE                     i2l9285:
 14087                           
 14088                           ; BSR set to: 0
 14089                           ;doprnt.c: 1383: else
 14090                           ;doprnt.c: 1384: width = 0;
 14091  0027BE  0E00               	movlw	0
 14092  0027C0  0100               	movlb	0	; () banked
 14093  0027C2  6F71               	movwf	(i2__doprnt@width+1)& (0+255),b
 14094  0027C4  0E00               	movlw	0
 14095  0027C6  6F70               	movwf	i2__doprnt@width& (0+255),b
 14096  0027C8                     i2l9287:
 14097                           
 14098                           ; BSR set to: 0
 14099                           ;doprnt.c: 1387: if(flag & 0x04) {
 14100  0027C8  0100               	movlb	0	; () banked
 14101  0027CA  A572               	btfss	i2__doprnt@flag& (0+255),2,b
 14102  0027CC  D07B               	goto	i2l9311
 14103                           
 14104                           ; BSR set to: 0
 14105                           ;doprnt.c: 1392: if(flag & 0x03)
 14106  0027CE  0E03               	movlw	3
 14107  0027D0  0100               	movlb	0	; () banked
 14108  0027D2  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 14109  0027D4  6E4C               	movwf	??i2__doprnt& (0+255),c
 14110  0027D6  0E00               	movlw	0
 14111  0027D8  0100               	movlb	0	; () banked
 14112  0027DA  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 14113  0027DC  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 14114  0027DE  504C               	movf	??i2__doprnt,w,c
 14115  0027E0  104D               	iorwf	??i2__doprnt+1,w,c
 14116  0027E2  B4D8               	btfsc	status,2,c
 14117  0027E4  D032               	goto	i2l9299
 14118                           
 14119                           ; BSR set to: 0
 14120                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 14121  0027E6  EE20 F002          	lfsr	2,2
 14122  0027EA  5046               	movf	i2__doprnt@pb,w,c
 14123  0027EC  26D9               	addwf	fsr2l,f,c
 14124  0027EE  5047               	movf	i2__doprnt@pb+1,w,c
 14125  0027F0  22DA               	addwfc	fsr2h,f,c
 14126  0027F2  50DE               	movf	postinc2,w,c
 14127  0027F4  10DE               	iorwf	postinc2,w,c
 14128  0027F6  B4D8               	btfsc	status,2,c
 14129  0027F8  D013               	goto	i2l9295
 14130                           
 14131                           ; BSR set to: 0
 14132  0027FA  EE20 F002          	lfsr	2,2
 14133  0027FE  5046               	movf	i2__doprnt@pb,w,c
 14134  002800  26D9               	addwf	fsr2l,f,c
 14135  002802  5047               	movf	i2__doprnt@pb+1,w,c
 14136  002804  22DA               	addwfc	fsr2h,f,c
 14137  002806  D801               	call	i2u1541_48
 14138  002808  D020               	goto	i2l9299
 14139  00280A                     i2u1541_48:
 14140  00280A  0005               	push	
 14141  00280C  6EFA               	movwf	pclath,c
 14142  00280E  50DE               	movf	postinc2,w,c
 14143  002810  6EFD               	movwf	tosl,c
 14144  002812  50DE               	movf	postinc2,w,c
 14145  002814  6EFE               	movwf	tosh,c
 14146  002816  50F8               	movf	tblptru,w,c
 14147  002818  6EFF               	movwf	tosu,c
 14148  00281A  50FA               	movf	pclath,w,c
 14149  00281C  0E2D               	movlw	45
 14150  00281E  0012               	return		;indir
 14151  002820                     i2l9295:
 14152  002820  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14153  002824  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14154  002828  CFDE F04C          	movff	postinc2,??i2__doprnt
 14155  00282C  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 14156  002830  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 14157  002834  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 14158  002838  0E2D               	movlw	45
 14159  00283A  6EDF               	movwf	indf2,c
 14160  00283C  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14161  002840  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14162  002844  2ADE               	incf	postinc2,f,c
 14163  002846  0E00               	movlw	0
 14164  002848  22DD               	addwfc	postdec2,f,c
 14165  00284A                     i2l9299:
 14166                           
 14167                           ;doprnt.c: 1415: if(width)
 14168  00284A  0100               	movlb	0	; () banked
 14169  00284C  5170               	movf	i2__doprnt@width& (0+255),w,b
 14170  00284E  0100               	movlb	0	; () banked
 14171  002850  1171               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 14172  002852  B4D8               	btfsc	status,2,c
 14173  002854  D120               	goto	i2l9343
 14174                           
 14175                           ; BSR set to: 0
 14176                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 14177                           
 14178                           ; BSR set to: 0
 14179                           
 14180                           ;doprnt.c: 1416: do
 14181  002856  EE20 F002          	lfsr	2,2
 14182  00285A  5046               	movf	i2__doprnt@pb,w,c
 14183  00285C  26D9               	addwf	fsr2l,f,c
 14184  00285E  5047               	movf	i2__doprnt@pb+1,w,c
 14185  002860  22DA               	addwfc	fsr2h,f,c
 14186  002862  50DE               	movf	postinc2,w,c
 14187  002864  10DE               	iorwf	postinc2,w,c
 14188  002866  B4D8               	btfsc	status,2,c
 14189  002868  D013               	goto	i2l9305
 14190                           
 14191                           ; BSR set to: 0
 14192  00286A  EE20 F002          	lfsr	2,2
 14193  00286E  5046               	movf	i2__doprnt@pb,w,c
 14194  002870  26D9               	addwf	fsr2l,f,c
 14195  002872  5047               	movf	i2__doprnt@pb+1,w,c
 14196  002874  22DA               	addwfc	fsr2h,f,c
 14197  002876  D801               	call	i2u1544_48
 14198  002878  D020               	goto	i2l9309
 14199  00287A                     i2u1544_48:
 14200  00287A  0005               	push	
 14201  00287C  6EFA               	movwf	pclath,c
 14202  00287E  50DE               	movf	postinc2,w,c
 14203  002880  6EFD               	movwf	tosl,c
 14204  002882  50DE               	movf	postinc2,w,c
 14205  002884  6EFE               	movwf	tosh,c
 14206  002886  50F8               	movf	tblptru,w,c
 14207  002888  6EFF               	movwf	tosu,c
 14208  00288A  50FA               	movf	pclath,w,c
 14209  00288C  0E30               	movlw	48
 14210  00288E  0012               	return		;indir
 14211  002890                     i2l9305:
 14212  002890  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14213  002894  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14214  002898  CFDE F04C          	movff	postinc2,??i2__doprnt
 14215  00289C  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 14216  0028A0  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 14217  0028A4  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 14218  0028A8  0E30               	movlw	48
 14219  0028AA  6EDF               	movwf	indf2,c
 14220  0028AC  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14221  0028B0  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14222  0028B4  2ADE               	incf	postinc2,f,c
 14223  0028B6  0E00               	movlw	0
 14224  0028B8  22DD               	addwfc	postdec2,f,c
 14225  0028BA                     i2l9309:
 14226                           
 14227                           ;doprnt.c: 1418: while(--width);
 14228  0028BA  0100               	movlb	0	; () banked
 14229  0028BC  0770               	decf	i2__doprnt@width& (0+255),f,b
 14230  0028BE  A0D8               	btfss	status,0,c
 14231  0028C0  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 14232  0028C2  D7C3               	goto	i2l9299
 14233  0028C4                     i2l9311:
 14234                           
 14235                           ; BSR set to: 0
 14236                           ;doprnt.c: 1422: {
 14237                           ;doprnt.c: 1424: if(width
 14238                           ;doprnt.c: 1428: )
 14239  0028C4  0100               	movlb	0	; () banked
 14240  0028C6  5170               	movf	i2__doprnt@width& (0+255),w,b
 14241  0028C8  0100               	movlb	0	; () banked
 14242  0028CA  1171               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 14243  0028CC  B4D8               	btfsc	status,2,c
 14244  0028CE  D03C               	goto	i2l9323
 14245  0028D0                     i2l9313:
 14246                           
 14247                           ; BSR set to: 0
 14248                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 14249  0028D0  EE20 F002          	lfsr	2,2
 14250  0028D4  5046               	movf	i2__doprnt@pb,w,c
 14251  0028D6  26D9               	addwf	fsr2l,f,c
 14252  0028D8  5047               	movf	i2__doprnt@pb+1,w,c
 14253  0028DA  22DA               	addwfc	fsr2h,f,c
 14254  0028DC  50DE               	movf	postinc2,w,c
 14255  0028DE  10DE               	iorwf	postinc2,w,c
 14256  0028E0  B4D8               	btfsc	status,2,c
 14257  0028E2  D013               	goto	i2l9317
 14258                           
 14259                           ; BSR set to: 0
 14260  0028E4  EE20 F002          	lfsr	2,2
 14261  0028E8  5046               	movf	i2__doprnt@pb,w,c
 14262  0028EA  26D9               	addwf	fsr2l,f,c
 14263  0028EC  5047               	movf	i2__doprnt@pb+1,w,c
 14264  0028EE  22DA               	addwfc	fsr2h,f,c
 14265  0028F0  D801               	call	i2u1548_48
 14266  0028F2  D020               	goto	i2l9321
 14267  0028F4                     i2u1548_48:
 14268  0028F4  0005               	push	
 14269  0028F6  6EFA               	movwf	pclath,c
 14270  0028F8  50DE               	movf	postinc2,w,c
 14271  0028FA  6EFD               	movwf	tosl,c
 14272  0028FC  50DE               	movf	postinc2,w,c
 14273  0028FE  6EFE               	movwf	tosh,c
 14274  002900  50F8               	movf	tblptru,w,c
 14275  002902  6EFF               	movwf	tosu,c
 14276  002904  50FA               	movf	pclath,w,c
 14277  002906  0E20               	movlw	32
 14278  002908  0012               	return		;indir
 14279  00290A                     i2l9317:
 14280  00290A  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14281  00290E  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14282  002912  CFDE F04C          	movff	postinc2,??i2__doprnt
 14283  002916  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 14284  00291A  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 14285  00291E  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 14286  002922  0E20               	movlw	32
 14287  002924  6EDF               	movwf	indf2,c
 14288  002926  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14289  00292A  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14290  00292E  2ADE               	incf	postinc2,f,c
 14291  002930  0E00               	movlw	0
 14292  002932  22DD               	addwfc	postdec2,f,c
 14293  002934                     i2l9321:
 14294                           
 14295                           ;doprnt.c: 1431: while(--width);
 14296  002934  0100               	movlb	0	; () banked
 14297  002936  0770               	decf	i2__doprnt@width& (0+255),f,b
 14298  002938  A0D8               	btfss	status,0,c
 14299  00293A  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 14300  00293C  0100               	movlb	0	; () banked
 14301  00293E  5170               	movf	i2__doprnt@width& (0+255),w,b
 14302  002940  0100               	movlb	0	; () banked
 14303  002942  1171               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 14304  002944  A4D8               	btfss	status,2,c
 14305  002946  D7C4               	goto	i2l9313
 14306  002948                     i2l9323:
 14307                           
 14308                           ; BSR set to: 0
 14309                           ;doprnt.c: 1438: if(flag & 0x03)
 14310  002948  0E03               	movlw	3
 14311  00294A  0100               	movlb	0	; () banked
 14312  00294C  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 14313  00294E  6E4C               	movwf	??i2__doprnt& (0+255),c
 14314  002950  0E00               	movlw	0
 14315  002952  0100               	movlb	0	; () banked
 14316  002954  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 14317  002956  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 14318  002958  504C               	movf	??i2__doprnt,w,c
 14319  00295A  104D               	iorwf	??i2__doprnt+1,w,c
 14320  00295C  B4D8               	btfsc	status,2,c
 14321  00295E  D09B               	goto	i2l9343
 14322                           
 14323                           ; BSR set to: 0
 14324                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 14325  002960  EE20 F002          	lfsr	2,2
 14326  002964  5046               	movf	i2__doprnt@pb,w,c
 14327  002966  26D9               	addwf	fsr2l,f,c
 14328  002968  5047               	movf	i2__doprnt@pb+1,w,c
 14329  00296A  22DA               	addwfc	fsr2h,f,c
 14330  00296C  50DE               	movf	postinc2,w,c
 14331  00296E  10DE               	iorwf	postinc2,w,c
 14332  002970  B4D8               	btfsc	status,2,c
 14333  002972  D013               	goto	i2l9329
 14334                           
 14335                           ; BSR set to: 0
 14336  002974  EE20 F002          	lfsr	2,2
 14337  002978  5046               	movf	i2__doprnt@pb,w,c
 14338  00297A  26D9               	addwf	fsr2l,f,c
 14339  00297C  5047               	movf	i2__doprnt@pb+1,w,c
 14340  00297E  22DA               	addwfc	fsr2h,f,c
 14341  002980  D801               	call	i2u1552_48
 14342  002982  D089               	goto	i2l9343
 14343  002984                     i2u1552_48:
 14344  002984  0005               	push	
 14345  002986  6EFA               	movwf	pclath,c
 14346  002988  50DE               	movf	postinc2,w,c
 14347  00298A  6EFD               	movwf	tosl,c
 14348  00298C  50DE               	movf	postinc2,w,c
 14349  00298E  6EFE               	movwf	tosh,c
 14350  002990  50F8               	movf	tblptru,w,c
 14351  002992  6EFF               	movwf	tosu,c
 14352  002994  50FA               	movf	pclath,w,c
 14353  002996  0E2D               	movlw	45
 14354  002998  0012               	return		;indir
 14355  00299A                     i2l9329:
 14356  00299A  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14357  00299E  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14358  0029A2  CFDE F04C          	movff	postinc2,??i2__doprnt
 14359  0029A6  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 14360  0029AA  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 14361  0029AE  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 14362  0029B2  0E2D               	movlw	45
 14363  0029B4  6EDF               	movwf	indf2,c
 14364  0029B6  D068               	goto	i2l9341
 14365  0029B8                     i2l9333:
 14366                           
 14367                           ;doprnt.c: 1478: {
 14368                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 14369  0029B8  C074  F04C         	movff	i2__doprnt@prec,??i2__doprnt
 14370  0029BC  C075  F04D         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 14371  0029C0  90D8               	bcf	status,0,c
 14372  0029C2  364C               	rlcf	??i2__doprnt,f,c
 14373  0029C4  364D               	rlcf	??i2__doprnt+1,f,c
 14374  0029C6  90D8               	bcf	status,0,c
 14375  0029C8  364C               	rlcf	??i2__doprnt,f,c
 14376  0029CA  364D               	rlcf	??i2__doprnt+1,f,c
 14377  0029CC  0E01               	movlw	low _dpowers
 14378  0029CE  244C               	addwf	??i2__doprnt,w,c
 14379  0029D0  6EF6               	movwf	tblptrl,c
 14380  0029D2  0E06               	movlw	high _dpowers
 14381  0029D4  204D               	addwfc	??i2__doprnt+1,w,c
 14382  0029D6  6EF7               	movwf	tblptrh,c
 14383  0029D8                     	if	0	;There are less than 3 active tblptr bytes
 14384  0029D8                     	endif
 14385  0029D8  0009               	tblrd		*+
 14386  0029DA  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 14387  0029DE  0009               	tblrd		*+
 14388  0029E0  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 14389  0029E4  0009               	tblrd		*+
 14390  0029E6  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 14391  0029EA  000A               	tblrd		*-
 14392  0029EC  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 14393  0029F0  C065  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 14394  0029F4  C066  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 14395  0029F8  C067  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 14396  0029FC  C068  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 14397  002A00  ECA2  F029         	call	i2___lldiv
 14398  002A04  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 14399  002A08  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 14400  002A0C  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 14401  002A10  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 14402  002A14  0E0A               	movlw	10
 14403  002A16  6E12               	movwf	i2___llmod@divisor,c
 14404  002A18  0E00               	movlw	0
 14405  002A1A  6E13               	movwf	i2___llmod@divisor+1,c
 14406  002A1C  0E00               	movlw	0
 14407  002A1E  6E14               	movwf	i2___llmod@divisor+2,c
 14408  002A20  0E00               	movlw	0
 14409  002A22  6E15               	movwf	i2___llmod@divisor+3,c
 14410  002A24  EC96  F02A         	call	i2___llmod	;wreg free
 14411  002A28  500E               	movf	?i2___llmod,w,c
 14412  002A2A  0F30               	addlw	48
 14413  002A2C  0100               	movlb	0	; () banked
 14414  002A2E  6F76               	movwf	i2__doprnt@c& (0+255),b
 14415                           
 14416                           ; BSR set to: 0
 14417                           ;doprnt.c: 1523: }
 14418                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 14419  002A30  EE20 F002          	lfsr	2,2
 14420  002A34  5046               	movf	i2__doprnt@pb,w,c
 14421  002A36  26D9               	addwf	fsr2l,f,c
 14422  002A38  5047               	movf	i2__doprnt@pb+1,w,c
 14423  002A3A  22DA               	addwfc	fsr2h,f,c
 14424  002A3C  50DE               	movf	postinc2,w,c
 14425  002A3E  10DE               	iorwf	postinc2,w,c
 14426  002A40  B4D8               	btfsc	status,2,c
 14427  002A42  D014               	goto	i2l9339
 14428                           
 14429                           ; BSR set to: 0
 14430  002A44  EE20 F002          	lfsr	2,2
 14431  002A48  5046               	movf	i2__doprnt@pb,w,c
 14432  002A4A  26D9               	addwf	fsr2l,f,c
 14433  002A4C  5047               	movf	i2__doprnt@pb+1,w,c
 14434  002A4E  22DA               	addwfc	fsr2h,f,c
 14435  002A50  D801               	call	i2u1554_48
 14436  002A52  D021               	goto	i2l9343
 14437  002A54                     i2u1554_48:
 14438  002A54  0005               	push	
 14439  002A56  6EFA               	movwf	pclath,c
 14440  002A58  50DE               	movf	postinc2,w,c
 14441  002A5A  6EFD               	movwf	tosl,c
 14442  002A5C  50DE               	movf	postinc2,w,c
 14443  002A5E  6EFE               	movwf	tosh,c
 14444  002A60  50F8               	movf	tblptru,w,c
 14445  002A62  6EFF               	movwf	tosu,c
 14446  002A64  50FA               	movf	pclath,w,c
 14447  002A66  0100               	movlb	0	; () banked
 14448  002A68  5176               	movf	i2__doprnt@c& (0+255),w,b
 14449  002A6A  0012               	return		;indir
 14450  002A6C                     i2l9339:
 14451  002A6C  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14452  002A70  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14453  002A74  CFDE F04C          	movff	postinc2,??i2__doprnt
 14454  002A78  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 14455  002A7C  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 14456  002A80  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 14457  002A84  C076  FFDF         	movff	i2__doprnt@c,indf2
 14458  002A88                     i2l9341:
 14459  002A88  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14460  002A8C  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14461  002A90  2ADE               	incf	postinc2,f,c
 14462  002A92  0E00               	movlw	0
 14463  002A94  22DD               	addwfc	postdec2,f,c
 14464  002A96                     i2l9343:
 14465  002A96  0100               	movlb	0	; () banked
 14466  002A98  0774               	decf	i2__doprnt@prec& (0+255),f,b
 14467  002A9A  A0D8               	btfss	status,0,c
 14468  002A9C  0775               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 14469  002A9E  0100               	movlb	0	; () banked
 14470  002AA0  2974               	incf	i2__doprnt@prec& (0+255),w,b
 14471  002AA2  E18A               	bnz	i2l9333
 14472  002AA4  0100               	movlb	0	; () banked
 14473  002AA6  2975               	incf	(i2__doprnt@prec+1)& (0+255),w,b
 14474  002AA8  A4D8               	btfss	status,2,c
 14475  002AAA  D786               	goto	i2l9333
 14476  002AAC                     i2l9345:
 14477  002AAC  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 14478  002AB0  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 14479  002AB4  4A48               	infsnz	i2__doprnt@f,f,c
 14480  002AB6  2A49               	incf	i2__doprnt@f+1,f,c
 14481  002AB8                     	if	0	;tblptru may be non-zero
 14482  002AB8                     	endif
 14483  002AB8                     	if	0	;tblptru may be non-zero
 14484  002AB8                     	endif
 14485  002AB8  0008               	tblrd		*
 14486  002ABA  CFF5 F076          	movff	tablat,i2__doprnt@c
 14487  002ABE  0100               	movlb	0	; () banked
 14488  002AC0  5176               	movf	i2__doprnt@c& (0+255),w,b
 14489  002AC2  A4D8               	btfss	status,2,c
 14490  002AC4  EFAF  F00C         	goto	i2l8957
 14491  002AC8                     i2l9347:
 14492                           
 14493                           ; BSR set to: 0
 14494                           ;doprnt.c: 1540: return 0;
 14495  002AC8  0E00               	movlw	0
 14496  002ACA  6E47               	movwf	?i2__doprnt+1,c
 14497  002ACC  0E00               	movlw	0
 14498  002ACE  6E46               	movwf	?i2__doprnt,c
 14499  002AD0  0012               	return	
 14500  002AD2                     __end_ofi2__doprnt:
 14501                           	opt stack 0
 14502                           tosu	equ	0xFFF
 14503                           tosh	equ	0xFFE
 14504                           tosl	equ	0xFFD
 14505                           pclatu	equ	0xFFB
 14506                           pclath	equ	0xFFA
 14507                           tblptru	equ	0xFF8
 14508                           tblptrh	equ	0xFF7
 14509                           tblptrl	equ	0xFF6
 14510                           tablat	equ	0xFF5
 14511                           prodh	equ	0xFF4
 14512                           prodl	equ	0xFF3
 14513                           intcon	equ	0xFF2
 14514                           intcon2	equ	0xFF1
 14515                           intcon3	equ	0xFF0
 14516                           postinc0	equ	0xFEE
 14517                           fsr0h	equ	0xFEA
 14518                           fsr0l	equ	0xFE9
 14519                           wreg	equ	0xFE8
 14520                           fsr1h	equ	0xFE2
 14521                           fsr1l	equ	0xFE1
 14522                           indf2	equ	0xFDF
 14523                           postinc2	equ	0xFDE
 14524                           postdec2	equ	0xFDD
 14525                           fsr2h	equ	0xFDA
 14526                           fsr2l	equ	0xFD9
 14527                           status	equ	0xFD8
 14528                           
 14529 ;; *************** function i2_scale *****************
 14530 ;; Defined at:
 14531 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 14532 ;; Parameters:    Size  Location     Type
 14533 ;;  scl             1    wreg     char 
 14534 ;; Auto vars:     Size  Location     Type
 14535 ;;  scl             1   53[COMRAM] char 
 14536 ;; Return value:  Size  Location     Type
 14537 ;;                  3   47[COMRAM] char 
 14538 ;; Registers used:
 14539 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14540 ;; Tracked objects:
 14541 ;;		On entry : 0/0
 14542 ;;		On exit  : 0/0
 14543 ;;		Unchanged: 0/0
 14544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14545 ;;      Params:         3       0       0       0       0       0       0
 14546 ;;      Locals:         4       0       0       0       0       0       0
 14547 ;;      Temps:          0       0       0       0       0       0       0
 14548 ;;      Totals:         7       0       0       0       0       0       0
 14549 ;;Total ram usage:        7 bytes
 14550 ;; Hardware stack levels used:    1
 14551 ;; Hardware stack levels required when called:    2
 14552 ;; This function calls:
 14553 ;;		i2___awdiv
 14554 ;;		i2___awmod
 14555 ;;		i2___ftmul
 14556 ;;		i2___wmul
 14557 ;; This function is called by:
 14558 ;;		i2__doprnt
 14559 ;; This function uses a non-reentrant model
 14560 ;;
 14561                           
 14562                           	psect	text50
 14563  002F80                     __ptext50:
 14564                           	opt stack 0
 14565  002F80                     i2_scale:
 14566                           	opt stack 19
 14567                           
 14568                           ; BSR set to: 0
 14569                           ;incstack = 0
 14570                           ;i2scale@scl stored from wreg
 14571  002F80  6E36               	movwf	i2scale@scl,c
 14572                           
 14573                           ;doprnt.c: 428: if(scl < 0) {
 14574  002F82  AE36               	btfss	i2scale@scl,7,c
 14575  002F84  D0FB               	goto	i2l4129
 14576                           
 14577                           ;doprnt.c: 429: scl = -scl;
 14578  002F86  6C36               	negf	i2scale@scl,c
 14579                           
 14580                           ;doprnt.c: 430: if(scl>=110)
 14581  002F88  5036               	movf	i2scale@scl,w,c
 14582  002F8A  0A80               	xorlw	128
 14583  002F8C  0F12               	addlw	-238
 14584  002F8E  A0D8               	btfss	status,0,c
 14585  002F90  D091               	goto	i2l4119
 14586                           
 14587                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 14588  002F92  0E00               	movlw	0
 14589  002F94  6E12               	movwf	i2___wmul@multiplicand+1,c
 14590  002F96  0E03               	movlw	3
 14591  002F98  6E11               	movwf	i2___wmul@multiplicand,c
 14592  002F9A  0E00               	movlw	0
 14593  002F9C  6E0A               	movwf	i2___awdiv@divisor+1,c
 14594  002F9E  0E0A               	movlw	10
 14595  002FA0  6E09               	movwf	i2___awdiv@divisor,c
 14596  002FA2  0E00               	movlw	0
 14597  002FA4  6E04               	movwf	i2___awmod@divisor+1,c
 14598  002FA6  0E64               	movlw	100
 14599  002FA8  6E03               	movwf	i2___awmod@divisor,c
 14600  002FAA  5036               	movf	i2scale@scl,w,c
 14601  002FAC  6E01               	movwf	i2___awmod@dividend,c
 14602  002FAE  6A02               	clrf	i2___awmod@dividend+1,c
 14603  002FB0  BE01               	btfsc	i2___awmod@dividend,7,c
 14604  002FB2  0602               	decf	i2___awmod@dividend+1,f,c
 14605  002FB4  EC5E  F02A         	call	i2___awmod
 14606  002FB8  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 14607  002FBC  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 14608  002FC0  EC60  F029         	call	i2___awdiv	;wreg free
 14609  002FC4  0E09               	movlw	9
 14610  002FC6  2407               	addwf	?i2___awdiv,w,c
 14611  002FC8  6E0F               	movwf	i2___wmul@multiplier,c
 14612  002FCA  0E00               	movlw	0
 14613  002FCC  2008               	addwfc	?i2___awdiv+1,w,c
 14614  002FCE  6E10               	movwf	i2___wmul@multiplier+1,c
 14615  002FD0  ECEE  F02C         	call	i2___wmul	;wreg free
 14616  002FD4  0E29               	movlw	low __npowers_
 14617  002FD6  240F               	addwf	?i2___wmul,w,c
 14618  002FD8  6EF6               	movwf	tblptrl,c
 14619  002FDA  0E06               	movlw	high __npowers_
 14620  002FDC  2010               	addwfc	?i2___wmul+1,w,c
 14621  002FDE  6EF7               	movwf	tblptrh,c
 14622  002FE0                     	if	0	;There are less than 3 active tblptr bytes
 14623  002FE0                     	endif
 14624  002FE0  0009               	tblrd		*+
 14625  002FE2  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14626  002FE6  0009               	tblrd		*+
 14627  002FE8  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14628  002FEC  000A               	tblrd		*-
 14629  002FEE  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14630  002FF2  0E00               	movlw	0
 14631  002FF4  6E0A               	movwf	i2___awdiv@divisor+1,c
 14632  002FF6  0E64               	movlw	100
 14633  002FF8  6E09               	movwf	i2___awdiv@divisor,c
 14634  002FFA  5036               	movf	i2scale@scl,w,c
 14635  002FFC  6E07               	movwf	i2___awdiv@dividend,c
 14636  002FFE  6A08               	clrf	i2___awdiv@dividend+1,c
 14637  003000  BE07               	btfsc	i2___awdiv@dividend,7,c
 14638  003002  0608               	decf	i2___awdiv@dividend+1,f,c
 14639  003004  EC60  F029         	call	i2___awdiv	;wreg free
 14640  003008  0E12               	movlw	18
 14641  00300A  2407               	addwf	?i2___awdiv,w,c
 14642  00300C  6E0F               	movwf	i2___wmul@multiplier,c
 14643  00300E  0E00               	movlw	0
 14644  003010  2008               	addwfc	?i2___awdiv+1,w,c
 14645  003012  6E10               	movwf	i2___wmul@multiplier+1,c
 14646  003014  0E00               	movlw	0
 14647  003016  6E12               	movwf	i2___wmul@multiplicand+1,c
 14648  003018  0E03               	movlw	3
 14649  00301A  6E11               	movwf	i2___wmul@multiplicand,c
 14650  00301C  ECEE  F02C         	call	i2___wmul	;wreg free
 14651  003020  0E29               	movlw	low __npowers_
 14652  003022  240F               	addwf	?i2___wmul,w,c
 14653  003024  6EF6               	movwf	tblptrl,c
 14654  003026  0E06               	movlw	high __npowers_
 14655  003028  2010               	addwfc	?i2___wmul+1,w,c
 14656  00302A  6EF7               	movwf	tblptrh,c
 14657  00302C                     	if	0	;There are less than 3 active tblptr bytes
 14658  00302C                     	endif
 14659  00302C  0009               	tblrd		*+
 14660  00302E  CFF5 F021          	movff	tablat,i2___ftmul@f1
 14661  003032  0009               	tblrd		*+
 14662  003034  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 14663  003038  000A               	tblrd		*-
 14664  00303A  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 14665  00303E  EC2C  F025         	call	i2___ftmul	;wreg free
 14666  003042  C021  F033         	movff	?i2___ftmul,i2_scale$1902
 14667  003046  C022  F034         	movff	?i2___ftmul+1,i2_scale$1902+1
 14668  00304A  C023  F035         	movff	?i2___ftmul+2,i2_scale$1902+2
 14669                           
 14670                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 14671  00304E  C033  F021         	movff	i2_scale$1902,i2___ftmul@f1
 14672  003052  C034  F022         	movff	i2_scale$1902+1,i2___ftmul@f1+1
 14673  003056  C035  F023         	movff	i2_scale$1902+2,i2___ftmul@f1+2
 14674  00305A  0E00               	movlw	0
 14675  00305C  6E12               	movwf	i2___wmul@multiplicand+1,c
 14676  00305E  0E03               	movlw	3
 14677  003060  6E11               	movwf	i2___wmul@multiplicand,c
 14678  003062  0E00               	movlw	0
 14679  003064  6E04               	movwf	i2___awmod@divisor+1,c
 14680  003066  0E0A               	movlw	10
 14681  003068  6E03               	movwf	i2___awmod@divisor,c
 14682  00306A  5036               	movf	i2scale@scl,w,c
 14683  00306C  6E01               	movwf	i2___awmod@dividend,c
 14684  00306E  6A02               	clrf	i2___awmod@dividend+1,c
 14685  003070  BE01               	btfsc	i2___awmod@dividend,7,c
 14686  003072  0602               	decf	i2___awmod@dividend+1,f,c
 14687  003074  EC5E  F02A         	call	i2___awmod	;wreg free
 14688  003078  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 14689  00307C  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14690  003080  ECEE  F02C         	call	i2___wmul	;wreg free
 14691  003084  0E29               	movlw	low __npowers_
 14692  003086  240F               	addwf	?i2___wmul,w,c
 14693  003088  6EF6               	movwf	tblptrl,c
 14694  00308A  0E06               	movlw	high __npowers_
 14695  00308C  2010               	addwfc	?i2___wmul+1,w,c
 14696  00308E  6EF7               	movwf	tblptrh,c
 14697  003090                     	if	0	;There are less than 3 active tblptr bytes
 14698  003090                     	endif
 14699  003090  0009               	tblrd		*+
 14700  003092  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14701  003096  0009               	tblrd		*+
 14702  003098  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14703  00309C  000A               	tblrd		*-
 14704  00309E  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14705  0030A2  EC2C  F025         	call	i2___ftmul	;wreg free
 14706  0030A6  C021  F030         	movff	?i2___ftmul,?i2_scale
 14707  0030AA  C022  F031         	movff	?i2___ftmul+1,?i2_scale+1
 14708  0030AE  C023  F032         	movff	?i2___ftmul+2,?i2_scale+2
 14709  0030B2  0012               	return	
 14710  0030B4                     i2l4119:
 14711                           
 14712                           ;doprnt.c: 432: else if(scl > 10)
 14713  0030B4  5036               	movf	i2scale@scl,w,c
 14714  0030B6  0A80               	xorlw	128
 14715  0030B8  0F75               	addlw	-139
 14716  0030BA  A0D8               	btfss	status,0,c
 14717  0030BC  D04D               	goto	i2l4125
 14718                           
 14719                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 14720  0030BE  0E00               	movlw	0
 14721  0030C0  6E0A               	movwf	i2___awdiv@divisor+1,c
 14722  0030C2  0E0A               	movlw	10
 14723  0030C4  6E09               	movwf	i2___awdiv@divisor,c
 14724  0030C6  5036               	movf	i2scale@scl,w,c
 14725  0030C8  6E07               	movwf	i2___awdiv@dividend,c
 14726  0030CA  6A08               	clrf	i2___awdiv@dividend+1,c
 14727  0030CC  BE07               	btfsc	i2___awdiv@dividend,7,c
 14728  0030CE  0608               	decf	i2___awdiv@dividend+1,f,c
 14729  0030D0  EC60  F029         	call	i2___awdiv	;wreg free
 14730  0030D4  0E09               	movlw	9
 14731  0030D6  2407               	addwf	?i2___awdiv,w,c
 14732  0030D8  6E0F               	movwf	i2___wmul@multiplier,c
 14733  0030DA  0E00               	movlw	0
 14734  0030DC  2008               	addwfc	?i2___awdiv+1,w,c
 14735  0030DE  6E10               	movwf	i2___wmul@multiplier+1,c
 14736  0030E0  0E00               	movlw	0
 14737  0030E2  6E12               	movwf	i2___wmul@multiplicand+1,c
 14738  0030E4  0E03               	movlw	3
 14739  0030E6  6E11               	movwf	i2___wmul@multiplicand,c
 14740  0030E8  ECEE  F02C         	call	i2___wmul	;wreg free
 14741  0030EC  0E29               	movlw	low __npowers_
 14742  0030EE  240F               	addwf	?i2___wmul,w,c
 14743  0030F0  6EF6               	movwf	tblptrl,c
 14744  0030F2  0E06               	movlw	high __npowers_
 14745  0030F4  2010               	addwfc	?i2___wmul+1,w,c
 14746  0030F6  6EF7               	movwf	tblptrh,c
 14747  0030F8                     	if	0	;There are less than 3 active tblptr bytes
 14748  0030F8                     	endif
 14749  0030F8  0009               	tblrd		*+
 14750  0030FA  CFF5 F021          	movff	tablat,i2___ftmul@f1
 14751  0030FE  0009               	tblrd		*+
 14752  003100  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 14753  003104  000A               	tblrd		*-
 14754  003106  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 14755  00310A  0E00               	movlw	0
 14756  00310C  6E12               	movwf	i2___wmul@multiplicand+1,c
 14757  00310E  0E03               	movlw	3
 14758  003110  6E11               	movwf	i2___wmul@multiplicand,c
 14759  003112  0E00               	movlw	0
 14760  003114  6E04               	movwf	i2___awmod@divisor+1,c
 14761  003116  0E0A               	movlw	10
 14762  003118  6E03               	movwf	i2___awmod@divisor,c
 14763  00311A  5036               	movf	i2scale@scl,w,c
 14764  00311C  6E01               	movwf	i2___awmod@dividend,c
 14765  00311E  6A02               	clrf	i2___awmod@dividend+1,c
 14766  003120  BE01               	btfsc	i2___awmod@dividend,7,c
 14767  003122  0602               	decf	i2___awmod@dividend+1,f,c
 14768  003124  EC5E  F02A         	call	i2___awmod	;wreg free
 14769  003128  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 14770  00312C  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14771  003130  ECEE  F02C         	call	i2___wmul	;wreg free
 14772  003134  0E29               	movlw	low __npowers_
 14773  003136  240F               	addwf	?i2___wmul,w,c
 14774  003138  6EF6               	movwf	tblptrl,c
 14775  00313A  0E06               	movlw	high __npowers_
 14776  00313C  2010               	addwfc	?i2___wmul+1,w,c
 14777  00313E  6EF7               	movwf	tblptrh,c
 14778  003140                     	if	0	;There are less than 3 active tblptr bytes
 14779  003140                     	endif
 14780  003140  0009               	tblrd		*+
 14781  003142  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14782  003146  0009               	tblrd		*+
 14783  003148  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14784  00314C  000A               	tblrd		*-
 14785  00314E  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14786  003152  EC2C  F025         	call	i2___ftmul	;wreg free
 14787  003156  D7A7               	goto	L8
 14788  003158                     i2l4125:
 14789                           
 14790                           ;doprnt.c: 434: return _npowers_[scl];
 14791  003158  5036               	movf	i2scale@scl,w,c
 14792  00315A  0D03               	mullw	3
 14793  00315C  0E29               	movlw	low __npowers_
 14794  00315E  24F3               	addwf	prodl,w,c
 14795  003160  6EF6               	movwf	tblptrl,c
 14796  003162  0E06               	movlw	high __npowers_
 14797  003164  20F4               	addwfc	prodh,w,c
 14798  003166  6EF7               	movwf	tblptrh,c
 14799  003168                     	if	0	;There are less than 3 active tblptr bytes
 14800  003168                     	endif
 14801  003168  0009               	tblrd		*+
 14802  00316A  CFF5 F030          	movff	tablat,?i2_scale
 14803  00316E  0009               	tblrd		*+
 14804  003170  CFF5 F031          	movff	tablat,?i2_scale+1
 14805  003174  000A               	tblrd		*-
 14806  003176  CFF5 F032          	movff	tablat,?i2_scale+2
 14807  00317A  0012               	return	
 14808  00317C                     i2l4129:
 14809                           
 14810                           ;doprnt.c: 435: }
 14811                           ;doprnt.c: 436: if(scl>=110)
 14812  00317C  5036               	movf	i2scale@scl,w,c
 14813  00317E  0A80               	xorlw	128
 14814  003180  0F12               	addlw	-238
 14815  003182  A0D8               	btfss	status,0,c
 14816  003184  D091               	goto	i2l4137
 14817                           
 14818                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 14819  003186  0E00               	movlw	0
 14820  003188  6E12               	movwf	i2___wmul@multiplicand+1,c
 14821  00318A  0E03               	movlw	3
 14822  00318C  6E11               	movwf	i2___wmul@multiplicand,c
 14823  00318E  0E00               	movlw	0
 14824  003190  6E0A               	movwf	i2___awdiv@divisor+1,c
 14825  003192  0E0A               	movlw	10
 14826  003194  6E09               	movwf	i2___awdiv@divisor,c
 14827  003196  0E00               	movlw	0
 14828  003198  6E04               	movwf	i2___awmod@divisor+1,c
 14829  00319A  0E64               	movlw	100
 14830  00319C  6E03               	movwf	i2___awmod@divisor,c
 14831  00319E  5036               	movf	i2scale@scl,w,c
 14832  0031A0  6E01               	movwf	i2___awmod@dividend,c
 14833  0031A2  6A02               	clrf	i2___awmod@dividend+1,c
 14834  0031A4  BE01               	btfsc	i2___awmod@dividend,7,c
 14835  0031A6  0602               	decf	i2___awmod@dividend+1,f,c
 14836  0031A8  EC5E  F02A         	call	i2___awmod	;wreg free
 14837  0031AC  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 14838  0031B0  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 14839  0031B4  EC60  F029         	call	i2___awdiv	;wreg free
 14840  0031B8  0E09               	movlw	9
 14841  0031BA  2407               	addwf	?i2___awdiv,w,c
 14842  0031BC  6E0F               	movwf	i2___wmul@multiplier,c
 14843  0031BE  0E00               	movlw	0
 14844  0031C0  2008               	addwfc	?i2___awdiv+1,w,c
 14845  0031C2  6E10               	movwf	i2___wmul@multiplier+1,c
 14846  0031C4  ECEE  F02C         	call	i2___wmul	;wreg free
 14847  0031C8  0E50               	movlw	low __powers_
 14848  0031CA  240F               	addwf	?i2___wmul,w,c
 14849  0031CC  6EF6               	movwf	tblptrl,c
 14850  0031CE  0E06               	movlw	high __powers_
 14851  0031D0  2010               	addwfc	?i2___wmul+1,w,c
 14852  0031D2  6EF7               	movwf	tblptrh,c
 14853  0031D4                     	if	0	;There are less than 3 active tblptr bytes
 14854  0031D4                     	endif
 14855  0031D4  0009               	tblrd		*+
 14856  0031D6  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14857  0031DA  0009               	tblrd		*+
 14858  0031DC  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14859  0031E0  000A               	tblrd		*-
 14860  0031E2  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14861  0031E6  0E00               	movlw	0
 14862  0031E8  6E0A               	movwf	i2___awdiv@divisor+1,c
 14863  0031EA  0E64               	movlw	100
 14864  0031EC  6E09               	movwf	i2___awdiv@divisor,c
 14865  0031EE  5036               	movf	i2scale@scl,w,c
 14866  0031F0  6E07               	movwf	i2___awdiv@dividend,c
 14867  0031F2  6A08               	clrf	i2___awdiv@dividend+1,c
 14868  0031F4  BE07               	btfsc	i2___awdiv@dividend,7,c
 14869  0031F6  0608               	decf	i2___awdiv@dividend+1,f,c
 14870  0031F8  EC60  F029         	call	i2___awdiv	;wreg free
 14871  0031FC  0E12               	movlw	18
 14872  0031FE  2407               	addwf	?i2___awdiv,w,c
 14873  003200  6E0F               	movwf	i2___wmul@multiplier,c
 14874  003202  0E00               	movlw	0
 14875  003204  2008               	addwfc	?i2___awdiv+1,w,c
 14876  003206  6E10               	movwf	i2___wmul@multiplier+1,c
 14877  003208  0E00               	movlw	0
 14878  00320A  6E12               	movwf	i2___wmul@multiplicand+1,c
 14879  00320C  0E03               	movlw	3
 14880  00320E  6E11               	movwf	i2___wmul@multiplicand,c
 14881  003210  ECEE  F02C         	call	i2___wmul	;wreg free
 14882  003214  0E50               	movlw	low __powers_
 14883  003216  240F               	addwf	?i2___wmul,w,c
 14884  003218  6EF6               	movwf	tblptrl,c
 14885  00321A  0E06               	movlw	high __powers_
 14886  00321C  2010               	addwfc	?i2___wmul+1,w,c
 14887  00321E  6EF7               	movwf	tblptrh,c
 14888  003220                     	if	0	;There are less than 3 active tblptr bytes
 14889  003220                     	endif
 14890  003220  0009               	tblrd		*+
 14891  003222  CFF5 F021          	movff	tablat,i2___ftmul@f1
 14892  003226  0009               	tblrd		*+
 14893  003228  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 14894  00322C  000A               	tblrd		*-
 14895  00322E  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 14896  003232  EC2C  F025         	call	i2___ftmul	;wreg free
 14897  003236  C021  F033         	movff	?i2___ftmul,i2_scale$1902
 14898  00323A  C022  F034         	movff	?i2___ftmul+1,i2_scale$1902+1
 14899  00323E  C023  F035         	movff	?i2___ftmul+2,i2_scale$1902+2
 14900                           
 14901                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 14902  003242  C033  F021         	movff	i2_scale$1902,i2___ftmul@f1
 14903  003246  C034  F022         	movff	i2_scale$1902+1,i2___ftmul@f1+1
 14904  00324A  C035  F023         	movff	i2_scale$1902+2,i2___ftmul@f1+2
 14905  00324E  0E00               	movlw	0
 14906  003250  6E12               	movwf	i2___wmul@multiplicand+1,c
 14907  003252  0E03               	movlw	3
 14908  003254  6E11               	movwf	i2___wmul@multiplicand,c
 14909  003256  0E00               	movlw	0
 14910  003258  6E04               	movwf	i2___awmod@divisor+1,c
 14911  00325A  0E0A               	movlw	10
 14912  00325C  6E03               	movwf	i2___awmod@divisor,c
 14913  00325E  5036               	movf	i2scale@scl,w,c
 14914  003260  6E01               	movwf	i2___awmod@dividend,c
 14915  003262  6A02               	clrf	i2___awmod@dividend+1,c
 14916  003264  BE01               	btfsc	i2___awmod@dividend,7,c
 14917  003266  0602               	decf	i2___awmod@dividend+1,f,c
 14918  003268  EC5E  F02A         	call	i2___awmod	;wreg free
 14919  00326C  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 14920  003270  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14921  003274  ECEE  F02C         	call	i2___wmul	;wreg free
 14922  003278  0E50               	movlw	low __powers_
 14923  00327A  240F               	addwf	?i2___wmul,w,c
 14924  00327C  6EF6               	movwf	tblptrl,c
 14925  00327E  0E06               	movlw	high __powers_
 14926  003280  2010               	addwfc	?i2___wmul+1,w,c
 14927  003282  6EF7               	movwf	tblptrh,c
 14928  003284                     	if	0	;There are less than 3 active tblptr bytes
 14929  003284                     	endif
 14930  003284  0009               	tblrd		*+
 14931  003286  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14932  00328A  0009               	tblrd		*+
 14933  00328C  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14934  003290  000A               	tblrd		*-
 14935  003292  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14936  003296  EC2C  F025         	call	i2___ftmul	;wreg free
 14937  00329A  C021  F030         	movff	?i2___ftmul,?i2_scale
 14938  00329E  C022  F031         	movff	?i2___ftmul+1,?i2_scale+1
 14939  0032A2  C023  F032         	movff	?i2___ftmul+2,?i2_scale+2
 14940  0032A6  0012               	return	
 14941  0032A8                     i2l4137:
 14942                           
 14943                           ;doprnt.c: 438: else if(scl > 10)
 14944  0032A8  5036               	movf	i2scale@scl,w,c
 14945  0032AA  0A80               	xorlw	128
 14946  0032AC  0F75               	addlw	-139
 14947  0032AE  A0D8               	btfss	status,0,c
 14948  0032B0  D04D               	goto	i2l4143
 14949                           
 14950                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 14951  0032B2  0E00               	movlw	0
 14952  0032B4  6E0A               	movwf	i2___awdiv@divisor+1,c
 14953  0032B6  0E0A               	movlw	10
 14954  0032B8  6E09               	movwf	i2___awdiv@divisor,c
 14955  0032BA  5036               	movf	i2scale@scl,w,c
 14956  0032BC  6E07               	movwf	i2___awdiv@dividend,c
 14957  0032BE  6A08               	clrf	i2___awdiv@dividend+1,c
 14958  0032C0  BE07               	btfsc	i2___awdiv@dividend,7,c
 14959  0032C2  0608               	decf	i2___awdiv@dividend+1,f,c
 14960  0032C4  EC60  F029         	call	i2___awdiv	;wreg free
 14961  0032C8  0E09               	movlw	9
 14962  0032CA  2407               	addwf	?i2___awdiv,w,c
 14963  0032CC  6E0F               	movwf	i2___wmul@multiplier,c
 14964  0032CE  0E00               	movlw	0
 14965  0032D0  2008               	addwfc	?i2___awdiv+1,w,c
 14966  0032D2  6E10               	movwf	i2___wmul@multiplier+1,c
 14967  0032D4  0E00               	movlw	0
 14968  0032D6  6E12               	movwf	i2___wmul@multiplicand+1,c
 14969  0032D8  0E03               	movlw	3
 14970  0032DA  6E11               	movwf	i2___wmul@multiplicand,c
 14971  0032DC  ECEE  F02C         	call	i2___wmul	;wreg free
 14972  0032E0  0E50               	movlw	low __powers_
 14973  0032E2  240F               	addwf	?i2___wmul,w,c
 14974  0032E4  6EF6               	movwf	tblptrl,c
 14975  0032E6  0E06               	movlw	high __powers_
 14976  0032E8  2010               	addwfc	?i2___wmul+1,w,c
 14977  0032EA  6EF7               	movwf	tblptrh,c
 14978  0032EC                     	if	0	;There are less than 3 active tblptr bytes
 14979  0032EC                     	endif
 14980  0032EC  0009               	tblrd		*+
 14981  0032EE  CFF5 F021          	movff	tablat,i2___ftmul@f1
 14982  0032F2  0009               	tblrd		*+
 14983  0032F4  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 14984  0032F8  000A               	tblrd		*-
 14985  0032FA  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 14986  0032FE  0E00               	movlw	0
 14987  003300  6E12               	movwf	i2___wmul@multiplicand+1,c
 14988  003302  0E03               	movlw	3
 14989  003304  6E11               	movwf	i2___wmul@multiplicand,c
 14990  003306  0E00               	movlw	0
 14991  003308  6E04               	movwf	i2___awmod@divisor+1,c
 14992  00330A  0E0A               	movlw	10
 14993  00330C  6E03               	movwf	i2___awmod@divisor,c
 14994  00330E  5036               	movf	i2scale@scl,w,c
 14995  003310  6E01               	movwf	i2___awmod@dividend,c
 14996  003312  6A02               	clrf	i2___awmod@dividend+1,c
 14997  003314  BE01               	btfsc	i2___awmod@dividend,7,c
 14998  003316  0602               	decf	i2___awmod@dividend+1,f,c
 14999  003318  EC5E  F02A         	call	i2___awmod	;wreg free
 15000  00331C  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 15001  003320  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15002  003324  ECEE  F02C         	call	i2___wmul	;wreg free
 15003  003328  0E50               	movlw	low __powers_
 15004  00332A  240F               	addwf	?i2___wmul,w,c
 15005  00332C  6EF6               	movwf	tblptrl,c
 15006  00332E  0E06               	movlw	high __powers_
 15007  003330  2010               	addwfc	?i2___wmul+1,w,c
 15008  003332  6EF7               	movwf	tblptrh,c
 15009  003334                     	if	0	;There are less than 3 active tblptr bytes
 15010  003334                     	endif
 15011  003334  0009               	tblrd		*+
 15012  003336  CFF5 F024          	movff	tablat,i2___ftmul@f2
 15013  00333A  0009               	tblrd		*+
 15014  00333C  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 15015  003340  000A               	tblrd		*-
 15016  003342  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 15017  003346  EC2C  F025         	call	i2___ftmul	;wreg free
 15018  00334A  D7A7               	goto	L9
 15019  00334C                     i2l4143:
 15020                           
 15021                           ;doprnt.c: 440: return _powers_[scl];
 15022  00334C  5036               	movf	i2scale@scl,w,c
 15023  00334E  0D03               	mullw	3
 15024  003350  0E50               	movlw	low __powers_
 15025  003352  24F3               	addwf	prodl,w,c
 15026  003354  6EF6               	movwf	tblptrl,c
 15027  003356  0E06               	movlw	high __powers_
 15028  003358  20F4               	addwfc	prodh,w,c
 15029  00335A  6EF7               	movwf	tblptrh,c
 15030  00335C                     	if	0	;There are less than 3 active tblptr bytes
 15031  00335C                     	endif
 15032  00335C  0009               	tblrd		*+
 15033  00335E  CFF5 F030          	movff	tablat,?i2_scale
 15034  003362  0009               	tblrd		*+
 15035  003364  CFF5 F031          	movff	tablat,?i2_scale+1
 15036  003368  000A               	tblrd		*-
 15037  00336A  CFF5 F032          	movff	tablat,?i2_scale+2
 15038  00336E  0012               	return	
 15039  003370                     __end_ofi2_scale:
 15040                           	opt stack 0
 15041                           tosu	equ	0xFFF
 15042                           tosh	equ	0xFFE
 15043                           tosl	equ	0xFFD
 15044                           pclatu	equ	0xFFB
 15045                           pclath	equ	0xFFA
 15046                           tblptru	equ	0xFF8
 15047                           tblptrh	equ	0xFF7
 15048                           tblptrl	equ	0xFF6
 15049                           tablat	equ	0xFF5
 15050                           prodh	equ	0xFF4
 15051                           prodl	equ	0xFF3
 15052                           intcon	equ	0xFF2
 15053                           intcon2	equ	0xFF1
 15054                           intcon3	equ	0xFF0
 15055                           postinc0	equ	0xFEE
 15056                           fsr0h	equ	0xFEA
 15057                           fsr0l	equ	0xFE9
 15058                           wreg	equ	0xFE8
 15059                           fsr1h	equ	0xFE2
 15060                           fsr1l	equ	0xFE1
 15061                           indf2	equ	0xFDF
 15062                           postinc2	equ	0xFDE
 15063                           postdec2	equ	0xFDD
 15064                           fsr2h	equ	0xFDA
 15065                           fsr2l	equ	0xFD9
 15066                           status	equ	0xFD8
 15067                           
 15068 ;; *************** function i2_putch *****************
 15069 ;; Defined at:
 15070 ;;		line 111 in file "mcc_generated_files/eusart1.c"
 15071 ;; Parameters:    Size  Location     Type
 15072 ;;  txData          1    wreg     unsigned char 
 15073 ;; Auto vars:     Size  Location     Type
 15074 ;;  txData          1    1[COMRAM] unsigned char 
 15075 ;; Return value:  Size  Location     Type
 15076 ;;                  1    wreg      void 
 15077 ;; Registers used:
 15078 ;;		wreg, status,2, cstack
 15079 ;; Tracked objects:
 15080 ;;		On entry : 0/0
 15081 ;;		On exit  : 0/0
 15082 ;;		Unchanged: 0/0
 15083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15084 ;;      Params:         0       0       0       0       0       0       0
 15085 ;;      Locals:         1       0       0       0       0       0       0
 15086 ;;      Temps:          0       0       0       0       0       0       0
 15087 ;;      Totals:         1       0       0       0       0       0       0
 15088 ;;Total ram usage:        1 bytes
 15089 ;; Hardware stack levels used:    1
 15090 ;; Hardware stack levels required when called:    1
 15091 ;; This function calls:
 15092 ;;		i2_EUSART1_Write
 15093 ;; This function is called by:
 15094 ;;		_printf
 15095 ;; This function uses a non-reentrant model
 15096 ;;
 15097                           
 15098                           	psect	text51
 15099  005B1E                     __ptext51:
 15100                           	opt stack 0
 15101  005B1E                     i2_putch:
 15102                           	opt stack 20
 15103                           
 15104                           ;incstack = 0
 15105                           ;i2putch@txData stored from wreg
 15106  005B1E  6E02               	movwf	i2putch@txData,c
 15107                           
 15108                           ;eusart1.c: 113: EUSART1_Write(txData);
 15109  005B20  5002               	movf	i2putch@txData,w,c
 15110  005B22  EC7A  F02D         	call	i2_EUSART1_Write
 15111  005B26  0012               	return		;funcret
 15112  005B28                     __end_ofi2_putch:
 15113                           	opt stack 0
 15114                           tosu	equ	0xFFF
 15115                           tosh	equ	0xFFE
 15116                           tosl	equ	0xFFD
 15117                           pclatu	equ	0xFFB
 15118                           pclath	equ	0xFFA
 15119                           tblptru	equ	0xFF8
 15120                           tblptrh	equ	0xFF7
 15121                           tblptrl	equ	0xFF6
 15122                           tablat	equ	0xFF5
 15123                           prodh	equ	0xFF4
 15124                           prodl	equ	0xFF3
 15125                           intcon	equ	0xFF2
 15126                           intcon2	equ	0xFF1
 15127                           intcon3	equ	0xFF0
 15128                           postinc0	equ	0xFEE
 15129                           fsr0h	equ	0xFEA
 15130                           fsr0l	equ	0xFE9
 15131                           wreg	equ	0xFE8
 15132                           fsr1h	equ	0xFE2
 15133                           fsr1l	equ	0xFE1
 15134                           indf2	equ	0xFDF
 15135                           postinc2	equ	0xFDE
 15136                           postdec2	equ	0xFDD
 15137                           fsr2h	equ	0xFDA
 15138                           fsr2l	equ	0xFD9
 15139                           status	equ	0xFD8
 15140                           
 15141 ;; *************** function i2_EUSART1_Write *****************
 15142 ;; Defined at:
 15143 ;;		line 97 in file "mcc_generated_files/eusart1.c"
 15144 ;; Parameters:    Size  Location     Type
 15145 ;;  txData          1    wreg     unsigned char 
 15146 ;; Auto vars:     Size  Location     Type
 15147 ;;  txData          1    0[COMRAM] unsigned char 
 15148 ;; Return value:  Size  Location     Type
 15149 ;;                  1    wreg      void 
 15150 ;; Registers used:
 15151 ;;		wreg
 15152 ;; Tracked objects:
 15153 ;;		On entry : 0/0
 15154 ;;		On exit  : 0/0
 15155 ;;		Unchanged: 0/0
 15156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15157 ;;      Params:         0       0       0       0       0       0       0
 15158 ;;      Locals:         1       0       0       0       0       0       0
 15159 ;;      Temps:          0       0       0       0       0       0       0
 15160 ;;      Totals:         1       0       0       0       0       0       0
 15161 ;;Total ram usage:        1 bytes
 15162 ;; Hardware stack levels used:    1
 15163 ;; This function calls:
 15164 ;;		Nothing
 15165 ;; This function is called by:
 15166 ;;		i2_putch
 15167 ;; This function uses a non-reentrant model
 15168 ;;
 15169                           
 15170                           	psect	text52
 15171  005AF4                     __ptext52:
 15172                           	opt stack 0
 15173  005AF4                     i2_EUSART1_Write:
 15174                           	opt stack 20
 15175                           
 15176                           ;incstack = 0
 15177                           ;i2EUSART1_Write@txData stored from wreg
 15178  005AF4  6E01               	movwf	i2EUSART1_Write@txData,c
 15179  005AF6                     i2l226:
 15180  005AF6  A89E               	btfss	3998,4,c	;volatile
 15181  005AF8  D7FE               	goto	i2l226
 15182                           
 15183                           ;eusart1.c: 101: }
 15184                           ;eusart1.c: 103: TXREG1 = txData;
 15185  005AFA  C001  FFAD         	movff	i2EUSART1_Write@txData,4013	;volatile
 15186  005AFE  0012               	return		;funcret
 15187  005B00                     __end_ofi2_EUSART1_Write:
 15188                           	opt stack 0
 15189                           tosu	equ	0xFFF
 15190                           tosh	equ	0xFFE
 15191                           tosl	equ	0xFFD
 15192                           pclatu	equ	0xFFB
 15193                           pclath	equ	0xFFA
 15194                           tblptru	equ	0xFF8
 15195                           tblptrh	equ	0xFF7
 15196                           tblptrl	equ	0xFF6
 15197                           tablat	equ	0xFF5
 15198                           prodh	equ	0xFF4
 15199                           prodl	equ	0xFF3
 15200                           intcon	equ	0xFF2
 15201                           intcon2	equ	0xFF1
 15202                           intcon3	equ	0xFF0
 15203                           postinc0	equ	0xFEE
 15204                           fsr0h	equ	0xFEA
 15205                           fsr0l	equ	0xFE9
 15206                           wreg	equ	0xFE8
 15207                           fsr1h	equ	0xFE2
 15208                           fsr1l	equ	0xFE1
 15209                           indf2	equ	0xFDF
 15210                           postinc2	equ	0xFDE
 15211                           postdec2	equ	0xFDD
 15212                           fsr2h	equ	0xFDA
 15213                           fsr2l	equ	0xFD9
 15214                           status	equ	0xFD8
 15215                           
 15216 ;; *************** function i2_isdigit *****************
 15217 ;; Defined at:
 15218 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
 15219 ;; Parameters:    Size  Location     Type
 15220 ;;  c               1    wreg     unsigned char 
 15221 ;; Auto vars:     Size  Location     Type
 15222 ;;  c               1    2[COMRAM] unsigned char 
 15223 ;; Return value:  Size  Location     Type
 15224 ;;		None               void
 15225 ;; Registers used:
 15226 ;;		wreg, status,2, status,0
 15227 ;; Tracked objects:
 15228 ;;		On entry : 0/0
 15229 ;;		On exit  : 0/0
 15230 ;;		Unchanged: 0/0
 15231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15232 ;;      Params:         0       0       0       0       0       0       0
 15233 ;;      Locals:         2       0       0       0       0       0       0
 15234 ;;      Temps:          1       0       0       0       0       0       0
 15235 ;;      Totals:         3       0       0       0       0       0       0
 15236 ;;Total ram usage:        3 bytes
 15237 ;; Hardware stack levels used:    1
 15238 ;; This function calls:
 15239 ;;		Nothing
 15240 ;; This function is called by:
 15241 ;;		i2__doprnt
 15242 ;; This function uses a non-reentrant model
 15243 ;;
 15244                           
 15245                           	psect	text53
 15246  005A68                     __ptext53:
 15247                           	opt stack 0
 15248  005A68                     i2_isdigit:
 15249                           	opt stack 21
 15250                           
 15251                           ;incstack = 0
 15252                           ;i2isdigit@c stored from wreg
 15253  005A68  6E03               	movwf	i2isdigit@c,c
 15254  005A6A  0E00               	movlw	0
 15255  005A6C  6E02               	movwf	i2_isdigit$1253,c
 15256  005A6E  0E3A               	movlw	58
 15257  005A70  6003               	cpfslt	i2isdigit@c,c
 15258  005A72  D005               	goto	i2l4347
 15259  005A74  0E2F               	movlw	47
 15260  005A76  6403               	cpfsgt	i2isdigit@c,c
 15261  005A78  D002               	goto	i2l4347
 15262  005A7A  0E01               	movlw	1
 15263  005A7C  6E02               	movwf	i2_isdigit$1253,c
 15264  005A7E                     i2l4347:
 15265  005A7E  C002  F001         	movff	i2_isdigit$1253,??i2_isdigit
 15266  005A82  3001               	rrcf	??i2_isdigit,w,c
 15267  005A84  0012               	return	
 15268  005A86                     __end_ofi2_isdigit:
 15269                           	opt stack 0
 15270                           tosu	equ	0xFFF
 15271                           tosh	equ	0xFFE
 15272                           tosl	equ	0xFFD
 15273                           pclatu	equ	0xFFB
 15274                           pclath	equ	0xFFA
 15275                           tblptru	equ	0xFF8
 15276                           tblptrh	equ	0xFF7
 15277                           tblptrl	equ	0xFF6
 15278                           tablat	equ	0xFF5
 15279                           prodh	equ	0xFF4
 15280                           prodl	equ	0xFF3
 15281                           intcon	equ	0xFF2
 15282                           intcon2	equ	0xFF1
 15283                           intcon3	equ	0xFF0
 15284                           postinc0	equ	0xFEE
 15285                           fsr0h	equ	0xFEA
 15286                           fsr0l	equ	0xFE9
 15287                           wreg	equ	0xFE8
 15288                           fsr1h	equ	0xFE2
 15289                           fsr1l	equ	0xFE1
 15290                           indf2	equ	0xFDF
 15291                           postinc2	equ	0xFDE
 15292                           postdec2	equ	0xFDD
 15293                           fsr2h	equ	0xFDA
 15294                           fsr2l	equ	0xFD9
 15295                           status	equ	0xFD8
 15296                           
 15297 ;; *************** function i2_fround *****************
 15298 ;; Defined at:
 15299 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 15300 ;; Parameters:    Size  Location     Type
 15301 ;;  prec            1    wreg     unsigned char 
 15302 ;; Auto vars:     Size  Location     Type
 15303 ;;  prec            1   56[COMRAM] unsigned char 
 15304 ;; Return value:  Size  Location     Type
 15305 ;;                  3   47[COMRAM] unsigned char 
 15306 ;; Registers used:
 15307 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15308 ;; Tracked objects:
 15309 ;;		On entry : 0/0
 15310 ;;		On exit  : 0/0
 15311 ;;		Unchanged: 0/0
 15312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15313 ;;      Params:         3       0       0       0       0       0       0
 15314 ;;      Locals:         7       0       0       0       0       0       0
 15315 ;;      Temps:          0       0       0       0       0       0       0
 15316 ;;      Totals:        10       0       0       0       0       0       0
 15317 ;;Total ram usage:       10 bytes
 15318 ;; Hardware stack levels used:    1
 15319 ;; Hardware stack levels required when called:    2
 15320 ;; This function calls:
 15321 ;;		i2___awdiv
 15322 ;;		i2___awmod
 15323 ;;		i2___ftmul
 15324 ;;		i2___wmul
 15325 ;; This function is called by:
 15326 ;;		i2__doprnt
 15327 ;; This function uses a non-reentrant model
 15328 ;;
 15329                           
 15330                           	psect	text54
 15331  003884                     __ptext54:
 15332                           	opt stack 0
 15333  003884                     i2_fround:
 15334                           	opt stack 19
 15335                           
 15336                           ;incstack = 0
 15337                           ;i2fround@prec stored from wreg
 15338  003884  6E39               	movwf	i2fround@prec,c
 15339                           
 15340                           ;doprnt.c: 413: if(prec>=110)
 15341  003886  0E6D               	movlw	109
 15342  003888  6439               	cpfsgt	i2fround@prec,c
 15343  00388A  D09F               	goto	i2l4097
 15344                           
 15345                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15346  00388C  0E00               	movlw	0
 15347  00388E  6E12               	movwf	i2___wmul@multiplicand+1,c
 15348  003890  0E03               	movlw	3
 15349  003892  6E11               	movwf	i2___wmul@multiplicand,c
 15350  003894  0E00               	movlw	0
 15351  003896  6E0A               	movwf	i2___awdiv@divisor+1,c
 15352  003898  0E0A               	movlw	10
 15353  00389A  6E09               	movwf	i2___awdiv@divisor,c
 15354  00389C  0E00               	movlw	0
 15355  00389E  6E04               	movwf	i2___awmod@divisor+1,c
 15356  0038A0  0E64               	movlw	100
 15357  0038A2  6E03               	movwf	i2___awmod@divisor,c
 15358  0038A4  C039  F001         	movff	i2fround@prec,i2___awmod@dividend
 15359  0038A8  6A02               	clrf	i2___awmod@dividend+1,c
 15360  0038AA  EC5E  F02A         	call	i2___awmod	;wreg free
 15361  0038AE  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 15362  0038B2  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 15363  0038B6  EC60  F029         	call	i2___awdiv	;wreg free
 15364  0038BA  0E09               	movlw	9
 15365  0038BC  2407               	addwf	?i2___awdiv,w,c
 15366  0038BE  6E0F               	movwf	i2___wmul@multiplier,c
 15367  0038C0  0E00               	movlw	0
 15368  0038C2  2008               	addwfc	?i2___awdiv+1,w,c
 15369  0038C4  6E10               	movwf	i2___wmul@multiplier+1,c
 15370  0038C6  ECEE  F02C         	call	i2___wmul	;wreg free
 15371  0038CA  0E29               	movlw	low __npowers_
 15372  0038CC  240F               	addwf	?i2___wmul,w,c
 15373  0038CE  6EF6               	movwf	tblptrl,c
 15374  0038D0  0E06               	movlw	high __npowers_
 15375  0038D2  2010               	addwfc	?i2___wmul+1,w,c
 15376  0038D4  6EF7               	movwf	tblptrh,c
 15377  0038D6                     	if	0	;There are less than 3 active tblptr bytes
 15378  0038D6                     	endif
 15379  0038D6  0009               	tblrd		*+
 15380  0038D8  CFF5 F024          	movff	tablat,i2___ftmul@f2
 15381  0038DC  0009               	tblrd		*+
 15382  0038DE  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 15383  0038E2  000A               	tblrd		*-
 15384  0038E4  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 15385  0038E8  0E00               	movlw	0
 15386  0038EA  6E0A               	movwf	i2___awdiv@divisor+1,c
 15387  0038EC  0E64               	movlw	100
 15388  0038EE  6E09               	movwf	i2___awdiv@divisor,c
 15389  0038F0  C039  F007         	movff	i2fround@prec,i2___awdiv@dividend
 15390  0038F4  6A08               	clrf	i2___awdiv@dividend+1,c
 15391  0038F6  EC60  F029         	call	i2___awdiv	;wreg free
 15392  0038FA  0E12               	movlw	18
 15393  0038FC  2407               	addwf	?i2___awdiv,w,c
 15394  0038FE  6E0F               	movwf	i2___wmul@multiplier,c
 15395  003900  0E00               	movlw	0
 15396  003902  2008               	addwfc	?i2___awdiv+1,w,c
 15397  003904  6E10               	movwf	i2___wmul@multiplier+1,c
 15398  003906  0E00               	movlw	0
 15399  003908  6E12               	movwf	i2___wmul@multiplicand+1,c
 15400  00390A  0E03               	movlw	3
 15401  00390C  6E11               	movwf	i2___wmul@multiplicand,c
 15402  00390E  ECEE  F02C         	call	i2___wmul	;wreg free
 15403  003912  0E29               	movlw	low __npowers_
 15404  003914  240F               	addwf	?i2___wmul,w,c
 15405  003916  6EF6               	movwf	tblptrl,c
 15406  003918  0E06               	movlw	high __npowers_
 15407  00391A  2010               	addwfc	?i2___wmul+1,w,c
 15408  00391C  6EF7               	movwf	tblptrh,c
 15409  00391E                     	if	0	;There are less than 3 active tblptr bytes
 15410  00391E                     	endif
 15411  00391E  0009               	tblrd		*+
 15412  003920  CFF5 F021          	movff	tablat,i2___ftmul@f1
 15413  003924  0009               	tblrd		*+
 15414  003926  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 15415  00392A  000A               	tblrd		*-
 15416  00392C  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 15417  003930  EC2C  F025         	call	i2___ftmul	;wreg free
 15418  003934  C021  F036         	movff	?i2___ftmul,i2_fround$1900
 15419  003938  C022  F037         	movff	?i2___ftmul+1,i2_fround$1900+1
 15420  00393C  C023  F038         	movff	?i2___ftmul+2,i2_fround$1900+2
 15421                           
 15422                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15423  003940  0E00               	movlw	0
 15424  003942  6E12               	movwf	i2___wmul@multiplicand+1,c
 15425  003944  0E03               	movlw	3
 15426  003946  6E11               	movwf	i2___wmul@multiplicand,c
 15427  003948  0E00               	movlw	0
 15428  00394A  6E04               	movwf	i2___awmod@divisor+1,c
 15429  00394C  0E0A               	movlw	10
 15430  00394E  6E03               	movwf	i2___awmod@divisor,c
 15431  003950  C039  F001         	movff	i2fround@prec,i2___awmod@dividend
 15432  003954  6A02               	clrf	i2___awmod@dividend+1,c
 15433  003956  EC5E  F02A         	call	i2___awmod	;wreg free
 15434  00395A  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 15435  00395E  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15436  003962  ECEE  F02C         	call	i2___wmul	;wreg free
 15437  003966  0E29               	movlw	low __npowers_
 15438  003968  240F               	addwf	?i2___wmul,w,c
 15439  00396A  6EF6               	movwf	tblptrl,c
 15440  00396C  0E06               	movlw	high __npowers_
 15441  00396E  2010               	addwfc	?i2___wmul+1,w,c
 15442  003970  6EF7               	movwf	tblptrh,c
 15443  003972                     	if	0	;There are less than 3 active tblptr bytes
 15444  003972                     	endif
 15445  003972  0009               	tblrd		*+
 15446  003974  CFF5 F024          	movff	tablat,i2___ftmul@f2
 15447  003978  0009               	tblrd		*+
 15448  00397A  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 15449  00397E  000A               	tblrd		*-
 15450  003980  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 15451  003984  C036  F021         	movff	i2_fround$1900,i2___ftmul@f1
 15452  003988  C037  F022         	movff	i2_fround$1900+1,i2___ftmul@f1+1
 15453  00398C  C038  F023         	movff	i2_fround$1900+2,i2___ftmul@f1+2
 15454  003990  EC2C  F025         	call	i2___ftmul	;wreg free
 15455  003994  C021  F033         	movff	?i2___ftmul,i2_fround$1901
 15456  003998  C022  F034         	movff	?i2___ftmul+1,i2_fround$1901+1
 15457  00399C  C023  F035         	movff	?i2___ftmul+2,i2_fround$1901+2
 15458                           
 15459                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15460  0039A0  C033  F021         	movff	i2_fround$1901,i2___ftmul@f1
 15461  0039A4  C034  F022         	movff	i2_fround$1901+1,i2___ftmul@f1+1
 15462  0039A8  C035  F023         	movff	i2_fround$1901+2,i2___ftmul@f1+2
 15463  0039AC  0E00               	movlw	0
 15464  0039AE  6E24               	movwf	i2___ftmul@f2,c
 15465  0039B0  0E00               	movlw	0
 15466  0039B2  6E25               	movwf	i2___ftmul@f2+1,c
 15467  0039B4  0E3F               	movlw	63
 15468  0039B6  6E26               	movwf	i2___ftmul@f2+2,c
 15469  0039B8  EC2C  F025         	call	i2___ftmul	;wreg free
 15470  0039BC  C021  F030         	movff	?i2___ftmul,?i2_fround
 15471  0039C0  C022  F031         	movff	?i2___ftmul+1,?i2_fround+1
 15472  0039C4  C023  F032         	movff	?i2___ftmul+2,?i2_fround+2
 15473  0039C8  0012               	return	
 15474  0039CA                     i2l4097:
 15475                           
 15476                           ;doprnt.c: 415: else if(prec > 10)
 15477  0039CA  0E0A               	movlw	10
 15478  0039CC  6439               	cpfsgt	i2fround@prec,c
 15479  0039CE  D05D               	goto	i2l4105
 15480                           
 15481                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 15482  0039D0  0E00               	movlw	0
 15483  0039D2  6E12               	movwf	i2___wmul@multiplicand+1,c
 15484  0039D4  0E03               	movlw	3
 15485  0039D6  6E11               	movwf	i2___wmul@multiplicand,c
 15486  0039D8  0E00               	movlw	0
 15487  0039DA  6E04               	movwf	i2___awmod@divisor+1,c
 15488  0039DC  0E0A               	movlw	10
 15489  0039DE  6E03               	movwf	i2___awmod@divisor,c
 15490  0039E0  C039  F001         	movff	i2fround@prec,i2___awmod@dividend
 15491  0039E4  6A02               	clrf	i2___awmod@dividend+1,c
 15492  0039E6  EC5E  F02A         	call	i2___awmod	;wreg free
 15493  0039EA  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 15494  0039EE  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15495  0039F2  ECEE  F02C         	call	i2___wmul	;wreg free
 15496  0039F6  0E29               	movlw	low __npowers_
 15497  0039F8  240F               	addwf	?i2___wmul,w,c
 15498  0039FA  6EF6               	movwf	tblptrl,c
 15499  0039FC  0E06               	movlw	high __npowers_
 15500  0039FE  2010               	addwfc	?i2___wmul+1,w,c
 15501  003A00  6EF7               	movwf	tblptrh,c
 15502  003A02                     	if	0	;There are less than 3 active tblptr bytes
 15503  003A02                     	endif
 15504  003A02  0009               	tblrd		*+
 15505  003A04  CFF5 F024          	movff	tablat,i2___ftmul@f2
 15506  003A08  0009               	tblrd		*+
 15507  003A0A  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 15508  003A0E  000A               	tblrd		*-
 15509  003A10  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 15510  003A14  0E00               	movlw	0
 15511  003A16  6E0A               	movwf	i2___awdiv@divisor+1,c
 15512  003A18  0E0A               	movlw	10
 15513  003A1A  6E09               	movwf	i2___awdiv@divisor,c
 15514  003A1C  C039  F007         	movff	i2fround@prec,i2___awdiv@dividend
 15515  003A20  6A08               	clrf	i2___awdiv@dividend+1,c
 15516  003A22  EC60  F029         	call	i2___awdiv	;wreg free
 15517  003A26  0E09               	movlw	9
 15518  003A28  2407               	addwf	?i2___awdiv,w,c
 15519  003A2A  6E0F               	movwf	i2___wmul@multiplier,c
 15520  003A2C  0E00               	movlw	0
 15521  003A2E  2008               	addwfc	?i2___awdiv+1,w,c
 15522  003A30  6E10               	movwf	i2___wmul@multiplier+1,c
 15523  003A32  0E00               	movlw	0
 15524  003A34  6E12               	movwf	i2___wmul@multiplicand+1,c
 15525  003A36  0E03               	movlw	3
 15526  003A38  6E11               	movwf	i2___wmul@multiplicand,c
 15527  003A3A  ECEE  F02C         	call	i2___wmul	;wreg free
 15528  003A3E  0E29               	movlw	low __npowers_
 15529  003A40  240F               	addwf	?i2___wmul,w,c
 15530  003A42  6EF6               	movwf	tblptrl,c
 15531  003A44  0E06               	movlw	high __npowers_
 15532  003A46  2010               	addwfc	?i2___wmul+1,w,c
 15533  003A48  6EF7               	movwf	tblptrh,c
 15534  003A4A                     	if	0	;There are less than 3 active tblptr bytes
 15535  003A4A                     	endif
 15536  003A4A  0009               	tblrd		*+
 15537  003A4C  CFF5 F021          	movff	tablat,i2___ftmul@f1
 15538  003A50  0009               	tblrd		*+
 15539  003A52  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 15540  003A56  000A               	tblrd		*-
 15541  003A58  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 15542  003A5C  EC2C  F025         	call	i2___ftmul	;wreg free
 15543  003A60  C021  F036         	movff	?i2___ftmul,i2_fround$1900
 15544  003A64  C022  F037         	movff	?i2___ftmul+1,i2_fround$1900+1
 15545  003A68  C023  F038         	movff	?i2___ftmul+2,i2_fround$1900+2
 15546                           
 15547                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 15548  003A6C  C036  F021         	movff	i2_fround$1900,i2___ftmul@f1
 15549  003A70  C037  F022         	movff	i2_fround$1900+1,i2___ftmul@f1+1
 15550  003A74  C038  F023         	movff	i2_fround$1900+2,i2___ftmul@f1+2
 15551  003A78  0E00               	movlw	0
 15552  003A7A  6E24               	movwf	i2___ftmul@f2,c
 15553  003A7C  0E00               	movlw	0
 15554  003A7E  6E25               	movwf	i2___ftmul@f2+1,c
 15555  003A80  0E3F               	movlw	63
 15556  003A82  6E26               	movwf	i2___ftmul@f2+2,c
 15557  003A84  EC2C  F025         	call	i2___ftmul	;wreg free
 15558  003A88  D799               	goto	L10
 15559  003A8A                     i2l4105:
 15560                           
 15561                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 15562  003A8A  5039               	movf	i2fround@prec,w,c
 15563  003A8C  0D03               	mullw	3
 15564  003A8E  0E29               	movlw	low __npowers_
 15565  003A90  24F3               	addwf	prodl,w,c
 15566  003A92  6EF6               	movwf	tblptrl,c
 15567  003A94  0E06               	movlw	high __npowers_
 15568  003A96  20F4               	addwfc	prodh,w,c
 15569  003A98  6EF7               	movwf	tblptrh,c
 15570  003A9A                     	if	0	;There are less than 3 active tblptr bytes
 15571  003A9A                     	endif
 15572  003A9A  0009               	tblrd		*+
 15573  003A9C  CFF5 F021          	movff	tablat,i2___ftmul@f1
 15574  003AA0  0009               	tblrd		*+
 15575  003AA2  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 15576  003AA6  000A               	tblrd		*-
 15577  003AA8  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 15578  003AAC  0E00               	movlw	0
 15579  003AAE  6E24               	movwf	i2___ftmul@f2,c
 15580  003AB0  0E00               	movlw	0
 15581  003AB2  6E25               	movwf	i2___ftmul@f2+1,c
 15582  003AB4  0E3F               	movlw	63
 15583  003AB6  6E26               	movwf	i2___ftmul@f2+2,c
 15584  003AB8  EC2C  F025         	call	i2___ftmul	;wreg free
 15585  003ABC  C021  F030         	movff	?i2___ftmul,?i2_fround
 15586  003AC0  C022  F031         	movff	?i2___ftmul+1,?i2_fround+1
 15587  003AC4  C023  F032         	movff	?i2___ftmul+2,?i2_fround+2
 15588  003AC8  0012               	return	
 15589  003ACA                     __end_ofi2_fround:
 15590                           	opt stack 0
 15591                           tosu	equ	0xFFF
 15592                           tosh	equ	0xFFE
 15593                           tosl	equ	0xFFD
 15594                           pclatu	equ	0xFFB
 15595                           pclath	equ	0xFFA
 15596                           tblptru	equ	0xFF8
 15597                           tblptrh	equ	0xFF7
 15598                           tblptrl	equ	0xFF6
 15599                           tablat	equ	0xFF5
 15600                           prodh	equ	0xFF4
 15601                           prodl	equ	0xFF3
 15602                           intcon	equ	0xFF2
 15603                           intcon2	equ	0xFF1
 15604                           intcon3	equ	0xFF0
 15605                           postinc0	equ	0xFEE
 15606                           fsr0h	equ	0xFEA
 15607                           fsr0l	equ	0xFE9
 15608                           wreg	equ	0xFE8
 15609                           fsr1h	equ	0xFE2
 15610                           fsr1l	equ	0xFE1
 15611                           indf2	equ	0xFDF
 15612                           postinc2	equ	0xFDE
 15613                           postdec2	equ	0xFDD
 15614                           fsr2h	equ	0xFDA
 15615                           fsr2l	equ	0xFD9
 15616                           status	equ	0xFD8
 15617                           
 15618 ;; *************** function i2___wmul *****************
 15619 ;; Defined at:
 15620 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 15621 ;; Parameters:    Size  Location     Type
 15622 ;;  multiplier      2   14[COMRAM] unsigned int 
 15623 ;;  multiplicand    2   16[COMRAM] unsigned int 
 15624 ;; Auto vars:     Size  Location     Type
 15625 ;;  __wmul          2   18[COMRAM] unsigned int 
 15626 ;; Return value:  Size  Location     Type
 15627 ;;                  2   14[COMRAM] unsigned int 
 15628 ;; Registers used:
 15629 ;;		wreg, status,2, status,0, prodl, prodh
 15630 ;; Tracked objects:
 15631 ;;		On entry : 0/0
 15632 ;;		On exit  : 0/0
 15633 ;;		Unchanged: 0/0
 15634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15635 ;;      Params:         4       0       0       0       0       0       0
 15636 ;;      Locals:         2       0       0       0       0       0       0
 15637 ;;      Temps:          0       0       0       0       0       0       0
 15638 ;;      Totals:         6       0       0       0       0       0       0
 15639 ;;Total ram usage:        6 bytes
 15640 ;; Hardware stack levels used:    1
 15641 ;; This function calls:
 15642 ;;		Nothing
 15643 ;; This function is called by:
 15644 ;;		_INT0_ISR
 15645 ;;		i2_fround
 15646 ;;		i2_scale
 15647 ;;		i2__doprnt
 15648 ;; This function uses a non-reentrant model
 15649 ;;
 15650                           
 15651                           	psect	text55
 15652  0059DC                     __ptext55:
 15653                           	opt stack 0
 15654  0059DC                     i2___wmul:
 15655                           	opt stack 23
 15656                           
 15657                           ;incstack = 0
 15658  0059DC  500F               	movf	i2___wmul@multiplier,w,c
 15659  0059DE  0211               	mulwf	i2___wmul@multiplicand,c
 15660  0059E0  CFF3 F013          	movff	prodl,i2___wmul@product
 15661  0059E4  CFF4 F014          	movff	prodh,i2___wmul@product+1
 15662  0059E8  500F               	movf	i2___wmul@multiplier,w,c
 15663  0059EA  0212               	mulwf	i2___wmul@multiplicand+1,c
 15664  0059EC  50F3               	movf	prodl,w,c
 15665  0059EE  2614               	addwf	i2___wmul@product+1,f,c
 15666  0059F0  5010               	movf	i2___wmul@multiplier+1,w,c
 15667  0059F2  0211               	mulwf	i2___wmul@multiplicand,c
 15668  0059F4  50F3               	movf	prodl,w,c
 15669  0059F6  2614               	addwf	i2___wmul@product+1,f,c
 15670  0059F8  C013  F00F         	movff	i2___wmul@product,?i2___wmul
 15671  0059FC  C014  F010         	movff	i2___wmul@product+1,?i2___wmul+1
 15672  005A00  0012               	return	
 15673  005A02                     __end_ofi2___wmul:
 15674                           	opt stack 0
 15675                           tosu	equ	0xFFF
 15676                           tosh	equ	0xFFE
 15677                           tosl	equ	0xFFD
 15678                           pclatu	equ	0xFFB
 15679                           pclath	equ	0xFFA
 15680                           tblptru	equ	0xFF8
 15681                           tblptrh	equ	0xFF7
 15682                           tblptrl	equ	0xFF6
 15683                           tablat	equ	0xFF5
 15684                           prodh	equ	0xFF4
 15685                           prodl	equ	0xFF3
 15686                           intcon	equ	0xFF2
 15687                           intcon2	equ	0xFF1
 15688                           intcon3	equ	0xFF0
 15689                           postinc0	equ	0xFEE
 15690                           fsr0h	equ	0xFEA
 15691                           fsr0l	equ	0xFE9
 15692                           wreg	equ	0xFE8
 15693                           fsr1h	equ	0xFE2
 15694                           fsr1l	equ	0xFE1
 15695                           indf2	equ	0xFDF
 15696                           postinc2	equ	0xFDE
 15697                           postdec2	equ	0xFDD
 15698                           fsr2h	equ	0xFDA
 15699                           fsr2l	equ	0xFD9
 15700                           status	equ	0xFD8
 15701                           
 15702 ;; *************** function i2___ftmul *****************
 15703 ;; Defined at:
 15704 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
 15705 ;; Parameters:    Size  Location     Type
 15706 ;;  f1              3   32[COMRAM] float 
 15707 ;;  f2              3   35[COMRAM] float 
 15708 ;; Auto vars:     Size  Location     Type
 15709 ;;  __ftmul         3   42[COMRAM] unsigned um
 15710 ;;  __ftmul         1   46[COMRAM] unsigned char 
 15711 ;;  __ftmul         1   45[COMRAM] unsigned char 
 15712 ;;  __ftmul         1   41[COMRAM] unsigned char 
 15713 ;; Return value:  Size  Location     Type
 15714 ;;                  3   32[COMRAM] float 
 15715 ;; Registers used:
 15716 ;;		wreg, status,2, status,0, cstack
 15717 ;; Tracked objects:
 15718 ;;		On entry : 0/0
 15719 ;;		On exit  : 0/0
 15720 ;;		Unchanged: 0/0
 15721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15722 ;;      Params:         6       0       0       0       0       0       0
 15723 ;;      Locals:         6       0       0       0       0       0       0
 15724 ;;      Temps:          3       0       0       0       0       0       0
 15725 ;;      Totals:        15       0       0       0       0       0       0
 15726 ;;Total ram usage:       15 bytes
 15727 ;; Hardware stack levels used:    1
 15728 ;; Hardware stack levels required when called:    1
 15729 ;; This function calls:
 15730 ;;		i2___ftpack
 15731 ;; This function is called by:
 15732 ;;		_INT0_ISR
 15733 ;;		i2_fround
 15734 ;;		i2_scale
 15735 ;;		i2__doprnt
 15736 ;; This function uses a non-reentrant model
 15737 ;;
 15738                           
 15739                           	psect	text56
 15740  004A58                     __ptext56:
 15741                           	opt stack 0
 15742  004A58                     i2___ftmul:
 15743                           	opt stack 22
 15744                           
 15745                           ;incstack = 0
 15746  004A58  C023  F027         	movff	i2___ftmul@f1+2,??i2___ftmul
 15747  004A5C  6A28               	clrf	(??i2___ftmul+1)& (0+255),c
 15748  004A5E  6A29               	clrf	(??i2___ftmul+2)& (0+255),c
 15749  004A60  3422               	rlcf	i2___ftmul@f1+1,w,c
 15750  004A62  3627               	rlcf	??i2___ftmul& (0+255),f,c
 15751  004A64  E301               	bnc	u464_41
 15752  004A66  8028               	bsf	(??i2___ftmul+1)& (0+255),0,c
 15753  004A68                     u464_41:
 15754  004A68  5027               	movf	??i2___ftmul,w,c
 15755  004A6A  6E2A               	movwf	i2___ftmul@exp,c
 15756  004A6C  502A               	movf	i2___ftmul@exp,w,c
 15757  004A6E  A4D8               	btfss	status,2,c
 15758  004A70  D007               	goto	i2l3835
 15759  004A72  0E00               	movlw	0
 15760  004A74  6E21               	movwf	?i2___ftmul,c
 15761  004A76  0E00               	movlw	0
 15762  004A78  6E22               	movwf	?i2___ftmul+1,c
 15763  004A7A  0E00               	movlw	0
 15764  004A7C  6E23               	movwf	?i2___ftmul+2,c
 15765  004A7E  0012               	return	
 15766  004A80                     i2l3835:
 15767  004A80  C026  F027         	movff	i2___ftmul@f2+2,??i2___ftmul
 15768  004A84  6A28               	clrf	(??i2___ftmul+1)& (0+255),c
 15769  004A86  6A29               	clrf	(??i2___ftmul+2)& (0+255),c
 15770  004A88  3425               	rlcf	i2___ftmul@f2+1,w,c
 15771  004A8A  3627               	rlcf	??i2___ftmul& (0+255),f,c
 15772  004A8C  E301               	bnc	u466_41
 15773  004A8E  8028               	bsf	(??i2___ftmul+1)& (0+255),0,c
 15774  004A90                     u466_41:
 15775  004A90  5027               	movf	??i2___ftmul,w,c
 15776  004A92  6E2F               	movwf	i2___ftmul@sign,c
 15777  004A94  502F               	movf	i2___ftmul@sign,w,c
 15778  004A96  A4D8               	btfss	status,2,c
 15779  004A98  D007               	goto	i2l3841
 15780  004A9A  0E00               	movlw	0
 15781  004A9C  6E21               	movwf	?i2___ftmul,c
 15782  004A9E  0E00               	movlw	0
 15783  004AA0  6E22               	movwf	?i2___ftmul+1,c
 15784  004AA2  0E00               	movlw	0
 15785  004AA4  6E23               	movwf	?i2___ftmul+2,c
 15786  004AA6  0012               	return	
 15787  004AA8                     i2l3841:
 15788  004AA8  502F               	movf	i2___ftmul@sign,w,c
 15789  004AAA  0F7B               	addlw	123
 15790  004AAC  262A               	addwf	i2___ftmul@exp,f,c
 15791  004AAE  C023  F02F         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 15792  004AB2  5026               	movf	i2___ftmul@f2+2,w,c
 15793  004AB4  1A2F               	xorwf	i2___ftmul@sign,f,c
 15794  004AB6  0E80               	movlw	128
 15795  004AB8  162F               	andwf	i2___ftmul@sign,f,c
 15796  004ABA  8E22               	bsf	i2___ftmul@f1+1,7,c
 15797  004ABC  8E25               	bsf	i2___ftmul@f2+1,7,c
 15798  004ABE  0EFF               	movlw	255
 15799  004AC0  1624               	andwf	i2___ftmul@f2,f,c
 15800  004AC2  0EFF               	movlw	255
 15801  004AC4  1625               	andwf	i2___ftmul@f2+1,f,c
 15802  004AC6  0E00               	movlw	0
 15803  004AC8  1626               	andwf	i2___ftmul@f2+2,f,c
 15804  004ACA  0E00               	movlw	0
 15805  004ACC  6E2B               	movwf	i2___ftmul@f3_as_product,c
 15806  004ACE  0E00               	movlw	0
 15807  004AD0  6E2C               	movwf	i2___ftmul@f3_as_product+1,c
 15808  004AD2  0E00               	movlw	0
 15809  004AD4  6E2D               	movwf	i2___ftmul@f3_as_product+2,c
 15810  004AD6  0E07               	movlw	7
 15811  004AD8  6E2E               	movwf	i2___ftmul@cntr,c
 15812  004ADA                     i2l3855:
 15813  004ADA  A021               	btfss	i2___ftmul@f1,0,c
 15814  004ADC  D006               	goto	i2l3859
 15815  004ADE  5024               	movf	i2___ftmul@f2,w,c
 15816  004AE0  262B               	addwf	i2___ftmul@f3_as_product,f,c
 15817  004AE2  5025               	movf	i2___ftmul@f2+1,w,c
 15818  004AE4  222C               	addwfc	i2___ftmul@f3_as_product+1,f,c
 15819  004AE6  5026               	movf	i2___ftmul@f2+2,w,c
 15820  004AE8  222D               	addwfc	i2___ftmul@f3_as_product+2,f,c
 15821  004AEA                     i2l3859:
 15822  004AEA  90D8               	bcf	status,0,c
 15823  004AEC  3223               	rrcf	i2___ftmul@f1+2,f,c
 15824  004AEE  3222               	rrcf	i2___ftmul@f1+1,f,c
 15825  004AF0  3221               	rrcf	i2___ftmul@f1,f,c
 15826  004AF2  90D8               	bcf	status,0,c
 15827  004AF4  3624               	rlcf	i2___ftmul@f2,f,c
 15828  004AF6  3625               	rlcf	i2___ftmul@f2+1,f,c
 15829  004AF8  3626               	rlcf	i2___ftmul@f2+2,f,c
 15830  004AFA  2E2E               	decfsz	i2___ftmul@cntr,f,c
 15831  004AFC  D7EE               	goto	i2l3855
 15832  004AFE  0E09               	movlw	9
 15833  004B00  6E2E               	movwf	i2___ftmul@cntr,c
 15834  004B02                     i2l3865:
 15835  004B02  A021               	btfss	i2___ftmul@f1,0,c
 15836  004B04  D006               	goto	i2l3869
 15837  004B06  5024               	movf	i2___ftmul@f2,w,c
 15838  004B08  262B               	addwf	i2___ftmul@f3_as_product,f,c
 15839  004B0A  5025               	movf	i2___ftmul@f2+1,w,c
 15840  004B0C  222C               	addwfc	i2___ftmul@f3_as_product+1,f,c
 15841  004B0E  5026               	movf	i2___ftmul@f2+2,w,c
 15842  004B10  222D               	addwfc	i2___ftmul@f3_as_product+2,f,c
 15843  004B12                     i2l3869:
 15844  004B12  90D8               	bcf	status,0,c
 15845  004B14  3223               	rrcf	i2___ftmul@f1+2,f,c
 15846  004B16  3222               	rrcf	i2___ftmul@f1+1,f,c
 15847  004B18  3221               	rrcf	i2___ftmul@f1,f,c
 15848  004B1A  90D8               	bcf	status,0,c
 15849  004B1C  322D               	rrcf	i2___ftmul@f3_as_product+2,f,c
 15850  004B1E  322C               	rrcf	i2___ftmul@f3_as_product+1,f,c
 15851  004B20  322B               	rrcf	i2___ftmul@f3_as_product,f,c
 15852  004B22  2E2E               	decfsz	i2___ftmul@cntr,f,c
 15853  004B24  D7EE               	goto	i2l3865
 15854  004B26  C02B  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 15855  004B2A  C02C  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 15856  004B2E  C02D  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 15857  004B32  C02A  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 15858  004B36  C02F  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 15859  004B3A  EC23  F028         	call	i2___ftpack	;wreg free
 15860  004B3E  C001  F021         	movff	?i2___ftpack,?i2___ftmul
 15861  004B42  C002  F022         	movff	?i2___ftpack+1,?i2___ftmul+1
 15862  004B46  C003  F023         	movff	?i2___ftpack+2,?i2___ftmul+2
 15863  004B4A  0012               	return	
 15864  004B4C                     __end_ofi2___ftmul:
 15865                           	opt stack 0
 15866                           tosu	equ	0xFFF
 15867                           tosh	equ	0xFFE
 15868                           tosl	equ	0xFFD
 15869                           pclatu	equ	0xFFB
 15870                           pclath	equ	0xFFA
 15871                           tblptru	equ	0xFF8
 15872                           tblptrh	equ	0xFF7
 15873                           tblptrl	equ	0xFF6
 15874                           tablat	equ	0xFF5
 15875                           prodh	equ	0xFF4
 15876                           prodl	equ	0xFF3
 15877                           intcon	equ	0xFF2
 15878                           intcon2	equ	0xFF1
 15879                           intcon3	equ	0xFF0
 15880                           postinc0	equ	0xFEE
 15881                           fsr0h	equ	0xFEA
 15882                           fsr0l	equ	0xFE9
 15883                           wreg	equ	0xFE8
 15884                           fsr1h	equ	0xFE2
 15885                           fsr1l	equ	0xFE1
 15886                           indf2	equ	0xFDF
 15887                           postinc2	equ	0xFDE
 15888                           postdec2	equ	0xFDD
 15889                           fsr2h	equ	0xFDA
 15890                           fsr2l	equ	0xFD9
 15891                           status	equ	0xFD8
 15892                           
 15893 ;; *************** function i2___awmod *****************
 15894 ;; Defined at:
 15895 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 15896 ;; Parameters:    Size  Location     Type
 15897 ;;  dividend        2    0[COMRAM] int 
 15898 ;;  divisor         2    2[COMRAM] int 
 15899 ;; Auto vars:     Size  Location     Type
 15900 ;;  __awmod         1    5[COMRAM] unsigned char 
 15901 ;;  __awmod         1    4[COMRAM] unsigned char 
 15902 ;; Return value:  Size  Location     Type
 15903 ;;                  2    0[COMRAM] int 
 15904 ;; Registers used:
 15905 ;;		wreg, status,2, status,0
 15906 ;; Tracked objects:
 15907 ;;		On entry : 0/0
 15908 ;;		On exit  : 0/0
 15909 ;;		Unchanged: 0/0
 15910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15911 ;;      Params:         4       0       0       0       0       0       0
 15912 ;;      Locals:         2       0       0       0       0       0       0
 15913 ;;      Temps:          0       0       0       0       0       0       0
 15914 ;;      Totals:         6       0       0       0       0       0       0
 15915 ;;Total ram usage:        6 bytes
 15916 ;; Hardware stack levels used:    1
 15917 ;; This function calls:
 15918 ;;		Nothing
 15919 ;; This function is called by:
 15920 ;;		i2_fround
 15921 ;;		i2_scale
 15922 ;; This function uses a non-reentrant model
 15923 ;;
 15924                           
 15925                           	psect	text57
 15926  0054BC                     __ptext57:
 15927                           	opt stack 0
 15928  0054BC                     i2___awmod:
 15929                           	opt stack 20
 15930                           
 15931                           ;incstack = 0
 15932  0054BC  0E00               	movlw	0
 15933  0054BE  6E06               	movwf	i2___awmod@sign,c
 15934  0054C0  AE02               	btfss	i2___awmod@dividend+1,7,c
 15935  0054C2  D006               	goto	i2l3731
 15936  0054C4  6C01               	negf	i2___awmod@dividend,c
 15937  0054C6  1E02               	comf	i2___awmod@dividend+1,f,c
 15938  0054C8  B0D8               	btfsc	status,0,c
 15939  0054CA  2A02               	incf	i2___awmod@dividend+1,f,c
 15940  0054CC  0E01               	movlw	1
 15941  0054CE  6E06               	movwf	i2___awmod@sign,c
 15942  0054D0                     i2l3731:
 15943  0054D0  AE04               	btfss	i2___awmod@divisor+1,7,c
 15944  0054D2  D004               	goto	i2l3735
 15945  0054D4  6C03               	negf	i2___awmod@divisor,c
 15946  0054D6  1E04               	comf	i2___awmod@divisor+1,f,c
 15947  0054D8  B0D8               	btfsc	status,0,c
 15948  0054DA  2A04               	incf	i2___awmod@divisor+1,f,c
 15949  0054DC                     i2l3735:
 15950  0054DC  5003               	movf	i2___awmod@divisor,w,c
 15951  0054DE  1004               	iorwf	i2___awmod@divisor+1,w,c
 15952  0054E0  B4D8               	btfsc	status,2,c
 15953  0054E2  D018               	goto	i2l3751
 15954  0054E4  0E01               	movlw	1
 15955  0054E6  6E05               	movwf	i2___awmod@counter,c
 15956  0054E8  D004               	goto	i2l3741
 15957  0054EA                     i2l3739:
 15958  0054EA  90D8               	bcf	status,0,c
 15959  0054EC  3603               	rlcf	i2___awmod@divisor,f,c
 15960  0054EE  3604               	rlcf	i2___awmod@divisor+1,f,c
 15961  0054F0  2A05               	incf	i2___awmod@counter,f,c
 15962  0054F2                     i2l3741:
 15963  0054F2  AE04               	btfss	i2___awmod@divisor+1,7,c
 15964  0054F4  D7FA               	goto	i2l3739
 15965  0054F6                     i2l3743:
 15966  0054F6  5003               	movf	i2___awmod@divisor,w,c
 15967  0054F8  5C01               	subwf	i2___awmod@dividend,w,c
 15968  0054FA  5004               	movf	i2___awmod@divisor+1,w,c
 15969  0054FC  5802               	subwfb	i2___awmod@dividend+1,w,c
 15970  0054FE  A0D8               	btfss	status,0,c
 15971  005500  D004               	goto	i2l3747
 15972  005502  5003               	movf	i2___awmod@divisor,w,c
 15973  005504  5E01               	subwf	i2___awmod@dividend,f,c
 15974  005506  5004               	movf	i2___awmod@divisor+1,w,c
 15975  005508  5A02               	subwfb	i2___awmod@dividend+1,f,c
 15976  00550A                     i2l3747:
 15977  00550A  90D8               	bcf	status,0,c
 15978  00550C  3204               	rrcf	i2___awmod@divisor+1,f,c
 15979  00550E  3203               	rrcf	i2___awmod@divisor,f,c
 15980  005510  2E05               	decfsz	i2___awmod@counter,f,c
 15981  005512  D7F1               	goto	i2l3743
 15982  005514                     i2l3751:
 15983  005514  5006               	movf	i2___awmod@sign,w,c
 15984  005516  B4D8               	btfsc	status,2,c
 15985  005518  D004               	goto	i2l3755
 15986  00551A  6C01               	negf	i2___awmod@dividend,c
 15987  00551C  1E02               	comf	i2___awmod@dividend+1,f,c
 15988  00551E  B0D8               	btfsc	status,0,c
 15989  005520  2A02               	incf	i2___awmod@dividend+1,f,c
 15990  005522                     i2l3755:
 15991  005522  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 15992  005526  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 15993  00552A  0012               	return	
 15994  00552C                     __end_ofi2___awmod:
 15995                           	opt stack 0
 15996                           tosu	equ	0xFFF
 15997                           tosh	equ	0xFFE
 15998                           tosl	equ	0xFFD
 15999                           pclatu	equ	0xFFB
 16000                           pclath	equ	0xFFA
 16001                           tblptru	equ	0xFF8
 16002                           tblptrh	equ	0xFF7
 16003                           tblptrl	equ	0xFF6
 16004                           tablat	equ	0xFF5
 16005                           prodh	equ	0xFF4
 16006                           prodl	equ	0xFF3
 16007                           intcon	equ	0xFF2
 16008                           intcon2	equ	0xFF1
 16009                           intcon3	equ	0xFF0
 16010                           postinc0	equ	0xFEE
 16011                           fsr0h	equ	0xFEA
 16012                           fsr0l	equ	0xFE9
 16013                           wreg	equ	0xFE8
 16014                           fsr1h	equ	0xFE2
 16015                           fsr1l	equ	0xFE1
 16016                           indf2	equ	0xFDF
 16017                           postinc2	equ	0xFDE
 16018                           postdec2	equ	0xFDD
 16019                           fsr2h	equ	0xFDA
 16020                           fsr2l	equ	0xFD9
 16021                           status	equ	0xFD8
 16022                           
 16023 ;; *************** function i2___awdiv *****************
 16024 ;; Defined at:
 16025 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 16026 ;; Parameters:    Size  Location     Type
 16027 ;;  dividend        2    6[COMRAM] int 
 16028 ;;  divisor         2    8[COMRAM] int 
 16029 ;; Auto vars:     Size  Location     Type
 16030 ;;  __awdiv         2   12[COMRAM] int 
 16031 ;;  __awdiv         1   11[COMRAM] unsigned char 
 16032 ;;  __awdiv         1   10[COMRAM] unsigned char 
 16033 ;; Return value:  Size  Location     Type
 16034 ;;                  2    6[COMRAM] int 
 16035 ;; Registers used:
 16036 ;;		wreg, status,2, status,0
 16037 ;; Tracked objects:
 16038 ;;		On entry : 0/0
 16039 ;;		On exit  : 0/0
 16040 ;;		Unchanged: 0/0
 16041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16042 ;;      Params:         4       0       0       0       0       0       0
 16043 ;;      Locals:         4       0       0       0       0       0       0
 16044 ;;      Temps:          0       0       0       0       0       0       0
 16045 ;;      Totals:         8       0       0       0       0       0       0
 16046 ;;Total ram usage:        8 bytes
 16047 ;; Hardware stack levels used:    1
 16048 ;; This function calls:
 16049 ;;		Nothing
 16050 ;; This function is called by:
 16051 ;;		i2_fround
 16052 ;;		i2_scale
 16053 ;;		i2__doprnt
 16054 ;; This function uses a non-reentrant model
 16055 ;;
 16056                           
 16057                           	psect	text58
 16058  0052C0                     __ptext58:
 16059                           	opt stack 0
 16060  0052C0                     i2___awdiv:
 16061                           	opt stack 20
 16062                           
 16063                           ;incstack = 0
 16064  0052C0  0E00               	movlw	0
 16065  0052C2  6E0C               	movwf	i2___awdiv@sign,c
 16066  0052C4  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 16067  0052C6  D006               	goto	i2l3687
 16068  0052C8  6C09               	negf	i2___awdiv@divisor,c
 16069  0052CA  1E0A               	comf	i2___awdiv@divisor+1,f,c
 16070  0052CC  B0D8               	btfsc	status,0,c
 16071  0052CE  2A0A               	incf	i2___awdiv@divisor+1,f,c
 16072  0052D0  0E01               	movlw	1
 16073  0052D2  6E0C               	movwf	i2___awdiv@sign,c
 16074  0052D4                     i2l3687:
 16075  0052D4  AE08               	btfss	i2___awdiv@dividend+1,7,c
 16076  0052D6  D006               	goto	i2l3693
 16077  0052D8  6C07               	negf	i2___awdiv@dividend,c
 16078  0052DA  1E08               	comf	i2___awdiv@dividend+1,f,c
 16079  0052DC  B0D8               	btfsc	status,0,c
 16080  0052DE  2A08               	incf	i2___awdiv@dividend+1,f,c
 16081  0052E0  0E01               	movlw	1
 16082  0052E2  1A0C               	xorwf	i2___awdiv@sign,f,c
 16083  0052E4                     i2l3693:
 16084  0052E4  0E00               	movlw	0
 16085  0052E6  6E0E               	movwf	i2___awdiv@quotient+1,c
 16086  0052E8  0E00               	movlw	0
 16087  0052EA  6E0D               	movwf	i2___awdiv@quotient,c
 16088  0052EC  5009               	movf	i2___awdiv@divisor,w,c
 16089  0052EE  100A               	iorwf	i2___awdiv@divisor+1,w,c
 16090  0052F0  B4D8               	btfsc	status,2,c
 16091  0052F2  D01C               	goto	i2l3715
 16092  0052F4  0E01               	movlw	1
 16093  0052F6  6E0B               	movwf	i2___awdiv@counter,c
 16094  0052F8  D004               	goto	i2l3701
 16095  0052FA                     i2l3699:
 16096  0052FA  90D8               	bcf	status,0,c
 16097  0052FC  3609               	rlcf	i2___awdiv@divisor,f,c
 16098  0052FE  360A               	rlcf	i2___awdiv@divisor+1,f,c
 16099  005300  2A0B               	incf	i2___awdiv@counter,f,c
 16100  005302                     i2l3701:
 16101  005302  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 16102  005304  D7FA               	goto	i2l3699
 16103  005306                     i2l3703:
 16104  005306  90D8               	bcf	status,0,c
 16105  005308  360D               	rlcf	i2___awdiv@quotient,f,c
 16106  00530A  360E               	rlcf	i2___awdiv@quotient+1,f,c
 16107  00530C  5009               	movf	i2___awdiv@divisor,w,c
 16108  00530E  5C07               	subwf	i2___awdiv@dividend,w,c
 16109  005310  500A               	movf	i2___awdiv@divisor+1,w,c
 16110  005312  5808               	subwfb	i2___awdiv@dividend+1,w,c
 16111  005314  A0D8               	btfss	status,0,c
 16112  005316  D005               	goto	i2l3711
 16113  005318  5009               	movf	i2___awdiv@divisor,w,c
 16114  00531A  5E07               	subwf	i2___awdiv@dividend,f,c
 16115  00531C  500A               	movf	i2___awdiv@divisor+1,w,c
 16116  00531E  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 16117  005320  800D               	bsf	i2___awdiv@quotient,0,c
 16118  005322                     i2l3711:
 16119  005322  90D8               	bcf	status,0,c
 16120  005324  320A               	rrcf	i2___awdiv@divisor+1,f,c
 16121  005326  3209               	rrcf	i2___awdiv@divisor,f,c
 16122  005328  2E0B               	decfsz	i2___awdiv@counter,f,c
 16123  00532A  D7ED               	goto	i2l3703
 16124  00532C                     i2l3715:
 16125  00532C  500C               	movf	i2___awdiv@sign,w,c
 16126  00532E  B4D8               	btfsc	status,2,c
 16127  005330  D004               	goto	i2l3719
 16128  005332  6C0D               	negf	i2___awdiv@quotient,c
 16129  005334  1E0E               	comf	i2___awdiv@quotient+1,f,c
 16130  005336  B0D8               	btfsc	status,0,c
 16131  005338  2A0E               	incf	i2___awdiv@quotient+1,f,c
 16132  00533A                     i2l3719:
 16133  00533A  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 16134  00533E  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 16135  005342  0012               	return	
 16136  005344                     __end_ofi2___awdiv:
 16137                           	opt stack 0
 16138                           tosu	equ	0xFFF
 16139                           tosh	equ	0xFFE
 16140                           tosl	equ	0xFFD
 16141                           pclatu	equ	0xFFB
 16142                           pclath	equ	0xFFA
 16143                           tblptru	equ	0xFF8
 16144                           tblptrh	equ	0xFF7
 16145                           tblptrl	equ	0xFF6
 16146                           tablat	equ	0xFF5
 16147                           prodh	equ	0xFF4
 16148                           prodl	equ	0xFF3
 16149                           intcon	equ	0xFF2
 16150                           intcon2	equ	0xFF1
 16151                           intcon3	equ	0xFF0
 16152                           postinc0	equ	0xFEE
 16153                           fsr0h	equ	0xFEA
 16154                           fsr0l	equ	0xFE9
 16155                           wreg	equ	0xFE8
 16156                           fsr1h	equ	0xFE2
 16157                           fsr1l	equ	0xFE1
 16158                           indf2	equ	0xFDF
 16159                           postinc2	equ	0xFDE
 16160                           postdec2	equ	0xFDD
 16161                           fsr2h	equ	0xFDA
 16162                           fsr2l	equ	0xFD9
 16163                           status	equ	0xFD8
 16164                           
 16165 ;; *************** function i2__tdiv_to_l_ *****************
 16166 ;; Defined at:
 16167 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdivl.c"
 16168 ;; Parameters:    Size  Location     Type
 16169 ;;  f1              3    0[COMRAM] float 
 16170 ;;  f2              3    3[COMRAM] float 
 16171 ;; Auto vars:     Size  Location     Type
 16172 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 16173 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 16174 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 16175 ;; Return value:  Size  Location     Type
 16176 ;;                  4    0[COMRAM] unsigned long 
 16177 ;; Registers used:
 16178 ;;		wreg, status,2, status,0
 16179 ;; Tracked objects:
 16180 ;;		On entry : 0/0
 16181 ;;		On exit  : 0/0
 16182 ;;		Unchanged: 0/0
 16183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16184 ;;      Params:         6       0       0       0       0       0       0
 16185 ;;      Locals:         6       0       0       0       0       0       0
 16186 ;;      Temps:          3       0       0       0       0       0       0
 16187 ;;      Totals:        15       0       0       0       0       0       0
 16188 ;;Total ram usage:       15 bytes
 16189 ;; Hardware stack levels used:    1
 16190 ;; This function calls:
 16191 ;;		Nothing
 16192 ;; This function is called by:
 16193 ;;		i2__doprnt
 16194 ;; This function uses a non-reentrant model
 16195 ;;
 16196                           
 16197                           	psect	text59
 16198  0046F2                     __ptext59:
 16199                           	opt stack 0
 16200  0046F2                     i2__tdiv_to_l_:
 16201                           	opt stack 21
 16202                           
 16203                           ;incstack = 0
 16204  0046F2  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 16205  0046F6  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 16206  0046F8  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 16207  0046FA  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 16208  0046FC  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 16209  0046FE  E301               	bnc	u524_41
 16210  004700  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 16211  004702                     u524_41:
 16212  004702  5007               	movf	??i2__tdiv_to_l_,w,c
 16213  004704  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 16214  004706  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 16215  004708  A4D8               	btfss	status,2,c
 16216  00470A  D009               	goto	i2l4213
 16217  00470C  0E00               	movlw	0
 16218  00470E  6E01               	movwf	?i2__tdiv_to_l_,c
 16219  004710  0E00               	movlw	0
 16220  004712  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16221  004714  0E00               	movlw	0
 16222  004716  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16223  004718  0E00               	movlw	0
 16224  00471A  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16225  00471C  0012               	return	
 16226  00471E                     i2l4213:
 16227  00471E  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 16228  004722  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 16229  004724  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 16230  004726  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 16231  004728  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 16232  00472A  E301               	bnc	u526_41
 16233  00472C  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 16234  00472E                     u526_41:
 16235  00472E  5007               	movf	??i2__tdiv_to_l_,w,c
 16236  004730  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 16237  004732  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 16238  004734  A4D8               	btfss	status,2,c
 16239  004736  D009               	goto	i2l4219
 16240  004738  0E00               	movlw	0
 16241  00473A  6E01               	movwf	?i2__tdiv_to_l_,c
 16242  00473C  0E00               	movlw	0
 16243  00473E  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16244  004740  0E00               	movlw	0
 16245  004742  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16246  004744  0E00               	movlw	0
 16247  004746  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16248  004748  0012               	return	
 16249  00474A                     i2l4219:
 16250  00474A  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 16251  00474C  0EFF               	movlw	255
 16252  00474E  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 16253  004750  0EFF               	movlw	255
 16254  004752  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 16255  004754  0E00               	movlw	0
 16256  004756  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 16257  004758  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 16258  00475A  0EFF               	movlw	255
 16259  00475C  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 16260  00475E  0EFF               	movlw	255
 16261  004760  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 16262  004762  0E00               	movlw	0
 16263  004764  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 16264  004766  0E00               	movlw	0
 16265  004768  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 16266  00476A  0E00               	movlw	0
 16267  00476C  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 16268  00476E  0E00               	movlw	0
 16269  004770  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 16270  004772  0E00               	movlw	0
 16271  004774  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 16272  004776  0E7F               	movlw	127
 16273  004778  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 16274  00477A  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 16275  00477C  0F98               	addlw	152
 16276  00477E  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 16277  004780  0E18               	movlw	24
 16278  004782  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 16279  004784                     i2l821:
 16280  004784  90D8               	bcf	status,0,c
 16281  004786  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 16282  004788  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 16283  00478A  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 16284  00478C  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 16285  00478E  5004               	movf	i2__tdiv_to_l_@f2,w,c
 16286  004790  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 16287  004792  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 16288  004794  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 16289  004796  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 16290  004798  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 16291  00479A  A0D8               	btfss	status,0,c
 16292  00479C  D007               	goto	i2l822
 16293  00479E  5004               	movf	i2__tdiv_to_l_@f2,w,c
 16294  0047A0  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 16295  0047A2  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 16296  0047A4  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 16297  0047A6  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 16298  0047A8  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 16299  0047AA  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 16300  0047AC                     i2l822:
 16301  0047AC  90D8               	bcf	status,0,c
 16302  0047AE  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 16303  0047B0  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 16304  0047B2  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 16305  0047B4  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 16306  0047B6  D7E6               	goto	i2l821
 16307  0047B8  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 16308  0047BA  D016               	goto	i2l4253
 16309  0047BC  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 16310  0047BE  0A80               	xorlw	128
 16311  0047C0  0F97               	addlw	151
 16312  0047C2  B0D8               	btfsc	status,0,c
 16313  0047C4  D009               	goto	i2l4249
 16314  0047C6  0E00               	movlw	0
 16315  0047C8  6E01               	movwf	?i2__tdiv_to_l_,c
 16316  0047CA  0E00               	movlw	0
 16317  0047CC  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16318  0047CE  0E00               	movlw	0
 16319  0047D0  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16320  0047D2  0E00               	movlw	0
 16321  0047D4  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16322  0047D6  0012               	return	
 16323  0047D8                     i2l4249:
 16324  0047D8  90D8               	bcf	status,0,c
 16325  0047DA  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 16326  0047DC  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 16327  0047DE  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 16328  0047E0  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 16329  0047E2  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 16330  0047E4  D7F9               	goto	i2l4249
 16331  0047E6  D015               	goto	i2l828
 16332  0047E8                     i2l4253:
 16333  0047E8  0E17               	movlw	23
 16334  0047EA  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 16335  0047EC  D00F               	goto	i2l4261
 16336  0047EE  0E00               	movlw	0
 16337  0047F0  6E01               	movwf	?i2__tdiv_to_l_,c
 16338  0047F2  0E00               	movlw	0
 16339  0047F4  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16340  0047F6  0E00               	movlw	0
 16341  0047F8  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16342  0047FA  0E00               	movlw	0
 16343  0047FC  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16344  0047FE  0012               	return	
 16345  004800                     i2l4259:
 16346  004800  90D8               	bcf	status,0,c
 16347  004802  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 16348  004804  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 16349  004806  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 16350  004808  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 16351  00480A  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 16352  00480C                     i2l4261:
 16353  00480C  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 16354  00480E  A4D8               	btfss	status,2,c
 16355  004810  D7F7               	goto	i2l4259
 16356  004812                     i2l828:
 16357  004812  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 16358  004816  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 16359  00481A  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 16360  00481E  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 16361  004822  0012               	return		;funcret
 16362  004824                     __end_ofi2__tdiv_to_l_:
 16363                           	opt stack 0
 16364                           tosu	equ	0xFFF
 16365                           tosh	equ	0xFFE
 16366                           tosl	equ	0xFFD
 16367                           pclatu	equ	0xFFB
 16368                           pclath	equ	0xFFA
 16369                           tblptru	equ	0xFF8
 16370                           tblptrh	equ	0xFF7
 16371                           tblptrl	equ	0xFF6
 16372                           tablat	equ	0xFF5
 16373                           prodh	equ	0xFF4
 16374                           prodl	equ	0xFF3
 16375                           intcon	equ	0xFF2
 16376                           intcon2	equ	0xFF1
 16377                           intcon3	equ	0xFF0
 16378                           postinc0	equ	0xFEE
 16379                           fsr0h	equ	0xFEA
 16380                           fsr0l	equ	0xFE9
 16381                           wreg	equ	0xFE8
 16382                           fsr1h	equ	0xFE2
 16383                           fsr1l	equ	0xFE1
 16384                           indf2	equ	0xFDF
 16385                           postinc2	equ	0xFDE
 16386                           postdec2	equ	0xFDD
 16387                           fsr2h	equ	0xFDA
 16388                           fsr2l	equ	0xFD9
 16389                           status	equ	0xFD8
 16390                           
 16391 ;; *************** function i2__div_to_l_ *****************
 16392 ;; Defined at:
 16393 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fldivl.c"
 16394 ;; Parameters:    Size  Location     Type
 16395 ;;  f1              3    0[COMRAM] unsigned long 
 16396 ;;  f2              3    3[COMRAM] unsigned long 
 16397 ;; Auto vars:     Size  Location     Type
 16398 ;;  _div_to_l_      4    6[COMRAM] unsigned long 
 16399 ;;  _div_to_l_      1   11[COMRAM] unsigned char 
 16400 ;;  _div_to_l_      1   10[COMRAM] unsigned char 
 16401 ;; Return value:  Size  Location     Type
 16402 ;;                  4    0[COMRAM] unsigned long 
 16403 ;; Registers used:
 16404 ;;		wreg, status,2, status,0
 16405 ;; Tracked objects:
 16406 ;;		On entry : 0/0
 16407 ;;		On exit  : 0/0
 16408 ;;		Unchanged: 0/0
 16409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16410 ;;      Params:         6       0       0       0       0       0       0
 16411 ;;      Locals:         6       0       0       0       0       0       0
 16412 ;;      Temps:          0       0       0       0       0       0       0
 16413 ;;      Totals:        12       0       0       0       0       0       0
 16414 ;;Total ram usage:       12 bytes
 16415 ;; Hardware stack levels used:    1
 16416 ;; This function calls:
 16417 ;;		Nothing
 16418 ;; This function is called by:
 16419 ;;		i2__doprnt
 16420 ;; This function uses a non-reentrant model
 16421 ;;
 16422                           
 16423                           	psect	text60
 16424  004824                     __ptext60:
 16425                           	opt stack 0
 16426  004824                     i2__div_to_l_:
 16427                           	opt stack 21
 16428                           
 16429                           ;incstack = 0
 16430  004824  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 16431  004826  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 16432  004828  6E0C               	movwf	i2__div_to_l_@exp1,c
 16433  00482A  500C               	movf	i2__div_to_l_@exp1,w,c
 16434  00482C  A4D8               	btfss	status,2,c
 16435  00482E  D009               	goto	i2l4153
 16436  004830  0E00               	movlw	0
 16437  004832  6E01               	movwf	?i2__div_to_l_,c
 16438  004834  0E00               	movlw	0
 16439  004836  6E02               	movwf	?i2__div_to_l_+1,c
 16440  004838  0E00               	movlw	0
 16441  00483A  6E03               	movwf	?i2__div_to_l_+2,c
 16442  00483C  0E00               	movlw	0
 16443  00483E  6E04               	movwf	?i2__div_to_l_+3,c
 16444  004840  0012               	return	
 16445  004842                     i2l4153:
 16446  004842  3406               	rlcf	i2__div_to_l_@f2+2,w,c
 16447  004844  3407               	rlcf	i2__div_to_l_@f2+3,w,c
 16448  004846  6E0B               	movwf	i2__div_to_l_@cntr,c
 16449  004848  500B               	movf	i2__div_to_l_@cntr,w,c
 16450  00484A  A4D8               	btfss	status,2,c
 16451  00484C  D009               	goto	i2l4159
 16452  00484E  0E00               	movlw	0
 16453  004850  6E01               	movwf	?i2__div_to_l_,c
 16454  004852  0E00               	movlw	0
 16455  004854  6E02               	movwf	?i2__div_to_l_+1,c
 16456  004856  0E00               	movlw	0
 16457  004858  6E03               	movwf	?i2__div_to_l_+2,c
 16458  00485A  0E00               	movlw	0
 16459  00485C  6E04               	movwf	?i2__div_to_l_+3,c
 16460  00485E  0012               	return	
 16461  004860                     i2l4159:
 16462  004860  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 16463  004862  0EFF               	movlw	255
 16464  004864  1601               	andwf	i2__div_to_l_@f1,f,c
 16465  004866  0EFF               	movlw	255
 16466  004868  1602               	andwf	i2__div_to_l_@f1+1,f,c
 16467  00486A  0EFF               	movlw	255
 16468  00486C  1603               	andwf	i2__div_to_l_@f1+2,f,c
 16469  00486E  0E00               	movlw	0
 16470  004870  1604               	andwf	i2__div_to_l_@f1+3,f,c
 16471  004872  8E06               	bsf	i2__div_to_l_@f2+2,7,c
 16472  004874  0EFF               	movlw	255
 16473  004876  1604               	andwf	i2__div_to_l_@f2,f,c
 16474  004878  0EFF               	movlw	255
 16475  00487A  1605               	andwf	i2__div_to_l_@f2+1,f,c
 16476  00487C  0EFF               	movlw	255
 16477  00487E  1606               	andwf	i2__div_to_l_@f2+2,f,c
 16478  004880  0E00               	movlw	0
 16479  004882  1607               	andwf	i2__div_to_l_@f2+3,f,c
 16480  004884  0E00               	movlw	0
 16481  004886  6E07               	movwf	i2__div_to_l_@quot,c
 16482  004888  0E00               	movlw	0
 16483  00488A  6E08               	movwf	i2__div_to_l_@quot+1,c
 16484  00488C  0E00               	movlw	0
 16485  00488E  6E09               	movwf	i2__div_to_l_@quot+2,c
 16486  004890  0E00               	movlw	0
 16487  004892  6E0A               	movwf	i2__div_to_l_@quot+3,c
 16488  004894  0E7F               	movlw	127
 16489  004896  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 16490  004898  500B               	movf	i2__div_to_l_@cntr,w,c
 16491  00489A  0FA0               	addlw	160
 16492  00489C  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 16493  00489E  0E20               	movlw	32
 16494  0048A0  6E0B               	movwf	i2__div_to_l_@cntr,c
 16495  0048A2                     i2l4173:
 16496  0048A2  90D8               	bcf	status,0,c
 16497  0048A4  3607               	rlcf	i2__div_to_l_@quot,f,c
 16498  0048A6  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 16499  0048A8  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 16500  0048AA  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 16501  0048AC  5004               	movf	i2__div_to_l_@f2,w,c
 16502  0048AE  5C01               	subwf	i2__div_to_l_@f1,w,c
 16503  0048B0  5005               	movf	i2__div_to_l_@f2+1,w,c
 16504  0048B2  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 16505  0048B4  5006               	movf	i2__div_to_l_@f2+2,w,c
 16506  0048B6  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 16507  0048B8  5007               	movf	i2__div_to_l_@f2+3,w,c
 16508  0048BA  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 16509  0048BC  A0D8               	btfss	status,0,c
 16510  0048BE  D009               	goto	i2l4181
 16511  0048C0  5004               	movf	i2__div_to_l_@f2,w,c
 16512  0048C2  5E01               	subwf	i2__div_to_l_@f1,f,c
 16513  0048C4  5005               	movf	i2__div_to_l_@f2+1,w,c
 16514  0048C6  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 16515  0048C8  5006               	movf	i2__div_to_l_@f2+2,w,c
 16516  0048CA  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 16517  0048CC  5007               	movf	i2__div_to_l_@f2+3,w,c
 16518  0048CE  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 16519  0048D0  8007               	bsf	i2__div_to_l_@quot,0,c
 16520  0048D2                     i2l4181:
 16521  0048D2  90D8               	bcf	status,0,c
 16522  0048D4  3601               	rlcf	i2__div_to_l_@f1,f,c
 16523  0048D6  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 16524  0048D8  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 16525  0048DA  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 16526  0048DC  2E0B               	decfsz	i2__div_to_l_@cntr,f,c
 16527  0048DE  D7E1               	goto	i2l4173
 16528  0048E0  AE0C               	btfss	i2__div_to_l_@exp1,7,c
 16529  0048E2  D016               	goto	i2l4197
 16530  0048E4  500C               	movf	i2__div_to_l_@exp1,w,c
 16531  0048E6  0A80               	xorlw	128
 16532  0048E8  0F9F               	addlw	159
 16533  0048EA  B0D8               	btfsc	status,0,c
 16534  0048EC  D009               	goto	i2l4193
 16535  0048EE  0E00               	movlw	0
 16536  0048F0  6E01               	movwf	?i2__div_to_l_,c
 16537  0048F2  0E00               	movlw	0
 16538  0048F4  6E02               	movwf	?i2__div_to_l_+1,c
 16539  0048F6  0E00               	movlw	0
 16540  0048F8  6E03               	movwf	?i2__div_to_l_+2,c
 16541  0048FA  0E00               	movlw	0
 16542  0048FC  6E04               	movwf	?i2__div_to_l_+3,c
 16543  0048FE  0012               	return	
 16544  004900                     i2l4193:
 16545  004900  90D8               	bcf	status,0,c
 16546  004902  320A               	rrcf	i2__div_to_l_@quot+3,f,c
 16547  004904  3209               	rrcf	i2__div_to_l_@quot+2,f,c
 16548  004906  3208               	rrcf	i2__div_to_l_@quot+1,f,c
 16549  004908  3207               	rrcf	i2__div_to_l_@quot,f,c
 16550  00490A  3E0C               	incfsz	i2__div_to_l_@exp1,f,c
 16551  00490C  D7F9               	goto	i2l4193
 16552  00490E  D015               	goto	i2l724
 16553  004910                     i2l4197:
 16554  004910  0E1F               	movlw	31
 16555  004912  640C               	cpfsgt	i2__div_to_l_@exp1,c
 16556  004914  D00F               	goto	i2l4205
 16557  004916  0E00               	movlw	0
 16558  004918  6E01               	movwf	?i2__div_to_l_,c
 16559  00491A  0E00               	movlw	0
 16560  00491C  6E02               	movwf	?i2__div_to_l_+1,c
 16561  00491E  0E00               	movlw	0
 16562  004920  6E03               	movwf	?i2__div_to_l_+2,c
 16563  004922  0E00               	movlw	0
 16564  004924  6E04               	movwf	?i2__div_to_l_+3,c
 16565  004926  0012               	return	
 16566  004928                     i2l4203:
 16567  004928  90D8               	bcf	status,0,c
 16568  00492A  3607               	rlcf	i2__div_to_l_@quot,f,c
 16569  00492C  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 16570  00492E  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 16571  004930  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 16572  004932  060C               	decf	i2__div_to_l_@exp1,f,c
 16573  004934                     i2l4205:
 16574  004934  500C               	movf	i2__div_to_l_@exp1,w,c
 16575  004936  A4D8               	btfss	status,2,c
 16576  004938  D7F7               	goto	i2l4203
 16577  00493A                     i2l724:
 16578  00493A  C007  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 16579  00493E  C008  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 16580  004942  C009  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 16581  004946  C00A  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 16582  00494A  0012               	return		;funcret
 16583  00494C                     __end_ofi2__div_to_l_:
 16584                           	opt stack 0
 16585                           tosu	equ	0xFFF
 16586                           tosh	equ	0xFFE
 16587                           tosl	equ	0xFFD
 16588                           pclatu	equ	0xFFB
 16589                           pclath	equ	0xFFA
 16590                           tblptru	equ	0xFF8
 16591                           tblptrh	equ	0xFF7
 16592                           tblptrl	equ	0xFF6
 16593                           tablat	equ	0xFF5
 16594                           prodh	equ	0xFF4
 16595                           prodl	equ	0xFF3
 16596                           intcon	equ	0xFF2
 16597                           intcon2	equ	0xFF1
 16598                           intcon3	equ	0xFF0
 16599                           postinc0	equ	0xFEE
 16600                           fsr0h	equ	0xFEA
 16601                           fsr0l	equ	0xFE9
 16602                           wreg	equ	0xFE8
 16603                           fsr1h	equ	0xFE2
 16604                           fsr1l	equ	0xFE1
 16605                           indf2	equ	0xFDF
 16606                           postinc2	equ	0xFDE
 16607                           postdec2	equ	0xFDD
 16608                           fsr2h	equ	0xFDA
 16609                           fsr2l	equ	0xFD9
 16610                           status	equ	0xFD8
 16611                           
 16612 ;; *************** function i2___lltoft *****************
 16613 ;; Defined at:
 16614 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lltoft.c"
 16615 ;; Parameters:    Size  Location     Type
 16616 ;;  c               4    8[COMRAM] unsigned long 
 16617 ;; Auto vars:     Size  Location     Type
 16618 ;;  __lltoft        1   16[COMRAM] unsigned char 
 16619 ;; Return value:  Size  Location     Type
 16620 ;;                  3    8[COMRAM] float 
 16621 ;; Registers used:
 16622 ;;		wreg, status,2, status,0, cstack
 16623 ;; Tracked objects:
 16624 ;;		On entry : 0/0
 16625 ;;		On exit  : 0/0
 16626 ;;		Unchanged: 0/0
 16627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16628 ;;      Params:         4       0       0       0       0       0       0
 16629 ;;      Locals:         1       0       0       0       0       0       0
 16630 ;;      Temps:          4       0       0       0       0       0       0
 16631 ;;      Totals:         9       0       0       0       0       0       0
 16632 ;;Total ram usage:        9 bytes
 16633 ;; Hardware stack levels used:    1
 16634 ;; Hardware stack levels required when called:    1
 16635 ;; This function calls:
 16636 ;;		i2___ftpack
 16637 ;; This function is called by:
 16638 ;;		i2__doprnt
 16639 ;; This function uses a non-reentrant model
 16640 ;;
 16641                           
 16642                           	psect	text61
 16643  005592                     __ptext61:
 16644                           	opt stack 0
 16645  005592                     i2___lltoft:
 16646                           	opt stack 20
 16647                           
 16648                           ;incstack = 0
 16649  005592  0E8E               	movlw	142
 16650  005594  6E11               	movwf	i2___lltoft@exp,c
 16651  005596  D006               	goto	i2l4393
 16652  005598                     i2l4391:
 16653  005598  90D8               	bcf	status,0,c
 16654  00559A  320C               	rrcf	i2___lltoft@c+3,f,c
 16655  00559C  320B               	rrcf	i2___lltoft@c+2,f,c
 16656  00559E  320A               	rrcf	i2___lltoft@c+1,f,c
 16657  0055A0  3209               	rrcf	i2___lltoft@c,f,c
 16658  0055A2  2A11               	incf	i2___lltoft@exp,f,c
 16659  0055A4                     i2l4393:
 16660  0055A4  0E00               	movlw	0
 16661  0055A6  1409               	andwf	i2___lltoft@c,w,c
 16662  0055A8  6E0D               	movwf	??i2___lltoft& (0+255),c
 16663  0055AA  0E00               	movlw	0
 16664  0055AC  140A               	andwf	i2___lltoft@c+1,w,c
 16665  0055AE  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 16666  0055B0  0E00               	movlw	0
 16667  0055B2  140B               	andwf	i2___lltoft@c+2,w,c
 16668  0055B4  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 16669  0055B6  0EFF               	movlw	255
 16670  0055B8  140C               	andwf	i2___lltoft@c+3,w,c
 16671  0055BA  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 16672  0055BC  500D               	movf	??i2___lltoft,w,c
 16673  0055BE  100E               	iorwf	??i2___lltoft+1,w,c
 16674  0055C0  100F               	iorwf	??i2___lltoft+2,w,c
 16675  0055C2  1010               	iorwf	??i2___lltoft+3,w,c
 16676  0055C4  A4D8               	btfss	status,2,c
 16677  0055C6  D7E8               	goto	i2l4391
 16678  0055C8  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 16679  0055CC  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 16680  0055D0  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 16681  0055D4  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 16682  0055D8  0E00               	movlw	0
 16683  0055DA  6E05               	movwf	i2___ftpack@sign,c
 16684  0055DC  EC23  F028         	call	i2___ftpack	;wreg free
 16685  0055E0  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 16686  0055E4  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 16687  0055E8  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 16688  0055EC  0012               	return	
 16689  0055EE                     __end_ofi2___lltoft:
 16690                           	opt stack 0
 16691                           tosu	equ	0xFFF
 16692                           tosh	equ	0xFFE
 16693                           tosl	equ	0xFFD
 16694                           pclatu	equ	0xFFB
 16695                           pclath	equ	0xFFA
 16696                           tblptru	equ	0xFF8
 16697                           tblptrh	equ	0xFF7
 16698                           tblptrl	equ	0xFF6
 16699                           tablat	equ	0xFF5
 16700                           prodh	equ	0xFF4
 16701                           prodl	equ	0xFF3
 16702                           intcon	equ	0xFF2
 16703                           intcon2	equ	0xFF1
 16704                           intcon3	equ	0xFF0
 16705                           postinc0	equ	0xFEE
 16706                           fsr0h	equ	0xFEA
 16707                           fsr0l	equ	0xFE9
 16708                           wreg	equ	0xFE8
 16709                           fsr1h	equ	0xFE2
 16710                           fsr1l	equ	0xFE1
 16711                           indf2	equ	0xFDF
 16712                           postinc2	equ	0xFDE
 16713                           postdec2	equ	0xFDD
 16714                           fsr2h	equ	0xFDA
 16715                           fsr2l	equ	0xFD9
 16716                           status	equ	0xFD8
 16717                           
 16718 ;; *************** function i2___llmod *****************
 16719 ;; Defined at:
 16720 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
 16721 ;; Parameters:    Size  Location     Type
 16722 ;;  dividend        4   13[COMRAM] unsigned long 
 16723 ;;  divisor         4   17[COMRAM] unsigned long 
 16724 ;; Auto vars:     Size  Location     Type
 16725 ;;  __llmod         1   21[COMRAM] unsigned char 
 16726 ;; Return value:  Size  Location     Type
 16727 ;;                  4   13[COMRAM] unsigned long 
 16728 ;; Registers used:
 16729 ;;		wreg, status,2, status,0
 16730 ;; Tracked objects:
 16731 ;;		On entry : 0/0
 16732 ;;		On exit  : 0/0
 16733 ;;		Unchanged: 0/0
 16734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16735 ;;      Params:         8       0       0       0       0       0       0
 16736 ;;      Locals:         1       0       0       0       0       0       0
 16737 ;;      Temps:          0       0       0       0       0       0       0
 16738 ;;      Totals:         9       0       0       0       0       0       0
 16739 ;;Total ram usage:        9 bytes
 16740 ;; Hardware stack levels used:    1
 16741 ;; This function calls:
 16742 ;;		Nothing
 16743 ;; This function is called by:
 16744 ;;		i2__doprnt
 16745 ;; This function uses a non-reentrant model
 16746 ;;
 16747                           
 16748                           	psect	text62
 16749  00552C                     __ptext62:
 16750                           	opt stack 0
 16751  00552C                     i2___llmod:
 16752                           	opt stack 21
 16753                           
 16754                           ;incstack = 0
 16755  00552C  5012               	movf	i2___llmod@divisor,w,c
 16756  00552E  1013               	iorwf	i2___llmod@divisor+1,w,c
 16757  005530  1014               	iorwf	i2___llmod@divisor+2,w,c
 16758  005532  1015               	iorwf	i2___llmod@divisor+3,w,c
 16759  005534  B4D8               	btfsc	status,2,c
 16760  005536  D024               	goto	i2l935
 16761  005538  0E01               	movlw	1
 16762  00553A  6E16               	movwf	i2___llmod@counter,c
 16763  00553C  D006               	goto	i2l4379
 16764  00553E                     i2l4377:
 16765  00553E  90D8               	bcf	status,0,c
 16766  005540  3612               	rlcf	i2___llmod@divisor,f,c
 16767  005542  3613               	rlcf	i2___llmod@divisor+1,f,c
 16768  005544  3614               	rlcf	i2___llmod@divisor+2,f,c
 16769  005546  3615               	rlcf	i2___llmod@divisor+3,f,c
 16770  005548  2A16               	incf	i2___llmod@counter,f,c
 16771  00554A                     i2l4379:
 16772  00554A  AE15               	btfss	i2___llmod@divisor+3,7,c
 16773  00554C  D7F8               	goto	i2l4377
 16774  00554E                     i2l4381:
 16775  00554E  5012               	movf	i2___llmod@divisor,w,c
 16776  005550  5C0E               	subwf	i2___llmod@dividend,w,c
 16777  005552  5013               	movf	i2___llmod@divisor+1,w,c
 16778  005554  580F               	subwfb	i2___llmod@dividend+1,w,c
 16779  005556  5014               	movf	i2___llmod@divisor+2,w,c
 16780  005558  5810               	subwfb	i2___llmod@dividend+2,w,c
 16781  00555A  5015               	movf	i2___llmod@divisor+3,w,c
 16782  00555C  5811               	subwfb	i2___llmod@dividend+3,w,c
 16783  00555E  A0D8               	btfss	status,0,c
 16784  005560  D008               	goto	i2l4385
 16785  005562  5012               	movf	i2___llmod@divisor,w,c
 16786  005564  5E0E               	subwf	i2___llmod@dividend,f,c
 16787  005566  5013               	movf	i2___llmod@divisor+1,w,c
 16788  005568  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 16789  00556A  5014               	movf	i2___llmod@divisor+2,w,c
 16790  00556C  5A10               	subwfb	i2___llmod@dividend+2,f,c
 16791  00556E  5015               	movf	i2___llmod@divisor+3,w,c
 16792  005570  5A11               	subwfb	i2___llmod@dividend+3,f,c
 16793  005572                     i2l4385:
 16794  005572  90D8               	bcf	status,0,c
 16795  005574  3215               	rrcf	i2___llmod@divisor+3,f,c
 16796  005576  3214               	rrcf	i2___llmod@divisor+2,f,c
 16797  005578  3213               	rrcf	i2___llmod@divisor+1,f,c
 16798  00557A  3212               	rrcf	i2___llmod@divisor,f,c
 16799  00557C  2E16               	decfsz	i2___llmod@counter,f,c
 16800  00557E  D7E7               	goto	i2l4381
 16801  005580                     i2l935:
 16802  005580  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 16803  005584  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 16804  005588  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 16805  00558C  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 16806  005590  0012               	return		;funcret
 16807  005592                     __end_ofi2___llmod:
 16808                           	opt stack 0
 16809                           tosu	equ	0xFFF
 16810                           tosh	equ	0xFFE
 16811                           tosl	equ	0xFFD
 16812                           pclatu	equ	0xFFB
 16813                           pclath	equ	0xFFA
 16814                           tblptru	equ	0xFF8
 16815                           tblptrh	equ	0xFF7
 16816                           tblptrl	equ	0xFF6
 16817                           tablat	equ	0xFF5
 16818                           prodh	equ	0xFF4
 16819                           prodl	equ	0xFF3
 16820                           intcon	equ	0xFF2
 16821                           intcon2	equ	0xFF1
 16822                           intcon3	equ	0xFF0
 16823                           postinc0	equ	0xFEE
 16824                           fsr0h	equ	0xFEA
 16825                           fsr0l	equ	0xFE9
 16826                           wreg	equ	0xFE8
 16827                           fsr1h	equ	0xFE2
 16828                           fsr1l	equ	0xFE1
 16829                           indf2	equ	0xFDF
 16830                           postinc2	equ	0xFDE
 16831                           postdec2	equ	0xFDD
 16832                           fsr2h	equ	0xFDA
 16833                           fsr2l	equ	0xFD9
 16834                           status	equ	0xFD8
 16835                           
 16836 ;; *************** function i2___lldiv *****************
 16837 ;; Defined at:
 16838 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
 16839 ;; Parameters:    Size  Location     Type
 16840 ;;  dividend        4    0[COMRAM] unsigned long 
 16841 ;;  divisor         4    4[COMRAM] unsigned long 
 16842 ;; Auto vars:     Size  Location     Type
 16843 ;;  __lldiv         4    8[COMRAM] unsigned long 
 16844 ;;  __lldiv         1   12[COMRAM] unsigned char 
 16845 ;; Return value:  Size  Location     Type
 16846 ;;                  4    0[COMRAM] unsigned long 
 16847 ;; Registers used:
 16848 ;;		wreg, status,2, status,0
 16849 ;; Tracked objects:
 16850 ;;		On entry : 0/0
 16851 ;;		On exit  : 0/0
 16852 ;;		Unchanged: 0/0
 16853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16854 ;;      Params:         8       0       0       0       0       0       0
 16855 ;;      Locals:         5       0       0       0       0       0       0
 16856 ;;      Temps:          0       0       0       0       0       0       0
 16857 ;;      Totals:        13       0       0       0       0       0       0
 16858 ;;Total ram usage:       13 bytes
 16859 ;; Hardware stack levels used:    1
 16860 ;; This function calls:
 16861 ;;		Nothing
 16862 ;; This function is called by:
 16863 ;;		i2__doprnt
 16864 ;; This function uses a non-reentrant model
 16865 ;;
 16866                           
 16867                           	psect	text63
 16868  005344                     __ptext63:
 16869                           	opt stack 0
 16870  005344                     i2___lldiv:
 16871                           	opt stack 21
 16872                           
 16873                           ;incstack = 0
 16874  005344  0E00               	movlw	0
 16875  005346  6E09               	movwf	i2___lldiv@quotient,c
 16876  005348  0E00               	movlw	0
 16877  00534A  6E0A               	movwf	i2___lldiv@quotient+1,c
 16878  00534C  0E00               	movlw	0
 16879  00534E  6E0B               	movwf	i2___lldiv@quotient+2,c
 16880  005350  0E00               	movlw	0
 16881  005352  6E0C               	movwf	i2___lldiv@quotient+3,c
 16882  005354  5005               	movf	i2___lldiv@divisor,w,c
 16883  005356  1006               	iorwf	i2___lldiv@divisor+1,w,c
 16884  005358  1007               	iorwf	i2___lldiv@divisor+2,w,c
 16885  00535A  1008               	iorwf	i2___lldiv@divisor+3,w,c
 16886  00535C  B4D8               	btfsc	status,2,c
 16887  00535E  D02A               	goto	i2l925
 16888  005360  0E01               	movlw	1
 16889  005362  6E0D               	movwf	i2___lldiv@counter,c
 16890  005364  D006               	goto	i2l4359
 16891  005366                     i2l4357:
 16892  005366  90D8               	bcf	status,0,c
 16893  005368  3605               	rlcf	i2___lldiv@divisor,f,c
 16894  00536A  3606               	rlcf	i2___lldiv@divisor+1,f,c
 16895  00536C  3607               	rlcf	i2___lldiv@divisor+2,f,c
 16896  00536E  3608               	rlcf	i2___lldiv@divisor+3,f,c
 16897  005370  2A0D               	incf	i2___lldiv@counter,f,c
 16898  005372                     i2l4359:
 16899  005372  AE08               	btfss	i2___lldiv@divisor+3,7,c
 16900  005374  D7F8               	goto	i2l4357
 16901  005376                     i2l4361:
 16902  005376  90D8               	bcf	status,0,c
 16903  005378  3609               	rlcf	i2___lldiv@quotient,f,c
 16904  00537A  360A               	rlcf	i2___lldiv@quotient+1,f,c
 16905  00537C  360B               	rlcf	i2___lldiv@quotient+2,f,c
 16906  00537E  360C               	rlcf	i2___lldiv@quotient+3,f,c
 16907  005380  5005               	movf	i2___lldiv@divisor,w,c
 16908  005382  5C01               	subwf	i2___lldiv@dividend,w,c
 16909  005384  5006               	movf	i2___lldiv@divisor+1,w,c
 16910  005386  5802               	subwfb	i2___lldiv@dividend+1,w,c
 16911  005388  5007               	movf	i2___lldiv@divisor+2,w,c
 16912  00538A  5803               	subwfb	i2___lldiv@dividend+2,w,c
 16913  00538C  5008               	movf	i2___lldiv@divisor+3,w,c
 16914  00538E  5804               	subwfb	i2___lldiv@dividend+3,w,c
 16915  005390  A0D8               	btfss	status,0,c
 16916  005392  D009               	goto	i2l4369
 16917  005394  5005               	movf	i2___lldiv@divisor,w,c
 16918  005396  5E01               	subwf	i2___lldiv@dividend,f,c
 16919  005398  5006               	movf	i2___lldiv@divisor+1,w,c
 16920  00539A  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 16921  00539C  5007               	movf	i2___lldiv@divisor+2,w,c
 16922  00539E  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 16923  0053A0  5008               	movf	i2___lldiv@divisor+3,w,c
 16924  0053A2  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 16925  0053A4  8009               	bsf	i2___lldiv@quotient,0,c
 16926  0053A6                     i2l4369:
 16927  0053A6  90D8               	bcf	status,0,c
 16928  0053A8  3208               	rrcf	i2___lldiv@divisor+3,f,c
 16929  0053AA  3207               	rrcf	i2___lldiv@divisor+2,f,c
 16930  0053AC  3206               	rrcf	i2___lldiv@divisor+1,f,c
 16931  0053AE  3205               	rrcf	i2___lldiv@divisor,f,c
 16932  0053B0  2E0D               	decfsz	i2___lldiv@counter,f,c
 16933  0053B2  D7E1               	goto	i2l4361
 16934  0053B4                     i2l925:
 16935  0053B4  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 16936  0053B8  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 16937  0053BC  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 16938  0053C0  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 16939  0053C4  0012               	return		;funcret
 16940  0053C6                     __end_ofi2___lldiv:
 16941                           	opt stack 0
 16942                           tosu	equ	0xFFF
 16943                           tosh	equ	0xFFE
 16944                           tosl	equ	0xFFD
 16945                           pclatu	equ	0xFFB
 16946                           pclath	equ	0xFFA
 16947                           tblptru	equ	0xFF8
 16948                           tblptrh	equ	0xFF7
 16949                           tblptrl	equ	0xFF6
 16950                           tablat	equ	0xFF5
 16951                           prodh	equ	0xFF4
 16952                           prodl	equ	0xFF3
 16953                           intcon	equ	0xFF2
 16954                           intcon2	equ	0xFF1
 16955                           intcon3	equ	0xFF0
 16956                           postinc0	equ	0xFEE
 16957                           fsr0h	equ	0xFEA
 16958                           fsr0l	equ	0xFE9
 16959                           wreg	equ	0xFE8
 16960                           fsr1h	equ	0xFE2
 16961                           fsr1l	equ	0xFE1
 16962                           indf2	equ	0xFDF
 16963                           postinc2	equ	0xFDE
 16964                           postdec2	equ	0xFDD
 16965                           fsr2h	equ	0xFDA
 16966                           fsr2l	equ	0xFD9
 16967                           status	equ	0xFD8
 16968                           
 16969 ;; *************** function i2___fttol *****************
 16970 ;; Defined at:
 16971 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
 16972 ;; Parameters:    Size  Location     Type
 16973 ;;  f1              3   54[COMRAM] float 
 16974 ;; Auto vars:     Size  Location     Type
 16975 ;;  __fttol         4   64[COMRAM] unsigned long 
 16976 ;;  __fttol         1   68[COMRAM] unsigned char 
 16977 ;;  __fttol         1   63[COMRAM] unsigned char 
 16978 ;; Return value:  Size  Location     Type
 16979 ;;                  4   54[COMRAM] long 
 16980 ;; Registers used:
 16981 ;;		wreg, status,2, status,0
 16982 ;; Tracked objects:
 16983 ;;		On entry : 0/0
 16984 ;;		On exit  : 0/0
 16985 ;;		Unchanged: 0/0
 16986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16987 ;;      Params:         4       0       0       0       0       0       0
 16988 ;;      Locals:         6       0       0       0       0       0       0
 16989 ;;      Temps:          5       0       0       0       0       0       0
 16990 ;;      Totals:        15       0       0       0       0       0       0
 16991 ;;Total ram usage:       15 bytes
 16992 ;; Hardware stack levels used:    1
 16993 ;; This function calls:
 16994 ;;		Nothing
 16995 ;; This function is called by:
 16996 ;;		i2__doprnt
 16997 ;; This function uses a non-reentrant model
 16998 ;;
 16999                           
 17000                           	psect	text64
 17001  004B4C                     __ptext64:
 17002                           	opt stack 0
 17003  004B4C                     i2___fttol:
 17004                           	opt stack 21
 17005                           
 17006                           ;incstack = 0
 17007  004B4C  C039  F03B         	movff	i2___fttol@f1+2,??i2___fttol
 17008  004B50  6A3C               	clrf	(??i2___fttol+1)& (0+255),c
 17009  004B52  6A3D               	clrf	(??i2___fttol+2)& (0+255),c
 17010  004B54  3438               	rlcf	i2___fttol@f1+1,w,c
 17011  004B56  363B               	rlcf	??i2___fttol& (0+255),f,c
 17012  004B58  E301               	bnc	u538_41
 17013  004B5A  803C               	bsf	(??i2___fttol+1)& (0+255),0,c
 17014  004B5C                     u538_41:
 17015  004B5C  503B               	movf	??i2___fttol,w,c
 17016  004B5E  6E45               	movwf	i2___fttol@exp1,c
 17017  004B60  5045               	movf	i2___fttol@exp1,w,c
 17018  004B62  A4D8               	btfss	status,2,c
 17019  004B64  D009               	goto	i2l4299
 17020  004B66  0E00               	movlw	0
 17021  004B68  6E37               	movwf	?i2___fttol,c
 17022  004B6A  0E00               	movlw	0
 17023  004B6C  6E38               	movwf	?i2___fttol+1,c
 17024  004B6E  0E00               	movlw	0
 17025  004B70  6E39               	movwf	?i2___fttol+2,c
 17026  004B72  0E00               	movlw	0
 17027  004B74  6E3A               	movwf	?i2___fttol+3,c
 17028  004B76  0012               	return	
 17029  004B78                     i2l4299:
 17030  004B78  0E17               	movlw	23
 17031  004B7A  6E3B               	movwf	??i2___fttol& (0+255),c
 17032  004B7C  C037  F03C         	movff	i2___fttol@f1,??i2___fttol+1
 17033  004B80  C038  F03D         	movff	i2___fttol@f1+1,??i2___fttol+2
 17034  004B84  C039  F03E         	movff	i2___fttol@f1+2,??i2___fttol+3
 17035  004B88  283B               	incf	??i2___fttol,w,c
 17036  004B8A  6E3F               	movwf	(??i2___fttol+4)& (0+255),c
 17037  004B8C  D004               	goto	i2u540_40
 17038  004B8E                     i2u540_45:
 17039  004B8E  90D8               	bcf	status,0,c
 17040  004B90  323E               	rrcf	??i2___fttol+3,f,c
 17041  004B92  323D               	rrcf	??i2___fttol+2,f,c
 17042  004B94  323C               	rrcf	??i2___fttol+1,f,c
 17043  004B96                     i2u540_40:
 17044  004B96  2E3F               	decfsz	(??i2___fttol+4)& (0+255),f,c
 17045  004B98  D7FA               	goto	i2u540_45
 17046  004B9A  503C               	movf	??i2___fttol+1,w,c
 17047  004B9C  6E40               	movwf	i2___fttol@sign1,c
 17048  004B9E  8E38               	bsf	i2___fttol@f1+1,7,c
 17049  004BA0  0EFF               	movlw	255
 17050  004BA2  1637               	andwf	i2___fttol@f1,f,c
 17051  004BA4  0EFF               	movlw	255
 17052  004BA6  1638               	andwf	i2___fttol@f1+1,f,c
 17053  004BA8  0E00               	movlw	0
 17054  004BAA  1639               	andwf	i2___fttol@f1+2,f,c
 17055  004BAC  5037               	movf	i2___fttol@f1,w,c
 17056  004BAE  6E41               	movwf	i2___fttol@lval,c
 17057  004BB0  5038               	movf	i2___fttol@f1+1,w,c
 17058  004BB2  6E42               	movwf	i2___fttol@lval+1,c
 17059  004BB4  5039               	movf	i2___fttol@f1+2,w,c
 17060  004BB6  6E43               	movwf	i2___fttol@lval+2,c
 17061  004BB8  6A44               	clrf	i2___fttol@lval+3,c
 17062  004BBA  0E8E               	movlw	142
 17063  004BBC  5E45               	subwf	i2___fttol@exp1,f,c
 17064  004BBE  AE45               	btfss	i2___fttol@exp1,7,c
 17065  004BC0  D016               	goto	i2l4321
 17066  004BC2  5045               	movf	i2___fttol@exp1,w,c
 17067  004BC4  0A80               	xorlw	128
 17068  004BC6  0F8F               	addlw	143
 17069  004BC8  B0D8               	btfsc	status,0,c
 17070  004BCA  D009               	goto	i2l4317
 17071  004BCC  0E00               	movlw	0
 17072  004BCE  6E37               	movwf	?i2___fttol,c
 17073  004BD0  0E00               	movlw	0
 17074  004BD2  6E38               	movwf	?i2___fttol+1,c
 17075  004BD4  0E00               	movlw	0
 17076  004BD6  6E39               	movwf	?i2___fttol+2,c
 17077  004BD8  0E00               	movlw	0
 17078  004BDA  6E3A               	movwf	?i2___fttol+3,c
 17079  004BDC  0012               	return	
 17080  004BDE                     i2l4317:
 17081  004BDE  90D8               	bcf	status,0,c
 17082  004BE0  3244               	rrcf	i2___fttol@lval+3,f,c
 17083  004BE2  3243               	rrcf	i2___fttol@lval+2,f,c
 17084  004BE4  3242               	rrcf	i2___fttol@lval+1,f,c
 17085  004BE6  3241               	rrcf	i2___fttol@lval,f,c
 17086  004BE8  3E45               	incfsz	i2___fttol@exp1,f,c
 17087  004BEA  D7F9               	goto	i2l4317
 17088  004BEC  D015               	goto	i2l4331
 17089  004BEE                     i2l4321:
 17090  004BEE  0E17               	movlw	23
 17091  004BF0  6445               	cpfsgt	i2___fttol@exp1,c
 17092  004BF2  D00F               	goto	i2l4329
 17093  004BF4  0E00               	movlw	0
 17094  004BF6  6E37               	movwf	?i2___fttol,c
 17095  004BF8  0E00               	movlw	0
 17096  004BFA  6E38               	movwf	?i2___fttol+1,c
 17097  004BFC  0E00               	movlw	0
 17098  004BFE  6E39               	movwf	?i2___fttol+2,c
 17099  004C00  0E00               	movlw	0
 17100  004C02  6E3A               	movwf	?i2___fttol+3,c
 17101  004C04  0012               	return	
 17102  004C06                     i2l4327:
 17103  004C06  90D8               	bcf	status,0,c
 17104  004C08  3641               	rlcf	i2___fttol@lval,f,c
 17105  004C0A  3642               	rlcf	i2___fttol@lval+1,f,c
 17106  004C0C  3643               	rlcf	i2___fttol@lval+2,f,c
 17107  004C0E  3644               	rlcf	i2___fttol@lval+3,f,c
 17108  004C10  0645               	decf	i2___fttol@exp1,f,c
 17109  004C12                     i2l4329:
 17110  004C12  5045               	movf	i2___fttol@exp1,w,c
 17111  004C14  A4D8               	btfss	status,2,c
 17112  004C16  D7F7               	goto	i2l4327
 17113  004C18                     i2l4331:
 17114  004C18  5040               	movf	i2___fttol@sign1,w,c
 17115  004C1A  B4D8               	btfsc	status,2,c
 17116  004C1C  D008               	goto	i2l4335
 17117  004C1E  1E44               	comf	i2___fttol@lval+3,f,c
 17118  004C20  1E43               	comf	i2___fttol@lval+2,f,c
 17119  004C22  1E42               	comf	i2___fttol@lval+1,f,c
 17120  004C24  6C41               	negf	i2___fttol@lval,c
 17121  004C26  0E00               	movlw	0
 17122  004C28  2242               	addwfc	i2___fttol@lval+1,f,c
 17123  004C2A  2243               	addwfc	i2___fttol@lval+2,f,c
 17124  004C2C  2244               	addwfc	i2___fttol@lval+3,f,c
 17125  004C2E                     i2l4335:
 17126  004C2E  C041  F037         	movff	i2___fttol@lval,?i2___fttol
 17127  004C32  C042  F038         	movff	i2___fttol@lval+1,?i2___fttol+1
 17128  004C36  C043  F039         	movff	i2___fttol@lval+2,?i2___fttol+2
 17129  004C3A  C044  F03A         	movff	i2___fttol@lval+3,?i2___fttol+3
 17130  004C3E  0012               	return	
 17131  004C40                     __end_ofi2___fttol:
 17132                           	opt stack 0
 17133                           tosu	equ	0xFFF
 17134                           tosh	equ	0xFFE
 17135                           tosl	equ	0xFFD
 17136                           pclatu	equ	0xFFB
 17137                           pclath	equ	0xFFA
 17138                           tblptru	equ	0xFF8
 17139                           tblptrh	equ	0xFF7
 17140                           tblptrl	equ	0xFF6
 17141                           tablat	equ	0xFF5
 17142                           prodh	equ	0xFF4
 17143                           prodl	equ	0xFF3
 17144                           intcon	equ	0xFF2
 17145                           intcon2	equ	0xFF1
 17146                           intcon3	equ	0xFF0
 17147                           postinc0	equ	0xFEE
 17148                           fsr0h	equ	0xFEA
 17149                           fsr0l	equ	0xFE9
 17150                           wreg	equ	0xFE8
 17151                           fsr1h	equ	0xFE2
 17152                           fsr1l	equ	0xFE1
 17153                           indf2	equ	0xFDF
 17154                           postinc2	equ	0xFDE
 17155                           postdec2	equ	0xFDD
 17156                           fsr2h	equ	0xFDA
 17157                           fsr2l	equ	0xFD9
 17158                           status	equ	0xFD8
 17159                           
 17160 ;; *************** function i2___ftsub *****************
 17161 ;; Defined at:
 17162 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
 17163 ;; Parameters:    Size  Location     Type
 17164 ;;  f1              3   32[COMRAM] float 
 17165 ;;  f2              3   35[COMRAM] float 
 17166 ;; Auto vars:     Size  Location     Type
 17167 ;;		None
 17168 ;; Return value:  Size  Location     Type
 17169 ;;                  3   32[COMRAM] float 
 17170 ;; Registers used:
 17171 ;;		wreg, status,2, status,0, cstack
 17172 ;; Tracked objects:
 17173 ;;		On entry : 0/0
 17174 ;;		On exit  : 0/0
 17175 ;;		Unchanged: 0/0
 17176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17177 ;;      Params:         6       0       0       0       0       0       0
 17178 ;;      Locals:         0       0       0       0       0       0       0
 17179 ;;      Temps:          0       0       0       0       0       0       0
 17180 ;;      Totals:         6       0       0       0       0       0       0
 17181 ;;Total ram usage:        6 bytes
 17182 ;; Hardware stack levels used:    1
 17183 ;; Hardware stack levels required when called:    2
 17184 ;; This function calls:
 17185 ;;		i2___ftadd
 17186 ;; This function is called by:
 17187 ;;		i2__doprnt
 17188 ;; This function uses a non-reentrant model
 17189 ;;
 17190                           
 17191                           	psect	text65
 17192  0057EC                     __ptext65:
 17193                           	opt stack 0
 17194  0057EC                     i2___ftsub:
 17195                           	opt stack 19
 17196                           
 17197                           ;incstack = 0
 17198  0057EC  5024               	movf	i2___ftsub@f2,w,c
 17199  0057EE  1025               	iorwf	i2___ftsub@f2+1,w,c
 17200  0057F0  1026               	iorwf	i2___ftsub@f2+2,w,c
 17201  0057F2  B4D8               	btfsc	status,2,c
 17202  0057F4  D006               	goto	i2l4289
 17203  0057F6  0E00               	movlw	0
 17204  0057F8  1A24               	xorwf	i2___ftsub@f2,f,c
 17205  0057FA  0E00               	movlw	0
 17206  0057FC  1A25               	xorwf	i2___ftsub@f2+1,f,c
 17207  0057FE  0E80               	movlw	128
 17208  005800  1A26               	xorwf	i2___ftsub@f2+2,f,c
 17209  005802                     i2l4289:
 17210  005802  C021  F015         	movff	i2___ftsub@f1,i2___ftadd@f1
 17211  005806  C022  F016         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 17212  00580A  C023  F017         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 17213  00580E  C024  F018         	movff	i2___ftsub@f2,i2___ftadd@f2
 17214  005812  C025  F019         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 17215  005816  C026  F01A         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 17216  00581A  EC19  F01F         	call	i2___ftadd	;wreg free
 17217  00581E  C015  F021         	movff	?i2___ftadd,?i2___ftsub
 17218  005822  C016  F022         	movff	?i2___ftadd+1,?i2___ftsub+1
 17219  005826  C017  F023         	movff	?i2___ftadd+2,?i2___ftsub+2
 17220  00582A  0012               	return	
 17221  00582C                     __end_ofi2___ftsub:
 17222                           	opt stack 0
 17223                           tosu	equ	0xFFF
 17224                           tosh	equ	0xFFE
 17225                           tosl	equ	0xFFD
 17226                           pclatu	equ	0xFFB
 17227                           pclath	equ	0xFFA
 17228                           tblptru	equ	0xFF8
 17229                           tblptrh	equ	0xFF7
 17230                           tblptrl	equ	0xFF6
 17231                           tablat	equ	0xFF5
 17232                           prodh	equ	0xFF4
 17233                           prodl	equ	0xFF3
 17234                           intcon	equ	0xFF2
 17235                           intcon2	equ	0xFF1
 17236                           intcon3	equ	0xFF0
 17237                           postinc0	equ	0xFEE
 17238                           fsr0h	equ	0xFEA
 17239                           fsr0l	equ	0xFE9
 17240                           wreg	equ	0xFE8
 17241                           fsr1h	equ	0xFE2
 17242                           fsr1l	equ	0xFE1
 17243                           indf2	equ	0xFDF
 17244                           postinc2	equ	0xFDE
 17245                           postdec2	equ	0xFDD
 17246                           fsr2h	equ	0xFDA
 17247                           fsr2l	equ	0xFD9
 17248                           status	equ	0xFD8
 17249                           
 17250 ;; *************** function i2___ftadd *****************
 17251 ;; Defined at:
 17252 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
 17253 ;; Parameters:    Size  Location     Type
 17254 ;;  f1              3   20[COMRAM] float 
 17255 ;;  f2              3   23[COMRAM] float 
 17256 ;; Auto vars:     Size  Location     Type
 17257 ;;  __ftadd         1   31[COMRAM] unsigned char 
 17258 ;;  __ftadd         1   30[COMRAM] unsigned char 
 17259 ;;  __ftadd         1   29[COMRAM] unsigned char 
 17260 ;; Return value:  Size  Location     Type
 17261 ;;                  3   20[COMRAM] float 
 17262 ;; Registers used:
 17263 ;;		wreg, status,2, status,0, cstack
 17264 ;; Tracked objects:
 17265 ;;		On entry : 0/0
 17266 ;;		On exit  : 0/0
 17267 ;;		Unchanged: 0/0
 17268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17269 ;;      Params:         6       0       0       0       0       0       0
 17270 ;;      Locals:         3       0       0       0       0       0       0
 17271 ;;      Temps:          3       0       0       0       0       0       0
 17272 ;;      Totals:        12       0       0       0       0       0       0
 17273 ;;Total ram usage:       12 bytes
 17274 ;; Hardware stack levels used:    1
 17275 ;; Hardware stack levels required when called:    1
 17276 ;; This function calls:
 17277 ;;		i2___ftpack
 17278 ;; This function is called by:
 17279 ;;		_INT0_ISR
 17280 ;;		i2__doprnt
 17281 ;;		i2___ftsub
 17282 ;; This function uses a non-reentrant model
 17283 ;;
 17284                           
 17285                           	psect	text66
 17286  003E32                     __ptext66:
 17287                           	opt stack 0
 17288  003E32                     i2___ftadd:
 17289                           	opt stack 22
 17290                           
 17291                           ;incstack = 0
 17292  003E32  C017  F01B         	movff	i2___ftadd@f1+2,??i2___ftadd
 17293  003E36  6A1C               	clrf	(??i2___ftadd+1)& (0+255),c
 17294  003E38  6A1D               	clrf	(??i2___ftadd+2)& (0+255),c
 17295  003E3A  3416               	rlcf	i2___ftadd@f1+1,w,c
 17296  003E3C  361B               	rlcf	??i2___ftadd& (0+255),f,c
 17297  003E3E  E301               	bnc	u443_41
 17298  003E40  801C               	bsf	(??i2___ftadd+1)& (0+255),0,c
 17299  003E42                     u443_41:
 17300  003E42  501B               	movf	??i2___ftadd,w,c
 17301  003E44  6E20               	movwf	i2___ftadd@exp1,c
 17302  003E46  C01A  F01B         	movff	i2___ftadd@f2+2,??i2___ftadd
 17303  003E4A  6A1C               	clrf	(??i2___ftadd+1)& (0+255),c
 17304  003E4C  6A1D               	clrf	(??i2___ftadd+2)& (0+255),c
 17305  003E4E  3419               	rlcf	i2___ftadd@f2+1,w,c
 17306  003E50  361B               	rlcf	??i2___ftadd& (0+255),f,c
 17307  003E52  E301               	bnc	u444_41
 17308  003E54  801C               	bsf	(??i2___ftadd+1)& (0+255),0,c
 17309  003E56                     u444_41:
 17310  003E56  501B               	movf	??i2___ftadd,w,c
 17311  003E58  6E1F               	movwf	i2___ftadd@exp2,c
 17312  003E5A  5020               	movf	i2___ftadd@exp1,w,c
 17313  003E5C  B4D8               	btfsc	status,2,c
 17314  003E5E  D00B               	goto	i2l779
 17315  003E60  501F               	movf	i2___ftadd@exp2,w,c
 17316  003E62  5C20               	subwf	i2___ftadd@exp1,w,c
 17317  003E64  B0D8               	btfsc	status,0,c
 17318  003E66  D00E               	goto	i2l3767
 17319  003E68  5020               	movf	i2___ftadd@exp1,w,c
 17320  003E6A  0800               	sublw	0
 17321  003E6C  241F               	addwf	i2___ftadd@exp2,w,c
 17322  003E6E  6E1B               	movwf	??i2___ftadd& (0+255),c
 17323  003E70  0E18               	movlw	24
 17324  003E72  641B               	cpfsgt	??i2___ftadd,c
 17325  003E74  D007               	goto	i2l3767
 17326  003E76                     i2l779:
 17327  003E76  C018  F015         	movff	i2___ftadd@f2,?i2___ftadd
 17328  003E7A  C019  F016         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 17329  003E7E  C01A  F017         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 17330  003E82  0012               	return	
 17331  003E84                     i2l3767:
 17332  003E84  501F               	movf	i2___ftadd@exp2,w,c
 17333  003E86  B4D8               	btfsc	status,2,c
 17334  003E88  D00B               	goto	i2l783
 17335  003E8A  5020               	movf	i2___ftadd@exp1,w,c
 17336  003E8C  5C1F               	subwf	i2___ftadd@exp2,w,c
 17337  003E8E  B0D8               	btfsc	status,0,c
 17338  003E90  D00E               	goto	i2l3773
 17339  003E92  501F               	movf	i2___ftadd@exp2,w,c
 17340  003E94  0800               	sublw	0
 17341  003E96  2420               	addwf	i2___ftadd@exp1,w,c
 17342  003E98  6E1B               	movwf	??i2___ftadd& (0+255),c
 17343  003E9A  0E18               	movlw	24
 17344  003E9C  641B               	cpfsgt	??i2___ftadd,c
 17345  003E9E  D007               	goto	i2l3773
 17346  003EA0                     i2l783:
 17347  003EA0  C015  F015         	movff	i2___ftadd@f1,?i2___ftadd
 17348  003EA4  C016  F016         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 17349  003EA8  C017  F017         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 17350  003EAC  0012               	return	
 17351  003EAE                     i2l3773:
 17352  003EAE  0E06               	movlw	6
 17353  003EB0  6E1E               	movwf	i2___ftadd@sign,c
 17354  003EB2  BE17               	btfsc	i2___ftadd@f1+2,7,c
 17355  003EB4  8E1E               	bsf	i2___ftadd@sign,7,c
 17356  003EB6  BE1A               	btfsc	i2___ftadd@f2+2,7,c
 17357  003EB8  8C1E               	bsf	i2___ftadd@sign,6,c
 17358  003EBA  8E16               	bsf	i2___ftadd@f1+1,7,c
 17359  003EBC  0EFF               	movlw	255
 17360  003EBE  1615               	andwf	i2___ftadd@f1,f,c
 17361  003EC0  0EFF               	movlw	255
 17362  003EC2  1616               	andwf	i2___ftadd@f1+1,f,c
 17363  003EC4  0E00               	movlw	0
 17364  003EC6  1617               	andwf	i2___ftadd@f1+2,f,c
 17365  003EC8  8E19               	bsf	i2___ftadd@f2+1,7,c
 17366  003ECA  0EFF               	movlw	255
 17367  003ECC  1618               	andwf	i2___ftadd@f2,f,c
 17368  003ECE  0EFF               	movlw	255
 17369  003ED0  1619               	andwf	i2___ftadd@f2+1,f,c
 17370  003ED2  0E00               	movlw	0
 17371  003ED4  161A               	andwf	i2___ftadd@f2+2,f,c
 17372  003ED6  501F               	movf	i2___ftadd@exp2,w,c
 17373  003ED8  5C20               	subwf	i2___ftadd@exp1,w,c
 17374  003EDA  B0D8               	btfsc	status,0,c
 17375  003EDC  D01B               	goto	i2l3799
 17376  003EDE                     i2l3789:
 17377  003EDE  90D8               	bcf	status,0,c
 17378  003EE0  3618               	rlcf	i2___ftadd@f2,f,c
 17379  003EE2  3619               	rlcf	i2___ftadd@f2+1,f,c
 17380  003EE4  361A               	rlcf	i2___ftadd@f2+2,f,c
 17381  003EE6  061F               	decf	i2___ftadd@exp2,f,c
 17382  003EE8  5020               	movf	i2___ftadd@exp1,w,c
 17383  003EEA  181F               	xorwf	i2___ftadd@exp2,w,c
 17384  003EEC  B4D8               	btfsc	status,2,c
 17385  003EEE  D00D               	goto	i2l3797
 17386  003EF0  061E               	decf	i2___ftadd@sign,f,c
 17387  003EF2  C01E  F01B         	movff	i2___ftadd@sign,??i2___ftadd
 17388  003EF6  0E07               	movlw	7
 17389  003EF8  161B               	andwf	??i2___ftadd,f,c
 17390  003EFA  B4D8               	btfsc	status,2,c
 17391  003EFC  D006               	goto	i2l3797
 17392  003EFE  D7EF               	goto	i2l3789
 17393  003F00                     i2l3795:
 17394  003F00  90D8               	bcf	status,0,c
 17395  003F02  3217               	rrcf	i2___ftadd@f1+2,f,c
 17396  003F04  3216               	rrcf	i2___ftadd@f1+1,f,c
 17397  003F06  3215               	rrcf	i2___ftadd@f1,f,c
 17398  003F08  2A20               	incf	i2___ftadd@exp1,f,c
 17399  003F0A                     i2l3797:
 17400  003F0A  501F               	movf	i2___ftadd@exp2,w,c
 17401  003F0C  1820               	xorwf	i2___ftadd@exp1,w,c
 17402  003F0E  B4D8               	btfsc	status,2,c
 17403  003F10  D01F               	goto	i2l794
 17404  003F12  D7F6               	goto	i2l3795
 17405  003F14                     i2l3799:
 17406  003F14  5020               	movf	i2___ftadd@exp1,w,c
 17407  003F16  5C1F               	subwf	i2___ftadd@exp2,w,c
 17408  003F18  B0D8               	btfsc	status,0,c
 17409  003F1A  D01A               	goto	i2l794
 17410  003F1C                     i2l3801:
 17411  003F1C  90D8               	bcf	status,0,c
 17412  003F1E  3615               	rlcf	i2___ftadd@f1,f,c
 17413  003F20  3616               	rlcf	i2___ftadd@f1+1,f,c
 17414  003F22  3617               	rlcf	i2___ftadd@f1+2,f,c
 17415  003F24  0620               	decf	i2___ftadd@exp1,f,c
 17416  003F26  5020               	movf	i2___ftadd@exp1,w,c
 17417  003F28  181F               	xorwf	i2___ftadd@exp2,w,c
 17418  003F2A  B4D8               	btfsc	status,2,c
 17419  003F2C  D00D               	goto	i2l3809
 17420  003F2E  061E               	decf	i2___ftadd@sign,f,c
 17421  003F30  C01E  F01B         	movff	i2___ftadd@sign,??i2___ftadd
 17422  003F34  0E07               	movlw	7
 17423  003F36  161B               	andwf	??i2___ftadd,f,c
 17424  003F38  B4D8               	btfsc	status,2,c
 17425  003F3A  D006               	goto	i2l3809
 17426  003F3C  D7EF               	goto	i2l3801
 17427  003F3E                     i2l3807:
 17428  003F3E  90D8               	bcf	status,0,c
 17429  003F40  321A               	rrcf	i2___ftadd@f2+2,f,c
 17430  003F42  3219               	rrcf	i2___ftadd@f2+1,f,c
 17431  003F44  3218               	rrcf	i2___ftadd@f2,f,c
 17432  003F46  2A1F               	incf	i2___ftadd@exp2,f,c
 17433  003F48                     i2l3809:
 17434  003F48  501F               	movf	i2___ftadd@exp2,w,c
 17435  003F4A  1820               	xorwf	i2___ftadd@exp1,w,c
 17436  003F4C  A4D8               	btfss	status,2,c
 17437  003F4E  D7F7               	goto	i2l3807
 17438  003F50                     i2l794:
 17439  003F50  AE1E               	btfss	i2___ftadd@sign,7,c
 17440  003F52  D00C               	goto	i2l803
 17441  003F54  0EFF               	movlw	255
 17442  003F56  1A15               	xorwf	i2___ftadd@f1,f,c
 17443  003F58  0EFF               	movlw	255
 17444  003F5A  1A16               	xorwf	i2___ftadd@f1+1,f,c
 17445  003F5C  0EFF               	movlw	255
 17446  003F5E  1A17               	xorwf	i2___ftadd@f1+2,f,c
 17447  003F60  0E01               	movlw	1
 17448  003F62  2615               	addwf	i2___ftadd@f1,f,c
 17449  003F64  0E00               	movlw	0
 17450  003F66  2216               	addwfc	i2___ftadd@f1+1,f,c
 17451  003F68  0E00               	movlw	0
 17452  003F6A  2217               	addwfc	i2___ftadd@f1+2,f,c
 17453  003F6C                     i2l803:
 17454  003F6C  AC1E               	btfss	i2___ftadd@sign,6,c
 17455  003F6E  D00C               	goto	i2l3815
 17456  003F70  0EFF               	movlw	255
 17457  003F72  1A18               	xorwf	i2___ftadd@f2,f,c
 17458  003F74  0EFF               	movlw	255
 17459  003F76  1A19               	xorwf	i2___ftadd@f2+1,f,c
 17460  003F78  0EFF               	movlw	255
 17461  003F7A  1A1A               	xorwf	i2___ftadd@f2+2,f,c
 17462  003F7C  0E01               	movlw	1
 17463  003F7E  2618               	addwf	i2___ftadd@f2,f,c
 17464  003F80  0E00               	movlw	0
 17465  003F82  2219               	addwfc	i2___ftadd@f2+1,f,c
 17466  003F84  0E00               	movlw	0
 17467  003F86  221A               	addwfc	i2___ftadd@f2+2,f,c
 17468  003F88                     i2l3815:
 17469  003F88  0E00               	movlw	0
 17470  003F8A  6E1E               	movwf	i2___ftadd@sign,c
 17471  003F8C  5015               	movf	i2___ftadd@f1,w,c
 17472  003F8E  2618               	addwf	i2___ftadd@f2,f,c
 17473  003F90  5016               	movf	i2___ftadd@f1+1,w,c
 17474  003F92  2219               	addwfc	i2___ftadd@f2+1,f,c
 17475  003F94  5017               	movf	i2___ftadd@f1+2,w,c
 17476  003F96  221A               	addwfc	i2___ftadd@f2+2,f,c
 17477  003F98  AE1A               	btfss	i2___ftadd@f2+2,7,c
 17478  003F9A  D00E               	goto	i2l3825
 17479  003F9C  0EFF               	movlw	255
 17480  003F9E  1A18               	xorwf	i2___ftadd@f2,f,c
 17481  003FA0  0EFF               	movlw	255
 17482  003FA2  1A19               	xorwf	i2___ftadd@f2+1,f,c
 17483  003FA4  0EFF               	movlw	255
 17484  003FA6  1A1A               	xorwf	i2___ftadd@f2+2,f,c
 17485  003FA8  0E01               	movlw	1
 17486  003FAA  2618               	addwf	i2___ftadd@f2,f,c
 17487  003FAC  0E00               	movlw	0
 17488  003FAE  2219               	addwfc	i2___ftadd@f2+1,f,c
 17489  003FB0  0E00               	movlw	0
 17490  003FB2  221A               	addwfc	i2___ftadd@f2+2,f,c
 17491  003FB4  0E01               	movlw	1
 17492  003FB6  6E1E               	movwf	i2___ftadd@sign,c
 17493  003FB8                     i2l3825:
 17494  003FB8  C018  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 17495  003FBC  C019  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 17496  003FC0  C01A  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 17497  003FC4  C020  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 17498  003FC8  C01E  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 17499  003FCC  EC23  F028         	call	i2___ftpack	;wreg free
 17500  003FD0  C001  F015         	movff	?i2___ftpack,?i2___ftadd
 17501  003FD4  C002  F016         	movff	?i2___ftpack+1,?i2___ftadd+1
 17502  003FD8  C003  F017         	movff	?i2___ftpack+2,?i2___ftadd+2
 17503  003FDC  0012               	return	
 17504  003FDE                     __end_ofi2___ftadd:
 17505                           	opt stack 0
 17506                           tosu	equ	0xFFF
 17507                           tosh	equ	0xFFE
 17508                           tosl	equ	0xFFD
 17509                           pclatu	equ	0xFFB
 17510                           pclath	equ	0xFFA
 17511                           tblptru	equ	0xFF8
 17512                           tblptrh	equ	0xFF7
 17513                           tblptrl	equ	0xFF6
 17514                           tablat	equ	0xFF5
 17515                           prodh	equ	0xFF4
 17516                           prodl	equ	0xFF3
 17517                           intcon	equ	0xFF2
 17518                           intcon2	equ	0xFF1
 17519                           intcon3	equ	0xFF0
 17520                           postinc0	equ	0xFEE
 17521                           fsr0h	equ	0xFEA
 17522                           fsr0l	equ	0xFE9
 17523                           wreg	equ	0xFE8
 17524                           fsr1h	equ	0xFE2
 17525                           fsr1l	equ	0xFE1
 17526                           indf2	equ	0xFDF
 17527                           postinc2	equ	0xFDE
 17528                           postdec2	equ	0xFDD
 17529                           fsr2h	equ	0xFDA
 17530                           fsr2l	equ	0xFD9
 17531                           status	equ	0xFD8
 17532                           
 17533 ;; *************** function i2___ftneg *****************
 17534 ;; Defined at:
 17535 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
 17536 ;; Parameters:    Size  Location     Type
 17537 ;;  f1              3    0[COMRAM] float 
 17538 ;; Auto vars:     Size  Location     Type
 17539 ;;		None
 17540 ;; Return value:  Size  Location     Type
 17541 ;;                  3    0[COMRAM] float 
 17542 ;; Registers used:
 17543 ;;		wreg, status,2, status,0
 17544 ;; Tracked objects:
 17545 ;;		On entry : 0/0
 17546 ;;		On exit  : 0/0
 17547 ;;		Unchanged: 0/0
 17548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17549 ;;      Params:         3       0       0       0       0       0       0
 17550 ;;      Locals:         0       0       0       0       0       0       0
 17551 ;;      Temps:          0       0       0       0       0       0       0
 17552 ;;      Totals:         3       0       0       0       0       0       0
 17553 ;;Total ram usage:        3 bytes
 17554 ;; Hardware stack levels used:    1
 17555 ;; This function calls:
 17556 ;;		Nothing
 17557 ;; This function is called by:
 17558 ;;		i2__doprnt
 17559 ;; This function uses a non-reentrant model
 17560 ;;
 17561                           
 17562                           	psect	text67
 17563  005A02                     __ptext67:
 17564                           	opt stack 0
 17565  005A02                     i2___ftneg:
 17566                           	opt stack 21
 17567                           
 17568                           ;incstack = 0
 17569  005A02  5001               	movf	i2___ftneg@f1,w,c
 17570  005A04  1002               	iorwf	i2___ftneg@f1+1,w,c
 17571  005A06  1003               	iorwf	i2___ftneg@f1+2,w,c
 17572  005A08  B4D8               	btfsc	status,2,c
 17573  005A0A  D006               	goto	i2l853
 17574  005A0C  0E00               	movlw	0
 17575  005A0E  1A01               	xorwf	i2___ftneg@f1,f,c
 17576  005A10  0E00               	movlw	0
 17577  005A12  1A02               	xorwf	i2___ftneg@f1+1,f,c
 17578  005A14  0E80               	movlw	128
 17579  005A16  1A03               	xorwf	i2___ftneg@f1+2,f,c
 17580  005A18                     i2l853:
 17581  005A18  C001  F001         	movff	i2___ftneg@f1,?i2___ftneg
 17582  005A1C  C002  F002         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 17583  005A20  C003  F003         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 17584  005A24  0012               	return		;funcret
 17585  005A26                     __end_ofi2___ftneg:
 17586                           	opt stack 0
 17587                           tosu	equ	0xFFF
 17588                           tosh	equ	0xFFE
 17589                           tosl	equ	0xFFD
 17590                           pclatu	equ	0xFFB
 17591                           pclath	equ	0xFFA
 17592                           tblptru	equ	0xFF8
 17593                           tblptrh	equ	0xFF7
 17594                           tblptrl	equ	0xFF6
 17595                           tablat	equ	0xFF5
 17596                           prodh	equ	0xFF4
 17597                           prodl	equ	0xFF3
 17598                           intcon	equ	0xFF2
 17599                           intcon2	equ	0xFF1
 17600                           intcon3	equ	0xFF0
 17601                           postinc0	equ	0xFEE
 17602                           fsr0h	equ	0xFEA
 17603                           fsr0l	equ	0xFE9
 17604                           wreg	equ	0xFE8
 17605                           fsr1h	equ	0xFE2
 17606                           fsr1l	equ	0xFE1
 17607                           indf2	equ	0xFDF
 17608                           postinc2	equ	0xFDE
 17609                           postdec2	equ	0xFDD
 17610                           fsr2h	equ	0xFDA
 17611                           fsr2l	equ	0xFD9
 17612                           status	equ	0xFD8
 17613                           
 17614 ;; *************** function i2___ftge *****************
 17615 ;; Defined at:
 17616 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
 17617 ;; Parameters:    Size  Location     Type
 17618 ;;  ff1             3    0[COMRAM] float 
 17619 ;;  ff2             3    3[COMRAM] float 
 17620 ;; Auto vars:     Size  Location     Type
 17621 ;;		None
 17622 ;; Return value:  Size  Location     Type
 17623 ;;		None               void
 17624 ;; Registers used:
 17625 ;;		wreg, status,2, status,0
 17626 ;; Tracked objects:
 17627 ;;		On entry : 0/0
 17628 ;;		On exit  : 0/0
 17629 ;;		Unchanged: 0/0
 17630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17631 ;;      Params:         6       0       0       0       0       0       0
 17632 ;;      Locals:         0       0       0       0       0       0       0
 17633 ;;      Temps:          3       0       0       0       0       0       0
 17634 ;;      Totals:         9       0       0       0       0       0       0
 17635 ;;Total ram usage:        9 bytes
 17636 ;; Hardware stack levels used:    1
 17637 ;; This function calls:
 17638 ;;		Nothing
 17639 ;; This function is called by:
 17640 ;;		i2__doprnt
 17641 ;; This function uses a non-reentrant model
 17642 ;;
 17643                           
 17644                           	psect	text68
 17645  005230                     __ptext68:
 17646                           	opt stack 0
 17647  005230                     i2___ftge:
 17648                           	opt stack 21
 17649                           
 17650                           ;incstack = 0
 17651  005230  AE03               	btfss	i2___ftge@ff1+2,7,c
 17652  005232  D016               	goto	i2l4267
 17653  005234  C001  F007         	movff	i2___ftge@ff1,??i2___ftge
 17654  005238  C002  F008         	movff	i2___ftge@ff1+1,??i2___ftge+1
 17655  00523C  C003  F009         	movff	i2___ftge@ff1+2,??i2___ftge+2
 17656  005240  1E07               	comf	??i2___ftge,f,c
 17657  005242  1E08               	comf	??i2___ftge+1,f,c
 17658  005244  1E09               	comf	??i2___ftge+2,f,c
 17659  005246  2A07               	incf	??i2___ftge,f,c
 17660  005248  0E00               	movlw	0
 17661  00524A  2208               	addwfc	??i2___ftge+1,f,c
 17662  00524C  2209               	addwfc	??i2___ftge+2,f,c
 17663  00524E  0E00               	movlw	0
 17664  005250  2407               	addwf	??i2___ftge,w,c
 17665  005252  6E01               	movwf	i2___ftge@ff1,c
 17666  005254  0E00               	movlw	0
 17667  005256  2008               	addwfc	??i2___ftge+1,w,c
 17668  005258  6E02               	movwf	i2___ftge@ff1+1,c
 17669  00525A  0E80               	movlw	128
 17670  00525C  2009               	addwfc	??i2___ftge+2,w,c
 17671  00525E  6E03               	movwf	i2___ftge@ff1+2,c
 17672  005260                     i2l4267:
 17673  005260  AE06               	btfss	i2___ftge@ff2+2,7,c
 17674  005262  D016               	goto	i2l4271
 17675  005264  C004  F007         	movff	i2___ftge@ff2,??i2___ftge
 17676  005268  C005  F008         	movff	i2___ftge@ff2+1,??i2___ftge+1
 17677  00526C  C006  F009         	movff	i2___ftge@ff2+2,??i2___ftge+2
 17678  005270  1E07               	comf	??i2___ftge,f,c
 17679  005272  1E08               	comf	??i2___ftge+1,f,c
 17680  005274  1E09               	comf	??i2___ftge+2,f,c
 17681  005276  2A07               	incf	??i2___ftge,f,c
 17682  005278  0E00               	movlw	0
 17683  00527A  2208               	addwfc	??i2___ftge+1,f,c
 17684  00527C  2209               	addwfc	??i2___ftge+2,f,c
 17685  00527E  0E00               	movlw	0
 17686  005280  2407               	addwf	??i2___ftge,w,c
 17687  005282  6E04               	movwf	i2___ftge@ff2,c
 17688  005284  0E00               	movlw	0
 17689  005286  2008               	addwfc	??i2___ftge+1,w,c
 17690  005288  6E05               	movwf	i2___ftge@ff2+1,c
 17691  00528A  0E80               	movlw	128
 17692  00528C  2009               	addwfc	??i2___ftge+2,w,c
 17693  00528E  6E06               	movwf	i2___ftge@ff2+2,c
 17694  005290                     i2l4271:
 17695  005290  0E00               	movlw	0
 17696  005292  1A01               	xorwf	i2___ftge@ff1,f,c
 17697  005294  0E00               	movlw	0
 17698  005296  1A02               	xorwf	i2___ftge@ff1+1,f,c
 17699  005298  0E80               	movlw	128
 17700  00529A  1A03               	xorwf	i2___ftge@ff1+2,f,c
 17701  00529C  0E00               	movlw	0
 17702  00529E  1A04               	xorwf	i2___ftge@ff2,f,c
 17703  0052A0  0E00               	movlw	0
 17704  0052A2  1A05               	xorwf	i2___ftge@ff2+1,f,c
 17705  0052A4  0E80               	movlw	128
 17706  0052A6  1A06               	xorwf	i2___ftge@ff2+2,f,c
 17707  0052A8  5004               	movf	i2___ftge@ff2,w,c
 17708  0052AA  5C01               	subwf	i2___ftge@ff1,w,c
 17709  0052AC  5005               	movf	i2___ftge@ff2+1,w,c
 17710  0052AE  5802               	subwfb	i2___ftge@ff1+1,w,c
 17711  0052B0  5006               	movf	i2___ftge@ff2+2,w,c
 17712  0052B2  5803               	subwfb	i2___ftge@ff1+2,w,c
 17713  0052B4  B0D8               	btfsc	status,0,c
 17714  0052B6  D002               	goto	i2l4277
 17715  0052B8  90D8               	bcf	status,0,c
 17716  0052BA  0012               	return	
 17717  0052BC                     i2l4277:
 17718  0052BC  80D8               	bsf	status,0,c
 17719  0052BE  0012               	return	
 17720  0052C0                     __end_ofi2___ftge:
 17721                           	opt stack 0
 17722                           tosu	equ	0xFFF
 17723                           tosh	equ	0xFFE
 17724                           tosl	equ	0xFFD
 17725                           pclatu	equ	0xFFB
 17726                           pclath	equ	0xFFA
 17727                           tblptru	equ	0xFF8
 17728                           tblptrh	equ	0xFF7
 17729                           tblptrl	equ	0xFF6
 17730                           tablat	equ	0xFF5
 17731                           prodh	equ	0xFF4
 17732                           prodl	equ	0xFF3
 17733                           intcon	equ	0xFF2
 17734                           intcon2	equ	0xFF1
 17735                           intcon3	equ	0xFF0
 17736                           postinc0	equ	0xFEE
 17737                           fsr0h	equ	0xFEA
 17738                           fsr0l	equ	0xFE9
 17739                           wreg	equ	0xFE8
 17740                           fsr1h	equ	0xFE2
 17741                           fsr1l	equ	0xFE1
 17742                           indf2	equ	0xFDF
 17743                           postinc2	equ	0xFDE
 17744                           postdec2	equ	0xFDD
 17745                           fsr2h	equ	0xFDA
 17746                           fsr2l	equ	0xFD9
 17747                           status	equ	0xFD8
 17748                           
 17749 ;; *************** function ___lwtoft *****************
 17750 ;; Defined at:
 17751 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
 17752 ;; Parameters:    Size  Location     Type
 17753 ;;  c               2    8[COMRAM] unsigned int 
 17754 ;; Auto vars:     Size  Location     Type
 17755 ;;		None
 17756 ;; Return value:  Size  Location     Type
 17757 ;;                  3    8[COMRAM] float 
 17758 ;; Registers used:
 17759 ;;		wreg, status,2, status,0, cstack
 17760 ;; Tracked objects:
 17761 ;;		On entry : 0/0
 17762 ;;		On exit  : 0/0
 17763 ;;		Unchanged: 0/0
 17764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17765 ;;      Params:         3       0       0       0       0       0       0
 17766 ;;      Locals:         0       0       0       0       0       0       0
 17767 ;;      Temps:          0       0       0       0       0       0       0
 17768 ;;      Totals:         3       0       0       0       0       0       0
 17769 ;;Total ram usage:        3 bytes
 17770 ;; Hardware stack levels used:    1
 17771 ;; Hardware stack levels required when called:    1
 17772 ;; This function calls:
 17773 ;;		i2___ftpack
 17774 ;; This function is called by:
 17775 ;;		_INT0_ISR
 17776 ;; This function uses a non-reentrant model
 17777 ;;
 17778                           
 17779                           	psect	text69
 17780  005A26                     __ptext69:
 17781                           	opt stack 0
 17782  005A26                     ___lwtoft:
 17783                           	opt stack 22
 17784                           
 17785                           ;incstack = 0
 17786  005A26  C009  F001         	movff	___lwtoft@c,i2___ftpack@arg
 17787  005A2A  C00A  F002         	movff	___lwtoft@c+1,i2___ftpack@arg+1
 17788  005A2E  6A03               	clrf	i2___ftpack@arg+2,c
 17789  005A30  0E8E               	movlw	142
 17790  005A32  6E04               	movwf	i2___ftpack@exp,c
 17791  005A34  0E00               	movlw	0
 17792  005A36  6E05               	movwf	i2___ftpack@sign,c
 17793  005A38  EC23  F028         	call	i2___ftpack	;wreg free
 17794  005A3C  C001  F009         	movff	?i2___ftpack,?___lwtoft
 17795  005A40  C002  F00A         	movff	?i2___ftpack+1,?___lwtoft+1
 17796  005A44  C003  F00B         	movff	?i2___ftpack+2,?___lwtoft+2
 17797  005A48  0012               	return	
 17798  005A4A                     __end_of___lwtoft:
 17799                           	opt stack 0
 17800                           tosu	equ	0xFFF
 17801                           tosh	equ	0xFFE
 17802                           tosl	equ	0xFFD
 17803                           pclatu	equ	0xFFB
 17804                           pclath	equ	0xFFA
 17805                           tblptru	equ	0xFF8
 17806                           tblptrh	equ	0xFF7
 17807                           tblptrl	equ	0xFF6
 17808                           tablat	equ	0xFF5
 17809                           prodh	equ	0xFF4
 17810                           prodl	equ	0xFF3
 17811                           intcon	equ	0xFF2
 17812                           intcon2	equ	0xFF1
 17813                           intcon3	equ	0xFF0
 17814                           postinc0	equ	0xFEE
 17815                           fsr0h	equ	0xFEA
 17816                           fsr0l	equ	0xFE9
 17817                           wreg	equ	0xFE8
 17818                           fsr1h	equ	0xFE2
 17819                           fsr1l	equ	0xFE1
 17820                           indf2	equ	0xFDF
 17821                           postinc2	equ	0xFDE
 17822                           postdec2	equ	0xFDD
 17823                           fsr2h	equ	0xFDA
 17824                           fsr2l	equ	0xFD9
 17825                           status	equ	0xFD8
 17826                           
 17827 ;; *************** function i2___ftpack *****************
 17828 ;; Defined at:
 17829 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
 17830 ;; Parameters:    Size  Location     Type
 17831 ;;  arg             3    0[COMRAM] unsigned um
 17832 ;;  exp             1    3[COMRAM] unsigned char 
 17833 ;;  sign            1    4[COMRAM] unsigned char 
 17834 ;; Auto vars:     Size  Location     Type
 17835 ;;		None
 17836 ;; Return value:  Size  Location     Type
 17837 ;;                  3    0[COMRAM] float 
 17838 ;; Registers used:
 17839 ;;		wreg, status,2, status,0
 17840 ;; Tracked objects:
 17841 ;;		On entry : 0/0
 17842 ;;		On exit  : 0/0
 17843 ;;		Unchanged: 0/0
 17844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17845 ;;      Params:         5       0       0       0       0       0       0
 17846 ;;      Locals:         0       0       0       0       0       0       0
 17847 ;;      Temps:          3       0       0       0       0       0       0
 17848 ;;      Totals:         8       0       0       0       0       0       0
 17849 ;;Total ram usage:        8 bytes
 17850 ;; Hardware stack levels used:    1
 17851 ;; This function calls:
 17852 ;;		Nothing
 17853 ;; This function is called by:
 17854 ;;		___lwtoft
 17855 ;;		i2___ftadd
 17856 ;;		i2___ftdiv
 17857 ;;		i2___ftmul
 17858 ;;		i2___lltoft
 17859 ;; This function uses a non-reentrant model
 17860 ;;
 17861                           
 17862                           	psect	text70
 17863  005046                     __ptext70:
 17864                           	opt stack 0
 17865  005046                     i2___ftpack:
 17866                           	opt stack 22
 17867                           
 17868                           ;incstack = 0
 17869  005046  5004               	movf	i2___ftpack@exp,w,c
 17870  005048  B4D8               	btfsc	status,2,c
 17871  00504A  D005               	goto	i2l3601
 17872  00504C  5001               	movf	i2___ftpack@arg,w,c
 17873  00504E  1002               	iorwf	i2___ftpack@arg+1,w,c
 17874  005050  1003               	iorwf	i2___ftpack@arg+2,w,c
 17875  005052  A4D8               	btfss	status,2,c
 17876  005054  D00C               	goto	i2l3607
 17877  005056                     i2l3601:
 17878  005056  0E00               	movlw	0
 17879  005058  6E01               	movwf	?i2___ftpack,c
 17880  00505A  0E00               	movlw	0
 17881  00505C  6E02               	movwf	?i2___ftpack+1,c
 17882  00505E  0E00               	movlw	0
 17883  005060  6E03               	movwf	?i2___ftpack+2,c
 17884  005062  0012               	return	
 17885  005064                     i2l3605:
 17886  005064  2A04               	incf	i2___ftpack@exp,f,c
 17887  005066  90D8               	bcf	status,0,c
 17888  005068  3203               	rrcf	i2___ftpack@arg+2,f,c
 17889  00506A  3202               	rrcf	i2___ftpack@arg+1,f,c
 17890  00506C  3201               	rrcf	i2___ftpack@arg,f,c
 17891  00506E                     i2l3607:
 17892  00506E  0E00               	movlw	0
 17893  005070  1401               	andwf	i2___ftpack@arg,w,c
 17894  005072  6E06               	movwf	??i2___ftpack& (0+255),c
 17895  005074  0E00               	movlw	0
 17896  005076  1402               	andwf	i2___ftpack@arg+1,w,c
 17897  005078  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 17898  00507A  0EFE               	movlw	254
 17899  00507C  1403               	andwf	i2___ftpack@arg+2,w,c
 17900  00507E  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 17901  005080  5006               	movf	??i2___ftpack,w,c
 17902  005082  1007               	iorwf	??i2___ftpack+1,w,c
 17903  005084  1008               	iorwf	??i2___ftpack+2,w,c
 17904  005086  B4D8               	btfsc	status,2,c
 17905  005088  D00C               	goto	i2l3613
 17906  00508A  D7EC               	goto	i2l3605
 17907  00508C                     i2l3609:
 17908  00508C  2A04               	incf	i2___ftpack@exp,f,c
 17909  00508E  0E01               	movlw	1
 17910  005090  2601               	addwf	i2___ftpack@arg,f,c
 17911  005092  0E00               	movlw	0
 17912  005094  2202               	addwfc	i2___ftpack@arg+1,f,c
 17913  005096  0E00               	movlw	0
 17914  005098  2203               	addwfc	i2___ftpack@arg+2,f,c
 17915  00509A  90D8               	bcf	status,0,c
 17916  00509C  3203               	rrcf	i2___ftpack@arg+2,f,c
 17917  00509E  3202               	rrcf	i2___ftpack@arg+1,f,c
 17918  0050A0  3201               	rrcf	i2___ftpack@arg,f,c
 17919  0050A2                     i2l3613:
 17920  0050A2  0E00               	movlw	0
 17921  0050A4  1401               	andwf	i2___ftpack@arg,w,c
 17922  0050A6  6E06               	movwf	??i2___ftpack& (0+255),c
 17923  0050A8  0E00               	movlw	0
 17924  0050AA  1402               	andwf	i2___ftpack@arg+1,w,c
 17925  0050AC  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 17926  0050AE  0EFF               	movlw	255
 17927  0050B0  1403               	andwf	i2___ftpack@arg+2,w,c
 17928  0050B2  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 17929  0050B4  5006               	movf	??i2___ftpack,w,c
 17930  0050B6  1007               	iorwf	??i2___ftpack+1,w,c
 17931  0050B8  1008               	iorwf	??i2___ftpack+2,w,c
 17932  0050BA  B4D8               	btfsc	status,2,c
 17933  0050BC  D006               	goto	i2l3617
 17934  0050BE  D7E6               	goto	i2l3609
 17935  0050C0                     i2l3615:
 17936  0050C0  0604               	decf	i2___ftpack@exp,f,c
 17937  0050C2  90D8               	bcf	status,0,c
 17938  0050C4  3601               	rlcf	i2___ftpack@arg,f,c
 17939  0050C6  3602               	rlcf	i2___ftpack@arg+1,f,c
 17940  0050C8  3603               	rlcf	i2___ftpack@arg+2,f,c
 17941  0050CA                     i2l3617:
 17942  0050CA  BE02               	btfsc	i2___ftpack@arg+1,7,c
 17943  0050CC  D003               	goto	i2l756
 17944  0050CE  0E02               	movlw	2
 17945  0050D0  6004               	cpfslt	i2___ftpack@exp,c
 17946  0050D2  D7F6               	goto	i2l3615
 17947  0050D4                     i2l756:
 17948  0050D4  A004               	btfss	i2___ftpack@exp,0,c
 17949  0050D6  9E02               	bcf	i2___ftpack@arg+1,7,c
 17950  0050D8  90D8               	bcf	status,0,c
 17951  0050DA  3204               	rrcf	i2___ftpack@exp,f,c
 17952  0050DC  5004               	movf	i2___ftpack@exp,w,c
 17953  0050DE  1203               	iorwf	i2___ftpack@arg+2,f,c
 17954  0050E0  5005               	movf	i2___ftpack@sign,w,c
 17955  0050E2  A4D8               	btfss	status,2,c
 17956  0050E4  8E03               	bsf	i2___ftpack@arg+2,7,c
 17957  0050E6  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 17958  0050EA  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 17959  0050EE  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 17960  0050F2  0012               	return	
 17961  0050F4                     __end_ofi2___ftpack:
 17962                           	opt stack 0
 17963                           tosu	equ	0xFFF
 17964                           tosh	equ	0xFFE
 17965                           tosl	equ	0xFFD
 17966                           pclatu	equ	0xFFB
 17967                           pclath	equ	0xFFA
 17968                           tblptru	equ	0xFF8
 17969                           tblptrh	equ	0xFF7
 17970                           tblptrl	equ	0xFF6
 17971                           tablat	equ	0xFF5
 17972                           prodh	equ	0xFF4
 17973                           prodl	equ	0xFF3
 17974                           intcon	equ	0xFF2
 17975                           intcon2	equ	0xFF1
 17976                           intcon3	equ	0xFF0
 17977                           postinc0	equ	0xFEE
 17978                           fsr0h	equ	0xFEA
 17979                           fsr0l	equ	0xFE9
 17980                           wreg	equ	0xFE8
 17981                           fsr1h	equ	0xFE2
 17982                           fsr1l	equ	0xFE1
 17983                           indf2	equ	0xFDF
 17984                           postinc2	equ	0xFDE
 17985                           postdec2	equ	0xFDD
 17986                           fsr2h	equ	0xFDA
 17987                           fsr2l	equ	0xFD9
 17988                           status	equ	0xFD8
 17989                           
 17990 ;; *************** function _TMR0_StopTimer *****************
 17991 ;; Defined at:
 17992 ;;		line 51 in file "mcc_generated_files/tmr0.c"
 17993 ;; Parameters:    Size  Location     Type
 17994 ;;		None
 17995 ;; Auto vars:     Size  Location     Type
 17996 ;;		None
 17997 ;; Return value:  Size  Location     Type
 17998 ;;                  1    wreg      void 
 17999 ;; Registers used:
 18000 ;;		None
 18001 ;; Tracked objects:
 18002 ;;		On entry : 0/0
 18003 ;;		On exit  : 0/0
 18004 ;;		Unchanged: 0/0
 18005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18006 ;;      Params:         0       0       0       0       0       0       0
 18007 ;;      Locals:         0       0       0       0       0       0       0
 18008 ;;      Temps:          0       0       0       0       0       0       0
 18009 ;;      Totals:         0       0       0       0       0       0       0
 18010 ;;Total ram usage:        0 bytes
 18011 ;; Hardware stack levels used:    1
 18012 ;; This function calls:
 18013 ;;		Nothing
 18014 ;; This function is called by:
 18015 ;;		_INT0_ISR
 18016 ;; This function uses a non-reentrant model
 18017 ;;
 18018                           
 18019                           	psect	text71
 18020  005B3E                     __ptext71:
 18021                           	opt stack 0
 18022  005B3E                     _TMR0_StopTimer:
 18023                           	opt stack 23
 18024                           
 18025                           ;tmr0.c: 54: T0CONbits.TMR0ON = 0;
 18026                           
 18027                           ;incstack = 0
 18028  005B3E  9ED5               	bcf	4053,7,c	;volatile
 18029  005B40  0012               	return		;funcret
 18030  005B42                     __end_of_TMR0_StopTimer:
 18031                           	opt stack 0
 18032                           tosu	equ	0xFFF
 18033                           tosh	equ	0xFFE
 18034                           tosl	equ	0xFFD
 18035                           pclatu	equ	0xFFB
 18036                           pclath	equ	0xFFA
 18037                           tblptru	equ	0xFF8
 18038                           tblptrh	equ	0xFF7
 18039                           tblptrl	equ	0xFF6
 18040                           tablat	equ	0xFF5
 18041                           prodh	equ	0xFF4
 18042                           prodl	equ	0xFF3
 18043                           intcon	equ	0xFF2
 18044                           intcon2	equ	0xFF1
 18045                           intcon3	equ	0xFF0
 18046                           postinc0	equ	0xFEE
 18047                           fsr0h	equ	0xFEA
 18048                           fsr0l	equ	0xFE9
 18049                           wreg	equ	0xFE8
 18050                           fsr1h	equ	0xFE2
 18051                           fsr1l	equ	0xFE1
 18052                           indf2	equ	0xFDF
 18053                           postinc2	equ	0xFDE
 18054                           postdec2	equ	0xFDD
 18055                           fsr2h	equ	0xFDA
 18056                           fsr2l	equ	0xFD9
 18057                           status	equ	0xFD8
 18058                           
 18059 ;; *************** function _TMR0_Reload *****************
 18060 ;; Defined at:
 18061 ;;		line 79 in file "mcc_generated_files/tmr0.c"
 18062 ;; Parameters:    Size  Location     Type
 18063 ;;		None
 18064 ;; Auto vars:     Size  Location     Type
 18065 ;;		None
 18066 ;; Return value:  Size  Location     Type
 18067 ;;                  1    wreg      void 
 18068 ;; Registers used:
 18069 ;;		wreg, status,2
 18070 ;; Tracked objects:
 18071 ;;		On entry : 0/0
 18072 ;;		On exit  : 0/0
 18073 ;;		Unchanged: 0/0
 18074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18075 ;;      Params:         0       0       0       0       0       0       0
 18076 ;;      Locals:         0       0       0       0       0       0       0
 18077 ;;      Temps:          0       0       0       0       0       0       0
 18078 ;;      Totals:         0       0       0       0       0       0       0
 18079 ;;Total ram usage:        0 bytes
 18080 ;; Hardware stack levels used:    1
 18081 ;; This function calls:
 18082 ;;		Nothing
 18083 ;; This function is called by:
 18084 ;;		_INT0_ISR
 18085 ;; This function uses a non-reentrant model
 18086 ;;
 18087                           
 18088                           	psect	text72
 18089  005B28                     __ptext72:
 18090                           	opt stack 0
 18091  005B28                     _TMR0_Reload:
 18092                           	opt stack 23
 18093                           
 18094                           ;tmr0.c: 82: TMR0H = timer0ReloadVal >> 8;
 18095                           
 18096                           ;incstack = 0
 18097  005B28  505D               	movf	_timer0ReloadVal+1,w,c	;volatile
 18098  005B2A  6ED7               	movwf	4055,c	;volatile
 18099                           
 18100                           ;tmr0.c: 83: TMR0L = (uint8_t) timer0ReloadVal;
 18101  005B2C  C05C  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 18102  005B30  0012               	return		;funcret
 18103  005B32                     __end_of_TMR0_Reload:
 18104                           	opt stack 0
 18105                           tosu	equ	0xFFF
 18106                           tosh	equ	0xFFE
 18107                           tosl	equ	0xFFD
 18108                           pclatu	equ	0xFFB
 18109                           pclath	equ	0xFFA
 18110                           tblptru	equ	0xFF8
 18111                           tblptrh	equ	0xFF7
 18112                           tblptrl	equ	0xFF6
 18113                           tablat	equ	0xFF5
 18114                           prodh	equ	0xFF4
 18115                           prodl	equ	0xFF3
 18116                           intcon	equ	0xFF2
 18117                           intcon2	equ	0xFF1
 18118                           intcon3	equ	0xFF0
 18119                           postinc0	equ	0xFEE
 18120                           fsr0h	equ	0xFEA
 18121                           fsr0l	equ	0xFE9
 18122                           wreg	equ	0xFE8
 18123                           fsr1h	equ	0xFE2
 18124                           fsr1l	equ	0xFE1
 18125                           indf2	equ	0xFDF
 18126                           postinc2	equ	0xFDE
 18127                           postdec2	equ	0xFDD
 18128                           fsr2h	equ	0xFDA
 18129                           fsr2l	equ	0xFD9
 18130                           status	equ	0xFD8
 18131                           
 18132 ;; *************** function _TMR0_ReadTimer *****************
 18133 ;; Defined at:
 18134 ;;		line 57 in file "mcc_generated_files/tmr0.c"
 18135 ;; Parameters:    Size  Location     Type
 18136 ;;		None
 18137 ;; Auto vars:     Size  Location     Type
 18138 ;;  readVal         2    6[COMRAM] unsigned int 
 18139 ;;  readValHigh     1    9[COMRAM] unsigned char 
 18140 ;;  readValLow      1    8[COMRAM] unsigned char 
 18141 ;; Return value:  Size  Location     Type
 18142 ;;                  2    0[COMRAM] unsigned int 
 18143 ;; Registers used:
 18144 ;;		wreg, status,2, status,0
 18145 ;; Tracked objects:
 18146 ;;		On entry : 0/0
 18147 ;;		On exit  : 0/0
 18148 ;;		Unchanged: 0/0
 18149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18150 ;;      Params:         2       0       0       0       0       0       0
 18151 ;;      Locals:         4       0       0       0       0       0       0
 18152 ;;      Temps:          4       0       0       0       0       0       0
 18153 ;;      Totals:        10       0       0       0       0       0       0
 18154 ;;Total ram usage:       10 bytes
 18155 ;; Hardware stack levels used:    1
 18156 ;; This function calls:
 18157 ;;		Nothing
 18158 ;; This function is called by:
 18159 ;;		_INT0_ISR
 18160 ;; This function uses a non-reentrant model
 18161 ;;
 18162                           
 18163                           	psect	text73
 18164  0057AA                     __ptext73:
 18165                           	opt stack 0
 18166  0057AA                     _TMR0_ReadTimer:
 18167                           	opt stack 23
 18168                           
 18169                           ;tmr0.c: 59: uint16_t readVal;
 18170                           ;tmr0.c: 60: uint8_t readValLow;
 18171                           ;tmr0.c: 61: uint8_t readValHigh;
 18172                           ;tmr0.c: 63: readValLow = TMR0L;
 18173                           
 18174                           ;incstack = 0
 18175  0057AA  CFD6 F009          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
 18176                           
 18177                           ;tmr0.c: 64: readValHigh = TMR0H;
 18178  0057AE  CFD7 F00A          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
 18179                           
 18180                           ;tmr0.c: 67: readVal = ((uint16_t)readValHigh << 8) + readValLow - (timer0ReloadVal);
 18181  0057B2  C05C  F003         	movff	_timer0ReloadVal,??_TMR0_ReadTimer	;volatile
 18182  0057B6  C05D  F004         	movff	_timer0ReloadVal+1,??_TMR0_ReadTimer+1	;volatile
 18183  0057BA  1E03               	comf	??_TMR0_ReadTimer,f,c
 18184  0057BC  1E04               	comf	??_TMR0_ReadTimer+1,f,c
 18185  0057BE  4A03               	infsnz	??_TMR0_ReadTimer,f,c
 18186  0057C0  2A04               	incf	??_TMR0_ReadTimer+1,f,c
 18187  0057C2  5009               	movf	TMR0_ReadTimer@readValLow,w,c
 18188  0057C4  C00A  F005         	movff	TMR0_ReadTimer@readValHigh,??_TMR0_ReadTimer+2
 18189  0057C8  6A06               	clrf	(??_TMR0_ReadTimer+3)& (0+255),c
 18190  0057CA  C005  F006         	movff	??_TMR0_ReadTimer+2,??_TMR0_ReadTimer+3
 18191  0057CE  6A05               	clrf	??_TMR0_ReadTimer+2,c
 18192  0057D0  2605               	addwf	??_TMR0_ReadTimer+2,f,c
 18193  0057D2  0E00               	movlw	0
 18194  0057D4  2206               	addwfc	??_TMR0_ReadTimer+3,f,c
 18195  0057D6  5003               	movf	??_TMR0_ReadTimer,w,c
 18196  0057D8  2405               	addwf	??_TMR0_ReadTimer+2,w,c
 18197  0057DA  6E07               	movwf	TMR0_ReadTimer@readVal,c
 18198  0057DC  5004               	movf	??_TMR0_ReadTimer+1,w,c
 18199  0057DE  2006               	addwfc	??_TMR0_ReadTimer+3,w,c
 18200  0057E0  6E08               	movwf	TMR0_ReadTimer@readVal+1,c
 18201                           
 18202                           ;tmr0.c: 69: return readVal;
 18203  0057E2  C007  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
 18204  0057E6  C008  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
 18205  0057EA  0012               	return	
 18206  0057EC                     __end_of_TMR0_ReadTimer:
 18207                           	opt stack 0
 18208                           tosu	equ	0xFFF
 18209                           tosh	equ	0xFFE
 18210                           tosl	equ	0xFFD
 18211                           pclatu	equ	0xFFB
 18212                           pclath	equ	0xFFA
 18213                           tblptru	equ	0xFF8
 18214                           tblptrh	equ	0xFF7
 18215                           tblptrl	equ	0xFF6
 18216                           tablat	equ	0xFF5
 18217                           prodh	equ	0xFF4
 18218                           prodl	equ	0xFF3
 18219                           intcon	equ	0xFF2
 18220                           intcon2	equ	0xFF1
 18221                           intcon3	equ	0xFF0
 18222                           postinc0	equ	0xFEE
 18223                           fsr0h	equ	0xFEA
 18224                           fsr0l	equ	0xFE9
 18225                           wreg	equ	0xFE8
 18226                           fsr1h	equ	0xFE2
 18227                           fsr1l	equ	0xFE1
 18228                           indf2	equ	0xFDF
 18229                           postinc2	equ	0xFDE
 18230                           postdec2	equ	0xFDD
 18231                           fsr2h	equ	0xFDA
 18232                           fsr2l	equ	0xFD9
 18233                           status	equ	0xFD8
 18234                           tosu	equ	0xFFF
 18235                           tosh	equ	0xFFE
 18236                           tosl	equ	0xFFD
 18237                           pclatu	equ	0xFFB
 18238                           pclath	equ	0xFFA
 18239                           tblptru	equ	0xFF8
 18240                           tblptrh	equ	0xFF7
 18241                           tblptrl	equ	0xFF6
 18242                           tablat	equ	0xFF5
 18243                           prodh	equ	0xFF4
 18244                           prodl	equ	0xFF3
 18245                           intcon	equ	0xFF2
 18246                           intcon2	equ	0xFF1
 18247                           intcon3	equ	0xFF0
 18248                           postinc0	equ	0xFEE
 18249                           fsr0h	equ	0xFEA
 18250                           fsr0l	equ	0xFE9
 18251                           wreg	equ	0xFE8
 18252                           fsr1h	equ	0xFE2
 18253                           fsr1l	equ	0xFE1
 18254                           indf2	equ	0xFDF
 18255                           postinc2	equ	0xFDE
 18256                           postdec2	equ	0xFDD
 18257                           fsr2h	equ	0xFDA
 18258                           fsr2l	equ	0xFD9
 18259                           status	equ	0xFD8
 18260                           
 18261                           	psect	text74
 18262  000000                     __ptext74:
 18263                           	opt stack 0
 18264                           tosu	equ	0xFFF
 18265                           tosh	equ	0xFFE
 18266                           tosl	equ	0xFFD
 18267                           pclatu	equ	0xFFB
 18268                           pclath	equ	0xFFA
 18269                           tblptru	equ	0xFF8
 18270                           tblptrh	equ	0xFF7
 18271                           tblptrl	equ	0xFF6
 18272                           tablat	equ	0xFF5
 18273                           prodh	equ	0xFF4
 18274                           prodl	equ	0xFF3
 18275                           intcon	equ	0xFF2
 18276                           intcon2	equ	0xFF1
 18277                           intcon3	equ	0xFF0
 18278                           postinc0	equ	0xFEE
 18279                           fsr0h	equ	0xFEA
 18280                           fsr0l	equ	0xFE9
 18281                           wreg	equ	0xFE8
 18282                           fsr1h	equ	0xFE2
 18283                           fsr1l	equ	0xFE1
 18284                           indf2	equ	0xFDF
 18285                           postinc2	equ	0xFDE
 18286                           postdec2	equ	0xFDD
 18287                           fsr2h	equ	0xFDA
 18288                           fsr2l	equ	0xFD9
 18289                           status	equ	0xFD8
 18290                           
 18291                           	psect	rparam
 18292  0000                     tosu	equ	0xFFF
 18293                           tosh	equ	0xFFE
 18294                           tosl	equ	0xFFD
 18295                           pclatu	equ	0xFFB
 18296                           pclath	equ	0xFFA
 18297                           tblptru	equ	0xFF8
 18298                           tblptrh	equ	0xFF7
 18299                           tblptrl	equ	0xFF6
 18300                           tablat	equ	0xFF5
 18301                           prodh	equ	0xFF4
 18302                           prodl	equ	0xFF3
 18303                           intcon	equ	0xFF2
 18304                           intcon2	equ	0xFF1
 18305                           intcon3	equ	0xFF0
 18306                           postinc0	equ	0xFEE
 18307                           fsr0h	equ	0xFEA
 18308                           fsr0l	equ	0xFE9
 18309                           wreg	equ	0xFE8
 18310                           fsr1h	equ	0xFE2
 18311                           fsr1l	equ	0xFE1
 18312                           indf2	equ	0xFDF
 18313                           postinc2	equ	0xFDE
 18314                           postdec2	equ	0xFDD
 18315                           fsr2h	equ	0xFDA
 18316                           fsr2l	equ	0xFD9
 18317                           status	equ	0xFD8
 18318                           
 18319                           	psect	temp
 18320  00005F                     btemp:
 18321                           	opt stack 0
 18322  00005F                     	ds	1
 18323  0000                     int$flags	set	btemp
 18324                           tosu	equ	0xFFF
 18325                           tosh	equ	0xFFE
 18326                           tosl	equ	0xFFD
 18327                           pclatu	equ	0xFFB
 18328                           pclath	equ	0xFFA
 18329                           tblptru	equ	0xFF8
 18330                           tblptrh	equ	0xFF7
 18331                           tblptrl	equ	0xFF6
 18332                           tablat	equ	0xFF5
 18333                           prodh	equ	0xFF4
 18334                           prodl	equ	0xFF3
 18335                           intcon	equ	0xFF2
 18336                           intcon2	equ	0xFF1
 18337                           intcon3	equ	0xFF0
 18338                           postinc0	equ	0xFEE
 18339                           fsr0h	equ	0xFEA
 18340                           fsr0l	equ	0xFE9
 18341                           wreg	equ	0xFE8
 18342                           fsr1h	equ	0xFE2
 18343                           fsr1l	equ	0xFE1
 18344                           indf2	equ	0xFDF
 18345                           postinc2	equ	0xFDE
 18346                           postdec2	equ	0xFDD
 18347                           fsr2h	equ	0xFDA
 18348                           fsr2l	equ	0xFD9
 18349                           status	equ	0xFD8


Data Sizes:
    Strings     92
    Constant    143
    Data        3
    BSS         23
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      94
    BANK0           160     87     114
    BANK1           256     86      86
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[11]), STR_2(CODE[11]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 48
		 -> STR_1(CODE[48]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> i2_putch(), putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> lcd_sendInt@displayString(COMRAM[10]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), printf@ap(COMRAM[2]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 48
		 -> STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[11]), STR_2(CODE[11]), 
		 -> STR_1(CODE[48]), 

    S961__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    S961__prbuf$ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 5
		 -> sprintf@pb(BANK1[4]), printf@pb(COMRAM[4]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 10
		 -> lcd_sendUInt@displayString(COMRAM[10]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> lcd_sendInt@displayString(COMRAM[10]), 

    lcd_sendString@a	PTR const unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), lcd_sendUInt@displayString(COMRAM[10]), lcd_sendInt@displayString(COMRAM[10]), main@cap_string(BANK1[16]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_TMR0_DefaultInterruptHandler
    _INT0_ISR->_printf
    i2___ftdiv->i2___ftmul
    _printf->i2__doprnt
    i2__doprnt->i2___fttol
    i2_scale->i2___ftmul
    i2_putch->i2_EUSART1_Write
    i2_fround->i2___ftmul
    i2___wmul->i2___awdiv
    i2___ftmul->i2___ftadd
    i2___awdiv->i2___awmod
    i2___lltoft->i2___ftpack
    i2___llmod->i2___lldiv
    i2___fttol->i2_scale
    i2___ftsub->i2___ftadd
    i2___ftadd->i2___wmul
    ___lwtoft->i2___ftpack

Critical Paths under _main in BANK0

    __doprnt->___ftadd
    _scale->___ftmul
    _putch->_EUSART1_Write
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _lcd_sendString->_lcd_sendChar
    _lcd_sendChar->__lcd_Port
    _lcd_init->_lcd_sendCommand
    _lcd_clear->_lcd_sendCommand
    _lcd_sendCommand->__lcd_Port
    ___ftdiv->___ftpack
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INT0_ISR->_printf
    _printf->i2__doprnt

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->__doprnt
    __doprnt->___ftsub
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   77752
                                             70 BANK1     16    16      0
                  _SYSTEM_Initialize
                            ___ftdiv
                             ___ftge
                          _lcd_clear
                           _lcd_init
                     _lcd_sendString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             13     6      7   70865
                                             57 BANK1     13     6      7
                            ___ftdiv (ARG)
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             41    35      6   66897
                                             22 BANK1     35    29      6
                   Absolute function *
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch *
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               10     7      3   12970
                                             81 BANK0      3     0      3
                                              0 BANK1      4     4      0
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      44
                                             47 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      22
                                             46 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                             46 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              13    10      3   12691
                                             81 BANK0      3     0      3
                                              0 BANK1      7     7      0
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    3094
                                             60 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    5375
                                             66 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             46 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             52 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         15     9      6     431
                                             46 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          12     6      6     591
                                             46 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2655
                                             54 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     773
                                             59 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     750
                                             46 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     716
                                              4 BANK1     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    4628
                                             16 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    4150
                                             84 BANK0      3     3      0
                                              7 BANK1      9     3      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     160
                                             46 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1160
                                             46 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_sendString                                       4     2      2     588
                                             50 BANK0      4     2      2
                       _lcd_sendChar
 ---------------------------------------------------------------------------------
 (2) _lcd_sendChar                                         3     3      0     178
                                             47 BANK0      3     3      0
                          __lcd_Port
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     198
                                             49 BANK0      1     1      0
                          __lcd_Port
                    _lcd_sendCommand
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0     110
                    _lcd_sendCommand
 ---------------------------------------------------------------------------------
 (2) _lcd_sendCommand                                      2     2      0     110
                                             47 BANK0      2     2      0
                          __lcd_Port
 ---------------------------------------------------------------------------------
 (3) __lcd_Port                                            1     1      0      88
                                             46 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    3345
                                             54 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2419
                                             46 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     258
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      86
                                             48 BANK0      2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      86
                                             46 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     172
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      86
                                             46 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      86
                                             46 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                          14    14      0   43317
                                             32 BANK0     14    14      0
                           _INT0_ISR
                           _INT1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _INT1_ISR                                            10    10      0       0
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (7) _INT0_ISR                                             0     0      0   43317
                     _TMR0_ReadTimer
                        _TMR0_Reload
                     _TMR0_StopTimer
                           ___lwtoft
                             _printf
                  i2_TMR0_StartTimer
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (8) i2___ftdiv                                           15     9      6     953
                                             47 COMRAM    15     9      6
                           ___lwtoft (ARG)
                          i2___ftadd (ARG)
                          i2___ftmul (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) i2_TMR0_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _printf                                              15     6      9   37099
                                             81 COMRAM     6     6      0
                                             23 BANK0      9     0      9
                          i2__doprnt
 ---------------------------------------------------------------------------------
 (9) i2__doprnt                                           41    35      6   34081
                                             69 COMRAM    12     6      6
                                              0 BANK0     23    23      0
                   Absolute function *
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch *
                            i2_scale
 ---------------------------------------------------------------------------------
 (10) i2_scale                                            13    10      3    4945
                                             47 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (10) i2_putch                                             1     1      0      44
                                              1 COMRAM     1     1      0
                    i2_EUSART1_Write
 ---------------------------------------------------------------------------------
 (11) i2_EUSART1_Write                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) i2_isdigit                                           3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (10) i2_fround                                           16    13      3    4747
                                             47 COMRAM    10     7      3
                          i2___awdiv
                          i2___awmod
                          i2___ftadd (ARG)
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (8) i2___wmul                                             6     2      4    1145
                                             14 COMRAM     6     2      4
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (8) i2___ftmul                                           15     9      6    1727
                                             32 COMRAM    15     9      6
                           ___lwtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___ftadd (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___awmod                                           6     2      4     764
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (11) i2___awdiv                                           8     4      4     820
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (10) i2__tdiv_to_l_                                      15     9      6     355
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (10) i2__div_to_l_                                       12     6      6     481
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (10) i2___lltoft                                          9     5      4     716
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (10) i2___llmod                                           9     1      8     367
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___lldiv                                          13     5      8     318
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (10) i2___fttol                                          15    11      4     330
                                             54 COMRAM    15    11      4
                          i2___ftmul (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftsub                                           6     0      6    1736
                                             32 COMRAM     6     0      6
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (8) i2___ftadd                                           12     6      6    1617
                                             20 COMRAM    12     6      6
                           ___lwtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftneg                                           3     0      3      71
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (10) i2___ftge                                            9     3      6     292
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (8) ___lwtoft                                             3     0      3     707
                                              8 COMRAM     3     0      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (9) i2___ftpack                                           8     3      5     621
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (8) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ReadTimer                                      10     8      2      69
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
   ___ftdiv
     ___ftpack
   ___ftge
   _lcd_clear
     _lcd_sendCommand
       __lcd_Port
   _lcd_init
     __lcd_Port
     _lcd_sendCommand
       __lcd_Port
   _lcd_sendString
     _lcd_sendChar
       __lcd_Port
   _sprintf
     ___ftdiv (ARG)
       ___ftpack
     __doprnt (ARG)
       Absolute function(Fake) *
       ___awdiv *
         ___awmod (ARG)
       ___ftadd *
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge *
       ___ftmul *
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg *
       ___ftsub *
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol *
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv *
       ___llmod *
         ___lldiv (ARG)
       ___lltoft *
         ___ftpack
       ___wmul *
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_ *
       __tdiv_to_l_ *
       _fround *
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit *
       _putch *
         _EUSART1_Write
       _scale *
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _INT0_ISR
     _TMR0_ReadTimer
     _TMR0_Reload
     _TMR0_StopTimer
     ___lwtoft
       i2___ftpack
     _printf
       i2__doprnt
         Absolute function(Fake) *
         i2___awdiv *
           i2___awmod (ARG)
         i2___ftadd *
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftge *
         i2___ftmul *
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftadd (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg *
         i2___ftsub *
           i2___ftadd
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___lltoft (ARG)
             i2___ftpack
         i2___fttol *
           i2___ftmul (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftadd (ARG)
                 ___lwtoft (ARG)
                   i2___ftpack
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lldiv *
         i2___llmod *
           i2___lldiv (ARG)
         i2___lltoft *
           i2___ftpack
         i2___wmul *
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2__div_to_l_ *
         i2__tdiv_to_l_ *
         i2_fround *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftadd (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2_isdigit *
         i2_putch *
           i2_EUSART1_Write
         i2_scale *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
     i2_TMR0_StartTimer
     i2___ftadd
       ___lwtoft (ARG)
         i2___ftpack
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
       i2___ftpack (ARG)
       i2___ftpack (ARG)
       i2___wmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
     i2___ftdiv
       ___lwtoft (ARG)
         i2___ftpack
       i2___ftadd (ARG)
         ___lwtoft (ARG)
           i2___ftpack
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftmul (ARG)
         ___lwtoft (ARG)
           i2___ftpack
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftadd (ARG)
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftpack (ARG)
       i2___wmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
     i2___ftmul
       ___lwtoft (ARG)
         i2___ftpack
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
       i2___ftadd (ARG)
         ___lwtoft (ARG)
           i2___ftpack
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftpack (ARG)
       i2___wmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
     i2___wmul
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
   _INT1_ISR
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     56      56       6       33.6%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     57      72       4       71.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      5E       1      100.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     126       9        0.0%
DATA                 0      0     126      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat Jan 21 01:02:36 2017

                           ?_lcd_sendChar 0001                              ___awdiv@sign 0099  
                     ___wmul@multiplicand 009E                                i2___ftpack 5046  
                         _timer0ReloadVal 005C                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                              ___ftadd@exp1 010F  
                            ___ftadd@exp2 010E                                i2___lltoft 5592  
                             __CFG_LVP$ON 000000                              ___ftadd@sign 010D  
                         ?_lcd_sendString 0092                          ?_lcd_sendCommand 0001  
                                     l226 5ACE                                       l403 139C  
                                     l332 5870                                       l334 587C  
                                     l336 5888                                       l338 5894  
                                     l258 3AE6                                       l470 142E  
                                     l455 10F2                                       l803 37E6  
                                     l724 42F2                                       l821 40A6  
                                     l814 4578                                       l822 40EA  
                                     l756 4A24                                       l828 416A  
                                     l853 58F0                                       l925 5034  
                                     l783 36BE                                       l935 521E  
                                     l785 36E6                                       l794 37BC  
                                     l779 3684                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                ??_INT0_SetInterruptHandler 0090  
                            ___awmod@sign 0093                                       tosl 000FFD  
                                     wreg 000FE8                              ___ftdiv@cntr 009F  
                            ___ftdiv@sign 00A4                                      l4421 588A  
                                    l4413 5872                                      l6007 385E  
                                    l4503 4018                                      l6111 5110  
                                    l6023 4378                                      l4417 587E  
                                    l6121 5140                                      l6041 43E4  
                                    l6017 433E                                      l6203 56AE  
                                    l4611 42E8                                      l4603 42BC  
                                    l6123 5146                                      l6131 5178  
                                    l6115 5120                                      l6051 4422  
                                    l6213 45E8                                      l4509 4052  
                                    l6037 43C6                                      l6231 467A  
                                    l4551 4160                                      l4543 4134  
                                    l6135 518C                                      l6127 516A  
                                    l6119 5134                                      l6047 4404  
                                    l7105 44D6                                      l4625 4E44  
                                    l6241 46AA                                      l4609 42D8  
                                    l6081 4F28                                      l6073 4EFE  
                                    l4635 4EC8                                      l6243 46BA  
                                    l6235 468E                                      l4707 5022  
                                    l4723 520C                                      l4715 51B2  
                                    l4539 4120                                      l6091 4F5E  
                                    l6083 4F2E                                      l6067 4EE8  
                                    l6171 2C44                                      l7125 4536  
                                    l4629 4E84                                      l6245 46C4  
                                    l4717 51C2                                      l4565 41C8  
                                    l4549 4150                                      l6157 35D4  
                                    l6149 34F0                                      l4493 59AC  
                                    l6181 2D30                                      l4719 51C8  
                                    l6255 53CE                                      l4559 41A2  
                                    l6079 4F1C                                      l6095 4F6C  
                                    l6249 46E0                                      l6257 53DE  
                                    l6177 2D0A                                      l4587 4270  
                                    l4579 421C                                      l6099 4F80  
                                    l6195 2F5A                                      l6189 2E94  
                                    l5911 49B8                                      l5903 4966  
                                    l4695 4FB8                                      l4599 42A8  
                                    l5745 56E4                                      l4697 4FC8  
                                    l5931 4A4A                                      l5915 49D8  
                                    l5907 497A                                      l7099 449C  
                                    l4699 4FCE                                      l5925 4A2E  
                                    l5917 4A08                                      l5909 4988  
                                    l5749 5704                                      l5919 4A16  
                                    l5961 36DC                                      l9401 08B6  
                                    l5971 371E                                      l5955 36CC  
                                    l5981 3768                                      l5949 3692  
                                    l9501 0CBE                                      l9421 0936  
                                    l9405 08C6                                      l9413 08D8  
                                    l5991 37B0                                      l5983 3774  
                                    l9415 091A                                      l9407 08CC  
                                    l5977 374C                                      l9521 0DC6  
                                    l9505 0D0E                                      l9409 08D2  
                                    l5979 375A                                      l9611 1310  
                                    l9531 0E36                                      l9371 0782  
                                    l5997 3810                                      l5989 37A2  
                                    l9701 16AC                                      l9621 1386  
                                    l9613 131E                                      l9541 0EB4  
                                    l9533 0E4C                                      l9525 0E04  
                                    l9517 0D9A                                      l9509 0D36  
                                    l9461 0B20                                      l9453 0AAC  
                                    l9445 0A3C                                      l9429 098A  
                                    l9381 07BC                                      l9365 073E  
                                    l9711 1720                                      l9631 140E  
                                    l9623 138E                                      l9607 1294  
                                    l9551 0F2E                                      l9543 0EBC  
                                    l9463 0B36                                      l9375 078C  
                                    l9359 06F2                                      l9713 172A  
                                    l9641 149C                                      l9617 135C  
                                    l9609 12C2                                      l9553 0F4A  
                                    l9545 0ED0                                      l9537 0E8A  
                                    l9529 0E2E                                      l9473 0BAE  
                                    l9457 0ADA                                      l9369 076C  
                                    l9731 1810                                      l9723 179E  
                                    l9715 1736                                      l9707 16F6  
                                    l9571 108E                                      l9563 1020  
                                    l9555 0F5A                                      l9483 0C0C  
                                    l9459 0AF0                                      l9395 085A  
                                    l9741 18F0                                      l9725 17B2  
                                    l9661 150E                                      l9629 13DA  
                                    l9565 1042                                      l9469 0B80  
                                    l9389 0832                                      l9743 190C  
                                    l9735 182E                                      l9719 1774  
                                    l9647 14C2                                      l9639 1466  
                                    l9591 1152                                      l9583 10F6  
                                    l9575 10B8                                      l9567 1050  
                                    l9487 0C72                                      l9399 08A0  
                                    l9823 3B5A                                      l9745 191A  
                                    l9681 15D2                                      l9665 1536  
                                    l9649 14C8                                      l9577 10C0  
                                    l9489 0C78                                      l9683 15DC  
                                    l9675 159A                                      l9595 117C  
                                    l9579 10D4                                      l9747 1930  
                                    l9835 3C6E                                      l9669 1566  
                                    l9749 194E                                      l9829 3BF6  
                   __size_ofi2__div_to_l_ 0128                                      l9687 1614  
                                    l9599 11CE                                      STR_1 0690  
                                    STR_2 06E1                                      l9697 1682  
                                    l9689 161E                                      STR_3 06CB  
                                    STR_4 06D6                                      STR_5 06C0  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      u5701 402E  
                                    u8211 3632                                      u8221 3650  
                                    u5681 3FF4                                      u8421 431A  
                                    u8441 4354                                      u8700 460E  
                                    u8705 4604                                      u8681 45C4  
                                    _WPUB 000F61                             _EUSART1_Write 5ACA  
                                    _main 3ACA                               i2__doprnt@c 0076  
                            ___ftpack@arg 008E                               i2__doprnt@f 0048  
                            ___ftpack@exp 0091                           _TMR0_StartTimer 5B32  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr0l 000FE9                                      fsr2h 000FDA  
                                    fsr1l 000FE1                                      indf2 000FDF  
                                    fsr2l 000FD9                                      btemp 005F  
                           __CFG_BORV$190 000000                              i2___ftadd@f1 0015  
                            i2___ftadd@f2 0018                                      pclat 000FFA  
                            i2___ftge@ff1 0001                              i2___ftge@ff2 0004  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00A0                             __CFG_IESO$OFF 000000  
                            i2___ftdiv@f1 0030                              i2___ftdiv@f2 0033  
                            i2___ftdiv@f3 003A                           __end_ofi2_scale 3370  
                            i2___ftneg@f1 0001                           __end_ofi2_putch 5B28  
                          ??_lcd_sendChar 008F                              ___ftmul@cntr 00AF  
                            i2___ftmul@f1 0021                              i2___ftmul@f2 0024  
                            ___param_bank 000010                              ___ftmul@sign 00B0  
                            i2___ftsub@f1 0021                              i2___ftsub@f2 0024  
                            i2___fttol@f1 0037                  __size_ofi2_EUSART1_Write 000C  
                            ___fttol@exp1 0112                              i2___lltoft@c 0009  
                            ___fttol@lval 010E                   __end_of_TMR0_Initialize 57AA  
                        __end_of_INT0_ISR 4E04                          __end_of_INT1_ISR 3E32  
          ??_TMR0_DefaultInterruptHandler 0001            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 5AF4                                     ?_main 0001  
                         __end_of___awdiv 4F8A                           __end_of___ftadd 3884  
                         __end_of___awmod 5196                 TMR0_ReadTimer@readValHigh 000A  
                         __end_of___ftdiv 45AE                           __end_of___ftneg 58FE  
                         __end_of___lldiv 5046                           __end_of___ftmul 4462  
                                   _T0CON 000FD5                                     u10611 44B2  
                         ___awdiv@divisor 0096                           __end_of___llmod 5230  
                         __end_of___ftsub 56D8                           __end_of___fttol 46F2  
                                   u10591 4478                                     u16020 10EA  
                                   u16008 1078                                     u16108 1346  
                                   u16058 113C                                     u16318 166C  
                                   u16078 127A                                     u16428 17FA  
                                   u16348 16E0                            __CFG_DEBUG$OFF 000000  
                                   u16448 18D8                                     u15680 09D0  
                                   u16627 5748                                     u16388 175E  
                                   u16637 575C                                     u15685 09C4  
                                   u15918 0E74                                     u15598 0726  
                                   u16647 5450                                     u16657 5468  
                                   u16667 5480                                     u15868 0D84  
                                   u16677 59CE                                     u15958 0F18  
                                   u15888 0DEE                                     u15978 1006  
                                   i2l111 004E                                     i2l113 005A  
                                   i2l117 0064                                     i2l226 5AF6  
                                   i2l403 255E                                     i2l470 25F0  
                                   i2l455 22C2                                     i2l803 3F6C  
                                   i2l724 493A                                     i2l821 4784  
                                   i2l822 47AC                                     i2l814 4CF4  
                                   i2l756 50D4                                     i2l828 4812  
                                   i2l853 5A18                                     i2l925 53B4  
                                   i2l783 3EA0                                     i2l935 5580  
                                   i2l794 3F50                                     i2l779 3E76  
                         ___awdiv@counter 0098                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                              i2__div_to_l_ 4824  
                         __end_of__doprnt 195A                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
       __size_of_TMR0_SetInterruptHandler 000A                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
               ?_TMR0_SetInterruptHandler 008E                             __CFG_WRT3$OFF 000000  
                            ___lltoft@exp 009E                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                        __end_of_TMR0_ISR 595E                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                                i2isdigit@c 0003  
                        __end_of_RSET_BIT 0690                           __end_of_dpowers 0629  
                              i2scale@scl 0036                              i2__doprnt@ap 004A  
                            i2__doprnt@pb 0046                                     _scale 2AD2  
                                   _range 005E                           __end_of_isdigit 59B6  
                      __CFG_MCLRE$EXTMCLR 000000                             ___ftpack@sign 0092  
                                   _putch 5AB6                                     _units 00D0  
                _INT1_SetInterruptHandler 5B0A                            ?_EUSART1_Write 0001  
                                   pclath 000FFA                                     tablat 000FF5  
                        __end_ofi2___ftge 52C0                          __end_ofi2___wmul 5A02  
                                   status 000FD8                           __end_of_sprintf 5640  
                          __CFG_HFOFST$ON 000000                            __CFG_FOSC$HSMP 000000  
                        __end_ofi2_fround 3ACA                             i2___ftdiv@exp 003D  
                      __size_ofi2___awdiv 0084                        __size_ofi2___ftadd 01AC  
                      __size_ofi2___awmod 0070                            __CFG_PBADEN$ON 000000  
                      __size_ofi2___ftdiv 00E6                        __size_ofi2___ftneg 0024  
                      __size_ofi2___lldiv 0082                        __size_ofi2___ftmul 00F4  
                      __size_ofi2___llmod 0066                        __size_ofi2___ftsub 0040  
                      __size_ofi2___fttol 00F4                        __size_ofi2__doprnt 1178  
                         __initialization 5640                         i2___lldiv@divisor 0005  
              __end_of_EUSART1_Initialize 5AB6                              __end_of_main 3C80  
                       i2___lldiv@counter 000D                             i2___ftmul@exp 002A  
                      __size_ofi2_isdigit 001E               ?_INTERRUPT_InterruptManager 0001  
                             ?i2___ftpack 0001                             lcd_sendChar@a 0091  
                           lcd_sendChar@y 0090                               ?i2___lltoft 0009  
                                  ??_main 00B7                             ___fttol@sign1 010D  
                           __activetblptr 000002                      __size_of__tdiv_to_l_ 019E  
                 __end_of_TMR0_StartTimer 5B36                          ___llmod@dividend 009B  
                                  ?_scale 00B1                          ___awdiv@dividend 0094  
                                  _ANSELA 000F38                                    ?_putch 0001  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                        __end_of___ftpack 4A58                          __end_of___lltoft 5442  
                                  _R1_BIT 0686                                    i2l4105 3A8A  
                                  i2l4203 4928                                    i2l3331 3C8A  
                                  i2l4205 4934                                    i2l4213 471E  
                                  i2l4125 3158                                    i2l3333 3C8E  
                          __CFG_WDTEN$OFF 000000                                    i2l4143 334C  
                                  i2l4119 30B4                                    i2l3601 5056  
                                  i2l4321 4BEE                                    i2l4153 4842  
                                  i2l4137 32A8                                    i2l4129 317C  
                                  i2l4331 4C18                                    i2l4219 474A  
                                  i2l3613 50A2                                    i2l3605 5064  
                                  i2l4317 4BDE                                    i2l4181 48D2  
                                  i2l4173 48A2                                    i2l4261 480C  
                                  i2l4253 47E8                                    i2l3701 5302  
                                  i2l3615 50C0                                    i2l3607 506E  
                                  i2l4271 5290                                    i2l4335 4C2E  
                                  i2l4327 4C06                                    i2l4159 4860  
                                  i2l3711 5322                                    i2l3703 5306  
                                  i2l3617 50CA                                    i2l3609 508C  
                                  i2l3801 3F1C                                    i2l4329 4C12  
                                  i2l4361 5376                                    i2l4193 4900  
                                  i2l4249 47D8                                    i2l4097 39CA  
                                  i2l4267 5260                                    i2l4259 4800  
                                  i2l3715 532C                                    i2l3731 54D0  
                                  i2l4347 5A7E                                    i2l4277 52BC  
                                  i2l4357 5366                                    i2l4381 554E  
                                  i2l4197 4910                                    i2l3741 54F2  
                                  i2l3815 3F88                                    i2l3807 3F3E  
                                  i2l4359 5372                                    i2l4391 5598  
                                  i2l3719 533A                                    i2l3743 54F6  
                                  i2l3751 5514                                    i2l3735 54DC  
                                  i2l3825 3FB8                                    i2l3809 3F48  
                                  i2l4289 5802                                    i2l4369 53A6  
                                  i2l4385 5572                                    i2l4377 553E  
                                  i2l4393 55A4                                    i2l3841 4AA8  
                                  i2l4299 4B78                                    i2l4379 554A  
                                  i2l3755 5522                                    i2l3747 550A  
                                  i2l3739 54EA                                    i2l3835 4A80  
                                  i2l3773 3EAE                                    i2l3693 52E4  
                                  i2l3767 3E84                                    i2l3687 52D4  
                                  i2l3855 4ADA                                    i2l3865 4B02  
                                  i2l3795 3F00                                    i2l3699 52FA  
                                  i2l3859 4AEA                                    i2l9003 1B08  
                                  i2l9011 1B1A                                    i2l5635 4C90  
                                  i2l3797 3F0A                                    i2l3789 3EDE  
                                  i2l3869 4B12                                    i2l9013 1B5A  
                                  i2l9005 1B0E                                    i2l5629 4C68  
                                  i2l3799 3F14                                    i2l9103 1F10  
                                  i2l9007 1B14                                    i2l5655 4CCE  
                                  i2l9211 24E4                                    i2l9131 2036  
                                  i2l9123 1FEE                                    i2l9115 1F88  
                                  i2l9107 1F30                                    i2l9051 1CD4  
                                  i2l9043 1C6C                                    i2l9027 1BCA  
                                  i2l9019 1B76                                    i2l9221 2550  
                                  i2l9205 245A                                    i2l9141 20A2  
                                  i2l9061 1D56                                    i2l9311 28C4  
                                  i2l9215 251E                                    i2l9207 2488  
                                  i2l9151 2124                                    i2l9143 20B6  
                                  i2l9135 2070                                    i2l9127 2018  
                                  i2l9119 1FB4                                    i2l9071 1DBE  
                                  i2l9055 1CFA                             i2putch@txData 0002  
                                  i2l9321 2934                                    i2l9313 28D0  
                                  i2l9305 2890                                    i2l9209 24D6  
                                  i2l9161 21F4                                    i2l9153 2134  
                                  i2l9129 2020                                    i2l9081 1E1C  
                                  i2l9057 1D10                                    i2l9323 2948  
                                  i2l9227 259C                                    i2l9219 2548  
                                  i2l9139 209A                                    i2l9163 2216  
                                  i2l9067 1D98                                    i2l9059 1D40  
                                  i2l9341 2A88                                    i2l9333 29B8  
                                  i2l9317 290A                                    i2l9309 28BA  
                                  i2l9245 2684                                    i2l9237 2628  
                                  i2l9229 25D0                                    i2l9181 22C6  
                                  i2l9173 2288                                    i2l9165 2224  
                                  i2l9149 2108                                    i2l9085 1E82  
                                  i2l9343 2A96                                    i2l9263 26F4  
                                  i2l9247 268A                                    i2l9239 265E  
                                  i2l9175 2290                                    i2l9087 1E88  
                                  i2l9329 299A                                    i2l9281 278A  
                                  i2l9273 274C                                    i2l9193 2348  
                                  i2l9177 22A4                                    i2l9169 225E  
                                  i2l9345 2AAC                                    i2l9339 2A6C  
                                  i2l9267 2720                                    i2l9259 26D0  
                                  i2l9099 1ECE                                    i2l9347 2AC8  
                                  i2l9285 27BE                                    i2l9197 239A  
                                  i2l9189 231E                                    i2l9295 2820  
                                  i2l9287 27C8                                    i2l9279 2780  
                                  i2l9299 284A                                    i2l8963 19A6  
                                  i2l8973 19F2                                    i2l8957 195E  
                                  i2l8967 19D4                                    i2l8993 1AA8  
                                  i2l8969 19EA                                    i2l8979 1A22  
                                  i2l8987 1A82                                    i2l8997 1AE2  
                                  i2l8999 1AF8                                    _RCREG1 000FAE  
                               ??i2_scale 0033                          __end_of___lwtoft 5A4A  
                                  u443_41 3E42                                    u444_41 3E56  
                                  u524_41 4702                                    u526_41 472E  
                                  _RCSTA1 000FAB                                    u464_41 4A68  
                                  _OSCCON 000FD3                                    u538_41 4B5C  
                                  u466_41 4A90                                    _SPBRG1 000FAF  
                               ??i2_putch 0002                                    u785_41 4C50  
                                  u787_41 4C78                                    _TXREG1 000FAD  
                                  _TXSTA1 000FAC                    __size_ofi2__tdiv_to_l_ 0132  
                            __doprnt$1721 0122                            __CFG_XINST$OFF 000000  
                            i2_scale$1902 0033                          __end_of__powers_ 0677  
                        __end_of_lcd_init 54BC                              ?_TMR0_Reload 0001  
                                  ___ftge 4E04                          lcd_sendChar@temp 008F  
                                  ___wmul 582C                                 ??___awdiv 0098  
                               ??___ftadd 00B4                            __CFG_STVREN$ON 000000  
                               ??___awmod 0092                                 ??___ftdiv 009C  
                               ??___ftneg 0091                                 ??___lldiv 0096  
                               ??___ftmul 00A8                                 ??___llmod 00A3  
                               ??___ftsub 00B7                                 ??___fttol 0108  
                               ??__doprnt 011C                          ?_TMR0_Initialize 0001  
                                  _fround 3370                             i2__doprnt@exp 0063  
                           i2__doprnt@val 0065                                    clear_0 5670  
                        ___awdiv@quotient 009A                           ___awmod@divisor 0090  
                                  _result 0058                              __doprnt@flag 0134  
                         ___awmod@counter 0092                                    _printf 5898  
                            __doprnt@fval 0131                              __doprnt@prec 0136  
                          i2___awdiv@sign 000C                     ___ftmul@f3_as_product 00AC  
                       ??i2_EUSART1_Write 0001                              __pdataCOMRAM 005E  
                               ??_isdigit 008E                         __end_ofi2___awdiv 5344  
                       __end_ofi2___ftadd 3FDE                         __end_ofi2___awmod 552C  
                       __end_ofi2___ftdiv 4D26                            i2___ftadd@exp1 0020  
                          i2___ftadd@exp2 001F                         __end_ofi2___ftneg 5A26  
                       __end_ofi2___lldiv 53C6                         __end_ofi2___ftmul 4B4C  
                       __end_ofi2___llmod 5592                         __end_ofi2___ftsub 582C  
                       __end_ofi2___fttol 4C40                            i2___ftadd@sign 001E  
                            __mediumconst 0000                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                       __end_ofi2__doprnt 2AD2                      __end_of_lcd_sendChar 5766  
                        lcd_sendCommand@a 0090                            i2___awmod@sign 0006  
                         ??_EUSART1_Write 008E  TMR0_SetInterruptHandler@InterruptHandler 008E  
INT0_SetInterruptHandler@InterruptHandler 008E  INT1_SetInterruptHandler@InterruptHandler 008E  
                               ??_sprintf 00B7             __size_of_INTERRUPT_Initialize 0004  
                       __end_ofi2_isdigit 5A86                         _SYSTEM_Initialize 5A86  
                          i2___ftdiv@cntr 0039                                __accesstop 0060  
                 __end_of__initialization 567E                            i2___ftdiv@sign 003E  
                               ?_INT0_ISR 0001                                 ?_INT1_ISR 0001  
                              ___ftadd@f1 0107                                ___ftadd@f2 010A  
                     __size_ofi2___ftpack 00AE                                ___ftge@ff1 008E  
                              ___ftge@ff2 0091                        ?_SYSTEM_Initialize 0001  
                     __size_ofi2___lltoft 005C                             ___rparam_used 000001  
                              ___ftdiv@f1 0096                                ___ftdiv@f2 0099  
                              ___ftdiv@f3 00A0                                ___ftneg@f1 008E  
                      __size_of__lcd_Port 0036                            i2___ftpack@arg 0001  
                      i2__tdiv_to_l_@exp1 000F                         i2___llmod@divisor 0012  
                          i2___ftpack@exp 0004                        i2__tdiv_to_l_@cntr 000E  
                       i2___llmod@counter 0016                        i2__tdiv_to_l_@quot 000A  
                              ___ftmul@f1 00A2                                ___ftmul@f2 00A5  
                              ___ftsub@f1 0110                                ___ftsub@f2 0113  
                              ___fttol@f1 0104                            __pcstackCOMRAM 0001  
                      i2___lldiv@dividend 0001                              __pidataBANK0 5B42  
                     ??_SYSTEM_Initialize 0092                          ??_lcd_sendString 0094  
                               ?_TMR0_ISR 0001                                ___lltoft@c 0096  
                          i2___ftmul@cntr 002E                             __end_of_scale 2F80  
                          i2___ftmul@sign 002F                             __end_of_putch 5ACA  
                 __size_of_TMR0_ReadTimer 0042                            main@cap_string 0146  
                          i2___fttol@exp1 0045                                ___lwtoft@c 0009  
                          i2___fttol@lval 0041                                 ?i2___ftge 0001  
                               ?i2___wmul 000F                             i2__tdiv_to_l_ 46F2  
             __size_of_EXT_INT_Initialize 002E                                __div_to_l_ 417C  
                               ?i2_fround 0030                        __size_of_lcd_clear 000E  
                              __doprnt@ap 011A                                __doprnt@pb 0116  
                   i2EUSART1_Write@txData 0001                           __div_to_l_@exp1 0099  
                        ?_TMR0_StartTimer 0001                           __div_to_l_@cntr 0098  
                                 ??_scale 00B4                 __end_of_SYSTEM_Initialize 5AA0  
                          i2___lltoft@exp 0011                           __div_to_l_@quot 0094  
                                 ??_putch 008F                        i2___lldiv@quotient 0009  
                              __pbssBANK0 00B7                          i2__tdiv_to_l_@f1 0001  
                        i2__tdiv_to_l_@f2 0004                           __CFG_PLLCFG$OFF 000000  
                   _INT0_InterruptHandler 00CA                                ??_INT0_ISR 0058  
                              ??_INT1_ISR 0001                                __pnvCOMRAM 005C  
                           __div_to_l_@f1 008E                             __div_to_l_@f2 0091  
                      __CFG_CCP2MX$PORTC1 000000                                   ?___ftge 008E  
        __end_of_TMR0_SetInterruptHandler 5B0A                   __size_of_TMR0_StopTimer 0004  
                                 ?___wmul 009C                                ??_TMR0_ISR 0002  
                      __CFG_CCP3MX$PORTB5 000000                                   ?_fround 00B1  
                               ?___ftpack 008E                                   ?_printf 0077  
                               ?___lltoft 0096                            ?i2__tdiv_to_l_ 0001  
                              ??i2___ftge 0007                                 ?___lwtoft 0009  
                              ??i2___wmul 0013                ??_INT1_SetInterruptHandler 0090  
                       __end_of__lcd_Port 5898                                ??i2_fround 0033  
                                 _OSCCON2 000FD2                                   _OSCTUNE 000F9B  
                                 _SPBRGH1 000FB0                  __size_of_lcd_sendCommand 0026  
                               ?_lcd_init 0001                                   i2_scale 2F80  
                                 i2_putch 5B1E         __size_of_INT0_SetInterruptHandler 000A  
               ?_INT0_SetInterruptHandler 008E                           __CFG_PWRTEN$OFF 000000  
                       __end_of__npowers_ 0650                                   __Hparam 0000  
                              _scale$1720 0100                                   __Lparam 0000  
                       __end_of_lcd_clear 5AE6                           __size_of___ftge 00C8  
                                 ___awdiv 4ECC                            i2__doprnt$1903 0060  
                                 ___ftadd 361C                                   ___awmod 50F4  
                                 ___ftdiv 4462                                   ___ftneg 58CE  
                                 ___lldiv 4F8A                           __size_of___wmul 0036  
                                 ___ftmul 4304                                   ___llmod 5196  
                                 ___ftsub 568C                                   ___fttol 45AE  
                            __psmallconst 0600                      __size_of_TMR0_Reload 000A  
                                 __doprnt 06EE                                   __pcinit 5640  
                            ??i2___ftpack 0006                                ??___ftpack 0093  
                         __size_of_fround 02AC                   i2___ftmul@f3_as_product 002B  
                                 __ramtop 0600                              ??i2___lltoft 000D  
                              ??___lltoft 009A                                   __ptext0 3ACA  
                                 __ptext1 55EE                                   __ptext2 06EE  
                                 __ptext3 2AD2                                   __ptext4 5AB6  
                                 __ptext5 5ACA                                   __ptext6 598C  
                                 __ptext7 3370                                   __ptext8 582C  
                                 __ptext9 4304                           __size_of_printf 0036  
                   __size_of_lcd_sendChar 0046                                ??___lwtoft 000C  
                               _T0CONbits 000FD5                             i2_fround$1900 0036  
                           i2_fround$1901 0033                               ?__div_to_l_ 008E  
                                 _dpowers 0601                     _OSCILLATOR_Initialize 5AE6  
                            i2fround@prec 0039                                   _isdigit 598C  
                          i2__doprnt@flag 0072                                   _reading 00B7  
                          i2__doprnt@fval 006D                          ___awmod@dividend 008E  
                          i2__doprnt@prec 0074                        _EUSART1_Initialize 5AA0  
                ??_PIN_MANAGER_Initialize 008E                __size_of_SYSTEM_Initialize 001A  
                                 _sprintf 55EE                             __doprnt@width 012F  
                              ??_lcd_init 0091                      end_of_initialization 567E  
                                 ftoa@buf 00B9                       ?_EUSART1_Initialize 0001  
                           __Lmediumconst 0000                       i2___wmul@multiplier 000F  
                               i2u1501_48 205A                                 i2u1510_48 2248  
                               i2u1512_40 22BA                        __end_ofi2___ftpack 50F4  
                               i2u1520_48 2508                                 i2u1505_48 20F2  
                               i2u1515_48 2308                                 i2u1507_48 21DA  
                               i2u1541_48 280A                                 i2u1517_48 2440  
                               i2u1552_48 2984                                 i2u1544_48 287A  
                               i2u1554_48 2A54                                 i2u1548_48 28F4  
                               i2u1478_40 1C0A                                 i2u1469_48 198E  
                               i2u1478_45 1C00                                 i2u1496_48 1F72  
                               i2u1648_48 5948                                 i2u1498_48 1FD8  
                      __end_ofi2___lltoft 55EE                           ___lldiv@divisor 0092  
                         ___lldiv@counter 009A                           i2_EUSART1_Write 5AF4  
                   TMR0_ReadTimer@readVal 0007                                   printf@f 0077  
                            _lcd_sendChar 5720                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc2 000FDE  
                          __tdiv_to_l_@f1 008E                            __tdiv_to_l_@f2 0091  
                          _TMR0_ReadTimer 57AA                      ??_EUSART1_Initialize 008E  
                         ??i2__tdiv_to_l_ 0007                       __end_of_cal_current 0686  
                           ??__tdiv_to_l_ 0094                  _TMR0_SetInterruptHandler 5B00  
                   _INT1_InterruptHandler 00CC                                 i2___awdiv 52C0  
                     EUSART1_Write@txData 008E                                 i2___ftadd 3E32  
                               i2___awmod 54BC                                 i2___ftdiv 4C40  
                               i2___ftneg 5A02                                 i2___lldiv 5344  
                               i2___ftmul 4A58                                 i2___llmod 552C  
                               i2___ftsub 57EC                                 i2___fttol 4B4C  
                               i2__doprnt 195A                            __end_of_R1_BIT 068B  
                             ___ftdiv@exp 00A3                        i2___llmod@dividend 000E  
                      i2___awdiv@dividend 0007                         ??_lcd_sendCommand 008F  
                         i2___ftpack@sign 0005                                 i2_isdigit 5A68  
                       __size_of_INT0_ISR 00DE                       __size_of__div_to_l_ 0188  
                       __size_of_INT1_ISR 01B2                               ___ftmul@exp 00AB  
                          _TMR0_StopTimer 5B3E                    __end_of_TMR0_ReadTimer 57EC  
            __end_of_INTERRUPT_Initialize 5B3A              _INT0_DefaultInterruptHandler 000000  
                          __end_of___ftge 4ECC                            __end_of___wmul 5862  
                           __pidataCOMRAM 5B44                         __size_of_TMR0_ISR 0030  
                  ?_OSCILLATOR_Initialize 0001                            __end_of_fround 361C  
                        i2___wmul@product 0013                            __end_of_printf 58CE  
                     start_initialization 5640                         __size_ofi2___ftge 0090  
                      i2___awdiv@quotient 000D                         __size_ofi2___wmul 0026  
                __size_of_TMR0_Initialize 0044           __size_of_PIN_MANAGER_Initialize 0030  
                     __end_of__tdiv_to_l_ 417C                               __lcd_Port@a 008E  
                         i2___fttol@sign1 0040                         __size_ofi2_fround 0246  
                              ?i2___awdiv 0007                                ?i2___ftadd 0015  
                              ?i2___awmod 0001                                ?i2___ftdiv 0030  
                              ?i2___ftneg 0001                                ?i2___lldiv 0001  
                              ?i2___ftmul 0021                                ?i2___llmod 000E  
                              ?i2___ftsub 0021                                ?i2___fttol 0037  
                             putch@txData 008F                     __end_of_EUSART1_Write 5AD8  
                              ?i2__doprnt 0046                   __end_ofi2_EUSART1_Write 5B00  
                         ___llmod@divisor 009F                           ___llmod@counter 00A3  
                  __end_of_TMR0_StopTimer 5B42                                ?i2_isdigit 0001  
                             _cal_current 0677                                  ??___ftge 0094  
                         ?_TMR0_ReadTimer 0001                                  ??___wmul 00A0  
                             __doprnt@exp 0125                               __doprnt@val 0127  
                             __pdataBANK0 00D0                                  ??_fround 00B4  
              __end_of_EXT_INT_Initialize 598C                                  ??_printf 0052  
                              fround@prec 0106                             ?i2__div_to_l_ 0001  
                       __size_of___ftpack 010C                         __size_of___lltoft 007C  
                             __pbssCOMRAM 0058          __end_of_INT0_SetInterruptHandler 5B1E  
                       __size_of___lwtoft 0024                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                              _isdigit$1253 008F  
                               __lcd_Port 5862                                  ?i2_scale 0030  
                       __size_of_lcd_init 007A                                  ?i2_putch 0001  
                               __doprnt@c 0138                                 __doprnt@f 0118  
                   _TMR0_InterruptHandler 00CE                                 __pnvBANK0 00CA  
                __size_of_TMR0_StartTimer 0004                           lcd_sendString@a 0092  
                         lcd_sendString@i 0094                           ?_TMR0_StopTimer 0001  
                  _PIN_MANAGER_Initialize 58FE                                 __pintcode 0008  
                                ?___awdiv 0094                                  ?___ftadd 0107  
                                ?___awmod 008E                                  ?___ftdiv 0096  
                                ?___ftneg 008E                                  ?___lldiv 008E  
                                ?___ftmul 00A2                                  ?___llmod 009B  
                                ?___ftsub 0110                                 __npowers_ 0629  
                                ?___fttol 0104                               _delta_range 005B  
                                ?__doprnt 0116                                 _lcd_clear 5AD8  
            ??_INTERRUPT_InterruptManager 0080                          __CFG_PRICLKEN$ON 000000  
                             __tdiv_to_l_ 3FDE                            ??i2__div_to_l_ 0007  
                            ??__div_to_l_ 0094                               __smallconst 0600  
                                _BAUDCON1 000FB8                                  ?_isdigit 0001  
                 __size_of_lcd_sendString 0048                               ??i2___awdiv 000B  
                             ??i2___ftadd 001B                               ??i2___awmod 0005  
                                ?_sprintf 0139                               ??i2___ftdiv 0036  
                             ??i2___ftneg 0004                               ??i2___lldiv 0009  
                             ??i2___ftmul 0027                            __size_of_scale 04AE  
                             ??i2___llmod 0016                               ??i2___ftsub 0027  
                             ??i2___fttol 003B                                ?__lcd_Port 0001  
                          __size_of_putch 0014                      _INTERRUPT_Initialize 5B36  
                             ??i2__doprnt 004C                         ??_TMR0_Initialize 0090  
                                _INT0_ISR 4D26                          ?i2_EUSART1_Write 0001  
                                _INT1_ISR 3C80                            ___wmul@product 00A0  
                        i2__doprnt@tmpval 0069                                  _LATAbits 000F89  
                                _LATCbits 000F8B         __size_of_INT1_SetInterruptHandler 000A  
               ?_INT1_SetInterruptHandler 008E                               ??i2_isdigit 0001  
                       i2_TMR0_StartTimer 5B3A       __size_of_INTERRUPT_InterruptManager 0098  
              ??_TMR0_SetInterruptHandler 0090                                  _PIR1bits 000F9E  
                      __end_of__div_to_l_ 4304                                  i2u540_40 4B96  
                                i2u380_44 3CE4                                  i2u540_45 4B8E  
                                i2u380_45 3CE0                                  i2u381_44 3D02  
                                i2u381_45 3CFE                                  i2u382_44 3D20  
                                i2u382_45 3D1C                                  i2u383_44 3D4A  
                                i2u383_45 3D46                                  i2u384_44 3D68  
                                i2u384_45 3D64                                  i2u385_44 3D86  
                                i2u385_45 3D82                                  i2u386_44 3DA4  
                                i2u378_44 3CA8                                  i2u386_45 3DA0  
                                i2u378_45 3CA4                                  i2u387_44 3DE6  
                                i2u379_44 3CC6                                  i2u387_45 3DE2  
                                i2u379_45 3CC2                                  i2u388_44 3E24  
                                i2u388_45 3E20                             ??_TMR0_Reload 0001  
                                i2u694_40 5A52                                  i2u694_46 5A54  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                      ?i2_TMR0_StartTimer 0001                                  _TMR0_ISR 592E  
                         i2__div_to_l_@f1 0001                           i2__div_to_l_@f2 0004  
                                _RSET_BIT 068B                                ?_lcd_clear 0001  
                TMR0_ReadTimer@readValLow 0009                       ??i2_TMR0_StartTimer 0001  
                       ___wmul@multiplier 009C                                  i2___ftge 5230  
                                i2___wmul 59DC                         i2___awdiv@divisor 0009  
                                i2_fround 3884                         i2___awdiv@counter 000B  
                         _lcd_sendCommand 59B6                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                     ?_INTERRUPT_Initialize 0001  
                _INT0_SetInterruptHandler 5B14                        i2___awmod@dividend 0001  
                        __size_ofi2_scale 03F0                 __end_ofi2_TMR0_StartTimer 5B3E  
                        __size_ofi2_putch 000A                                  __Hrparam 0000  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                       __CFG_P2BMX$PORTB5 000000                   ??_OSCILLATOR_Initialize 008E  
                       ??_TMR0_StartTimer 008E                          __size_of___awdiv 00BE  
                        __size_of___ftadd 0268                          __size_of___awmod 00A2  
                        __size_of___ftdiv 014C                          __size_of___ftneg 0030  
                   i2___wmul@multiplicand 0011                          __size_of___lldiv 00BC  
                        __size_of___ftmul 015E                          __size_of___llmod 009A  
                        __size_of___ftsub 004C                          __size_of___fttol 0144  
             __size_of_EUSART1_Initialize 0016                                  ___ftpack 494C  
                        __size_of__doprnt 126C                               _fround$1718 0103  
                             _fround$1719 0100                                  ___lltoft 53C6  
                   __end_ofi2__tdiv_to_l_ 4824                       __end_of_TMR0_Reload 5B32  
                         _putch$intlevel0 5ABC                                  ___lwtoft 5A26  
                        __size_of_isdigit 002A                                  __ptext10 50F4  
                                __ptext11 4ECC                                  __ptext20 58CE  
                                __ptext12 3FDE                                  __ptext21 4E04  
                                __ptext13 417C                                  __ptext30 5A86  
                                __ptext22 56D8                                  __ptext14 53C6  
                                __ptext31 5766                                  __ptext23 5720  
                                __ptext15 5196                                  __ptext40 5AA0  
                                __ptext32 5B32                                  __ptext24 5442  
                                __ptext16 4F8A                                  __ptext33 5B00  
                                __ptext25 5AD8                                  __ptext17 45AE  
                                __ptext50 2F80                                  __ptext42 592E  
                                __ptext34 58FE                                  __ptext26 59B6  
                                __ptext18 568C                                  __ptext51 5B1E  
                                __ptext43 5A4A                                  __ptext35 5AE6  
                                __ptext27 5862                                  __ptext19 361C  
                                __ptext60 4824                                  __ptext52 5AF4  
                                __ptext44 3C80                                  __ptext36 5B36  
                                __ptext28 4462                                  __ptext61 5592  
                                __ptext53 5A68                                  __ptext45 4D26  
                                __ptext37 595E                                  __ptext29 494C  
                                __ptext70 5046                                  __ptext62 552C  
                                __ptext54 3884                                  __ptext46 4C40  
                                __ptext38 5B0A                                  __ptext71 5B3E  
                                __ptext63 5344                                  __ptext55 59DC  
                                __ptext47 5B3A                                  __ptext39 5B14  
                                __ptext72 5B28                                  __ptext64 4B4C  
                                __ptext56 4A58                                  __ptext48 5898  
                                __ptext73 57AA                                  __ptext65 57EC  
                                __ptext57 54BC                                  __ptext49 195A  
                                __ptext74 0000                                  __ptext66 3E32  
                                __ptext58 52C0                                  __ptext67 5A02  
                                __ptext59 46F2                                  __ptext68 5230  
                                __ptext69 5A26                                  __powers_ 0650  
                                _lcd_init 5442                               ??__lcd_Port 008E  
                        __size_of_sprintf 0052                            i2_isdigit$1253 0002  
                           __size_of_main 01B6                          ??_TMR0_ReadTimer 0003  
                    __end_ofi2__div_to_l_ 494C      __end_of_TMR0_DefaultInterruptHandler 5A68  
   __size_of_TMR0_DefaultInterruptHandler 001E              _TMR0_DefaultInterruptHandler 5A4A  
                         i2__doprnt@width 0070                                  int$flags 005F  
      __end_of_INTERRUPT_InterruptManager 00A0                _INTERRUPT_InterruptManager 0008  
                             ??_lcd_clear 0091                            __doprnt@tmpval 012B  
            _INT1_DefaultInterruptHandler 000000                   __end_of_lcd_sendCommand 59DC  
                       i2___awmod@divisor 0003                         i2___awmod@counter 0005  
                              _INTCONbits 000FF2                            _lcd_sendString 56D8  
                                isdigit@c 0090                    ??_INTERRUPT_Initialize 008E  
                                scale@scl 0103                        _EXT_INT_Initialize 595E  
                                intlevel2 0000                                 sprintf@ap 0140  
                               sprintf@pb 0142                          ??_TMR0_StopTimer 0001  
                        __tdiv_to_l_@exp1 009C                          __tdiv_to_l_@cntr 009B  
                               sprintf@wh 0139                          __tdiv_to_l_@quot 0097  
                        ___lldiv@dividend 008E                   ?_PIN_MANAGER_Initialize 0001  
              __size_ofi2_TMR0_StartTimer 0004                       ?_EXT_INT_Initialize 0001  
                              _RCSTA1bits 000FAB             ?_TMR0_DefaultInterruptHandler 0001  
                             _TMR0_Reload 5B28                                  printf@ap 0052  
                                printf@pb 0054                    __size_of_EUSART1_Write 000E  
                            ?__tdiv_to_l_ 008E                    __end_of_lcd_sendString 5720  
                    ??_EXT_INT_Initialize 0090                                  sprintf@f 013B  
                        ___lldiv@quotient 0096                           _TMR0_Initialize 5766  
        __end_of_INT1_SetInterruptHandler 5B14                         __CFG_T3CMX$PORTC0 000000  
          __end_of_PIN_MANAGER_Initialize 592E                         i2__div_to_l_@exp1 000C  
                       i2__div_to_l_@cntr 000B                         i2__div_to_l_@quot 0007  
