

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Jan 23 20:27:00 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    92                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    93  0000                     
    94                           	psect	idataBANK0
    95  005B5E                     __pidataBANK0:
    96                           	opt stack 0
    97                           
    98                           ;initializer for _units
    99  005B5E  70                 	db	112
   100  005B5F  46                 	db	70
   101                           
   102                           ;initializer for _auto_range
   103  005B60  01                 	db	1
   104                           
   105                           ;initializer for _range
   106  005B61  02                 	db	2
   107                           
   108                           	psect	smallconst
   109  000600                     __psmallconst:
   110                           	opt stack 0
   111  000600  00                 	db	0
   112  000601                     _dpowers:
   113                           	opt stack 0
   114  000601  0001               	dw	1
   115  000603  0000               	dw	0
   116  000605  000A               	dw	10
   117  000607  0000               	dw	0
   118  000609  0064               	dw	100
   119  00060B  0000               	dw	0
   120  00060D  03E8               	dw	1000
   121  00060F  0000               	dw	0
   122  000611  2710               	dw	10000
   123  000613  0000               	dw	0
   124  000615  86A0               	dw	34464
   125  000617  0001               	dw	1
   126  000619  4240               	dw	16960
   127  00061B  000F               	dw	15
   128  00061D  9680               	dw	38528
   129  00061F  0098               	dw	152
   130  000621  E100               	dw	57600
   131  000623  05F5               	dw	1525
   132  000625  CA00               	dw	51712
   133  000627  3B9A               	dw	15258
   134  000629                     __end_of_dpowers:
   135                           	opt stack 0
   136  000629                     __npowers_:
   137                           	opt stack 0
   138  000629  00                 	db	0
   139  00062A  80                 	db	128
   140  00062B  3F                 	db	63
   141  00062C  CD                 	db	205
   142  00062D  CC                 	db	204
   143  00062E  3D                 	db	61
   144  00062F  D7                 	db	215
   145  000630  23                 	db	35
   146  000631  3C                 	db	60
   147  000632  12                 	db	18
   148  000633  83                 	db	131
   149  000634  3A                 	db	58
   150  000635  B7                 	db	183
   151  000636  D1                 	db	209
   152  000637  38                 	db	56
   153  000638  C6                 	db	198
   154  000639  27                 	db	39
   155  00063A  37                 	db	55
   156  00063B  38                 	db	56
   157  00063C  86                 	db	134
   158  00063D  35                 	db	53
   159  00063E  C0                 	db	192
   160  00063F  D6                 	db	214
   161  000640  33                 	db	51
   162  000641  CC                 	db	204
   163  000642  2B                 	db	43
   164  000643  32                 	db	50
   165  000644  70                 	db	112
   166  000645  89                 	db	137
   167  000646  30                 	db	48
   168  000647  E7                 	db	231
   169  000648  DB                 	db	219
   170  000649  2E                 	db	46
   171  00064A  E5                 	db	229
   172  00064B  3C                 	db	60
   173  00064C  1E                 	db	30
   174  00064D  42                 	db	66
   175  00064E  A2                 	db	162
   176  00064F  0D                 	db	13
   177  000650                     __end_of__npowers_:
   178                           	opt stack 0
   179  000650                     __powers_:
   180                           	opt stack 0
   181  000650  00                 	db	0
   182  000651  80                 	db	128
   183  000652  3F                 	db	63
   184  000653  00                 	db	0
   185  000654  20                 	db	32
   186  000655  41                 	db	65
   187  000656  00                 	db	0
   188  000657  C8                 	db	200
   189  000658  42                 	db	66
   190  000659  00                 	db	0
   191  00065A  7A                 	db	122
   192  00065B  44                 	db	68
   193  00065C  40                 	db	64
   194  00065D  1C                 	db	28
   195  00065E  46                 	db	70
   196  00065F  50                 	db	80
   197  000660  C3                 	db	195
   198  000661  47                 	db	71
   199  000662  24                 	db	36
   200  000663  74                 	db	116
   201  000664  49                 	db	73
   202  000665  97                 	db	151
   203  000666  18                 	db	24
   204  000667  4B                 	db	75
   205  000668  BC                 	db	188
   206  000669  BE                 	db	190
   207  00066A  4C                 	db	76
   208  00066B  6B                 	db	107
   209  00066C  6E                 	db	110
   210  00066D  4E                 	db	78
   211  00066E  03                 	db	3
   212  00066F  15                 	db	21
   213  000670  50                 	db	80
   214  000671  79                 	db	121
   215  000672  AD                 	db	173
   216  000673  60                 	db	96
   217  000674  F3                 	db	243
   218  000675  49                 	db	73
   219  000676  71                 	db	113
   220  000677                     __end_of__powers_:
   221                           	opt stack 0
   222  000677                     _cal_current:
   223                           	opt stack 0
   224  000677  00                 	db	0
   225  000678  00                 	db	0
   226  000679  3F                 	db	63
   227  00067A  9A                 	db	154
   228  00067B  F9                 	db	249
   229  00067C  40                 	db	64
   230  00067D  DC                 	db	220
   231  00067E  D8                 	db	216
   232  00067F  42                 	db	66
   233  000680  70                 	db	112
   234  000681  8A                 	db	138
   235  000682  45                 	db	69
   236  000683  C0                 	db	192
   237  000684  DA                 	db	218
   238  000685  47                 	db	71
   239  000686                     __end_of_cal_current:
   240                           	opt stack 0
   241  000686                     _R1_BIT:
   242                           	opt stack 0
   243  000686  00                 	db	0
   244  000687  01                 	db	1
   245  000688  02                 	db	2
   246  000689  03                 	db	3
   247  00068A  04                 	db	4
   248  00068B                     __end_of_R1_BIT:
   249                           	opt stack 0
   250  00068B                     _RSET_BIT:
   251                           	opt stack 0
   252  00068B  02                 	db	2
   253  00068C  03                 	db	3
   254  00068D  03                 	db	3
   255  00068E  04                 	db	4
   256  00068F  05                 	db	5
   257  000690                     __end_of_RSET_BIT:
   258                           	opt stack 0
   259  000690                     STR_2:
   260  000690  43                 	db	67	;'C'
   261  000691  61                 	db	97	;'a'
   262  000692  70                 	db	112	;'p'
   263  000693  61                 	db	97	;'a'
   264  000694  63                 	db	99	;'c'
   265  000695  69                 	db	105	;'i'
   266  000696  74                 	db	116	;'t'
   267  000697  61                 	db	97	;'a'
   268  000698  6E                 	db	110	;'n'
   269  000699  63                 	db	99	;'c'
   270  00069A  65                 	db	101	;'e'
   271  00069B  3A                 	db	58	;':'
   272  00069C  20                 	db	32
   273  00069D  25                 	db	37
   274  00069E  30                 	db	48	;'0'
   275  00069F  2E                 	db	46
   276  0006A0  32                 	db	50	;'2'
   277  0006A1  66                 	db	102	;'f'
   278  0006A2  20                 	db	32
   279  0006A3  70                 	db	112	;'p'
   280  0006A4  46                 	db	70	;'F'
   281  0006A5  20                 	db	32
   282  0006A6  28                 	db	40
   283  0006A7  43                 	db	67	;'C'
   284  0006A8  6F                 	db	111	;'o'
   285  0006A9  75                 	db	117	;'u'
   286  0006AA  6E                 	db	110	;'n'
   287  0006AB  74                 	db	116	;'t'
   288  0006AC  3A                 	db	58	;':'
   289  0006AD  20                 	db	32
   290  0006AE  25                 	db	37
   291  0006AF  75                 	db	117	;'u'
   292  0006B0  29                 	db	41
   293  0006B1  20                 	db	32
   294  0006B2  2D                 	db	45
   295  0006B3  20                 	db	32
   296  0006B4  52                 	db	82	;'R'
   297  0006B5  61                 	db	97	;'a'
   298  0006B6  6E                 	db	110	;'n'
   299  0006B7  67                 	db	103	;'g'
   300  0006B8  65                 	db	101	;'e'
   301  0006B9  3A                 	db	58	;':'
   302  0006BA  20                 	db	32
   303  0006BB  25                 	db	37
   304  0006BC  64                 	db	100	;'d'
   305  0006BD  20                 	db	32
   306  0006BE  28                 	db	40
   307  0006BF  25                 	db	37
   308  0006C0  64                 	db	100	;'d'
   309  0006C1  29                 	db	41
   310  0006C2  0D                 	db	13
   311  0006C3  0A                 	db	10
   312  0006C4  00                 	db	0
   313  0006C5                     STR_1:
   314  0006C5  52                 	db	82	;'R'
   315  0006C6  61                 	db	97	;'a'
   316  0006C7  6E                 	db	110	;'n'
   317  0006C8  67                 	db	103	;'g'
   318  0006C9  65                 	db	101	;'e'
   319  0006CA  3A                 	db	58	;':'
   320  0006CB  20                 	db	32
   321  0006CC  25                 	db	37
   322  0006CD  64                 	db	100	;'d'
   323  0006CE  0D                 	db	13
   324  0006CF  0A                 	db	10
   325  0006D0  00                 	db	0
   326  0006D1  25                 	db	37
   327  0006D2  6C                 	db	108	;'l'
   328  0006D3  75                 	db	117	;'u'
   329  0006D4  2E                 	db	46
   330  0006D5  25                 	db	37
   331  0006D6  36                 	db	54	;'6'
   332  0006D7  2E                 	db	46
   333  0006D8  36                 	db	54	;'6'
   334  0006D9  6C                 	db	108	;'l'
   335  0006DA  75                 	db	117	;'u'
   336  0006DB  00                 	db	0
   337  0006DC                     STR_4:
   338  0006DC  43                 	db	67	;'C'
   339  0006DD  3D                 	db	61	;'='
   340  0006DE  25                 	db	37
   341  0006DF  31                 	db	49	;'1'
   342  0006E0  32                 	db	50	;'2'
   343  0006E1  2E                 	db	46
   344  0006E2  33                 	db	51	;'3'
   345  0006E3  66                 	db	102	;'f'
   346  0006E4  6E                 	db	110	;'n'
   347  0006E5  46                 	db	70	;'F'
   348  0006E6  00                 	db	0
   349  0006E7                     STR_5:
   350  0006E7  43                 	db	67	;'C'
   351  0006E8  3D                 	db	61	;'='
   352  0006E9  25                 	db	37
   353  0006EA  31                 	db	49	;'1'
   354  0006EB  32                 	db	50	;'2'
   355  0006EC  2E                 	db	46
   356  0006ED  30                 	db	48	;'0'
   357  0006EE  66                 	db	102	;'f'
   358  0006EF  70                 	db	112	;'p'
   359  0006F0  46                 	db	70	;'F'
   360  0006F1  00                 	db	0
   361  0006F2                     STR_3:
   362  0006F2  43                 	db	67	;'C'
   363  0006F3  3D                 	db	61	;'='
   364  0006F4  25                 	db	37
   365  0006F5  31                 	db	49	;'1'
   366  0006F6  32                 	db	50	;'2'
   367  0006F7  2E                 	db	46
   368  0006F8  36                 	db	54	;'6'
   369  0006F9  66                 	db	102	;'f'
   370  0006FA  75                 	db	117	;'u'
   371  0006FB  46                 	db	70	;'F'
   372  0006FC  00                 	db	0
   373                           
   374                           ; #config settings
   375  0006FD  00                 	db	0	; dummy byte at the end
   376  0000                     
   377                           	psect	nvCOMRAM
   378  00005D                     __pnvCOMRAM:
   379                           	opt stack 0
   380  00005D                     _timer0ReloadVal:
   381                           	opt stack 0
   382  00005D                     	ds	2
   383                           
   384                           	psect	nvBANK0
   385  0000CC                     __pnvBANK0:
   386                           	opt stack 0
   387  0000CC                     _TMR0_InterruptHandler:
   388                           	opt stack 0
   389  0000CC                     	ds	2
   390  0000                     _ANSELA	set	3896
   391  0000                     _ANSELB	set	3897
   392  0000                     _ANSELC	set	3898
   393  0000                     _BAUDCON1	set	4024
   394  0000                     _INTCON2bits	set	4081
   395  0000                     _INTCON3bits	set	4080
   396  0000                     _INTCONbits	set	4082
   397  0000                     _LATA	set	3977
   398  0000                     _LATAbits	set	3977
   399  0000                     _LATB	set	3978
   400  0000                     _LATC	set	3979
   401  0000                     _LATCbits	set	3979
   402  0000                     _OSCCON	set	4051
   403  0000                     _OSCCON2	set	4050
   404  0000                     _OSCTUNE	set	3995
   405  0000                     _PIR1bits	set	3998
   406  0000                     _RCONbits	set	4048
   407  0000                     _RCREG1	set	4014
   408  0000                     _RCSTA1	set	4011
   409  0000                     _RCSTA1bits	set	4011
   410  0000                     _SPBRG1	set	4015
   411  0000                     _SPBRGH1	set	4016
   412  0000                     _T0CON	set	4053
   413  0000                     _T0CONbits	set	4053
   414  0000                     _TMR0H	set	4055
   415  0000                     _TMR0L	set	4054
   416  0000                     _TRISA	set	3986
   417  0000                     _TRISB	set	3987
   418  0000                     _TRISC	set	3988
   419  0000                     _TXREG1	set	4013
   420  0000                     _TXSTA1	set	4012
   421  0000                     _WPUB	set	3937
   422                           
   423                           	psect	cinit
   424  005766                     __pcinit:
   425                           	opt stack 0
   426  005766                     start_initialization:
   427                           	opt stack 0
   428  005766                     __initialization:
   429                           	opt stack 0
   430                           
   431                           ; Initialize objects allocated to BANK0 (4 bytes)
   432                           ; load TBLPTR registers with __pidataBANK0
   433  005766  0E5E               	movlw	low __pidataBANK0
   434  005768  6EF6               	movwf	tblptrl,c
   435  00576A  0E5B               	movlw	high __pidataBANK0
   436  00576C  6EF7               	movwf	tblptrh,c
   437  00576E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   438  005770  6EF8               	movwf	tblptru,c
   439  005772  EE00  F0C8         	lfsr	0,__pdataBANK0
   440  005776  EE10 F004          	lfsr	1,4
   441  00577A                     copy_data0:
   442  00577A  0009               	tblrd		*+
   443  00577C  CFF5 FFEE          	movff	tablat,postinc0
   444  005780  50E5               	movf	postdec1,w,c
   445  005782  50E1               	movf	fsr1l,w,c
   446  005784  E1FA               	bnz	copy_data0
   447                           
   448                           ; Clear objects allocated to BANK0 (18 bytes)
   449  005786  EE00  F0B6         	lfsr	0,__pbssBANK0
   450  00578A  0E12               	movlw	18
   451  00578C                     clear_0:
   452  00578C  6AEE               	clrf	postinc0,c
   453  00578E  06E8               	decf	wreg,f,c
   454  005790  E1FD               	bnz	clear_0
   455                           
   456                           ; Clear objects allocated to COMRAM (5 bytes)
   457  005792  6A5C               	clrf	(__pbssCOMRAM+4)& (0+255),c
   458  005794  6A5B               	clrf	(__pbssCOMRAM+3)& (0+255),c
   459  005796  6A5A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   460  005798  6A59               	clrf	(__pbssCOMRAM+1)& (0+255),c
   461  00579A  6A58               	clrf	__pbssCOMRAM& (0+255),c
   462  00579C                     end_of_initialization:
   463                           	opt stack 0
   464  00579C                     __end_of__initialization:
   465                           	opt stack 0
   466  00579C  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   467  00579E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   468  0057A0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   469  0057A2  6EF8               	movwf	tblptru,c
   470  0057A4  0100               	movlb	0
   471  0057A6  EFA8  F020         	goto	_main	;jump to C main() function
   472                           tblptru	equ	0xFF8
   473                           tblptrh	equ	0xFF7
   474                           tblptrl	equ	0xFF6
   475                           tablat	equ	0xFF5
   476                           postinc0	equ	0xFEE
   477                           wreg	equ	0xFE8
   478                           postdec1	equ	0xFE5
   479                           fsr1l	equ	0xFE1
   480                           
   481                           	psect	bssCOMRAM
   482  000058                     __pbssCOMRAM:
   483                           	opt stack 0
   484  000058                     _result:
   485                           	opt stack 0
   486  000058                     	ds	3
   487  00005B                     _reading:
   488                           	opt stack 0
   489  00005B                     	ds	2
   490                           tblptru	equ	0xFF8
   491                           tblptrh	equ	0xFF7
   492                           tblptrl	equ	0xFF6
   493                           tablat	equ	0xFF5
   494                           postinc0	equ	0xFEE
   495                           wreg	equ	0xFE8
   496                           postdec1	equ	0xFE5
   497                           fsr1l	equ	0xFE1
   498                           
   499                           	psect	bssBANK0
   500  0000B6                     __pbssBANK0:
   501                           	opt stack 0
   502  0000B6                     _stored_range:
   503                           	opt stack 0
   504  0000B6                     	ds	1
   505  0000B7                     ftoa@buf:
   506                           	opt stack 0
   507  0000B7                     	ds	17
   508                           tblptru	equ	0xFF8
   509                           tblptrh	equ	0xFF7
   510                           tblptrl	equ	0xFF6
   511                           tablat	equ	0xFF5
   512                           postinc0	equ	0xFEE
   513                           wreg	equ	0xFE8
   514                           postdec1	equ	0xFE5
   515                           fsr1l	equ	0xFE1
   516                           
   517                           	psect	dataBANK0
   518  0000C8                     __pdataBANK0:
   519                           	opt stack 0
   520  0000C8                     _units:
   521                           	opt stack 0
   522  0000C8                     	ds	2
   523  0000CA                     _auto_range:
   524                           	opt stack 0
   525  0000CA                     	ds	1
   526  0000CB                     _range:
   527                           	opt stack 0
   528  0000CB                     	ds	1
   529                           tblptru	equ	0xFF8
   530                           tblptrh	equ	0xFF7
   531                           tblptrl	equ	0xFF6
   532                           tablat	equ	0xFF5
   533                           postinc0	equ	0xFEE
   534                           wreg	equ	0xFE8
   535                           postdec1	equ	0xFE5
   536                           fsr1l	equ	0xFE1
   537                           
   538                           	psect	cstackBANK1
   539  000100                     __pcstackBANK1:
   540                           	opt stack 0
   541  000100                     _fround$1741:
   542                           	opt stack 0
   543  000100                     _scale$1742:
   544                           	opt stack 0
   545                           
   546                           ; 3 bytes @ 0x0
   547  000100                     	ds	3
   548  000103                     scale@scl:
   549                           	opt stack 0
   550  000103                     _fround$1740:
   551                           	opt stack 0
   552                           
   553                           ; 3 bytes @ 0x3
   554  000103                     	ds	1
   555  000104                     ?___fttol:
   556                           	opt stack 0
   557  000104                     ___fttol@f1:
   558                           	opt stack 0
   559                           
   560                           ; 3 bytes @ 0x4
   561  000104                     	ds	2
   562  000106                     fround@prec:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0x6
   566  000106                     	ds	1
   567  000107                     ?___ftadd:
   568                           	opt stack 0
   569  000107                     ___ftadd@f1:
   570                           	opt stack 0
   571                           
   572                           ; 3 bytes @ 0x7
   573  000107                     	ds	1
   574  000108                     ??___fttol:
   575                           
   576                           ; 1 bytes @ 0x8
   577  000108                     	ds	2
   578  00010A                     ___ftadd@f2:
   579                           	opt stack 0
   580                           
   581                           ; 3 bytes @ 0xA
   582  00010A                     	ds	3
   583  00010D                     ??___ftadd:
   584  00010D                     ___fttol@sign1:
   585                           	opt stack 0
   586                           
   587                           ; 1 bytes @ 0xD
   588  00010D                     	ds	1
   589  00010E                     ___fttol@lval:
   590                           	opt stack 0
   591                           
   592                           ; 4 bytes @ 0xE
   593  00010E                     	ds	2
   594  000110                     ___ftadd@sign:
   595                           	opt stack 0
   596                           
   597                           ; 1 bytes @ 0x10
   598  000110                     	ds	1
   599  000111                     ___ftadd@exp2:
   600                           	opt stack 0
   601                           
   602                           ; 1 bytes @ 0x11
   603  000111                     	ds	1
   604  000112                     ___ftadd@exp1:
   605                           	opt stack 0
   606  000112                     ___fttol@exp1:
   607                           	opt stack 0
   608                           
   609                           ; 1 bytes @ 0x12
   610  000112                     	ds	1
   611  000113                     ?___ftsub:
   612                           	opt stack 0
   613  000113                     ___ftsub@f1:
   614                           	opt stack 0
   615                           
   616                           ; 3 bytes @ 0x13
   617  000113                     	ds	3
   618  000116                     ___ftsub@f2:
   619                           	opt stack 0
   620                           
   621                           ; 3 bytes @ 0x16
   622  000116                     	ds	3
   623  000119                     ?__doprnt:
   624                           	opt stack 0
   625  000119                     __doprnt@pb:
   626                           	opt stack 0
   627                           
   628                           ; 2 bytes @ 0x19
   629  000119                     	ds	2
   630  00011B                     __doprnt@f:
   631                           	opt stack 0
   632                           
   633                           ; 2 bytes @ 0x1B
   634  00011B                     	ds	2
   635  00011D                     __doprnt@ap:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x1D
   639  00011D                     	ds	2
   640  00011F                     ??__doprnt:
   641                           
   642                           ; 1 bytes @ 0x1F
   643  00011F                     	ds	6
   644  000125                     __doprnt$1743:
   645                           	opt stack 0
   646                           
   647                           ; 3 bytes @ 0x25
   648  000125                     	ds	3
   649  000128                     __doprnt@exp:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0x28
   653  000128                     	ds	2
   654  00012A                     __doprnt@val:
   655                           	opt stack 0
   656                           
   657                           ; 4 bytes @ 0x2A
   658  00012A                     	ds	4
   659  00012E                     __doprnt@tmpval:
   660                           	opt stack 0
   661                           
   662                           ; 4 bytes @ 0x2E
   663  00012E                     	ds	4
   664  000132                     __doprnt@width:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0x32
   668  000132                     	ds	2
   669  000134                     __doprnt@fval:
   670                           	opt stack 0
   671                           
   672                           ; 3 bytes @ 0x34
   673  000134                     	ds	3
   674  000137                     __doprnt@flag:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0x37
   678  000137                     	ds	2
   679  000139                     __doprnt@prec:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0x39
   683  000139                     	ds	2
   684  00013B                     __doprnt@c:
   685                           	opt stack 0
   686                           
   687                           ; 1 bytes @ 0x3B
   688  00013B                     	ds	1
   689  00013C                     ?_sprintf:
   690                           	opt stack 0
   691  00013C                     sprintf@wh:
   692                           	opt stack 0
   693                           
   694                           ; 2 bytes @ 0x3C
   695  00013C                     	ds	2
   696  00013E                     sprintf@f:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0x3E
   700  00013E                     	ds	5
   701  000143                     sprintf@ap:
   702                           	opt stack 0
   703                           
   704                           ; 2 bytes @ 0x43
   705  000143                     	ds	2
   706  000145                     sprintf@pb:
   707                           	opt stack 0
   708                           
   709                           ; 4 bytes @ 0x45
   710  000145                     	ds	4
   711  000149                     main@cap_string:
   712                           	opt stack 0
   713                           
   714                           ; 16 bytes @ 0x49
   715  000149                     	ds	16
   716                           tblptru	equ	0xFF8
   717                           tblptrh	equ	0xFF7
   718                           tblptrl	equ	0xFF6
   719                           tablat	equ	0xFF5
   720                           postinc0	equ	0xFEE
   721                           wreg	equ	0xFE8
   722                           postdec1	equ	0xFE5
   723                           fsr1l	equ	0xFE1
   724                           
   725                           	psect	cstackBANK0
   726  000060                     __pcstackBANK0:
   727                           	opt stack 0
   728  000060                     i2__doprnt$1925:
   729                           	opt stack 0
   730                           
   731                           ; 3 bytes @ 0x0
   732  000060                     	ds	3
   733  000063                     i2__doprnt@exp:
   734                           	opt stack 0
   735                           
   736                           ; 2 bytes @ 0x3
   737  000063                     	ds	2
   738  000065                     i2__doprnt@val:
   739                           	opt stack 0
   740                           
   741                           ; 4 bytes @ 0x5
   742  000065                     	ds	4
   743  000069                     i2__doprnt@tmpval:
   744                           	opt stack 0
   745                           
   746                           ; 4 bytes @ 0x9
   747  000069                     	ds	4
   748  00006D                     i2__doprnt@fval:
   749                           	opt stack 0
   750                           
   751                           ; 3 bytes @ 0xD
   752  00006D                     	ds	3
   753  000070                     i2__doprnt@width:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0x10
   757  000070                     	ds	2
   758  000072                     i2__doprnt@flag:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0x12
   762  000072                     	ds	2
   763  000074                     i2__doprnt@prec:
   764                           	opt stack 0
   765                           
   766                           ; 2 bytes @ 0x14
   767  000074                     	ds	2
   768  000076                     i2__doprnt@c:
   769                           	opt stack 0
   770                           
   771                           ; 1 bytes @ 0x16
   772  000076                     	ds	1
   773  000077                     ?_printf:
   774                           	opt stack 0
   775  000077                     printf@f:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0x17
   779  000077                     	ds	11
   780  000082                     ??_INTERRUPT_InterruptManager:
   781                           
   782                           ; 1 bytes @ 0x22
   783  000082                     	ds	14
   784  000090                     ??_isdigit:
   785  000090                     ?___awmod:
   786                           	opt stack 0
   787  000090                     ?___ftpack:
   788                           	opt stack 0
   789  000090                     ?___ftneg:
   790                           	opt stack 0
   791  000090                     ?__tdiv_to_l_:
   792                           	opt stack 0
   793  000090                     ?__div_to_l_:
   794                           	opt stack 0
   795  000090                     ?___lldiv:
   796                           	opt stack 0
   797  000090                     EUSART1_Write@txData:
   798                           	opt stack 0
   799  000090                     __lcd_Port@a:
   800                           	opt stack 0
   801  000090                     TMR0_SetInterruptHandler@InterruptHandler:
   802                           	opt stack 0
   803  000090                     ___awmod@dividend:
   804                           	opt stack 0
   805  000090                     __div_to_l_@f1:
   806                           	opt stack 0
   807  000090                     ___ftpack@arg:
   808                           	opt stack 0
   809  000090                     __tdiv_to_l_@f1:
   810                           	opt stack 0
   811  000090                     ___ftge@ff1:
   812                           	opt stack 0
   813  000090                     ___ftneg@f1:
   814                           	opt stack 0
   815  000090                     ___lldiv@dividend:
   816                           	opt stack 0
   817                           
   818                           ; 4 bytes @ 0x30
   819  000090                     	ds	1
   820  000091                     ??_lcd_sendCommand:
   821  000091                     putch@txData:
   822                           	opt stack 0
   823  000091                     lcd_sendChar@temp:
   824                           	opt stack 0
   825  000091                     _isdigit$1289:
   826                           	opt stack 0
   827                           
   828                           ; 1 bytes @ 0x31
   829  000091                     	ds	1
   830  000092                     ??_TMR0_Initialize:
   831  000092                     lcd_sendCommand@a:
   832                           	opt stack 0
   833  000092                     lcd_sendChar@y:
   834                           	opt stack 0
   835  000092                     isdigit@c:
   836                           	opt stack 0
   837  000092                     ___awmod@divisor:
   838                           	opt stack 0
   839                           
   840                           ; 2 bytes @ 0x32
   841  000092                     	ds	1
   842  000093                     ??_lcd_init:
   843  000093                     lcd_sendChar@a:
   844                           	opt stack 0
   845  000093                     ___ftpack@exp:
   846                           	opt stack 0
   847  000093                     __div_to_l_@f2:
   848                           	opt stack 0
   849  000093                     __tdiv_to_l_@f2:
   850                           	opt stack 0
   851  000093                     ___ftge@ff2:
   852                           	opt stack 0
   853                           
   854                           ; 3 bytes @ 0x33
   855  000093                     	ds	1
   856  000094                     ___awmod@counter:
   857                           	opt stack 0
   858  000094                     ___ftpack@sign:
   859                           	opt stack 0
   860  000094                     lcd_sendString@a:
   861                           	opt stack 0
   862  000094                     ___lldiv@divisor:
   863                           	opt stack 0
   864                           
   865                           ; 4 bytes @ 0x34
   866  000094                     	ds	1
   867  000095                     ??___ftpack:
   868  000095                     ___awmod@sign:
   869                           	opt stack 0
   870                           
   871                           ; 1 bytes @ 0x35
   872  000095                     	ds	1
   873  000096                     ??__tdiv_to_l_:
   874  000096                     ??___ftge:
   875  000096                     ?___awdiv:
   876                           	opt stack 0
   877  000096                     lcd_sendString@i:
   878                           	opt stack 0
   879  000096                     ___awdiv@dividend:
   880                           	opt stack 0
   881  000096                     __div_to_l_@quot:
   882                           	opt stack 0
   883                           
   884                           ; 4 bytes @ 0x36
   885  000096                     	ds	2
   886  000098                     ?___ftdiv:
   887                           	opt stack 0
   888  000098                     ?___lltoft:
   889                           	opt stack 0
   890  000098                     ___awdiv@divisor:
   891                           	opt stack 0
   892  000098                     ___ftdiv@f1:
   893                           	opt stack 0
   894  000098                     ___lldiv@quotient:
   895                           	opt stack 0
   896  000098                     ___lltoft@c:
   897                           	opt stack 0
   898                           
   899                           ; 4 bytes @ 0x38
   900  000098                     	ds	1
   901  000099                     __tdiv_to_l_@quot:
   902                           	opt stack 0
   903                           
   904                           ; 4 bytes @ 0x39
   905  000099                     	ds	1
   906  00009A                     ___awdiv@counter:
   907                           	opt stack 0
   908  00009A                     __div_to_l_@cntr:
   909                           	opt stack 0
   910                           
   911                           ; 1 bytes @ 0x3A
   912  00009A                     	ds	1
   913  00009B                     ___awdiv@sign:
   914                           	opt stack 0
   915  00009B                     __div_to_l_@exp1:
   916                           	opt stack 0
   917  00009B                     ___ftdiv@f2:
   918                           	opt stack 0
   919                           
   920                           ; 3 bytes @ 0x3B
   921  00009B                     	ds	1
   922  00009C                     ??___lltoft:
   923  00009C                     ___lldiv@counter:
   924                           	opt stack 0
   925  00009C                     ___awdiv@quotient:
   926                           	opt stack 0
   927                           
   928                           ; 2 bytes @ 0x3C
   929  00009C                     	ds	1
   930  00009D                     ?___llmod:
   931                           	opt stack 0
   932  00009D                     __tdiv_to_l_@cntr:
   933                           	opt stack 0
   934  00009D                     ___llmod@dividend:
   935                           	opt stack 0
   936                           
   937                           ; 4 bytes @ 0x3D
   938  00009D                     	ds	1
   939  00009E                     ??___ftdiv:
   940  00009E                     ?___wmul:
   941                           	opt stack 0
   942  00009E                     __tdiv_to_l_@exp1:
   943                           	opt stack 0
   944  00009E                     ___wmul@multiplier:
   945                           	opt stack 0
   946                           
   947                           ; 2 bytes @ 0x3E
   948  00009E                     	ds	2
   949  0000A0                     ___lltoft@exp:
   950                           	opt stack 0
   951  0000A0                     ___wmul@multiplicand:
   952                           	opt stack 0
   953                           
   954                           ; 2 bytes @ 0x40
   955  0000A0                     	ds	1
   956  0000A1                     ___ftdiv@cntr:
   957                           	opt stack 0
   958  0000A1                     ___llmod@divisor:
   959                           	opt stack 0
   960                           
   961                           ; 4 bytes @ 0x41
   962  0000A1                     	ds	1
   963  0000A2                     ___wmul@product:
   964                           	opt stack 0
   965  0000A2                     ___ftdiv@f3:
   966                           	opt stack 0
   967                           
   968                           ; 3 bytes @ 0x42
   969  0000A2                     	ds	2
   970  0000A4                     ?___ftmul:
   971                           	opt stack 0
   972  0000A4                     ___ftmul@f1:
   973                           	opt stack 0
   974                           
   975                           ; 3 bytes @ 0x44
   976  0000A4                     	ds	1
   977  0000A5                     ___ftdiv@exp:
   978                           	opt stack 0
   979  0000A5                     ___llmod@counter:
   980                           	opt stack 0
   981                           
   982                           ; 1 bytes @ 0x45
   983  0000A5                     	ds	1
   984  0000A6                     ___ftdiv@sign:
   985                           	opt stack 0
   986                           
   987                           ; 1 bytes @ 0x46
   988  0000A6                     	ds	1
   989  0000A7                     ___ftmul@f2:
   990                           	opt stack 0
   991                           
   992                           ; 3 bytes @ 0x47
   993  0000A7                     	ds	3
   994  0000AA                     ??___ftmul:
   995                           
   996                           ; 1 bytes @ 0x4A
   997  0000AA                     	ds	3
   998  0000AD                     ___ftmul@exp:
   999                           	opt stack 0
  1000                           
  1001                           ; 1 bytes @ 0x4D
  1002  0000AD                     	ds	1
  1003  0000AE                     ___ftmul@f3_as_product:
  1004                           	opt stack 0
  1005                           
  1006                           ; 3 bytes @ 0x4E
  1007  0000AE                     	ds	3
  1008  0000B1                     ___ftmul@cntr:
  1009                           	opt stack 0
  1010                           
  1011                           ; 1 bytes @ 0x51
  1012  0000B1                     	ds	1
  1013  0000B2                     ___ftmul@sign:
  1014                           	opt stack 0
  1015                           
  1016                           ; 1 bytes @ 0x52
  1017  0000B2                     	ds	1
  1018  0000B3                     ?_fround:
  1019                           	opt stack 0
  1020  0000B3                     ?_scale:
  1021                           	opt stack 0
  1022                           
  1023                           ; 3 bytes @ 0x53
  1024  0000B3                     	ds	3
  1025  0000B6                     tblptru	equ	0xFF8
  1026                           tblptrh	equ	0xFF7
  1027                           tblptrl	equ	0xFF6
  1028                           tablat	equ	0xFF5
  1029                           postinc0	equ	0xFEE
  1030                           wreg	equ	0xFE8
  1031                           postdec1	equ	0xFE5
  1032                           fsr1l	equ	0xFE1
  1033                           
  1034                           ; 1 bytes @ 0x56
  1035                           
  1036                           	psect	cstackCOMRAM
  1037  000001                     __pcstackCOMRAM:
  1038                           	opt stack 0
  1039  000001                     ??_SetRange:
  1040  000001                     ??i2_isdigit:
  1041  000001                     ?_TMR0_ReadTimer:
  1042                           	opt stack 0
  1043  000001                     ?i2___awmod:
  1044                           	opt stack 0
  1045  000001                     ?i2___ftpack:
  1046                           	opt stack 0
  1047  000001                     ?i2___ftneg:
  1048                           	opt stack 0
  1049  000001                     ?i2__div_to_l_:
  1050                           	opt stack 0
  1051  000001                     ?i2__tdiv_to_l_:
  1052                           	opt stack 0
  1053  000001                     ?i2___lldiv:
  1054                           	opt stack 0
  1055  000001                     i2EUSART1_Write@txData:
  1056                           	opt stack 0
  1057  000001                     i2___awmod@dividend:
  1058                           	opt stack 0
  1059  000001                     i2__div_to_l_@f1:
  1060                           	opt stack 0
  1061  000001                     i2___ftpack@arg:
  1062                           	opt stack 0
  1063  000001                     i2__tdiv_to_l_@f1:
  1064                           	opt stack 0
  1065  000001                     i2___ftge@ff1:
  1066                           	opt stack 0
  1067  000001                     i2___ftneg@f1:
  1068                           	opt stack 0
  1069  000001                     i2___lldiv@dividend:
  1070                           	opt stack 0
  1071                           
  1072                           ; 4 bytes @ 0x0
  1073  000001                     	ds	1
  1074  000002                     i2putch@txData:
  1075                           	opt stack 0
  1076  000002                     i2_isdigit$1289:
  1077                           	opt stack 0
  1078                           
  1079                           ; 1 bytes @ 0x1
  1080  000002                     	ds	1
  1081  000003                     ??_TMR0_ReadTimer:
  1082  000003                     i2isdigit@c:
  1083                           	opt stack 0
  1084  000003                     i2___awmod@divisor:
  1085                           	opt stack 0
  1086                           
  1087                           ; 2 bytes @ 0x2
  1088  000003                     	ds	1
  1089  000004                     i2___ftpack@exp:
  1090                           	opt stack 0
  1091  000004                     i2__div_to_l_@f2:
  1092                           	opt stack 0
  1093  000004                     i2__tdiv_to_l_@f2:
  1094                           	opt stack 0
  1095  000004                     i2___ftge@ff2:
  1096                           	opt stack 0
  1097                           
  1098                           ; 3 bytes @ 0x3
  1099  000004                     	ds	1
  1100  000005                     i2___awmod@counter:
  1101                           	opt stack 0
  1102  000005                     i2___ftpack@sign:
  1103                           	opt stack 0
  1104  000005                     i2___lldiv@divisor:
  1105                           	opt stack 0
  1106                           
  1107                           ; 4 bytes @ 0x4
  1108  000005                     	ds	1
  1109  000006                     ??i2___ftpack:
  1110  000006                     i2___awmod@sign:
  1111                           	opt stack 0
  1112                           
  1113                           ; 1 bytes @ 0x5
  1114  000006                     	ds	1
  1115  000007                     ??i2__tdiv_to_l_:
  1116  000007                     ??i2___ftge:
  1117  000007                     ?i2___awdiv:
  1118                           	opt stack 0
  1119  000007                     TMR0_ReadTimer@readVal:
  1120                           	opt stack 0
  1121  000007                     i2___awdiv@dividend:
  1122                           	opt stack 0
  1123  000007                     i2__div_to_l_@quot:
  1124                           	opt stack 0
  1125                           
  1126                           ; 4 bytes @ 0x6
  1127  000007                     	ds	2
  1128  000009                     ?___lwtoft:
  1129                           	opt stack 0
  1130  000009                     ?i2___lltoft:
  1131                           	opt stack 0
  1132  000009                     TMR0_ReadTimer@readValLow:
  1133                           	opt stack 0
  1134  000009                     ___lwtoft@c:
  1135                           	opt stack 0
  1136  000009                     i2___awdiv@divisor:
  1137                           	opt stack 0
  1138  000009                     i2___lldiv@quotient:
  1139                           	opt stack 0
  1140  000009                     i2___lltoft@c:
  1141                           	opt stack 0
  1142                           
  1143                           ; 4 bytes @ 0x8
  1144  000009                     	ds	1
  1145  00000A                     TMR0_ReadTimer@readValHigh:
  1146                           	opt stack 0
  1147  00000A                     i2__tdiv_to_l_@quot:
  1148                           	opt stack 0
  1149                           
  1150                           ; 4 bytes @ 0x9
  1151  00000A                     	ds	1
  1152  00000B                     SetRange@new_range:
  1153                           	opt stack 0
  1154  00000B                     i2___awdiv@counter:
  1155                           	opt stack 0
  1156  00000B                     i2__div_to_l_@cntr:
  1157                           	opt stack 0
  1158                           
  1159                           ; 1 bytes @ 0xA
  1160  00000B                     	ds	1
  1161  00000C                     ??_TMR0_DefaultInterruptHandler:
  1162  00000C                     i2___awdiv@sign:
  1163                           	opt stack 0
  1164  00000C                     i2__div_to_l_@exp1:
  1165                           	opt stack 0
  1166                           
  1167                           ; 1 bytes @ 0xB
  1168  00000C                     	ds	1
  1169  00000D                     ??i2___lltoft:
  1170  00000D                     i2___lldiv@counter:
  1171                           	opt stack 0
  1172  00000D                     i2___awdiv@quotient:
  1173                           	opt stack 0
  1174                           
  1175                           ; 2 bytes @ 0xC
  1176  00000D                     	ds	1
  1177  00000E                     ?i2___llmod:
  1178                           	opt stack 0
  1179  00000E                     i2__tdiv_to_l_@cntr:
  1180                           	opt stack 0
  1181  00000E                     i2___llmod@dividend:
  1182                           	opt stack 0
  1183                           
  1184                           ; 4 bytes @ 0xD
  1185  00000E                     	ds	1
  1186  00000F                     ?i2___wmul:
  1187                           	opt stack 0
  1188  00000F                     i2__tdiv_to_l_@exp1:
  1189                           	opt stack 0
  1190  00000F                     i2___wmul@multiplier:
  1191                           	opt stack 0
  1192                           
  1193                           ; 2 bytes @ 0xE
  1194  00000F                     	ds	2
  1195  000011                     i2___lltoft@exp:
  1196                           	opt stack 0
  1197  000011                     i2___wmul@multiplicand:
  1198                           	opt stack 0
  1199                           
  1200                           ; 2 bytes @ 0x10
  1201  000011                     	ds	1
  1202  000012                     i2___llmod@divisor:
  1203                           	opt stack 0
  1204                           
  1205                           ; 4 bytes @ 0x11
  1206  000012                     	ds	1
  1207  000013                     i2___wmul@product:
  1208                           	opt stack 0
  1209                           
  1210                           ; 2 bytes @ 0x12
  1211  000013                     	ds	2
  1212  000015                     ?i2___ftadd:
  1213                           	opt stack 0
  1214  000015                     i2___ftadd@f1:
  1215                           	opt stack 0
  1216                           
  1217                           ; 3 bytes @ 0x14
  1218  000015                     	ds	1
  1219  000016                     i2___llmod@counter:
  1220                           	opt stack 0
  1221                           
  1222                           ; 1 bytes @ 0x15
  1223  000016                     	ds	2
  1224  000018                     i2___ftadd@f2:
  1225                           	opt stack 0
  1226                           
  1227                           ; 3 bytes @ 0x17
  1228  000018                     	ds	3
  1229  00001B                     ??i2___ftadd:
  1230                           
  1231                           ; 1 bytes @ 0x1A
  1232  00001B                     	ds	3
  1233  00001E                     i2___ftadd@sign:
  1234                           	opt stack 0
  1235                           
  1236                           ; 1 bytes @ 0x1D
  1237  00001E                     	ds	1
  1238  00001F                     i2___ftadd@exp2:
  1239                           	opt stack 0
  1240                           
  1241                           ; 1 bytes @ 0x1E
  1242  00001F                     	ds	1
  1243  000020                     i2___ftadd@exp1:
  1244                           	opt stack 0
  1245                           
  1246                           ; 1 bytes @ 0x1F
  1247  000020                     	ds	1
  1248  000021                     ?i2___ftmul:
  1249                           	opt stack 0
  1250  000021                     ?i2___ftsub:
  1251                           	opt stack 0
  1252  000021                     i2___ftmul@f1:
  1253                           	opt stack 0
  1254  000021                     i2___ftsub@f1:
  1255                           	opt stack 0
  1256                           
  1257                           ; 3 bytes @ 0x20
  1258  000021                     	ds	3
  1259  000024                     i2___ftmul@f2:
  1260                           	opt stack 0
  1261  000024                     i2___ftsub@f2:
  1262                           	opt stack 0
  1263                           
  1264                           ; 3 bytes @ 0x23
  1265  000024                     	ds	3
  1266  000027                     ??i2___ftmul:
  1267  000027                     
  1268                           ; 1 bytes @ 0x26
  1269  000027                     	ds	3
  1270  00002A                     i2___ftmul@exp:
  1271                           	opt stack 0
  1272                           
  1273                           ; 1 bytes @ 0x29
  1274  00002A                     	ds	1
  1275  00002B                     i2___ftmul@f3_as_product:
  1276                           	opt stack 0
  1277                           
  1278                           ; 3 bytes @ 0x2A
  1279  00002B                     	ds	3
  1280  00002E                     i2___ftmul@cntr:
  1281                           	opt stack 0
  1282                           
  1283                           ; 1 bytes @ 0x2D
  1284  00002E                     	ds	1
  1285  00002F                     i2___ftmul@sign:
  1286                           	opt stack 0
  1287                           
  1288                           ; 1 bytes @ 0x2E
  1289  00002F                     	ds	1
  1290  000030                     ?i2_fround:
  1291                           	opt stack 0
  1292  000030                     ?i2_scale:
  1293                           	opt stack 0
  1294  000030                     ?i2___ftdiv:
  1295                           	opt stack 0
  1296  000030                     i2___ftdiv@f1:
  1297                           	opt stack 0
  1298                           
  1299                           ; 3 bytes @ 0x2F
  1300  000030                     	ds	3
  1301  000033                     i2___ftdiv@f2:
  1302                           	opt stack 0
  1303  000033                     i2_fround$1923:
  1304                           	opt stack 0
  1305  000033                     i2_scale$1924:
  1306                           	opt stack 0
  1307                           
  1308                           ; 3 bytes @ 0x32
  1309  000033                     	ds	3
  1310  000036                     ??i2___ftdiv:
  1311  000036                     i2scale@scl:
  1312                           	opt stack 0
  1313  000036                     i2_fround$1922:
  1314                           	opt stack 0
  1315                           
  1316                           ; 3 bytes @ 0x35
  1317  000036                     	ds	1
  1318  000037                     ?i2___fttol:
  1319                           	opt stack 0
  1320  000037                     i2___fttol@f1:
  1321                           	opt stack 0
  1322                           
  1323                           ; 3 bytes @ 0x36
  1324  000037                     	ds	2
  1325  000039                     i2fround@prec:
  1326                           	opt stack 0
  1327  000039                     i2___ftdiv@cntr:
  1328                           	opt stack 0
  1329                           
  1330                           ; 1 bytes @ 0x38
  1331  000039                     	ds	1
  1332  00003A                     i2___ftdiv@f3:
  1333                           	opt stack 0
  1334                           
  1335                           ; 3 bytes @ 0x39
  1336  00003A                     	ds	1
  1337  00003B                     ??i2___fttol:
  1338                           
  1339                           ; 1 bytes @ 0x3A
  1340  00003B                     	ds	2
  1341  00003D                     i2___ftdiv@exp:
  1342                           	opt stack 0
  1343                           
  1344                           ; 1 bytes @ 0x3C
  1345  00003D                     	ds	1
  1346  00003E                     i2___ftdiv@sign:
  1347                           	opt stack 0
  1348                           
  1349                           ; 1 bytes @ 0x3D
  1350  00003E                     	ds	2
  1351  000040                     i2___fttol@sign1:
  1352                           	opt stack 0
  1353                           
  1354                           ; 1 bytes @ 0x3F
  1355  000040                     	ds	1
  1356  000041                     i2___fttol@lval:
  1357                           	opt stack 0
  1358                           
  1359                           ; 4 bytes @ 0x40
  1360  000041                     	ds	4
  1361  000045                     i2___fttol@exp1:
  1362                           	opt stack 0
  1363                           
  1364                           ; 1 bytes @ 0x44
  1365  000045                     	ds	1
  1366  000046                     ?i2__doprnt:
  1367                           	opt stack 0
  1368  000046                     i2__doprnt@pb:
  1369                           	opt stack 0
  1370                           
  1371                           ; 2 bytes @ 0x45
  1372  000046                     	ds	2
  1373  000048                     i2__doprnt@f:
  1374                           	opt stack 0
  1375                           
  1376                           ; 2 bytes @ 0x47
  1377  000048                     	ds	2
  1378  00004A                     i2__doprnt@ap:
  1379                           	opt stack 0
  1380                           
  1381                           ; 2 bytes @ 0x49
  1382  00004A                     	ds	2
  1383  00004C                     ??i2__doprnt:
  1384                           
  1385                           ; 1 bytes @ 0x4B
  1386  00004C                     	ds	6
  1387  000052                     printf@ap:
  1388                           	opt stack 0
  1389                           
  1390                           ; 2 bytes @ 0x51
  1391  000052                     	ds	2
  1392  000054                     printf@pb:
  1393                           	opt stack 0
  1394                           
  1395                           ; 4 bytes @ 0x53
  1396  000054                     	ds	4
  1397  000058                     tblptru	equ	0xFF8
  1398                           tblptrh	equ	0xFF7
  1399                           tblptrl	equ	0xFF6
  1400                           tablat	equ	0xFF5
  1401                           postinc0	equ	0xFEE
  1402                           wreg	equ	0xFE8
  1403                           postdec1	equ	0xFE5
  1404                           fsr1l	equ	0xFE1
  1405                           
  1406                           ; 1 bytes @ 0x57
  1407 ;;
  1408 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1409 ;;
  1410 ;; *************** function _main *****************
  1411 ;; Defined at:
  1412 ;;		line 8 in file "main.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;  cap_string     16   73[BANK1 ] unsigned char [16]
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1426 ;;      Params:         0       0       0       0       0       0       0
  1427 ;;      Locals:         0       0      16       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0
  1429 ;;      Totals:         0       0      16       0       0       0       0
  1430 ;;Total ram usage:       16 bytes
  1431 ;; Hardware stack levels required when called:   12
  1432 ;; This function calls:
  1433 ;;		_SYSTEM_Initialize
  1434 ;;		___ftdiv
  1435 ;;		___ftge
  1436 ;;		_lcd_clear
  1437 ;;		_lcd_init
  1438 ;;		_lcd_sendString
  1439 ;;		_sprintf
  1440 ;; This function is called by:
  1441 ;;		Startup code after reset
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           	psect	text0
  1446  004150                     __ptext0:
  1447                           	opt stack 0
  1448  004150                     _main:
  1449                           	opt stack 19
  1450                           
  1451                           ;main.c: 11: SYSTEM_Initialize();
  1452                           
  1453                           ;incstack = 0
  1454  004150  EC5C  F02D         	call	_SYSTEM_Initialize	;wreg free
  1455                           
  1456                           ;main.c: 30: (INTCONbits.GIE = 1);
  1457  004154  8EF2               	bsf	intcon,7,c	;volatile
  1458                           
  1459                           ;main.c: 33: (INTCONbits.PEIE = 1);
  1460  004156  8CF2               	bsf	intcon,6,c	;volatile
  1461                           
  1462                           ;main.c: 41: lcd_init();
  1463  004158  EC15  F02A         	call	_lcd_init	;wreg free
  1464                           
  1465                           ;main.c: 42: lcd_clear();
  1466  00415C  EC85  F02D         	call	_lcd_clear	;wreg free
  1467                           
  1468                           ;main.c: 46: LATC |= (1 << 0) | (1 << 1) | (1 << 2) | (1 << 3) | (1 << 4);
  1469  004160  0E1F               	movlw	31
  1470  004162  128B               	iorwf	3979,f,c	;volatile
  1471                           
  1472                           ;main.c: 47: LATB |= (1 << 2) | (1 << 3) | (1 << 4) | (1 << 5);
  1473  004164  0E3C               	movlw	60
  1474  004166  128A               	iorwf	3978,f,c	;volatile
  1475                           
  1476                           ;main.c: 50: LATC &= ~(1 << 1);
  1477  004168  928B               	bcf	3979,1,c	;volatile
  1478                           
  1479                           ;main.c: 51: LATB &= ~(1 << 3);
  1480  00416A  968A               	bcf	3978,3,c	;volatile
  1481  00416C                     l259:
  1482                           
  1483                           ;main.c: 54: {
  1484                           ;main.c: 56: char cap_string[16];
  1485                           ;main.c: 59: if (result >= 1000000.0)
  1486  00416C  C058  F090         	movff	_result,___ftge@ff1
  1487  004170  C059  F091         	movff	_result+1,___ftge@ff1+1
  1488  004174  C05A  F092         	movff	_result+2,___ftge@ff1+2
  1489  004178  0E24               	movlw	36
  1490  00417A  0100               	movlb	0	; () banked
  1491  00417C  6F93               	movwf	___ftge@ff2& (0+255),b
  1492  00417E  0E74               	movlw	116
  1493  004180  0100               	movlb	0	; () banked
  1494  004182  6F94               	movwf	(___ftge@ff2+1)& (0+255),b
  1495  004184  0E49               	movlw	73
  1496  004186  0100               	movlb	0	; () banked
  1497  004188  6F95               	movwf	(___ftge@ff2+2)& (0+255),b
  1498  00418A  ECF6  F026         	call	___ftge	;wreg free
  1499  00418E  0100               	movlb	0	; () banked
  1500  004190  A0D8               	btfss	status,0,c
  1501  004192  D026               	goto	l9971
  1502                           
  1503                           ; BSR set to: 0
  1504                           ;main.c: 60: {
  1505                           ;main.c: 61: sprintf(cap_string, "C=%12.6fuF", result / 1000000.0);
  1506  004194  0E49               	movlw	low main@cap_string
  1507  004196  0101               	movlb	1	; () banked
  1508  004198  6F3C               	movwf	sprintf@wh& (0+255),b
  1509  00419A  0E01               	movlw	high main@cap_string
  1510  00419C  0101               	movlb	1	; () banked
  1511  00419E  6F3D               	movwf	(sprintf@wh+1)& (0+255),b
  1512  0041A0  0EF2               	movlw	low STR_3
  1513  0041A2  0101               	movlb	1	; () banked
  1514  0041A4  6F3E               	movwf	sprintf@f& (0+255),b
  1515  0041A6  0E06               	movlw	high STR_3
  1516  0041A8  0101               	movlb	1	; () banked
  1517  0041AA  6F3F               	movwf	(sprintf@f+1)& (0+255),b
  1518  0041AC  C058  F098         	movff	_result,___ftdiv@f1
  1519  0041B0  C059  F099         	movff	_result+1,___ftdiv@f1+1
  1520  0041B4  C05A  F09A         	movff	_result+2,___ftdiv@f1+2
  1521  0041B8  0E24               	movlw	36
  1522  0041BA  0100               	movlb	0	; () banked
  1523  0041BC  6F9B               	movwf	___ftdiv@f2& (0+255),b
  1524  0041BE  0E74               	movlw	116
  1525  0041C0  0100               	movlb	0	; () banked
  1526  0041C2  6F9C               	movwf	(___ftdiv@f2+1)& (0+255),b
  1527  0041C4  0E49               	movlw	73
  1528  0041C6  0100               	movlb	0	; () banked
  1529  0041C8  6F9D               	movwf	(___ftdiv@f2+2)& (0+255),b
  1530  0041CA  EC0A  F022         	call	___ftdiv	;wreg free
  1531  0041CE  C098  F140         	movff	?___ftdiv,?_sprintf+4
  1532  0041D2  C099  F141         	movff	?___ftdiv+1,?_sprintf+5
  1533  0041D6  C09A  F142         	movff	?___ftdiv+2,?_sprintf+6
  1534  0041DA  EC1D  F02B         	call	_sprintf	;wreg free
  1535                           
  1536                           ;main.c: 62: }
  1537  0041DE  D062               	goto	l9979
  1538  0041E0                     l9971:
  1539                           
  1540                           ;main.c: 63: else if (result < 1000000 && result >= 1000.0)
  1541  0041E0  C058  F090         	movff	_result,___ftge@ff1
  1542  0041E4  C059  F091         	movff	_result+1,___ftge@ff1+1
  1543  0041E8  C05A  F092         	movff	_result+2,___ftge@ff1+2
  1544  0041EC  0E24               	movlw	36
  1545  0041EE  0100               	movlb	0	; () banked
  1546  0041F0  6F93               	movwf	___ftge@ff2& (0+255),b
  1547  0041F2  0E74               	movlw	116
  1548  0041F4  0100               	movlb	0	; () banked
  1549  0041F6  6F94               	movwf	(___ftge@ff2+1)& (0+255),b
  1550  0041F8  0E49               	movlw	73
  1551  0041FA  0100               	movlb	0	; () banked
  1552  0041FC  6F95               	movwf	(___ftge@ff2+2)& (0+255),b
  1553  0041FE  ECF6  F026         	call	___ftge	;wreg free
  1554  004202  0100               	movlb	0	; () banked
  1555  004204  B0D8               	btfsc	status,0,c
  1556  004206  D03A               	goto	l9977
  1557                           
  1558                           ; BSR set to: 0
  1559  004208  C058  F090         	movff	_result,___ftge@ff1
  1560  00420C  C059  F091         	movff	_result+1,___ftge@ff1+1
  1561  004210  C05A  F092         	movff	_result+2,___ftge@ff1+2
  1562  004214  0E00               	movlw	0
  1563  004216  0100               	movlb	0	; () banked
  1564  004218  6F93               	movwf	___ftge@ff2& (0+255),b
  1565  00421A  0E7A               	movlw	122
  1566  00421C  0100               	movlb	0	; () banked
  1567  00421E  6F94               	movwf	(___ftge@ff2+1)& (0+255),b
  1568  004220  0E44               	movlw	68
  1569  004222  0100               	movlb	0	; () banked
  1570  004224  6F95               	movwf	(___ftge@ff2+2)& (0+255),b
  1571  004226  ECF6  F026         	call	___ftge	;wreg free
  1572  00422A  0100               	movlb	0	; () banked
  1573  00422C  A0D8               	btfss	status,0,c
  1574  00422E  D026               	goto	l9977
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;main.c: 64: {
  1578                           ;main.c: 65: sprintf(cap_string, "C=%12.3fnF", result / 1000.0);
  1579  004230  0E49               	movlw	low main@cap_string
  1580  004232  0101               	movlb	1	; () banked
  1581  004234  6F3C               	movwf	sprintf@wh& (0+255),b
  1582  004236  0E01               	movlw	high main@cap_string
  1583  004238  0101               	movlb	1	; () banked
  1584  00423A  6F3D               	movwf	(sprintf@wh+1)& (0+255),b
  1585  00423C  0EDC               	movlw	low STR_4
  1586  00423E  0101               	movlb	1	; () banked
  1587  004240  6F3E               	movwf	sprintf@f& (0+255),b
  1588  004242  0E06               	movlw	high STR_4
  1589  004244  0101               	movlb	1	; () banked
  1590  004246  6F3F               	movwf	(sprintf@f+1)& (0+255),b
  1591  004248  C058  F098         	movff	_result,___ftdiv@f1
  1592  00424C  C059  F099         	movff	_result+1,___ftdiv@f1+1
  1593  004250  C05A  F09A         	movff	_result+2,___ftdiv@f1+2
  1594  004254  0E00               	movlw	0
  1595  004256  0100               	movlb	0	; () banked
  1596  004258  6F9B               	movwf	___ftdiv@f2& (0+255),b
  1597  00425A  0E7A               	movlw	122
  1598  00425C  0100               	movlb	0	; () banked
  1599  00425E  6F9C               	movwf	(___ftdiv@f2+1)& (0+255),b
  1600  004260  0E44               	movlw	68
  1601  004262  0100               	movlb	0	; () banked
  1602  004264  6F9D               	movwf	(___ftdiv@f2+2)& (0+255),b
  1603  004266  EC0A  F022         	call	___ftdiv	;wreg free
  1604  00426A  C098  F140         	movff	?___ftdiv,?_sprintf+4
  1605  00426E  C099  F141         	movff	?___ftdiv+1,?_sprintf+5
  1606  004272  C09A  F142         	movff	?___ftdiv+2,?_sprintf+6
  1607  004276  EC1D  F02B         	call	_sprintf	;wreg free
  1608                           
  1609                           ;main.c: 66: }
  1610  00427A  D014               	goto	l9979
  1611  00427C                     l9977:
  1612                           
  1613                           ;main.c: 67: else
  1614                           ;main.c: 68: {
  1615                           ;main.c: 69: sprintf(cap_string, "C=%12.0fpF", result);
  1616  00427C  0E49               	movlw	low main@cap_string
  1617  00427E  0101               	movlb	1	; () banked
  1618  004280  6F3C               	movwf	sprintf@wh& (0+255),b
  1619  004282  0E01               	movlw	high main@cap_string
  1620  004284  0101               	movlb	1	; () banked
  1621  004286  6F3D               	movwf	(sprintf@wh+1)& (0+255),b
  1622  004288  0EE7               	movlw	low STR_5
  1623  00428A  0101               	movlb	1	; () banked
  1624  00428C  6F3E               	movwf	sprintf@f& (0+255),b
  1625  00428E  0E06               	movlw	high STR_5
  1626  004290  0101               	movlb	1	; () banked
  1627  004292  6F3F               	movwf	(sprintf@f+1)& (0+255),b
  1628  004294  C058  F140         	movff	_result,?_sprintf+4
  1629  004298  C059  F141         	movff	_result+1,?_sprintf+5
  1630  00429C  C05A  F142         	movff	_result+2,?_sprintf+6
  1631  0042A0  EC1D  F02B         	call	_sprintf	;wreg free
  1632  0042A4                     l9979:
  1633                           
  1634                           ;main.c: 70: }
  1635                           ;main.c: 72: lcd_sendString(cap_string);
  1636  0042A4  0E49               	movlw	low main@cap_string
  1637  0042A6  0100               	movlb	0	; () banked
  1638  0042A8  6F94               	movwf	lcd_sendString@a& (0+255),b
  1639  0042AA  0E01               	movlw	high main@cap_string
  1640  0042AC  0100               	movlb	0	; () banked
  1641  0042AE  6F95               	movwf	(lcd_sendString@a+1)& (0+255),b
  1642  0042B0  EC6C  F02B         	call	_lcd_sendString	;wreg free
  1643  0042B4  D75B               	goto	l259
  1644  0042B6                     __end_of_main:
  1645                           	opt stack 0
  1646                           tblptru	equ	0xFF8
  1647                           tblptrh	equ	0xFF7
  1648                           tblptrl	equ	0xFF6
  1649                           tablat	equ	0xFF5
  1650                           intcon	equ	0xFF2
  1651                           postinc0	equ	0xFEE
  1652                           wreg	equ	0xFE8
  1653                           postdec1	equ	0xFE5
  1654                           fsr1l	equ	0xFE1
  1655                           status	equ	0xFD8
  1656                           
  1657 ;; *************** function _sprintf *****************
  1658 ;; Defined at:
  1659 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprintf.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;  wh              2   60[BANK1 ] PTR unsigned char 
  1662 ;;		 -> ftoa@buf(17), main@cap_string(16), 
  1663 ;;  f               2   62[BANK1 ] PTR const unsigned char 
  1664 ;;		 -> STR_6(11), STR_5(11), STR_4(11), STR_3(11), 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  pb              4   69[BANK1 ] struct __prbuf
  1667 ;;  ap              2   67[BANK1 ] PTR void [1]
  1668 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  2   60[BANK1 ] int 
  1671 ;; Registers used:
  1672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1678 ;;      Params:         0       0       7       0       0       0       0
  1679 ;;      Locals:         0       0       6       0       0       0       0
  1680 ;;      Temps:          0       0       0       0       0       0       0
  1681 ;;      Totals:         0       0      13       0       0       0       0
  1682 ;;Total ram usage:       13 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; Hardware stack levels required when called:   11
  1685 ;; This function calls:
  1686 ;;		__doprnt
  1687 ;; This function is called by:
  1688 ;;		_main
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           	psect	text1
  1693  00563A                     __ptext1:
  1694                           	opt stack 0
  1695  00563A                     _sprintf:
  1696                           	opt stack 19
  1697                           
  1698                           ;incstack = 0
  1699  00563A  C13C  F145         	movff	sprintf@wh,sprintf@pb
  1700  00563E  C13D  F146         	movff	sprintf@wh+1,sprintf@pb+1
  1701  005642  0E00               	movlw	0
  1702  005644  0101               	movlb	1	; () banked
  1703  005646  6F47               	movwf	(sprintf@pb+2)& (0+255),b
  1704  005648  0E00               	movlw	0
  1705  00564A  0101               	movlb	1	; () banked
  1706  00564C  6F48               	movwf	(sprintf@pb+3)& (0+255),b
  1707  00564E  0E40               	movlw	low (?_sprintf+4)
  1708  005650  0101               	movlb	1	; () banked
  1709  005652  6F43               	movwf	sprintf@ap& (0+255),b
  1710  005654  0E01               	movlw	high (?_sprintf+4)
  1711  005656  0101               	movlb	1	; () banked
  1712  005658  6F44               	movwf	(sprintf@ap+1)& (0+255),b
  1713                           
  1714                           ; BSR set to: 1
  1715  00565A  0E45               	movlw	low sprintf@pb
  1716  00565C  0101               	movlb	1	; () banked
  1717  00565E  6F19               	movwf	__doprnt@pb& (0+255),b
  1718  005660  0E01               	movlw	high sprintf@pb
  1719  005662  0101               	movlb	1	; () banked
  1720  005664  6F1A               	movwf	(__doprnt@pb+1)& (0+255),b
  1721  005666  C13E  F11B         	movff	sprintf@f,__doprnt@f
  1722  00566A  C13F  F11C         	movff	sprintf@f+1,__doprnt@f+1
  1723  00566E  0E43               	movlw	low sprintf@ap
  1724  005670  0101               	movlb	1	; () banked
  1725  005672  6F1D               	movwf	__doprnt@ap& (0+255),b
  1726  005674  0E01               	movlw	high sprintf@ap
  1727  005676  0101               	movlb	1	; () banked
  1728  005678  6F1E               	movwf	(__doprnt@ap+1)& (0+255),b
  1729  00567A  EC7F  F003         	call	__doprnt	;wreg free
  1730  00567E  C145  FFD9         	movff	sprintf@pb,fsr2l
  1731  005682  C146  FFDA         	movff	sprintf@pb+1,fsr2h
  1732  005686  0E00               	movlw	0
  1733  005688  6EDF               	movwf	indf2,c
  1734  00568A  0012               	return	
  1735  00568C                     __end_of_sprintf:
  1736                           	opt stack 0
  1737                           tblptru	equ	0xFF8
  1738                           tblptrh	equ	0xFF7
  1739                           tblptrl	equ	0xFF6
  1740                           tablat	equ	0xFF5
  1741                           intcon	equ	0xFF2
  1742                           postinc0	equ	0xFEE
  1743                           wreg	equ	0xFE8
  1744                           postdec1	equ	0xFE5
  1745                           fsr1l	equ	0xFE1
  1746                           indf2	equ	0xFDF
  1747                           fsr2h	equ	0xFDA
  1748                           fsr2l	equ	0xFD9
  1749                           status	equ	0xFD8
  1750                           
  1751 ;; *************** function __doprnt *****************
  1752 ;; Defined at:
  1753 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  pb              2   25[BANK1 ] PTR struct __prbuf
  1756 ;;		 -> sprintf@pb(4), printf@pb(4), 
  1757 ;;  f               2   27[BANK1 ] PTR const unsigned char 
  1758 ;;		 -> STR_6(11), STR_5(11), STR_4(11), STR_3(11), 
  1759 ;;		 -> STR_2(53), STR_1(12), 
  1760 ;;  ap              2   29[BANK1 ] PTR PTR void 
  1761 ;;		 -> sprintf@ap(2), printf@ap(2), 
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;  tmpval          4   46[BANK1 ] struct .
  1764 ;;  val             4   42[BANK1 ] unsigned long 
  1765 ;;  fval            3   52[BANK1 ] unsigned long 
  1766 ;;  cp              3    0        PTR const unsigned char 
  1767 ;;  prec            2   57[BANK1 ] int 
  1768 ;;  flag            2   55[BANK1 ] unsigned short 
  1769 ;;  width           2   50[BANK1 ] int 
  1770 ;;  exp             2   40[BANK1 ] int 
  1771 ;;  len             2    0        unsigned int 
  1772 ;;  c               1   59[BANK1 ] char 
  1773 ;;  d               1    0        unsigned char 
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  2   25[BANK1 ] int 
  1776 ;; Registers used:
  1777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1783 ;;      Params:         0       0       6       0       0       0       0
  1784 ;;      Locals:         0       0      23       0       0       0       0
  1785 ;;      Temps:          0       0       6       0       0       0       0
  1786 ;;      Totals:         0       0      35       0       0       0       0
  1787 ;;Total ram usage:       35 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:   10
  1790 ;; This function calls:
  1791 ;;		Absolute function
  1792 ;;		___awdiv
  1793 ;;		___ftadd
  1794 ;;		___ftge
  1795 ;;		___ftmul
  1796 ;;		___ftneg
  1797 ;;		___ftsub
  1798 ;;		___fttol
  1799 ;;		___lldiv
  1800 ;;		___llmod
  1801 ;;		___lltoft
  1802 ;;		___wmul
  1803 ;;		__div_to_l_
  1804 ;;		__tdiv_to_l_
  1805 ;;		_fround
  1806 ;;		_isdigit
  1807 ;;		_putch
  1808 ;;		_scale
  1809 ;; This function is called by:
  1810 ;;		_sprintf
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           	psect	text2
  1815  0006FE                     __ptext2:
  1816                           	opt stack 0
  1817  0006FE                     __doprnt:
  1818                           	opt stack 19
  1819                           
  1820                           ;doprnt.c: 499: signed char c;
  1821                           ;doprnt.c: 501: int width;
  1822                           ;doprnt.c: 504: int prec;
  1823                           ;doprnt.c: 508: unsigned short flag;
  1824                           ;doprnt.c: 515: char d;
  1825                           ;doprnt.c: 516: double fval;
  1826                           ;doprnt.c: 517: int exp;
  1827                           ;doprnt.c: 523: union {
  1828                           ;doprnt.c: 524: unsigned long vd;
  1829                           ;doprnt.c: 525: double integ;
  1830                           ;doprnt.c: 526: } tmpval;
  1831                           ;doprnt.c: 528: unsigned long val;
  1832                           ;doprnt.c: 529: unsigned len;
  1833                           ;doprnt.c: 530: const char * cp;
  1834                           ;doprnt.c: 536: while(c = *f++) {
  1835                           
  1836                           ;incstack = 0
  1837  0006FE  EFA0  F00C         	goto	l9861
  1838  000702                     l9473:
  1839                           
  1840                           ;doprnt.c: 538: if(c != '%')
  1841  000702  0E25               	movlw	37
  1842  000704  0101               	movlb	1	; () banked
  1843  000706  193B               	xorwf	__doprnt@c& (0+255),w,b
  1844  000708  B4D8               	btfsc	status,2,c
  1845  00070A  D038               	goto	l9483
  1846                           
  1847                           ; BSR set to: 1
  1848                           ;doprnt.c: 540: {
  1849                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  1850  00070C  0101               	movlb	1	; () banked
  1851  00070E  EE20 F002          	lfsr	2,2
  1852  000712  5119               	movf	__doprnt@pb& (0+255),w,b
  1853  000714  26D9               	addwf	fsr2l,f,c
  1854  000716  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  1855  000718  22DA               	addwfc	fsr2h,f,c
  1856  00071A  50DE               	movf	postinc2,w,c
  1857  00071C  10DE               	iorwf	postinc2,w,c
  1858  00071E  B4D8               	btfsc	status,2,c
  1859  000720  D016               	goto	l9479
  1860                           
  1861                           ; BSR set to: 1
  1862  000722  0101               	movlb	1	; () banked
  1863  000724  EE20 F002          	lfsr	2,2
  1864  000728  5119               	movf	__doprnt@pb& (0+255),w,b
  1865  00072A  26D9               	addwf	fsr2l,f,c
  1866  00072C  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  1867  00072E  22DA               	addwfc	fsr2h,f,c
  1868  000730  D802               	call	u15888
  1869  000732  EFA0  F00C         	goto	l9861
  1870  000736                     u15888:
  1871  000736  0005               	push	
  1872  000738  6EFA               	movwf	pclath,c
  1873  00073A  50DE               	movf	postinc2,w,c
  1874  00073C  6EFD               	movwf	tosl,c
  1875  00073E  50DE               	movf	postinc2,w,c
  1876  000740  6EFE               	movwf	tosh,c
  1877  000742  50F8               	movf	tblptru,w,c
  1878  000744  6EFF               	movwf	tosu,c
  1879  000746  50FA               	movf	pclath,w,c
  1880  000748  0101               	movlb	1	; () banked
  1881  00074A  513B               	movf	__doprnt@c& (0+255),w,b
  1882  00074C  0012               	return		;indir
  1883  00074E                     l9479:
  1884  00074E  C119  FFD9         	movff	__doprnt@pb,fsr2l
  1885  000752  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  1886  000756  CFDE F11F          	movff	postinc2,??__doprnt
  1887  00075A  CFDD F120          	movff	postdec2,??__doprnt+1
  1888  00075E  C11F  FFD9         	movff	??__doprnt,fsr2l
  1889  000762  C120  FFDA         	movff	??__doprnt+1,fsr2h
  1890  000766  C13B  FFDF         	movff	__doprnt@c,indf2
  1891  00076A  C119  FFD9         	movff	__doprnt@pb,fsr2l
  1892  00076E  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  1893  000772  2ADE               	incf	postinc2,f,c
  1894  000774  0E00               	movlw	0
  1895  000776  22DD               	addwfc	postdec2,f,c
  1896                           
  1897                           ;doprnt.c: 542: continue;
  1898  000778  EFA0  F00C         	goto	l9861
  1899  00077C                     l9483:
  1900                           
  1901                           ;doprnt.c: 543: }
  1902                           ;doprnt.c: 546: width = 0;
  1903  00077C  0E00               	movlw	0
  1904  00077E  0101               	movlb	1	; () banked
  1905  000780  6F33               	movwf	(__doprnt@width+1)& (0+255),b
  1906  000782  0E00               	movlw	0
  1907  000784  6F32               	movwf	__doprnt@width& (0+255),b
  1908                           
  1909                           ;doprnt.c: 548: flag = 0;
  1910  000786  0E00               	movlw	0
  1911  000788  0101               	movlb	1	; () banked
  1912  00078A  6F38               	movwf	(__doprnt@flag+1)& (0+255),b
  1913  00078C  0E00               	movlw	0
  1914  00078E  6F37               	movwf	__doprnt@flag& (0+255),b
  1915                           
  1916                           ; BSR set to: 1
  1917                           ;doprnt.c: 551: switch(*f) {
  1918                           
  1919                           ;doprnt.c: 550: for(;;) {
  1920  000790  D005               	goto	l9489
  1921  000792                     l9485:
  1922                           
  1923                           ;doprnt.c: 580: flag |= 0x04;
  1924  000792  0101               	movlb	1	; () banked
  1925  000794  8537               	bsf	__doprnt@flag& (0+255),2,b
  1926                           
  1927                           ;doprnt.c: 581: f++;
  1928  000796  0101               	movlb	1	; () banked
  1929  000798  4B1B               	infsnz	__doprnt@f& (0+255),f,b
  1930  00079A  2B1C               	incf	(__doprnt@f+1)& (0+255),f,b
  1931  00079C                     l9489:
  1932  00079C  C11B  FFF6         	movff	__doprnt@f,tblptrl
  1933  0007A0  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  1934  0007A4                     	if	0	;tblptru may be non-zero
  1935  0007A4                     	endif
  1936  0007A4                     	if	0	;tblptru may be non-zero
  1937  0007A4                     	endif
  1938  0007A4  0008               	tblrd		*
  1939  0007A6  50F5               	movf	tablat,w,c
  1940                           
  1941                           ; Switch size 1, requested type "space"
  1942                           ; Number of cases is 1, Range of values is 48 to 48
  1943                           ; switch strategies available:
  1944                           ; Name         Instructions Cycles
  1945                           ; simple_byte            4     3 (average)
  1946                           ;	Chosen strategy is simple_byte
  1947  0007A8  0A30               	xorlw	48	; case 48
  1948  0007AA  B4D8               	btfsc	status,2,c
  1949  0007AC  D7F2               	goto	l9485
  1950                           
  1951                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1952                           
  1953                           ;doprnt.c: 586: }
  1954                           
  1955                           ;doprnt.c: 585: break;
  1956  0007AE  C11B  FFF6         	movff	__doprnt@f,tblptrl
  1957  0007B2  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  1958  0007B6                     	if	0	;tblptru may be non-zero
  1959  0007B6                     	endif
  1960  0007B6                     	if	0	;tblptru may be non-zero
  1961  0007B6                     	endif
  1962  0007B6  0008               	tblrd		*
  1963  0007B8  50F5               	movf	tablat,w,c
  1964  0007BA  ECEE  F02C         	call	_isdigit
  1965  0007BE  A0D8               	btfss	status,0,c
  1966  0007C0  D040               	goto	l9503
  1967                           
  1968                           ;doprnt.c: 598: width = 0;
  1969  0007C2  0E00               	movlw	0
  1970  0007C4  0101               	movlb	1	; () banked
  1971  0007C6  6F33               	movwf	(__doprnt@width+1)& (0+255),b
  1972  0007C8  0E00               	movlw	0
  1973  0007CA  6F32               	movwf	__doprnt@width& (0+255),b
  1974  0007CC                     l9495:
  1975                           
  1976                           ;doprnt.c: 600: width *= 10;
  1977  0007CC  C132  F09E         	movff	__doprnt@width,___wmul@multiplier
  1978  0007D0  C133  F09F         	movff	__doprnt@width+1,___wmul@multiplier+1
  1979  0007D4  0E00               	movlw	0
  1980  0007D6  0100               	movlb	0	; () banked
  1981  0007D8  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1982  0007DA  0E0A               	movlw	10
  1983  0007DC  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  1984  0007DE  EC55  F02C         	call	___wmul	;wreg free
  1985  0007E2  C09E  F132         	movff	?___wmul,__doprnt@width
  1986  0007E6  C09F  F133         	movff	?___wmul+1,__doprnt@width+1
  1987                           
  1988                           ;doprnt.c: 601: width += *f++ - '0';
  1989  0007EA  0ED0               	movlw	208
  1990  0007EC  0101               	movlb	1	; () banked
  1991  0007EE  6F1F               	movwf	??__doprnt& (0+255),b
  1992  0007F0  0EFF               	movlw	255
  1993  0007F2  0101               	movlb	1	; () banked
  1994  0007F4  6F20               	movwf	(??__doprnt+1)& (0+255),b
  1995  0007F6  C11B  FFF6         	movff	__doprnt@f,tblptrl
  1996  0007FA  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  1997  0007FE                     	if	0	;tblptru may be non-zero
  1998  0007FE                     	endif
  1999  0007FE                     	if	0	;tblptru may be non-zero
  2000  0007FE                     	endif
  2001  0007FE  0008               	tblrd		*
  2002  000800  50F5               	movf	tablat,w,c
  2003  000802  0101               	movlb	1	; () banked
  2004  000804  6F21               	movwf	(??__doprnt+2)& (0+255),b
  2005  000806  6B22               	clrf	(??__doprnt+3)& (0+255),b
  2006  000808  0101               	movlb	1	; () banked
  2007  00080A  511F               	movf	??__doprnt& (0+255),w,b
  2008  00080C  0101               	movlb	1	; () banked
  2009  00080E  2721               	addwf	(??__doprnt+2)& (0+255),f,b
  2010  000810  0101               	movlb	1	; () banked
  2011  000812  5120               	movf	(??__doprnt+1)& (0+255),w,b
  2012  000814  0101               	movlb	1	; () banked
  2013  000816  2322               	addwfc	(??__doprnt+3)& (0+255),f,b
  2014  000818  0101               	movlb	1	; () banked
  2015  00081A  5121               	movf	(??__doprnt+2)& (0+255),w,b
  2016  00081C  0101               	movlb	1	; () banked
  2017  00081E  2732               	addwf	__doprnt@width& (0+255),f,b
  2018  000820  0101               	movlb	1	; () banked
  2019  000822  5122               	movf	(??__doprnt+3)& (0+255),w,b
  2020  000824  0101               	movlb	1	; () banked
  2021  000826  2333               	addwfc	(__doprnt@width+1)& (0+255),f,b
  2022                           
  2023                           ; BSR set to: 1
  2024  000828  0101               	movlb	1	; () banked
  2025  00082A  4B1B               	infsnz	__doprnt@f& (0+255),f,b
  2026  00082C  2B1C               	incf	(__doprnt@f+1)& (0+255),f,b
  2027                           
  2028                           ; BSR set to: 1
  2029                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2030  00082E  C11B  FFF6         	movff	__doprnt@f,tblptrl
  2031  000832  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  2032  000836                     	if	0	;tblptru may be non-zero
  2033  000836                     	endif
  2034  000836                     	if	0	;tblptru may be non-zero
  2035  000836                     	endif
  2036  000836  0008               	tblrd		*
  2037  000838  50F5               	movf	tablat,w,c
  2038  00083A  ECEE  F02C         	call	_isdigit
  2039  00083E  B0D8               	btfsc	status,0,c
  2040  000840  D7C5               	goto	l9495
  2041  000842                     l9503:
  2042                           
  2043                           ;doprnt.c: 608: }
  2044                           ;doprnt.c: 611: if(*f == '.') {
  2045  000842  C11B  FFF6         	movff	__doprnt@f,tblptrl
  2046  000846  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  2047  00084A                     	if	0	;tblptru may be non-zero
  2048  00084A                     	endif
  2049  00084A                     	if	0	;tblptru may be non-zero
  2050  00084A                     	endif
  2051  00084A  0008               	tblrd		*
  2052  00084C  50F5               	movf	tablat,w,c
  2053  00084E  0A2E               	xorlw	46
  2054  000850  A4D8               	btfss	status,2,c
  2055  000852  D039               	goto	l9515
  2056                           
  2057                           ;doprnt.c: 612: flag |= 0x4000;
  2058  000854  0101               	movlb	1	; () banked
  2059  000856  8D38               	bsf	(__doprnt@flag+1)& (0+255),6,b
  2060                           
  2061                           ;doprnt.c: 613: f++;
  2062  000858  0101               	movlb	1	; () banked
  2063  00085A  4B1B               	infsnz	__doprnt@f& (0+255),f,b
  2064  00085C  2B1C               	incf	(__doprnt@f+1)& (0+255),f,b
  2065                           
  2066                           ; BSR set to: 1
  2067                           ;doprnt.c: 620: {
  2068                           ;doprnt.c: 621: prec = 0;
  2069  00085E  0E00               	movlw	0
  2070  000860  0101               	movlb	1	; () banked
  2071  000862  6F3A               	movwf	(__doprnt@prec+1)& (0+255),b
  2072  000864  0E00               	movlw	0
  2073  000866  6F39               	movwf	__doprnt@prec& (0+255),b
  2074                           
  2075                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  2076  000868  D023               	goto	l9513
  2077  00086A                     l9509:
  2078                           
  2079                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  2080  00086A  C139  F09E         	movff	__doprnt@prec,___wmul@multiplier
  2081  00086E  C13A  F09F         	movff	__doprnt@prec+1,___wmul@multiplier+1
  2082  000872  0E00               	movlw	0
  2083  000874  0100               	movlb	0	; () banked
  2084  000876  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2085  000878  0E0A               	movlw	10
  2086  00087A  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  2087  00087C  EC55  F02C         	call	___wmul	;wreg free
  2088  000880  C11B  FFF6         	movff	__doprnt@f,tblptrl
  2089  000884  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  2090  000888                     	if	0	;tblptru may be non-zero
  2091  000888                     	endif
  2092  000888                     	if	0	;tblptru may be non-zero
  2093  000888                     	endif
  2094  000888  0008               	tblrd		*
  2095  00088A  50F5               	movf	tablat,w,c
  2096  00088C  0100               	movlb	0	; () banked
  2097  00088E  279E               	addwf	?___wmul& (0+255),f,b
  2098  000890  0E00               	movlw	0
  2099  000892  0100               	movlb	0	; () banked
  2100  000894  239F               	addwfc	(?___wmul+1)& (0+255),f,b
  2101  000896  0ED0               	movlw	208
  2102  000898  0100               	movlb	0	; () banked
  2103  00089A  259E               	addwf	?___wmul& (0+255),w,b
  2104  00089C  0101               	movlb	1	; () banked
  2105  00089E  6F39               	movwf	__doprnt@prec& (0+255),b
  2106  0008A0  0EFF               	movlw	255
  2107  0008A2  0100               	movlb	0	; () banked
  2108  0008A4  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  2109  0008A6  0101               	movlb	1	; () banked
  2110  0008A8  6F3A               	movwf	(__doprnt@prec+1)& (0+255),b
  2111                           
  2112                           ; BSR set to: 1
  2113  0008AA  0101               	movlb	1	; () banked
  2114  0008AC  4B1B               	infsnz	__doprnt@f& (0+255),f,b
  2115  0008AE  2B1C               	incf	(__doprnt@f+1)& (0+255),f,b
  2116  0008B0                     l9513:
  2117                           
  2118                           ; BSR set to: 1
  2119  0008B0  C11B  FFF6         	movff	__doprnt@f,tblptrl
  2120  0008B4  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  2121  0008B8                     	if	0	;tblptru may be non-zero
  2122  0008B8                     	endif
  2123  0008B8                     	if	0	;tblptru may be non-zero
  2124  0008B8                     	endif
  2125  0008B8  0008               	tblrd		*
  2126  0008BA  50F5               	movf	tablat,w,c
  2127  0008BC  ECEE  F02C         	call	_isdigit
  2128  0008C0  A0D8               	btfss	status,0,c
  2129  0008C2  D012               	goto	l9527
  2130  0008C4  D7D2               	goto	l9509
  2131  0008C6                     l9515:
  2132                           
  2133                           ;doprnt.c: 626: prec = 0;
  2134  0008C6  0E00               	movlw	0
  2135  0008C8  0101               	movlb	1	; () banked
  2136  0008CA  6F3A               	movwf	(__doprnt@prec+1)& (0+255),b
  2137  0008CC  0E00               	movlw	0
  2138  0008CE  6F39               	movwf	__doprnt@prec& (0+255),b
  2139                           
  2140                           ; BSR set to: 1
  2141                           ;doprnt.c: 628: flag |= 0x1000;
  2142  0008D0  0101               	movlb	1	; () banked
  2143  0008D2  8938               	bsf	(__doprnt@flag+1)& (0+255),4,b
  2144                           
  2145                           ; BSR set to: 1
  2146                           ;doprnt.c: 635: switch(c = *f++) {
  2147                           
  2148                           ;doprnt.c: 630: }
  2149                           ;doprnt.c: 633: loop:
  2150                           
  2151                           ; BSR set to: 1
  2152  0008D4  D009               	goto	l9527
  2153  0008D6                     l9519:
  2154                           
  2155                           ; BSR set to: 1
  2156                           ;doprnt.c: 643: flag |= 0x10;
  2157  0008D6  0101               	movlb	1	; () banked
  2158  0008D8  8937               	bsf	__doprnt@flag& (0+255),4,b
  2159                           
  2160                           ;doprnt.c: 644: goto loop;
  2161  0008DA  D006               	goto	l9527
  2162  0008DC                     l9521:
  2163                           
  2164                           ; BSR set to: 1
  2165                           ;doprnt.c: 663: flag |= 0x400;
  2166  0008DC  0101               	movlb	1	; () banked
  2167  0008DE  8538               	bsf	(__doprnt@flag+1)& (0+255),2,b
  2168                           
  2169                           ; BSR set to: 1
  2170                           ;doprnt.c: 698: case 'i':
  2171                           ;doprnt.c: 699: break;
  2172                           
  2173                           ; BSR set to: 1
  2174                           
  2175                           ;doprnt.c: 697: case 'd':
  2176                           
  2177                           ;doprnt.c: 664: break;
  2178  0008E0  D024               	goto	l9529
  2179  0008E2                     l9523:
  2180                           
  2181                           ; BSR set to: 1
  2182                           ;doprnt.c: 818: flag |= 0x40;
  2183  0008E2  0101               	movlb	1	; () banked
  2184  0008E4  8D37               	bsf	__doprnt@flag& (0+255),6,b
  2185                           
  2186                           ; BSR set to: 1
  2187                           ;doprnt.c: 822: }
  2188                           
  2189                           ;doprnt.c: 819: break;
  2190  0008E6  D021               	goto	l9529
  2191  0008E8                     l9527:
  2192  0008E8  C11B  FFF6         	movff	__doprnt@f,tblptrl
  2193  0008EC  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  2194  0008F0  0101               	movlb	1	; () banked
  2195  0008F2  4B1B               	infsnz	__doprnt@f& (0+255),f,b
  2196  0008F4  2B1C               	incf	(__doprnt@f+1)& (0+255),f,b
  2197  0008F6                     	if	0	;tblptru may be non-zero
  2198  0008F6                     	endif
  2199  0008F6                     	if	0	;tblptru may be non-zero
  2200  0008F6                     	endif
  2201  0008F6  0008               	tblrd		*
  2202  0008F8  CFF5 F13B          	movff	tablat,__doprnt@c
  2203  0008FC  0101               	movlb	1	; () banked
  2204  0008FE  513B               	movf	__doprnt@c& (0+255),w,b
  2205                           
  2206                           ; Switch size 1, requested type "space"
  2207                           ; Number of cases is 6, Range of values is 0 to 117
  2208                           ; switch strategies available:
  2209                           ; Name         Instructions Cycles
  2210                           ; simple_byte           19    10 (average)
  2211                           ;	Chosen strategy is simple_byte
  2212  000900  0A00               	xorlw	0	; case 0
  2213  000902  B4D8               	btfsc	status,2,c
  2214  000904  EFAF  F00C         	goto	l9863
  2215  000908  0A64               	xorlw	100	; case 100
  2216  00090A  B4D8               	btfsc	status,2,c
  2217  00090C  D00E               	goto	l9529
  2218  00090E  0A02               	xorlw	2	; case 102
  2219  000910  B4D8               	btfsc	status,2,c
  2220  000912  D7E4               	goto	l9521
  2221  000914  0A0F               	xorlw	15	; case 105
  2222  000916  B4D8               	btfsc	status,2,c
  2223  000918  D008               	goto	l9529
  2224  00091A  0A05               	xorlw	5	; case 108
  2225  00091C  B4D8               	btfsc	status,2,c
  2226  00091E  D7DB               	goto	l9519
  2227  000920  0A19               	xorlw	25	; case 117
  2228  000922  B4D8               	btfsc	status,2,c
  2229  000924  D7DE               	goto	l9523
  2230  000926  EFA0  F00C         	goto	l9861
  2231  00092A                     l9529:
  2232                           
  2233                           ; BSR set to: 1
  2234                           ;doprnt.c: 825: if(flag & (0x700)) {
  2235  00092A  0E07               	movlw	7
  2236  00092C  0101               	movlb	1	; () banked
  2237  00092E  1538               	andwf	(__doprnt@flag+1)& (0+255),w,b
  2238  000930  B4D8               	btfsc	status,2,c
  2239  000932  EFD6  F009         	goto	l403
  2240                           
  2241                           ; BSR set to: 1
  2242                           ;doprnt.c: 827: if(flag & 0x1000)
  2243  000936  0101               	movlb	1	; () banked
  2244  000938  A938               	btfss	(__doprnt@flag+1)& (0+255),4,b
  2245  00093A  D005               	goto	l9535
  2246                           
  2247                           ; BSR set to: 1
  2248                           ;doprnt.c: 829: prec = 6;
  2249  00093C  0E00               	movlw	0
  2250  00093E  0101               	movlb	1	; () banked
  2251  000940  6F3A               	movwf	(__doprnt@prec+1)& (0+255),b
  2252  000942  0E06               	movlw	6
  2253  000944  6F39               	movwf	__doprnt@prec& (0+255),b
  2254  000946                     l9535:
  2255                           
  2256                           ; BSR set to: 1
  2257                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2258  000946  C11D  FFD9         	movff	__doprnt@ap,fsr2l
  2259  00094A  C11E  FFDA         	movff	__doprnt@ap+1,fsr2h
  2260  00094E  CFDF F11F          	movff	indf2,??__doprnt
  2261  000952  0E03               	movlw	3
  2262  000954  26DE               	addwf	postinc2,f,c
  2263  000956  CFDF F120          	movff	indf2,??__doprnt+1
  2264  00095A  0E00               	movlw	0
  2265  00095C  22DD               	addwfc	postdec2,f,c
  2266  00095E  C11F  FFD9         	movff	??__doprnt,fsr2l
  2267  000962  C120  FFDA         	movff	??__doprnt+1,fsr2h
  2268  000966  CFDE F134          	movff	postinc2,__doprnt@fval
  2269  00096A  CFDE F135          	movff	postinc2,__doprnt@fval+1
  2270  00096E  CFDD F136          	movff	postdec2,__doprnt@fval+2
  2271                           
  2272                           ; BSR set to: 1
  2273                           ;doprnt.c: 831: if(fval < 0.0) {
  2274  000972  0101               	movlb	1	; () banked
  2275  000974  AF36               	btfss	(__doprnt@fval+2)& (0+255),7,b
  2276  000976  D011               	goto	l9543
  2277                           
  2278                           ; BSR set to: 1
  2279                           ;doprnt.c: 832: fval = -fval;
  2280  000978  C134  F090         	movff	__doprnt@fval,___ftneg@f1
  2281  00097C  C135  F091         	movff	__doprnt@fval+1,___ftneg@f1+1
  2282  000980  C136  F092         	movff	__doprnt@fval+2,___ftneg@f1+2
  2283  000984  ECA6  F02C         	call	___ftneg	;wreg free
  2284  000988  C090  F134         	movff	?___ftneg,__doprnt@fval
  2285  00098C  C091  F135         	movff	?___ftneg+1,__doprnt@fval+1
  2286  000990  C092  F136         	movff	?___ftneg+2,__doprnt@fval+2
  2287                           
  2288                           ;doprnt.c: 833: flag |= 0x03;
  2289  000994  0E03               	movlw	3
  2290  000996  0101               	movlb	1	; () banked
  2291  000998  1337               	iorwf	__doprnt@flag& (0+255),f,b
  2292  00099A                     l9543:
  2293                           
  2294                           ; BSR set to: 1
  2295                           ;doprnt.c: 834: }
  2296                           ;doprnt.c: 835: exp = 0;
  2297  00099A  0E00               	movlw	0
  2298  00099C  0101               	movlb	1	; () banked
  2299  00099E  6F29               	movwf	(__doprnt@exp+1)& (0+255),b
  2300  0009A0  0E00               	movlw	0
  2301  0009A2  6F28               	movwf	__doprnt@exp& (0+255),b
  2302                           
  2303                           ; BSR set to: 1
  2304                           ;doprnt.c: 836: if( fval!=0) {
  2305  0009A4  0101               	movlb	1	; () banked
  2306  0009A6  5134               	movf	__doprnt@fval& (0+255),w,b
  2307  0009A8  0101               	movlb	1	; () banked
  2308  0009AA  1135               	iorwf	(__doprnt@fval+1)& (0+255),w,b
  2309  0009AC  0101               	movlb	1	; () banked
  2310  0009AE  1136               	iorwf	(__doprnt@fval+2)& (0+255),w,b
  2311  0009B0  B4D8               	btfsc	status,2,c
  2312  0009B2  D09B               	goto	l9571
  2313                           
  2314                           ; BSR set to: 1
  2315                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2316  0009B4  0E82               	movlw	130
  2317  0009B6  0101               	movlb	1	; () banked
  2318  0009B8  6F1F               	movwf	??__doprnt& (0+255),b
  2319  0009BA  0EFF               	movlw	255
  2320  0009BC  0101               	movlb	1	; () banked
  2321  0009BE  6F20               	movwf	(??__doprnt+1)& (0+255),b
  2322  0009C0  C134  F121         	movff	__doprnt@fval,??__doprnt+2
  2323  0009C4  C135  F122         	movff	__doprnt@fval+1,??__doprnt+3
  2324  0009C8  C136  F123         	movff	__doprnt@fval+2,??__doprnt+4
  2325  0009CC  C137  F124         	movff	__doprnt@fval+3,??__doprnt+5
  2326  0009D0  0E10               	movlw	16
  2327  0009D2  D006               	goto	u15970
  2328  0009D4                     u15975:
  2329  0009D4  0101               	movlb	1	; () banked
  2330  0009D6  90D8               	bcf	status,0,c
  2331  0009D8  3324               	rrcf	(??__doprnt+5)& (0+255),f,b
  2332  0009DA  3323               	rrcf	(??__doprnt+4)& (0+255),f,b
  2333  0009DC  3322               	rrcf	(??__doprnt+3)& (0+255),f,b
  2334  0009DE  3321               	rrcf	(??__doprnt+2)& (0+255),f,b
  2335  0009E0                     u15970:
  2336  0009E0  2EE8               	decfsz	wreg,f,c
  2337  0009E2  D7F8               	goto	u15975
  2338  0009E4  0101               	movlb	1	; () banked
  2339  0009E6  5121               	movf	(??__doprnt+2)& (0+255),w,b
  2340  0009E8  0101               	movlb	1	; () banked
  2341  0009EA  251F               	addwf	??__doprnt& (0+255),w,b
  2342  0009EC  0101               	movlb	1	; () banked
  2343  0009EE  6F28               	movwf	__doprnt@exp& (0+255),b
  2344  0009F0  0E00               	movlw	0
  2345  0009F2  0101               	movlb	1	; () banked
  2346  0009F4  2120               	addwfc	(??__doprnt+1)& (0+255),w,b
  2347  0009F6  0101               	movlb	1	; () banked
  2348  0009F8  6F29               	movwf	(__doprnt@exp+1)& (0+255),b
  2349                           
  2350                           ; BSR set to: 1
  2351                           ;doprnt.c: 838: exp--;
  2352  0009FA  0101               	movlb	1	; () banked
  2353  0009FC  0728               	decf	__doprnt@exp& (0+255),f,b
  2354  0009FE  A0D8               	btfss	status,0,c
  2355  000A00  0729               	decf	(__doprnt@exp+1)& (0+255),f,b
  2356                           
  2357                           ; BSR set to: 1
  2358                           ;doprnt.c: 839: exp *= 3;
  2359  000A02  C128  F09E         	movff	__doprnt@exp,___wmul@multiplier
  2360  000A06  C129  F09F         	movff	__doprnt@exp+1,___wmul@multiplier+1
  2361  000A0A  0E00               	movlw	0
  2362  000A0C  0100               	movlb	0	; () banked
  2363  000A0E  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2364  000A10  0E03               	movlw	3
  2365  000A12  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  2366  000A14  EC55  F02C         	call	___wmul	;wreg free
  2367  000A18  C09E  F128         	movff	?___wmul,__doprnt@exp
  2368  000A1C  C09F  F129         	movff	?___wmul+1,__doprnt@exp+1
  2369                           
  2370                           ;doprnt.c: 840: exp /= 10;
  2371  000A20  C128  F096         	movff	__doprnt@exp,___awdiv@dividend
  2372  000A24  C129  F097         	movff	__doprnt@exp+1,___awdiv@dividend+1
  2373  000A28  0E00               	movlw	0
  2374  000A2A  0100               	movlb	0	; () banked
  2375  000A2C  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  2376  000A2E  0E0A               	movlw	10
  2377  000A30  6F98               	movwf	___awdiv@divisor& (0+255),b
  2378  000A32  EC5A  F027         	call	___awdiv	;wreg free
  2379  000A36  C096  F128         	movff	?___awdiv,__doprnt@exp
  2380  000A3A  C097  F129         	movff	?___awdiv+1,__doprnt@exp+1
  2381                           
  2382                           ;doprnt.c: 841: if(exp < 0)
  2383  000A3E  0101               	movlb	1	; () banked
  2384  000A40  AF29               	btfss	(__doprnt@exp+1)& (0+255),7,b
  2385  000A42  D004               	goto	l9559
  2386                           
  2387                           ; BSR set to: 1
  2388                           ;doprnt.c: 842: exp--;
  2389  000A44  0101               	movlb	1	; () banked
  2390  000A46  0728               	decf	__doprnt@exp& (0+255),f,b
  2391  000A48  A0D8               	btfss	status,0,c
  2392  000A4A  0729               	decf	(__doprnt@exp+1)& (0+255),f,b
  2393  000A4C                     l9559:
  2394                           
  2395                           ; BSR set to: 1
  2396                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2397  000A4C  0101               	movlb	1	; () banked
  2398  000A4E  5128               	movf	__doprnt@exp& (0+255),w,b
  2399  000A50  0800               	sublw	0
  2400  000A52  EC71  F015         	call	_scale
  2401  000A56  C0B3  F12E         	movff	?_scale,__doprnt@tmpval
  2402  000A5A  C0B4  F12F         	movff	?_scale+1,__doprnt@tmpval+1
  2403  000A5E  C0B5  F130         	movff	?_scale+2,__doprnt@tmpval+2
  2404                           
  2405                           ;doprnt.c: 847: tmpval.integ *= fval;
  2406  000A62  C12E  F0A4         	movff	__doprnt@tmpval,___ftmul@f1
  2407  000A66  C12F  F0A5         	movff	__doprnt@tmpval+1,___ftmul@f1+1
  2408  000A6A  C130  F0A6         	movff	__doprnt@tmpval+2,___ftmul@f1+2
  2409  000A6E  C134  F0A7         	movff	__doprnt@fval,___ftmul@f2
  2410  000A72  C135  F0A8         	movff	__doprnt@fval+1,___ftmul@f2+1
  2411  000A76  C136  F0A9         	movff	__doprnt@fval+2,___ftmul@f2+2
  2412  000A7A  EC5B  F021         	call	___ftmul	;wreg free
  2413  000A7E  C0A4  F12E         	movff	?___ftmul,__doprnt@tmpval
  2414  000A82  C0A5  F12F         	movff	?___ftmul+1,__doprnt@tmpval+1
  2415  000A86  C0A6  F130         	movff	?___ftmul+2,__doprnt@tmpval+2
  2416                           
  2417                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2418  000A8A  C12E  F090         	movff	__doprnt@tmpval,___ftge@ff1
  2419  000A8E  C12F  F091         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  2420  000A92  C130  F092         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  2421  000A96  0E00               	movlw	0
  2422  000A98  0100               	movlb	0	; () banked
  2423  000A9A  6F93               	movwf	___ftge@ff2& (0+255),b
  2424  000A9C  0E80               	movlw	128
  2425  000A9E  0100               	movlb	0	; () banked
  2426  000AA0  6F94               	movwf	(___ftge@ff2+1)& (0+255),b
  2427  000AA2  0E3F               	movlw	63
  2428  000AA4  0100               	movlb	0	; () banked
  2429  000AA6  6F95               	movwf	(___ftge@ff2+2)& (0+255),b
  2430  000AA8  ECF6  F026         	call	___ftge	;wreg free
  2431  000AAC  0100               	movlb	0	; () banked
  2432  000AAE  B0D8               	btfsc	status,0,c
  2433  000AB0  D005               	goto	l9567
  2434                           
  2435                           ; BSR set to: 0
  2436                           ;doprnt.c: 849: exp--;
  2437  000AB2  0101               	movlb	1	; () banked
  2438  000AB4  0728               	decf	__doprnt@exp& (0+255),f,b
  2439  000AB6  A0D8               	btfss	status,0,c
  2440  000AB8  0729               	decf	(__doprnt@exp+1)& (0+255),f,b
  2441  000ABA  D017               	goto	l9571
  2442  000ABC                     l9567:
  2443                           
  2444                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2445  000ABC  C12E  F090         	movff	__doprnt@tmpval,___ftge@ff1
  2446  000AC0  C12F  F091         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  2447  000AC4  C130  F092         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  2448  000AC8  0E00               	movlw	0
  2449  000ACA  0100               	movlb	0	; () banked
  2450  000ACC  6F93               	movwf	___ftge@ff2& (0+255),b
  2451  000ACE  0E20               	movlw	32
  2452  000AD0  0100               	movlb	0	; () banked
  2453  000AD2  6F94               	movwf	(___ftge@ff2+1)& (0+255),b
  2454  000AD4  0E41               	movlw	65
  2455  000AD6  0100               	movlb	0	; () banked
  2456  000AD8  6F95               	movwf	(___ftge@ff2+2)& (0+255),b
  2457  000ADA  ECF6  F026         	call	___ftge	;wreg free
  2458  000ADE  0100               	movlb	0	; () banked
  2459  000AE0  A0D8               	btfss	status,0,c
  2460  000AE2  D003               	goto	l9571
  2461                           
  2462                           ; BSR set to: 0
  2463                           ;doprnt.c: 851: exp++;
  2464  000AE4  0101               	movlb	1	; () banked
  2465  000AE6  4B28               	infsnz	__doprnt@exp& (0+255),f,b
  2466  000AE8  2B29               	incf	(__doprnt@exp+1)& (0+255),f,b
  2467  000AEA                     l9571:
  2468                           
  2469                           ;doprnt.c: 852: }
  2470                           ;doprnt.c: 1112: if(prec <= 12)
  2471  000AEA  0101               	movlb	1	; () banked
  2472  000AEC  BF3A               	btfsc	(__doprnt@prec+1)& (0+255),7,b
  2473  000AEE  D008               	goto	l9573
  2474  000AF0  0101               	movlb	1	; () banked
  2475  000AF2  513A               	movf	(__doprnt@prec+1)& (0+255),w,b
  2476  000AF4  E11D               	bnz	l9575
  2477  000AF6  0E0D               	movlw	13
  2478  000AF8  0101               	movlb	1	; () banked
  2479  000AFA  5D39               	subwf	__doprnt@prec& (0+255),w,b
  2480  000AFC  B0D8               	btfsc	status,0,c
  2481  000AFE  D018               	goto	l9575
  2482  000B00                     l9573:
  2483                           
  2484                           ; BSR set to: 1
  2485                           ;doprnt.c: 1113: fval += fround(prec);
  2486  000B00  C134  F107         	movff	__doprnt@fval,___ftadd@f1
  2487  000B04  C135  F108         	movff	__doprnt@fval+1,___ftadd@f1+1
  2488  000B08  C136  F109         	movff	__doprnt@fval+2,___ftadd@f1+2
  2489  000B0C  0101               	movlb	1	; () banked
  2490  000B0E  5139               	movf	__doprnt@prec& (0+255),w,b
  2491  000B10  ECC0  F019         	call	_fround
  2492  000B14  C0B3  F10A         	movff	?_fround,___ftadd@f2
  2493  000B18  C0B4  F10B         	movff	?_fround+1,___ftadd@f2+1
  2494  000B1C  C0B5  F10C         	movff	?_fround+2,___ftadd@f2+2
  2495  000B20  EC16  F01B         	call	___ftadd	;wreg free
  2496  000B24  C107  F134         	movff	?___ftadd,__doprnt@fval
  2497  000B28  C108  F135         	movff	?___ftadd+1,__doprnt@fval+1
  2498  000B2C  C109  F136         	movff	?___ftadd+2,__doprnt@fval+2
  2499  000B30                     l9575:
  2500                           
  2501                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2502  000B30  0101               	movlb	1	; () banked
  2503  000B32  BF29               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  2504  000B34  D008               	goto	l9577
  2505  000B36  0101               	movlb	1	; () banked
  2506  000B38  5129               	movf	(__doprnt@exp+1)& (0+255),w,b
  2507  000B3A  E12A               	bnz	l9583
  2508  000B3C  0E0A               	movlw	10
  2509  000B3E  0101               	movlb	1	; () banked
  2510  000B40  5D28               	subwf	__doprnt@exp& (0+255),w,b
  2511  000B42  B0D8               	btfsc	status,0,c
  2512  000B44  D025               	goto	l9583
  2513  000B46                     l9577:
  2514                           
  2515                           ; BSR set to: 1
  2516  000B46  0101               	movlb	1	; () banked
  2517  000B48  5134               	movf	__doprnt@fval& (0+255),w,b
  2518  000B4A  0101               	movlb	1	; () banked
  2519  000B4C  1135               	iorwf	(__doprnt@fval+1)& (0+255),w,b
  2520  000B4E  0101               	movlb	1	; () banked
  2521  000B50  1136               	iorwf	(__doprnt@fval+2)& (0+255),w,b
  2522  000B52  B4D8               	btfsc	status,2,c
  2523  000B54  D063               	goto	l9597
  2524                           
  2525                           ; BSR set to: 1
  2526  000B56  C134  F104         	movff	__doprnt@fval,___fttol@f1
  2527  000B5A  C135  F105         	movff	__doprnt@fval+1,___fttol@f1+1
  2528  000B5E  C136  F106         	movff	__doprnt@fval+2,___fttol@f1+2
  2529  000B62  ECB0  F022         	call	___fttol	;wreg free
  2530  000B66  0101               	movlb	1	; () banked
  2531  000B68  5104               	movf	?___fttol& (0+255),w,b
  2532  000B6A  0101               	movlb	1	; () banked
  2533  000B6C  1105               	iorwf	(?___fttol+1)& (0+255),w,b
  2534  000B6E  0101               	movlb	1	; () banked
  2535  000B70  1106               	iorwf	(?___fttol+2)& (0+255),w,b
  2536  000B72  0101               	movlb	1	; () banked
  2537  000B74  1107               	iorwf	(?___fttol+3)& (0+255),w,b
  2538  000B76  A4D8               	btfss	status,2,c
  2539  000B78  D051               	goto	l9597
  2540                           
  2541                           ; BSR set to: 1
  2542  000B7A  0101               	movlb	1	; () banked
  2543  000B7C  BF29               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  2544  000B7E  D04E               	goto	l9597
  2545  000B80  0101               	movlb	1	; () banked
  2546  000B82  5129               	movf	(__doprnt@exp+1)& (0+255),w,b
  2547  000B84  E105               	bnz	l9583
  2548  000B86  0E02               	movlw	2
  2549  000B88  0101               	movlb	1	; () banked
  2550  000B8A  5D28               	subwf	__doprnt@exp& (0+255),w,b
  2551  000B8C  A0D8               	btfss	status,0,c
  2552  000B8E  D046               	goto	l9597
  2553  000B90                     l9583:
  2554                           
  2555                           ; BSR set to: 1
  2556                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  2557  000B90  C12E  F090         	movff	__doprnt@tmpval,___ftge@ff1
  2558  000B94  C12F  F091         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  2559  000B98  C130  F092         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  2560  000B9C  0E70               	movlw	112
  2561  000B9E  0100               	movlb	0	; () banked
  2562  000BA0  6F93               	movwf	___ftge@ff2& (0+255),b
  2563  000BA2  0E89               	movlw	137
  2564  000BA4  0100               	movlb	0	; () banked
  2565  000BA6  6F94               	movwf	(___ftge@ff2+1)& (0+255),b
  2566  000BA8  0E40               	movlw	64
  2567  000BAA  0100               	movlb	0	; () banked
  2568  000BAC  6F95               	movwf	(___ftge@ff2+2)& (0+255),b
  2569  000BAE  ECF6  F026         	call	___ftge	;wreg free
  2570  000BB2  0100               	movlb	0	; () banked
  2571  000BB4  B0D8               	btfsc	status,0,c
  2572  000BB6  D003               	goto	l9587
  2573                           
  2574                           ; BSR set to: 0
  2575                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2576  000BB8  0101               	movlb	1	; () banked
  2577  000BBA  0EF7               	movlw	247
  2578  000BBC  D002               	goto	L1
  2579  000BBE                     l9587:
  2580                           
  2581                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2582  000BBE  0101               	movlb	1	; () banked
  2583  000BC0  0EF8               	movlw	248
  2584  000BC2                     L1:
  2585  000BC2  2728               	addwf	__doprnt@exp& (0+255),f,b
  2586  000BC4  0EFF               	movlw	255
  2587  000BC6  2329               	addwfc	(__doprnt@exp+1)& (0+255),f,b
  2588                           
  2589                           ; BSR set to: 1
  2590                           ;doprnt.c: 1124: }
  2591                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  2592                           
  2593                           ; BSR set to: 1
  2594  000BC8  0101               	movlb	1	; () banked
  2595  000BCA  5128               	movf	__doprnt@exp& (0+255),w,b
  2596  000BCC  EC71  F015         	call	_scale
  2597  000BD0  C0B3  F12E         	movff	?_scale,__doprnt@tmpval
  2598  000BD4  C0B4  F12F         	movff	?_scale+1,__doprnt@tmpval+1
  2599  000BD8  C0B5  F130         	movff	?_scale+2,__doprnt@tmpval+2
  2600                           
  2601                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2602  000BDC  C134  F090         	movff	__doprnt@fval,__tdiv_to_l_@f1
  2603  000BE0  C135  F091         	movff	__doprnt@fval+1,__tdiv_to_l_@f1+1
  2604  000BE4  C136  F092         	movff	__doprnt@fval+2,__tdiv_to_l_@f1+2
  2605  000BE8  C12E  F093         	movff	__doprnt@tmpval,__tdiv_to_l_@f2
  2606  000BEC  C12F  F094         	movff	__doprnt@tmpval+1,__tdiv_to_l_@f2+1
  2607  000BF0  C130  F095         	movff	__doprnt@tmpval+2,__tdiv_to_l_@f2+2
  2608  000BF4  EC15  F01F         	call	__tdiv_to_l_	;wreg free
  2609  000BF8  C090  F12A         	movff	?__tdiv_to_l_,__doprnt@val
  2610  000BFC  C091  F12B         	movff	?__tdiv_to_l_+1,__doprnt@val+1
  2611  000C00  C092  F12C         	movff	?__tdiv_to_l_+2,__doprnt@val+2
  2612  000C04  C093  F12D         	movff	?__tdiv_to_l_+3,__doprnt@val+3
  2613                           
  2614                           ;doprnt.c: 1129: fval = 0.0;
  2615  000C08  0E00               	movlw	0
  2616  000C0A  0101               	movlb	1	; () banked
  2617  000C0C  6F34               	movwf	__doprnt@fval& (0+255),b
  2618  000C0E  0E00               	movlw	0
  2619  000C10  0101               	movlb	1	; () banked
  2620  000C12  6F35               	movwf	(__doprnt@fval+1)& (0+255),b
  2621  000C14  0E00               	movlw	0
  2622  000C16  0101               	movlb	1	; () banked
  2623  000C18  6F36               	movwf	(__doprnt@fval+2)& (0+255),b
  2624                           
  2625                           ;doprnt.c: 1130: } else {
  2626  000C1A  D033               	goto	l9601
  2627  000C1C                     l9597:
  2628                           
  2629                           ; BSR set to: 1
  2630                           ;doprnt.c: 1131: val = (unsigned long)fval;
  2631  000C1C  C134  F104         	movff	__doprnt@fval,___fttol@f1
  2632  000C20  C135  F105         	movff	__doprnt@fval+1,___fttol@f1+1
  2633  000C24  C136  F106         	movff	__doprnt@fval+2,___fttol@f1+2
  2634  000C28  ECB0  F022         	call	___fttol	;wreg free
  2635  000C2C  C104  F12A         	movff	?___fttol,__doprnt@val
  2636  000C30  C105  F12B         	movff	?___fttol+1,__doprnt@val+1
  2637  000C34  C106  F12C         	movff	?___fttol+2,__doprnt@val+2
  2638  000C38  C107  F12D         	movff	?___fttol+3,__doprnt@val+3
  2639                           
  2640                           ;doprnt.c: 1132: fval -= (double)val;
  2641  000C3C  C134  F113         	movff	__doprnt@fval,___ftsub@f1
  2642  000C40  C135  F114         	movff	__doprnt@fval+1,___ftsub@f1+1
  2643  000C44  C136  F115         	movff	__doprnt@fval+2,___ftsub@f1+2
  2644  000C48  C12A  F098         	movff	__doprnt@val,___lltoft@c
  2645  000C4C  C12B  F099         	movff	__doprnt@val+1,___lltoft@c+1
  2646  000C50  C12C  F09A         	movff	__doprnt@val+2,___lltoft@c+2
  2647  000C54  C12D  F09B         	movff	__doprnt@val+3,___lltoft@c+3
  2648  000C58  ECD7  F029         	call	___lltoft	;wreg free
  2649  000C5C  C098  F116         	movff	?___lltoft,___ftsub@f2
  2650  000C60  C099  F117         	movff	?___lltoft+1,___ftsub@f2+1
  2651  000C64  C09A  F118         	movff	?___lltoft+2,___ftsub@f2+2
  2652  000C68  EC46  F02B         	call	___ftsub	;wreg free
  2653  000C6C  C113  F134         	movff	?___ftsub,__doprnt@fval
  2654  000C70  C114  F135         	movff	?___ftsub+1,__doprnt@fval+1
  2655  000C74  C115  F136         	movff	?___ftsub+2,__doprnt@fval+2
  2656                           
  2657                           ;doprnt.c: 1133: exp = 0;
  2658  000C78  0E00               	movlw	0
  2659  000C7A  0101               	movlb	1	; () banked
  2660  000C7C  6F29               	movwf	(__doprnt@exp+1)& (0+255),b
  2661  000C7E  0E00               	movlw	0
  2662  000C80  6F28               	movwf	__doprnt@exp& (0+255),b
  2663  000C82                     l9601:
  2664                           
  2665                           ; BSR set to: 1
  2666                           ;doprnt.c: 1134: }
  2667                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2668  000C82  0E01               	movlw	1
  2669  000C84  0101               	movlb	1	; () banked
  2670  000C86  6F3B               	movwf	__doprnt@c& (0+255),b
  2671  000C88                     l9603:
  2672                           
  2673                           ; BSR set to: 1
  2674  000C88  0E0A               	movlw	10
  2675  000C8A  0101               	movlb	1	; () banked
  2676  000C8C  193B               	xorwf	__doprnt@c& (0+255),w,b
  2677  000C8E  B4D8               	btfsc	status,2,c
  2678  000C90  D01E               	goto	l9615
  2679                           
  2680                           ; BSR set to: 1
  2681                           ;doprnt.c: 1137: if(val < dpowers[c])
  2682                           
  2683                           ; BSR set to: 1
  2684                           
  2685                           ; BSR set to: 1
  2686  000C92  0101               	movlb	1	; () banked
  2687  000C94  513B               	movf	__doprnt@c& (0+255),w,b
  2688  000C96  0D04               	mullw	4
  2689  000C98  0E01               	movlw	low _dpowers
  2690  000C9A  24F3               	addwf	prodl,w,c
  2691  000C9C  6EF6               	movwf	tblptrl,c
  2692  000C9E  0E06               	movlw	high _dpowers
  2693  000CA0  20F4               	addwfc	prodh,w,c
  2694  000CA2  6EF7               	movwf	tblptrh,c
  2695  000CA4                     	if	0	;There are less than 3 active tblptr bytes
  2696  000CA4                     	endif
  2697  000CA4  0009               	tblrd		*+
  2698  000CA6  50F5               	movf	tablat,w,c
  2699  000CA8  0101               	movlb	1	; () banked
  2700  000CAA  5D2A               	subwf	__doprnt@val& (0+255),w,b
  2701  000CAC  0009               	tblrd		*+
  2702  000CAE  50F5               	movf	tablat,w,c
  2703  000CB0  0101               	movlb	1	; () banked
  2704  000CB2  592B               	subwfb	(__doprnt@val+1)& (0+255),w,b
  2705  000CB4  0009               	tblrd		*+
  2706  000CB6  50F5               	movf	tablat,w,c
  2707  000CB8  0101               	movlb	1	; () banked
  2708  000CBA  592C               	subwfb	(__doprnt@val+2)& (0+255),w,b
  2709  000CBC  0009               	tblrd		*+
  2710  000CBE  50F5               	movf	tablat,w,c
  2711  000CC0  0101               	movlb	1	; () banked
  2712  000CC2  592D               	subwfb	(__doprnt@val+3)& (0+255),w,b
  2713  000CC4  A0D8               	btfss	status,0,c
  2714  000CC6  D003               	goto	l9615
  2715                           
  2716                           ; BSR set to: 1
  2717                           
  2718                           ; BSR set to: 1
  2719                           
  2720                           ; BSR set to: 1
  2721                           ;doprnt.c: 1138: break;
  2722  000CC8  0101               	movlb	1	; () banked
  2723  000CCA  2B3B               	incf	__doprnt@c& (0+255),f,b
  2724  000CCC  D7DD               	goto	l9603
  2725  000CCE                     l9615:
  2726                           
  2727                           ; BSR set to: 1
  2728                           ;doprnt.c: 1142: width -= prec + c + exp;
  2729  000CCE  C13B  F11F         	movff	__doprnt@c,??__doprnt
  2730  000CD2  0101               	movlb	1	; () banked
  2731  000CD4  6B20               	clrf	(??__doprnt+1)& (0+255),b
  2732  000CD6  BF1F               	btfsc	??__doprnt& (0+255),7,b
  2733  000CD8  0720               	decf	(??__doprnt+1)& (0+255),f,b
  2734  000CDA  0101               	movlb	1	; () banked
  2735  000CDC  5139               	movf	__doprnt@prec& (0+255),w,b
  2736  000CDE  0101               	movlb	1	; () banked
  2737  000CE0  271F               	addwf	??__doprnt& (0+255),f,b
  2738  000CE2  0101               	movlb	1	; () banked
  2739  000CE4  513A               	movf	(__doprnt@prec+1)& (0+255),w,b
  2740  000CE6  0101               	movlb	1	; () banked
  2741  000CE8  2320               	addwfc	(??__doprnt+1)& (0+255),f,b
  2742  000CEA  0101               	movlb	1	; () banked
  2743  000CEC  5128               	movf	__doprnt@exp& (0+255),w,b
  2744  000CEE  0101               	movlb	1	; () banked
  2745  000CF0  271F               	addwf	??__doprnt& (0+255),f,b
  2746  000CF2  0101               	movlb	1	; () banked
  2747  000CF4  5129               	movf	(__doprnt@exp+1)& (0+255),w,b
  2748  000CF6  0101               	movlb	1	; () banked
  2749  000CF8  2320               	addwfc	(??__doprnt+1)& (0+255),f,b
  2750  000CFA  0101               	movlb	1	; () banked
  2751  000CFC  511F               	movf	??__doprnt& (0+255),w,b
  2752  000CFE  0101               	movlb	1	; () banked
  2753  000D00  5F32               	subwf	__doprnt@width& (0+255),f,b
  2754  000D02  0101               	movlb	1	; () banked
  2755  000D04  5120               	movf	(??__doprnt+1)& (0+255),w,b
  2756  000D06  0101               	movlb	1	; () banked
  2757  000D08  5B33               	subwfb	(__doprnt@width+1)& (0+255),f,b
  2758                           
  2759                           ;doprnt.c: 1143: if(
  2760                           ;doprnt.c: 1147: prec)
  2761  000D0A  0101               	movlb	1	; () banked
  2762  000D0C  5139               	movf	__doprnt@prec& (0+255),w,b
  2763  000D0E  0101               	movlb	1	; () banked
  2764  000D10  113A               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  2765  000D12  B4D8               	btfsc	status,2,c
  2766  000D14  D004               	goto	l9619
  2767                           
  2768                           ; BSR set to: 1
  2769                           ;doprnt.c: 1148: width--;
  2770  000D16  0101               	movlb	1	; () banked
  2771  000D18  0732               	decf	__doprnt@width& (0+255),f,b
  2772  000D1A  A0D8               	btfss	status,0,c
  2773  000D1C  0733               	decf	(__doprnt@width+1)& (0+255),f,b
  2774  000D1E                     l9619:
  2775                           
  2776                           ; BSR set to: 1
  2777                           ;doprnt.c: 1149: if(flag & 0x03)
  2778  000D1E  0E03               	movlw	3
  2779  000D20  0101               	movlb	1	; () banked
  2780  000D22  1537               	andwf	__doprnt@flag& (0+255),w,b
  2781  000D24  0101               	movlb	1	; () banked
  2782  000D26  6F1F               	movwf	??__doprnt& (0+255),b
  2783  000D28  0E00               	movlw	0
  2784  000D2A  0101               	movlb	1	; () banked
  2785  000D2C  1538               	andwf	(__doprnt@flag+1)& (0+255),w,b
  2786  000D2E  0101               	movlb	1	; () banked
  2787  000D30  6F20               	movwf	(??__doprnt+1)& (0+255),b
  2788  000D32  0101               	movlb	1	; () banked
  2789  000D34  511F               	movf	??__doprnt& (0+255),w,b
  2790  000D36  0101               	movlb	1	; () banked
  2791  000D38  1120               	iorwf	(??__doprnt+1)& (0+255),w,b
  2792  000D3A  B4D8               	btfsc	status,2,c
  2793  000D3C  D004               	goto	l9623
  2794                           
  2795                           ; BSR set to: 1
  2796                           ;doprnt.c: 1150: width--;
  2797  000D3E  0101               	movlb	1	; () banked
  2798  000D40  0732               	decf	__doprnt@width& (0+255),f,b
  2799  000D42  A0D8               	btfss	status,0,c
  2800  000D44  0733               	decf	(__doprnt@width+1)& (0+255),f,b
  2801  000D46                     l9623:
  2802                           
  2803                           ; BSR set to: 1
  2804                           ;doprnt.c: 1153: if(flag & 0x04) {
  2805  000D46  0101               	movlb	1	; () banked
  2806  000D48  A537               	btfss	__doprnt@flag& (0+255),2,b
  2807  000D4A  D0C0               	goto	l9657
  2808                           
  2809                           ; BSR set to: 1
  2810                           ;doprnt.c: 1157: if(flag & 0x03)
  2811  000D4C  0E03               	movlw	3
  2812  000D4E  0101               	movlb	1	; () banked
  2813  000D50  1537               	andwf	__doprnt@flag& (0+255),w,b
  2814  000D52  0101               	movlb	1	; () banked
  2815  000D54  6F1F               	movwf	??__doprnt& (0+255),b
  2816  000D56  0E00               	movlw	0
  2817  000D58  0101               	movlb	1	; () banked
  2818  000D5A  1538               	andwf	(__doprnt@flag+1)& (0+255),w,b
  2819  000D5C  0101               	movlb	1	; () banked
  2820  000D5E  6F20               	movwf	(??__doprnt+1)& (0+255),b
  2821  000D60  0101               	movlb	1	; () banked
  2822  000D62  511F               	movf	??__doprnt& (0+255),w,b
  2823  000D64  0101               	movlb	1	; () banked
  2824  000D66  1120               	iorwf	(??__doprnt+1)& (0+255),w,b
  2825  000D68  B4D8               	btfsc	status,2,c
  2826  000D6A  D06D               	goto	l9645
  2827                           
  2828                           ; BSR set to: 1
  2829                           ;doprnt.c: 1159: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  2830  000D6C  0101               	movlb	1	; () banked
  2831  000D6E  EE20 F002          	lfsr	2,2
  2832  000D72  5119               	movf	__doprnt@pb& (0+255),w,b
  2833  000D74  26D9               	addwf	fsr2l,f,c
  2834  000D76  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  2835  000D78  22DA               	addwfc	fsr2h,f,c
  2836  000D7A  50DE               	movf	postinc2,w,c
  2837  000D7C  10DE               	iorwf	postinc2,w,c
  2838  000D7E  B4D8               	btfsc	status,2,c
  2839  000D80  D014               	goto	l9631
  2840                           
  2841                           ; BSR set to: 1
  2842  000D82  0101               	movlb	1	; () banked
  2843  000D84  EE20 F002          	lfsr	2,2
  2844  000D88  5119               	movf	__doprnt@pb& (0+255),w,b
  2845  000D8A  26D9               	addwf	fsr2l,f,c
  2846  000D8C  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  2847  000D8E  22DA               	addwfc	fsr2h,f,c
  2848  000D90  D801               	call	u16158
  2849  000D92  D059               	goto	l9645
  2850  000D94                     u16158:
  2851  000D94  0005               	push	
  2852  000D96  6EFA               	movwf	pclath,c
  2853  000D98  50DE               	movf	postinc2,w,c
  2854  000D9A  6EFD               	movwf	tosl,c
  2855  000D9C  50DE               	movf	postinc2,w,c
  2856  000D9E  6EFE               	movwf	tosh,c
  2857  000DA0  50F8               	movf	tblptru,w,c
  2858  000DA2  6EFF               	movwf	tosu,c
  2859  000DA4  50FA               	movf	pclath,w,c
  2860  000DA6  0E2D               	movlw	45
  2861  000DA8  0012               	return		;indir
  2862  000DAA                     l9631:
  2863  000DAA  C119  FFD9         	movff	__doprnt@pb,fsr2l
  2864  000DAE  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  2865  000DB2  CFDE F11F          	movff	postinc2,??__doprnt
  2866  000DB6  CFDD F120          	movff	postdec2,??__doprnt+1
  2867  000DBA  C11F  FFD9         	movff	??__doprnt,fsr2l
  2868  000DBE  C120  FFDA         	movff	??__doprnt+1,fsr2h
  2869  000DC2  0E2D               	movlw	45
  2870  000DC4  6EDF               	movwf	indf2,c
  2871  000DC6  C119  FFD9         	movff	__doprnt@pb,fsr2l
  2872  000DCA  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  2873  000DCE  2ADE               	incf	postinc2,f,c
  2874  000DD0  0E00               	movlw	0
  2875  000DD2  22DD               	addwfc	postdec2,f,c
  2876                           
  2877                           ;doprnt.c: 1168: while(width > 0) {
  2878  000DD4  D038               	goto	l9645
  2879  000DD6                     l9635:
  2880                           
  2881                           ;doprnt.c: 1169: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  2882  000DD6  0101               	movlb	1	; () banked
  2883  000DD8  EE20 F002          	lfsr	2,2
  2884  000DDC  5119               	movf	__doprnt@pb& (0+255),w,b
  2885  000DDE  26D9               	addwf	fsr2l,f,c
  2886  000DE0  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  2887  000DE2  22DA               	addwfc	fsr2h,f,c
  2888  000DE4  50DE               	movf	postinc2,w,c
  2889  000DE6  10DE               	iorwf	postinc2,w,c
  2890  000DE8  B4D8               	btfsc	status,2,c
  2891  000DEA  D014               	goto	l9639
  2892                           
  2893                           ; BSR set to: 1
  2894  000DEC  0101               	movlb	1	; () banked
  2895  000DEE  EE20 F002          	lfsr	2,2
  2896  000DF2  5119               	movf	__doprnt@pb& (0+255),w,b
  2897  000DF4  26D9               	addwf	fsr2l,f,c
  2898  000DF6  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  2899  000DF8  22DA               	addwfc	fsr2h,f,c
  2900  000DFA  D801               	call	u16178
  2901  000DFC  D020               	goto	l9643
  2902  000DFE                     u16178:
  2903  000DFE  0005               	push	
  2904  000E00  6EFA               	movwf	pclath,c
  2905  000E02  50DE               	movf	postinc2,w,c
  2906  000E04  6EFD               	movwf	tosl,c
  2907  000E06  50DE               	movf	postinc2,w,c
  2908  000E08  6EFE               	movwf	tosh,c
  2909  000E0A  50F8               	movf	tblptru,w,c
  2910  000E0C  6EFF               	movwf	tosu,c
  2911  000E0E  50FA               	movf	pclath,w,c
  2912  000E10  0E30               	movlw	48
  2913  000E12  0012               	return		;indir
  2914  000E14                     l9639:
  2915  000E14  C119  FFD9         	movff	__doprnt@pb,fsr2l
  2916  000E18  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  2917  000E1C  CFDE F11F          	movff	postinc2,??__doprnt
  2918  000E20  CFDD F120          	movff	postdec2,??__doprnt+1
  2919  000E24  C11F  FFD9         	movff	??__doprnt,fsr2l
  2920  000E28  C120  FFDA         	movff	??__doprnt+1,fsr2h
  2921  000E2C  0E30               	movlw	48
  2922  000E2E  6EDF               	movwf	indf2,c
  2923  000E30  C119  FFD9         	movff	__doprnt@pb,fsr2l
  2924  000E34  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  2925  000E38  2ADE               	incf	postinc2,f,c
  2926  000E3A  0E00               	movlw	0
  2927  000E3C  22DD               	addwfc	postdec2,f,c
  2928  000E3E                     l9643:
  2929                           
  2930                           ;doprnt.c: 1170: width--;
  2931  000E3E  0101               	movlb	1	; () banked
  2932  000E40  0732               	decf	__doprnt@width& (0+255),f,b
  2933  000E42  A0D8               	btfss	status,0,c
  2934  000E44  0733               	decf	(__doprnt@width+1)& (0+255),f,b
  2935  000E46                     l9645:
  2936  000E46  0101               	movlb	1	; () banked
  2937  000E48  BF33               	btfsc	(__doprnt@width+1)& (0+255),7,b
  2938  000E4A  D103               	goto	l9679
  2939  000E4C  0101               	movlb	1	; () banked
  2940  000E4E  5133               	movf	(__doprnt@width+1)& (0+255),w,b
  2941  000E50  E1C2               	bnz	l9635
  2942  000E52  0101               	movlb	1	; () banked
  2943  000E54  0532               	decf	__doprnt@width& (0+255),w,b
  2944  000E56  A0D8               	btfss	status,0,c
  2945  000E58  D0FC               	goto	l9679
  2946  000E5A  D7BD               	goto	l9635
  2947  000E5C                     l9647:
  2948                           
  2949                           ; BSR set to: 1
  2950                           ;doprnt.c: 1181: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  2951  000E5C  0101               	movlb	1	; () banked
  2952  000E5E  EE20 F002          	lfsr	2,2
  2953  000E62  5119               	movf	__doprnt@pb& (0+255),w,b
  2954  000E64  26D9               	addwf	fsr2l,f,c
  2955  000E66  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  2956  000E68  22DA               	addwfc	fsr2h,f,c
  2957  000E6A  50DE               	movf	postinc2,w,c
  2958  000E6C  10DE               	iorwf	postinc2,w,c
  2959  000E6E  B4D8               	btfsc	status,2,c
  2960  000E70  D014               	goto	l9651
  2961                           
  2962                           ; BSR set to: 1
  2963  000E72  0101               	movlb	1	; () banked
  2964  000E74  EE20 F002          	lfsr	2,2
  2965  000E78  5119               	movf	__doprnt@pb& (0+255),w,b
  2966  000E7A  26D9               	addwf	fsr2l,f,c
  2967  000E7C  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  2968  000E7E  22DA               	addwfc	fsr2h,f,c
  2969  000E80  D801               	call	u16208
  2970  000E82  D020               	goto	l9655
  2971  000E84                     u16208:
  2972  000E84  0005               	push	
  2973  000E86  6EFA               	movwf	pclath,c
  2974  000E88  50DE               	movf	postinc2,w,c
  2975  000E8A  6EFD               	movwf	tosl,c
  2976  000E8C  50DE               	movf	postinc2,w,c
  2977  000E8E  6EFE               	movwf	tosh,c
  2978  000E90  50F8               	movf	tblptru,w,c
  2979  000E92  6EFF               	movwf	tosu,c
  2980  000E94  50FA               	movf	pclath,w,c
  2981  000E96  0E20               	movlw	32
  2982  000E98  0012               	return		;indir
  2983  000E9A                     l9651:
  2984  000E9A  C119  FFD9         	movff	__doprnt@pb,fsr2l
  2985  000E9E  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  2986  000EA2  CFDE F11F          	movff	postinc2,??__doprnt
  2987  000EA6  CFDD F120          	movff	postdec2,??__doprnt+1
  2988  000EAA  C11F  FFD9         	movff	??__doprnt,fsr2l
  2989  000EAE  C120  FFDA         	movff	??__doprnt+1,fsr2h
  2990  000EB2  0E20               	movlw	32
  2991  000EB4  6EDF               	movwf	indf2,c
  2992  000EB6  C119  FFD9         	movff	__doprnt@pb,fsr2l
  2993  000EBA  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  2994  000EBE  2ADE               	incf	postinc2,f,c
  2995  000EC0  0E00               	movlw	0
  2996  000EC2  22DD               	addwfc	postdec2,f,c
  2997  000EC4                     l9655:
  2998                           
  2999                           ;doprnt.c: 1182: width--;
  3000  000EC4  0101               	movlb	1	; () banked
  3001  000EC6  0732               	decf	__doprnt@width& (0+255),f,b
  3002  000EC8  A0D8               	btfss	status,0,c
  3003  000ECA  0733               	decf	(__doprnt@width+1)& (0+255),f,b
  3004  000ECC                     l9657:
  3005                           
  3006                           ; BSR set to: 1
  3007  000ECC  0101               	movlb	1	; () banked
  3008  000ECE  BF33               	btfsc	(__doprnt@width+1)& (0+255),7,b
  3009  000ED0  D007               	goto	l9659
  3010  000ED2  0101               	movlb	1	; () banked
  3011  000ED4  5133               	movf	(__doprnt@width+1)& (0+255),w,b
  3012  000ED6  E1C2               	bnz	l9647
  3013  000ED8  0101               	movlb	1	; () banked
  3014  000EDA  0532               	decf	__doprnt@width& (0+255),w,b
  3015  000EDC  B0D8               	btfsc	status,0,c
  3016  000EDE  D7BE               	goto	l9647
  3017  000EE0                     l9659:
  3018                           
  3019                           ; BSR set to: 1
  3020                           ;doprnt.c: 1183: }
  3021                           ;doprnt.c: 1188: if(flag & 0x03)
  3022  000EE0  0E03               	movlw	3
  3023  000EE2  0101               	movlb	1	; () banked
  3024  000EE4  1537               	andwf	__doprnt@flag& (0+255),w,b
  3025  000EE6  0101               	movlb	1	; () banked
  3026  000EE8  6F1F               	movwf	??__doprnt& (0+255),b
  3027  000EEA  0E00               	movlw	0
  3028  000EEC  0101               	movlb	1	; () banked
  3029  000EEE  1538               	andwf	(__doprnt@flag+1)& (0+255),w,b
  3030  000EF0  0101               	movlb	1	; () banked
  3031  000EF2  6F20               	movwf	(??__doprnt+1)& (0+255),b
  3032  000EF4  0101               	movlb	1	; () banked
  3033  000EF6  511F               	movf	??__doprnt& (0+255),w,b
  3034  000EF8  0101               	movlb	1	; () banked
  3035  000EFA  1120               	iorwf	(??__doprnt+1)& (0+255),w,b
  3036  000EFC  B4D8               	btfsc	status,2,c
  3037  000EFE  D0A9               	goto	l9679
  3038                           
  3039                           ; BSR set to: 1
  3040                           ;doprnt.c: 1190: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  3041  000F00  0101               	movlb	1	; () banked
  3042  000F02  EE20 F002          	lfsr	2,2
  3043  000F06  5119               	movf	__doprnt@pb& (0+255),w,b
  3044  000F08  26D9               	addwf	fsr2l,f,c
  3045  000F0A  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3046  000F0C  22DA               	addwfc	fsr2h,f,c
  3047  000F0E  50DE               	movf	postinc2,w,c
  3048  000F10  10DE               	iorwf	postinc2,w,c
  3049  000F12  B4D8               	btfsc	status,2,c
  3050  000F14  D014               	goto	l9665
  3051                           
  3052                           ; BSR set to: 1
  3053  000F16  0101               	movlb	1	; () banked
  3054  000F18  EE20 F002          	lfsr	2,2
  3055  000F1C  5119               	movf	__doprnt@pb& (0+255),w,b
  3056  000F1E  26D9               	addwf	fsr2l,f,c
  3057  000F20  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3058  000F22  22DA               	addwfc	fsr2h,f,c
  3059  000F24  D801               	call	u16248
  3060  000F26  D095               	goto	l9679
  3061  000F28                     u16248:
  3062  000F28  0005               	push	
  3063  000F2A  6EFA               	movwf	pclath,c
  3064  000F2C  50DE               	movf	postinc2,w,c
  3065  000F2E  6EFD               	movwf	tosl,c
  3066  000F30  50DE               	movf	postinc2,w,c
  3067  000F32  6EFE               	movwf	tosh,c
  3068  000F34  50F8               	movf	tblptru,w,c
  3069  000F36  6EFF               	movwf	tosu,c
  3070  000F38  50FA               	movf	pclath,w,c
  3071  000F3A  0E2D               	movlw	45
  3072  000F3C  0012               	return		;indir
  3073  000F3E                     l9665:
  3074  000F3E  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3075  000F42  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3076  000F46  CFDE F11F          	movff	postinc2,??__doprnt
  3077  000F4A  CFDD F120          	movff	postdec2,??__doprnt+1
  3078  000F4E  C11F  FFD9         	movff	??__doprnt,fsr2l
  3079  000F52  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3080  000F56  0E2D               	movlw	45
  3081  000F58  D07A               	goto	L2
  3082  000F5A                     l9667:
  3083  000F5A  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3084  000F5E  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3085  000F62  2ADE               	incf	postinc2,f,c
  3086  000F64  0E00               	movlw	0
  3087  000F66  22DD               	addwfc	postdec2,f,c
  3088                           
  3089                           ;doprnt.c: 1195: }
  3090                           ;doprnt.c: 1196: while(c--) {
  3091  000F68  D074               	goto	l9679
  3092  000F6A                     l9669:
  3093                           
  3094                           ;doprnt.c: 1200: {
  3095                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3096  000F6A  C12A  F090         	movff	__doprnt@val,___lldiv@dividend
  3097  000F6E  C12B  F091         	movff	__doprnt@val+1,___lldiv@dividend+1
  3098  000F72  C12C  F092         	movff	__doprnt@val+2,___lldiv@dividend+2
  3099  000F76  C12D  F093         	movff	__doprnt@val+3,___lldiv@dividend+3
  3100  000F7A  0101               	movlb	1	; () banked
  3101  000F7C  513B               	movf	__doprnt@c& (0+255),w,b
  3102  000F7E  0D04               	mullw	4
  3103  000F80  0E01               	movlw	low _dpowers
  3104  000F82  24F3               	addwf	prodl,w,c
  3105  000F84  6EF6               	movwf	tblptrl,c
  3106  000F86  0E06               	movlw	high _dpowers
  3107  000F88  20F4               	addwfc	prodh,w,c
  3108  000F8A  6EF7               	movwf	tblptrh,c
  3109  000F8C                     	if	0	;There are less than 3 active tblptr bytes
  3110  000F8C                     	endif
  3111  000F8C  0009               	tblrd		*+
  3112  000F8E  CFF5 F094          	movff	tablat,___lldiv@divisor
  3113  000F92  0009               	tblrd		*+
  3114  000F94  CFF5 F095          	movff	tablat,___lldiv@divisor+1
  3115  000F98  0009               	tblrd		*+
  3116  000F9A  CFF5 F096          	movff	tablat,___lldiv@divisor+2
  3117  000F9E  000A               	tblrd		*-
  3118  000FA0  CFF5 F097          	movff	tablat,___lldiv@divisor+3
  3119  000FA4  ECB9  F027         	call	___lldiv
  3120  000FA8  C090  F12E         	movff	?___lldiv,__doprnt@tmpval
  3121  000FAC  C091  F12F         	movff	?___lldiv+1,__doprnt@tmpval+1
  3122  000FB0  C092  F130         	movff	?___lldiv+2,__doprnt@tmpval+2
  3123  000FB4  C093  F131         	movff	?___lldiv+3,__doprnt@tmpval+3
  3124                           
  3125                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3126  000FB8  C12E  F09D         	movff	__doprnt@tmpval,___llmod@dividend
  3127  000FBC  C12F  F09E         	movff	__doprnt@tmpval+1,___llmod@dividend+1
  3128  000FC0  C130  F09F         	movff	__doprnt@tmpval+2,___llmod@dividend+2
  3129  000FC4  C131  F0A0         	movff	__doprnt@tmpval+3,___llmod@dividend+3
  3130  000FC8  0E0A               	movlw	10
  3131  000FCA  0100               	movlb	0	; () banked
  3132  000FCC  6FA1               	movwf	___llmod@divisor& (0+255),b
  3133  000FCE  0E00               	movlw	0
  3134  000FD0  6FA2               	movwf	(___llmod@divisor+1)& (0+255),b
  3135  000FD2  0E00               	movlw	0
  3136  000FD4  6FA3               	movwf	(___llmod@divisor+2)& (0+255),b
  3137  000FD6  0E00               	movlw	0
  3138  000FD8  6FA4               	movwf	(___llmod@divisor+3)& (0+255),b
  3139  000FDA  ECBF  F028         	call	___llmod	;wreg free
  3140  000FDE  C09D  F12E         	movff	?___llmod,__doprnt@tmpval
  3141  000FE2  C09E  F12F         	movff	?___llmod+1,__doprnt@tmpval+1
  3142  000FE6  C09F  F130         	movff	?___llmod+2,__doprnt@tmpval+2
  3143  000FEA  C0A0  F131         	movff	?___llmod+3,__doprnt@tmpval+3
  3144                           
  3145                           ;doprnt.c: 1203: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
  3146  000FEE  0101               	movlb	1	; () banked
  3147  000FF0  EE20 F002          	lfsr	2,2
  3148  000FF4  5119               	movf	__doprnt@pb& (0+255),w,b
  3149  000FF6  26D9               	addwf	fsr2l,f,c
  3150  000FF8  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3151  000FFA  22DA               	addwfc	fsr2h,f,c
  3152  000FFC  50DE               	movf	postinc2,w,c
  3153  000FFE  10DE               	iorwf	postinc2,w,c
  3154  001000  B4D8               	btfsc	status,2,c
  3155  001002  D016               	goto	l9677
  3156                           
  3157                           ; BSR set to: 1
  3158  001004  0101               	movlb	1	; () banked
  3159  001006  EE20 F002          	lfsr	2,2
  3160  00100A  5119               	movf	__doprnt@pb& (0+255),w,b
  3161  00100C  26D9               	addwf	fsr2l,f,c
  3162  00100E  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3163  001010  22DA               	addwfc	fsr2h,f,c
  3164  001012  D801               	call	u16268
  3165  001014  D01E               	goto	l9679
  3166  001016                     u16268:
  3167  001016  0005               	push	
  3168  001018  6EFA               	movwf	pclath,c
  3169  00101A  50DE               	movf	postinc2,w,c
  3170  00101C  6EFD               	movwf	tosl,c
  3171  00101E  50DE               	movf	postinc2,w,c
  3172  001020  6EFE               	movwf	tosh,c
  3173  001022  50F8               	movf	tblptru,w,c
  3174  001024  6EFF               	movwf	tosu,c
  3175  001026  50FA               	movf	pclath,w,c
  3176  001028  0101               	movlb	1	; () banked
  3177  00102A  512E               	movf	__doprnt@tmpval& (0+255),w,b
  3178  00102C  0F30               	addlw	48
  3179  00102E  0012               	return		;indir
  3180  001030                     l9677:
  3181  001030  0101               	movlb	1	; () banked
  3182  001032  512E               	movf	__doprnt@tmpval& (0+255),w,b
  3183  001034  0F30               	addlw	48
  3184  001036  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3185  00103A  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3186  00103E  CFDE F11F          	movff	postinc2,??__doprnt
  3187  001042  CFDD F120          	movff	postdec2,??__doprnt+1
  3188  001046  C11F  FFD9         	movff	??__doprnt,fsr2l
  3189  00104A  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3190  00104E                     L2:
  3191  00104E  6EDF               	movwf	indf2,c
  3192  001050  D784               	goto	l9667
  3193  001052                     l9679:
  3194  001052  0101               	movlb	1	; () banked
  3195  001054  073B               	decf	__doprnt@c& (0+255),f,b
  3196  001056  0101               	movlb	1	; () banked
  3197  001058  293B               	incf	__doprnt@c& (0+255),w,b
  3198  00105A  B4D8               	btfsc	status,2,c
  3199  00105C  D039               	goto	l9691
  3200  00105E  D785               	goto	l9669
  3201  001060                     l9681:
  3202                           
  3203                           ; BSR set to: 1
  3204                           ;doprnt.c: 1208: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  3205  001060  0101               	movlb	1	; () banked
  3206  001062  EE20 F002          	lfsr	2,2
  3207  001066  5119               	movf	__doprnt@pb& (0+255),w,b
  3208  001068  26D9               	addwf	fsr2l,f,c
  3209  00106A  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3210  00106C  22DA               	addwfc	fsr2h,f,c
  3211  00106E  50DE               	movf	postinc2,w,c
  3212  001070  10DE               	iorwf	postinc2,w,c
  3213  001072  B4D8               	btfsc	status,2,c
  3214  001074  D014               	goto	l9685
  3215                           
  3216                           ; BSR set to: 1
  3217  001076  0101               	movlb	1	; () banked
  3218  001078  EE20 F002          	lfsr	2,2
  3219  00107C  5119               	movf	__doprnt@pb& (0+255),w,b
  3220  00107E  26D9               	addwf	fsr2l,f,c
  3221  001080  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3222  001082  22DA               	addwfc	fsr2h,f,c
  3223  001084  D801               	call	u16298
  3224  001086  D020               	goto	l9689
  3225  001088                     u16298:
  3226  001088  0005               	push	
  3227  00108A  6EFA               	movwf	pclath,c
  3228  00108C  50DE               	movf	postinc2,w,c
  3229  00108E  6EFD               	movwf	tosl,c
  3230  001090  50DE               	movf	postinc2,w,c
  3231  001092  6EFE               	movwf	tosh,c
  3232  001094  50F8               	movf	tblptru,w,c
  3233  001096  6EFF               	movwf	tosu,c
  3234  001098  50FA               	movf	pclath,w,c
  3235  00109A  0E30               	movlw	48
  3236  00109C  0012               	return		;indir
  3237  00109E                     l9685:
  3238  00109E  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3239  0010A2  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3240  0010A6  CFDE F11F          	movff	postinc2,??__doprnt
  3241  0010AA  CFDD F120          	movff	postdec2,??__doprnt+1
  3242  0010AE  C11F  FFD9         	movff	??__doprnt,fsr2l
  3243  0010B2  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3244  0010B6  0E30               	movlw	48
  3245  0010B8  6EDF               	movwf	indf2,c
  3246  0010BA  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3247  0010BE  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3248  0010C2  2ADE               	incf	postinc2,f,c
  3249  0010C4  0E00               	movlw	0
  3250  0010C6  22DD               	addwfc	postdec2,f,c
  3251  0010C8                     l9689:
  3252                           
  3253                           ;doprnt.c: 1209: exp--;
  3254  0010C8  0101               	movlb	1	; () banked
  3255  0010CA  0728               	decf	__doprnt@exp& (0+255),f,b
  3256  0010CC  A0D8               	btfss	status,0,c
  3257  0010CE  0729               	decf	(__doprnt@exp+1)& (0+255),f,b
  3258  0010D0                     l9691:
  3259                           
  3260                           ; BSR set to: 1
  3261  0010D0  0101               	movlb	1	; () banked
  3262  0010D2  BF29               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  3263  0010D4  D007               	goto	l9693
  3264  0010D6  0101               	movlb	1	; () banked
  3265  0010D8  5129               	movf	(__doprnt@exp+1)& (0+255),w,b
  3266  0010DA  E1C2               	bnz	l9681
  3267  0010DC  0101               	movlb	1	; () banked
  3268  0010DE  0528               	decf	__doprnt@exp& (0+255),w,b
  3269  0010E0  B0D8               	btfsc	status,0,c
  3270  0010E2  D7BE               	goto	l9681
  3271  0010E4                     l9693:
  3272                           
  3273                           ; BSR set to: 1
  3274                           ;doprnt.c: 1210: }
  3275                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3276  0010E4  0101               	movlb	1	; () banked
  3277  0010E6  BF3A               	btfsc	(__doprnt@prec+1)& (0+255),7,b
  3278  0010E8  D00C               	goto	l455
  3279  0010EA  0101               	movlb	1	; () banked
  3280  0010EC  513A               	movf	(__doprnt@prec+1)& (0+255),w,b
  3281  0010EE  E105               	bnz	u16310
  3282  0010F0  0E09               	movlw	9
  3283  0010F2  0101               	movlb	1	; () banked
  3284  0010F4  5D39               	subwf	__doprnt@prec& (0+255),w,b
  3285  0010F6  A0D8               	btfss	status,0,c
  3286  0010F8  D004               	goto	l455
  3287  0010FA                     u16310:
  3288                           
  3289                           ; BSR set to: 1
  3290                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3291  0010FA  0E08               	movlw	8
  3292  0010FC  0101               	movlb	1	; () banked
  3293  0010FE  6F3B               	movwf	__doprnt@c& (0+255),b
  3294  001100  D002               	goto	l9697
  3295  001102                     l455:
  3296                           
  3297                           ; BSR set to: 1
  3298                           ;doprnt.c: 1213: else
  3299                           ;doprnt.c: 1214: c = prec;
  3300  001102  C139  F13B         	movff	__doprnt@prec,__doprnt@c
  3301  001106                     l9697:
  3302                           
  3303                           ; BSR set to: 1
  3304                           ;doprnt.c: 1215: prec -= c;
  3305  001106  0101               	movlb	1	; () banked
  3306  001108  513B               	movf	__doprnt@c& (0+255),w,b
  3307  00110A  0101               	movlb	1	; () banked
  3308  00110C  5F39               	subwf	__doprnt@prec& (0+255),f,b
  3309  00110E  0E00               	movlw	0
  3310  001110  0101               	movlb	1	; () banked
  3311  001112  BF3B               	btfsc	__doprnt@c& (0+255),7,b
  3312  001114  0EFF               	movlw	255
  3313  001116  0101               	movlb	1	; () banked
  3314  001118  5B3A               	subwfb	(__doprnt@prec+1)& (0+255),f,b
  3315                           
  3316                           ; BSR set to: 1
  3317                           ;doprnt.c: 1219: if(c)
  3318  00111A  0101               	movlb	1	; () banked
  3319  00111C  513B               	movf	__doprnt@c& (0+255),w,b
  3320  00111E  0101               	movlb	1	; () banked
  3321  001120  B4D8               	btfsc	status,2,c
  3322  001122  D034               	goto	l9709
  3323                           
  3324                           ; BSR set to: 1
  3325                           ;doprnt.c: 1221: if(pb->func) (pb->func('.')); else ((*pb->ptr++ = '.'));
  3326  001124  0101               	movlb	1	; () banked
  3327  001126  EE20 F002          	lfsr	2,2
  3328  00112A  5119               	movf	__doprnt@pb& (0+255),w,b
  3329  00112C  26D9               	addwf	fsr2l,f,c
  3330  00112E  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3331  001130  22DA               	addwfc	fsr2h,f,c
  3332  001132  50DE               	movf	postinc2,w,c
  3333  001134  10DE               	iorwf	postinc2,w,c
  3334  001136  B4D8               	btfsc	status,2,c
  3335  001138  D014               	goto	l9705
  3336                           
  3337                           ; BSR set to: 1
  3338  00113A  0101               	movlb	1	; () banked
  3339  00113C  EE20 F002          	lfsr	2,2
  3340  001140  5119               	movf	__doprnt@pb& (0+255),w,b
  3341  001142  26D9               	addwf	fsr2l,f,c
  3342  001144  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3343  001146  22DA               	addwfc	fsr2h,f,c
  3344  001148  D801               	call	u16348
  3345  00114A  D020               	goto	l9709
  3346  00114C                     u16348:
  3347  00114C  0005               	push	
  3348  00114E  6EFA               	movwf	pclath,c
  3349  001150  50DE               	movf	postinc2,w,c
  3350  001152  6EFD               	movwf	tosl,c
  3351  001154  50DE               	movf	postinc2,w,c
  3352  001156  6EFE               	movwf	tosh,c
  3353  001158  50F8               	movf	tblptru,w,c
  3354  00115A  6EFF               	movwf	tosu,c
  3355  00115C  50FA               	movf	pclath,w,c
  3356  00115E  0E2E               	movlw	46
  3357  001160  0012               	return		;indir
  3358  001162                     l9705:
  3359  001162  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3360  001166  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3361  00116A  CFDE F11F          	movff	postinc2,??__doprnt
  3362  00116E  CFDD F120          	movff	postdec2,??__doprnt+1
  3363  001172  C11F  FFD9         	movff	??__doprnt,fsr2l
  3364  001176  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3365  00117A  0E2E               	movlw	46
  3366  00117C  6EDF               	movwf	indf2,c
  3367  00117E  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3368  001182  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3369  001186  2ADE               	incf	postinc2,f,c
  3370  001188  0E00               	movlw	0
  3371  00118A  22DD               	addwfc	postdec2,f,c
  3372  00118C                     l9709:
  3373                           
  3374                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3375  00118C  0101               	movlb	1	; () banked
  3376  00118E  513B               	movf	__doprnt@c& (0+255),w,b
  3377  001190  EC71  F015         	call	_scale
  3378  001194  C0B3  F125         	movff	?_scale,__doprnt$1743
  3379  001198  C0B4  F126         	movff	?_scale+1,__doprnt$1743+1
  3380  00119C  C0B5  F127         	movff	?_scale+2,__doprnt$1743+2
  3381                           
  3382                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3383  0011A0  C134  F0A7         	movff	__doprnt@fval,___ftmul@f2
  3384  0011A4  C135  F0A8         	movff	__doprnt@fval+1,___ftmul@f2+1
  3385  0011A8  C136  F0A9         	movff	__doprnt@fval+2,___ftmul@f2+2
  3386  0011AC  C125  F0A4         	movff	__doprnt$1743,___ftmul@f1
  3387  0011B0  C126  F0A5         	movff	__doprnt$1743+1,___ftmul@f1+1
  3388  0011B4  C127  F0A6         	movff	__doprnt$1743+2,___ftmul@f1+2
  3389  0011B8  EC5B  F021         	call	___ftmul	;wreg free
  3390  0011BC  C0A4  F104         	movff	?___ftmul,___fttol@f1
  3391  0011C0  C0A5  F105         	movff	?___ftmul+1,___fttol@f1+1
  3392  0011C4  C0A6  F106         	movff	?___ftmul+2,___fttol@f1+2
  3393  0011C8  ECB0  F022         	call	___fttol	;wreg free
  3394  0011CC  C104  F12A         	movff	?___fttol,__doprnt@val
  3395  0011D0  C105  F12B         	movff	?___fttol+1,__doprnt@val+1
  3396  0011D4  C106  F12C         	movff	?___fttol+2,__doprnt@val+2
  3397  0011D8  C107  F12D         	movff	?___fttol+3,__doprnt@val+3
  3398                           
  3399                           ;doprnt.c: 1228: while(c--) {
  3400  0011DC  D0A1               	goto	l9725
  3401  0011DE                     l9713:
  3402                           
  3403                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3404  0011DE  C12A  F090         	movff	__doprnt@val,___lldiv@dividend
  3405  0011E2  C12B  F091         	movff	__doprnt@val+1,___lldiv@dividend+1
  3406  0011E6  C12C  F092         	movff	__doprnt@val+2,___lldiv@dividend+2
  3407  0011EA  C12D  F093         	movff	__doprnt@val+3,___lldiv@dividend+3
  3408  0011EE  0101               	movlb	1	; () banked
  3409  0011F0  513B               	movf	__doprnt@c& (0+255),w,b
  3410  0011F2  0D04               	mullw	4
  3411  0011F4  0E01               	movlw	low _dpowers
  3412  0011F6  24F3               	addwf	prodl,w,c
  3413  0011F8  6EF6               	movwf	tblptrl,c
  3414  0011FA  0E06               	movlw	high _dpowers
  3415  0011FC  20F4               	addwfc	prodh,w,c
  3416  0011FE  6EF7               	movwf	tblptrh,c
  3417  001200                     	if	0	;There are less than 3 active tblptr bytes
  3418  001200                     	endif
  3419  001200  0009               	tblrd		*+
  3420  001202  CFF5 F094          	movff	tablat,___lldiv@divisor
  3421  001206  0009               	tblrd		*+
  3422  001208  CFF5 F095          	movff	tablat,___lldiv@divisor+1
  3423  00120C  0009               	tblrd		*+
  3424  00120E  CFF5 F096          	movff	tablat,___lldiv@divisor+2
  3425  001212  000A               	tblrd		*-
  3426  001214  CFF5 F097          	movff	tablat,___lldiv@divisor+3
  3427  001218  ECB9  F027         	call	___lldiv	;wreg free
  3428  00121C  C090  F12E         	movff	?___lldiv,__doprnt@tmpval
  3429  001220  C091  F12F         	movff	?___lldiv+1,__doprnt@tmpval+1
  3430  001224  C092  F130         	movff	?___lldiv+2,__doprnt@tmpval+2
  3431  001228  C093  F131         	movff	?___lldiv+3,__doprnt@tmpval+3
  3432                           
  3433                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3434  00122C  C12E  F09D         	movff	__doprnt@tmpval,___llmod@dividend
  3435  001230  C12F  F09E         	movff	__doprnt@tmpval+1,___llmod@dividend+1
  3436  001234  C130  F09F         	movff	__doprnt@tmpval+2,___llmod@dividend+2
  3437  001238  C131  F0A0         	movff	__doprnt@tmpval+3,___llmod@dividend+3
  3438  00123C  0E0A               	movlw	10
  3439  00123E  0100               	movlb	0	; () banked
  3440  001240  6FA1               	movwf	___llmod@divisor& (0+255),b
  3441  001242  0E00               	movlw	0
  3442  001244  6FA2               	movwf	(___llmod@divisor+1)& (0+255),b
  3443  001246  0E00               	movlw	0
  3444  001248  6FA3               	movwf	(___llmod@divisor+2)& (0+255),b
  3445  00124A  0E00               	movlw	0
  3446  00124C  6FA4               	movwf	(___llmod@divisor+3)& (0+255),b
  3447  00124E  ECBF  F028         	call	___llmod	;wreg free
  3448  001252  C09D  F12E         	movff	?___llmod,__doprnt@tmpval
  3449  001256  C09E  F12F         	movff	?___llmod+1,__doprnt@tmpval+1
  3450  00125A  C09F  F130         	movff	?___llmod+2,__doprnt@tmpval+2
  3451  00125E  C0A0  F131         	movff	?___llmod+3,__doprnt@tmpval+3
  3452                           
  3453                           ;doprnt.c: 1231: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
  3454  001262  0101               	movlb	1	; () banked
  3455  001264  EE20 F002          	lfsr	2,2
  3456  001268  5119               	movf	__doprnt@pb& (0+255),w,b
  3457  00126A  26D9               	addwf	fsr2l,f,c
  3458  00126C  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3459  00126E  22DA               	addwfc	fsr2h,f,c
  3460  001270  50DE               	movf	postinc2,w,c
  3461  001272  10DE               	iorwf	postinc2,w,c
  3462  001274  B4D8               	btfsc	status,2,c
  3463  001276  D016               	goto	l9721
  3464                           
  3465                           ; BSR set to: 1
  3466  001278  0101               	movlb	1	; () banked
  3467  00127A  EE20 F002          	lfsr	2,2
  3468  00127E  5119               	movf	__doprnt@pb& (0+255),w,b
  3469  001280  26D9               	addwf	fsr2l,f,c
  3470  001282  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3471  001284  22DA               	addwfc	fsr2h,f,c
  3472  001286  D801               	call	u16368
  3473  001288  D024               	goto	l9723
  3474  00128A                     u16368:
  3475  00128A  0005               	push	
  3476  00128C  6EFA               	movwf	pclath,c
  3477  00128E  50DE               	movf	postinc2,w,c
  3478  001290  6EFD               	movwf	tosl,c
  3479  001292  50DE               	movf	postinc2,w,c
  3480  001294  6EFE               	movwf	tosh,c
  3481  001296  50F8               	movf	tblptru,w,c
  3482  001298  6EFF               	movwf	tosu,c
  3483  00129A  50FA               	movf	pclath,w,c
  3484  00129C  0101               	movlb	1	; () banked
  3485  00129E  512E               	movf	__doprnt@tmpval& (0+255),w,b
  3486  0012A0  0F30               	addlw	48
  3487  0012A2  0012               	return		;indir
  3488  0012A4                     l9721:
  3489  0012A4  0101               	movlb	1	; () banked
  3490  0012A6  512E               	movf	__doprnt@tmpval& (0+255),w,b
  3491  0012A8  0F30               	addlw	48
  3492  0012AA  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3493  0012AE  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3494  0012B2  CFDE F11F          	movff	postinc2,??__doprnt
  3495  0012B6  CFDD F120          	movff	postdec2,??__doprnt+1
  3496  0012BA  C11F  FFD9         	movff	??__doprnt,fsr2l
  3497  0012BE  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3498  0012C2  6EDF               	movwf	indf2,c
  3499  0012C4  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3500  0012C8  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3501  0012CC  2ADE               	incf	postinc2,f,c
  3502  0012CE  0E00               	movlw	0
  3503  0012D0  22DD               	addwfc	postdec2,f,c
  3504  0012D2                     l9723:
  3505                           
  3506                           ;doprnt.c: 1232: val %= dpowers[c];
  3507  0012D2  C12A  F09D         	movff	__doprnt@val,___llmod@dividend
  3508  0012D6  C12B  F09E         	movff	__doprnt@val+1,___llmod@dividend+1
  3509  0012DA  C12C  F09F         	movff	__doprnt@val+2,___llmod@dividend+2
  3510  0012DE  C12D  F0A0         	movff	__doprnt@val+3,___llmod@dividend+3
  3511  0012E2  0101               	movlb	1	; () banked
  3512  0012E4  513B               	movf	__doprnt@c& (0+255),w,b
  3513  0012E6  0D04               	mullw	4
  3514  0012E8  0E01               	movlw	low _dpowers
  3515  0012EA  24F3               	addwf	prodl,w,c
  3516  0012EC  6EF6               	movwf	tblptrl,c
  3517  0012EE  0E06               	movlw	high _dpowers
  3518  0012F0  20F4               	addwfc	prodh,w,c
  3519  0012F2  6EF7               	movwf	tblptrh,c
  3520  0012F4                     	if	0	;There are less than 3 active tblptr bytes
  3521  0012F4                     	endif
  3522  0012F4  0009               	tblrd		*+
  3523  0012F6  CFF5 F0A1          	movff	tablat,___llmod@divisor
  3524  0012FA  0009               	tblrd		*+
  3525  0012FC  CFF5 F0A2          	movff	tablat,___llmod@divisor+1
  3526  001300  0009               	tblrd		*+
  3527  001302  CFF5 F0A3          	movff	tablat,___llmod@divisor+2
  3528  001306  000A               	tblrd		*-
  3529  001308  CFF5 F0A4          	movff	tablat,___llmod@divisor+3
  3530  00130C  ECBF  F028         	call	___llmod
  3531  001310  C09D  F12A         	movff	?___llmod,__doprnt@val
  3532  001314  C09E  F12B         	movff	?___llmod+1,__doprnt@val+1
  3533  001318  C09F  F12C         	movff	?___llmod+2,__doprnt@val+2
  3534  00131C  C0A0  F12D         	movff	?___llmod+3,__doprnt@val+3
  3535  001320                     l9725:
  3536  001320  0101               	movlb	1	; () banked
  3537  001322  073B               	decf	__doprnt@c& (0+255),f,b
  3538  001324  0101               	movlb	1	; () banked
  3539  001326  293B               	incf	__doprnt@c& (0+255),w,b
  3540  001328  B4D8               	btfsc	status,2,c
  3541  00132A  D039               	goto	l9737
  3542  00132C  D758               	goto	l9713
  3543  00132E                     l9727:
  3544                           
  3545                           ; BSR set to: 1
  3546                           ;doprnt.c: 1236: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  3547  00132E  0101               	movlb	1	; () banked
  3548  001330  EE20 F002          	lfsr	2,2
  3549  001334  5119               	movf	__doprnt@pb& (0+255),w,b
  3550  001336  26D9               	addwf	fsr2l,f,c
  3551  001338  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3552  00133A  22DA               	addwfc	fsr2h,f,c
  3553  00133C  50DE               	movf	postinc2,w,c
  3554  00133E  10DE               	iorwf	postinc2,w,c
  3555  001340  B4D8               	btfsc	status,2,c
  3556  001342  D014               	goto	l9731
  3557                           
  3558                           ; BSR set to: 1
  3559  001344  0101               	movlb	1	; () banked
  3560  001346  EE20 F002          	lfsr	2,2
  3561  00134A  5119               	movf	__doprnt@pb& (0+255),w,b
  3562  00134C  26D9               	addwf	fsr2l,f,c
  3563  00134E  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3564  001350  22DA               	addwfc	fsr2h,f,c
  3565  001352  D801               	call	u16398
  3566  001354  D020               	goto	l9735
  3567  001356                     u16398:
  3568  001356  0005               	push	
  3569  001358  6EFA               	movwf	pclath,c
  3570  00135A  50DE               	movf	postinc2,w,c
  3571  00135C  6EFD               	movwf	tosl,c
  3572  00135E  50DE               	movf	postinc2,w,c
  3573  001360  6EFE               	movwf	tosh,c
  3574  001362  50F8               	movf	tblptru,w,c
  3575  001364  6EFF               	movwf	tosu,c
  3576  001366  50FA               	movf	pclath,w,c
  3577  001368  0E30               	movlw	48
  3578  00136A  0012               	return		;indir
  3579  00136C                     l9731:
  3580  00136C  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3581  001370  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3582  001374  CFDE F11F          	movff	postinc2,??__doprnt
  3583  001378  CFDD F120          	movff	postdec2,??__doprnt+1
  3584  00137C  C11F  FFD9         	movff	??__doprnt,fsr2l
  3585  001380  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3586  001384  0E30               	movlw	48
  3587  001386  6EDF               	movwf	indf2,c
  3588  001388  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3589  00138C  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3590  001390  2ADE               	incf	postinc2,f,c
  3591  001392  0E00               	movlw	0
  3592  001394  22DD               	addwfc	postdec2,f,c
  3593  001396                     l9735:
  3594                           
  3595                           ;doprnt.c: 1237: prec--;
  3596  001396  0101               	movlb	1	; () banked
  3597  001398  0739               	decf	__doprnt@prec& (0+255),f,b
  3598  00139A  A0D8               	btfss	status,0,c
  3599  00139C  073A               	decf	(__doprnt@prec+1)& (0+255),f,b
  3600  00139E                     l9737:
  3601                           
  3602                           ; BSR set to: 1
  3603  00139E  0101               	movlb	1	; () banked
  3604  0013A0  5139               	movf	__doprnt@prec& (0+255),w,b
  3605  0013A2  0101               	movlb	1	; () banked
  3606  0013A4  113A               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  3607  0013A6  B4D8               	btfsc	status,2,c
  3608  0013A8  D2CB               	goto	l9861
  3609  0013AA  D7C1               	goto	l9727
  3610  0013AC                     l403:
  3611                           
  3612                           ; BSR set to: 1
  3613                           ;doprnt.c: 1246: }
  3614                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
  3615  0013AC  0101               	movlb	1	; () banked
  3616  0013AE  BD37               	btfsc	__doprnt@flag& (0+255),6,b
  3617  0013B0  D046               	goto	l470
  3618                           
  3619                           ; BSR set to: 1
  3620                           ;doprnt.c: 1253: {
  3621                           ;doprnt.c: 1255: if(flag & 0x10)
  3622  0013B2  0101               	movlb	1	; () banked
  3623  0013B4  A937               	btfss	__doprnt@flag& (0+255),4,b
  3624  0013B6  D019               	goto	l9743
  3625                           
  3626                           ; BSR set to: 1
  3627                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  3628  0013B8  C11D  FFD9         	movff	__doprnt@ap,fsr2l
  3629  0013BC  C11E  FFDA         	movff	__doprnt@ap+1,fsr2h
  3630  0013C0  CFDF F11F          	movff	indf2,??__doprnt
  3631  0013C4  0E04               	movlw	4
  3632  0013C6  26DE               	addwf	postinc2,f,c
  3633  0013C8  CFDF F120          	movff	indf2,??__doprnt+1
  3634  0013CC  0E00               	movlw	0
  3635  0013CE  22DD               	addwfc	postdec2,f,c
  3636  0013D0  C11F  FFD9         	movff	??__doprnt,fsr2l
  3637  0013D4  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3638  0013D8  CFDE F12A          	movff	postinc2,__doprnt@val
  3639  0013DC  CFDE F12B          	movff	postinc2,__doprnt@val+1
  3640  0013E0  CFDE F12C          	movff	postinc2,__doprnt@val+2
  3641  0013E4  CFDE F12D          	movff	postinc2,__doprnt@val+3
  3642  0013E8  D01A               	goto	l9745
  3643  0013EA                     l9743:
  3644                           
  3645                           ; BSR set to: 1
  3646                           ;doprnt.c: 1257: else
  3647                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3648  0013EA  C11D  FFD9         	movff	__doprnt@ap,fsr2l
  3649  0013EE  C11E  FFDA         	movff	__doprnt@ap+1,fsr2h
  3650  0013F2  CFDF F11F          	movff	indf2,??__doprnt
  3651  0013F6  0E02               	movlw	2
  3652  0013F8  26DE               	addwf	postinc2,f,c
  3653  0013FA  CFDF F120          	movff	indf2,??__doprnt+1
  3654  0013FE  0E00               	movlw	0
  3655  001400  22DD               	addwfc	postdec2,f,c
  3656  001402  C11F  FFD9         	movff	??__doprnt,fsr2l
  3657  001406  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3658  00140A  CFDE F12A          	movff	postinc2,__doprnt@val
  3659  00140E  CFDD F12B          	movff	postdec2,__doprnt@val+1
  3660  001412  0101               	movlb	1	; () banked
  3661  001414  0E00               	movlw	0
  3662  001416  BF2B               	btfsc	(__doprnt@val+1)& (0+255),7,b
  3663  001418  0EFF               	movlw	-1
  3664  00141A  6F2C               	movwf	(__doprnt@val+2)& (0+255),b
  3665  00141C  6F2D               	movwf	(__doprnt@val+3)& (0+255),b
  3666  00141E                     l9745:
  3667                           
  3668                           ; BSR set to: 1
  3669                           ;doprnt.c: 1261: if((long)val < 0) {
  3670  00141E  0101               	movlb	1	; () banked
  3671  001420  AF2D               	btfss	(__doprnt@val+3)& (0+255),7,b
  3672  001422  D044               	goto	l9755
  3673                           
  3674                           ; BSR set to: 1
  3675                           ;doprnt.c: 1262: flag |= 0x03;
  3676  001424  0E03               	movlw	3
  3677  001426  0101               	movlb	1	; () banked
  3678  001428  1337               	iorwf	__doprnt@flag& (0+255),f,b
  3679                           
  3680                           ; BSR set to: 1
  3681                           ;doprnt.c: 1263: val = -val;
  3682  00142A  0101               	movlb	1	; () banked
  3683  00142C  1F2D               	comf	(__doprnt@val+3)& (0+255),f,b
  3684  00142E  1F2C               	comf	(__doprnt@val+2)& (0+255),f,b
  3685  001430  1F2B               	comf	(__doprnt@val+1)& (0+255),f,b
  3686  001432  6D2A               	negf	__doprnt@val& (0+255),b
  3687  001434  0E00               	movlw	0
  3688  001436  232B               	addwfc	(__doprnt@val+1)& (0+255),f,b
  3689  001438  232C               	addwfc	(__doprnt@val+2)& (0+255),f,b
  3690  00143A  232D               	addwfc	(__doprnt@val+3)& (0+255),f,b
  3691                           
  3692                           ; BSR set to: 1
  3693                           ;doprnt.c: 1264: }
  3694                           ;doprnt.c: 1266: }
  3695  00143C  D037               	goto	l9755
  3696  00143E                     l470:
  3697                           
  3698                           ; BSR set to: 1
  3699                           ;doprnt.c: 1268: else
  3700                           ;doprnt.c: 1273: {
  3701                           ;doprnt.c: 1281: if(flag & 0x10)
  3702  00143E  0101               	movlb	1	; () banked
  3703  001440  A937               	btfss	__doprnt@flag& (0+255),4,b
  3704  001442  D019               	goto	l9753
  3705                           
  3706                           ; BSR set to: 1
  3707                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  3708  001444  C11D  FFD9         	movff	__doprnt@ap,fsr2l
  3709  001448  C11E  FFDA         	movff	__doprnt@ap+1,fsr2h
  3710  00144C  CFDF F11F          	movff	indf2,??__doprnt
  3711  001450  0E04               	movlw	4
  3712  001452  26DE               	addwf	postinc2,f,c
  3713  001454  CFDF F120          	movff	indf2,??__doprnt+1
  3714  001458  0E00               	movlw	0
  3715  00145A  22DD               	addwfc	postdec2,f,c
  3716  00145C  C11F  FFD9         	movff	??__doprnt,fsr2l
  3717  001460  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3718  001464  CFDE F12A          	movff	postinc2,__doprnt@val
  3719  001468  CFDE F12B          	movff	postinc2,__doprnt@val+1
  3720  00146C  CFDE F12C          	movff	postinc2,__doprnt@val+2
  3721  001470  CFDE F12D          	movff	postinc2,__doprnt@val+3
  3722  001474  D01B               	goto	l9755
  3723  001476                     l9753:
  3724                           
  3725                           ; BSR set to: 1
  3726                           ;doprnt.c: 1283: else
  3727                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3728  001476  C11D  FFD9         	movff	__doprnt@ap,fsr2l
  3729  00147A  C11E  FFDA         	movff	__doprnt@ap+1,fsr2h
  3730  00147E  CFDF F11F          	movff	indf2,??__doprnt
  3731  001482  0E02               	movlw	2
  3732  001484  26DE               	addwf	postinc2,f,c
  3733  001486  CFDF F120          	movff	indf2,??__doprnt+1
  3734  00148A  0E00               	movlw	0
  3735  00148C  22DD               	addwfc	postdec2,f,c
  3736  00148E  C11F  FFD9         	movff	??__doprnt,fsr2l
  3737  001492  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3738  001496  CFDE F121          	movff	postinc2,??__doprnt+2
  3739  00149A  CFDD F122          	movff	postdec2,??__doprnt+3
  3740  00149E  C121  F12A         	movff	??__doprnt+2,__doprnt@val
  3741  0014A2  C122  F12B         	movff	??__doprnt+3,__doprnt@val+1
  3742  0014A6  0101               	movlb	1	; () banked
  3743  0014A8  6B2C               	clrf	(__doprnt@val+2)& (0+255),b
  3744  0014AA  6B2D               	clrf	(__doprnt@val+3)& (0+255),b
  3745  0014AC                     l9755:
  3746                           
  3747                           ; BSR set to: 1
  3748                           ;doprnt.c: 1287: }
  3749                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3750  0014AC  0101               	movlb	1	; () banked
  3751  0014AE  5139               	movf	__doprnt@prec& (0+255),w,b
  3752  0014B0  0101               	movlb	1	; () banked
  3753  0014B2  113A               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  3754  0014B4  A4D8               	btfss	status,2,c
  3755  0014B6  D00D               	goto	l9761
  3756                           
  3757                           ; BSR set to: 1
  3758  0014B8  0101               	movlb	1	; () banked
  3759  0014BA  512A               	movf	__doprnt@val& (0+255),w,b
  3760  0014BC  0101               	movlb	1	; () banked
  3761  0014BE  112B               	iorwf	(__doprnt@val+1)& (0+255),w,b
  3762  0014C0  0101               	movlb	1	; () banked
  3763  0014C2  112C               	iorwf	(__doprnt@val+2)& (0+255),w,b
  3764  0014C4  0101               	movlb	1	; () banked
  3765  0014C6  112D               	iorwf	(__doprnt@val+3)& (0+255),w,b
  3766  0014C8  A4D8               	btfss	status,2,c
  3767  0014CA  D003               	goto	l9761
  3768                           
  3769                           ; BSR set to: 1
  3770                           ;doprnt.c: 1291: prec++;
  3771  0014CC  0101               	movlb	1	; () banked
  3772  0014CE  4B39               	infsnz	__doprnt@prec& (0+255),f,b
  3773  0014D0  2B3A               	incf	(__doprnt@prec+1)& (0+255),f,b
  3774  0014D2                     l9761:
  3775                           
  3776                           ; BSR set to: 1
  3777                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3778  0014D2  0E01               	movlw	1
  3779  0014D4  0101               	movlb	1	; () banked
  3780  0014D6  6F3B               	movwf	__doprnt@c& (0+255),b
  3781  0014D8                     l9763:
  3782                           
  3783                           ; BSR set to: 1
  3784  0014D8  0E0A               	movlw	10
  3785  0014DA  0101               	movlb	1	; () banked
  3786  0014DC  193B               	xorwf	__doprnt@c& (0+255),w,b
  3787  0014DE  B4D8               	btfsc	status,2,c
  3788  0014E0  D01E               	goto	l9775
  3789                           
  3790                           ; BSR set to: 1
  3791                           ;doprnt.c: 1306: if(val < dpowers[c])
  3792                           
  3793                           ; BSR set to: 1
  3794                           
  3795                           ; BSR set to: 1
  3796  0014E2  0101               	movlb	1	; () banked
  3797  0014E4  513B               	movf	__doprnt@c& (0+255),w,b
  3798  0014E6  0D04               	mullw	4
  3799  0014E8  0E01               	movlw	low _dpowers
  3800  0014EA  24F3               	addwf	prodl,w,c
  3801  0014EC  6EF6               	movwf	tblptrl,c
  3802  0014EE  0E06               	movlw	high _dpowers
  3803  0014F0  20F4               	addwfc	prodh,w,c
  3804  0014F2  6EF7               	movwf	tblptrh,c
  3805  0014F4                     	if	0	;There are less than 3 active tblptr bytes
  3806  0014F4                     	endif
  3807  0014F4  0009               	tblrd		*+
  3808  0014F6  50F5               	movf	tablat,w,c
  3809  0014F8  0101               	movlb	1	; () banked
  3810  0014FA  5D2A               	subwf	__doprnt@val& (0+255),w,b
  3811  0014FC  0009               	tblrd		*+
  3812  0014FE  50F5               	movf	tablat,w,c
  3813  001500  0101               	movlb	1	; () banked
  3814  001502  592B               	subwfb	(__doprnt@val+1)& (0+255),w,b
  3815  001504  0009               	tblrd		*+
  3816  001506  50F5               	movf	tablat,w,c
  3817  001508  0101               	movlb	1	; () banked
  3818  00150A  592C               	subwfb	(__doprnt@val+2)& (0+255),w,b
  3819  00150C  0009               	tblrd		*+
  3820  00150E  50F5               	movf	tablat,w,c
  3821  001510  0101               	movlb	1	; () banked
  3822  001512  592D               	subwfb	(__doprnt@val+3)& (0+255),w,b
  3823  001514  A0D8               	btfss	status,0,c
  3824  001516  D003               	goto	l9775
  3825                           
  3826                           ; BSR set to: 1
  3827                           
  3828                           ; BSR set to: 1
  3829                           
  3830                           ; BSR set to: 1
  3831                           ;doprnt.c: 1307: break;
  3832  001518  0101               	movlb	1	; () banked
  3833  00151A  2B3B               	incf	__doprnt@c& (0+255),f,b
  3834  00151C  D7DD               	goto	l9763
  3835  00151E                     l9775:
  3836                           
  3837                           ; BSR set to: 1
  3838                           ;doprnt.c: 1339: if(c < prec)
  3839  00151E  0E80               	movlw	128
  3840  001520  0101               	movlb	1	; () banked
  3841  001522  BF3B               	btfsc	__doprnt@c& (0+255),7,b
  3842  001524  0E7F               	movlw	127
  3843  001526  0101               	movlb	1	; () banked
  3844  001528  6F1F               	movwf	??__doprnt& (0+255),b
  3845  00152A  0101               	movlb	1	; () banked
  3846  00152C  5139               	movf	__doprnt@prec& (0+255),w,b
  3847  00152E  0101               	movlb	1	; () banked
  3848  001530  5D3B               	subwf	__doprnt@c& (0+255),w,b
  3849  001532  0101               	movlb	1	; () banked
  3850  001534  513A               	movf	(__doprnt@prec+1)& (0+255),w,b
  3851  001536  0A80               	xorlw	128
  3852  001538  0101               	movlb	1	; () banked
  3853  00153A  591F               	subwfb	??__doprnt& (0+255),w,b
  3854  00153C  B0D8               	btfsc	status,0,c
  3855  00153E  D003               	goto	l9779
  3856                           
  3857                           ; BSR set to: 1
  3858                           ;doprnt.c: 1340: c = prec;
  3859  001540  C139  F13B         	movff	__doprnt@prec,__doprnt@c
  3860  001544  D018               	goto	l9783
  3861  001546                     l9779:
  3862                           
  3863                           ; BSR set to: 1
  3864                           ;doprnt.c: 1341: else if(prec < c)
  3865  001546  0101               	movlb	1	; () banked
  3866  001548  513A               	movf	(__doprnt@prec+1)& (0+255),w,b
  3867  00154A  0A80               	xorlw	128
  3868  00154C  0101               	movlb	1	; () banked
  3869  00154E  6F1F               	movwf	??__doprnt& (0+255),b
  3870  001550  0101               	movlb	1	; () banked
  3871  001552  513B               	movf	__doprnt@c& (0+255),w,b
  3872  001554  0101               	movlb	1	; () banked
  3873  001556  5D39               	subwf	__doprnt@prec& (0+255),w,b
  3874  001558  0E80               	movlw	128
  3875  00155A  0101               	movlb	1	; () banked
  3876  00155C  BF3B               	btfsc	__doprnt@c& (0+255),7,b
  3877  00155E  0E7F               	movlw	127
  3878  001560  0101               	movlb	1	; () banked
  3879  001562  591F               	subwfb	??__doprnt& (0+255),w,b
  3880  001564  B0D8               	btfsc	status,0,c
  3881  001566  D007               	goto	l9783
  3882                           
  3883                           ; BSR set to: 1
  3884                           ;doprnt.c: 1342: prec = c;
  3885  001568  0101               	movlb	1	; () banked
  3886  00156A  513B               	movf	__doprnt@c& (0+255),w,b
  3887  00156C  0101               	movlb	1	; () banked
  3888  00156E  6F39               	movwf	__doprnt@prec& (0+255),b
  3889  001570  6B3A               	clrf	(__doprnt@prec+1)& (0+255),b
  3890  001572  BF39               	btfsc	__doprnt@prec& (0+255),7,b
  3891  001574  073A               	decf	(__doprnt@prec+1)& (0+255),f,b
  3892  001576                     l9783:
  3893                           
  3894                           ; BSR set to: 1
  3895                           ;doprnt.c: 1345: if(width && flag & 0x03)
  3896  001576  0101               	movlb	1	; () banked
  3897  001578  5132               	movf	__doprnt@width& (0+255),w,b
  3898  00157A  0101               	movlb	1	; () banked
  3899  00157C  1133               	iorwf	(__doprnt@width+1)& (0+255),w,b
  3900  00157E  B4D8               	btfsc	status,2,c
  3901  001580  D014               	goto	l9789
  3902                           
  3903                           ; BSR set to: 1
  3904  001582  0E03               	movlw	3
  3905  001584  0101               	movlb	1	; () banked
  3906  001586  1537               	andwf	__doprnt@flag& (0+255),w,b
  3907  001588  0101               	movlb	1	; () banked
  3908  00158A  6F1F               	movwf	??__doprnt& (0+255),b
  3909  00158C  0E00               	movlw	0
  3910  00158E  0101               	movlb	1	; () banked
  3911  001590  1538               	andwf	(__doprnt@flag+1)& (0+255),w,b
  3912  001592  0101               	movlb	1	; () banked
  3913  001594  6F20               	movwf	(??__doprnt+1)& (0+255),b
  3914  001596  0101               	movlb	1	; () banked
  3915  001598  511F               	movf	??__doprnt& (0+255),w,b
  3916  00159A  0101               	movlb	1	; () banked
  3917  00159C  1120               	iorwf	(??__doprnt+1)& (0+255),w,b
  3918  00159E  B4D8               	btfsc	status,2,c
  3919  0015A0  D004               	goto	l9789
  3920                           
  3921                           ; BSR set to: 1
  3922                           ;doprnt.c: 1346: width--;
  3923  0015A2  0101               	movlb	1	; () banked
  3924  0015A4  0732               	decf	__doprnt@width& (0+255),f,b
  3925  0015A6  A0D8               	btfss	status,0,c
  3926  0015A8  0733               	decf	(__doprnt@width+1)& (0+255),f,b
  3927  0015AA                     l9789:
  3928                           
  3929                           ; BSR set to: 1
  3930                           ;doprnt.c: 1348: if(flag & 0x4000) {
  3931  0015AA  0101               	movlb	1	; () banked
  3932  0015AC  AD38               	btfss	(__doprnt@flag+1)& (0+255),6,b
  3933  0015AE  D01E               	goto	l9797
  3934                           
  3935                           ; BSR set to: 1
  3936                           ;doprnt.c: 1349: if(width > prec)
  3937  0015B0  0101               	movlb	1	; () banked
  3938  0015B2  5132               	movf	__doprnt@width& (0+255),w,b
  3939  0015B4  0101               	movlb	1	; () banked
  3940  0015B6  5D39               	subwf	__doprnt@prec& (0+255),w,b
  3941  0015B8  0101               	movlb	1	; () banked
  3942  0015BA  513A               	movf	(__doprnt@prec+1)& (0+255),w,b
  3943  0015BC  0A80               	xorlw	128
  3944  0015BE  0101               	movlb	1	; () banked
  3945  0015C0  6F1F               	movwf	??__doprnt& (0+255),b
  3946  0015C2  0101               	movlb	1	; () banked
  3947  0015C4  5133               	movf	(__doprnt@width+1)& (0+255),w,b
  3948  0015C6  0A80               	xorlw	128
  3949  0015C8  0101               	movlb	1	; () banked
  3950  0015CA  591F               	subwfb	??__doprnt& (0+255),w,b
  3951  0015CC  B0D8               	btfsc	status,0,c
  3952  0015CE  D009               	goto	l9795
  3953                           
  3954                           ; BSR set to: 1
  3955                           ;doprnt.c: 1350: width -= prec;
  3956  0015D0  0101               	movlb	1	; () banked
  3957  0015D2  5139               	movf	__doprnt@prec& (0+255),w,b
  3958  0015D4  0101               	movlb	1	; () banked
  3959  0015D6  5F32               	subwf	__doprnt@width& (0+255),f,b
  3960  0015D8  0101               	movlb	1	; () banked
  3961  0015DA  513A               	movf	(__doprnt@prec+1)& (0+255),w,b
  3962  0015DC  0101               	movlb	1	; () banked
  3963  0015DE  5B33               	subwfb	(__doprnt@width+1)& (0+255),f,b
  3964  0015E0  D005               	goto	l9797
  3965  0015E2                     l9795:
  3966                           
  3967                           ; BSR set to: 1
  3968                           ;doprnt.c: 1351: else
  3969                           ;doprnt.c: 1352: width = 0;
  3970  0015E2  0E00               	movlw	0
  3971  0015E4  0101               	movlb	1	; () banked
  3972  0015E6  6F33               	movwf	(__doprnt@width+1)& (0+255),b
  3973  0015E8  0E00               	movlw	0
  3974  0015EA  6F32               	movwf	__doprnt@width& (0+255),b
  3975  0015EC                     l9797:
  3976                           
  3977                           ; BSR set to: 1
  3978                           ;doprnt.c: 1353: }
  3979                           ;doprnt.c: 1381: if(width > c)
  3980  0015EC  0E80               	movlw	128
  3981  0015EE  0101               	movlb	1	; () banked
  3982  0015F0  BF3B               	btfsc	__doprnt@c& (0+255),7,b
  3983  0015F2  0E7F               	movlw	127
  3984  0015F4  0101               	movlb	1	; () banked
  3985  0015F6  6F1F               	movwf	??__doprnt& (0+255),b
  3986  0015F8  0101               	movlb	1	; () banked
  3987  0015FA  5132               	movf	__doprnt@width& (0+255),w,b
  3988  0015FC  0101               	movlb	1	; () banked
  3989  0015FE  5D3B               	subwf	__doprnt@c& (0+255),w,b
  3990  001600  0101               	movlb	1	; () banked
  3991  001602  5133               	movf	(__doprnt@width+1)& (0+255),w,b
  3992  001604  0A80               	xorlw	128
  3993  001606  0101               	movlb	1	; () banked
  3994  001608  591F               	subwfb	??__doprnt& (0+255),w,b
  3995  00160A  B0D8               	btfsc	status,0,c
  3996  00160C  D00B               	goto	l9801
  3997                           
  3998                           ; BSR set to: 1
  3999                           ;doprnt.c: 1382: width -= c;
  4000  00160E  0101               	movlb	1	; () banked
  4001  001610  513B               	movf	__doprnt@c& (0+255),w,b
  4002  001612  0101               	movlb	1	; () banked
  4003  001614  5F32               	subwf	__doprnt@width& (0+255),f,b
  4004  001616  0E00               	movlw	0
  4005  001618  0101               	movlb	1	; () banked
  4006  00161A  BF3B               	btfsc	__doprnt@c& (0+255),7,b
  4007  00161C  0EFF               	movlw	255
  4008  00161E  0101               	movlb	1	; () banked
  4009  001620  5B33               	subwfb	(__doprnt@width+1)& (0+255),f,b
  4010  001622  D005               	goto	l9803
  4011  001624                     l9801:
  4012                           
  4013                           ; BSR set to: 1
  4014                           ;doprnt.c: 1383: else
  4015                           ;doprnt.c: 1384: width = 0;
  4016  001624  0E00               	movlw	0
  4017  001626  0101               	movlb	1	; () banked
  4018  001628  6F33               	movwf	(__doprnt@width+1)& (0+255),b
  4019  00162A  0E00               	movlw	0
  4020  00162C  6F32               	movwf	__doprnt@width& (0+255),b
  4021  00162E                     l9803:
  4022                           
  4023                           ; BSR set to: 1
  4024                           ;doprnt.c: 1387: if(flag & 0x04) {
  4025  00162E  0101               	movlb	1	; () banked
  4026  001630  A537               	btfss	__doprnt@flag& (0+255),2,b
  4027  001632  D083               	goto	l9827
  4028                           
  4029                           ; BSR set to: 1
  4030                           ;doprnt.c: 1392: if(flag & 0x03)
  4031  001634  0E03               	movlw	3
  4032  001636  0101               	movlb	1	; () banked
  4033  001638  1537               	andwf	__doprnt@flag& (0+255),w,b
  4034  00163A  0101               	movlb	1	; () banked
  4035  00163C  6F1F               	movwf	??__doprnt& (0+255),b
  4036  00163E  0E00               	movlw	0
  4037  001640  0101               	movlb	1	; () banked
  4038  001642  1538               	andwf	(__doprnt@flag+1)& (0+255),w,b
  4039  001644  0101               	movlb	1	; () banked
  4040  001646  6F20               	movwf	(??__doprnt+1)& (0+255),b
  4041  001648  0101               	movlb	1	; () banked
  4042  00164A  511F               	movf	??__doprnt& (0+255),w,b
  4043  00164C  0101               	movlb	1	; () banked
  4044  00164E  1120               	iorwf	(??__doprnt+1)& (0+255),w,b
  4045  001650  B4D8               	btfsc	status,2,c
  4046  001652  D034               	goto	l9815
  4047                           
  4048                           ; BSR set to: 1
  4049                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  4050  001654  0101               	movlb	1	; () banked
  4051  001656  EE20 F002          	lfsr	2,2
  4052  00165A  5119               	movf	__doprnt@pb& (0+255),w,b
  4053  00165C  26D9               	addwf	fsr2l,f,c
  4054  00165E  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4055  001660  22DA               	addwfc	fsr2h,f,c
  4056  001662  50DE               	movf	postinc2,w,c
  4057  001664  10DE               	iorwf	postinc2,w,c
  4058  001666  B4D8               	btfsc	status,2,c
  4059  001668  D014               	goto	l9811
  4060                           
  4061                           ; BSR set to: 1
  4062  00166A  0101               	movlb	1	; () banked
  4063  00166C  EE20 F002          	lfsr	2,2
  4064  001670  5119               	movf	__doprnt@pb& (0+255),w,b
  4065  001672  26D9               	addwf	fsr2l,f,c
  4066  001674  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4067  001676  22DA               	addwfc	fsr2h,f,c
  4068  001678  D801               	call	u16608
  4069  00167A  D020               	goto	l9815
  4070  00167C                     u16608:
  4071  00167C  0005               	push	
  4072  00167E  6EFA               	movwf	pclath,c
  4073  001680  50DE               	movf	postinc2,w,c
  4074  001682  6EFD               	movwf	tosl,c
  4075  001684  50DE               	movf	postinc2,w,c
  4076  001686  6EFE               	movwf	tosh,c
  4077  001688  50F8               	movf	tblptru,w,c
  4078  00168A  6EFF               	movwf	tosu,c
  4079  00168C  50FA               	movf	pclath,w,c
  4080  00168E  0E2D               	movlw	45
  4081  001690  0012               	return		;indir
  4082  001692                     l9811:
  4083  001692  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4084  001696  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4085  00169A  CFDE F11F          	movff	postinc2,??__doprnt
  4086  00169E  CFDD F120          	movff	postdec2,??__doprnt+1
  4087  0016A2  C11F  FFD9         	movff	??__doprnt,fsr2l
  4088  0016A6  C120  FFDA         	movff	??__doprnt+1,fsr2h
  4089  0016AA  0E2D               	movlw	45
  4090  0016AC  6EDF               	movwf	indf2,c
  4091  0016AE  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4092  0016B2  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4093  0016B6  2ADE               	incf	postinc2,f,c
  4094  0016B8  0E00               	movlw	0
  4095  0016BA  22DD               	addwfc	postdec2,f,c
  4096  0016BC                     l9815:
  4097                           
  4098                           ;doprnt.c: 1415: if(width)
  4099  0016BC  0101               	movlb	1	; () banked
  4100  0016BE  5132               	movf	__doprnt@width& (0+255),w,b
  4101  0016C0  0101               	movlb	1	; () banked
  4102  0016C2  1133               	iorwf	(__doprnt@width+1)& (0+255),w,b
  4103  0016C4  B4D8               	btfsc	status,2,c
  4104  0016C6  D131               	goto	l9859
  4105                           
  4106                           ; BSR set to: 1
  4107                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  4108                           
  4109                           ; BSR set to: 1
  4110                           
  4111                           ;doprnt.c: 1416: do
  4112  0016C8  0101               	movlb	1	; () banked
  4113  0016CA  EE20 F002          	lfsr	2,2
  4114  0016CE  5119               	movf	__doprnt@pb& (0+255),w,b
  4115  0016D0  26D9               	addwf	fsr2l,f,c
  4116  0016D2  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4117  0016D4  22DA               	addwfc	fsr2h,f,c
  4118  0016D6  50DE               	movf	postinc2,w,c
  4119  0016D8  10DE               	iorwf	postinc2,w,c
  4120  0016DA  B4D8               	btfsc	status,2,c
  4121  0016DC  D014               	goto	l9821
  4122                           
  4123                           ; BSR set to: 1
  4124  0016DE  0101               	movlb	1	; () banked
  4125  0016E0  EE20 F002          	lfsr	2,2
  4126  0016E4  5119               	movf	__doprnt@pb& (0+255),w,b
  4127  0016E6  26D9               	addwf	fsr2l,f,c
  4128  0016E8  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4129  0016EA  22DA               	addwfc	fsr2h,f,c
  4130  0016EC  D801               	call	u16638
  4131  0016EE  D020               	goto	l9825
  4132  0016F0                     u16638:
  4133  0016F0  0005               	push	
  4134  0016F2  6EFA               	movwf	pclath,c
  4135  0016F4  50DE               	movf	postinc2,w,c
  4136  0016F6  6EFD               	movwf	tosl,c
  4137  0016F8  50DE               	movf	postinc2,w,c
  4138  0016FA  6EFE               	movwf	tosh,c
  4139  0016FC  50F8               	movf	tblptru,w,c
  4140  0016FE  6EFF               	movwf	tosu,c
  4141  001700  50FA               	movf	pclath,w,c
  4142  001702  0E30               	movlw	48
  4143  001704  0012               	return		;indir
  4144  001706                     l9821:
  4145  001706  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4146  00170A  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4147  00170E  CFDE F11F          	movff	postinc2,??__doprnt
  4148  001712  CFDD F120          	movff	postdec2,??__doprnt+1
  4149  001716  C11F  FFD9         	movff	??__doprnt,fsr2l
  4150  00171A  C120  FFDA         	movff	??__doprnt+1,fsr2h
  4151  00171E  0E30               	movlw	48
  4152  001720  6EDF               	movwf	indf2,c
  4153  001722  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4154  001726  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4155  00172A  2ADE               	incf	postinc2,f,c
  4156  00172C  0E00               	movlw	0
  4157  00172E  22DD               	addwfc	postdec2,f,c
  4158  001730                     l9825:
  4159                           
  4160                           ;doprnt.c: 1418: while(--width);
  4161  001730  0101               	movlb	1	; () banked
  4162  001732  0732               	decf	__doprnt@width& (0+255),f,b
  4163  001734  A0D8               	btfss	status,0,c
  4164  001736  0733               	decf	(__doprnt@width+1)& (0+255),f,b
  4165  001738  D7C1               	goto	l9815
  4166  00173A                     l9827:
  4167                           
  4168                           ; BSR set to: 1
  4169                           ;doprnt.c: 1422: {
  4170                           ;doprnt.c: 1424: if(width
  4171                           ;doprnt.c: 1428: )
  4172  00173A  0101               	movlb	1	; () banked
  4173  00173C  5132               	movf	__doprnt@width& (0+255),w,b
  4174  00173E  0101               	movlb	1	; () banked
  4175  001740  1133               	iorwf	(__doprnt@width+1)& (0+255),w,b
  4176  001742  B4D8               	btfsc	status,2,c
  4177  001744  D03E               	goto	l9839
  4178  001746                     l9829:
  4179                           
  4180                           ; BSR set to: 1
  4181                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  4182  001746  0101               	movlb	1	; () banked
  4183  001748  EE20 F002          	lfsr	2,2
  4184  00174C  5119               	movf	__doprnt@pb& (0+255),w,b
  4185  00174E  26D9               	addwf	fsr2l,f,c
  4186  001750  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4187  001752  22DA               	addwfc	fsr2h,f,c
  4188  001754  50DE               	movf	postinc2,w,c
  4189  001756  10DE               	iorwf	postinc2,w,c
  4190  001758  B4D8               	btfsc	status,2,c
  4191  00175A  D014               	goto	l9833
  4192                           
  4193                           ; BSR set to: 1
  4194  00175C  0101               	movlb	1	; () banked
  4195  00175E  EE20 F002          	lfsr	2,2
  4196  001762  5119               	movf	__doprnt@pb& (0+255),w,b
  4197  001764  26D9               	addwf	fsr2l,f,c
  4198  001766  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4199  001768  22DA               	addwfc	fsr2h,f,c
  4200  00176A  D801               	call	u16678
  4201  00176C  D020               	goto	l9837
  4202  00176E                     u16678:
  4203  00176E  0005               	push	
  4204  001770  6EFA               	movwf	pclath,c
  4205  001772  50DE               	movf	postinc2,w,c
  4206  001774  6EFD               	movwf	tosl,c
  4207  001776  50DE               	movf	postinc2,w,c
  4208  001778  6EFE               	movwf	tosh,c
  4209  00177A  50F8               	movf	tblptru,w,c
  4210  00177C  6EFF               	movwf	tosu,c
  4211  00177E  50FA               	movf	pclath,w,c
  4212  001780  0E20               	movlw	32
  4213  001782  0012               	return		;indir
  4214  001784                     l9833:
  4215  001784  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4216  001788  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4217  00178C  CFDE F11F          	movff	postinc2,??__doprnt
  4218  001790  CFDD F120          	movff	postdec2,??__doprnt+1
  4219  001794  C11F  FFD9         	movff	??__doprnt,fsr2l
  4220  001798  C120  FFDA         	movff	??__doprnt+1,fsr2h
  4221  00179C  0E20               	movlw	32
  4222  00179E  6EDF               	movwf	indf2,c
  4223  0017A0  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4224  0017A4  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4225  0017A8  2ADE               	incf	postinc2,f,c
  4226  0017AA  0E00               	movlw	0
  4227  0017AC  22DD               	addwfc	postdec2,f,c
  4228  0017AE                     l9837:
  4229                           
  4230                           ;doprnt.c: 1431: while(--width);
  4231  0017AE  0101               	movlb	1	; () banked
  4232  0017B0  0732               	decf	__doprnt@width& (0+255),f,b
  4233  0017B2  A0D8               	btfss	status,0,c
  4234  0017B4  0733               	decf	(__doprnt@width+1)& (0+255),f,b
  4235  0017B6  0101               	movlb	1	; () banked
  4236  0017B8  5132               	movf	__doprnt@width& (0+255),w,b
  4237  0017BA  0101               	movlb	1	; () banked
  4238  0017BC  1133               	iorwf	(__doprnt@width+1)& (0+255),w,b
  4239  0017BE  A4D8               	btfss	status,2,c
  4240  0017C0  D7C2               	goto	l9829
  4241  0017C2                     l9839:
  4242                           
  4243                           ; BSR set to: 1
  4244                           ;doprnt.c: 1438: if(flag & 0x03)
  4245  0017C2  0E03               	movlw	3
  4246  0017C4  0101               	movlb	1	; () banked
  4247  0017C6  1537               	andwf	__doprnt@flag& (0+255),w,b
  4248  0017C8  0101               	movlb	1	; () banked
  4249  0017CA  6F1F               	movwf	??__doprnt& (0+255),b
  4250  0017CC  0E00               	movlw	0
  4251  0017CE  0101               	movlb	1	; () banked
  4252  0017D0  1538               	andwf	(__doprnt@flag+1)& (0+255),w,b
  4253  0017D2  0101               	movlb	1	; () banked
  4254  0017D4  6F20               	movwf	(??__doprnt+1)& (0+255),b
  4255  0017D6  0101               	movlb	1	; () banked
  4256  0017D8  511F               	movf	??__doprnt& (0+255),w,b
  4257  0017DA  0101               	movlb	1	; () banked
  4258  0017DC  1120               	iorwf	(??__doprnt+1)& (0+255),w,b
  4259  0017DE  B4D8               	btfsc	status,2,c
  4260  0017E0  D0A4               	goto	l9859
  4261                           
  4262                           ; BSR set to: 1
  4263                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  4264  0017E2  0101               	movlb	1	; () banked
  4265  0017E4  EE20 F002          	lfsr	2,2
  4266  0017E8  5119               	movf	__doprnt@pb& (0+255),w,b
  4267  0017EA  26D9               	addwf	fsr2l,f,c
  4268  0017EC  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4269  0017EE  22DA               	addwfc	fsr2h,f,c
  4270  0017F0  50DE               	movf	postinc2,w,c
  4271  0017F2  10DE               	iorwf	postinc2,w,c
  4272  0017F4  B4D8               	btfsc	status,2,c
  4273  0017F6  D014               	goto	l9845
  4274                           
  4275                           ; BSR set to: 1
  4276  0017F8  0101               	movlb	1	; () banked
  4277  0017FA  EE20 F002          	lfsr	2,2
  4278  0017FE  5119               	movf	__doprnt@pb& (0+255),w,b
  4279  001800  26D9               	addwf	fsr2l,f,c
  4280  001802  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4281  001804  22DA               	addwfc	fsr2h,f,c
  4282  001806  D801               	call	u16718
  4283  001808  D090               	goto	l9859
  4284  00180A                     u16718:
  4285  00180A  0005               	push	
  4286  00180C  6EFA               	movwf	pclath,c
  4287  00180E  50DE               	movf	postinc2,w,c
  4288  001810  6EFD               	movwf	tosl,c
  4289  001812  50DE               	movf	postinc2,w,c
  4290  001814  6EFE               	movwf	tosh,c
  4291  001816  50F8               	movf	tblptru,w,c
  4292  001818  6EFF               	movwf	tosu,c
  4293  00181A  50FA               	movf	pclath,w,c
  4294  00181C  0E2D               	movlw	45
  4295  00181E  0012               	return		;indir
  4296  001820                     l9845:
  4297  001820  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4298  001824  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4299  001828  CFDE F11F          	movff	postinc2,??__doprnt
  4300  00182C  CFDD F120          	movff	postdec2,??__doprnt+1
  4301  001830  C11F  FFD9         	movff	??__doprnt,fsr2l
  4302  001834  C120  FFDA         	movff	??__doprnt+1,fsr2h
  4303  001838  0E2D               	movlw	45
  4304  00183A  6EDF               	movwf	indf2,c
  4305  00183C  D06F               	goto	l9857
  4306  00183E                     l9849:
  4307                           
  4308                           ;doprnt.c: 1478: {
  4309                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4310  00183E  C139  F11F         	movff	__doprnt@prec,??__doprnt
  4311  001842  C13A  F120         	movff	__doprnt@prec+1,??__doprnt+1
  4312  001846  0101               	movlb	1	; () banked
  4313  001848  90D8               	bcf	status,0,c
  4314  00184A  371F               	rlcf	??__doprnt& (0+255),f,b
  4315  00184C  3720               	rlcf	(??__doprnt+1)& (0+255),f,b
  4316  00184E  0101               	movlb	1	; () banked
  4317  001850  90D8               	bcf	status,0,c
  4318  001852  371F               	rlcf	??__doprnt& (0+255),f,b
  4319  001854  3720               	rlcf	(??__doprnt+1)& (0+255),f,b
  4320  001856  0E01               	movlw	low _dpowers
  4321  001858  0101               	movlb	1	; () banked
  4322  00185A  251F               	addwf	??__doprnt& (0+255),w,b
  4323  00185C  6EF6               	movwf	tblptrl,c
  4324  00185E  0E06               	movlw	high _dpowers
  4325  001860  2120               	addwfc	(??__doprnt+1)& (0+255),w,b
  4326  001862  6EF7               	movwf	tblptrh,c
  4327  001864                     	if	0	;There are less than 3 active tblptr bytes
  4328  001864                     	endif
  4329  001864  0009               	tblrd		*+
  4330  001866  CFF5 F094          	movff	tablat,___lldiv@divisor
  4331  00186A  0009               	tblrd		*+
  4332  00186C  CFF5 F095          	movff	tablat,___lldiv@divisor+1
  4333  001870  0009               	tblrd		*+
  4334  001872  CFF5 F096          	movff	tablat,___lldiv@divisor+2
  4335  001876  000A               	tblrd		*-
  4336  001878  CFF5 F097          	movff	tablat,___lldiv@divisor+3
  4337  00187C  C12A  F090         	movff	__doprnt@val,___lldiv@dividend
  4338  001880  C12B  F091         	movff	__doprnt@val+1,___lldiv@dividend+1
  4339  001884  C12C  F092         	movff	__doprnt@val+2,___lldiv@dividend+2
  4340  001888  C12D  F093         	movff	__doprnt@val+3,___lldiv@dividend+3
  4341  00188C  ECB9  F027         	call	___lldiv
  4342  001890  C090  F09D         	movff	?___lldiv,___llmod@dividend
  4343  001894  C091  F09E         	movff	?___lldiv+1,___llmod@dividend+1
  4344  001898  C092  F09F         	movff	?___lldiv+2,___llmod@dividend+2
  4345  00189C  C093  F0A0         	movff	?___lldiv+3,___llmod@dividend+3
  4346  0018A0  0E0A               	movlw	10
  4347  0018A2  0100               	movlb	0	; () banked
  4348  0018A4  6FA1               	movwf	___llmod@divisor& (0+255),b
  4349  0018A6  0E00               	movlw	0
  4350  0018A8  6FA2               	movwf	(___llmod@divisor+1)& (0+255),b
  4351  0018AA  0E00               	movlw	0
  4352  0018AC  6FA3               	movwf	(___llmod@divisor+2)& (0+255),b
  4353  0018AE  0E00               	movlw	0
  4354  0018B0  6FA4               	movwf	(___llmod@divisor+3)& (0+255),b
  4355  0018B2  ECBF  F028         	call	___llmod	;wreg free
  4356  0018B6  0100               	movlb	0	; () banked
  4357  0018B8  519D               	movf	?___llmod& (0+255),w,b
  4358  0018BA  0F30               	addlw	48
  4359  0018BC  0101               	movlb	1	; () banked
  4360  0018BE  6F3B               	movwf	__doprnt@c& (0+255),b
  4361                           
  4362                           ; BSR set to: 1
  4363                           ;doprnt.c: 1523: }
  4364                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  4365  0018C0  0101               	movlb	1	; () banked
  4366  0018C2  EE20 F002          	lfsr	2,2
  4367  0018C6  5119               	movf	__doprnt@pb& (0+255),w,b
  4368  0018C8  26D9               	addwf	fsr2l,f,c
  4369  0018CA  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4370  0018CC  22DA               	addwfc	fsr2h,f,c
  4371  0018CE  50DE               	movf	postinc2,w,c
  4372  0018D0  10DE               	iorwf	postinc2,w,c
  4373  0018D2  B4D8               	btfsc	status,2,c
  4374  0018D4  D015               	goto	l9855
  4375                           
  4376                           ; BSR set to: 1
  4377  0018D6  0101               	movlb	1	; () banked
  4378  0018D8  EE20 F002          	lfsr	2,2
  4379  0018DC  5119               	movf	__doprnt@pb& (0+255),w,b
  4380  0018DE  26D9               	addwf	fsr2l,f,c
  4381  0018E0  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4382  0018E2  22DA               	addwfc	fsr2h,f,c
  4383  0018E4  D801               	call	u16738
  4384  0018E6  D021               	goto	l9859
  4385  0018E8                     u16738:
  4386  0018E8  0005               	push	
  4387  0018EA  6EFA               	movwf	pclath,c
  4388  0018EC  50DE               	movf	postinc2,w,c
  4389  0018EE  6EFD               	movwf	tosl,c
  4390  0018F0  50DE               	movf	postinc2,w,c
  4391  0018F2  6EFE               	movwf	tosh,c
  4392  0018F4  50F8               	movf	tblptru,w,c
  4393  0018F6  6EFF               	movwf	tosu,c
  4394  0018F8  50FA               	movf	pclath,w,c
  4395  0018FA  0101               	movlb	1	; () banked
  4396  0018FC  513B               	movf	__doprnt@c& (0+255),w,b
  4397  0018FE  0012               	return		;indir
  4398  001900                     l9855:
  4399  001900  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4400  001904  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4401  001908  CFDE F11F          	movff	postinc2,??__doprnt
  4402  00190C  CFDD F120          	movff	postdec2,??__doprnt+1
  4403  001910  C11F  FFD9         	movff	??__doprnt,fsr2l
  4404  001914  C120  FFDA         	movff	??__doprnt+1,fsr2h
  4405  001918  C13B  FFDF         	movff	__doprnt@c,indf2
  4406  00191C                     l9857:
  4407  00191C  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4408  001920  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4409  001924  2ADE               	incf	postinc2,f,c
  4410  001926  0E00               	movlw	0
  4411  001928  22DD               	addwfc	postdec2,f,c
  4412  00192A                     l9859:
  4413  00192A  0101               	movlb	1	; () banked
  4414  00192C  0739               	decf	__doprnt@prec& (0+255),f,b
  4415  00192E  A0D8               	btfss	status,0,c
  4416  001930  073A               	decf	(__doprnt@prec+1)& (0+255),f,b
  4417  001932  0101               	movlb	1	; () banked
  4418  001934  2939               	incf	__doprnt@prec& (0+255),w,b
  4419  001936  E183               	bnz	l9849
  4420  001938  0101               	movlb	1	; () banked
  4421  00193A  293A               	incf	(__doprnt@prec+1)& (0+255),w,b
  4422  00193C  A4D8               	btfss	status,2,c
  4423  00193E  D77F               	goto	l9849
  4424  001940                     l9861:
  4425  001940  C11B  FFF6         	movff	__doprnt@f,tblptrl
  4426  001944  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  4427  001948  0101               	movlb	1	; () banked
  4428  00194A  4B1B               	infsnz	__doprnt@f& (0+255),f,b
  4429  00194C  2B1C               	incf	(__doprnt@f+1)& (0+255),f,b
  4430  00194E                     	if	0	;tblptru may be non-zero
  4431  00194E                     	endif
  4432  00194E                     	if	0	;tblptru may be non-zero
  4433  00194E                     	endif
  4434  00194E  0008               	tblrd		*
  4435  001950  CFF5 F13B          	movff	tablat,__doprnt@c
  4436  001954  0101               	movlb	1	; () banked
  4437  001956  513B               	movf	__doprnt@c& (0+255),w,b
  4438  001958  A4D8               	btfss	status,2,c
  4439  00195A  EF81  F003         	goto	l9473
  4440  00195E                     l9863:
  4441                           
  4442                           ; BSR set to: 1
  4443                           ;doprnt.c: 1540: return 0;
  4444  00195E  0E00               	movlw	0
  4445  001960  0101               	movlb	1	; () banked
  4446  001962  6F1A               	movwf	(?__doprnt+1)& (0+255),b
  4447  001964  0E00               	movlw	0
  4448  001966  6F19               	movwf	?__doprnt& (0+255),b
  4449  001968  0012               	return	
  4450  00196A                     __end_of__doprnt:
  4451                           	opt stack 0
  4452                           tosu	equ	0xFFF
  4453                           tosh	equ	0xFFE
  4454                           tosl	equ	0xFFD
  4455                           pclath	equ	0xFFA
  4456                           tblptru	equ	0xFF8
  4457                           tblptrh	equ	0xFF7
  4458                           tblptrl	equ	0xFF6
  4459                           tablat	equ	0xFF5
  4460                           prodh	equ	0xFF4
  4461                           prodl	equ	0xFF3
  4462                           intcon	equ	0xFF2
  4463                           postinc0	equ	0xFEE
  4464                           wreg	equ	0xFE8
  4465                           postdec1	equ	0xFE5
  4466                           fsr1l	equ	0xFE1
  4467                           indf2	equ	0xFDF
  4468                           postinc2	equ	0xFDE
  4469                           postdec2	equ	0xFDD
  4470                           fsr2h	equ	0xFDA
  4471                           fsr2l	equ	0xFD9
  4472                           status	equ	0xFD8
  4473                           
  4474 ;; *************** function _scale *****************
  4475 ;; Defined at:
  4476 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;  scl             1    wreg     char 
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;  scl             1    3[BANK1 ] char 
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  3   83[BANK0 ] char 
  4483 ;; Registers used:
  4484 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4490 ;;      Params:         0       3       0       0       0       0       0
  4491 ;;      Locals:         0       0       4       0       0       0       0
  4492 ;;      Temps:          0       0       0       0       0       0       0
  4493 ;;      Totals:         0       3       4       0       0       0       0
  4494 ;;Total ram usage:        7 bytes
  4495 ;; Hardware stack levels used:    1
  4496 ;; Hardware stack levels required when called:    9
  4497 ;; This function calls:
  4498 ;;		___awdiv
  4499 ;;		___awmod
  4500 ;;		___ftmul
  4501 ;;		___wmul
  4502 ;; This function is called by:
  4503 ;;		__doprnt
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           	psect	text3
  4508  002AE2                     __ptext3:
  4509                           	opt stack 0
  4510  002AE2                     _scale:
  4511                           	opt stack 19
  4512                           
  4513                           ; BSR set to: 1
  4514                           ;incstack = 0
  4515                           ;scale@scl stored from wreg
  4516  002AE2  0101               	movlb	1	; () banked
  4517  002AE4  6F03               	movwf	scale@scl& (0+255),b
  4518                           
  4519                           ;doprnt.c: 428: if(scl < 0) {
  4520  002AE6  0101               	movlb	1	; () banked
  4521  002AE8  AF03               	btfss	scale@scl& (0+255),7,b
  4522  002AEA  D12A               	goto	l6205
  4523                           
  4524                           ; BSR set to: 1
  4525                           ;doprnt.c: 429: scl = -scl;
  4526  002AEC  0101               	movlb	1	; () banked
  4527  002AEE  6D03               	negf	scale@scl& (0+255),b
  4528                           
  4529                           ;doprnt.c: 430: if(scl>=110)
  4530  002AF0  0101               	movlb	1	; () banked
  4531  002AF2  5103               	movf	scale@scl& (0+255),w,b
  4532  002AF4  0A80               	xorlw	128
  4533  002AF6  0F12               	addlw	-238
  4534  002AF8  A0D8               	btfss	status,0,c
  4535  002AFA  D0AC               	goto	l6195
  4536                           
  4537                           ; BSR set to: 1
  4538                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4539  002AFC  0E00               	movlw	0
  4540  002AFE  0100               	movlb	0	; () banked
  4541  002B00  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4542  002B02  0E03               	movlw	3
  4543  002B04  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  4544  002B06  0E00               	movlw	0
  4545  002B08  0100               	movlb	0	; () banked
  4546  002B0A  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  4547  002B0C  0E0A               	movlw	10
  4548  002B0E  6F98               	movwf	___awdiv@divisor& (0+255),b
  4549  002B10  0E00               	movlw	0
  4550  002B12  0100               	movlb	0	; () banked
  4551  002B14  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  4552  002B16  0E64               	movlw	100
  4553  002B18  6F92               	movwf	___awmod@divisor& (0+255),b
  4554  002B1A  0101               	movlb	1	; () banked
  4555  002B1C  5103               	movf	scale@scl& (0+255),w,b
  4556  002B1E  0100               	movlb	0	; () banked
  4557  002B20  6F90               	movwf	___awmod@dividend& (0+255),b
  4558  002B22  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  4559  002B24  BF90               	btfsc	___awmod@dividend& (0+255),7,b
  4560  002B26  0791               	decf	(___awmod@dividend+1)& (0+255),f,b
  4561  002B28  EC6E  F028         	call	___awmod
  4562  002B2C  C090  F096         	movff	?___awmod,___awdiv@dividend
  4563  002B30  C091  F097         	movff	?___awmod+1,___awdiv@dividend+1
  4564  002B34  EC5A  F027         	call	___awdiv	;wreg free
  4565  002B38  0E09               	movlw	9
  4566  002B3A  0100               	movlb	0	; () banked
  4567  002B3C  2596               	addwf	?___awdiv& (0+255),w,b
  4568  002B3E  0100               	movlb	0	; () banked
  4569  002B40  6F9E               	movwf	___wmul@multiplier& (0+255),b
  4570  002B42  0E00               	movlw	0
  4571  002B44  0100               	movlb	0	; () banked
  4572  002B46  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  4573  002B48  0100               	movlb	0	; () banked
  4574  002B4A  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  4575  002B4C  EC55  F02C         	call	___wmul	;wreg free
  4576  002B50  0E29               	movlw	low __npowers_
  4577  002B52  0100               	movlb	0	; () banked
  4578  002B54  259E               	addwf	?___wmul& (0+255),w,b
  4579  002B56  6EF6               	movwf	tblptrl,c
  4580  002B58  0E06               	movlw	high __npowers_
  4581  002B5A  0100               	movlb	0	; () banked
  4582  002B5C  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  4583  002B5E  6EF7               	movwf	tblptrh,c
  4584  002B60                     	if	0	;There are less than 3 active tblptr bytes
  4585  002B60                     	endif
  4586  002B60  0009               	tblrd		*+
  4587  002B62  CFF5 F0A7          	movff	tablat,___ftmul@f2
  4588  002B66  0009               	tblrd		*+
  4589  002B68  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  4590  002B6C  000A               	tblrd		*-
  4591  002B6E  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  4592  002B72  0E00               	movlw	0
  4593  002B74  0100               	movlb	0	; () banked
  4594  002B76  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  4595  002B78  0E64               	movlw	100
  4596  002B7A  6F98               	movwf	___awdiv@divisor& (0+255),b
  4597  002B7C  0101               	movlb	1	; () banked
  4598  002B7E  5103               	movf	scale@scl& (0+255),w,b
  4599  002B80  0100               	movlb	0	; () banked
  4600  002B82  6F96               	movwf	___awdiv@dividend& (0+255),b
  4601  002B84  6B97               	clrf	(___awdiv@dividend+1)& (0+255),b
  4602  002B86  BF96               	btfsc	___awdiv@dividend& (0+255),7,b
  4603  002B88  0797               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4604  002B8A  EC5A  F027         	call	___awdiv	;wreg free
  4605  002B8E  0E12               	movlw	18
  4606  002B90  0100               	movlb	0	; () banked
  4607  002B92  2596               	addwf	?___awdiv& (0+255),w,b
  4608  002B94  0100               	movlb	0	; () banked
  4609  002B96  6F9E               	movwf	___wmul@multiplier& (0+255),b
  4610  002B98  0E00               	movlw	0
  4611  002B9A  0100               	movlb	0	; () banked
  4612  002B9C  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  4613  002B9E  0100               	movlb	0	; () banked
  4614  002BA0  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  4615  002BA2  0E00               	movlw	0
  4616  002BA4  0100               	movlb	0	; () banked
  4617  002BA6  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4618  002BA8  0E03               	movlw	3
  4619  002BAA  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  4620  002BAC  EC55  F02C         	call	___wmul	;wreg free
  4621  002BB0  0E29               	movlw	low __npowers_
  4622  002BB2  0100               	movlb	0	; () banked
  4623  002BB4  259E               	addwf	?___wmul& (0+255),w,b
  4624  002BB6  6EF6               	movwf	tblptrl,c
  4625  002BB8  0E06               	movlw	high __npowers_
  4626  002BBA  0100               	movlb	0	; () banked
  4627  002BBC  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  4628  002BBE  6EF7               	movwf	tblptrh,c
  4629  002BC0                     	if	0	;There are less than 3 active tblptr bytes
  4630  002BC0                     	endif
  4631  002BC0  0009               	tblrd		*+
  4632  002BC2  CFF5 F0A4          	movff	tablat,___ftmul@f1
  4633  002BC6  0009               	tblrd		*+
  4634  002BC8  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  4635  002BCC  000A               	tblrd		*-
  4636  002BCE  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  4637  002BD2  EC5B  F021         	call	___ftmul	;wreg free
  4638  002BD6  C0A4  F100         	movff	?___ftmul,_scale$1742
  4639  002BDA  C0A5  F101         	movff	?___ftmul+1,_scale$1742+1
  4640  002BDE  C0A6  F102         	movff	?___ftmul+2,_scale$1742+2
  4641                           
  4642                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4643  002BE2  C100  F0A4         	movff	_scale$1742,___ftmul@f1
  4644  002BE6  C101  F0A5         	movff	_scale$1742+1,___ftmul@f1+1
  4645  002BEA  C102  F0A6         	movff	_scale$1742+2,___ftmul@f1+2
  4646  002BEE  0E00               	movlw	0
  4647  002BF0  0100               	movlb	0	; () banked
  4648  002BF2  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4649  002BF4  0E03               	movlw	3
  4650  002BF6  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  4651  002BF8  0E00               	movlw	0
  4652  002BFA  0100               	movlb	0	; () banked
  4653  002BFC  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  4654  002BFE  0E0A               	movlw	10
  4655  002C00  6F92               	movwf	___awmod@divisor& (0+255),b
  4656  002C02  0101               	movlb	1	; () banked
  4657  002C04  5103               	movf	scale@scl& (0+255),w,b
  4658  002C06  0100               	movlb	0	; () banked
  4659  002C08  6F90               	movwf	___awmod@dividend& (0+255),b
  4660  002C0A  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  4661  002C0C  BF90               	btfsc	___awmod@dividend& (0+255),7,b
  4662  002C0E  0791               	decf	(___awmod@dividend+1)& (0+255),f,b
  4663  002C10  EC6E  F028         	call	___awmod	;wreg free
  4664  002C14  C090  F09E         	movff	?___awmod,___wmul@multiplier
  4665  002C18  C091  F09F         	movff	?___awmod+1,___wmul@multiplier+1
  4666  002C1C  EC55  F02C         	call	___wmul	;wreg free
  4667  002C20  0E29               	movlw	low __npowers_
  4668  002C22  0100               	movlb	0	; () banked
  4669  002C24  259E               	addwf	?___wmul& (0+255),w,b
  4670  002C26  6EF6               	movwf	tblptrl,c
  4671  002C28  0E06               	movlw	high __npowers_
  4672  002C2A  0100               	movlb	0	; () banked
  4673  002C2C  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  4674  002C2E  6EF7               	movwf	tblptrh,c
  4675  002C30                     	if	0	;There are less than 3 active tblptr bytes
  4676  002C30                     	endif
  4677  002C30  0009               	tblrd		*+
  4678  002C32  CFF5 F0A7          	movff	tablat,___ftmul@f2
  4679  002C36  0009               	tblrd		*+
  4680  002C38  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  4681  002C3C  000A               	tblrd		*-
  4682  002C3E  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  4683  002C42  EC5B  F021         	call	___ftmul	;wreg free
  4684  002C46  C0A4  F0B3         	movff	?___ftmul,?_scale
  4685  002C4A  C0A5  F0B4         	movff	?___ftmul+1,?_scale+1
  4686  002C4E  C0A6  F0B5         	movff	?___ftmul+2,?_scale+2
  4687  002C52  0012               	return	
  4688  002C54                     l6195:
  4689                           
  4690                           ;doprnt.c: 432: else if(scl > 10)
  4691  002C54  0101               	movlb	1	; () banked
  4692  002C56  5103               	movf	scale@scl& (0+255),w,b
  4693  002C58  0A80               	xorlw	128
  4694  002C5A  0F75               	addlw	-139
  4695  002C5C  A0D8               	btfss	status,0,c
  4696  002C5E  D05D               	goto	l6201
  4697                           
  4698                           ; BSR set to: 1
  4699                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4700  002C60  0E00               	movlw	0
  4701  002C62  0100               	movlb	0	; () banked
  4702  002C64  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  4703  002C66  0E0A               	movlw	10
  4704  002C68  6F98               	movwf	___awdiv@divisor& (0+255),b
  4705  002C6A  0101               	movlb	1	; () banked
  4706  002C6C  5103               	movf	scale@scl& (0+255),w,b
  4707  002C6E  0100               	movlb	0	; () banked
  4708  002C70  6F96               	movwf	___awdiv@dividend& (0+255),b
  4709  002C72  6B97               	clrf	(___awdiv@dividend+1)& (0+255),b
  4710  002C74  BF96               	btfsc	___awdiv@dividend& (0+255),7,b
  4711  002C76  0797               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4712  002C78  EC5A  F027         	call	___awdiv	;wreg free
  4713  002C7C  0E09               	movlw	9
  4714  002C7E  0100               	movlb	0	; () banked
  4715  002C80  2596               	addwf	?___awdiv& (0+255),w,b
  4716  002C82  0100               	movlb	0	; () banked
  4717  002C84  6F9E               	movwf	___wmul@multiplier& (0+255),b
  4718  002C86  0E00               	movlw	0
  4719  002C88  0100               	movlb	0	; () banked
  4720  002C8A  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  4721  002C8C  0100               	movlb	0	; () banked
  4722  002C8E  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  4723  002C90  0E00               	movlw	0
  4724  002C92  0100               	movlb	0	; () banked
  4725  002C94  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4726  002C96  0E03               	movlw	3
  4727  002C98  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  4728  002C9A  EC55  F02C         	call	___wmul	;wreg free
  4729  002C9E  0E29               	movlw	low __npowers_
  4730  002CA0  0100               	movlb	0	; () banked
  4731  002CA2  259E               	addwf	?___wmul& (0+255),w,b
  4732  002CA4  6EF6               	movwf	tblptrl,c
  4733  002CA6  0E06               	movlw	high __npowers_
  4734  002CA8  0100               	movlb	0	; () banked
  4735  002CAA  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  4736  002CAC  6EF7               	movwf	tblptrh,c
  4737  002CAE                     	if	0	;There are less than 3 active tblptr bytes
  4738  002CAE                     	endif
  4739  002CAE  0009               	tblrd		*+
  4740  002CB0  CFF5 F0A4          	movff	tablat,___ftmul@f1
  4741  002CB4  0009               	tblrd		*+
  4742  002CB6  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  4743  002CBA  000A               	tblrd		*-
  4744  002CBC  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  4745  002CC0  0E00               	movlw	0
  4746  002CC2  0100               	movlb	0	; () banked
  4747  002CC4  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4748  002CC6  0E03               	movlw	3
  4749  002CC8  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  4750  002CCA  0E00               	movlw	0
  4751  002CCC  0100               	movlb	0	; () banked
  4752  002CCE  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  4753  002CD0  0E0A               	movlw	10
  4754  002CD2  6F92               	movwf	___awmod@divisor& (0+255),b
  4755  002CD4  0101               	movlb	1	; () banked
  4756  002CD6  5103               	movf	scale@scl& (0+255),w,b
  4757  002CD8  0100               	movlb	0	; () banked
  4758  002CDA  6F90               	movwf	___awmod@dividend& (0+255),b
  4759  002CDC  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  4760  002CDE  BF90               	btfsc	___awmod@dividend& (0+255),7,b
  4761  002CE0  0791               	decf	(___awmod@dividend+1)& (0+255),f,b
  4762  002CE2  EC6E  F028         	call	___awmod	;wreg free
  4763  002CE6  C090  F09E         	movff	?___awmod,___wmul@multiplier
  4764  002CEA  C091  F09F         	movff	?___awmod+1,___wmul@multiplier+1
  4765  002CEE  EC55  F02C         	call	___wmul	;wreg free
  4766  002CF2  0E29               	movlw	low __npowers_
  4767  002CF4  0100               	movlb	0	; () banked
  4768  002CF6  259E               	addwf	?___wmul& (0+255),w,b
  4769  002CF8  6EF6               	movwf	tblptrl,c
  4770  002CFA  0E06               	movlw	high __npowers_
  4771  002CFC  0100               	movlb	0	; () banked
  4772  002CFE  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  4773  002D00  6EF7               	movwf	tblptrh,c
  4774  002D02                     	if	0	;There are less than 3 active tblptr bytes
  4775  002D02                     	endif
  4776  002D02  0009               	tblrd		*+
  4777  002D04  CFF5 F0A7          	movff	tablat,___ftmul@f2
  4778  002D08  0009               	tblrd		*+
  4779  002D0A  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  4780  002D0E  000A               	tblrd		*-
  4781  002D10  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  4782  002D14  EC5B  F021         	call	___ftmul	;wreg free
  4783  002D18  D796               	goto	L3
  4784  002D1A                     l6201:
  4785                           
  4786                           ;doprnt.c: 434: return _npowers_[scl];
  4787  002D1A  0101               	movlb	1	; () banked
  4788  002D1C  5103               	movf	scale@scl& (0+255),w,b
  4789  002D1E  0D03               	mullw	3
  4790  002D20  0E29               	movlw	low __npowers_
  4791  002D22  24F3               	addwf	prodl,w,c
  4792  002D24  6EF6               	movwf	tblptrl,c
  4793  002D26  0E06               	movlw	high __npowers_
  4794  002D28  20F4               	addwfc	prodh,w,c
  4795  002D2A  6EF7               	movwf	tblptrh,c
  4796  002D2C                     	if	0	;There are less than 3 active tblptr bytes
  4797  002D2C                     	endif
  4798  002D2C  0009               	tblrd		*+
  4799  002D2E  CFF5 F0B3          	movff	tablat,?_scale
  4800  002D32  0009               	tblrd		*+
  4801  002D34  CFF5 F0B4          	movff	tablat,?_scale+1
  4802  002D38  000A               	tblrd		*-
  4803  002D3A  CFF5 F0B5          	movff	tablat,?_scale+2
  4804                           
  4805                           ; BSR set to: 1
  4806  002D3E  0012               	return	
  4807  002D40                     l6205:
  4808                           
  4809                           ; BSR set to: 1
  4810                           ;doprnt.c: 435: }
  4811                           ;doprnt.c: 436: if(scl>=110)
  4812  002D40  0101               	movlb	1	; () banked
  4813  002D42  5103               	movf	scale@scl& (0+255),w,b
  4814  002D44  0A80               	xorlw	128
  4815  002D46  0F12               	addlw	-238
  4816  002D48  A0D8               	btfss	status,0,c
  4817  002D4A  D0AC               	goto	l6213
  4818                           
  4819                           ; BSR set to: 1
  4820                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4821  002D4C  0E00               	movlw	0
  4822  002D4E  0100               	movlb	0	; () banked
  4823  002D50  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4824  002D52  0E03               	movlw	3
  4825  002D54  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  4826  002D56  0E00               	movlw	0
  4827  002D58  0100               	movlb	0	; () banked
  4828  002D5A  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  4829  002D5C  0E0A               	movlw	10
  4830  002D5E  6F98               	movwf	___awdiv@divisor& (0+255),b
  4831  002D60  0E00               	movlw	0
  4832  002D62  0100               	movlb	0	; () banked
  4833  002D64  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  4834  002D66  0E64               	movlw	100
  4835  002D68  6F92               	movwf	___awmod@divisor& (0+255),b
  4836  002D6A  0101               	movlb	1	; () banked
  4837  002D6C  5103               	movf	scale@scl& (0+255),w,b
  4838  002D6E  0100               	movlb	0	; () banked
  4839  002D70  6F90               	movwf	___awmod@dividend& (0+255),b
  4840  002D72  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  4841  002D74  BF90               	btfsc	___awmod@dividend& (0+255),7,b
  4842  002D76  0791               	decf	(___awmod@dividend+1)& (0+255),f,b
  4843  002D78  EC6E  F028         	call	___awmod	;wreg free
  4844  002D7C  C090  F096         	movff	?___awmod,___awdiv@dividend
  4845  002D80  C091  F097         	movff	?___awmod+1,___awdiv@dividend+1
  4846  002D84  EC5A  F027         	call	___awdiv	;wreg free
  4847  002D88  0E09               	movlw	9
  4848  002D8A  0100               	movlb	0	; () banked
  4849  002D8C  2596               	addwf	?___awdiv& (0+255),w,b
  4850  002D8E  0100               	movlb	0	; () banked
  4851  002D90  6F9E               	movwf	___wmul@multiplier& (0+255),b
  4852  002D92  0E00               	movlw	0
  4853  002D94  0100               	movlb	0	; () banked
  4854  002D96  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  4855  002D98  0100               	movlb	0	; () banked
  4856  002D9A  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  4857  002D9C  EC55  F02C         	call	___wmul	;wreg free
  4858  002DA0  0E50               	movlw	low __powers_
  4859  002DA2  0100               	movlb	0	; () banked
  4860  002DA4  259E               	addwf	?___wmul& (0+255),w,b
  4861  002DA6  6EF6               	movwf	tblptrl,c
  4862  002DA8  0E06               	movlw	high __powers_
  4863  002DAA  0100               	movlb	0	; () banked
  4864  002DAC  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  4865  002DAE  6EF7               	movwf	tblptrh,c
  4866  002DB0                     	if	0	;There are less than 3 active tblptr bytes
  4867  002DB0                     	endif
  4868  002DB0  0009               	tblrd		*+
  4869  002DB2  CFF5 F0A7          	movff	tablat,___ftmul@f2
  4870  002DB6  0009               	tblrd		*+
  4871  002DB8  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  4872  002DBC  000A               	tblrd		*-
  4873  002DBE  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  4874  002DC2  0E00               	movlw	0
  4875  002DC4  0100               	movlb	0	; () banked
  4876  002DC6  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  4877  002DC8  0E64               	movlw	100
  4878  002DCA  6F98               	movwf	___awdiv@divisor& (0+255),b
  4879  002DCC  0101               	movlb	1	; () banked
  4880  002DCE  5103               	movf	scale@scl& (0+255),w,b
  4881  002DD0  0100               	movlb	0	; () banked
  4882  002DD2  6F96               	movwf	___awdiv@dividend& (0+255),b
  4883  002DD4  6B97               	clrf	(___awdiv@dividend+1)& (0+255),b
  4884  002DD6  BF96               	btfsc	___awdiv@dividend& (0+255),7,b
  4885  002DD8  0797               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4886  002DDA  EC5A  F027         	call	___awdiv	;wreg free
  4887  002DDE  0E12               	movlw	18
  4888  002DE0  0100               	movlb	0	; () banked
  4889  002DE2  2596               	addwf	?___awdiv& (0+255),w,b
  4890  002DE4  0100               	movlb	0	; () banked
  4891  002DE6  6F9E               	movwf	___wmul@multiplier& (0+255),b
  4892  002DE8  0E00               	movlw	0
  4893  002DEA  0100               	movlb	0	; () banked
  4894  002DEC  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  4895  002DEE  0100               	movlb	0	; () banked
  4896  002DF0  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  4897  002DF2  0E00               	movlw	0
  4898  002DF4  0100               	movlb	0	; () banked
  4899  002DF6  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4900  002DF8  0E03               	movlw	3
  4901  002DFA  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  4902  002DFC  EC55  F02C         	call	___wmul	;wreg free
  4903  002E00  0E50               	movlw	low __powers_
  4904  002E02  0100               	movlb	0	; () banked
  4905  002E04  259E               	addwf	?___wmul& (0+255),w,b
  4906  002E06  6EF6               	movwf	tblptrl,c
  4907  002E08  0E06               	movlw	high __powers_
  4908  002E0A  0100               	movlb	0	; () banked
  4909  002E0C  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  4910  002E0E  6EF7               	movwf	tblptrh,c
  4911  002E10                     	if	0	;There are less than 3 active tblptr bytes
  4912  002E10                     	endif
  4913  002E10  0009               	tblrd		*+
  4914  002E12  CFF5 F0A4          	movff	tablat,___ftmul@f1
  4915  002E16  0009               	tblrd		*+
  4916  002E18  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  4917  002E1C  000A               	tblrd		*-
  4918  002E1E  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  4919  002E22  EC5B  F021         	call	___ftmul	;wreg free
  4920  002E26  C0A4  F100         	movff	?___ftmul,_scale$1742
  4921  002E2A  C0A5  F101         	movff	?___ftmul+1,_scale$1742+1
  4922  002E2E  C0A6  F102         	movff	?___ftmul+2,_scale$1742+2
  4923                           
  4924                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4925  002E32  C100  F0A4         	movff	_scale$1742,___ftmul@f1
  4926  002E36  C101  F0A5         	movff	_scale$1742+1,___ftmul@f1+1
  4927  002E3A  C102  F0A6         	movff	_scale$1742+2,___ftmul@f1+2
  4928  002E3E  0E00               	movlw	0
  4929  002E40  0100               	movlb	0	; () banked
  4930  002E42  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4931  002E44  0E03               	movlw	3
  4932  002E46  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  4933  002E48  0E00               	movlw	0
  4934  002E4A  0100               	movlb	0	; () banked
  4935  002E4C  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  4936  002E4E  0E0A               	movlw	10
  4937  002E50  6F92               	movwf	___awmod@divisor& (0+255),b
  4938  002E52  0101               	movlb	1	; () banked
  4939  002E54  5103               	movf	scale@scl& (0+255),w,b
  4940  002E56  0100               	movlb	0	; () banked
  4941  002E58  6F90               	movwf	___awmod@dividend& (0+255),b
  4942  002E5A  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  4943  002E5C  BF90               	btfsc	___awmod@dividend& (0+255),7,b
  4944  002E5E  0791               	decf	(___awmod@dividend+1)& (0+255),f,b
  4945  002E60  EC6E  F028         	call	___awmod	;wreg free
  4946  002E64  C090  F09E         	movff	?___awmod,___wmul@multiplier
  4947  002E68  C091  F09F         	movff	?___awmod+1,___wmul@multiplier+1
  4948  002E6C  EC55  F02C         	call	___wmul	;wreg free
  4949  002E70  0E50               	movlw	low __powers_
  4950  002E72  0100               	movlb	0	; () banked
  4951  002E74  259E               	addwf	?___wmul& (0+255),w,b
  4952  002E76  6EF6               	movwf	tblptrl,c
  4953  002E78  0E06               	movlw	high __powers_
  4954  002E7A  0100               	movlb	0	; () banked
  4955  002E7C  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  4956  002E7E  6EF7               	movwf	tblptrh,c
  4957  002E80                     	if	0	;There are less than 3 active tblptr bytes
  4958  002E80                     	endif
  4959  002E80  0009               	tblrd		*+
  4960  002E82  CFF5 F0A7          	movff	tablat,___ftmul@f2
  4961  002E86  0009               	tblrd		*+
  4962  002E88  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  4963  002E8C  000A               	tblrd		*-
  4964  002E8E  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  4965  002E92  EC5B  F021         	call	___ftmul	;wreg free
  4966  002E96  C0A4  F0B3         	movff	?___ftmul,?_scale
  4967  002E9A  C0A5  F0B4         	movff	?___ftmul+1,?_scale+1
  4968  002E9E  C0A6  F0B5         	movff	?___ftmul+2,?_scale+2
  4969  002EA2  0012               	return	
  4970  002EA4                     l6213:
  4971                           
  4972                           ;doprnt.c: 438: else if(scl > 10)
  4973  002EA4  0101               	movlb	1	; () banked
  4974  002EA6  5103               	movf	scale@scl& (0+255),w,b
  4975  002EA8  0A80               	xorlw	128
  4976  002EAA  0F75               	addlw	-139
  4977  002EAC  A0D8               	btfss	status,0,c
  4978  002EAE  D05D               	goto	l6219
  4979                           
  4980                           ; BSR set to: 1
  4981                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4982  002EB0  0E00               	movlw	0
  4983  002EB2  0100               	movlb	0	; () banked
  4984  002EB4  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  4985  002EB6  0E0A               	movlw	10
  4986  002EB8  6F98               	movwf	___awdiv@divisor& (0+255),b
  4987  002EBA  0101               	movlb	1	; () banked
  4988  002EBC  5103               	movf	scale@scl& (0+255),w,b
  4989  002EBE  0100               	movlb	0	; () banked
  4990  002EC0  6F96               	movwf	___awdiv@dividend& (0+255),b
  4991  002EC2  6B97               	clrf	(___awdiv@dividend+1)& (0+255),b
  4992  002EC4  BF96               	btfsc	___awdiv@dividend& (0+255),7,b
  4993  002EC6  0797               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4994  002EC8  EC5A  F027         	call	___awdiv	;wreg free
  4995  002ECC  0E09               	movlw	9
  4996  002ECE  0100               	movlb	0	; () banked
  4997  002ED0  2596               	addwf	?___awdiv& (0+255),w,b
  4998  002ED2  0100               	movlb	0	; () banked
  4999  002ED4  6F9E               	movwf	___wmul@multiplier& (0+255),b
  5000  002ED6  0E00               	movlw	0
  5001  002ED8  0100               	movlb	0	; () banked
  5002  002EDA  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  5003  002EDC  0100               	movlb	0	; () banked
  5004  002EDE  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  5005  002EE0  0E00               	movlw	0
  5006  002EE2  0100               	movlb	0	; () banked
  5007  002EE4  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5008  002EE6  0E03               	movlw	3
  5009  002EE8  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  5010  002EEA  EC55  F02C         	call	___wmul	;wreg free
  5011  002EEE  0E50               	movlw	low __powers_
  5012  002EF0  0100               	movlb	0	; () banked
  5013  002EF2  259E               	addwf	?___wmul& (0+255),w,b
  5014  002EF4  6EF6               	movwf	tblptrl,c
  5015  002EF6  0E06               	movlw	high __powers_
  5016  002EF8  0100               	movlb	0	; () banked
  5017  002EFA  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  5018  002EFC  6EF7               	movwf	tblptrh,c
  5019  002EFE                     	if	0	;There are less than 3 active tblptr bytes
  5020  002EFE                     	endif
  5021  002EFE  0009               	tblrd		*+
  5022  002F00  CFF5 F0A4          	movff	tablat,___ftmul@f1
  5023  002F04  0009               	tblrd		*+
  5024  002F06  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  5025  002F0A  000A               	tblrd		*-
  5026  002F0C  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  5027  002F10  0E00               	movlw	0
  5028  002F12  0100               	movlb	0	; () banked
  5029  002F14  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5030  002F16  0E03               	movlw	3
  5031  002F18  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  5032  002F1A  0E00               	movlw	0
  5033  002F1C  0100               	movlb	0	; () banked
  5034  002F1E  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  5035  002F20  0E0A               	movlw	10
  5036  002F22  6F92               	movwf	___awmod@divisor& (0+255),b
  5037  002F24  0101               	movlb	1	; () banked
  5038  002F26  5103               	movf	scale@scl& (0+255),w,b
  5039  002F28  0100               	movlb	0	; () banked
  5040  002F2A  6F90               	movwf	___awmod@dividend& (0+255),b
  5041  002F2C  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  5042  002F2E  BF90               	btfsc	___awmod@dividend& (0+255),7,b
  5043  002F30  0791               	decf	(___awmod@dividend+1)& (0+255),f,b
  5044  002F32  EC6E  F028         	call	___awmod	;wreg free
  5045  002F36  C090  F09E         	movff	?___awmod,___wmul@multiplier
  5046  002F3A  C091  F09F         	movff	?___awmod+1,___wmul@multiplier+1
  5047  002F3E  EC55  F02C         	call	___wmul	;wreg free
  5048  002F42  0E50               	movlw	low __powers_
  5049  002F44  0100               	movlb	0	; () banked
  5050  002F46  259E               	addwf	?___wmul& (0+255),w,b
  5051  002F48  6EF6               	movwf	tblptrl,c
  5052  002F4A  0E06               	movlw	high __powers_
  5053  002F4C  0100               	movlb	0	; () banked
  5054  002F4E  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  5055  002F50  6EF7               	movwf	tblptrh,c
  5056  002F52                     	if	0	;There are less than 3 active tblptr bytes
  5057  002F52                     	endif
  5058  002F52  0009               	tblrd		*+
  5059  002F54  CFF5 F0A7          	movff	tablat,___ftmul@f2
  5060  002F58  0009               	tblrd		*+
  5061  002F5A  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  5062  002F5E  000A               	tblrd		*-
  5063  002F60  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  5064  002F64  EC5B  F021         	call	___ftmul	;wreg free
  5065  002F68  D796               	goto	L4
  5066  002F6A                     l6219:
  5067                           
  5068                           ;doprnt.c: 440: return _powers_[scl];
  5069  002F6A  0101               	movlb	1	; () banked
  5070  002F6C  5103               	movf	scale@scl& (0+255),w,b
  5071  002F6E  0D03               	mullw	3
  5072  002F70  0E50               	movlw	low __powers_
  5073  002F72  24F3               	addwf	prodl,w,c
  5074  002F74  6EF6               	movwf	tblptrl,c
  5075  002F76  0E06               	movlw	high __powers_
  5076  002F78  20F4               	addwfc	prodh,w,c
  5077  002F7A  6EF7               	movwf	tblptrh,c
  5078  002F7C                     	if	0	;There are less than 3 active tblptr bytes
  5079  002F7C                     	endif
  5080  002F7C  0009               	tblrd		*+
  5081  002F7E  CFF5 F0B3          	movff	tablat,?_scale
  5082  002F82  0009               	tblrd		*+
  5083  002F84  CFF5 F0B4          	movff	tablat,?_scale+1
  5084  002F88  000A               	tblrd		*-
  5085  002F8A  CFF5 F0B5          	movff	tablat,?_scale+2
  5086  002F8E  0012               	return	
  5087  002F90                     __end_of_scale:
  5088                           	opt stack 0
  5089                           tosu	equ	0xFFF
  5090                           tosh	equ	0xFFE
  5091                           tosl	equ	0xFFD
  5092                           pclath	equ	0xFFA
  5093                           tblptru	equ	0xFF8
  5094                           tblptrh	equ	0xFF7
  5095                           tblptrl	equ	0xFF6
  5096                           tablat	equ	0xFF5
  5097                           prodh	equ	0xFF4
  5098                           prodl	equ	0xFF3
  5099                           intcon	equ	0xFF2
  5100                           postinc0	equ	0xFEE
  5101                           wreg	equ	0xFE8
  5102                           postdec1	equ	0xFE5
  5103                           fsr1l	equ	0xFE1
  5104                           indf2	equ	0xFDF
  5105                           postinc2	equ	0xFDE
  5106                           postdec2	equ	0xFDD
  5107                           fsr2h	equ	0xFDA
  5108                           fsr2l	equ	0xFD9
  5109                           status	equ	0xFD8
  5110                           
  5111 ;; *************** function _putch *****************
  5112 ;; Defined at:
  5113 ;;		line 111 in file "mcc_generated_files/eusart1.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;  txData          1    wreg     unsigned char 
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;  txData          1   49[BANK0 ] unsigned char 
  5118 ;; Return value:  Size  Location     Type
  5119 ;;                  1    wreg      void 
  5120 ;; Registers used:
  5121 ;;		wreg, status,2, cstack
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5127 ;;      Params:         0       0       0       0       0       0       0
  5128 ;;      Locals:         0       1       0       0       0       0       0
  5129 ;;      Temps:          0       0       0       0       0       0       0
  5130 ;;      Totals:         0       1       0       0       0       0       0
  5131 ;;Total ram usage:        1 bytes
  5132 ;; Hardware stack levels used:    1
  5133 ;; Hardware stack levels required when called:    8
  5134 ;; This function calls:
  5135 ;;		_EUSART1_Write
  5136 ;; This function is called by:
  5137 ;;		i2__doprnt
  5138 ;;		__doprnt
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           
  5142                           	psect	text4
  5143  005AE8                     __ptext4:
  5144                           	opt stack 0
  5145  005AE8                     _putch:
  5146                           	opt stack 0
  5147                           
  5148                           ;Skip over the trampoline to the duplicate function for level 2
  5149  005AE8  B25F               	btfsc	btemp,1,c
  5150  005AEA  EFA5  F02D         	goto	i2_putch
  5151  005AEE                     _putch$intlevel0:
  5152                           	opt stack 20
  5153                           
  5154                           ;incstack = 0
  5155                           ;putch@txData stored from wreg
  5156  005AEE  0100               	movlb	0	; () banked
  5157  005AF0  6F91               	movwf	putch@txData& (0+255),b
  5158                           
  5159                           ;eusart1.c: 113: EUSART1_Write(txData);
  5160  005AF2  0100               	movlb	0	; () banked
  5161  005AF4  5191               	movf	putch@txData& (0+255),w,b
  5162  005AF6  EC7E  F02D         	call	_EUSART1_Write
  5163  005AFA  0012               	return		;funcret
  5164  005AFC                     __end_of_putch:
  5165                           	opt stack 0
  5166                           tosu	equ	0xFFF
  5167                           tosh	equ	0xFFE
  5168                           tosl	equ	0xFFD
  5169                           pclath	equ	0xFFA
  5170                           tblptru	equ	0xFF8
  5171                           tblptrh	equ	0xFF7
  5172                           tblptrl	equ	0xFF6
  5173                           tablat	equ	0xFF5
  5174                           prodh	equ	0xFF4
  5175                           prodl	equ	0xFF3
  5176                           intcon	equ	0xFF2
  5177                           postinc0	equ	0xFEE
  5178                           wreg	equ	0xFE8
  5179                           postdec1	equ	0xFE5
  5180                           fsr1l	equ	0xFE1
  5181                           indf2	equ	0xFDF
  5182                           postinc2	equ	0xFDE
  5183                           postdec2	equ	0xFDD
  5184                           fsr2h	equ	0xFDA
  5185                           fsr2l	equ	0xFD9
  5186                           status	equ	0xFD8
  5187                           
  5188 ;; *************** function _EUSART1_Write *****************
  5189 ;; Defined at:
  5190 ;;		line 97 in file "mcc_generated_files/eusart1.c"
  5191 ;; Parameters:    Size  Location     Type
  5192 ;;  txData          1    wreg     unsigned char 
  5193 ;; Auto vars:     Size  Location     Type
  5194 ;;  txData          1   48[BANK0 ] unsigned char 
  5195 ;; Return value:  Size  Location     Type
  5196 ;;                  1    wreg      void 
  5197 ;; Registers used:
  5198 ;;		wreg
  5199 ;; Tracked objects:
  5200 ;;		On entry : 0/0
  5201 ;;		On exit  : 0/0
  5202 ;;		Unchanged: 0/0
  5203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5204 ;;      Params:         0       0       0       0       0       0       0
  5205 ;;      Locals:         0       1       0       0       0       0       0
  5206 ;;      Temps:          0       0       0       0       0       0       0
  5207 ;;      Totals:         0       1       0       0       0       0       0
  5208 ;;Total ram usage:        1 bytes
  5209 ;; Hardware stack levels used:    1
  5210 ;; Hardware stack levels required when called:    7
  5211 ;; This function calls:
  5212 ;;		Nothing
  5213 ;; This function is called by:
  5214 ;;		_putch
  5215 ;; This function uses a non-reentrant model
  5216 ;;
  5217                           
  5218                           	psect	text5
  5219  005AFC                     __ptext5:
  5220                           	opt stack 0
  5221  005AFC                     _EUSART1_Write:
  5222                           	opt stack 20
  5223                           
  5224                           ;incstack = 0
  5225                           ;EUSART1_Write@txData stored from wreg
  5226  005AFC  0100               	movlb	0	; () banked
  5227  005AFE  6F90               	movwf	EUSART1_Write@txData& (0+255),b
  5228  005B00                     l227:
  5229  005B00  A89E               	btfss	3998,4,c	;volatile
  5230  005B02  D7FE               	goto	l227
  5231                           
  5232                           ;eusart1.c: 101: }
  5233                           ;eusart1.c: 103: TXREG1 = txData;
  5234  005B04  C090  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  5235  005B08  0012               	return		;funcret
  5236  005B0A                     __end_of_EUSART1_Write:
  5237                           	opt stack 0
  5238                           tosu	equ	0xFFF
  5239                           tosh	equ	0xFFE
  5240                           tosl	equ	0xFFD
  5241                           pclath	equ	0xFFA
  5242                           tblptru	equ	0xFF8
  5243                           tblptrh	equ	0xFF7
  5244                           tblptrl	equ	0xFF6
  5245                           tablat	equ	0xFF5
  5246                           prodh	equ	0xFF4
  5247                           prodl	equ	0xFF3
  5248                           intcon	equ	0xFF2
  5249                           postinc0	equ	0xFEE
  5250                           wreg	equ	0xFE8
  5251                           postdec1	equ	0xFE5
  5252                           fsr1l	equ	0xFE1
  5253                           indf2	equ	0xFDF
  5254                           postinc2	equ	0xFDE
  5255                           postdec2	equ	0xFDD
  5256                           fsr2h	equ	0xFDA
  5257                           fsr2l	equ	0xFD9
  5258                           status	equ	0xFD8
  5259                           
  5260 ;; *************** function _isdigit *****************
  5261 ;; Defined at:
  5262 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;  c               1    wreg     unsigned char 
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;  c               1   50[BANK0 ] unsigned char 
  5267 ;; Return value:  Size  Location     Type
  5268 ;;		None               void
  5269 ;; Registers used:
  5270 ;;		wreg, status,2, status,0
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5276 ;;      Params:         0       0       0       0       0       0       0
  5277 ;;      Locals:         0       2       0       0       0       0       0
  5278 ;;      Temps:          0       1       0       0       0       0       0
  5279 ;;      Totals:         0       3       0       0       0       0       0
  5280 ;;Total ram usage:        3 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:    7
  5283 ;; This function calls:
  5284 ;;		Nothing
  5285 ;; This function is called by:
  5286 ;;		__doprnt
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text6
  5291  0059DC                     __ptext6:
  5292                           	opt stack 0
  5293  0059DC                     _isdigit:
  5294                           	opt stack 21
  5295                           
  5296                           ;incstack = 0
  5297                           ;isdigit@c stored from wreg
  5298  0059DC  0100               	movlb	0	; () banked
  5299  0059DE  6F92               	movwf	isdigit@c& (0+255),b
  5300  0059E0  0E00               	movlw	0
  5301  0059E2  0100               	movlb	0	; () banked
  5302  0059E4  6F91               	movwf	_isdigit$1289& (0+255),b
  5303                           
  5304                           ; BSR set to: 0
  5305  0059E6  0E3A               	movlw	58
  5306  0059E8  0100               	movlb	0	; () banked
  5307  0059EA  6192               	cpfslt	isdigit@c& (0+255),b
  5308  0059EC  D007               	goto	l4495
  5309                           
  5310                           ; BSR set to: 0
  5311  0059EE  0E2F               	movlw	47
  5312  0059F0  0100               	movlb	0	; () banked
  5313  0059F2  6592               	cpfsgt	isdigit@c& (0+255),b
  5314  0059F4  D003               	goto	l4495
  5315                           
  5316                           ; BSR set to: 0
  5317  0059F6  0E01               	movlw	1
  5318  0059F8  0100               	movlb	0	; () banked
  5319  0059FA  6F91               	movwf	_isdigit$1289& (0+255),b
  5320  0059FC                     l4495:
  5321                           
  5322                           ; BSR set to: 0
  5323  0059FC  C091  F090         	movff	_isdigit$1289,??_isdigit
  5324  005A00  0100               	movlb	0	; () banked
  5325  005A02  3190               	rrcf	??_isdigit& (0+255),w,b
  5326  005A04  0012               	return	
  5327  005A06                     __end_of_isdigit:
  5328                           	opt stack 0
  5329                           tosu	equ	0xFFF
  5330                           tosh	equ	0xFFE
  5331                           tosl	equ	0xFFD
  5332                           pclath	equ	0xFFA
  5333                           tblptru	equ	0xFF8
  5334                           tblptrh	equ	0xFF7
  5335                           tblptrl	equ	0xFF6
  5336                           tablat	equ	0xFF5
  5337                           prodh	equ	0xFF4
  5338                           prodl	equ	0xFF3
  5339                           intcon	equ	0xFF2
  5340                           postinc0	equ	0xFEE
  5341                           wreg	equ	0xFE8
  5342                           postdec1	equ	0xFE5
  5343                           fsr1l	equ	0xFE1
  5344                           indf2	equ	0xFDF
  5345                           postinc2	equ	0xFDE
  5346                           postdec2	equ	0xFDD
  5347                           fsr2h	equ	0xFDA
  5348                           fsr2l	equ	0xFD9
  5349                           status	equ	0xFD8
  5350                           
  5351 ;; *************** function _fround *****************
  5352 ;; Defined at:
  5353 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;  prec            1    wreg     unsigned char 
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;  prec            1    6[BANK1 ] unsigned char 
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  3   83[BANK0 ] unsigned char 
  5360 ;; Registers used:
  5361 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5367 ;;      Params:         0       3       0       0       0       0       0
  5368 ;;      Locals:         0       0       7       0       0       0       0
  5369 ;;      Temps:          0       0       0       0       0       0       0
  5370 ;;      Totals:         0       3       7       0       0       0       0
  5371 ;;Total ram usage:       10 bytes
  5372 ;; Hardware stack levels used:    1
  5373 ;; Hardware stack levels required when called:    9
  5374 ;; This function calls:
  5375 ;;		___awdiv
  5376 ;;		___awmod
  5377 ;;		___ftmul
  5378 ;;		___wmul
  5379 ;; This function is called by:
  5380 ;;		__doprnt
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           	psect	text7
  5385  003380                     __ptext7:
  5386                           	opt stack 0
  5387  003380                     _fround:
  5388                           	opt stack 19
  5389                           
  5390                           ; BSR set to: 0
  5391                           ;incstack = 0
  5392                           ;fround@prec stored from wreg
  5393  003380  0101               	movlb	1	; () banked
  5394  003382  6F06               	movwf	fround@prec& (0+255),b
  5395                           
  5396                           ;doprnt.c: 413: if(prec>=110)
  5397  003384  0E6D               	movlw	109
  5398  003386  0101               	movlb	1	; () banked
  5399  003388  6506               	cpfsgt	fround@prec& (0+255),b
  5400  00338A  D0BA               	goto	l6173
  5401                           
  5402                           ; BSR set to: 1
  5403                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5404  00338C  0E00               	movlw	0
  5405  00338E  0100               	movlb	0	; () banked
  5406  003390  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5407  003392  0E03               	movlw	3
  5408  003394  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  5409  003396  0E00               	movlw	0
  5410  003398  0100               	movlb	0	; () banked
  5411  00339A  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  5412  00339C  0E0A               	movlw	10
  5413  00339E  6F98               	movwf	___awdiv@divisor& (0+255),b
  5414  0033A0  0E00               	movlw	0
  5415  0033A2  0100               	movlb	0	; () banked
  5416  0033A4  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  5417  0033A6  0E64               	movlw	100
  5418  0033A8  6F92               	movwf	___awmod@divisor& (0+255),b
  5419  0033AA  C106  F090         	movff	fround@prec,___awmod@dividend
  5420  0033AE  0100               	movlb	0	; () banked
  5421  0033B0  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  5422  0033B2  EC6E  F028         	call	___awmod	;wreg free
  5423  0033B6  C090  F096         	movff	?___awmod,___awdiv@dividend
  5424  0033BA  C091  F097         	movff	?___awmod+1,___awdiv@dividend+1
  5425  0033BE  EC5A  F027         	call	___awdiv	;wreg free
  5426  0033C2  0E09               	movlw	9
  5427  0033C4  0100               	movlb	0	; () banked
  5428  0033C6  2596               	addwf	?___awdiv& (0+255),w,b
  5429  0033C8  0100               	movlb	0	; () banked
  5430  0033CA  6F9E               	movwf	___wmul@multiplier& (0+255),b
  5431  0033CC  0E00               	movlw	0
  5432  0033CE  0100               	movlb	0	; () banked
  5433  0033D0  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  5434  0033D2  0100               	movlb	0	; () banked
  5435  0033D4  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  5436  0033D6  EC55  F02C         	call	___wmul	;wreg free
  5437  0033DA  0E29               	movlw	low __npowers_
  5438  0033DC  0100               	movlb	0	; () banked
  5439  0033DE  259E               	addwf	?___wmul& (0+255),w,b
  5440  0033E0  6EF6               	movwf	tblptrl,c
  5441  0033E2  0E06               	movlw	high __npowers_
  5442  0033E4  0100               	movlb	0	; () banked
  5443  0033E6  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  5444  0033E8  6EF7               	movwf	tblptrh,c
  5445  0033EA                     	if	0	;There are less than 3 active tblptr bytes
  5446  0033EA                     	endif
  5447  0033EA  0009               	tblrd		*+
  5448  0033EC  CFF5 F0A7          	movff	tablat,___ftmul@f2
  5449  0033F0  0009               	tblrd		*+
  5450  0033F2  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  5451  0033F6  000A               	tblrd		*-
  5452  0033F8  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  5453  0033FC  0E00               	movlw	0
  5454  0033FE  0100               	movlb	0	; () banked
  5455  003400  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  5456  003402  0E64               	movlw	100
  5457  003404  6F98               	movwf	___awdiv@divisor& (0+255),b
  5458  003406  C106  F096         	movff	fround@prec,___awdiv@dividend
  5459  00340A  0100               	movlb	0	; () banked
  5460  00340C  6B97               	clrf	(___awdiv@dividend+1)& (0+255),b
  5461  00340E  EC5A  F027         	call	___awdiv	;wreg free
  5462  003412  0E12               	movlw	18
  5463  003414  0100               	movlb	0	; () banked
  5464  003416  2596               	addwf	?___awdiv& (0+255),w,b
  5465  003418  0100               	movlb	0	; () banked
  5466  00341A  6F9E               	movwf	___wmul@multiplier& (0+255),b
  5467  00341C  0E00               	movlw	0
  5468  00341E  0100               	movlb	0	; () banked
  5469  003420  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  5470  003422  0100               	movlb	0	; () banked
  5471  003424  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  5472  003426  0E00               	movlw	0
  5473  003428  0100               	movlb	0	; () banked
  5474  00342A  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5475  00342C  0E03               	movlw	3
  5476  00342E  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  5477  003430  EC55  F02C         	call	___wmul	;wreg free
  5478  003434  0E29               	movlw	low __npowers_
  5479  003436  0100               	movlb	0	; () banked
  5480  003438  259E               	addwf	?___wmul& (0+255),w,b
  5481  00343A  6EF6               	movwf	tblptrl,c
  5482  00343C  0E06               	movlw	high __npowers_
  5483  00343E  0100               	movlb	0	; () banked
  5484  003440  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  5485  003442  6EF7               	movwf	tblptrh,c
  5486  003444                     	if	0	;There are less than 3 active tblptr bytes
  5487  003444                     	endif
  5488  003444  0009               	tblrd		*+
  5489  003446  CFF5 F0A4          	movff	tablat,___ftmul@f1
  5490  00344A  0009               	tblrd		*+
  5491  00344C  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  5492  003450  000A               	tblrd		*-
  5493  003452  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  5494  003456  EC5B  F021         	call	___ftmul	;wreg free
  5495  00345A  C0A4  F103         	movff	?___ftmul,_fround$1740
  5496  00345E  C0A5  F104         	movff	?___ftmul+1,_fround$1740+1
  5497  003462  C0A6  F105         	movff	?___ftmul+2,_fround$1740+2
  5498                           
  5499                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5500  003466  0E00               	movlw	0
  5501  003468  0100               	movlb	0	; () banked
  5502  00346A  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5503  00346C  0E03               	movlw	3
  5504  00346E  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  5505  003470  0E00               	movlw	0
  5506  003472  0100               	movlb	0	; () banked
  5507  003474  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  5508  003476  0E0A               	movlw	10
  5509  003478  6F92               	movwf	___awmod@divisor& (0+255),b
  5510  00347A  C106  F090         	movff	fround@prec,___awmod@dividend
  5511  00347E  0100               	movlb	0	; () banked
  5512  003480  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  5513  003482  EC6E  F028         	call	___awmod	;wreg free
  5514  003486  C090  F09E         	movff	?___awmod,___wmul@multiplier
  5515  00348A  C091  F09F         	movff	?___awmod+1,___wmul@multiplier+1
  5516  00348E  EC55  F02C         	call	___wmul	;wreg free
  5517  003492  0E29               	movlw	low __npowers_
  5518  003494  0100               	movlb	0	; () banked
  5519  003496  259E               	addwf	?___wmul& (0+255),w,b
  5520  003498  6EF6               	movwf	tblptrl,c
  5521  00349A  0E06               	movlw	high __npowers_
  5522  00349C  0100               	movlb	0	; () banked
  5523  00349E  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  5524  0034A0  6EF7               	movwf	tblptrh,c
  5525  0034A2                     	if	0	;There are less than 3 active tblptr bytes
  5526  0034A2                     	endif
  5527  0034A2  0009               	tblrd		*+
  5528  0034A4  CFF5 F0A7          	movff	tablat,___ftmul@f2
  5529  0034A8  0009               	tblrd		*+
  5530  0034AA  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  5531  0034AE  000A               	tblrd		*-
  5532  0034B0  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  5533  0034B4  C103  F0A4         	movff	_fround$1740,___ftmul@f1
  5534  0034B8  C104  F0A5         	movff	_fround$1740+1,___ftmul@f1+1
  5535  0034BC  C105  F0A6         	movff	_fround$1740+2,___ftmul@f1+2
  5536  0034C0  EC5B  F021         	call	___ftmul	;wreg free
  5537  0034C4  C0A4  F100         	movff	?___ftmul,_fround$1741
  5538  0034C8  C0A5  F101         	movff	?___ftmul+1,_fround$1741+1
  5539  0034CC  C0A6  F102         	movff	?___ftmul+2,_fround$1741+2
  5540                           
  5541                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5542  0034D0  C100  F0A4         	movff	_fround$1741,___ftmul@f1
  5543  0034D4  C101  F0A5         	movff	_fround$1741+1,___ftmul@f1+1
  5544  0034D8  C102  F0A6         	movff	_fround$1741+2,___ftmul@f1+2
  5545  0034DC  0E00               	movlw	0
  5546  0034DE  0100               	movlb	0	; () banked
  5547  0034E0  6FA7               	movwf	___ftmul@f2& (0+255),b
  5548  0034E2  0E00               	movlw	0
  5549  0034E4  0100               	movlb	0	; () banked
  5550  0034E6  6FA8               	movwf	(___ftmul@f2+1)& (0+255),b
  5551  0034E8  0E3F               	movlw	63
  5552  0034EA  0100               	movlb	0	; () banked
  5553  0034EC  6FA9               	movwf	(___ftmul@f2+2)& (0+255),b
  5554  0034EE  EC5B  F021         	call	___ftmul	;wreg free
  5555  0034F2  C0A4  F0B3         	movff	?___ftmul,?_fround
  5556  0034F6  C0A5  F0B4         	movff	?___ftmul+1,?_fround+1
  5557  0034FA  C0A6  F0B5         	movff	?___ftmul+2,?_fround+2
  5558  0034FE  0012               	return	
  5559  003500                     l6173:
  5560                           
  5561                           ;doprnt.c: 415: else if(prec > 10)
  5562  003500  0E0A               	movlw	10
  5563  003502  0101               	movlb	1	; () banked
  5564  003504  6506               	cpfsgt	fround@prec& (0+255),b
  5565  003506  D06E               	goto	l6181
  5566                           
  5567                           ; BSR set to: 1
  5568                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5569  003508  0E00               	movlw	0
  5570  00350A  0100               	movlb	0	; () banked
  5571  00350C  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5572  00350E  0E03               	movlw	3
  5573  003510  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  5574  003512  0E00               	movlw	0
  5575  003514  0100               	movlb	0	; () banked
  5576  003516  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  5577  003518  0E0A               	movlw	10
  5578  00351A  6F92               	movwf	___awmod@divisor& (0+255),b
  5579  00351C  C106  F090         	movff	fround@prec,___awmod@dividend
  5580  003520  0100               	movlb	0	; () banked
  5581  003522  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  5582  003524  EC6E  F028         	call	___awmod	;wreg free
  5583  003528  C090  F09E         	movff	?___awmod,___wmul@multiplier
  5584  00352C  C091  F09F         	movff	?___awmod+1,___wmul@multiplier+1
  5585  003530  EC55  F02C         	call	___wmul	;wreg free
  5586  003534  0E29               	movlw	low __npowers_
  5587  003536  0100               	movlb	0	; () banked
  5588  003538  259E               	addwf	?___wmul& (0+255),w,b
  5589  00353A  6EF6               	movwf	tblptrl,c
  5590  00353C  0E06               	movlw	high __npowers_
  5591  00353E  0100               	movlb	0	; () banked
  5592  003540  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  5593  003542  6EF7               	movwf	tblptrh,c
  5594  003544                     	if	0	;There are less than 3 active tblptr bytes
  5595  003544                     	endif
  5596  003544  0009               	tblrd		*+
  5597  003546  CFF5 F0A7          	movff	tablat,___ftmul@f2
  5598  00354A  0009               	tblrd		*+
  5599  00354C  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  5600  003550  000A               	tblrd		*-
  5601  003552  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  5602  003556  0E00               	movlw	0
  5603  003558  0100               	movlb	0	; () banked
  5604  00355A  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  5605  00355C  0E0A               	movlw	10
  5606  00355E  6F98               	movwf	___awdiv@divisor& (0+255),b
  5607  003560  C106  F096         	movff	fround@prec,___awdiv@dividend
  5608  003564  0100               	movlb	0	; () banked
  5609  003566  6B97               	clrf	(___awdiv@dividend+1)& (0+255),b
  5610  003568  EC5A  F027         	call	___awdiv	;wreg free
  5611  00356C  0E09               	movlw	9
  5612  00356E  0100               	movlb	0	; () banked
  5613  003570  2596               	addwf	?___awdiv& (0+255),w,b
  5614  003572  0100               	movlb	0	; () banked
  5615  003574  6F9E               	movwf	___wmul@multiplier& (0+255),b
  5616  003576  0E00               	movlw	0
  5617  003578  0100               	movlb	0	; () banked
  5618  00357A  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  5619  00357C  0100               	movlb	0	; () banked
  5620  00357E  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  5621  003580  0E00               	movlw	0
  5622  003582  0100               	movlb	0	; () banked
  5623  003584  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5624  003586  0E03               	movlw	3
  5625  003588  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  5626  00358A  EC55  F02C         	call	___wmul	;wreg free
  5627  00358E  0E29               	movlw	low __npowers_
  5628  003590  0100               	movlb	0	; () banked
  5629  003592  259E               	addwf	?___wmul& (0+255),w,b
  5630  003594  6EF6               	movwf	tblptrl,c
  5631  003596  0E06               	movlw	high __npowers_
  5632  003598  0100               	movlb	0	; () banked
  5633  00359A  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  5634  00359C  6EF7               	movwf	tblptrh,c
  5635  00359E                     	if	0	;There are less than 3 active tblptr bytes
  5636  00359E                     	endif
  5637  00359E  0009               	tblrd		*+
  5638  0035A0  CFF5 F0A4          	movff	tablat,___ftmul@f1
  5639  0035A4  0009               	tblrd		*+
  5640  0035A6  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  5641  0035AA  000A               	tblrd		*-
  5642  0035AC  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  5643  0035B0  EC5B  F021         	call	___ftmul	;wreg free
  5644  0035B4  C0A4  F103         	movff	?___ftmul,_fround$1740
  5645  0035B8  C0A5  F104         	movff	?___ftmul+1,_fround$1740+1
  5646  0035BC  C0A6  F105         	movff	?___ftmul+2,_fround$1740+2
  5647                           
  5648                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5649  0035C0  C103  F0A4         	movff	_fround$1740,___ftmul@f1
  5650  0035C4  C104  F0A5         	movff	_fround$1740+1,___ftmul@f1+1
  5651  0035C8  C105  F0A6         	movff	_fround$1740+2,___ftmul@f1+2
  5652  0035CC  0E00               	movlw	0
  5653  0035CE  0100               	movlb	0	; () banked
  5654  0035D0  6FA7               	movwf	___ftmul@f2& (0+255),b
  5655  0035D2  0E00               	movlw	0
  5656  0035D4  0100               	movlb	0	; () banked
  5657  0035D6  6FA8               	movwf	(___ftmul@f2+1)& (0+255),b
  5658  0035D8  0E3F               	movlw	63
  5659  0035DA  0100               	movlb	0	; () banked
  5660  0035DC  6FA9               	movwf	(___ftmul@f2+2)& (0+255),b
  5661  0035DE  EC5B  F021         	call	___ftmul	;wreg free
  5662  0035E2  D787               	goto	L5
  5663  0035E4                     l6181:
  5664                           
  5665                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5666  0035E4  0101               	movlb	1	; () banked
  5667  0035E6  5106               	movf	fround@prec& (0+255),w,b
  5668  0035E8  0D03               	mullw	3
  5669  0035EA  0E29               	movlw	low __npowers_
  5670  0035EC  24F3               	addwf	prodl,w,c
  5671  0035EE  6EF6               	movwf	tblptrl,c
  5672  0035F0  0E06               	movlw	high __npowers_
  5673  0035F2  20F4               	addwfc	prodh,w,c
  5674  0035F4  6EF7               	movwf	tblptrh,c
  5675  0035F6                     	if	0	;There are less than 3 active tblptr bytes
  5676  0035F6                     	endif
  5677  0035F6  0009               	tblrd		*+
  5678  0035F8  CFF5 F0A4          	movff	tablat,___ftmul@f1
  5679  0035FC  0009               	tblrd		*+
  5680  0035FE  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  5681  003602  000A               	tblrd		*-
  5682  003604  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  5683  003608  0E00               	movlw	0
  5684  00360A  0100               	movlb	0	; () banked
  5685  00360C  6FA7               	movwf	___ftmul@f2& (0+255),b
  5686  00360E  0E00               	movlw	0
  5687  003610  0100               	movlb	0	; () banked
  5688  003612  6FA8               	movwf	(___ftmul@f2+1)& (0+255),b
  5689  003614  0E3F               	movlw	63
  5690  003616  0100               	movlb	0	; () banked
  5691  003618  6FA9               	movwf	(___ftmul@f2+2)& (0+255),b
  5692  00361A  EC5B  F021         	call	___ftmul	;wreg free
  5693  00361E  C0A4  F0B3         	movff	?___ftmul,?_fround
  5694  003622  C0A5  F0B4         	movff	?___ftmul+1,?_fround+1
  5695  003626  C0A6  F0B5         	movff	?___ftmul+2,?_fround+2
  5696  00362A  0012               	return	
  5697  00362C                     __end_of_fround:
  5698                           	opt stack 0
  5699                           tosu	equ	0xFFF
  5700                           tosh	equ	0xFFE
  5701                           tosl	equ	0xFFD
  5702                           pclath	equ	0xFFA
  5703                           tblptru	equ	0xFF8
  5704                           tblptrh	equ	0xFF7
  5705                           tblptrl	equ	0xFF6
  5706                           tablat	equ	0xFF5
  5707                           prodh	equ	0xFF4
  5708                           prodl	equ	0xFF3
  5709                           intcon	equ	0xFF2
  5710                           postinc0	equ	0xFEE
  5711                           wreg	equ	0xFE8
  5712                           postdec1	equ	0xFE5
  5713                           fsr1l	equ	0xFE1
  5714                           indf2	equ	0xFDF
  5715                           postinc2	equ	0xFDE
  5716                           postdec2	equ	0xFDD
  5717                           fsr2h	equ	0xFDA
  5718                           fsr2l	equ	0xFD9
  5719                           status	equ	0xFD8
  5720                           
  5721 ;; *************** function ___wmul *****************
  5722 ;; Defined at:
  5723 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  5724 ;; Parameters:    Size  Location     Type
  5725 ;;  multiplier      2   62[BANK0 ] unsigned int 
  5726 ;;  multiplicand    2   64[BANK0 ] unsigned int 
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;  product         2   66[BANK0 ] unsigned int 
  5729 ;; Return value:  Size  Location     Type
  5730 ;;                  2   62[BANK0 ] unsigned int 
  5731 ;; Registers used:
  5732 ;;		wreg, status,2, status,0, prodl, prodh
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/0
  5735 ;;		On exit  : 0/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5738 ;;      Params:         0       4       0       0       0       0       0
  5739 ;;      Locals:         0       2       0       0       0       0       0
  5740 ;;      Temps:          0       0       0       0       0       0       0
  5741 ;;      Totals:         0       6       0       0       0       0       0
  5742 ;;Total ram usage:        6 bytes
  5743 ;; Hardware stack levels used:    1
  5744 ;; Hardware stack levels required when called:    7
  5745 ;; This function calls:
  5746 ;;		Nothing
  5747 ;; This function is called by:
  5748 ;;		_fround
  5749 ;;		_scale
  5750 ;;		__doprnt
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           	psect	text8
  5755  0058AA                     __ptext8:
  5756                           	opt stack 0
  5757  0058AA                     ___wmul:
  5758                           	opt stack 20
  5759                           
  5760                           ;incstack = 0
  5761  0058AA  0100               	movlb	0	; () banked
  5762  0058AC  519E               	movf	___wmul@multiplier& (0+255),w,b
  5763  0058AE  0100               	movlb	0	; () banked
  5764  0058B0  03A0               	mulwf	___wmul@multiplicand& (0+255),b
  5765  0058B2  CFF3 F0A2          	movff	prodl,___wmul@product
  5766  0058B6  CFF4 F0A3          	movff	prodh,___wmul@product+1
  5767  0058BA  0100               	movlb	0	; () banked
  5768  0058BC  519E               	movf	___wmul@multiplier& (0+255),w,b
  5769  0058BE  0100               	movlb	0	; () banked
  5770  0058C0  03A1               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5771  0058C2  50F3               	movf	prodl,w,c
  5772  0058C4  0100               	movlb	0	; () banked
  5773  0058C6  27A3               	addwf	(___wmul@product+1)& (0+255),f,b
  5774  0058C8  0100               	movlb	0	; () banked
  5775  0058CA  519F               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5776  0058CC  0100               	movlb	0	; () banked
  5777  0058CE  03A0               	mulwf	___wmul@multiplicand& (0+255),b
  5778  0058D0  50F3               	movf	prodl,w,c
  5779  0058D2  0100               	movlb	0	; () banked
  5780  0058D4  27A3               	addwf	(___wmul@product+1)& (0+255),f,b
  5781                           
  5782                           ; BSR set to: 0
  5783  0058D6  C0A2  F09E         	movff	___wmul@product,?___wmul
  5784  0058DA  C0A3  F09F         	movff	___wmul@product+1,?___wmul+1
  5785  0058DE  0012               	return	
  5786  0058E0                     __end_of___wmul:
  5787                           	opt stack 0
  5788                           tosu	equ	0xFFF
  5789                           tosh	equ	0xFFE
  5790                           tosl	equ	0xFFD
  5791                           pclath	equ	0xFFA
  5792                           tblptru	equ	0xFF8
  5793                           tblptrh	equ	0xFF7
  5794                           tblptrl	equ	0xFF6
  5795                           tablat	equ	0xFF5
  5796                           prodh	equ	0xFF4
  5797                           prodl	equ	0xFF3
  5798                           intcon	equ	0xFF2
  5799                           postinc0	equ	0xFEE
  5800                           wreg	equ	0xFE8
  5801                           postdec1	equ	0xFE5
  5802                           fsr1l	equ	0xFE1
  5803                           indf2	equ	0xFDF
  5804                           postinc2	equ	0xFDE
  5805                           postdec2	equ	0xFDD
  5806                           fsr2h	equ	0xFDA
  5807                           fsr2l	equ	0xFD9
  5808                           status	equ	0xFD8
  5809                           
  5810 ;; *************** function ___ftmul *****************
  5811 ;; Defined at:
  5812 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;  f1              3   68[BANK0 ] float 
  5815 ;;  f2              3   71[BANK0 ] float 
  5816 ;; Auto vars:     Size  Location     Type
  5817 ;;  f3_as_produc    3   78[BANK0 ] unsigned um
  5818 ;;  sign            1   82[BANK0 ] unsigned char 
  5819 ;;  cntr            1   81[BANK0 ] unsigned char 
  5820 ;;  exp             1   77[BANK0 ] unsigned char 
  5821 ;; Return value:  Size  Location     Type
  5822 ;;                  3   68[BANK0 ] float 
  5823 ;; Registers used:
  5824 ;;		wreg, status,2, status,0, cstack
  5825 ;; Tracked objects:
  5826 ;;		On entry : 0/0
  5827 ;;		On exit  : 0/0
  5828 ;;		Unchanged: 0/0
  5829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5830 ;;      Params:         0       6       0       0       0       0       0
  5831 ;;      Locals:         0       6       0       0       0       0       0
  5832 ;;      Temps:          0       3       0       0       0       0       0
  5833 ;;      Totals:         0      15       0       0       0       0       0
  5834 ;;Total ram usage:       15 bytes
  5835 ;; Hardware stack levels used:    1
  5836 ;; Hardware stack levels required when called:    8
  5837 ;; This function calls:
  5838 ;;		___ftpack
  5839 ;; This function is called by:
  5840 ;;		_fround
  5841 ;;		_scale
  5842 ;;		__doprnt
  5843 ;; This function uses a non-reentrant model
  5844 ;;
  5845                           
  5846                           	psect	text9
  5847  0042B6                     __ptext9:
  5848                           	opt stack 0
  5849  0042B6                     ___ftmul:
  5850                           	opt stack 19
  5851                           
  5852                           ; BSR set to: 0
  5853                           ;incstack = 0
  5854  0042B6  C0A6  F0AA         	movff	___ftmul@f1+2,??___ftmul
  5855  0042BA  0100               	movlb	0	; () banked
  5856  0042BC  6BAB               	clrf	(??___ftmul+1)& (0+255),b
  5857  0042BE  6BAC               	clrf	(??___ftmul+2)& (0+255),b
  5858  0042C0  0100               	movlb	0	; () banked
  5859  0042C2  35A5               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  5860  0042C4  0100               	movlb	0	; () banked
  5861  0042C6  37AA               	rlcf	??___ftmul& (0+255),f,b
  5862  0042C8  E301               	bnc	u8621
  5863  0042CA  81AB               	bsf	(??___ftmul+1)& (0+255),0,b
  5864  0042CC                     u8621:
  5865  0042CC  0100               	movlb	0	; () banked
  5866  0042CE  51AA               	movf	??___ftmul& (0+255),w,b
  5867  0042D0  0100               	movlb	0	; () banked
  5868  0042D2  6FAD               	movwf	___ftmul@exp& (0+255),b
  5869  0042D4  0100               	movlb	0	; () banked
  5870  0042D6  51AD               	movf	___ftmul@exp& (0+255),w,b
  5871  0042D8  A4D8               	btfss	status,2,c
  5872  0042DA  D00A               	goto	l6041
  5873                           
  5874                           ; BSR set to: 0
  5875  0042DC  0E00               	movlw	0
  5876  0042DE  0100               	movlb	0	; () banked
  5877  0042E0  6FA4               	movwf	?___ftmul& (0+255),b
  5878  0042E2  0E00               	movlw	0
  5879  0042E4  0100               	movlb	0	; () banked
  5880  0042E6  6FA5               	movwf	(?___ftmul+1)& (0+255),b
  5881  0042E8  0E00               	movlw	0
  5882  0042EA  0100               	movlb	0	; () banked
  5883  0042EC  6FA6               	movwf	(?___ftmul+2)& (0+255),b
  5884                           
  5885                           ; BSR set to: 0
  5886  0042EE  0012               	return	
  5887  0042F0                     l6041:
  5888                           
  5889                           ; BSR set to: 0
  5890  0042F0  C0A9  F0AA         	movff	___ftmul@f2+2,??___ftmul
  5891  0042F4  0100               	movlb	0	; () banked
  5892  0042F6  6BAB               	clrf	(??___ftmul+1)& (0+255),b
  5893  0042F8  6BAC               	clrf	(??___ftmul+2)& (0+255),b
  5894  0042FA  0100               	movlb	0	; () banked
  5895  0042FC  35A8               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  5896  0042FE  0100               	movlb	0	; () banked
  5897  004300  37AA               	rlcf	??___ftmul& (0+255),f,b
  5898  004302  E301               	bnc	u8641
  5899  004304  81AB               	bsf	(??___ftmul+1)& (0+255),0,b
  5900  004306                     u8641:
  5901  004306  0100               	movlb	0	; () banked
  5902  004308  51AA               	movf	??___ftmul& (0+255),w,b
  5903  00430A  0100               	movlb	0	; () banked
  5904  00430C  6FB2               	movwf	___ftmul@sign& (0+255),b
  5905  00430E  0100               	movlb	0	; () banked
  5906  004310  51B2               	movf	___ftmul@sign& (0+255),w,b
  5907  004312  A4D8               	btfss	status,2,c
  5908  004314  D00A               	goto	l6047
  5909                           
  5910                           ; BSR set to: 0
  5911  004316  0E00               	movlw	0
  5912  004318  0100               	movlb	0	; () banked
  5913  00431A  6FA4               	movwf	?___ftmul& (0+255),b
  5914  00431C  0E00               	movlw	0
  5915  00431E  0100               	movlb	0	; () banked
  5916  004320  6FA5               	movwf	(?___ftmul+1)& (0+255),b
  5917  004322  0E00               	movlw	0
  5918  004324  0100               	movlb	0	; () banked
  5919  004326  6FA6               	movwf	(?___ftmul+2)& (0+255),b
  5920                           
  5921                           ; BSR set to: 0
  5922  004328  0012               	return	
  5923  00432A                     l6047:
  5924                           
  5925                           ; BSR set to: 0
  5926  00432A  0100               	movlb	0	; () banked
  5927  00432C  51B2               	movf	___ftmul@sign& (0+255),w,b
  5928  00432E  0F7B               	addlw	123
  5929  004330  0100               	movlb	0	; () banked
  5930  004332  27AD               	addwf	___ftmul@exp& (0+255),f,b
  5931                           
  5932                           ; BSR set to: 0
  5933  004334  C0A6  F0B2         	movff	___ftmul@f1+2,___ftmul@sign
  5934  004338  0100               	movlb	0	; () banked
  5935  00433A  51A9               	movf	(___ftmul@f2+2)& (0+255),w,b
  5936  00433C  0100               	movlb	0	; () banked
  5937  00433E  1BB2               	xorwf	___ftmul@sign& (0+255),f,b
  5938  004340  0E80               	movlw	128
  5939  004342  0100               	movlb	0	; () banked
  5940  004344  17B2               	andwf	___ftmul@sign& (0+255),f,b
  5941                           
  5942                           ; BSR set to: 0
  5943  004346  0100               	movlb	0	; () banked
  5944  004348  8FA5               	bsf	(___ftmul@f1+1)& (0+255),7,b
  5945                           
  5946                           ; BSR set to: 0
  5947  00434A  0100               	movlb	0	; () banked
  5948  00434C  8FA8               	bsf	(___ftmul@f2+1)& (0+255),7,b
  5949                           
  5950                           ; BSR set to: 0
  5951  00434E  0EFF               	movlw	255
  5952  004350  0100               	movlb	0	; () banked
  5953  004352  17A7               	andwf	___ftmul@f2& (0+255),f,b
  5954  004354  0EFF               	movlw	255
  5955  004356  0100               	movlb	0	; () banked
  5956  004358  17A8               	andwf	(___ftmul@f2+1)& (0+255),f,b
  5957  00435A  0E00               	movlw	0
  5958  00435C  0100               	movlb	0	; () banked
  5959  00435E  17A9               	andwf	(___ftmul@f2+2)& (0+255),f,b
  5960                           
  5961                           ; BSR set to: 0
  5962  004360  0E00               	movlw	0
  5963  004362  0100               	movlb	0	; () banked
  5964  004364  6FAE               	movwf	___ftmul@f3_as_product& (0+255),b
  5965  004366  0E00               	movlw	0
  5966  004368  0100               	movlb	0	; () banked
  5967  00436A  6FAF               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  5968  00436C  0E00               	movlw	0
  5969  00436E  0100               	movlb	0	; () banked
  5970  004370  6FB0               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  5971                           
  5972                           ; BSR set to: 0
  5973  004372  0E07               	movlw	7
  5974  004374  0100               	movlb	0	; () banked
  5975  004376  6FB1               	movwf	___ftmul@cntr& (0+255),b
  5976  004378                     l6061:
  5977                           
  5978                           ; BSR set to: 0
  5979  004378  0100               	movlb	0	; () banked
  5980  00437A  A1A4               	btfss	___ftmul@f1& (0+255),0,b
  5981  00437C  D00C               	goto	l6065
  5982                           
  5983                           ; BSR set to: 0
  5984  00437E  0100               	movlb	0	; () banked
  5985  004380  51A7               	movf	___ftmul@f2& (0+255),w,b
  5986  004382  0100               	movlb	0	; () banked
  5987  004384  27AE               	addwf	___ftmul@f3_as_product& (0+255),f,b
  5988  004386  0100               	movlb	0	; () banked
  5989  004388  51A8               	movf	(___ftmul@f2+1)& (0+255),w,b
  5990  00438A  0100               	movlb	0	; () banked
  5991  00438C  23AF               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  5992  00438E  0100               	movlb	0	; () banked
  5993  004390  51A9               	movf	(___ftmul@f2+2)& (0+255),w,b
  5994  004392  0100               	movlb	0	; () banked
  5995  004394  23B0               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  5996  004396                     l6065:
  5997                           
  5998                           ; BSR set to: 0
  5999  004396  0100               	movlb	0	; () banked
  6000  004398  90D8               	bcf	status,0,c
  6001  00439A  33A6               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6002  00439C  33A5               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6003  00439E  33A4               	rrcf	___ftmul@f1& (0+255),f,b
  6004  0043A0  0100               	movlb	0	; () banked
  6005  0043A2  90D8               	bcf	status,0,c
  6006  0043A4  37A7               	rlcf	___ftmul@f2& (0+255),f,b
  6007  0043A6  37A8               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  6008  0043A8  37A9               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  6009                           
  6010                           ; BSR set to: 0
  6011  0043AA  0100               	movlb	0	; () banked
  6012  0043AC  2FB1               	decfsz	___ftmul@cntr& (0+255),f,b
  6013  0043AE  D7E4               	goto	l6061
  6014                           
  6015                           ; BSR set to: 0
  6016                           
  6017                           ; BSR set to: 0
  6018  0043B0  0E09               	movlw	9
  6019  0043B2  0100               	movlb	0	; () banked
  6020  0043B4  6FB1               	movwf	___ftmul@cntr& (0+255),b
  6021  0043B6                     l6071:
  6022                           
  6023                           ; BSR set to: 0
  6024  0043B6  0100               	movlb	0	; () banked
  6025  0043B8  A1A4               	btfss	___ftmul@f1& (0+255),0,b
  6026  0043BA  D00C               	goto	l6075
  6027                           
  6028                           ; BSR set to: 0
  6029  0043BC  0100               	movlb	0	; () banked
  6030  0043BE  51A7               	movf	___ftmul@f2& (0+255),w,b
  6031  0043C0  0100               	movlb	0	; () banked
  6032  0043C2  27AE               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6033  0043C4  0100               	movlb	0	; () banked
  6034  0043C6  51A8               	movf	(___ftmul@f2+1)& (0+255),w,b
  6035  0043C8  0100               	movlb	0	; () banked
  6036  0043CA  23AF               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6037  0043CC  0100               	movlb	0	; () banked
  6038  0043CE  51A9               	movf	(___ftmul@f2+2)& (0+255),w,b
  6039  0043D0  0100               	movlb	0	; () banked
  6040  0043D2  23B0               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6041  0043D4                     l6075:
  6042                           
  6043                           ; BSR set to: 0
  6044  0043D4  0100               	movlb	0	; () banked
  6045  0043D6  90D8               	bcf	status,0,c
  6046  0043D8  33A6               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6047  0043DA  33A5               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6048  0043DC  33A4               	rrcf	___ftmul@f1& (0+255),f,b
  6049  0043DE  0100               	movlb	0	; () banked
  6050  0043E0  90D8               	bcf	status,0,c
  6051  0043E2  33B0               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  6052  0043E4  33AF               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  6053  0043E6  33AE               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  6054                           
  6055                           ; BSR set to: 0
  6056  0043E8  0100               	movlb	0	; () banked
  6057  0043EA  2FB1               	decfsz	___ftmul@cntr& (0+255),f,b
  6058  0043EC  D7E4               	goto	l6071
  6059                           
  6060                           ; BSR set to: 0
  6061                           
  6062                           ; BSR set to: 0
  6063  0043EE  C0AE  F090         	movff	___ftmul@f3_as_product,___ftpack@arg
  6064  0043F2  C0AF  F091         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6065  0043F6  C0B0  F092         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6066  0043FA  C0AD  F093         	movff	___ftmul@exp,___ftpack@exp
  6067  0043FE  C0B2  F094         	movff	___ftmul@sign,___ftpack@sign
  6068  004402  EC09  F025         	call	___ftpack	;wreg free
  6069  004406  C090  F0A4         	movff	?___ftpack,?___ftmul
  6070  00440A  C091  F0A5         	movff	?___ftpack+1,?___ftmul+1
  6071  00440E  C092  F0A6         	movff	?___ftpack+2,?___ftmul+2
  6072  004412  0012               	return	
  6073  004414                     __end_of___ftmul:
  6074                           	opt stack 0
  6075                           tosu	equ	0xFFF
  6076                           tosh	equ	0xFFE
  6077                           tosl	equ	0xFFD
  6078                           pclath	equ	0xFFA
  6079                           tblptru	equ	0xFF8
  6080                           tblptrh	equ	0xFF7
  6081                           tblptrl	equ	0xFF6
  6082                           tablat	equ	0xFF5
  6083                           prodh	equ	0xFF4
  6084                           prodl	equ	0xFF3
  6085                           intcon	equ	0xFF2
  6086                           postinc0	equ	0xFEE
  6087                           wreg	equ	0xFE8
  6088                           postdec1	equ	0xFE5
  6089                           fsr1l	equ	0xFE1
  6090                           indf2	equ	0xFDF
  6091                           postinc2	equ	0xFDE
  6092                           postdec2	equ	0xFDD
  6093                           fsr2h	equ	0xFDA
  6094                           fsr2l	equ	0xFD9
  6095                           status	equ	0xFD8
  6096                           
  6097 ;; *************** function ___awmod *****************
  6098 ;; Defined at:
  6099 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  6100 ;; Parameters:    Size  Location     Type
  6101 ;;  dividend        2   48[BANK0 ] int 
  6102 ;;  divisor         2   50[BANK0 ] int 
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;  sign            1   53[BANK0 ] unsigned char 
  6105 ;;  counter         1   52[BANK0 ] unsigned char 
  6106 ;; Return value:  Size  Location     Type
  6107 ;;                  2   48[BANK0 ] int 
  6108 ;; Registers used:
  6109 ;;		wreg, status,2, status,0
  6110 ;; Tracked objects:
  6111 ;;		On entry : 0/0
  6112 ;;		On exit  : 0/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6115 ;;      Params:         0       4       0       0       0       0       0
  6116 ;;      Locals:         0       2       0       0       0       0       0
  6117 ;;      Temps:          0       0       0       0       0       0       0
  6118 ;;      Totals:         0       6       0       0       0       0       0
  6119 ;;Total ram usage:        6 bytes
  6120 ;; Hardware stack levels used:    1
  6121 ;; Hardware stack levels required when called:    7
  6122 ;; This function calls:
  6123 ;;		Nothing
  6124 ;; This function is called by:
  6125 ;;		_fround
  6126 ;;		_scale
  6127 ;; This function uses a non-reentrant model
  6128 ;;
  6129                           
  6130                           	psect	text10
  6131  0050DC                     __ptext10:
  6132                           	opt stack 0
  6133  0050DC                     ___awmod:
  6134                           	opt stack 20
  6135                           
  6136                           ;incstack = 0
  6137  0050DC  0E00               	movlw	0
  6138  0050DE  0100               	movlb	0	; () banked
  6139  0050E0  6F95               	movwf	___awmod@sign& (0+255),b
  6140                           
  6141                           ; BSR set to: 0
  6142  0050E2  0100               	movlb	0	; () banked
  6143  0050E4  AF91               	btfss	(___awmod@dividend+1)& (0+255),7,b
  6144  0050E6  D008               	goto	l6135
  6145                           
  6146                           ; BSR set to: 0
  6147  0050E8  0100               	movlb	0	; () banked
  6148  0050EA  6D90               	negf	___awmod@dividend& (0+255),b
  6149  0050EC  1F91               	comf	(___awmod@dividend+1)& (0+255),f,b
  6150  0050EE  B0D8               	btfsc	status,0,c
  6151  0050F0  2B91               	incf	(___awmod@dividend+1)& (0+255),f,b
  6152                           
  6153                           ; BSR set to: 0
  6154  0050F2  0E01               	movlw	1
  6155  0050F4  0100               	movlb	0	; () banked
  6156  0050F6  6F95               	movwf	___awmod@sign& (0+255),b
  6157  0050F8                     l6135:
  6158                           
  6159                           ; BSR set to: 0
  6160  0050F8  0100               	movlb	0	; () banked
  6161  0050FA  AF93               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6162  0050FC  D005               	goto	l6139
  6163                           
  6164                           ; BSR set to: 0
  6165  0050FE  0100               	movlb	0	; () banked
  6166  005100  6D92               	negf	___awmod@divisor& (0+255),b
  6167  005102  1F93               	comf	(___awmod@divisor+1)& (0+255),f,b
  6168  005104  B0D8               	btfsc	status,0,c
  6169  005106  2B93               	incf	(___awmod@divisor+1)& (0+255),f,b
  6170  005108                     l6139:
  6171                           
  6172                           ; BSR set to: 0
  6173  005108  0100               	movlb	0	; () banked
  6174  00510A  5192               	movf	___awmod@divisor& (0+255),w,b
  6175  00510C  0100               	movlb	0	; () banked
  6176  00510E  1193               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6177  005110  B4D8               	btfsc	status,2,c
  6178  005112  D026               	goto	l6155
  6179                           
  6180                           ; BSR set to: 0
  6181  005114  0E01               	movlw	1
  6182  005116  0100               	movlb	0	; () banked
  6183  005118  6F94               	movwf	___awmod@counter& (0+255),b
  6184  00511A  D006               	goto	l6145
  6185  00511C                     l6143:
  6186                           
  6187                           ; BSR set to: 0
  6188  00511C  0100               	movlb	0	; () banked
  6189  00511E  90D8               	bcf	status,0,c
  6190  005120  3792               	rlcf	___awmod@divisor& (0+255),f,b
  6191  005122  3793               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6192  005124  0100               	movlb	0	; () banked
  6193  005126  2B94               	incf	___awmod@counter& (0+255),f,b
  6194  005128                     l6145:
  6195                           
  6196                           ; BSR set to: 0
  6197  005128  0100               	movlb	0	; () banked
  6198  00512A  AF93               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6199  00512C  D7F7               	goto	l6143
  6200  00512E                     l6147:
  6201                           
  6202                           ; BSR set to: 0
  6203  00512E  0100               	movlb	0	; () banked
  6204  005130  5192               	movf	___awmod@divisor& (0+255),w,b
  6205  005132  0100               	movlb	0	; () banked
  6206  005134  5D90               	subwf	___awmod@dividend& (0+255),w,b
  6207  005136  0100               	movlb	0	; () banked
  6208  005138  5193               	movf	(___awmod@divisor+1)& (0+255),w,b
  6209  00513A  0100               	movlb	0	; () banked
  6210  00513C  5991               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6211  00513E  A0D8               	btfss	status,0,c
  6212  005140  D008               	goto	l6151
  6213                           
  6214                           ; BSR set to: 0
  6215  005142  0100               	movlb	0	; () banked
  6216  005144  5192               	movf	___awmod@divisor& (0+255),w,b
  6217  005146  0100               	movlb	0	; () banked
  6218  005148  5F90               	subwf	___awmod@dividend& (0+255),f,b
  6219  00514A  0100               	movlb	0	; () banked
  6220  00514C  5193               	movf	(___awmod@divisor+1)& (0+255),w,b
  6221  00514E  0100               	movlb	0	; () banked
  6222  005150  5B91               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6223  005152                     l6151:
  6224                           
  6225                           ; BSR set to: 0
  6226  005152  0100               	movlb	0	; () banked
  6227  005154  90D8               	bcf	status,0,c
  6228  005156  3393               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6229  005158  3392               	rrcf	___awmod@divisor& (0+255),f,b
  6230                           
  6231                           ; BSR set to: 0
  6232  00515A  0100               	movlb	0	; () banked
  6233  00515C  2F94               	decfsz	___awmod@counter& (0+255),f,b
  6234  00515E  D7E7               	goto	l6147
  6235  005160                     l6155:
  6236                           
  6237                           ; BSR set to: 0
  6238  005160  0100               	movlb	0	; () banked
  6239  005162  5195               	movf	___awmod@sign& (0+255),w,b
  6240  005164  0100               	movlb	0	; () banked
  6241  005166  B4D8               	btfsc	status,2,c
  6242  005168  D005               	goto	l6159
  6243                           
  6244                           ; BSR set to: 0
  6245  00516A  0100               	movlb	0	; () banked
  6246  00516C  6D90               	negf	___awmod@dividend& (0+255),b
  6247  00516E  1F91               	comf	(___awmod@dividend+1)& (0+255),f,b
  6248  005170  B0D8               	btfsc	status,0,c
  6249  005172  2B91               	incf	(___awmod@dividend+1)& (0+255),f,b
  6250  005174                     l6159:
  6251                           
  6252                           ; BSR set to: 0
  6253  005174  C090  F090         	movff	___awmod@dividend,?___awmod
  6254  005178  C091  F091         	movff	___awmod@dividend+1,?___awmod+1
  6255  00517C  0012               	return	
  6256  00517E                     __end_of___awmod:
  6257                           	opt stack 0
  6258                           tosu	equ	0xFFF
  6259                           tosh	equ	0xFFE
  6260                           tosl	equ	0xFFD
  6261                           pclath	equ	0xFFA
  6262                           tblptru	equ	0xFF8
  6263                           tblptrh	equ	0xFF7
  6264                           tblptrl	equ	0xFF6
  6265                           tablat	equ	0xFF5
  6266                           prodh	equ	0xFF4
  6267                           prodl	equ	0xFF3
  6268                           intcon	equ	0xFF2
  6269                           postinc0	equ	0xFEE
  6270                           wreg	equ	0xFE8
  6271                           postdec1	equ	0xFE5
  6272                           fsr1l	equ	0xFE1
  6273                           indf2	equ	0xFDF
  6274                           postinc2	equ	0xFDE
  6275                           postdec2	equ	0xFDD
  6276                           fsr2h	equ	0xFDA
  6277                           fsr2l	equ	0xFD9
  6278                           status	equ	0xFD8
  6279                           
  6280 ;; *************** function ___awdiv *****************
  6281 ;; Defined at:
  6282 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  6283 ;; Parameters:    Size  Location     Type
  6284 ;;  dividend        2   54[BANK0 ] int 
  6285 ;;  divisor         2   56[BANK0 ] int 
  6286 ;; Auto vars:     Size  Location     Type
  6287 ;;  quotient        2   60[BANK0 ] int 
  6288 ;;  sign            1   59[BANK0 ] unsigned char 
  6289 ;;  counter         1   58[BANK0 ] unsigned char 
  6290 ;; Return value:  Size  Location     Type
  6291 ;;                  2   54[BANK0 ] int 
  6292 ;; Registers used:
  6293 ;;		wreg, status,2, status,0
  6294 ;; Tracked objects:
  6295 ;;		On entry : 0/0
  6296 ;;		On exit  : 0/0
  6297 ;;		Unchanged: 0/0
  6298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6299 ;;      Params:         0       4       0       0       0       0       0
  6300 ;;      Locals:         0       4       0       0       0       0       0
  6301 ;;      Temps:          0       0       0       0       0       0       0
  6302 ;;      Totals:         0       8       0       0       0       0       0
  6303 ;;Total ram usage:        8 bytes
  6304 ;; Hardware stack levels used:    1
  6305 ;; Hardware stack levels required when called:    7
  6306 ;; This function calls:
  6307 ;;		Nothing
  6308 ;; This function is called by:
  6309 ;;		_fround
  6310 ;;		_scale
  6311 ;;		__doprnt
  6312 ;; This function uses a non-reentrant model
  6313 ;;
  6314                           
  6315                           	psect	text11
  6316  004EB4                     __ptext11:
  6317                           	opt stack 0
  6318  004EB4                     ___awdiv:
  6319                           	opt stack 20
  6320                           
  6321                           ; BSR set to: 0
  6322                           ;incstack = 0
  6323  004EB4  0E00               	movlw	0
  6324  004EB6  0100               	movlb	0	; () banked
  6325  004EB8  6F9B               	movwf	___awdiv@sign& (0+255),b
  6326                           
  6327                           ; BSR set to: 0
  6328  004EBA  0100               	movlb	0	; () banked
  6329  004EBC  AF99               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6330  004EBE  D008               	goto	l6091
  6331                           
  6332                           ; BSR set to: 0
  6333  004EC0  0100               	movlb	0	; () banked
  6334  004EC2  6D98               	negf	___awdiv@divisor& (0+255),b
  6335  004EC4  1F99               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6336  004EC6  B0D8               	btfsc	status,0,c
  6337  004EC8  2B99               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6338                           
  6339                           ; BSR set to: 0
  6340  004ECA  0E01               	movlw	1
  6341  004ECC  0100               	movlb	0	; () banked
  6342  004ECE  6F9B               	movwf	___awdiv@sign& (0+255),b
  6343  004ED0                     l6091:
  6344                           
  6345                           ; BSR set to: 0
  6346  004ED0  0100               	movlb	0	; () banked
  6347  004ED2  AF97               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6348  004ED4  D008               	goto	l6097
  6349                           
  6350                           ; BSR set to: 0
  6351  004ED6  0100               	movlb	0	; () banked
  6352  004ED8  6D96               	negf	___awdiv@dividend& (0+255),b
  6353  004EDA  1F97               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6354  004EDC  B0D8               	btfsc	status,0,c
  6355  004EDE  2B97               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6356                           
  6357                           ; BSR set to: 0
  6358  004EE0  0E01               	movlw	1
  6359  004EE2  0100               	movlb	0	; () banked
  6360  004EE4  1B9B               	xorwf	___awdiv@sign& (0+255),f,b
  6361  004EE6                     l6097:
  6362                           
  6363                           ; BSR set to: 0
  6364  004EE6  0E00               	movlw	0
  6365  004EE8  0100               	movlb	0	; () banked
  6366  004EEA  6F9D               	movwf	(___awdiv@quotient+1)& (0+255),b
  6367  004EEC  0E00               	movlw	0
  6368  004EEE  6F9C               	movwf	___awdiv@quotient& (0+255),b
  6369                           
  6370                           ; BSR set to: 0
  6371  004EF0  0100               	movlb	0	; () banked
  6372  004EF2  5198               	movf	___awdiv@divisor& (0+255),w,b
  6373  004EF4  0100               	movlb	0	; () banked
  6374  004EF6  1199               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6375  004EF8  B4D8               	btfsc	status,2,c
  6376  004EFA  D02C               	goto	l6119
  6377                           
  6378                           ; BSR set to: 0
  6379  004EFC  0E01               	movlw	1
  6380  004EFE  0100               	movlb	0	; () banked
  6381  004F00  6F9A               	movwf	___awdiv@counter& (0+255),b
  6382  004F02  D006               	goto	l6105
  6383  004F04                     l6103:
  6384                           
  6385                           ; BSR set to: 0
  6386  004F04  0100               	movlb	0	; () banked
  6387  004F06  90D8               	bcf	status,0,c
  6388  004F08  3798               	rlcf	___awdiv@divisor& (0+255),f,b
  6389  004F0A  3799               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6390  004F0C  0100               	movlb	0	; () banked
  6391  004F0E  2B9A               	incf	___awdiv@counter& (0+255),f,b
  6392  004F10                     l6105:
  6393                           
  6394                           ; BSR set to: 0
  6395  004F10  0100               	movlb	0	; () banked
  6396  004F12  AF99               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6397  004F14  D7F7               	goto	l6103
  6398  004F16                     l6107:
  6399                           
  6400                           ; BSR set to: 0
  6401  004F16  0100               	movlb	0	; () banked
  6402  004F18  90D8               	bcf	status,0,c
  6403  004F1A  379C               	rlcf	___awdiv@quotient& (0+255),f,b
  6404  004F1C  379D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6405                           
  6406                           ; BSR set to: 0
  6407  004F1E  0100               	movlb	0	; () banked
  6408  004F20  5198               	movf	___awdiv@divisor& (0+255),w,b
  6409  004F22  0100               	movlb	0	; () banked
  6410  004F24  5D96               	subwf	___awdiv@dividend& (0+255),w,b
  6411  004F26  0100               	movlb	0	; () banked
  6412  004F28  5199               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6413  004F2A  0100               	movlb	0	; () banked
  6414  004F2C  5997               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6415  004F2E  A0D8               	btfss	status,0,c
  6416  004F30  D00A               	goto	l6115
  6417                           
  6418                           ; BSR set to: 0
  6419  004F32  0100               	movlb	0	; () banked
  6420  004F34  5198               	movf	___awdiv@divisor& (0+255),w,b
  6421  004F36  0100               	movlb	0	; () banked
  6422  004F38  5F96               	subwf	___awdiv@dividend& (0+255),f,b
  6423  004F3A  0100               	movlb	0	; () banked
  6424  004F3C  5199               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6425  004F3E  0100               	movlb	0	; () banked
  6426  004F40  5B97               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6427                           
  6428                           ; BSR set to: 0
  6429  004F42  0100               	movlb	0	; () banked
  6430  004F44  819C               	bsf	___awdiv@quotient& (0+255),0,b
  6431  004F46                     l6115:
  6432                           
  6433                           ; BSR set to: 0
  6434  004F46  0100               	movlb	0	; () banked
  6435  004F48  90D8               	bcf	status,0,c
  6436  004F4A  3399               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6437  004F4C  3398               	rrcf	___awdiv@divisor& (0+255),f,b
  6438                           
  6439                           ; BSR set to: 0
  6440  004F4E  0100               	movlb	0	; () banked
  6441  004F50  2F9A               	decfsz	___awdiv@counter& (0+255),f,b
  6442  004F52  D7E1               	goto	l6107
  6443  004F54                     l6119:
  6444                           
  6445                           ; BSR set to: 0
  6446  004F54  0100               	movlb	0	; () banked
  6447  004F56  519B               	movf	___awdiv@sign& (0+255),w,b
  6448  004F58  0100               	movlb	0	; () banked
  6449  004F5A  B4D8               	btfsc	status,2,c
  6450  004F5C  D005               	goto	l6123
  6451                           
  6452                           ; BSR set to: 0
  6453  004F5E  0100               	movlb	0	; () banked
  6454  004F60  6D9C               	negf	___awdiv@quotient& (0+255),b
  6455  004F62  1F9D               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6456  004F64  B0D8               	btfsc	status,0,c
  6457  004F66  2B9D               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6458  004F68                     l6123:
  6459                           
  6460                           ; BSR set to: 0
  6461  004F68  C09C  F096         	movff	___awdiv@quotient,?___awdiv
  6462  004F6C  C09D  F097         	movff	___awdiv@quotient+1,?___awdiv+1
  6463  004F70  0012               	return	
  6464  004F72                     __end_of___awdiv:
  6465                           	opt stack 0
  6466                           tosu	equ	0xFFF
  6467                           tosh	equ	0xFFE
  6468                           tosl	equ	0xFFD
  6469                           pclath	equ	0xFFA
  6470                           tblptru	equ	0xFF8
  6471                           tblptrh	equ	0xFF7
  6472                           tblptrl	equ	0xFF6
  6473                           tablat	equ	0xFF5
  6474                           prodh	equ	0xFF4
  6475                           prodl	equ	0xFF3
  6476                           intcon	equ	0xFF2
  6477                           postinc0	equ	0xFEE
  6478                           wreg	equ	0xFE8
  6479                           postdec1	equ	0xFE5
  6480                           fsr1l	equ	0xFE1
  6481                           indf2	equ	0xFDF
  6482                           postinc2	equ	0xFDE
  6483                           postdec2	equ	0xFDD
  6484                           fsr2h	equ	0xFDA
  6485                           fsr2l	equ	0xFD9
  6486                           status	equ	0xFD8
  6487                           
  6488 ;; *************** function __tdiv_to_l_ *****************
  6489 ;; Defined at:
  6490 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdivl.c"
  6491 ;; Parameters:    Size  Location     Type
  6492 ;;  f1              3   48[BANK0 ] float 
  6493 ;;  f2              3   51[BANK0 ] float 
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;  quot            4   57[BANK0 ] unsigned long 
  6496 ;;  exp1            1   62[BANK0 ] unsigned char 
  6497 ;;  cntr            1   61[BANK0 ] unsigned char 
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  4   48[BANK0 ] unsigned long 
  6500 ;; Registers used:
  6501 ;;		wreg, status,2, status,0
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6507 ;;      Params:         0       6       0       0       0       0       0
  6508 ;;      Locals:         0       6       0       0       0       0       0
  6509 ;;      Temps:          0       3       0       0       0       0       0
  6510 ;;      Totals:         0      15       0       0       0       0       0
  6511 ;;Total ram usage:       15 bytes
  6512 ;; Hardware stack levels used:    1
  6513 ;; Hardware stack levels required when called:    7
  6514 ;; This function calls:
  6515 ;;		Nothing
  6516 ;; This function is called by:
  6517 ;;		__doprnt
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           	psect	text12
  6522  003E2A                     __ptext12:
  6523                           	opt stack 0
  6524  003E2A                     __tdiv_to_l_:
  6525                           	opt stack 21
  6526                           
  6527                           ; BSR set to: 0
  6528                           ;incstack = 0
  6529  003E2A  C092  F096         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  6530  003E2E  0100               	movlb	0	; () banked
  6531  003E30  6B97               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  6532  003E32  6B98               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  6533  003E34  0100               	movlb	0	; () banked
  6534  003E36  3591               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6535  003E38  0100               	movlb	0	; () banked
  6536  003E3A  3796               	rlcf	??__tdiv_to_l_& (0+255),f,b
  6537  003E3C  E301               	bnc	u5831
  6538  003E3E  8197               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  6539  003E40                     u5831:
  6540  003E40  0100               	movlb	0	; () banked
  6541  003E42  5196               	movf	??__tdiv_to_l_& (0+255),w,b
  6542  003E44  0100               	movlb	0	; () banked
  6543  003E46  6F9E               	movwf	__tdiv_to_l_@exp1& (0+255),b
  6544  003E48  0100               	movlb	0	; () banked
  6545  003E4A  519E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6546  003E4C  A4D8               	btfss	status,2,c
  6547  003E4E  D00A               	goto	l4505
  6548                           
  6549                           ; BSR set to: 0
  6550  003E50  0E00               	movlw	0
  6551  003E52  0100               	movlb	0	; () banked
  6552  003E54  6F90               	movwf	?__tdiv_to_l_& (0+255),b
  6553  003E56  0E00               	movlw	0
  6554  003E58  6F91               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6555  003E5A  0E00               	movlw	0
  6556  003E5C  6F92               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6557  003E5E  0E00               	movlw	0
  6558  003E60  6F93               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6559                           
  6560                           ; BSR set to: 0
  6561  003E62  0012               	return	
  6562  003E64                     l4505:
  6563                           
  6564                           ; BSR set to: 0
  6565  003E64  C095  F096         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  6566  003E68  0100               	movlb	0	; () banked
  6567  003E6A  6B97               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  6568  003E6C  6B98               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  6569  003E6E  0100               	movlb	0	; () banked
  6570  003E70  3594               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6571  003E72  0100               	movlb	0	; () banked
  6572  003E74  3796               	rlcf	??__tdiv_to_l_& (0+255),f,b
  6573  003E76  E301               	bnc	u5851
  6574  003E78  8197               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  6575  003E7A                     u5851:
  6576  003E7A  0100               	movlb	0	; () banked
  6577  003E7C  5196               	movf	??__tdiv_to_l_& (0+255),w,b
  6578  003E7E  0100               	movlb	0	; () banked
  6579  003E80  6F9D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6580  003E82  0100               	movlb	0	; () banked
  6581  003E84  519D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6582  003E86  A4D8               	btfss	status,2,c
  6583  003E88  D00A               	goto	l4511
  6584                           
  6585                           ; BSR set to: 0
  6586  003E8A  0E00               	movlw	0
  6587  003E8C  0100               	movlb	0	; () banked
  6588  003E8E  6F90               	movwf	?__tdiv_to_l_& (0+255),b
  6589  003E90  0E00               	movlw	0
  6590  003E92  6F91               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6591  003E94  0E00               	movlw	0
  6592  003E96  6F92               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6593  003E98  0E00               	movlw	0
  6594  003E9A  6F93               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6595                           
  6596                           ; BSR set to: 0
  6597  003E9C  0012               	return	
  6598  003E9E                     l4511:
  6599                           
  6600                           ; BSR set to: 0
  6601  003E9E  0100               	movlb	0	; () banked
  6602  003EA0  8F91               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  6603                           
  6604                           ; BSR set to: 0
  6605  003EA2  0EFF               	movlw	255
  6606  003EA4  0100               	movlb	0	; () banked
  6607  003EA6  1790               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  6608  003EA8  0EFF               	movlw	255
  6609  003EAA  0100               	movlb	0	; () banked
  6610  003EAC  1791               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6611  003EAE  0E00               	movlw	0
  6612  003EB0  0100               	movlb	0	; () banked
  6613  003EB2  1792               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6614  003EB4  0100               	movlb	0	; () banked
  6615  003EB6  8F94               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  6616                           
  6617                           ; BSR set to: 0
  6618  003EB8  0EFF               	movlw	255
  6619  003EBA  0100               	movlb	0	; () banked
  6620  003EBC  1793               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  6621  003EBE  0EFF               	movlw	255
  6622  003EC0  0100               	movlb	0	; () banked
  6623  003EC2  1794               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  6624  003EC4  0E00               	movlw	0
  6625  003EC6  0100               	movlb	0	; () banked
  6626  003EC8  1795               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  6627                           
  6628                           ; BSR set to: 0
  6629  003ECA  0E00               	movlw	0
  6630  003ECC  0100               	movlb	0	; () banked
  6631  003ECE  6F99               	movwf	__tdiv_to_l_@quot& (0+255),b
  6632  003ED0  0E00               	movlw	0
  6633  003ED2  6F9A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  6634  003ED4  0E00               	movlw	0
  6635  003ED6  6F9B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  6636  003ED8  0E00               	movlw	0
  6637  003EDA  6F9C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  6638                           
  6639                           ; BSR set to: 0
  6640  003EDC  0E7F               	movlw	127
  6641  003EDE  0100               	movlb	0	; () banked
  6642  003EE0  5F9E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6643                           
  6644                           ; BSR set to: 0
  6645  003EE2  0100               	movlb	0	; () banked
  6646  003EE4  519D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6647  003EE6  0F98               	addlw	152
  6648  003EE8  0100               	movlb	0	; () banked
  6649  003EEA  5F9E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6650                           
  6651                           ; BSR set to: 0
  6652  003EEC  0E18               	movlw	24
  6653  003EEE  0100               	movlb	0	; () banked
  6654  003EF0  6F9D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6655  003EF2                     l821:
  6656                           
  6657                           ; BSR set to: 0
  6658  003EF2  0100               	movlb	0	; () banked
  6659  003EF4  90D8               	bcf	status,0,c
  6660  003EF6  3799               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6661  003EF8  379A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6662  003EFA  379B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6663  003EFC  379C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6664                           
  6665                           ; BSR set to: 0
  6666  003EFE  0100               	movlb	0	; () banked
  6667  003F00  5193               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6668  003F02  0100               	movlb	0	; () banked
  6669  003F04  5D90               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  6670  003F06  0100               	movlb	0	; () banked
  6671  003F08  5194               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6672  003F0A  0100               	movlb	0	; () banked
  6673  003F0C  5991               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6674  003F0E  0100               	movlb	0	; () banked
  6675  003F10  5195               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6676  003F12  0100               	movlb	0	; () banked
  6677  003F14  5992               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  6678  003F16  A0D8               	btfss	status,0,c
  6679  003F18  D00E               	goto	l822
  6680                           
  6681                           ; BSR set to: 0
  6682  003F1A  0100               	movlb	0	; () banked
  6683  003F1C  5193               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6684  003F1E  0100               	movlb	0	; () banked
  6685  003F20  5F90               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  6686  003F22  0100               	movlb	0	; () banked
  6687  003F24  5194               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6688  003F26  0100               	movlb	0	; () banked
  6689  003F28  5B91               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6690  003F2A  0100               	movlb	0	; () banked
  6691  003F2C  5195               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6692  003F2E  0100               	movlb	0	; () banked
  6693  003F30  5B92               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6694                           
  6695                           ; BSR set to: 0
  6696  003F32  0100               	movlb	0	; () banked
  6697  003F34  8199               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  6698  003F36                     l822:
  6699                           
  6700                           ; BSR set to: 0
  6701  003F36  0100               	movlb	0	; () banked
  6702  003F38  90D8               	bcf	status,0,c
  6703  003F3A  3790               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  6704  003F3C  3791               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6705  003F3E  3792               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6706                           
  6707                           ; BSR set to: 0
  6708  003F40  0100               	movlb	0	; () banked
  6709  003F42  2F9D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  6710  003F44  D7D6               	goto	l821
  6711                           
  6712                           ; BSR set to: 0
  6713                           
  6714                           ; BSR set to: 0
  6715  003F46  0100               	movlb	0	; () banked
  6716  003F48  AF9E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  6717  003F4A  D01A               	goto	l4545
  6718                           
  6719                           ; BSR set to: 0
  6720  003F4C  0100               	movlb	0	; () banked
  6721  003F4E  519E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6722  003F50  0A80               	xorlw	128
  6723  003F52  0F97               	addlw	151
  6724  003F54  B0D8               	btfsc	status,0,c
  6725  003F56  D00A               	goto	l4541
  6726                           
  6727                           ; BSR set to: 0
  6728  003F58  0E00               	movlw	0
  6729  003F5A  0100               	movlb	0	; () banked
  6730  003F5C  6F90               	movwf	?__tdiv_to_l_& (0+255),b
  6731  003F5E  0E00               	movlw	0
  6732  003F60  6F91               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6733  003F62  0E00               	movlw	0
  6734  003F64  6F92               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6735  003F66  0E00               	movlw	0
  6736  003F68  6F93               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6737                           
  6738                           ; BSR set to: 0
  6739  003F6A  0012               	return	
  6740  003F6C                     l4541:
  6741                           
  6742                           ; BSR set to: 0
  6743  003F6C  0100               	movlb	0	; () banked
  6744  003F6E  90D8               	bcf	status,0,c
  6745  003F70  339C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6746  003F72  339B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6747  003F74  339A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6748  003F76  3399               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  6749                           
  6750                           ; BSR set to: 0
  6751  003F78  0100               	movlb	0	; () banked
  6752  003F7A  3F9E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  6753  003F7C  D7F7               	goto	l4541
  6754                           
  6755                           ; BSR set to: 0
  6756  003F7E  D01B               	goto	l828
  6757  003F80                     l4545:
  6758                           
  6759                           ; BSR set to: 0
  6760  003F80  0E17               	movlw	23
  6761  003F82  0100               	movlb	0	; () banked
  6762  003F84  659E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  6763  003F86  D012               	goto	l4553
  6764                           
  6765                           ; BSR set to: 0
  6766  003F88  0E00               	movlw	0
  6767  003F8A  0100               	movlb	0	; () banked
  6768  003F8C  6F90               	movwf	?__tdiv_to_l_& (0+255),b
  6769  003F8E  0E00               	movlw	0
  6770  003F90  6F91               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6771  003F92  0E00               	movlw	0
  6772  003F94  6F92               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6773  003F96  0E00               	movlw	0
  6774  003F98  6F93               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6775                           
  6776                           ; BSR set to: 0
  6777  003F9A  0012               	return	
  6778  003F9C                     l4551:
  6779                           
  6780                           ; BSR set to: 0
  6781  003F9C  0100               	movlb	0	; () banked
  6782  003F9E  90D8               	bcf	status,0,c
  6783  003FA0  3799               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6784  003FA2  379A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6785  003FA4  379B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6786  003FA6  379C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6787  003FA8  0100               	movlb	0	; () banked
  6788  003FAA  079E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  6789  003FAC                     l4553:
  6790                           
  6791                           ; BSR set to: 0
  6792  003FAC  0100               	movlb	0	; () banked
  6793  003FAE  519E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6794  003FB0  0100               	movlb	0	; () banked
  6795  003FB2  A4D8               	btfss	status,2,c
  6796  003FB4  D7F3               	goto	l4551
  6797  003FB6                     l828:
  6798                           
  6799                           ; BSR set to: 0
  6800  003FB6  C099  F090         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  6801  003FBA  C09A  F091         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  6802  003FBE  C09B  F092         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  6803  003FC2  C09C  F093         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  6804                           
  6805                           ; BSR set to: 0
  6806  003FC6  0012               	return		;funcret
  6807  003FC8                     __end_of__tdiv_to_l_:
  6808                           	opt stack 0
  6809                           tosu	equ	0xFFF
  6810                           tosh	equ	0xFFE
  6811                           tosl	equ	0xFFD
  6812                           pclath	equ	0xFFA
  6813                           tblptru	equ	0xFF8
  6814                           tblptrh	equ	0xFF7
  6815                           tblptrl	equ	0xFF6
  6816                           tablat	equ	0xFF5
  6817                           prodh	equ	0xFF4
  6818                           prodl	equ	0xFF3
  6819                           intcon	equ	0xFF2
  6820                           postinc0	equ	0xFEE
  6821                           wreg	equ	0xFE8
  6822                           postdec1	equ	0xFE5
  6823                           fsr1l	equ	0xFE1
  6824                           indf2	equ	0xFDF
  6825                           postinc2	equ	0xFDE
  6826                           postdec2	equ	0xFDD
  6827                           fsr2h	equ	0xFDA
  6828                           fsr2l	equ	0xFD9
  6829                           status	equ	0xFD8
  6830                           
  6831 ;; *************** function __div_to_l_ *****************
  6832 ;; Defined at:
  6833 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fldivl.c"
  6834 ;; Parameters:    Size  Location     Type
  6835 ;;  f1              3   48[BANK0 ] unsigned long 
  6836 ;;  f2              3   51[BANK0 ] unsigned long 
  6837 ;; Auto vars:     Size  Location     Type
  6838 ;;  quot            4   54[BANK0 ] unsigned long 
  6839 ;;  exp1            1   59[BANK0 ] unsigned char 
  6840 ;;  cntr            1   58[BANK0 ] unsigned char 
  6841 ;; Return value:  Size  Location     Type
  6842 ;;                  4   48[BANK0 ] unsigned long 
  6843 ;; Registers used:
  6844 ;;		wreg, status,2, status,0
  6845 ;; Tracked objects:
  6846 ;;		On entry : 0/0
  6847 ;;		On exit  : 0/0
  6848 ;;		Unchanged: 0/0
  6849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6850 ;;      Params:         0       6       0       0       0       0       0
  6851 ;;      Locals:         0       6       0       0       0       0       0
  6852 ;;      Temps:          0       0       0       0       0       0       0
  6853 ;;      Totals:         0      12       0       0       0       0       0
  6854 ;;Total ram usage:       12 bytes
  6855 ;; Hardware stack levels used:    1
  6856 ;; Hardware stack levels required when called:    7
  6857 ;; This function calls:
  6858 ;;		Nothing
  6859 ;; This function is called by:
  6860 ;;		__doprnt
  6861 ;; This function uses a non-reentrant model
  6862 ;;
  6863                           
  6864                           	psect	text13
  6865  003FC8                     __ptext13:
  6866                           	opt stack 0
  6867  003FC8                     __div_to_l_:
  6868                           	opt stack 21
  6869                           
  6870                           ; BSR set to: 0
  6871                           ;incstack = 0
  6872  003FC8  0100               	movlb	0	; () banked
  6873  003FCA  3592               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  6874  003FCC  3593               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  6875  003FCE  0100               	movlb	0	; () banked
  6876  003FD0  6F9B               	movwf	__div_to_l_@exp1& (0+255),b
  6877  003FD2  0100               	movlb	0	; () banked
  6878  003FD4  519B               	movf	__div_to_l_@exp1& (0+255),w,b
  6879  003FD6  A4D8               	btfss	status,2,c
  6880  003FD8  D00A               	goto	l4561
  6881                           
  6882                           ; BSR set to: 0
  6883  003FDA  0E00               	movlw	0
  6884  003FDC  0100               	movlb	0	; () banked
  6885  003FDE  6F90               	movwf	?__div_to_l_& (0+255),b
  6886  003FE0  0E00               	movlw	0
  6887  003FE2  6F91               	movwf	(?__div_to_l_+1)& (0+255),b
  6888  003FE4  0E00               	movlw	0
  6889  003FE6  6F92               	movwf	(?__div_to_l_+2)& (0+255),b
  6890  003FE8  0E00               	movlw	0
  6891  003FEA  6F93               	movwf	(?__div_to_l_+3)& (0+255),b
  6892                           
  6893                           ; BSR set to: 0
  6894  003FEC  0012               	return	
  6895  003FEE                     l4561:
  6896                           
  6897                           ; BSR set to: 0
  6898  003FEE  0100               	movlb	0	; () banked
  6899  003FF0  3595               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  6900  003FF2  3596               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  6901  003FF4  0100               	movlb	0	; () banked
  6902  003FF6  6F9A               	movwf	__div_to_l_@cntr& (0+255),b
  6903  003FF8  0100               	movlb	0	; () banked
  6904  003FFA  519A               	movf	__div_to_l_@cntr& (0+255),w,b
  6905  003FFC  A4D8               	btfss	status,2,c
  6906  003FFE  D00A               	goto	l4567
  6907                           
  6908                           ; BSR set to: 0
  6909  004000  0E00               	movlw	0
  6910  004002  0100               	movlb	0	; () banked
  6911  004004  6F90               	movwf	?__div_to_l_& (0+255),b
  6912  004006  0E00               	movlw	0
  6913  004008  6F91               	movwf	(?__div_to_l_+1)& (0+255),b
  6914  00400A  0E00               	movlw	0
  6915  00400C  6F92               	movwf	(?__div_to_l_+2)& (0+255),b
  6916  00400E  0E00               	movlw	0
  6917  004010  6F93               	movwf	(?__div_to_l_+3)& (0+255),b
  6918                           
  6919                           ; BSR set to: 0
  6920  004012  0012               	return	
  6921  004014                     l4567:
  6922                           
  6923                           ; BSR set to: 0
  6924  004014  0100               	movlb	0	; () banked
  6925  004016  8F92               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  6926                           
  6927                           ; BSR set to: 0
  6928  004018  0EFF               	movlw	255
  6929  00401A  0100               	movlb	0	; () banked
  6930  00401C  1790               	andwf	__div_to_l_@f1& (0+255),f,b
  6931  00401E  0EFF               	movlw	255
  6932  004020  1791               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  6933  004022  0EFF               	movlw	255
  6934  004024  1792               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  6935  004026  0E00               	movlw	0
  6936  004028  1793               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  6937                           
  6938                           ; BSR set to: 0
  6939  00402A  0100               	movlb	0	; () banked
  6940  00402C  8F95               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  6941  00402E  0EFF               	movlw	255
  6942  004030  0100               	movlb	0	; () banked
  6943  004032  1793               	andwf	__div_to_l_@f2& (0+255),f,b
  6944  004034  0EFF               	movlw	255
  6945  004036  1794               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  6946  004038  0EFF               	movlw	255
  6947  00403A  1795               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  6948  00403C  0E00               	movlw	0
  6949  00403E  1796               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  6950                           
  6951                           ; BSR set to: 0
  6952  004040  0E00               	movlw	0
  6953  004042  0100               	movlb	0	; () banked
  6954  004044  6F96               	movwf	__div_to_l_@quot& (0+255),b
  6955  004046  0E00               	movlw	0
  6956  004048  6F97               	movwf	(__div_to_l_@quot+1)& (0+255),b
  6957  00404A  0E00               	movlw	0
  6958  00404C  6F98               	movwf	(__div_to_l_@quot+2)& (0+255),b
  6959  00404E  0E00               	movlw	0
  6960  004050  6F99               	movwf	(__div_to_l_@quot+3)& (0+255),b
  6961                           
  6962                           ; BSR set to: 0
  6963  004052  0E7F               	movlw	127
  6964  004054  0100               	movlb	0	; () banked
  6965  004056  5F9B               	subwf	__div_to_l_@exp1& (0+255),f,b
  6966                           
  6967                           ; BSR set to: 0
  6968  004058  0100               	movlb	0	; () banked
  6969  00405A  519A               	movf	__div_to_l_@cntr& (0+255),w,b
  6970  00405C  0FA0               	addlw	160
  6971  00405E  0100               	movlb	0	; () banked
  6972  004060  5F9B               	subwf	__div_to_l_@exp1& (0+255),f,b
  6973                           
  6974                           ; BSR set to: 0
  6975  004062  0E20               	movlw	32
  6976  004064  0100               	movlb	0	; () banked
  6977  004066  6F9A               	movwf	__div_to_l_@cntr& (0+255),b
  6978  004068                     l4581:
  6979                           
  6980                           ; BSR set to: 0
  6981  004068  0100               	movlb	0	; () banked
  6982  00406A  90D8               	bcf	status,0,c
  6983  00406C  3796               	rlcf	__div_to_l_@quot& (0+255),f,b
  6984  00406E  3797               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  6985  004070  3798               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  6986  004072  3799               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  6987                           
  6988                           ; BSR set to: 0
  6989  004074  0100               	movlb	0	; () banked
  6990  004076  5193               	movf	__div_to_l_@f2& (0+255),w,b
  6991  004078  0100               	movlb	0	; () banked
  6992  00407A  5D90               	subwf	__div_to_l_@f1& (0+255),w,b
  6993  00407C  0100               	movlb	0	; () banked
  6994  00407E  5194               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6995  004080  0100               	movlb	0	; () banked
  6996  004082  5991               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  6997  004084  0100               	movlb	0	; () banked
  6998  004086  5195               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6999  004088  0100               	movlb	0	; () banked
  7000  00408A  5992               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  7001  00408C  0100               	movlb	0	; () banked
  7002  00408E  5196               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7003  004090  0100               	movlb	0	; () banked
  7004  004092  5993               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  7005  004094  A0D8               	btfss	status,0,c
  7006  004096  D012               	goto	l4589
  7007                           
  7008                           ; BSR set to: 0
  7009  004098  0100               	movlb	0	; () banked
  7010  00409A  5193               	movf	__div_to_l_@f2& (0+255),w,b
  7011  00409C  0100               	movlb	0	; () banked
  7012  00409E  5F90               	subwf	__div_to_l_@f1& (0+255),f,b
  7013  0040A0  0100               	movlb	0	; () banked
  7014  0040A2  5194               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7015  0040A4  0100               	movlb	0	; () banked
  7016  0040A6  5B91               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  7017  0040A8  0100               	movlb	0	; () banked
  7018  0040AA  5195               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7019  0040AC  0100               	movlb	0	; () banked
  7020  0040AE  5B92               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  7021  0040B0  0100               	movlb	0	; () banked
  7022  0040B2  5196               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7023  0040B4  0100               	movlb	0	; () banked
  7024  0040B6  5B93               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  7025                           
  7026                           ; BSR set to: 0
  7027  0040B8  0100               	movlb	0	; () banked
  7028  0040BA  8196               	bsf	__div_to_l_@quot& (0+255),0,b
  7029  0040BC                     l4589:
  7030                           
  7031                           ; BSR set to: 0
  7032  0040BC  0100               	movlb	0	; () banked
  7033  0040BE  90D8               	bcf	status,0,c
  7034  0040C0  3790               	rlcf	__div_to_l_@f1& (0+255),f,b
  7035  0040C2  3791               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  7036  0040C4  3792               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  7037  0040C6  3793               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  7038                           
  7039                           ; BSR set to: 0
  7040  0040C8  0100               	movlb	0	; () banked
  7041  0040CA  2F9A               	decfsz	__div_to_l_@cntr& (0+255),f,b
  7042  0040CC  D7CD               	goto	l4581
  7043                           
  7044                           ; BSR set to: 0
  7045                           
  7046                           ; BSR set to: 0
  7047  0040CE  0100               	movlb	0	; () banked
  7048  0040D0  AF9B               	btfss	__div_to_l_@exp1& (0+255),7,b
  7049  0040D2  D01A               	goto	l4605
  7050                           
  7051                           ; BSR set to: 0
  7052  0040D4  0100               	movlb	0	; () banked
  7053  0040D6  519B               	movf	__div_to_l_@exp1& (0+255),w,b
  7054  0040D8  0A80               	xorlw	128
  7055  0040DA  0F9F               	addlw	159
  7056  0040DC  B0D8               	btfsc	status,0,c
  7057  0040DE  D00A               	goto	l4601
  7058                           
  7059                           ; BSR set to: 0
  7060  0040E0  0E00               	movlw	0
  7061  0040E2  0100               	movlb	0	; () banked
  7062  0040E4  6F90               	movwf	?__div_to_l_& (0+255),b
  7063  0040E6  0E00               	movlw	0
  7064  0040E8  6F91               	movwf	(?__div_to_l_+1)& (0+255),b
  7065  0040EA  0E00               	movlw	0
  7066  0040EC  6F92               	movwf	(?__div_to_l_+2)& (0+255),b
  7067  0040EE  0E00               	movlw	0
  7068  0040F0  6F93               	movwf	(?__div_to_l_+3)& (0+255),b
  7069                           
  7070                           ; BSR set to: 0
  7071  0040F2  0012               	return	
  7072  0040F4                     l4601:
  7073                           
  7074                           ; BSR set to: 0
  7075  0040F4  0100               	movlb	0	; () banked
  7076  0040F6  90D8               	bcf	status,0,c
  7077  0040F8  3399               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  7078  0040FA  3398               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  7079  0040FC  3397               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  7080  0040FE  3396               	rrcf	__div_to_l_@quot& (0+255),f,b
  7081                           
  7082                           ; BSR set to: 0
  7083  004100  0100               	movlb	0	; () banked
  7084  004102  3F9B               	incfsz	__div_to_l_@exp1& (0+255),f,b
  7085  004104  D7F7               	goto	l4601
  7086                           
  7087                           ; BSR set to: 0
  7088  004106  D01B               	goto	l724
  7089  004108                     l4605:
  7090                           
  7091                           ; BSR set to: 0
  7092  004108  0E1F               	movlw	31
  7093  00410A  0100               	movlb	0	; () banked
  7094  00410C  659B               	cpfsgt	__div_to_l_@exp1& (0+255),b
  7095  00410E  D012               	goto	l4613
  7096                           
  7097                           ; BSR set to: 0
  7098  004110  0E00               	movlw	0
  7099  004112  0100               	movlb	0	; () banked
  7100  004114  6F90               	movwf	?__div_to_l_& (0+255),b
  7101  004116  0E00               	movlw	0
  7102  004118  6F91               	movwf	(?__div_to_l_+1)& (0+255),b
  7103  00411A  0E00               	movlw	0
  7104  00411C  6F92               	movwf	(?__div_to_l_+2)& (0+255),b
  7105  00411E  0E00               	movlw	0
  7106  004120  6F93               	movwf	(?__div_to_l_+3)& (0+255),b
  7107                           
  7108                           ; BSR set to: 0
  7109  004122  0012               	return	
  7110  004124                     l4611:
  7111                           
  7112                           ; BSR set to: 0
  7113  004124  0100               	movlb	0	; () banked
  7114  004126  90D8               	bcf	status,0,c
  7115  004128  3796               	rlcf	__div_to_l_@quot& (0+255),f,b
  7116  00412A  3797               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7117  00412C  3798               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7118  00412E  3799               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7119  004130  0100               	movlb	0	; () banked
  7120  004132  079B               	decf	__div_to_l_@exp1& (0+255),f,b
  7121  004134                     l4613:
  7122                           
  7123                           ; BSR set to: 0
  7124  004134  0100               	movlb	0	; () banked
  7125  004136  519B               	movf	__div_to_l_@exp1& (0+255),w,b
  7126  004138  0100               	movlb	0	; () banked
  7127  00413A  A4D8               	btfss	status,2,c
  7128  00413C  D7F3               	goto	l4611
  7129  00413E                     l724:
  7130                           
  7131                           ; BSR set to: 0
  7132  00413E  C096  F090         	movff	__div_to_l_@quot,?__div_to_l_
  7133  004142  C097  F091         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  7134  004146  C098  F092         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  7135  00414A  C099  F093         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  7136                           
  7137                           ; BSR set to: 0
  7138  00414E  0012               	return		;funcret
  7139  004150                     __end_of__div_to_l_:
  7140                           	opt stack 0
  7141                           tosu	equ	0xFFF
  7142                           tosh	equ	0xFFE
  7143                           tosl	equ	0xFFD
  7144                           pclath	equ	0xFFA
  7145                           tblptru	equ	0xFF8
  7146                           tblptrh	equ	0xFF7
  7147                           tblptrl	equ	0xFF6
  7148                           tablat	equ	0xFF5
  7149                           prodh	equ	0xFF4
  7150                           prodl	equ	0xFF3
  7151                           intcon	equ	0xFF2
  7152                           postinc0	equ	0xFEE
  7153                           wreg	equ	0xFE8
  7154                           postdec1	equ	0xFE5
  7155                           fsr1l	equ	0xFE1
  7156                           indf2	equ	0xFDF
  7157                           postinc2	equ	0xFDE
  7158                           postdec2	equ	0xFDD
  7159                           fsr2h	equ	0xFDA
  7160                           fsr2l	equ	0xFD9
  7161                           status	equ	0xFD8
  7162                           
  7163 ;; *************** function ___lltoft *****************
  7164 ;; Defined at:
  7165 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lltoft.c"
  7166 ;; Parameters:    Size  Location     Type
  7167 ;;  c               4   56[BANK0 ] unsigned long 
  7168 ;; Auto vars:     Size  Location     Type
  7169 ;;  exp             1   64[BANK0 ] unsigned char 
  7170 ;; Return value:  Size  Location     Type
  7171 ;;                  3   56[BANK0 ] float 
  7172 ;; Registers used:
  7173 ;;		wreg, status,2, status,0, cstack
  7174 ;; Tracked objects:
  7175 ;;		On entry : 0/0
  7176 ;;		On exit  : 0/0
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7179 ;;      Params:         0       4       0       0       0       0       0
  7180 ;;      Locals:         0       1       0       0       0       0       0
  7181 ;;      Temps:          0       4       0       0       0       0       0
  7182 ;;      Totals:         0       9       0       0       0       0       0
  7183 ;;Total ram usage:        9 bytes
  7184 ;; Hardware stack levels used:    1
  7185 ;; Hardware stack levels required when called:    8
  7186 ;; This function calls:
  7187 ;;		___ftpack
  7188 ;; This function is called by:
  7189 ;;		__doprnt
  7190 ;; This function uses a non-reentrant model
  7191 ;;
  7192                           
  7193                           	psect	text14
  7194  0053AE                     __ptext14:
  7195                           	opt stack 0
  7196  0053AE                     ___lltoft:
  7197                           	opt stack 20
  7198                           
  7199                           ; BSR set to: 0
  7200                           ;incstack = 0
  7201  0053AE  0E8E               	movlw	142
  7202  0053B0  0100               	movlb	0	; () banked
  7203  0053B2  6FA0               	movwf	___lltoft@exp& (0+255),b
  7204  0053B4  D008               	goto	l6281
  7205  0053B6                     l6279:
  7206                           
  7207                           ; BSR set to: 0
  7208  0053B6  0100               	movlb	0	; () banked
  7209  0053B8  90D8               	bcf	status,0,c
  7210  0053BA  339B               	rrcf	(___lltoft@c+3)& (0+255),f,b
  7211  0053BC  339A               	rrcf	(___lltoft@c+2)& (0+255),f,b
  7212  0053BE  3399               	rrcf	(___lltoft@c+1)& (0+255),f,b
  7213  0053C0  3398               	rrcf	___lltoft@c& (0+255),f,b
  7214  0053C2  0100               	movlb	0	; () banked
  7215  0053C4  2BA0               	incf	___lltoft@exp& (0+255),f,b
  7216  0053C6                     l6281:
  7217                           
  7218                           ; BSR set to: 0
  7219  0053C6  0E00               	movlw	0
  7220  0053C8  0100               	movlb	0	; () banked
  7221  0053CA  1598               	andwf	___lltoft@c& (0+255),w,b
  7222  0053CC  0100               	movlb	0	; () banked
  7223  0053CE  6F9C               	movwf	??___lltoft& (0+255),b
  7224  0053D0  0E00               	movlw	0
  7225  0053D2  0100               	movlb	0	; () banked
  7226  0053D4  1599               	andwf	(___lltoft@c+1)& (0+255),w,b
  7227  0053D6  0100               	movlb	0	; () banked
  7228  0053D8  6F9D               	movwf	(??___lltoft+1)& (0+255),b
  7229  0053DA  0E00               	movlw	0
  7230  0053DC  0100               	movlb	0	; () banked
  7231  0053DE  159A               	andwf	(___lltoft@c+2)& (0+255),w,b
  7232  0053E0  0100               	movlb	0	; () banked
  7233  0053E2  6F9E               	movwf	(??___lltoft+2)& (0+255),b
  7234  0053E4  0EFF               	movlw	255
  7235  0053E6  0100               	movlb	0	; () banked
  7236  0053E8  159B               	andwf	(___lltoft@c+3)& (0+255),w,b
  7237  0053EA  0100               	movlb	0	; () banked
  7238  0053EC  6F9F               	movwf	(??___lltoft+3)& (0+255),b
  7239  0053EE  0100               	movlb	0	; () banked
  7240  0053F0  519C               	movf	??___lltoft& (0+255),w,b
  7241  0053F2  0100               	movlb	0	; () banked
  7242  0053F4  119D               	iorwf	(??___lltoft+1)& (0+255),w,b
  7243  0053F6  0100               	movlb	0	; () banked
  7244  0053F8  119E               	iorwf	(??___lltoft+2)& (0+255),w,b
  7245  0053FA  0100               	movlb	0	; () banked
  7246  0053FC  119F               	iorwf	(??___lltoft+3)& (0+255),w,b
  7247  0053FE  A4D8               	btfss	status,2,c
  7248  005400  D7DA               	goto	l6279
  7249                           
  7250                           ; BSR set to: 0
  7251                           
  7252                           ; BSR set to: 0
  7253  005402  C098  F090         	movff	___lltoft@c,___ftpack@arg
  7254  005406  C099  F091         	movff	___lltoft@c+1,___ftpack@arg+1
  7255  00540A  C09A  F092         	movff	___lltoft@c+2,___ftpack@arg+2
  7256  00540E  C0A0  F093         	movff	___lltoft@exp,___ftpack@exp
  7257  005412  0E00               	movlw	0
  7258  005414  0100               	movlb	0	; () banked
  7259  005416  6F94               	movwf	___ftpack@sign& (0+255),b
  7260  005418  EC09  F025         	call	___ftpack	;wreg free
  7261  00541C  C090  F098         	movff	?___ftpack,?___lltoft
  7262  005420  C091  F099         	movff	?___ftpack+1,?___lltoft+1
  7263  005424  C092  F09A         	movff	?___ftpack+2,?___lltoft+2
  7264  005428  0012               	return	
  7265  00542A                     __end_of___lltoft:
  7266                           	opt stack 0
  7267                           tosu	equ	0xFFF
  7268                           tosh	equ	0xFFE
  7269                           tosl	equ	0xFFD
  7270                           pclath	equ	0xFFA
  7271                           tblptru	equ	0xFF8
  7272                           tblptrh	equ	0xFF7
  7273                           tblptrl	equ	0xFF6
  7274                           tablat	equ	0xFF5
  7275                           prodh	equ	0xFF4
  7276                           prodl	equ	0xFF3
  7277                           intcon	equ	0xFF2
  7278                           postinc0	equ	0xFEE
  7279                           wreg	equ	0xFE8
  7280                           postdec1	equ	0xFE5
  7281                           fsr1l	equ	0xFE1
  7282                           indf2	equ	0xFDF
  7283                           postinc2	equ	0xFDE
  7284                           postdec2	equ	0xFDD
  7285                           fsr2h	equ	0xFDA
  7286                           fsr2l	equ	0xFD9
  7287                           status	equ	0xFD8
  7288                           
  7289 ;; *************** function ___llmod *****************
  7290 ;; Defined at:
  7291 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
  7292 ;; Parameters:    Size  Location     Type
  7293 ;;  dividend        4   61[BANK0 ] unsigned long 
  7294 ;;  divisor         4   65[BANK0 ] unsigned long 
  7295 ;; Auto vars:     Size  Location     Type
  7296 ;;  counter         1   69[BANK0 ] unsigned char 
  7297 ;; Return value:  Size  Location     Type
  7298 ;;                  4   61[BANK0 ] unsigned long 
  7299 ;; Registers used:
  7300 ;;		wreg, status,2, status,0
  7301 ;; Tracked objects:
  7302 ;;		On entry : 0/0
  7303 ;;		On exit  : 0/0
  7304 ;;		Unchanged: 0/0
  7305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7306 ;;      Params:         0       8       0       0       0       0       0
  7307 ;;      Locals:         0       1       0       0       0       0       0
  7308 ;;      Temps:          0       0       0       0       0       0       0
  7309 ;;      Totals:         0       9       0       0       0       0       0
  7310 ;;Total ram usage:        9 bytes
  7311 ;; Hardware stack levels used:    1
  7312 ;; Hardware stack levels required when called:    7
  7313 ;; This function calls:
  7314 ;;		Nothing
  7315 ;; This function is called by:
  7316 ;;		__doprnt
  7317 ;; This function uses a non-reentrant model
  7318 ;;
  7319                           
  7320                           	psect	text15
  7321  00517E                     __ptext15:
  7322                           	opt stack 0
  7323  00517E                     ___llmod:
  7324                           	opt stack 21
  7325                           
  7326                           ;incstack = 0
  7327  00517E  0100               	movlb	0	; () banked
  7328  005180  51A1               	movf	___llmod@divisor& (0+255),w,b
  7329  005182  0100               	movlb	0	; () banked
  7330  005184  11A2               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  7331  005186  0100               	movlb	0	; () banked
  7332  005188  11A3               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  7333  00518A  0100               	movlb	0	; () banked
  7334  00518C  11A4               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  7335  00518E  B4D8               	btfsc	status,2,c
  7336  005190  D03A               	goto	l935
  7337                           
  7338                           ; BSR set to: 0
  7339  005192  0E01               	movlw	1
  7340  005194  0100               	movlb	0	; () banked
  7341  005196  6FA5               	movwf	___llmod@counter& (0+255),b
  7342  005198  D008               	goto	l4719
  7343  00519A                     l4717:
  7344                           
  7345                           ; BSR set to: 0
  7346  00519A  0100               	movlb	0	; () banked
  7347  00519C  90D8               	bcf	status,0,c
  7348  00519E  37A1               	rlcf	___llmod@divisor& (0+255),f,b
  7349  0051A0  37A2               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  7350  0051A2  37A3               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  7351  0051A4  37A4               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  7352  0051A6  0100               	movlb	0	; () banked
  7353  0051A8  2BA5               	incf	___llmod@counter& (0+255),f,b
  7354  0051AA                     l4719:
  7355                           
  7356                           ; BSR set to: 0
  7357  0051AA  0100               	movlb	0	; () banked
  7358  0051AC  AFA4               	btfss	(___llmod@divisor+3)& (0+255),7,b
  7359  0051AE  D7F5               	goto	l4717
  7360  0051B0                     l4721:
  7361                           
  7362                           ; BSR set to: 0
  7363  0051B0  0100               	movlb	0	; () banked
  7364  0051B2  51A1               	movf	___llmod@divisor& (0+255),w,b
  7365  0051B4  0100               	movlb	0	; () banked
  7366  0051B6  5D9D               	subwf	___llmod@dividend& (0+255),w,b
  7367  0051B8  0100               	movlb	0	; () banked
  7368  0051BA  51A2               	movf	(___llmod@divisor+1)& (0+255),w,b
  7369  0051BC  0100               	movlb	0	; () banked
  7370  0051BE  599E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  7371  0051C0  0100               	movlb	0	; () banked
  7372  0051C2  51A3               	movf	(___llmod@divisor+2)& (0+255),w,b
  7373  0051C4  0100               	movlb	0	; () banked
  7374  0051C6  599F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  7375  0051C8  0100               	movlb	0	; () banked
  7376  0051CA  51A4               	movf	(___llmod@divisor+3)& (0+255),w,b
  7377  0051CC  0100               	movlb	0	; () banked
  7378  0051CE  59A0               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  7379  0051D0  A0D8               	btfss	status,0,c
  7380  0051D2  D010               	goto	l4725
  7381                           
  7382                           ; BSR set to: 0
  7383  0051D4  0100               	movlb	0	; () banked
  7384  0051D6  51A1               	movf	___llmod@divisor& (0+255),w,b
  7385  0051D8  0100               	movlb	0	; () banked
  7386  0051DA  5F9D               	subwf	___llmod@dividend& (0+255),f,b
  7387  0051DC  0100               	movlb	0	; () banked
  7388  0051DE  51A2               	movf	(___llmod@divisor+1)& (0+255),w,b
  7389  0051E0  0100               	movlb	0	; () banked
  7390  0051E2  5B9E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  7391  0051E4  0100               	movlb	0	; () banked
  7392  0051E6  51A3               	movf	(___llmod@divisor+2)& (0+255),w,b
  7393  0051E8  0100               	movlb	0	; () banked
  7394  0051EA  5B9F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  7395  0051EC  0100               	movlb	0	; () banked
  7396  0051EE  51A4               	movf	(___llmod@divisor+3)& (0+255),w,b
  7397  0051F0  0100               	movlb	0	; () banked
  7398  0051F2  5BA0               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  7399  0051F4                     l4725:
  7400                           
  7401                           ; BSR set to: 0
  7402  0051F4  0100               	movlb	0	; () banked
  7403  0051F6  90D8               	bcf	status,0,c
  7404  0051F8  33A4               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  7405  0051FA  33A3               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  7406  0051FC  33A2               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  7407  0051FE  33A1               	rrcf	___llmod@divisor& (0+255),f,b
  7408                           
  7409                           ; BSR set to: 0
  7410  005200  0100               	movlb	0	; () banked
  7411  005202  2FA5               	decfsz	___llmod@counter& (0+255),f,b
  7412  005204  D7D5               	goto	l4721
  7413  005206                     l935:
  7414                           
  7415                           ; BSR set to: 0
  7416  005206  C09D  F09D         	movff	___llmod@dividend,?___llmod
  7417  00520A  C09E  F09E         	movff	___llmod@dividend+1,?___llmod+1
  7418  00520E  C09F  F09F         	movff	___llmod@dividend+2,?___llmod+2
  7419  005212  C0A0  F0A0         	movff	___llmod@dividend+3,?___llmod+3
  7420                           
  7421                           ; BSR set to: 0
  7422  005216  0012               	return		;funcret
  7423  005218                     __end_of___llmod:
  7424                           	opt stack 0
  7425                           tosu	equ	0xFFF
  7426                           tosh	equ	0xFFE
  7427                           tosl	equ	0xFFD
  7428                           pclath	equ	0xFFA
  7429                           tblptru	equ	0xFF8
  7430                           tblptrh	equ	0xFF7
  7431                           tblptrl	equ	0xFF6
  7432                           tablat	equ	0xFF5
  7433                           prodh	equ	0xFF4
  7434                           prodl	equ	0xFF3
  7435                           intcon	equ	0xFF2
  7436                           postinc0	equ	0xFEE
  7437                           wreg	equ	0xFE8
  7438                           postdec1	equ	0xFE5
  7439                           fsr1l	equ	0xFE1
  7440                           indf2	equ	0xFDF
  7441                           postinc2	equ	0xFDE
  7442                           postdec2	equ	0xFDD
  7443                           fsr2h	equ	0xFDA
  7444                           fsr2l	equ	0xFD9
  7445                           status	equ	0xFD8
  7446                           
  7447 ;; *************** function ___lldiv *****************
  7448 ;; Defined at:
  7449 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
  7450 ;; Parameters:    Size  Location     Type
  7451 ;;  dividend        4   48[BANK0 ] unsigned long 
  7452 ;;  divisor         4   52[BANK0 ] unsigned long 
  7453 ;; Auto vars:     Size  Location     Type
  7454 ;;  quotient        4   56[BANK0 ] unsigned long 
  7455 ;;  counter         1   60[BANK0 ] unsigned char 
  7456 ;; Return value:  Size  Location     Type
  7457 ;;                  4   48[BANK0 ] unsigned long 
  7458 ;; Registers used:
  7459 ;;		wreg, status,2, status,0
  7460 ;; Tracked objects:
  7461 ;;		On entry : 0/0
  7462 ;;		On exit  : 0/0
  7463 ;;		Unchanged: 0/0
  7464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7465 ;;      Params:         0       8       0       0       0       0       0
  7466 ;;      Locals:         0       5       0       0       0       0       0
  7467 ;;      Temps:          0       0       0       0       0       0       0
  7468 ;;      Totals:         0      13       0       0       0       0       0
  7469 ;;Total ram usage:       13 bytes
  7470 ;; Hardware stack levels used:    1
  7471 ;; Hardware stack levels required when called:    7
  7472 ;; This function calls:
  7473 ;;		Nothing
  7474 ;; This function is called by:
  7475 ;;		__doprnt
  7476 ;; This function uses a non-reentrant model
  7477 ;;
  7478                           
  7479                           	psect	text16
  7480  004F72                     __ptext16:
  7481                           	opt stack 0
  7482  004F72                     ___lldiv:
  7483                           	opt stack 21
  7484                           
  7485                           ; BSR set to: 0
  7486                           ;incstack = 0
  7487  004F72  0E00               	movlw	0
  7488  004F74  0100               	movlb	0	; () banked
  7489  004F76  6F98               	movwf	___lldiv@quotient& (0+255),b
  7490  004F78  0E00               	movlw	0
  7491  004F7A  6F99               	movwf	(___lldiv@quotient+1)& (0+255),b
  7492  004F7C  0E00               	movlw	0
  7493  004F7E  6F9A               	movwf	(___lldiv@quotient+2)& (0+255),b
  7494  004F80  0E00               	movlw	0
  7495  004F82  6F9B               	movwf	(___lldiv@quotient+3)& (0+255),b
  7496                           
  7497                           ; BSR set to: 0
  7498  004F84  0100               	movlb	0	; () banked
  7499  004F86  5194               	movf	___lldiv@divisor& (0+255),w,b
  7500  004F88  0100               	movlb	0	; () banked
  7501  004F8A  1195               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7502  004F8C  0100               	movlb	0	; () banked
  7503  004F8E  1196               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7504  004F90  0100               	movlb	0	; () banked
  7505  004F92  1197               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  7506  004F94  B4D8               	btfsc	status,2,c
  7507  004F96  D042               	goto	l925
  7508                           
  7509                           ; BSR set to: 0
  7510  004F98  0E01               	movlw	1
  7511  004F9A  0100               	movlb	0	; () banked
  7512  004F9C  6F9C               	movwf	___lldiv@counter& (0+255),b
  7513  004F9E  D008               	goto	l4699
  7514  004FA0                     l4697:
  7515                           
  7516                           ; BSR set to: 0
  7517  004FA0  0100               	movlb	0	; () banked
  7518  004FA2  90D8               	bcf	status,0,c
  7519  004FA4  3794               	rlcf	___lldiv@divisor& (0+255),f,b
  7520  004FA6  3795               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7521  004FA8  3796               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7522  004FAA  3797               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7523  004FAC  0100               	movlb	0	; () banked
  7524  004FAE  2B9C               	incf	___lldiv@counter& (0+255),f,b
  7525  004FB0                     l4699:
  7526                           
  7527                           ; BSR set to: 0
  7528  004FB0  0100               	movlb	0	; () banked
  7529  004FB2  AF97               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  7530  004FB4  D7F5               	goto	l4697
  7531  004FB6                     l4701:
  7532                           
  7533                           ; BSR set to: 0
  7534  004FB6  0100               	movlb	0	; () banked
  7535  004FB8  90D8               	bcf	status,0,c
  7536  004FBA  3798               	rlcf	___lldiv@quotient& (0+255),f,b
  7537  004FBC  3799               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  7538  004FBE  379A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  7539  004FC0  379B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  7540                           
  7541                           ; BSR set to: 0
  7542  004FC2  0100               	movlb	0	; () banked
  7543  004FC4  5194               	movf	___lldiv@divisor& (0+255),w,b
  7544  004FC6  0100               	movlb	0	; () banked
  7545  004FC8  5D90               	subwf	___lldiv@dividend& (0+255),w,b
  7546  004FCA  0100               	movlb	0	; () banked
  7547  004FCC  5195               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7548  004FCE  0100               	movlb	0	; () banked
  7549  004FD0  5991               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7550  004FD2  0100               	movlb	0	; () banked
  7551  004FD4  5196               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7552  004FD6  0100               	movlb	0	; () banked
  7553  004FD8  5992               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7554  004FDA  0100               	movlb	0	; () banked
  7555  004FDC  5197               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7556  004FDE  0100               	movlb	0	; () banked
  7557  004FE0  5993               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7558  004FE2  A0D8               	btfss	status,0,c
  7559  004FE4  D012               	goto	l4709
  7560                           
  7561                           ; BSR set to: 0
  7562  004FE6  0100               	movlb	0	; () banked
  7563  004FE8  5194               	movf	___lldiv@divisor& (0+255),w,b
  7564  004FEA  0100               	movlb	0	; () banked
  7565  004FEC  5F90               	subwf	___lldiv@dividend& (0+255),f,b
  7566  004FEE  0100               	movlb	0	; () banked
  7567  004FF0  5195               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7568  004FF2  0100               	movlb	0	; () banked
  7569  004FF4  5B91               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7570  004FF6  0100               	movlb	0	; () banked
  7571  004FF8  5196               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7572  004FFA  0100               	movlb	0	; () banked
  7573  004FFC  5B92               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7574  004FFE  0100               	movlb	0	; () banked
  7575  005000  5197               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7576  005002  0100               	movlb	0	; () banked
  7577  005004  5B93               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7578                           
  7579                           ; BSR set to: 0
  7580  005006  0100               	movlb	0	; () banked
  7581  005008  8198               	bsf	___lldiv@quotient& (0+255),0,b
  7582  00500A                     l4709:
  7583                           
  7584                           ; BSR set to: 0
  7585  00500A  0100               	movlb	0	; () banked
  7586  00500C  90D8               	bcf	status,0,c
  7587  00500E  3397               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7588  005010  3396               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7589  005012  3395               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7590  005014  3394               	rrcf	___lldiv@divisor& (0+255),f,b
  7591                           
  7592                           ; BSR set to: 0
  7593  005016  0100               	movlb	0	; () banked
  7594  005018  2F9C               	decfsz	___lldiv@counter& (0+255),f,b
  7595  00501A  D7CD               	goto	l4701
  7596  00501C                     l925:
  7597                           
  7598                           ; BSR set to: 0
  7599  00501C  C098  F090         	movff	___lldiv@quotient,?___lldiv
  7600  005020  C099  F091         	movff	___lldiv@quotient+1,?___lldiv+1
  7601  005024  C09A  F092         	movff	___lldiv@quotient+2,?___lldiv+2
  7602  005028  C09B  F093         	movff	___lldiv@quotient+3,?___lldiv+3
  7603                           
  7604                           ; BSR set to: 0
  7605  00502C  0012               	return		;funcret
  7606  00502E                     __end_of___lldiv:
  7607                           	opt stack 0
  7608                           tosu	equ	0xFFF
  7609                           tosh	equ	0xFFE
  7610                           tosl	equ	0xFFD
  7611                           pclath	equ	0xFFA
  7612                           tblptru	equ	0xFF8
  7613                           tblptrh	equ	0xFF7
  7614                           tblptrl	equ	0xFF6
  7615                           tablat	equ	0xFF5
  7616                           prodh	equ	0xFF4
  7617                           prodl	equ	0xFF3
  7618                           intcon	equ	0xFF2
  7619                           postinc0	equ	0xFEE
  7620                           wreg	equ	0xFE8
  7621                           postdec1	equ	0xFE5
  7622                           fsr1l	equ	0xFE1
  7623                           indf2	equ	0xFDF
  7624                           postinc2	equ	0xFDE
  7625                           postdec2	equ	0xFDD
  7626                           fsr2h	equ	0xFDA
  7627                           fsr2l	equ	0xFD9
  7628                           status	equ	0xFD8
  7629                           
  7630 ;; *************** function ___fttol *****************
  7631 ;; Defined at:
  7632 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  7633 ;; Parameters:    Size  Location     Type
  7634 ;;  f1              3    4[BANK1 ] float 
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;  lval            4   14[BANK1 ] unsigned long 
  7637 ;;  exp1            1   18[BANK1 ] unsigned char 
  7638 ;;  sign1           1   13[BANK1 ] unsigned char 
  7639 ;; Return value:  Size  Location     Type
  7640 ;;                  4    4[BANK1 ] long 
  7641 ;; Registers used:
  7642 ;;		wreg, status,2, status,0
  7643 ;; Tracked objects:
  7644 ;;		On entry : 0/0
  7645 ;;		On exit  : 0/0
  7646 ;;		Unchanged: 0/0
  7647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7648 ;;      Params:         0       0       4       0       0       0       0
  7649 ;;      Locals:         0       0       6       0       0       0       0
  7650 ;;      Temps:          0       0       5       0       0       0       0
  7651 ;;      Totals:         0       0      15       0       0       0       0
  7652 ;;Total ram usage:       15 bytes
  7653 ;; Hardware stack levels used:    1
  7654 ;; Hardware stack levels required when called:    7
  7655 ;; This function calls:
  7656 ;;		Nothing
  7657 ;; This function is called by:
  7658 ;;		__doprnt
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662                           	psect	text17
  7663  004560                     __ptext17:
  7664                           	opt stack 0
  7665  004560                     ___fttol:
  7666                           	opt stack 21
  7667                           
  7668                           ; BSR set to: 0
  7669                           ;incstack = 0
  7670  004560  C106  F108         	movff	___fttol@f1+2,??___fttol
  7671  004564  0101               	movlb	1	; () banked
  7672  004566  6B09               	clrf	(??___fttol+1)& (0+255),b
  7673  004568  6B0A               	clrf	(??___fttol+2)& (0+255),b
  7674  00456A  0101               	movlb	1	; () banked
  7675  00456C  3505               	rlcf	(___fttol@f1+1)& (0+255),w,b
  7676  00456E  0101               	movlb	1	; () banked
  7677  004570  3708               	rlcf	??___fttol& (0+255),f,b
  7678  004572  E301               	bnc	u8881
  7679  004574  8109               	bsf	(??___fttol+1)& (0+255),0,b
  7680  004576                     u8881:
  7681  004576  0101               	movlb	1	; () banked
  7682  004578  5108               	movf	??___fttol& (0+255),w,b
  7683  00457A  0101               	movlb	1	; () banked
  7684  00457C  6F12               	movwf	___fttol@exp1& (0+255),b
  7685  00457E  0101               	movlb	1	; () banked
  7686  004580  5112               	movf	___fttol@exp1& (0+255),w,b
  7687  004582  A4D8               	btfss	status,2,c
  7688  004584  D00A               	goto	l6237
  7689                           
  7690                           ; BSR set to: 1
  7691  004586  0E00               	movlw	0
  7692  004588  0101               	movlb	1	; () banked
  7693  00458A  6F04               	movwf	?___fttol& (0+255),b
  7694  00458C  0E00               	movlw	0
  7695  00458E  6F05               	movwf	(?___fttol+1)& (0+255),b
  7696  004590  0E00               	movlw	0
  7697  004592  6F06               	movwf	(?___fttol+2)& (0+255),b
  7698  004594  0E00               	movlw	0
  7699  004596  6F07               	movwf	(?___fttol+3)& (0+255),b
  7700                           
  7701                           ; BSR set to: 1
  7702  004598  0012               	return	
  7703  00459A                     l6237:
  7704                           
  7705                           ; BSR set to: 1
  7706  00459A  0E17               	movlw	23
  7707  00459C  0101               	movlb	1	; () banked
  7708  00459E  6F08               	movwf	??___fttol& (0+255),b
  7709  0045A0  C104  F109         	movff	___fttol@f1,??___fttol+1
  7710  0045A4  C105  F10A         	movff	___fttol@f1+1,??___fttol+2
  7711  0045A8  C106  F10B         	movff	___fttol@f1+2,??___fttol+3
  7712  0045AC  0101               	movlb	1	; () banked
  7713  0045AE  2908               	incf	??___fttol& (0+255),w,b
  7714  0045B0  0101               	movlb	1	; () banked
  7715  0045B2  6F0C               	movwf	(??___fttol+4)& (0+255),b
  7716  0045B4  D005               	goto	u8900
  7717  0045B6                     u8905:
  7718  0045B6  0101               	movlb	1	; () banked
  7719  0045B8  90D8               	bcf	status,0,c
  7720  0045BA  330B               	rrcf	(??___fttol+3)& (0+255),f,b
  7721  0045BC  330A               	rrcf	(??___fttol+2)& (0+255),f,b
  7722  0045BE  3309               	rrcf	(??___fttol+1)& (0+255),f,b
  7723  0045C0                     u8900:
  7724  0045C0  0101               	movlb	1	; () banked
  7725  0045C2  2F0C               	decfsz	(??___fttol+4)& (0+255),f,b
  7726  0045C4  D7F8               	goto	u8905
  7727  0045C6  0101               	movlb	1	; () banked
  7728  0045C8  5109               	movf	(??___fttol+1)& (0+255),w,b
  7729  0045CA  0101               	movlb	1	; () banked
  7730  0045CC  6F0D               	movwf	___fttol@sign1& (0+255),b
  7731                           
  7732                           ; BSR set to: 1
  7733  0045CE  0101               	movlb	1	; () banked
  7734  0045D0  8F05               	bsf	(___fttol@f1+1)& (0+255),7,b
  7735                           
  7736                           ; BSR set to: 1
  7737  0045D2  0EFF               	movlw	255
  7738  0045D4  0101               	movlb	1	; () banked
  7739  0045D6  1704               	andwf	___fttol@f1& (0+255),f,b
  7740  0045D8  0EFF               	movlw	255
  7741  0045DA  0101               	movlb	1	; () banked
  7742  0045DC  1705               	andwf	(___fttol@f1+1)& (0+255),f,b
  7743  0045DE  0E00               	movlw	0
  7744  0045E0  0101               	movlb	1	; () banked
  7745  0045E2  1706               	andwf	(___fttol@f1+2)& (0+255),f,b
  7746                           
  7747                           ; BSR set to: 1
  7748  0045E4  0101               	movlb	1	; () banked
  7749  0045E6  5104               	movf	___fttol@f1& (0+255),w,b
  7750  0045E8  0101               	movlb	1	; () banked
  7751  0045EA  6F0E               	movwf	___fttol@lval& (0+255),b
  7752  0045EC  0101               	movlb	1	; () banked
  7753  0045EE  5105               	movf	(___fttol@f1+1)& (0+255),w,b
  7754  0045F0  0101               	movlb	1	; () banked
  7755  0045F2  6F0F               	movwf	(___fttol@lval+1)& (0+255),b
  7756  0045F4  0101               	movlb	1	; () banked
  7757  0045F6  5106               	movf	(___fttol@f1+2)& (0+255),w,b
  7758  0045F8  0101               	movlb	1	; () banked
  7759  0045FA  6F10               	movwf	(___fttol@lval+2)& (0+255),b
  7760  0045FC  0101               	movlb	1	; () banked
  7761  0045FE  6B11               	clrf	(___fttol@lval+3)& (0+255),b
  7762                           
  7763                           ; BSR set to: 1
  7764  004600  0E8E               	movlw	142
  7765  004602  0101               	movlb	1	; () banked
  7766  004604  5F12               	subwf	___fttol@exp1& (0+255),f,b
  7767                           
  7768                           ; BSR set to: 1
  7769  004606  0101               	movlb	1	; () banked
  7770  004608  AF12               	btfss	___fttol@exp1& (0+255),7,b
  7771  00460A  D01A               	goto	l6259
  7772                           
  7773                           ; BSR set to: 1
  7774  00460C  0101               	movlb	1	; () banked
  7775  00460E  5112               	movf	___fttol@exp1& (0+255),w,b
  7776  004610  0A80               	xorlw	128
  7777  004612  0F8F               	addlw	143
  7778  004614  B0D8               	btfsc	status,0,c
  7779  004616  D00A               	goto	l6255
  7780                           
  7781                           ; BSR set to: 1
  7782  004618  0E00               	movlw	0
  7783  00461A  0101               	movlb	1	; () banked
  7784  00461C  6F04               	movwf	?___fttol& (0+255),b
  7785  00461E  0E00               	movlw	0
  7786  004620  6F05               	movwf	(?___fttol+1)& (0+255),b
  7787  004622  0E00               	movlw	0
  7788  004624  6F06               	movwf	(?___fttol+2)& (0+255),b
  7789  004626  0E00               	movlw	0
  7790  004628  6F07               	movwf	(?___fttol+3)& (0+255),b
  7791                           
  7792                           ; BSR set to: 1
  7793  00462A  0012               	return	
  7794  00462C                     l6255:
  7795                           
  7796                           ; BSR set to: 1
  7797  00462C  0101               	movlb	1	; () banked
  7798  00462E  90D8               	bcf	status,0,c
  7799  004630  3311               	rrcf	(___fttol@lval+3)& (0+255),f,b
  7800  004632  3310               	rrcf	(___fttol@lval+2)& (0+255),f,b
  7801  004634  330F               	rrcf	(___fttol@lval+1)& (0+255),f,b
  7802  004636  330E               	rrcf	___fttol@lval& (0+255),f,b
  7803                           
  7804                           ; BSR set to: 1
  7805  004638  0101               	movlb	1	; () banked
  7806  00463A  3F12               	incfsz	___fttol@exp1& (0+255),f,b
  7807  00463C  D7F7               	goto	l6255
  7808                           
  7809                           ; BSR set to: 1
  7810  00463E  D01B               	goto	l6269
  7811  004640                     l6259:
  7812                           
  7813                           ; BSR set to: 1
  7814  004640  0E17               	movlw	23
  7815  004642  0101               	movlb	1	; () banked
  7816  004644  6512               	cpfsgt	___fttol@exp1& (0+255),b
  7817  004646  D012               	goto	l6267
  7818                           
  7819                           ; BSR set to: 1
  7820  004648  0E00               	movlw	0
  7821  00464A  0101               	movlb	1	; () banked
  7822  00464C  6F04               	movwf	?___fttol& (0+255),b
  7823  00464E  0E00               	movlw	0
  7824  004650  6F05               	movwf	(?___fttol+1)& (0+255),b
  7825  004652  0E00               	movlw	0
  7826  004654  6F06               	movwf	(?___fttol+2)& (0+255),b
  7827  004656  0E00               	movlw	0
  7828  004658  6F07               	movwf	(?___fttol+3)& (0+255),b
  7829                           
  7830                           ; BSR set to: 1
  7831  00465A  0012               	return	
  7832  00465C                     l6265:
  7833                           
  7834                           ; BSR set to: 1
  7835  00465C  0101               	movlb	1	; () banked
  7836  00465E  90D8               	bcf	status,0,c
  7837  004660  370E               	rlcf	___fttol@lval& (0+255),f,b
  7838  004662  370F               	rlcf	(___fttol@lval+1)& (0+255),f,b
  7839  004664  3710               	rlcf	(___fttol@lval+2)& (0+255),f,b
  7840  004666  3711               	rlcf	(___fttol@lval+3)& (0+255),f,b
  7841  004668  0101               	movlb	1	; () banked
  7842  00466A  0712               	decf	___fttol@exp1& (0+255),f,b
  7843  00466C                     l6267:
  7844                           
  7845                           ; BSR set to: 1
  7846  00466C  0101               	movlb	1	; () banked
  7847  00466E  5112               	movf	___fttol@exp1& (0+255),w,b
  7848  004670  0101               	movlb	1	; () banked
  7849  004672  A4D8               	btfss	status,2,c
  7850  004674  D7F3               	goto	l6265
  7851  004676                     l6269:
  7852                           
  7853                           ; BSR set to: 1
  7854  004676  0101               	movlb	1	; () banked
  7855  004678  510D               	movf	___fttol@sign1& (0+255),w,b
  7856  00467A  0101               	movlb	1	; () banked
  7857  00467C  B4D8               	btfsc	status,2,c
  7858  00467E  D009               	goto	l6273
  7859                           
  7860                           ; BSR set to: 1
  7861  004680  0101               	movlb	1	; () banked
  7862  004682  1F11               	comf	(___fttol@lval+3)& (0+255),f,b
  7863  004684  1F10               	comf	(___fttol@lval+2)& (0+255),f,b
  7864  004686  1F0F               	comf	(___fttol@lval+1)& (0+255),f,b
  7865  004688  6D0E               	negf	___fttol@lval& (0+255),b
  7866  00468A  0E00               	movlw	0
  7867  00468C  230F               	addwfc	(___fttol@lval+1)& (0+255),f,b
  7868  00468E  2310               	addwfc	(___fttol@lval+2)& (0+255),f,b
  7869  004690  2311               	addwfc	(___fttol@lval+3)& (0+255),f,b
  7870  004692                     l6273:
  7871                           
  7872                           ; BSR set to: 1
  7873  004692  C10E  F104         	movff	___fttol@lval,?___fttol
  7874  004696  C10F  F105         	movff	___fttol@lval+1,?___fttol+1
  7875  00469A  C110  F106         	movff	___fttol@lval+2,?___fttol+2
  7876  00469E  C111  F107         	movff	___fttol@lval+3,?___fttol+3
  7877  0046A2  0012               	return	
  7878  0046A4                     __end_of___fttol:
  7879                           	opt stack 0
  7880                           tosu	equ	0xFFF
  7881                           tosh	equ	0xFFE
  7882                           tosl	equ	0xFFD
  7883                           pclath	equ	0xFFA
  7884                           tblptru	equ	0xFF8
  7885                           tblptrh	equ	0xFF7
  7886                           tblptrl	equ	0xFF6
  7887                           tablat	equ	0xFF5
  7888                           prodh	equ	0xFF4
  7889                           prodl	equ	0xFF3
  7890                           intcon	equ	0xFF2
  7891                           postinc0	equ	0xFEE
  7892                           wreg	equ	0xFE8
  7893                           postdec1	equ	0xFE5
  7894                           fsr1l	equ	0xFE1
  7895                           indf2	equ	0xFDF
  7896                           postinc2	equ	0xFDE
  7897                           postdec2	equ	0xFDD
  7898                           fsr2h	equ	0xFDA
  7899                           fsr2l	equ	0xFD9
  7900                           status	equ	0xFD8
  7901                           
  7902 ;; *************** function ___ftsub *****************
  7903 ;; Defined at:
  7904 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  7905 ;; Parameters:    Size  Location     Type
  7906 ;;  f1              3   19[BANK1 ] float 
  7907 ;;  f2              3   22[BANK1 ] float 
  7908 ;; Auto vars:     Size  Location     Type
  7909 ;;		None
  7910 ;; Return value:  Size  Location     Type
  7911 ;;                  3   19[BANK1 ] float 
  7912 ;; Registers used:
  7913 ;;		wreg, status,2, status,0, cstack
  7914 ;; Tracked objects:
  7915 ;;		On entry : 0/0
  7916 ;;		On exit  : 0/0
  7917 ;;		Unchanged: 0/0
  7918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7919 ;;      Params:         0       0       6       0       0       0       0
  7920 ;;      Locals:         0       0       0       0       0       0       0
  7921 ;;      Temps:          0       0       0       0       0       0       0
  7922 ;;      Totals:         0       0       6       0       0       0       0
  7923 ;;Total ram usage:        6 bytes
  7924 ;; Hardware stack levels used:    1
  7925 ;; Hardware stack levels required when called:    9
  7926 ;; This function calls:
  7927 ;;		___ftadd
  7928 ;; This function is called by:
  7929 ;;		__doprnt
  7930 ;; This function uses a non-reentrant model
  7931 ;;
  7932                           
  7933                           	psect	text18
  7934  00568C                     __ptext18:
  7935                           	opt stack 0
  7936  00568C                     ___ftsub:
  7937                           	opt stack 19
  7938                           
  7939                           ; BSR set to: 1
  7940                           ;incstack = 0
  7941  00568C  0101               	movlb	1	; () banked
  7942  00568E  5116               	movf	___ftsub@f2& (0+255),w,b
  7943  005690  0101               	movlb	1	; () banked
  7944  005692  1117               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  7945  005694  0101               	movlb	1	; () banked
  7946  005696  1118               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  7947  005698  B4D8               	btfsc	status,2,c
  7948  00569A  D009               	goto	l6227
  7949                           
  7950                           ; BSR set to: 1
  7951  00569C  0E00               	movlw	0
  7952  00569E  0101               	movlb	1	; () banked
  7953  0056A0  1B16               	xorwf	___ftsub@f2& (0+255),f,b
  7954  0056A2  0E00               	movlw	0
  7955  0056A4  0101               	movlb	1	; () banked
  7956  0056A6  1B17               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  7957  0056A8  0E80               	movlw	128
  7958  0056AA  0101               	movlb	1	; () banked
  7959  0056AC  1B18               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  7960  0056AE                     l6227:
  7961                           
  7962                           ; BSR set to: 1
  7963  0056AE  C113  F107         	movff	___ftsub@f1,___ftadd@f1
  7964  0056B2  C114  F108         	movff	___ftsub@f1+1,___ftadd@f1+1
  7965  0056B6  C115  F109         	movff	___ftsub@f1+2,___ftadd@f1+2
  7966  0056BA  C116  F10A         	movff	___ftsub@f2,___ftadd@f2
  7967  0056BE  C117  F10B         	movff	___ftsub@f2+1,___ftadd@f2+1
  7968  0056C2  C118  F10C         	movff	___ftsub@f2+2,___ftadd@f2+2
  7969  0056C6  EC16  F01B         	call	___ftadd	;wreg free
  7970  0056CA  C107  F113         	movff	?___ftadd,?___ftsub
  7971  0056CE  C108  F114         	movff	?___ftadd+1,?___ftsub+1
  7972  0056D2  C109  F115         	movff	?___ftadd+2,?___ftsub+2
  7973  0056D6  0012               	return	
  7974  0056D8                     __end_of___ftsub:
  7975                           	opt stack 0
  7976                           tosu	equ	0xFFF
  7977                           tosh	equ	0xFFE
  7978                           tosl	equ	0xFFD
  7979                           pclath	equ	0xFFA
  7980                           tblptru	equ	0xFF8
  7981                           tblptrh	equ	0xFF7
  7982                           tblptrl	equ	0xFF6
  7983                           tablat	equ	0xFF5
  7984                           prodh	equ	0xFF4
  7985                           prodl	equ	0xFF3
  7986                           intcon	equ	0xFF2
  7987                           postinc0	equ	0xFEE
  7988                           wreg	equ	0xFE8
  7989                           postdec1	equ	0xFE5
  7990                           fsr1l	equ	0xFE1
  7991                           indf2	equ	0xFDF
  7992                           postinc2	equ	0xFDE
  7993                           postdec2	equ	0xFDD
  7994                           fsr2h	equ	0xFDA
  7995                           fsr2l	equ	0xFD9
  7996                           status	equ	0xFD8
  7997                           
  7998 ;; *************** function ___ftadd *****************
  7999 ;; Defined at:
  8000 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  8001 ;; Parameters:    Size  Location     Type
  8002 ;;  f1              3    7[BANK1 ] float 
  8003 ;;  f2              3   10[BANK1 ] float 
  8004 ;; Auto vars:     Size  Location     Type
  8005 ;;  exp1            1   18[BANK1 ] unsigned char 
  8006 ;;  exp2            1   17[BANK1 ] unsigned char 
  8007 ;;  sign            1   16[BANK1 ] unsigned char 
  8008 ;; Return value:  Size  Location     Type
  8009 ;;                  3    7[BANK1 ] float 
  8010 ;; Registers used:
  8011 ;;		wreg, status,2, status,0, cstack
  8012 ;; Tracked objects:
  8013 ;;		On entry : 0/0
  8014 ;;		On exit  : 0/0
  8015 ;;		Unchanged: 0/0
  8016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8017 ;;      Params:         0       0       6       0       0       0       0
  8018 ;;      Locals:         0       0       3       0       0       0       0
  8019 ;;      Temps:          0       0       3       0       0       0       0
  8020 ;;      Totals:         0       0      12       0       0       0       0
  8021 ;;Total ram usage:       12 bytes
  8022 ;; Hardware stack levels used:    1
  8023 ;; Hardware stack levels required when called:    8
  8024 ;; This function calls:
  8025 ;;		___ftpack
  8026 ;; This function is called by:
  8027 ;;		__doprnt
  8028 ;;		___ftsub
  8029 ;; This function uses a non-reentrant model
  8030 ;;
  8031                           
  8032                           	psect	text19
  8033  00362C                     __ptext19:
  8034                           	opt stack 0
  8035  00362C                     ___ftadd:
  8036                           	opt stack 19
  8037                           
  8038                           ;incstack = 0
  8039  00362C  C109  F10D         	movff	___ftadd@f1+2,??___ftadd
  8040  003630  0101               	movlb	1	; () banked
  8041  003632  6B0E               	clrf	(??___ftadd+1)& (0+255),b
  8042  003634  6B0F               	clrf	(??___ftadd+2)& (0+255),b
  8043  003636  0101               	movlb	1	; () banked
  8044  003638  3508               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  8045  00363A  0101               	movlb	1	; () banked
  8046  00363C  370D               	rlcf	??___ftadd& (0+255),f,b
  8047  00363E  E301               	bnc	u8411
  8048  003640  810E               	bsf	(??___ftadd+1)& (0+255),0,b
  8049  003642                     u8411:
  8050  003642  0101               	movlb	1	; () banked
  8051  003644  510D               	movf	??___ftadd& (0+255),w,b
  8052  003646  0101               	movlb	1	; () banked
  8053  003648  6F12               	movwf	___ftadd@exp1& (0+255),b
  8054  00364A  C10C  F10D         	movff	___ftadd@f2+2,??___ftadd
  8055  00364E  0101               	movlb	1	; () banked
  8056  003650  6B0E               	clrf	(??___ftadd+1)& (0+255),b
  8057  003652  6B0F               	clrf	(??___ftadd+2)& (0+255),b
  8058  003654  0101               	movlb	1	; () banked
  8059  003656  350B               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  8060  003658  0101               	movlb	1	; () banked
  8061  00365A  370D               	rlcf	??___ftadd& (0+255),f,b
  8062  00365C  E301               	bnc	u8421
  8063  00365E  810E               	bsf	(??___ftadd+1)& (0+255),0,b
  8064  003660                     u8421:
  8065  003660  0101               	movlb	1	; () banked
  8066  003662  510D               	movf	??___ftadd& (0+255),w,b
  8067  003664  0101               	movlb	1	; () banked
  8068  003666  6F11               	movwf	___ftadd@exp2& (0+255),b
  8069                           
  8070                           ; BSR set to: 1
  8071  003668  0101               	movlb	1	; () banked
  8072  00366A  5112               	movf	___ftadd@exp1& (0+255),w,b
  8073  00366C  0101               	movlb	1	; () banked
  8074  00366E  B4D8               	btfsc	status,2,c
  8075  003670  D011               	goto	l779
  8076                           
  8077                           ; BSR set to: 1
  8078  003672  0101               	movlb	1	; () banked
  8079  003674  5111               	movf	___ftadd@exp2& (0+255),w,b
  8080  003676  0101               	movlb	1	; () banked
  8081  003678  5D12               	subwf	___ftadd@exp1& (0+255),w,b
  8082  00367A  B0D8               	btfsc	status,0,c
  8083  00367C  D012               	goto	l5973
  8084                           
  8085                           ; BSR set to: 1
  8086  00367E  0101               	movlb	1	; () banked
  8087  003680  5112               	movf	___ftadd@exp1& (0+255),w,b
  8088  003682  0800               	sublw	0
  8089  003684  0101               	movlb	1	; () banked
  8090  003686  2511               	addwf	___ftadd@exp2& (0+255),w,b
  8091  003688  0101               	movlb	1	; () banked
  8092  00368A  6F0D               	movwf	??___ftadd& (0+255),b
  8093  00368C  0E18               	movlw	24
  8094  00368E  0101               	movlb	1	; () banked
  8095  003690  650D               	cpfsgt	??___ftadd& (0+255),b
  8096  003692  D007               	goto	l5973
  8097  003694                     l779:
  8098                           
  8099                           ; BSR set to: 1
  8100  003694  C10A  F107         	movff	___ftadd@f2,?___ftadd
  8101  003698  C10B  F108         	movff	___ftadd@f2+1,?___ftadd+1
  8102  00369C  C10C  F109         	movff	___ftadd@f2+2,?___ftadd+2
  8103  0036A0  0012               	return	
  8104  0036A2                     l5973:
  8105                           
  8106                           ; BSR set to: 1
  8107  0036A2  0101               	movlb	1	; () banked
  8108  0036A4  5111               	movf	___ftadd@exp2& (0+255),w,b
  8109  0036A6  0101               	movlb	1	; () banked
  8110  0036A8  B4D8               	btfsc	status,2,c
  8111  0036AA  D011               	goto	l783
  8112                           
  8113                           ; BSR set to: 1
  8114  0036AC  0101               	movlb	1	; () banked
  8115  0036AE  5112               	movf	___ftadd@exp1& (0+255),w,b
  8116  0036B0  0101               	movlb	1	; () banked
  8117  0036B2  5D11               	subwf	___ftadd@exp2& (0+255),w,b
  8118  0036B4  B0D8               	btfsc	status,0,c
  8119  0036B6  D012               	goto	l5979
  8120                           
  8121                           ; BSR set to: 1
  8122  0036B8  0101               	movlb	1	; () banked
  8123  0036BA  5111               	movf	___ftadd@exp2& (0+255),w,b
  8124  0036BC  0800               	sublw	0
  8125  0036BE  0101               	movlb	1	; () banked
  8126  0036C0  2512               	addwf	___ftadd@exp1& (0+255),w,b
  8127  0036C2  0101               	movlb	1	; () banked
  8128  0036C4  6F0D               	movwf	??___ftadd& (0+255),b
  8129  0036C6  0E18               	movlw	24
  8130  0036C8  0101               	movlb	1	; () banked
  8131  0036CA  650D               	cpfsgt	??___ftadd& (0+255),b
  8132  0036CC  D007               	goto	l5979
  8133  0036CE                     l783:
  8134                           
  8135                           ; BSR set to: 1
  8136  0036CE  C107  F107         	movff	___ftadd@f1,?___ftadd
  8137  0036D2  C108  F108         	movff	___ftadd@f1+1,?___ftadd+1
  8138  0036D6  C109  F109         	movff	___ftadd@f1+2,?___ftadd+2
  8139  0036DA  0012               	return	
  8140  0036DC                     l5979:
  8141                           
  8142                           ; BSR set to: 1
  8143  0036DC  0E06               	movlw	6
  8144  0036DE  0101               	movlb	1	; () banked
  8145  0036E0  6F10               	movwf	___ftadd@sign& (0+255),b
  8146                           
  8147                           ; BSR set to: 1
  8148  0036E2  0101               	movlb	1	; () banked
  8149  0036E4  AF09               	btfss	(___ftadd@f1+2)& (0+255),7,b
  8150  0036E6  D002               	goto	l5985
  8151                           
  8152                           ; BSR set to: 1
  8153  0036E8  0101               	movlb	1	; () banked
  8154  0036EA  8F10               	bsf	___ftadd@sign& (0+255),7,b
  8155  0036EC                     l5985:
  8156                           
  8157                           ; BSR set to: 1
  8158  0036EC  0101               	movlb	1	; () banked
  8159  0036EE  AF0C               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8160  0036F0  D002               	goto	l785
  8161                           
  8162                           ; BSR set to: 1
  8163  0036F2  0101               	movlb	1	; () banked
  8164  0036F4  8D10               	bsf	___ftadd@sign& (0+255),6,b
  8165  0036F6                     l785:
  8166                           
  8167                           ; BSR set to: 1
  8168  0036F6  0101               	movlb	1	; () banked
  8169  0036F8  8F08               	bsf	(___ftadd@f1+1)& (0+255),7,b
  8170                           
  8171                           ; BSR set to: 1
  8172  0036FA  0EFF               	movlw	255
  8173  0036FC  0101               	movlb	1	; () banked
  8174  0036FE  1707               	andwf	___ftadd@f1& (0+255),f,b
  8175  003700  0EFF               	movlw	255
  8176  003702  0101               	movlb	1	; () banked
  8177  003704  1708               	andwf	(___ftadd@f1+1)& (0+255),f,b
  8178  003706  0E00               	movlw	0
  8179  003708  0101               	movlb	1	; () banked
  8180  00370A  1709               	andwf	(___ftadd@f1+2)& (0+255),f,b
  8181  00370C  0101               	movlb	1	; () banked
  8182  00370E  8F0B               	bsf	(___ftadd@f2+1)& (0+255),7,b
  8183                           
  8184                           ; BSR set to: 1
  8185  003710  0EFF               	movlw	255
  8186  003712  0101               	movlb	1	; () banked
  8187  003714  170A               	andwf	___ftadd@f2& (0+255),f,b
  8188  003716  0EFF               	movlw	255
  8189  003718  0101               	movlb	1	; () banked
  8190  00371A  170B               	andwf	(___ftadd@f2+1)& (0+255),f,b
  8191  00371C  0E00               	movlw	0
  8192  00371E  0101               	movlb	1	; () banked
  8193  003720  170C               	andwf	(___ftadd@f2+2)& (0+255),f,b
  8194                           
  8195                           ; BSR set to: 1
  8196  003722  0101               	movlb	1	; () banked
  8197  003724  5111               	movf	___ftadd@exp2& (0+255),w,b
  8198  003726  0101               	movlb	1	; () banked
  8199  003728  5D12               	subwf	___ftadd@exp1& (0+255),w,b
  8200  00372A  B0D8               	btfsc	status,0,c
  8201  00372C  D025               	goto	l6005
  8202  00372E                     l5995:
  8203                           
  8204                           ; BSR set to: 1
  8205  00372E  0101               	movlb	1	; () banked
  8206  003730  90D8               	bcf	status,0,c
  8207  003732  370A               	rlcf	___ftadd@f2& (0+255),f,b
  8208  003734  370B               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  8209  003736  370C               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  8210  003738  0101               	movlb	1	; () banked
  8211  00373A  0711               	decf	___ftadd@exp2& (0+255),f,b
  8212                           
  8213                           ; BSR set to: 1
  8214  00373C  0101               	movlb	1	; () banked
  8215  00373E  5112               	movf	___ftadd@exp1& (0+255),w,b
  8216  003740  0101               	movlb	1	; () banked
  8217  003742  1911               	xorwf	___ftadd@exp2& (0+255),w,b
  8218  003744  B4D8               	btfsc	status,2,c
  8219  003746  D011               	goto	l6003
  8220                           
  8221                           ; BSR set to: 1
  8222  003748  0101               	movlb	1	; () banked
  8223  00374A  0710               	decf	___ftadd@sign& (0+255),f,b
  8224  00374C  C110  F10D         	movff	___ftadd@sign,??___ftadd
  8225  003750  0E07               	movlw	7
  8226  003752  0101               	movlb	1	; () banked
  8227  003754  170D               	andwf	??___ftadd& (0+255),f,b
  8228  003756  B4D8               	btfsc	status,2,c
  8229  003758  D008               	goto	l6003
  8230  00375A  D7E9               	goto	l5995
  8231  00375C                     l6001:
  8232                           
  8233                           ; BSR set to: 1
  8234  00375C  0101               	movlb	1	; () banked
  8235  00375E  90D8               	bcf	status,0,c
  8236  003760  3309               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  8237  003762  3308               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  8238  003764  3307               	rrcf	___ftadd@f1& (0+255),f,b
  8239  003766  0101               	movlb	1	; () banked
  8240  003768  2B12               	incf	___ftadd@exp1& (0+255),f,b
  8241  00376A                     l6003:
  8242                           
  8243                           ; BSR set to: 1
  8244  00376A  0101               	movlb	1	; () banked
  8245  00376C  5111               	movf	___ftadd@exp2& (0+255),w,b
  8246  00376E  0101               	movlb	1	; () banked
  8247  003770  1912               	xorwf	___ftadd@exp1& (0+255),w,b
  8248  003772  B4D8               	btfsc	status,2,c
  8249  003774  D02B               	goto	l794
  8250  003776  D7F2               	goto	l6001
  8251  003778                     l6005:
  8252                           
  8253                           ; BSR set to: 1
  8254  003778  0101               	movlb	1	; () banked
  8255  00377A  5112               	movf	___ftadd@exp1& (0+255),w,b
  8256  00377C  0101               	movlb	1	; () banked
  8257  00377E  5D11               	subwf	___ftadd@exp2& (0+255),w,b
  8258  003780  B0D8               	btfsc	status,0,c
  8259  003782  D024               	goto	l794
  8260  003784                     l6007:
  8261                           
  8262                           ; BSR set to: 1
  8263  003784  0101               	movlb	1	; () banked
  8264  003786  90D8               	bcf	status,0,c
  8265  003788  3707               	rlcf	___ftadd@f1& (0+255),f,b
  8266  00378A  3708               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  8267  00378C  3709               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  8268  00378E  0101               	movlb	1	; () banked
  8269  003790  0712               	decf	___ftadd@exp1& (0+255),f,b
  8270                           
  8271                           ; BSR set to: 1
  8272  003792  0101               	movlb	1	; () banked
  8273  003794  5112               	movf	___ftadd@exp1& (0+255),w,b
  8274  003796  0101               	movlb	1	; () banked
  8275  003798  1911               	xorwf	___ftadd@exp2& (0+255),w,b
  8276  00379A  B4D8               	btfsc	status,2,c
  8277  00379C  D011               	goto	l6015
  8278                           
  8279                           ; BSR set to: 1
  8280  00379E  0101               	movlb	1	; () banked
  8281  0037A0  0710               	decf	___ftadd@sign& (0+255),f,b
  8282  0037A2  C110  F10D         	movff	___ftadd@sign,??___ftadd
  8283  0037A6  0E07               	movlw	7
  8284  0037A8  0101               	movlb	1	; () banked
  8285  0037AA  170D               	andwf	??___ftadd& (0+255),f,b
  8286  0037AC  B4D8               	btfsc	status,2,c
  8287  0037AE  D008               	goto	l6015
  8288  0037B0  D7E9               	goto	l6007
  8289  0037B2                     l6013:
  8290                           
  8291                           ; BSR set to: 1
  8292  0037B2  0101               	movlb	1	; () banked
  8293  0037B4  90D8               	bcf	status,0,c
  8294  0037B6  330C               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  8295  0037B8  330B               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  8296  0037BA  330A               	rrcf	___ftadd@f2& (0+255),f,b
  8297  0037BC  0101               	movlb	1	; () banked
  8298  0037BE  2B11               	incf	___ftadd@exp2& (0+255),f,b
  8299  0037C0                     l6015:
  8300                           
  8301                           ; BSR set to: 1
  8302  0037C0  0101               	movlb	1	; () banked
  8303  0037C2  5111               	movf	___ftadd@exp2& (0+255),w,b
  8304  0037C4  0101               	movlb	1	; () banked
  8305  0037C6  1912               	xorwf	___ftadd@exp1& (0+255),w,b
  8306  0037C8  A4D8               	btfss	status,2,c
  8307  0037CA  D7F3               	goto	l6013
  8308  0037CC                     l794:
  8309                           
  8310                           ; BSR set to: 1
  8311  0037CC  0101               	movlb	1	; () banked
  8312  0037CE  AF10               	btfss	___ftadd@sign& (0+255),7,b
  8313  0037D0  D012               	goto	l803
  8314                           
  8315                           ; BSR set to: 1
  8316  0037D2  0EFF               	movlw	255
  8317  0037D4  0101               	movlb	1	; () banked
  8318  0037D6  1B07               	xorwf	___ftadd@f1& (0+255),f,b
  8319  0037D8  0EFF               	movlw	255
  8320  0037DA  0101               	movlb	1	; () banked
  8321  0037DC  1B08               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  8322  0037DE  0EFF               	movlw	255
  8323  0037E0  0101               	movlb	1	; () banked
  8324  0037E2  1B09               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  8325  0037E4  0E01               	movlw	1
  8326  0037E6  0101               	movlb	1	; () banked
  8327  0037E8  2707               	addwf	___ftadd@f1& (0+255),f,b
  8328  0037EA  0E00               	movlw	0
  8329  0037EC  0101               	movlb	1	; () banked
  8330  0037EE  2308               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  8331  0037F0  0E00               	movlw	0
  8332  0037F2  0101               	movlb	1	; () banked
  8333  0037F4  2309               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  8334  0037F6                     l803:
  8335                           
  8336                           ; BSR set to: 1
  8337  0037F6  0101               	movlb	1	; () banked
  8338  0037F8  AD10               	btfss	___ftadd@sign& (0+255),6,b
  8339  0037FA  D012               	goto	l6021
  8340                           
  8341                           ; BSR set to: 1
  8342  0037FC  0EFF               	movlw	255
  8343  0037FE  0101               	movlb	1	; () banked
  8344  003800  1B0A               	xorwf	___ftadd@f2& (0+255),f,b
  8345  003802  0EFF               	movlw	255
  8346  003804  0101               	movlb	1	; () banked
  8347  003806  1B0B               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8348  003808  0EFF               	movlw	255
  8349  00380A  0101               	movlb	1	; () banked
  8350  00380C  1B0C               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8351  00380E  0E01               	movlw	1
  8352  003810  0101               	movlb	1	; () banked
  8353  003812  270A               	addwf	___ftadd@f2& (0+255),f,b
  8354  003814  0E00               	movlw	0
  8355  003816  0101               	movlb	1	; () banked
  8356  003818  230B               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8357  00381A  0E00               	movlw	0
  8358  00381C  0101               	movlb	1	; () banked
  8359  00381E  230C               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8360  003820                     l6021:
  8361                           
  8362                           ; BSR set to: 1
  8363  003820  0E00               	movlw	0
  8364  003822  0101               	movlb	1	; () banked
  8365  003824  6F10               	movwf	___ftadd@sign& (0+255),b
  8366                           
  8367                           ; BSR set to: 1
  8368  003826  0101               	movlb	1	; () banked
  8369  003828  5107               	movf	___ftadd@f1& (0+255),w,b
  8370  00382A  0101               	movlb	1	; () banked
  8371  00382C  270A               	addwf	___ftadd@f2& (0+255),f,b
  8372  00382E  0101               	movlb	1	; () banked
  8373  003830  5108               	movf	(___ftadd@f1+1)& (0+255),w,b
  8374  003832  0101               	movlb	1	; () banked
  8375  003834  230B               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8376  003836  0101               	movlb	1	; () banked
  8377  003838  5109               	movf	(___ftadd@f1+2)& (0+255),w,b
  8378  00383A  0101               	movlb	1	; () banked
  8379  00383C  230C               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8380                           
  8381                           ; BSR set to: 1
  8382  00383E  0101               	movlb	1	; () banked
  8383  003840  AF0C               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8384  003842  D015               	goto	l6031
  8385                           
  8386                           ; BSR set to: 1
  8387  003844  0EFF               	movlw	255
  8388  003846  0101               	movlb	1	; () banked
  8389  003848  1B0A               	xorwf	___ftadd@f2& (0+255),f,b
  8390  00384A  0EFF               	movlw	255
  8391  00384C  0101               	movlb	1	; () banked
  8392  00384E  1B0B               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8393  003850  0EFF               	movlw	255
  8394  003852  0101               	movlb	1	; () banked
  8395  003854  1B0C               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8396  003856  0E01               	movlw	1
  8397  003858  0101               	movlb	1	; () banked
  8398  00385A  270A               	addwf	___ftadd@f2& (0+255),f,b
  8399  00385C  0E00               	movlw	0
  8400  00385E  0101               	movlb	1	; () banked
  8401  003860  230B               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8402  003862  0E00               	movlw	0
  8403  003864  0101               	movlb	1	; () banked
  8404  003866  230C               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8405                           
  8406                           ; BSR set to: 1
  8407  003868  0E01               	movlw	1
  8408  00386A  0101               	movlb	1	; () banked
  8409  00386C  6F10               	movwf	___ftadd@sign& (0+255),b
  8410  00386E                     l6031:
  8411                           
  8412                           ; BSR set to: 1
  8413  00386E  C10A  F090         	movff	___ftadd@f2,___ftpack@arg
  8414  003872  C10B  F091         	movff	___ftadd@f2+1,___ftpack@arg+1
  8415  003876  C10C  F092         	movff	___ftadd@f2+2,___ftpack@arg+2
  8416  00387A  C112  F093         	movff	___ftadd@exp1,___ftpack@exp
  8417  00387E  C110  F094         	movff	___ftadd@sign,___ftpack@sign
  8418  003882  EC09  F025         	call	___ftpack	;wreg free
  8419  003886  C090  F107         	movff	?___ftpack,?___ftadd
  8420  00388A  C091  F108         	movff	?___ftpack+1,?___ftadd+1
  8421  00388E  C092  F109         	movff	?___ftpack+2,?___ftadd+2
  8422  003892  0012               	return	
  8423  003894                     __end_of___ftadd:
  8424                           	opt stack 0
  8425                           tosu	equ	0xFFF
  8426                           tosh	equ	0xFFE
  8427                           tosl	equ	0xFFD
  8428                           pclath	equ	0xFFA
  8429                           tblptru	equ	0xFF8
  8430                           tblptrh	equ	0xFF7
  8431                           tblptrl	equ	0xFF6
  8432                           tablat	equ	0xFF5
  8433                           prodh	equ	0xFF4
  8434                           prodl	equ	0xFF3
  8435                           intcon	equ	0xFF2
  8436                           postinc0	equ	0xFEE
  8437                           wreg	equ	0xFE8
  8438                           postdec1	equ	0xFE5
  8439                           fsr1l	equ	0xFE1
  8440                           indf2	equ	0xFDF
  8441                           postinc2	equ	0xFDE
  8442                           postdec2	equ	0xFDD
  8443                           fsr2h	equ	0xFDA
  8444                           fsr2l	equ	0xFD9
  8445                           status	equ	0xFD8
  8446                           
  8447 ;; *************** function ___ftneg *****************
  8448 ;; Defined at:
  8449 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
  8450 ;; Parameters:    Size  Location     Type
  8451 ;;  f1              3   48[BANK0 ] float 
  8452 ;; Auto vars:     Size  Location     Type
  8453 ;;		None
  8454 ;; Return value:  Size  Location     Type
  8455 ;;                  3   48[BANK0 ] float 
  8456 ;; Registers used:
  8457 ;;		wreg, status,2, status,0
  8458 ;; Tracked objects:
  8459 ;;		On entry : 0/0
  8460 ;;		On exit  : 0/0
  8461 ;;		Unchanged: 0/0
  8462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8463 ;;      Params:         0       3       0       0       0       0       0
  8464 ;;      Locals:         0       0       0       0       0       0       0
  8465 ;;      Temps:          0       0       0       0       0       0       0
  8466 ;;      Totals:         0       3       0       0       0       0       0
  8467 ;;Total ram usage:        3 bytes
  8468 ;; Hardware stack levels used:    1
  8469 ;; Hardware stack levels required when called:    7
  8470 ;; This function calls:
  8471 ;;		Nothing
  8472 ;; This function is called by:
  8473 ;;		__doprnt
  8474 ;; This function uses a non-reentrant model
  8475 ;;
  8476                           
  8477                           	psect	text20
  8478  00594C                     __ptext20:
  8479                           	opt stack 0
  8480  00594C                     ___ftneg:
  8481                           	opt stack 21
  8482                           
  8483                           ;incstack = 0
  8484  00594C  0100               	movlb	0	; () banked
  8485  00594E  5190               	movf	___ftneg@f1& (0+255),w,b
  8486  005950  0100               	movlb	0	; () banked
  8487  005952  1191               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  8488  005954  0100               	movlb	0	; () banked
  8489  005956  1192               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  8490  005958  B4D8               	btfsc	status,2,c
  8491  00595A  D009               	goto	l853
  8492                           
  8493                           ; BSR set to: 0
  8494  00595C  0E00               	movlw	0
  8495  00595E  0100               	movlb	0	; () banked
  8496  005960  1B90               	xorwf	___ftneg@f1& (0+255),f,b
  8497  005962  0E00               	movlw	0
  8498  005964  0100               	movlb	0	; () banked
  8499  005966  1B91               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  8500  005968  0E80               	movlw	128
  8501  00596A  0100               	movlb	0	; () banked
  8502  00596C  1B92               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  8503  00596E                     l853:
  8504                           
  8505                           ; BSR set to: 0
  8506  00596E  C090  F090         	movff	___ftneg@f1,?___ftneg
  8507  005972  C091  F091         	movff	___ftneg@f1+1,?___ftneg+1
  8508  005976  C092  F092         	movff	___ftneg@f1+2,?___ftneg+2
  8509                           
  8510                           ; BSR set to: 0
  8511  00597A  0012               	return		;funcret
  8512  00597C                     __end_of___ftneg:
  8513                           	opt stack 0
  8514                           tosu	equ	0xFFF
  8515                           tosh	equ	0xFFE
  8516                           tosl	equ	0xFFD
  8517                           pclath	equ	0xFFA
  8518                           tblptru	equ	0xFF8
  8519                           tblptrh	equ	0xFF7
  8520                           tblptrl	equ	0xFF6
  8521                           tablat	equ	0xFF5
  8522                           prodh	equ	0xFF4
  8523                           prodl	equ	0xFF3
  8524                           intcon	equ	0xFF2
  8525                           postinc0	equ	0xFEE
  8526                           wreg	equ	0xFE8
  8527                           postdec1	equ	0xFE5
  8528                           fsr1l	equ	0xFE1
  8529                           indf2	equ	0xFDF
  8530                           postinc2	equ	0xFDE
  8531                           postdec2	equ	0xFDD
  8532                           fsr2h	equ	0xFDA
  8533                           fsr2l	equ	0xFD9
  8534                           status	equ	0xFD8
  8535                           
  8536 ;; *************** function ___ftge *****************
  8537 ;; Defined at:
  8538 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  8539 ;; Parameters:    Size  Location     Type
  8540 ;;  ff1             3   48[BANK0 ] float 
  8541 ;;  ff2             3   51[BANK0 ] float 
  8542 ;; Auto vars:     Size  Location     Type
  8543 ;;		None
  8544 ;; Return value:  Size  Location     Type
  8545 ;;		None               void
  8546 ;; Registers used:
  8547 ;;		wreg, status,2, status,0
  8548 ;; Tracked objects:
  8549 ;;		On entry : 0/0
  8550 ;;		On exit  : 0/0
  8551 ;;		Unchanged: 0/0
  8552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8553 ;;      Params:         0       6       0       0       0       0       0
  8554 ;;      Locals:         0       0       0       0       0       0       0
  8555 ;;      Temps:          0       3       0       0       0       0       0
  8556 ;;      Totals:         0       9       0       0       0       0       0
  8557 ;;Total ram usage:        9 bytes
  8558 ;; Hardware stack levels used:    1
  8559 ;; Hardware stack levels required when called:    7
  8560 ;; This function calls:
  8561 ;;		Nothing
  8562 ;; This function is called by:
  8563 ;;		_main
  8564 ;;		__doprnt
  8565 ;; This function uses a non-reentrant model
  8566 ;;
  8567                           
  8568                           	psect	text21
  8569  004DEC                     __ptext21:
  8570                           	opt stack 0
  8571  004DEC                     ___ftge:
  8572                           	opt stack 21
  8573                           
  8574                           ; BSR set to: 0
  8575                           ;incstack = 0
  8576  004DEC  0100               	movlb	0	; () banked
  8577  004DEE  AF92               	btfss	(___ftge@ff1+2)& (0+255),7,b
  8578  004DF0  D01D               	goto	l4627
  8579                           
  8580                           ; BSR set to: 0
  8581  004DF2  C090  F096         	movff	___ftge@ff1,??___ftge
  8582  004DF6  C091  F097         	movff	___ftge@ff1+1,??___ftge+1
  8583  004DFA  C092  F098         	movff	___ftge@ff1+2,??___ftge+2
  8584  004DFE  0100               	movlb	0	; () banked
  8585  004E00  1F96               	comf	??___ftge& (0+255),f,b
  8586  004E02  1F97               	comf	(??___ftge+1)& (0+255),f,b
  8587  004E04  1F98               	comf	(??___ftge+2)& (0+255),f,b
  8588  004E06  2B96               	incf	??___ftge& (0+255),f,b
  8589  004E08  0E00               	movlw	0
  8590  004E0A  2397               	addwfc	(??___ftge+1)& (0+255),f,b
  8591  004E0C  2398               	addwfc	(??___ftge+2)& (0+255),f,b
  8592  004E0E  0E00               	movlw	0
  8593  004E10  0100               	movlb	0	; () banked
  8594  004E12  2596               	addwf	??___ftge& (0+255),w,b
  8595  004E14  0100               	movlb	0	; () banked
  8596  004E16  6F90               	movwf	___ftge@ff1& (0+255),b
  8597  004E18  0E00               	movlw	0
  8598  004E1A  0100               	movlb	0	; () banked
  8599  004E1C  2197               	addwfc	(??___ftge+1)& (0+255),w,b
  8600  004E1E  0100               	movlb	0	; () banked
  8601  004E20  6F91               	movwf	(___ftge@ff1+1)& (0+255),b
  8602  004E22  0E80               	movlw	128
  8603  004E24  0100               	movlb	0	; () banked
  8604  004E26  2198               	addwfc	(??___ftge+2)& (0+255),w,b
  8605  004E28  0100               	movlb	0	; () banked
  8606  004E2A  6F92               	movwf	(___ftge@ff1+2)& (0+255),b
  8607  004E2C                     l4627:
  8608                           
  8609                           ; BSR set to: 0
  8610  004E2C  0100               	movlb	0	; () banked
  8611  004E2E  AF95               	btfss	(___ftge@ff2+2)& (0+255),7,b
  8612  004E30  D01D               	goto	l4631
  8613                           
  8614                           ; BSR set to: 0
  8615  004E32  C093  F096         	movff	___ftge@ff2,??___ftge
  8616  004E36  C094  F097         	movff	___ftge@ff2+1,??___ftge+1
  8617  004E3A  C095  F098         	movff	___ftge@ff2+2,??___ftge+2
  8618  004E3E  0100               	movlb	0	; () banked
  8619  004E40  1F96               	comf	??___ftge& (0+255),f,b
  8620  004E42  1F97               	comf	(??___ftge+1)& (0+255),f,b
  8621  004E44  1F98               	comf	(??___ftge+2)& (0+255),f,b
  8622  004E46  2B96               	incf	??___ftge& (0+255),f,b
  8623  004E48  0E00               	movlw	0
  8624  004E4A  2397               	addwfc	(??___ftge+1)& (0+255),f,b
  8625  004E4C  2398               	addwfc	(??___ftge+2)& (0+255),f,b
  8626  004E4E  0E00               	movlw	0
  8627  004E50  0100               	movlb	0	; () banked
  8628  004E52  2596               	addwf	??___ftge& (0+255),w,b
  8629  004E54  0100               	movlb	0	; () banked
  8630  004E56  6F93               	movwf	___ftge@ff2& (0+255),b
  8631  004E58  0E00               	movlw	0
  8632  004E5A  0100               	movlb	0	; () banked
  8633  004E5C  2197               	addwfc	(??___ftge+1)& (0+255),w,b
  8634  004E5E  0100               	movlb	0	; () banked
  8635  004E60  6F94               	movwf	(___ftge@ff2+1)& (0+255),b
  8636  004E62  0E80               	movlw	128
  8637  004E64  0100               	movlb	0	; () banked
  8638  004E66  2198               	addwfc	(??___ftge+2)& (0+255),w,b
  8639  004E68  0100               	movlb	0	; () banked
  8640  004E6A  6F95               	movwf	(___ftge@ff2+2)& (0+255),b
  8641  004E6C                     l4631:
  8642                           
  8643                           ; BSR set to: 0
  8644  004E6C  0E00               	movlw	0
  8645  004E6E  0100               	movlb	0	; () banked
  8646  004E70  1B90               	xorwf	___ftge@ff1& (0+255),f,b
  8647  004E72  0E00               	movlw	0
  8648  004E74  0100               	movlb	0	; () banked
  8649  004E76  1B91               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  8650  004E78  0E80               	movlw	128
  8651  004E7A  0100               	movlb	0	; () banked
  8652  004E7C  1B92               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  8653                           
  8654                           ; BSR set to: 0
  8655  004E7E  0E00               	movlw	0
  8656  004E80  0100               	movlb	0	; () banked
  8657  004E82  1B93               	xorwf	___ftge@ff2& (0+255),f,b
  8658  004E84  0E00               	movlw	0
  8659  004E86  0100               	movlb	0	; () banked
  8660  004E88  1B94               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  8661  004E8A  0E80               	movlw	128
  8662  004E8C  0100               	movlb	0	; () banked
  8663  004E8E  1B95               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  8664  004E90  0100               	movlb	0	; () banked
  8665  004E92  5193               	movf	___ftge@ff2& (0+255),w,b
  8666  004E94  0100               	movlb	0	; () banked
  8667  004E96  5D90               	subwf	___ftge@ff1& (0+255),w,b
  8668  004E98  0100               	movlb	0	; () banked
  8669  004E9A  5194               	movf	(___ftge@ff2+1)& (0+255),w,b
  8670  004E9C  0100               	movlb	0	; () banked
  8671  004E9E  5991               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  8672  004EA0  0100               	movlb	0	; () banked
  8673  004EA2  5195               	movf	(___ftge@ff2+2)& (0+255),w,b
  8674  004EA4  0100               	movlb	0	; () banked
  8675  004EA6  5992               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  8676  004EA8  B0D8               	btfsc	status,0,c
  8677  004EAA  D002               	goto	l4637
  8678                           
  8679                           ; BSR set to: 0
  8680  004EAC  90D8               	bcf	status,0,c
  8681  004EAE  0012               	return	
  8682  004EB0                     l4637:
  8683                           
  8684                           ; BSR set to: 0
  8685  004EB0  80D8               	bsf	status,0,c
  8686                           
  8687                           ; BSR set to: 0
  8688  004EB2  0012               	return	
  8689  004EB4                     __end_of___ftge:
  8690                           	opt stack 0
  8691                           tosu	equ	0xFFF
  8692                           tosh	equ	0xFFE
  8693                           tosl	equ	0xFFD
  8694                           pclath	equ	0xFFA
  8695                           tblptru	equ	0xFF8
  8696                           tblptrh	equ	0xFF7
  8697                           tblptrl	equ	0xFF6
  8698                           tablat	equ	0xFF5
  8699                           prodh	equ	0xFF4
  8700                           prodl	equ	0xFF3
  8701                           intcon	equ	0xFF2
  8702                           postinc0	equ	0xFEE
  8703                           wreg	equ	0xFE8
  8704                           postdec1	equ	0xFE5
  8705                           fsr1l	equ	0xFE1
  8706                           indf2	equ	0xFDF
  8707                           postinc2	equ	0xFDE
  8708                           postdec2	equ	0xFDD
  8709                           fsr2h	equ	0xFDA
  8710                           fsr2l	equ	0xFD9
  8711                           status	equ	0xFD8
  8712                           
  8713 ;; *************** function _lcd_sendString *****************
  8714 ;; Defined at:
  8715 ;;		line 74 in file "lcd.c"
  8716 ;; Parameters:    Size  Location     Type
  8717 ;;  a               2   52[BANK0 ] PTR const unsigned char 
  8718 ;;		 -> ftoa@buf(17), lcd_sendUInt@displayString(10), lcd_sendInt@displayString(10), main@cap_string(16), 
  8719 ;; Auto vars:     Size  Location     Type
  8720 ;;  i               2   54[BANK0 ] int 
  8721 ;; Return value:  Size  Location     Type
  8722 ;;                  1    wreg      void 
  8723 ;; Registers used:
  8724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8725 ;; Tracked objects:
  8726 ;;		On entry : 0/0
  8727 ;;		On exit  : 0/0
  8728 ;;		Unchanged: 0/0
  8729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8730 ;;      Params:         0       2       0       0       0       0       0
  8731 ;;      Locals:         0       2       0       0       0       0       0
  8732 ;;      Temps:          0       0       0       0       0       0       0
  8733 ;;      Totals:         0       4       0       0       0       0       0
  8734 ;;Total ram usage:        4 bytes
  8735 ;; Hardware stack levels used:    1
  8736 ;; Hardware stack levels required when called:    9
  8737 ;; This function calls:
  8738 ;;		_lcd_sendChar
  8739 ;; This function is called by:
  8740 ;;		_main
  8741 ;;		_lcd_sendStringToPos
  8742 ;;		_lcd_sendInt
  8743 ;;		_lcd_sendFloat
  8744 ;;		_lcd_sendUInt
  8745 ;; This function uses a non-reentrant model
  8746 ;;
  8747                           
  8748                           	psect	text22
  8749  0056D8                     __ptext22:
  8750                           	opt stack 0
  8751  0056D8                     _lcd_sendString:
  8752                           	opt stack 21
  8753                           
  8754                           ;lcd.c: 76: int i;
  8755                           ;lcd.c: 77: for(i=0;a[i]!='\0';i++)
  8756                           
  8757                           ; BSR set to: 0
  8758                           ;incstack = 0
  8759  0056D8  0E00               	movlw	0
  8760  0056DA  0100               	movlb	0	; () banked
  8761  0056DC  6F97               	movwf	(lcd_sendString@i+1)& (0+255),b
  8762  0056DE  0E00               	movlw	0
  8763  0056E0  6F96               	movwf	lcd_sendString@i& (0+255),b
  8764  0056E2  D010               	goto	l5783
  8765  0056E4                     l5779:
  8766                           
  8767                           ; BSR set to: 0
  8768                           ;lcd.c: 78: lcd_sendChar(a[i]);
  8769  0056E4  0100               	movlb	0	; () banked
  8770  0056E6  5196               	movf	lcd_sendString@i& (0+255),w,b
  8771  0056E8  0100               	movlb	0	; () banked
  8772  0056EA  2594               	addwf	lcd_sendString@a& (0+255),w,b
  8773  0056EC  6ED9               	movwf	fsr2l,c
  8774  0056EE  0100               	movlb	0	; () banked
  8775  0056F0  5197               	movf	(lcd_sendString@i+1)& (0+255),w,b
  8776  0056F2  0100               	movlb	0	; () banked
  8777  0056F4  2195               	addwfc	(lcd_sendString@a+1)& (0+255),w,b
  8778  0056F6  6EDA               	movwf	fsr2h,c
  8779  0056F8  50DF               	movf	indf2,w,c
  8780  0056FA  EC90  F02B         	call	_lcd_sendChar
  8781  0056FE  0100               	movlb	0	; () banked
  8782  005700  4B96               	infsnz	lcd_sendString@i& (0+255),f,b
  8783  005702  2B97               	incf	(lcd_sendString@i+1)& (0+255),f,b
  8784  005704                     l5783:
  8785                           
  8786                           ; BSR set to: 0
  8787  005704  0100               	movlb	0	; () banked
  8788  005706  5196               	movf	lcd_sendString@i& (0+255),w,b
  8789  005708  0100               	movlb	0	; () banked
  8790  00570A  2594               	addwf	lcd_sendString@a& (0+255),w,b
  8791  00570C  6ED9               	movwf	fsr2l,c
  8792  00570E  0100               	movlb	0	; () banked
  8793  005710  5197               	movf	(lcd_sendString@i+1)& (0+255),w,b
  8794  005712  0100               	movlb	0	; () banked
  8795  005714  2195               	addwfc	(lcd_sendString@a+1)& (0+255),w,b
  8796  005716  6EDA               	movwf	fsr2h,c
  8797  005718  50DF               	movf	indf2,w,c
  8798  00571A  B4D8               	btfsc	status,2,c
  8799  00571C  0012               	return	
  8800  00571E  D7E2               	goto	l5779
  8801  005720                     __end_of_lcd_sendString:
  8802                           	opt stack 0
  8803                           tosu	equ	0xFFF
  8804                           tosh	equ	0xFFE
  8805                           tosl	equ	0xFFD
  8806                           pclath	equ	0xFFA
  8807                           tblptru	equ	0xFF8
  8808                           tblptrh	equ	0xFF7
  8809                           tblptrl	equ	0xFF6
  8810                           tablat	equ	0xFF5
  8811                           prodh	equ	0xFF4
  8812                           prodl	equ	0xFF3
  8813                           intcon	equ	0xFF2
  8814                           postinc0	equ	0xFEE
  8815                           wreg	equ	0xFE8
  8816                           postdec1	equ	0xFE5
  8817                           fsr1l	equ	0xFE1
  8818                           indf2	equ	0xFDF
  8819                           postinc2	equ	0xFDE
  8820                           postdec2	equ	0xFDD
  8821                           fsr2h	equ	0xFDA
  8822                           fsr2l	equ	0xFD9
  8823                           status	equ	0xFD8
  8824                           
  8825 ;; *************** function _lcd_sendChar *****************
  8826 ;; Defined at:
  8827 ;;		line 58 in file "lcd.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;  a               1    wreg     const unsigned char 
  8830 ;; Auto vars:     Size  Location     Type
  8831 ;;  a               1   51[BANK0 ] const unsigned char 
  8832 ;;  y               1   50[BANK0 ] unsigned char 
  8833 ;;  temp            1   49[BANK0 ] unsigned char 
  8834 ;; Return value:  Size  Location     Type
  8835 ;;                  1    wreg      void 
  8836 ;; Registers used:
  8837 ;;		wreg, status,2, status,0, cstack
  8838 ;; Tracked objects:
  8839 ;;		On entry : 0/0
  8840 ;;		On exit  : 0/0
  8841 ;;		Unchanged: 0/0
  8842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8843 ;;      Params:         0       0       0       0       0       0       0
  8844 ;;      Locals:         0       3       0       0       0       0       0
  8845 ;;      Temps:          0       0       0       0       0       0       0
  8846 ;;      Totals:         0       3       0       0       0       0       0
  8847 ;;Total ram usage:        3 bytes
  8848 ;; Hardware stack levels used:    1
  8849 ;; Hardware stack levels required when called:    8
  8850 ;; This function calls:
  8851 ;;		__lcd_Port
  8852 ;; This function is called by:
  8853 ;;		_lcd_sendString
  8854 ;; This function uses a non-reentrant model
  8855 ;;
  8856                           
  8857                           	psect	text23
  8858  005720                     __ptext23:
  8859                           	opt stack 0
  8860  005720                     _lcd_sendChar:
  8861                           	opt stack 21
  8862                           
  8863                           ; BSR set to: 0
  8864                           ;incstack = 0
  8865                           ;lcd_sendChar@a stored from wreg
  8866  005720  0100               	movlb	0	; () banked
  8867  005722  6F93               	movwf	lcd_sendChar@a& (0+255),b
  8868                           
  8869                           ;lcd.c: 60: char temp,y;
  8870                           ;lcd.c: 61: temp = a&0x0F;
  8871  005724  0100               	movlb	0	; () banked
  8872  005726  5193               	movf	lcd_sendChar@a& (0+255),w,b
  8873  005728  0B0F               	andlw	15
  8874  00572A  0100               	movlb	0	; () banked
  8875  00572C  6F91               	movwf	lcd_sendChar@temp& (0+255),b
  8876                           
  8877                           ;lcd.c: 62: y = a&0xF0;
  8878  00572E  0100               	movlb	0	; () banked
  8879  005730  5193               	movf	lcd_sendChar@a& (0+255),w,b
  8880  005732  0BF0               	andlw	240
  8881  005734  0100               	movlb	0	; () banked
  8882  005736  6F92               	movwf	lcd_sendChar@y& (0+255),b
  8883                           
  8884                           ; BSR set to: 0
  8885                           ;lcd.c: 63: LATAbits.LA5 = 1;
  8886  005738  8A89               	bsf	3977,5,c	;volatile
  8887                           
  8888                           ; BSR set to: 0
  8889                           ;lcd.c: 64: _lcd_Port(y>>4);
  8890  00573A  0100               	movlb	0	; () banked
  8891  00573C  3992               	swapf	lcd_sendChar@y& (0+255),w,b
  8892  00573E  0B0F               	andlw	15
  8893  005740  EC70  F02C         	call	__lcd_Port
  8894                           
  8895                           ;lcd.c: 65: LATAbits.LA4 = 1;
  8896  005744  8889               	bsf	3977,4,c	;volatile
  8897                           
  8898                           ;lcd.c: 66: _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  8899  005746  0E35               	movlw	53
  8900  005748                     u16947:
  8901  005748  2EE8               	decfsz	wreg,f,c
  8902  00574A  D7FE               	goto	u16947
  8903  00574C  F000               	nop	
  8904                           
  8905                           ;lcd.c: 67: LATAbits.LA4 = 0;
  8906  00574E  9889               	bcf	3977,4,c	;volatile
  8907                           
  8908                           ;lcd.c: 68: _lcd_Port(temp);
  8909  005750  0100               	movlb	0	; () banked
  8910  005752  5191               	movf	lcd_sendChar@temp& (0+255),w,b
  8911  005754  EC70  F02C         	call	__lcd_Port
  8912                           
  8913                           ;lcd.c: 69: LATAbits.LA4 = 1;
  8914  005758  8889               	bsf	3977,4,c	;volatile
  8915                           
  8916                           ;lcd.c: 70: _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  8917  00575A  0E35               	movlw	53
  8918  00575C                     u16957:
  8919  00575C  2EE8               	decfsz	wreg,f,c
  8920  00575E  D7FE               	goto	u16957
  8921  005760  F000               	nop	
  8922                           
  8923                           ;lcd.c: 71: LATAbits.LA4 = 0;
  8924  005762  9889               	bcf	3977,4,c	;volatile
  8925  005764  0012               	return		;funcret
  8926  005766                     __end_of_lcd_sendChar:
  8927                           	opt stack 0
  8928                           tosu	equ	0xFFF
  8929                           tosh	equ	0xFFE
  8930                           tosl	equ	0xFFD
  8931                           pclath	equ	0xFFA
  8932                           tblptru	equ	0xFF8
  8933                           tblptrh	equ	0xFF7
  8934                           tblptrl	equ	0xFF6
  8935                           tablat	equ	0xFF5
  8936                           prodh	equ	0xFF4
  8937                           prodl	equ	0xFF3
  8938                           intcon	equ	0xFF2
  8939                           postinc0	equ	0xFEE
  8940                           wreg	equ	0xFE8
  8941                           postdec1	equ	0xFE5
  8942                           fsr1l	equ	0xFE1
  8943                           indf2	equ	0xFDF
  8944                           postinc2	equ	0xFDE
  8945                           postdec2	equ	0xFDD
  8946                           fsr2h	equ	0xFDA
  8947                           fsr2l	equ	0xFD9
  8948                           status	equ	0xFD8
  8949                           
  8950 ;; *************** function _lcd_init *****************
  8951 ;; Defined at:
  8952 ;;		line 39 in file "lcd.c"
  8953 ;; Parameters:    Size  Location     Type
  8954 ;;		None
  8955 ;; Auto vars:     Size  Location     Type
  8956 ;;		None
  8957 ;; Return value:  Size  Location     Type
  8958 ;;                  1    wreg      void 
  8959 ;; Registers used:
  8960 ;;		wreg, status,2, cstack
  8961 ;; Tracked objects:
  8962 ;;		On entry : 0/0
  8963 ;;		On exit  : 0/0
  8964 ;;		Unchanged: 0/0
  8965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8966 ;;      Params:         0       0       0       0       0       0       0
  8967 ;;      Locals:         0       0       0       0       0       0       0
  8968 ;;      Temps:          0       1       0       0       0       0       0
  8969 ;;      Totals:         0       1       0       0       0       0       0
  8970 ;;Total ram usage:        1 bytes
  8971 ;; Hardware stack levels used:    1
  8972 ;; Hardware stack levels required when called:    9
  8973 ;; This function calls:
  8974 ;;		__lcd_Port
  8975 ;;		_lcd_sendCommand
  8976 ;; This function is called by:
  8977 ;;		_main
  8978 ;; This function uses a non-reentrant model
  8979 ;;
  8980                           
  8981                           	psect	text24
  8982  00542A                     __ptext24:
  8983                           	opt stack 0
  8984  00542A                     _lcd_init:
  8985                           	opt stack 21
  8986                           
  8987                           ;lcd.c: 41: _lcd_Port(0x00);
  8988                           
  8989                           ;incstack = 0
  8990  00542A  0E00               	movlw	0
  8991  00542C  EC70  F02C         	call	__lcd_Port
  8992                           
  8993                           ;lcd.c: 42: _delay((unsigned long)((20)*(16000000UL/4000.0)));
  8994  005430  0E68               	movlw	104
  8995  005432  0100               	movlb	0	; () banked
  8996  005434  6F93               	movwf	??_lcd_init& (0+255),b
  8997  005436  0EE4               	movlw	228
  8998  005438                     u16967:
  8999  005438  2EE8               	decfsz	wreg,f,c
  9000  00543A  D7FE               	goto	u16967
  9001  00543C  2F93               	decfsz	??_lcd_init& (0+255),f,b
  9002  00543E  D7FC               	goto	u16967
  9003  005440  D000               	nop2	
  9004                           
  9005                           ;lcd.c: 43: lcd_sendCommand(0x03);
  9006  005442  0E03               	movlw	3
  9007  005444  EC03  F02D         	call	_lcd_sendCommand
  9008                           
  9009                           ;lcd.c: 44: _delay((unsigned long)((5)*(16000000UL/4000.0)));
  9010  005448  0E1A               	movlw	26
  9011  00544A  0100               	movlb	0	; () banked
  9012  00544C  6F93               	movwf	??_lcd_init& (0+255),b
  9013  00544E  0EF8               	movlw	248
  9014  005450                     u16977:
  9015  005450  2EE8               	decfsz	wreg,f,c
  9016  005452  D7FE               	goto	u16977
  9017  005454  2F93               	decfsz	??_lcd_init& (0+255),f,b
  9018  005456  D7FC               	goto	u16977
  9019  005458  D000               	nop2	
  9020                           
  9021                           ;lcd.c: 45: lcd_sendCommand(0x03);
  9022  00545A  0E03               	movlw	3
  9023  00545C  EC03  F02D         	call	_lcd_sendCommand
  9024                           
  9025                           ;lcd.c: 46: _delay((unsigned long)((11)*(16000000UL/4000.0)));
  9026  005460  0E3A               	movlw	58
  9027  005462  0100               	movlb	0	; () banked
  9028  005464  6F93               	movwf	??_lcd_init& (0+255),b
  9029  005466  0E23               	movlw	35
  9030  005468                     u16987:
  9031  005468  2EE8               	decfsz	wreg,f,c
  9032  00546A  D7FE               	goto	u16987
  9033  00546C  2F93               	decfsz	??_lcd_init& (0+255),f,b
  9034  00546E  D7FC               	goto	u16987
  9035  005470  F000               	nop	
  9036                           
  9037                           ;lcd.c: 47: lcd_sendCommand(0x03);
  9038  005472  0E03               	movlw	3
  9039  005474  EC03  F02D         	call	_lcd_sendCommand
  9040                           
  9041                           ;lcd.c: 49: lcd_sendCommand(0x02);
  9042  005478  0E02               	movlw	2
  9043  00547A  EC03  F02D         	call	_lcd_sendCommand
  9044                           
  9045                           ;lcd.c: 50: lcd_sendCommand(0x02);
  9046  00547E  0E02               	movlw	2
  9047  005480  EC03  F02D         	call	_lcd_sendCommand
  9048                           
  9049                           ;lcd.c: 51: lcd_sendCommand(0x08);
  9050  005484  0E08               	movlw	8
  9051  005486  EC03  F02D         	call	_lcd_sendCommand
  9052                           
  9053                           ;lcd.c: 52: lcd_sendCommand(0x00);
  9054  00548A  0E00               	movlw	0
  9055  00548C  EC03  F02D         	call	_lcd_sendCommand
  9056                           
  9057                           ;lcd.c: 53: lcd_sendCommand(0x0C);
  9058  005490  0E0C               	movlw	12
  9059  005492  EC03  F02D         	call	_lcd_sendCommand
  9060                           
  9061                           ;lcd.c: 54: lcd_sendCommand(0x00);
  9062  005496  0E00               	movlw	0
  9063  005498  EC03  F02D         	call	_lcd_sendCommand
  9064                           
  9065                           ;lcd.c: 55: lcd_sendCommand(0x06);
  9066  00549C  0E06               	movlw	6
  9067  00549E  EC03  F02D         	call	_lcd_sendCommand
  9068  0054A2  0012               	return		;funcret
  9069  0054A4                     __end_of_lcd_init:
  9070                           	opt stack 0
  9071                           tosu	equ	0xFFF
  9072                           tosh	equ	0xFFE
  9073                           tosl	equ	0xFFD
  9074                           pclath	equ	0xFFA
  9075                           tblptru	equ	0xFF8
  9076                           tblptrh	equ	0xFF7
  9077                           tblptrl	equ	0xFF6
  9078                           tablat	equ	0xFF5
  9079                           prodh	equ	0xFF4
  9080                           prodl	equ	0xFF3
  9081                           intcon	equ	0xFF2
  9082                           postinc0	equ	0xFEE
  9083                           wreg	equ	0xFE8
  9084                           postdec1	equ	0xFE5
  9085                           fsr1l	equ	0xFE1
  9086                           indf2	equ	0xFDF
  9087                           postinc2	equ	0xFDE
  9088                           postdec2	equ	0xFDD
  9089                           fsr2h	equ	0xFDA
  9090                           fsr2l	equ	0xFD9
  9091                           status	equ	0xFD8
  9092                           
  9093 ;; *************** function _lcd_clear *****************
  9094 ;; Defined at:
  9095 ;;		line 12 in file "lcd.c"
  9096 ;; Parameters:    Size  Location     Type
  9097 ;;		None
  9098 ;; Auto vars:     Size  Location     Type
  9099 ;;		None
  9100 ;; Return value:  Size  Location     Type
  9101 ;;                  1    wreg      void 
  9102 ;; Registers used:
  9103 ;;		wreg, status,2, cstack
  9104 ;; Tracked objects:
  9105 ;;		On entry : 0/0
  9106 ;;		On exit  : 0/0
  9107 ;;		Unchanged: 0/0
  9108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9109 ;;      Params:         0       0       0       0       0       0       0
  9110 ;;      Locals:         0       0       0       0       0       0       0
  9111 ;;      Temps:          0       0       0       0       0       0       0
  9112 ;;      Totals:         0       0       0       0       0       0       0
  9113 ;;Total ram usage:        0 bytes
  9114 ;; Hardware stack levels used:    1
  9115 ;; Hardware stack levels required when called:    9
  9116 ;; This function calls:
  9117 ;;		_lcd_sendCommand
  9118 ;; This function is called by:
  9119 ;;		_main
  9120 ;; This function uses a non-reentrant model
  9121 ;;
  9122                           
  9123                           	psect	text25
  9124  005B0A                     __ptext25:
  9125                           	opt stack 0
  9126  005B0A                     _lcd_clear:
  9127                           	opt stack 21
  9128                           
  9129                           ;lcd.c: 14: lcd_sendCommand(0);
  9130                           
  9131                           ;incstack = 0
  9132  005B0A  0E00               	movlw	0
  9133  005B0C  EC03  F02D         	call	_lcd_sendCommand
  9134                           
  9135                           ;lcd.c: 15: lcd_sendCommand(1);
  9136  005B10  0E01               	movlw	1
  9137  005B12  EC03  F02D         	call	_lcd_sendCommand
  9138  005B16  0012               	return		;funcret
  9139  005B18                     __end_of_lcd_clear:
  9140                           	opt stack 0
  9141                           tosu	equ	0xFFF
  9142                           tosh	equ	0xFFE
  9143                           tosl	equ	0xFFD
  9144                           pclath	equ	0xFFA
  9145                           tblptru	equ	0xFF8
  9146                           tblptrh	equ	0xFF7
  9147                           tblptrl	equ	0xFF6
  9148                           tablat	equ	0xFF5
  9149                           prodh	equ	0xFF4
  9150                           prodl	equ	0xFF3
  9151                           intcon	equ	0xFF2
  9152                           postinc0	equ	0xFEE
  9153                           wreg	equ	0xFE8
  9154                           postdec1	equ	0xFE5
  9155                           fsr1l	equ	0xFE1
  9156                           indf2	equ	0xFDF
  9157                           postinc2	equ	0xFDE
  9158                           postdec2	equ	0xFDD
  9159                           fsr2h	equ	0xFDA
  9160                           fsr2l	equ	0xFD9
  9161                           status	equ	0xFD8
  9162                           
  9163 ;; *************** function _lcd_sendCommand *****************
  9164 ;; Defined at:
  9165 ;;		line 3 in file "lcd.c"
  9166 ;; Parameters:    Size  Location     Type
  9167 ;;  a               1    wreg     unsigned char 
  9168 ;; Auto vars:     Size  Location     Type
  9169 ;;  a               1   50[BANK0 ] unsigned char 
  9170 ;; Return value:  Size  Location     Type
  9171 ;;                  1    wreg      void 
  9172 ;; Registers used:
  9173 ;;		wreg, status,2, cstack
  9174 ;; Tracked objects:
  9175 ;;		On entry : 0/0
  9176 ;;		On exit  : 0/0
  9177 ;;		Unchanged: 0/0
  9178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9179 ;;      Params:         0       0       0       0       0       0       0
  9180 ;;      Locals:         0       1       0       0       0       0       0
  9181 ;;      Temps:          0       1       0       0       0       0       0
  9182 ;;      Totals:         0       2       0       0       0       0       0
  9183 ;;Total ram usage:        2 bytes
  9184 ;; Hardware stack levels used:    1
  9185 ;; Hardware stack levels required when called:    8
  9186 ;; This function calls:
  9187 ;;		__lcd_Port
  9188 ;; This function is called by:
  9189 ;;		_lcd_clear
  9190 ;;		_lcd_init
  9191 ;;		_lcd_setPosition
  9192 ;;		_lcd_shiftRight
  9193 ;;		_lcd_shiftLeft
  9194 ;; This function uses a non-reentrant model
  9195 ;;
  9196                           
  9197                           	psect	text26
  9198  005A06                     __ptext26:
  9199                           	opt stack 0
  9200  005A06                     _lcd_sendCommand:
  9201                           	opt stack 21
  9202                           
  9203                           ;incstack = 0
  9204                           ;lcd_sendCommand@a stored from wreg
  9205  005A06  0100               	movlb	0	; () banked
  9206  005A08  6F92               	movwf	lcd_sendCommand@a& (0+255),b
  9207                           
  9208                           ;lcd.c: 5: LATAbits.LA5 = 0;
  9209  005A0A  9A89               	bcf	3977,5,c	;volatile
  9210                           
  9211                           ;lcd.c: 6: _lcd_Port(a);
  9212  005A0C  0100               	movlb	0	; () banked
  9213  005A0E  5192               	movf	lcd_sendCommand@a& (0+255),w,b
  9214  005A10  EC70  F02C         	call	__lcd_Port
  9215                           
  9216                           ;lcd.c: 7: LATAbits.LA4 = 1;
  9217  005A14  8889               	bsf	3977,4,c	;volatile
  9218                           
  9219                           ;lcd.c: 8: _delay((unsigned long)((4)*(16000000UL/4000.0)));
  9220  005A16  0E15               	movlw	21
  9221  005A18  0100               	movlb	0	; () banked
  9222  005A1A  6F91               	movwf	??_lcd_sendCommand& (0+255),b
  9223  005A1C  0EC6               	movlw	198
  9224  005A1E                     u16997:
  9225  005A1E  2EE8               	decfsz	wreg,f,c
  9226  005A20  D7FE               	goto	u16997
  9227  005A22  2F91               	decfsz	??_lcd_sendCommand& (0+255),f,b
  9228  005A24  D7FC               	goto	u16997
  9229  005A26  D000               	nop2	
  9230                           
  9231                           ;lcd.c: 9: LATAbits.LA4 = 0;
  9232  005A28  9889               	bcf	3977,4,c	;volatile
  9233  005A2A  0012               	return		;funcret
  9234  005A2C                     __end_of_lcd_sendCommand:
  9235                           	opt stack 0
  9236                           tosu	equ	0xFFF
  9237                           tosh	equ	0xFFE
  9238                           tosl	equ	0xFFD
  9239                           pclath	equ	0xFFA
  9240                           tblptru	equ	0xFF8
  9241                           tblptrh	equ	0xFF7
  9242                           tblptrl	equ	0xFF6
  9243                           tablat	equ	0xFF5
  9244                           prodh	equ	0xFF4
  9245                           prodl	equ	0xFF3
  9246                           intcon	equ	0xFF2
  9247                           postinc0	equ	0xFEE
  9248                           wreg	equ	0xFE8
  9249                           postdec1	equ	0xFE5
  9250                           fsr1l	equ	0xFE1
  9251                           indf2	equ	0xFDF
  9252                           postinc2	equ	0xFDE
  9253                           postdec2	equ	0xFDD
  9254                           fsr2h	equ	0xFDA
  9255                           fsr2l	equ	0xFD9
  9256                           status	equ	0xFD8
  9257                           
  9258 ;; *************** function __lcd_Port *****************
  9259 ;; Defined at:
  9260 ;;		line 139 in file "lcd.c"
  9261 ;; Parameters:    Size  Location     Type
  9262 ;;  a               1    wreg     unsigned char 
  9263 ;; Auto vars:     Size  Location     Type
  9264 ;;  a               1   48[BANK0 ] unsigned char 
  9265 ;; Return value:  Size  Location     Type
  9266 ;;                  1    wreg      void 
  9267 ;; Registers used:
  9268 ;;		wreg
  9269 ;; Tracked objects:
  9270 ;;		On entry : 0/0
  9271 ;;		On exit  : 0/0
  9272 ;;		Unchanged: 0/0
  9273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9274 ;;      Params:         0       0       0       0       0       0       0
  9275 ;;      Locals:         0       1       0       0       0       0       0
  9276 ;;      Temps:          0       0       0       0       0       0       0
  9277 ;;      Totals:         0       1       0       0       0       0       0
  9278 ;;Total ram usage:        1 bytes
  9279 ;; Hardware stack levels used:    1
  9280 ;; Hardware stack levels required when called:    7
  9281 ;; This function calls:
  9282 ;;		Nothing
  9283 ;; This function is called by:
  9284 ;;		_lcd_sendCommand
  9285 ;;		_lcd_init
  9286 ;;		_lcd_sendChar
  9287 ;; This function uses a non-reentrant model
  9288 ;;
  9289                           
  9290                           	psect	text27
  9291  0058E0                     __ptext27:
  9292                           	opt stack 0
  9293  0058E0                     __lcd_Port:
  9294                           	opt stack 21
  9295                           
  9296                           ;incstack = 0
  9297                           ;__lcd_Port@a stored from wreg
  9298  0058E0  0100               	movlb	0	; () banked
  9299  0058E2  6F90               	movwf	__lcd_Port@a& (0+255),b
  9300                           
  9301                           ;lcd.c: 141: if(a & 1)
  9302  0058E4  0100               	movlb	0	; () banked
  9303  0058E6  A190               	btfss	__lcd_Port@a& (0+255),0,b
  9304  0058E8  D002               	goto	l332
  9305                           
  9306                           ; BSR set to: 0
  9307                           ;lcd.c: 142: LATAbits.LA3 = 1;
  9308  0058EA  8689               	bsf	3977,3,c	;volatile
  9309  0058EC  D001               	goto	l4415
  9310  0058EE                     l332:
  9311                           
  9312                           ; BSR set to: 0
  9313                           ;lcd.c: 143: else
  9314                           ;lcd.c: 144: LATAbits.LA3 = 0;
  9315  0058EE  9689               	bcf	3977,3,c	;volatile
  9316  0058F0                     l4415:
  9317                           
  9318                           ; BSR set to: 0
  9319                           ;lcd.c: 146: if(a & 2)
  9320  0058F0  0100               	movlb	0	; () banked
  9321  0058F2  A390               	btfss	__lcd_Port@a& (0+255),1,b
  9322  0058F4  D002               	goto	l334
  9323                           
  9324                           ; BSR set to: 0
  9325                           ;lcd.c: 147: LATAbits.LA2 = 1;
  9326  0058F6  8489               	bsf	3977,2,c	;volatile
  9327  0058F8  D001               	goto	l4419
  9328  0058FA                     l334:
  9329                           
  9330                           ; BSR set to: 0
  9331                           ;lcd.c: 148: else
  9332                           ;lcd.c: 149: LATAbits.LA2 = 0;
  9333  0058FA  9489               	bcf	3977,2,c	;volatile
  9334  0058FC                     l4419:
  9335                           
  9336                           ; BSR set to: 0
  9337                           ;lcd.c: 151: if(a & 4)
  9338  0058FC  0100               	movlb	0	; () banked
  9339  0058FE  A590               	btfss	__lcd_Port@a& (0+255),2,b
  9340  005900  D002               	goto	l336
  9341                           
  9342                           ; BSR set to: 0
  9343                           ;lcd.c: 152: LATAbits.LA1 = 1;
  9344  005902  8289               	bsf	3977,1,c	;volatile
  9345  005904  D001               	goto	l4423
  9346  005906                     l336:
  9347                           
  9348                           ; BSR set to: 0
  9349                           ;lcd.c: 153: else
  9350                           ;lcd.c: 154: LATAbits.LA1 = 0;
  9351  005906  9289               	bcf	3977,1,c	;volatile
  9352  005908                     l4423:
  9353                           
  9354                           ; BSR set to: 0
  9355                           ;lcd.c: 156: if(a & 8)
  9356  005908  0100               	movlb	0	; () banked
  9357  00590A  A790               	btfss	__lcd_Port@a& (0+255),3,b
  9358  00590C  D002               	goto	l338
  9359                           
  9360                           ; BSR set to: 0
  9361                           ;lcd.c: 157: LATAbits.LA0 = 1;
  9362  00590E  8089               	bsf	3977,0,c	;volatile
  9363  005910  0012               	return	
  9364  005912                     l338:
  9365                           
  9366                           ; BSR set to: 0
  9367                           ;lcd.c: 158: else
  9368                           ;lcd.c: 159: LATAbits.LA0 = 0;
  9369  005912  9089               	bcf	3977,0,c	;volatile
  9370  005914  0012               	return	
  9371  005916                     __end_of__lcd_Port:
  9372                           	opt stack 0
  9373                           tosu	equ	0xFFF
  9374                           tosh	equ	0xFFE
  9375                           tosl	equ	0xFFD
  9376                           pclath	equ	0xFFA
  9377                           tblptru	equ	0xFF8
  9378                           tblptrh	equ	0xFF7
  9379                           tblptrl	equ	0xFF6
  9380                           tablat	equ	0xFF5
  9381                           prodh	equ	0xFF4
  9382                           prodl	equ	0xFF3
  9383                           intcon	equ	0xFF2
  9384                           postinc0	equ	0xFEE
  9385                           wreg	equ	0xFE8
  9386                           postdec1	equ	0xFE5
  9387                           fsr1l	equ	0xFE1
  9388                           indf2	equ	0xFDF
  9389                           postinc2	equ	0xFDE
  9390                           postdec2	equ	0xFDD
  9391                           fsr2h	equ	0xFDA
  9392                           fsr2l	equ	0xFD9
  9393                           status	equ	0xFD8
  9394                           
  9395 ;; *************** function ___ftdiv *****************
  9396 ;; Defined at:
  9397 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  9398 ;; Parameters:    Size  Location     Type
  9399 ;;  f1              3   56[BANK0 ] float 
  9400 ;;  f2              3   59[BANK0 ] float 
  9401 ;; Auto vars:     Size  Location     Type
  9402 ;;  f3              3   66[BANK0 ] float 
  9403 ;;  sign            1   70[BANK0 ] unsigned char 
  9404 ;;  exp             1   69[BANK0 ] unsigned char 
  9405 ;;  cntr            1   65[BANK0 ] unsigned char 
  9406 ;; Return value:  Size  Location     Type
  9407 ;;                  3   56[BANK0 ] float 
  9408 ;; Registers used:
  9409 ;;		wreg, status,2, status,0, cstack
  9410 ;; Tracked objects:
  9411 ;;		On entry : 0/0
  9412 ;;		On exit  : 0/0
  9413 ;;		Unchanged: 0/0
  9414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9415 ;;      Params:         0       6       0       0       0       0       0
  9416 ;;      Locals:         0       6       0       0       0       0       0
  9417 ;;      Temps:          0       3       0       0       0       0       0
  9418 ;;      Totals:         0      15       0       0       0       0       0
  9419 ;;Total ram usage:       15 bytes
  9420 ;; Hardware stack levels used:    1
  9421 ;; Hardware stack levels required when called:    8
  9422 ;; This function calls:
  9423 ;;		___ftpack
  9424 ;; This function is called by:
  9425 ;;		_main
  9426 ;; This function uses a non-reentrant model
  9427 ;;
  9428                           
  9429                           	psect	text28
  9430  004414                     __ptext28:
  9431                           	opt stack 0
  9432  004414                     ___ftdiv:
  9433                           	opt stack 22
  9434                           
  9435                           ; BSR set to: 0
  9436                           ;incstack = 0
  9437  004414  C09A  F09E         	movff	___ftdiv@f1+2,??___ftdiv
  9438  004418  0100               	movlb	0	; () banked
  9439  00441A  6B9F               	clrf	(??___ftdiv+1)& (0+255),b
  9440  00441C  6BA0               	clrf	(??___ftdiv+2)& (0+255),b
  9441  00441E  0100               	movlb	0	; () banked
  9442  004420  3599               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  9443  004422  0100               	movlb	0	; () banked
  9444  004424  379E               	rlcf	??___ftdiv& (0+255),f,b
  9445  004426  E301               	bnc	u10861
  9446  004428  819F               	bsf	(??___ftdiv+1)& (0+255),0,b
  9447  00442A                     u10861:
  9448  00442A  0100               	movlb	0	; () banked
  9449  00442C  519E               	movf	??___ftdiv& (0+255),w,b
  9450  00442E  0100               	movlb	0	; () banked
  9451  004430  6FA5               	movwf	___ftdiv@exp& (0+255),b
  9452  004432  0100               	movlb	0	; () banked
  9453  004434  51A5               	movf	___ftdiv@exp& (0+255),w,b
  9454  004436  A4D8               	btfss	status,2,c
  9455  004438  D00A               	goto	l7161
  9456                           
  9457                           ; BSR set to: 0
  9458  00443A  0E00               	movlw	0
  9459  00443C  0100               	movlb	0	; () banked
  9460  00443E  6F98               	movwf	?___ftdiv& (0+255),b
  9461  004440  0E00               	movlw	0
  9462  004442  0100               	movlb	0	; () banked
  9463  004444  6F99               	movwf	(?___ftdiv+1)& (0+255),b
  9464  004446  0E00               	movlw	0
  9465  004448  0100               	movlb	0	; () banked
  9466  00444A  6F9A               	movwf	(?___ftdiv+2)& (0+255),b
  9467                           
  9468                           ; BSR set to: 0
  9469  00444C  0012               	return	
  9470  00444E                     l7161:
  9471                           
  9472                           ; BSR set to: 0
  9473  00444E  C09D  F09E         	movff	___ftdiv@f2+2,??___ftdiv
  9474  004452  0100               	movlb	0	; () banked
  9475  004454  6B9F               	clrf	(??___ftdiv+1)& (0+255),b
  9476  004456  6BA0               	clrf	(??___ftdiv+2)& (0+255),b
  9477  004458  0100               	movlb	0	; () banked
  9478  00445A  359C               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  9479  00445C  0100               	movlb	0	; () banked
  9480  00445E  379E               	rlcf	??___ftdiv& (0+255),f,b
  9481  004460  E301               	bnc	u10881
  9482  004462  819F               	bsf	(??___ftdiv+1)& (0+255),0,b
  9483  004464                     u10881:
  9484  004464  0100               	movlb	0	; () banked
  9485  004466  519E               	movf	??___ftdiv& (0+255),w,b
  9486  004468  0100               	movlb	0	; () banked
  9487  00446A  6FA6               	movwf	___ftdiv@sign& (0+255),b
  9488  00446C  0100               	movlb	0	; () banked
  9489  00446E  51A6               	movf	___ftdiv@sign& (0+255),w,b
  9490  004470  A4D8               	btfss	status,2,c
  9491  004472  D00A               	goto	l7167
  9492                           
  9493                           ; BSR set to: 0
  9494  004474  0E00               	movlw	0
  9495  004476  0100               	movlb	0	; () banked
  9496  004478  6F98               	movwf	?___ftdiv& (0+255),b
  9497  00447A  0E00               	movlw	0
  9498  00447C  0100               	movlb	0	; () banked
  9499  00447E  6F99               	movwf	(?___ftdiv+1)& (0+255),b
  9500  004480  0E00               	movlw	0
  9501  004482  0100               	movlb	0	; () banked
  9502  004484  6F9A               	movwf	(?___ftdiv+2)& (0+255),b
  9503                           
  9504                           ; BSR set to: 0
  9505  004486  0012               	return	
  9506  004488                     l7167:
  9507                           
  9508                           ; BSR set to: 0
  9509  004488  0E00               	movlw	0
  9510  00448A  0100               	movlb	0	; () banked
  9511  00448C  6FA2               	movwf	___ftdiv@f3& (0+255),b
  9512  00448E  0E00               	movlw	0
  9513  004490  0100               	movlb	0	; () banked
  9514  004492  6FA3               	movwf	(___ftdiv@f3+1)& (0+255),b
  9515  004494  0E00               	movlw	0
  9516  004496  0100               	movlb	0	; () banked
  9517  004498  6FA4               	movwf	(___ftdiv@f3+2)& (0+255),b
  9518                           
  9519                           ; BSR set to: 0
  9520  00449A  0100               	movlb	0	; () banked
  9521  00449C  51A6               	movf	___ftdiv@sign& (0+255),w,b
  9522  00449E  0F89               	addlw	137
  9523  0044A0  0100               	movlb	0	; () banked
  9524  0044A2  5FA5               	subwf	___ftdiv@exp& (0+255),f,b
  9525                           
  9526                           ; BSR set to: 0
  9527  0044A4  C09A  F0A6         	movff	___ftdiv@f1+2,___ftdiv@sign
  9528                           
  9529                           ; BSR set to: 0
  9530  0044A8  0100               	movlb	0	; () banked
  9531  0044AA  519D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9532  0044AC  0100               	movlb	0	; () banked
  9533  0044AE  1BA6               	xorwf	___ftdiv@sign& (0+255),f,b
  9534                           
  9535                           ; BSR set to: 0
  9536  0044B0  0E80               	movlw	128
  9537  0044B2  0100               	movlb	0	; () banked
  9538  0044B4  17A6               	andwf	___ftdiv@sign& (0+255),f,b
  9539                           
  9540                           ; BSR set to: 0
  9541  0044B6  0100               	movlb	0	; () banked
  9542  0044B8  8F99               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  9543                           
  9544                           ; BSR set to: 0
  9545  0044BA  0EFF               	movlw	255
  9546  0044BC  0100               	movlb	0	; () banked
  9547  0044BE  1798               	andwf	___ftdiv@f1& (0+255),f,b
  9548  0044C0  0EFF               	movlw	255
  9549  0044C2  0100               	movlb	0	; () banked
  9550  0044C4  1799               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  9551  0044C6  0E00               	movlw	0
  9552  0044C8  0100               	movlb	0	; () banked
  9553  0044CA  179A               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  9554                           
  9555                           ; BSR set to: 0
  9556  0044CC  0100               	movlb	0	; () banked
  9557  0044CE  8F9C               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  9558                           
  9559                           ; BSR set to: 0
  9560  0044D0  0EFF               	movlw	255
  9561  0044D2  0100               	movlb	0	; () banked
  9562  0044D4  179B               	andwf	___ftdiv@f2& (0+255),f,b
  9563  0044D6  0EFF               	movlw	255
  9564  0044D8  0100               	movlb	0	; () banked
  9565  0044DA  179C               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  9566  0044DC  0E00               	movlw	0
  9567  0044DE  0100               	movlb	0	; () banked
  9568  0044E0  179D               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  9569                           
  9570                           ; BSR set to: 0
  9571  0044E2  0E18               	movlw	24
  9572  0044E4  0100               	movlb	0	; () banked
  9573  0044E6  6FA1               	movwf	___ftdiv@cntr& (0+255),b
  9574  0044E8                     l7187:
  9575                           
  9576                           ; BSR set to: 0
  9577  0044E8  0100               	movlb	0	; () banked
  9578  0044EA  90D8               	bcf	status,0,c
  9579  0044EC  37A2               	rlcf	___ftdiv@f3& (0+255),f,b
  9580  0044EE  37A3               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  9581  0044F0  37A4               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  9582                           
  9583                           ; BSR set to: 0
  9584  0044F2  0100               	movlb	0	; () banked
  9585  0044F4  519B               	movf	___ftdiv@f2& (0+255),w,b
  9586  0044F6  0100               	movlb	0	; () banked
  9587  0044F8  5D98               	subwf	___ftdiv@f1& (0+255),w,b
  9588  0044FA  0100               	movlb	0	; () banked
  9589  0044FC  519C               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9590  0044FE  0100               	movlb	0	; () banked
  9591  004500  5999               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  9592  004502  0100               	movlb	0	; () banked
  9593  004504  519D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9594  004506  0100               	movlb	0	; () banked
  9595  004508  599A               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  9596  00450A  A0D8               	btfss	status,0,c
  9597  00450C  D00E               	goto	l814
  9598                           
  9599                           ; BSR set to: 0
  9600  00450E  0100               	movlb	0	; () banked
  9601  004510  519B               	movf	___ftdiv@f2& (0+255),w,b
  9602  004512  0100               	movlb	0	; () banked
  9603  004514  5F98               	subwf	___ftdiv@f1& (0+255),f,b
  9604  004516  0100               	movlb	0	; () banked
  9605  004518  519C               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9606  00451A  0100               	movlb	0	; () banked
  9607  00451C  5B99               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  9608  00451E  0100               	movlb	0	; () banked
  9609  004520  519D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9610  004522  0100               	movlb	0	; () banked
  9611  004524  5B9A               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  9612                           
  9613                           ; BSR set to: 0
  9614  004526  0100               	movlb	0	; () banked
  9615  004528  81A2               	bsf	___ftdiv@f3& (0+255),0,b
  9616  00452A                     l814:
  9617                           
  9618                           ; BSR set to: 0
  9619  00452A  0100               	movlb	0	; () banked
  9620  00452C  90D8               	bcf	status,0,c
  9621  00452E  3798               	rlcf	___ftdiv@f1& (0+255),f,b
  9622  004530  3799               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  9623  004532  379A               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  9624                           
  9625                           ; BSR set to: 0
  9626  004534  0100               	movlb	0	; () banked
  9627  004536  2FA1               	decfsz	___ftdiv@cntr& (0+255),f,b
  9628  004538  D7D7               	goto	l7187
  9629                           
  9630                           ; BSR set to: 0
  9631                           
  9632                           ; BSR set to: 0
  9633  00453A  C0A2  F090         	movff	___ftdiv@f3,___ftpack@arg
  9634  00453E  C0A3  F091         	movff	___ftdiv@f3+1,___ftpack@arg+1
  9635  004542  C0A4  F092         	movff	___ftdiv@f3+2,___ftpack@arg+2
  9636  004546  C0A5  F093         	movff	___ftdiv@exp,___ftpack@exp
  9637  00454A  C0A6  F094         	movff	___ftdiv@sign,___ftpack@sign
  9638  00454E  EC09  F025         	call	___ftpack	;wreg free
  9639  004552  C090  F098         	movff	?___ftpack,?___ftdiv
  9640  004556  C091  F099         	movff	?___ftpack+1,?___ftdiv+1
  9641  00455A  C092  F09A         	movff	?___ftpack+2,?___ftdiv+2
  9642  00455E  0012               	return	
  9643  004560                     __end_of___ftdiv:
  9644                           	opt stack 0
  9645                           tosu	equ	0xFFF
  9646                           tosh	equ	0xFFE
  9647                           tosl	equ	0xFFD
  9648                           pclath	equ	0xFFA
  9649                           tblptru	equ	0xFF8
  9650                           tblptrh	equ	0xFF7
  9651                           tblptrl	equ	0xFF6
  9652                           tablat	equ	0xFF5
  9653                           prodh	equ	0xFF4
  9654                           prodl	equ	0xFF3
  9655                           intcon	equ	0xFF2
  9656                           postinc0	equ	0xFEE
  9657                           wreg	equ	0xFE8
  9658                           postdec1	equ	0xFE5
  9659                           fsr1l	equ	0xFE1
  9660                           indf2	equ	0xFDF
  9661                           postinc2	equ	0xFDE
  9662                           postdec2	equ	0xFDD
  9663                           fsr2h	equ	0xFDA
  9664                           fsr2l	equ	0xFD9
  9665                           status	equ	0xFD8
  9666                           
  9667 ;; *************** function ___ftpack *****************
  9668 ;; Defined at:
  9669 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  9670 ;; Parameters:    Size  Location     Type
  9671 ;;  arg             3   48[BANK0 ] unsigned um
  9672 ;;  exp             1   51[BANK0 ] unsigned char 
  9673 ;;  sign            1   52[BANK0 ] unsigned char 
  9674 ;; Auto vars:     Size  Location     Type
  9675 ;;		None
  9676 ;; Return value:  Size  Location     Type
  9677 ;;                  3   48[BANK0 ] float 
  9678 ;; Registers used:
  9679 ;;		wreg, status,2, status,0
  9680 ;; Tracked objects:
  9681 ;;		On entry : 0/0
  9682 ;;		On exit  : 0/0
  9683 ;;		Unchanged: 0/0
  9684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9685 ;;      Params:         0       5       0       0       0       0       0
  9686 ;;      Locals:         0       0       0       0       0       0       0
  9687 ;;      Temps:          0       3       0       0       0       0       0
  9688 ;;      Totals:         0       8       0       0       0       0       0
  9689 ;;Total ram usage:        8 bytes
  9690 ;; Hardware stack levels used:    1
  9691 ;; Hardware stack levels required when called:    7
  9692 ;; This function calls:
  9693 ;;		Nothing
  9694 ;; This function is called by:
  9695 ;;		___ftadd
  9696 ;;		___ftdiv
  9697 ;;		___ftmul
  9698 ;;		___lltoft
  9699 ;; This function uses a non-reentrant model
  9700 ;;
  9701                           
  9702                           	psect	text29
  9703  004A12                     __ptext29:
  9704                           	opt stack 0
  9705  004A12                     ___ftpack:
  9706                           	opt stack 19
  9707                           
  9708                           ;incstack = 0
  9709  004A12  0100               	movlb	0	; () banked
  9710  004A14  5193               	movf	___ftpack@exp& (0+255),w,b
  9711  004A16  0100               	movlb	0	; () banked
  9712  004A18  B4D8               	btfsc	status,2,c
  9713  004A1A  D008               	goto	l5927
  9714                           
  9715                           ; BSR set to: 0
  9716  004A1C  0100               	movlb	0	; () banked
  9717  004A1E  5190               	movf	___ftpack@arg& (0+255),w,b
  9718  004A20  0100               	movlb	0	; () banked
  9719  004A22  1191               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  9720  004A24  0100               	movlb	0	; () banked
  9721  004A26  1192               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  9722  004A28  A4D8               	btfss	status,2,c
  9723  004A2A  D011               	goto	l5933
  9724  004A2C                     l5927:
  9725                           
  9726                           ; BSR set to: 0
  9727  004A2C  0E00               	movlw	0
  9728  004A2E  0100               	movlb	0	; () banked
  9729  004A30  6F90               	movwf	?___ftpack& (0+255),b
  9730  004A32  0E00               	movlw	0
  9731  004A34  0100               	movlb	0	; () banked
  9732  004A36  6F91               	movwf	(?___ftpack+1)& (0+255),b
  9733  004A38  0E00               	movlw	0
  9734  004A3A  0100               	movlb	0	; () banked
  9735  004A3C  6F92               	movwf	(?___ftpack+2)& (0+255),b
  9736                           
  9737                           ; BSR set to: 0
  9738  004A3E  0012               	return	
  9739  004A40                     l5931:
  9740                           
  9741                           ; BSR set to: 0
  9742  004A40  0100               	movlb	0	; () banked
  9743  004A42  2B93               	incf	___ftpack@exp& (0+255),f,b
  9744  004A44  0100               	movlb	0	; () banked
  9745  004A46  90D8               	bcf	status,0,c
  9746  004A48  3392               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9747  004A4A  3391               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9748  004A4C  3390               	rrcf	___ftpack@arg& (0+255),f,b
  9749  004A4E                     l5933:
  9750                           
  9751                           ; BSR set to: 0
  9752  004A4E  0E00               	movlw	0
  9753  004A50  0100               	movlb	0	; () banked
  9754  004A52  1590               	andwf	___ftpack@arg& (0+255),w,b
  9755  004A54  0100               	movlb	0	; () banked
  9756  004A56  6F95               	movwf	??___ftpack& (0+255),b
  9757  004A58  0E00               	movlw	0
  9758  004A5A  0100               	movlb	0	; () banked
  9759  004A5C  1591               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9760  004A5E  0100               	movlb	0	; () banked
  9761  004A60  6F96               	movwf	(??___ftpack+1)& (0+255),b
  9762  004A62  0EFE               	movlw	254
  9763  004A64  0100               	movlb	0	; () banked
  9764  004A66  1592               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9765  004A68  0100               	movlb	0	; () banked
  9766  004A6A  6F97               	movwf	(??___ftpack+2)& (0+255),b
  9767  004A6C  0100               	movlb	0	; () banked
  9768  004A6E  5195               	movf	??___ftpack& (0+255),w,b
  9769  004A70  0100               	movlb	0	; () banked
  9770  004A72  1196               	iorwf	(??___ftpack+1)& (0+255),w,b
  9771  004A74  0100               	movlb	0	; () banked
  9772  004A76  1197               	iorwf	(??___ftpack+2)& (0+255),w,b
  9773  004A78  B4D8               	btfsc	status,2,c
  9774  004A7A  D011               	goto	l5939
  9775  004A7C  D7E1               	goto	l5931
  9776  004A7E                     l5935:
  9777                           
  9778                           ; BSR set to: 0
  9779  004A7E  0100               	movlb	0	; () banked
  9780  004A80  2B93               	incf	___ftpack@exp& (0+255),f,b
  9781                           
  9782                           ; BSR set to: 0
  9783  004A82  0E01               	movlw	1
  9784  004A84  0100               	movlb	0	; () banked
  9785  004A86  2790               	addwf	___ftpack@arg& (0+255),f,b
  9786  004A88  0E00               	movlw	0
  9787  004A8A  0100               	movlb	0	; () banked
  9788  004A8C  2391               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  9789  004A8E  0E00               	movlw	0
  9790  004A90  0100               	movlb	0	; () banked
  9791  004A92  2392               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  9792  004A94  0100               	movlb	0	; () banked
  9793  004A96  90D8               	bcf	status,0,c
  9794  004A98  3392               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9795  004A9A  3391               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9796  004A9C  3390               	rrcf	___ftpack@arg& (0+255),f,b
  9797  004A9E                     l5939:
  9798                           
  9799                           ; BSR set to: 0
  9800  004A9E  0E00               	movlw	0
  9801  004AA0  0100               	movlb	0	; () banked
  9802  004AA2  1590               	andwf	___ftpack@arg& (0+255),w,b
  9803  004AA4  0100               	movlb	0	; () banked
  9804  004AA6  6F95               	movwf	??___ftpack& (0+255),b
  9805  004AA8  0E00               	movlw	0
  9806  004AAA  0100               	movlb	0	; () banked
  9807  004AAC  1591               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9808  004AAE  0100               	movlb	0	; () banked
  9809  004AB0  6F96               	movwf	(??___ftpack+1)& (0+255),b
  9810  004AB2  0EFF               	movlw	255
  9811  004AB4  0100               	movlb	0	; () banked
  9812  004AB6  1592               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9813  004AB8  0100               	movlb	0	; () banked
  9814  004ABA  6F97               	movwf	(??___ftpack+2)& (0+255),b
  9815  004ABC  0100               	movlb	0	; () banked
  9816  004ABE  5195               	movf	??___ftpack& (0+255),w,b
  9817  004AC0  0100               	movlb	0	; () banked
  9818  004AC2  1196               	iorwf	(??___ftpack+1)& (0+255),w,b
  9819  004AC4  0100               	movlb	0	; () banked
  9820  004AC6  1197               	iorwf	(??___ftpack+2)& (0+255),w,b
  9821  004AC8  B4D8               	btfsc	status,2,c
  9822  004ACA  D008               	goto	l5943
  9823  004ACC  D7D8               	goto	l5935
  9824  004ACE                     l5941:
  9825                           
  9826                           ; BSR set to: 0
  9827  004ACE  0100               	movlb	0	; () banked
  9828  004AD0  0793               	decf	___ftpack@exp& (0+255),f,b
  9829  004AD2  0100               	movlb	0	; () banked
  9830  004AD4  90D8               	bcf	status,0,c
  9831  004AD6  3790               	rlcf	___ftpack@arg& (0+255),f,b
  9832  004AD8  3791               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  9833  004ADA  3792               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  9834  004ADC                     l5943:
  9835                           
  9836                           ; BSR set to: 0
  9837  004ADC  0100               	movlb	0	; () banked
  9838  004ADE  BF91               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  9839  004AE0  D004               	goto	l756
  9840                           
  9841                           ; BSR set to: 0
  9842  004AE2  0E02               	movlw	2
  9843  004AE4  0100               	movlb	0	; () banked
  9844  004AE6  6193               	cpfslt	___ftpack@exp& (0+255),b
  9845  004AE8  D7F2               	goto	l5941
  9846  004AEA                     l756:
  9847                           
  9848                           ; BSR set to: 0
  9849  004AEA  0100               	movlb	0	; () banked
  9850  004AEC  B193               	btfsc	___ftpack@exp& (0+255),0,b
  9851  004AEE  D002               	goto	l5949
  9852                           
  9853                           ; BSR set to: 0
  9854  004AF0  0100               	movlb	0	; () banked
  9855  004AF2  9F91               	bcf	(___ftpack@arg+1)& (0+255),7,b
  9856  004AF4                     l5949:
  9857                           
  9858                           ; BSR set to: 0
  9859  004AF4  0100               	movlb	0	; () banked
  9860  004AF6  90D8               	bcf	status,0,c
  9861  004AF8  3393               	rrcf	___ftpack@exp& (0+255),f,b
  9862  004AFA  0100               	movlb	0	; () banked
  9863  004AFC  5193               	movf	___ftpack@exp& (0+255),w,b
  9864  004AFE  0100               	movlb	0	; () banked
  9865  004B00  1392               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  9866                           
  9867                           ; BSR set to: 0
  9868  004B02  0100               	movlb	0	; () banked
  9869  004B04  5194               	movf	___ftpack@sign& (0+255),w,b
  9870  004B06  0100               	movlb	0	; () banked
  9871  004B08  B4D8               	btfsc	status,2,c
  9872  004B0A  D002               	goto	l5955
  9873                           
  9874                           ; BSR set to: 0
  9875  004B0C  0100               	movlb	0	; () banked
  9876  004B0E  8F92               	bsf	(___ftpack@arg+2)& (0+255),7,b
  9877  004B10                     l5955:
  9878                           
  9879                           ; BSR set to: 0
  9880  004B10  C090  F090         	movff	___ftpack@arg,?___ftpack
  9881  004B14  C091  F091         	movff	___ftpack@arg+1,?___ftpack+1
  9882  004B18  C092  F092         	movff	___ftpack@arg+2,?___ftpack+2
  9883  004B1C  0012               	return	
  9884  004B1E                     __end_of___ftpack:
  9885                           	opt stack 0
  9886                           tosu	equ	0xFFF
  9887                           tosh	equ	0xFFE
  9888                           tosl	equ	0xFFD
  9889                           pclath	equ	0xFFA
  9890                           tblptru	equ	0xFF8
  9891                           tblptrh	equ	0xFF7
  9892                           tblptrl	equ	0xFF6
  9893                           tablat	equ	0xFF5
  9894                           prodh	equ	0xFF4
  9895                           prodl	equ	0xFF3
  9896                           intcon	equ	0xFF2
  9897                           postinc0	equ	0xFEE
  9898                           wreg	equ	0xFE8
  9899                           postdec1	equ	0xFE5
  9900                           fsr1l	equ	0xFE1
  9901                           indf2	equ	0xFDF
  9902                           postinc2	equ	0xFDE
  9903                           postdec2	equ	0xFDD
  9904                           fsr2h	equ	0xFDA
  9905                           fsr2l	equ	0xFD9
  9906                           status	equ	0xFD8
  9907                           
  9908 ;; *************** function _SYSTEM_Initialize *****************
  9909 ;; Defined at:
  9910 ;;		line 111 in file "mcc_generated_files/mcc.c"
  9911 ;; Parameters:    Size  Location     Type
  9912 ;;		None
  9913 ;; Auto vars:     Size  Location     Type
  9914 ;;		None
  9915 ;; Return value:  Size  Location     Type
  9916 ;;                  1    wreg      void 
  9917 ;; Registers used:
  9918 ;;		wreg, status,2, status,0, cstack
  9919 ;; Tracked objects:
  9920 ;;		On entry : 0/0
  9921 ;;		On exit  : 0/0
  9922 ;;		Unchanged: 0/0
  9923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9924 ;;      Params:         0       0       0       0       0       0       0
  9925 ;;      Locals:         0       0       0       0       0       0       0
  9926 ;;      Temps:          0       0       0       0       0       0       0
  9927 ;;      Totals:         0       0       0       0       0       0       0
  9928 ;;Total ram usage:        0 bytes
  9929 ;; Hardware stack levels used:    1
  9930 ;; Hardware stack levels required when called:    9
  9931 ;; This function calls:
  9932 ;;		_EUSART1_Initialize
  9933 ;;		_EXT_INT_Initialize
  9934 ;;		_INTERRUPT_Initialize
  9935 ;;		_OSCILLATOR_Initialize
  9936 ;;		_PIN_MANAGER_Initialize
  9937 ;;		_TMR0_Initialize
  9938 ;; This function is called by:
  9939 ;;		_main
  9940 ;; This function uses a non-reentrant model
  9941 ;;
  9942                           
  9943                           	psect	text30
  9944  005AB8                     __ptext30:
  9945                           	opt stack 0
  9946  005AB8                     _SYSTEM_Initialize:
  9947                           	opt stack 21
  9948                           
  9949                           ;mcc.c: 114: INTERRUPT_Initialize();
  9950                           
  9951                           ; BSR set to: 0
  9952                           ;incstack = 0
  9953  005AB8  ECB3  F02D         	call	_INTERRUPT_Initialize	;wreg free
  9954                           
  9955                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  9956  005ABC  ECBE  F02C         	call	_PIN_MANAGER_Initialize	;wreg free
  9957                           
  9958                           ;mcc.c: 116: OSCILLATOR_Initialize();
  9959  005AC0  EC8C  F02D         	call	_OSCILLATOR_Initialize	;wreg free
  9960                           
  9961                           ;mcc.c: 117: EXT_INT_Initialize();
  9962  005AC4  EC93  F02D         	call	_EXT_INT_Initialize	;wreg free
  9963                           
  9964                           ;mcc.c: 118: TMR0_Initialize();
  9965  005AC8  ECD5  F02B         	call	_TMR0_Initialize	;wreg free
  9966                           
  9967                           ;mcc.c: 119: EUSART1_Initialize();
  9968  005ACC  EC69  F02D         	call	_EUSART1_Initialize	;wreg free
  9969  005AD0  0012               	return		;funcret
  9970  005AD2                     __end_of_SYSTEM_Initialize:
  9971                           	opt stack 0
  9972                           tosu	equ	0xFFF
  9973                           tosh	equ	0xFFE
  9974                           tosl	equ	0xFFD
  9975                           pclath	equ	0xFFA
  9976                           tblptru	equ	0xFF8
  9977                           tblptrh	equ	0xFF7
  9978                           tblptrl	equ	0xFF6
  9979                           tablat	equ	0xFF5
  9980                           prodh	equ	0xFF4
  9981                           prodl	equ	0xFF3
  9982                           intcon	equ	0xFF2
  9983                           postinc0	equ	0xFEE
  9984                           wreg	equ	0xFE8
  9985                           postdec1	equ	0xFE5
  9986                           fsr1l	equ	0xFE1
  9987                           indf2	equ	0xFDF
  9988                           postinc2	equ	0xFDE
  9989                           postdec2	equ	0xFDD
  9990                           fsr2h	equ	0xFDA
  9991                           fsr2l	equ	0xFD9
  9992                           status	equ	0xFD8
  9993                           
  9994 ;; *************** function _TMR0_Initialize *****************
  9995 ;; Defined at:
  9996 ;;		line 19 in file "mcc_generated_files/tmr0.c"
  9997 ;; Parameters:    Size  Location     Type
  9998 ;;		None
  9999 ;; Auto vars:     Size  Location     Type
 10000 ;;		None
 10001 ;; Return value:  Size  Location     Type
 10002 ;;                  1    wreg      void 
 10003 ;; Registers used:
 10004 ;;		wreg, status,2, status,0, cstack
 10005 ;; Tracked objects:
 10006 ;;		On entry : 0/0
 10007 ;;		On exit  : 0/0
 10008 ;;		Unchanged: 0/0
 10009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10010 ;;      Params:         0       0       0       0       0       0       0
 10011 ;;      Locals:         0       0       0       0       0       0       0
 10012 ;;      Temps:          0       2       0       0       0       0       0
 10013 ;;      Totals:         0       2       0       0       0       0       0
 10014 ;;Total ram usage:        2 bytes
 10015 ;; Hardware stack levels used:    1
 10016 ;; Hardware stack levels required when called:    8
 10017 ;; This function calls:
 10018 ;;		_TMR0_SetInterruptHandler
 10019 ;;		_TMR0_StartTimer
 10020 ;; This function is called by:
 10021 ;;		_SYSTEM_Initialize
 10022 ;; This function uses a non-reentrant model
 10023 ;;
 10024                           
 10025                           	psect	text31
 10026  0057AA                     __ptext31:
 10027                           	opt stack 0
 10028  0057AA                     _TMR0_Initialize:
 10029                           	opt stack 21
 10030                           
 10031                           ;tmr0.c: 24: T0CON = 0x11;
 10032                           
 10033                           ;incstack = 0
 10034  0057AA  0E11               	movlw	17
 10035  0057AC  6ED5               	movwf	4053,c	;volatile
 10036                           
 10037                           ;tmr0.c: 27: TMR0H = 0x15;
 10038  0057AE  0E15               	movlw	21
 10039  0057B0  6ED7               	movwf	4055,c	;volatile
 10040                           
 10041                           ;tmr0.c: 30: TMR0L = 0x9F;
 10042  0057B2  0E9F               	movlw	159
 10043  0057B4  6ED6               	movwf	4054,c	;volatile
 10044                           
 10045                           ;tmr0.c: 33: timer0ReloadVal = (TMR0H << 8) | TMR0L;
 10046  0057B6  50D6               	movf	4054,w,c	;volatile
 10047  0057B8  CFD7 F092          	movff	4055,??_TMR0_Initialize	;volatile
 10048  0057BC  0100               	movlb	0	; () banked
 10049  0057BE  6B93               	clrf	(??_TMR0_Initialize+1)& (0+255),b
 10050  0057C0  C092  F093         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 10051  0057C4  0100               	movlb	0	; () banked
 10052  0057C6  6B92               	clrf	??_TMR0_Initialize& (0+255),b
 10053  0057C8  0100               	movlb	0	; () banked
 10054  0057CA  1192               	iorwf	??_TMR0_Initialize& (0+255),w,b
 10055  0057CC  6E5D               	movwf	_timer0ReloadVal,c	;volatile
 10056  0057CE  0100               	movlb	0	; () banked
 10057  0057D0  5193               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
 10058  0057D2  6E5E               	movwf	_timer0ReloadVal+1,c	;volatile
 10059                           
 10060                           ; BSR set to: 0
 10061                           ;tmr0.c: 36: INTCONbits.TMR0IF = 0;
 10062  0057D4  94F2               	bcf	intcon,2,c	;volatile
 10063                           
 10064                           ; BSR set to: 0
 10065                           ;tmr0.c: 39: INTCONbits.TMR0IE = 1;
 10066  0057D6  8AF2               	bsf	intcon,5,c	;volatile
 10067                           
 10068                           ; BSR set to: 0
 10069                           ;tmr0.c: 42: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 10070  0057D8  0E70               	movlw	low _TMR0_DefaultInterruptHandler
 10071  0057DA  0100               	movlb	0	; () banked
 10072  0057DC  6F90               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
 10073  0057DE  0E58               	movlw	high _TMR0_DefaultInterruptHandler
 10074  0057E0  0100               	movlb	0	; () banked
 10075  0057E2  6F91               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 10076  0057E4  ECA0  F02D         	call	_TMR0_SetInterruptHandler	;wreg free
 10077                           
 10078                           ;tmr0.c: 45: TMR0_StartTimer();
 10079  0057E8  ECB1  F02D         	call	_TMR0_StartTimer	;wreg free
 10080  0057EC  0012               	return		;funcret
 10081  0057EE                     __end_of_TMR0_Initialize:
 10082                           	opt stack 0
 10083                           tosu	equ	0xFFF
 10084                           tosh	equ	0xFFE
 10085                           tosl	equ	0xFFD
 10086                           pclath	equ	0xFFA
 10087                           tblptru	equ	0xFF8
 10088                           tblptrh	equ	0xFF7
 10089                           tblptrl	equ	0xFF6
 10090                           tablat	equ	0xFF5
 10091                           prodh	equ	0xFF4
 10092                           prodl	equ	0xFF3
 10093                           intcon	equ	0xFF2
 10094                           postinc0	equ	0xFEE
 10095                           wreg	equ	0xFE8
 10096                           postdec1	equ	0xFE5
 10097                           fsr1l	equ	0xFE1
 10098                           indf2	equ	0xFDF
 10099                           postinc2	equ	0xFDE
 10100                           postdec2	equ	0xFDD
 10101                           fsr2h	equ	0xFDA
 10102                           fsr2l	equ	0xFD9
 10103                           status	equ	0xFD8
 10104                           
 10105 ;; *************** function _TMR0_StartTimer *****************
 10106 ;; Defined at:
 10107 ;;		line 48 in file "mcc_generated_files/tmr0.c"
 10108 ;; Parameters:    Size  Location     Type
 10109 ;;		None
 10110 ;; Auto vars:     Size  Location     Type
 10111 ;;		None
 10112 ;; Return value:  Size  Location     Type
 10113 ;;                  1    wreg      void 
 10114 ;; Registers used:
 10115 ;;		None
 10116 ;; Tracked objects:
 10117 ;;		On entry : 0/0
 10118 ;;		On exit  : 0/0
 10119 ;;		Unchanged: 0/0
 10120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10121 ;;      Params:         0       0       0       0       0       0       0
 10122 ;;      Locals:         0       0       0       0       0       0       0
 10123 ;;      Temps:          0       0       0       0       0       0       0
 10124 ;;      Totals:         0       0       0       0       0       0       0
 10125 ;;Total ram usage:        0 bytes
 10126 ;; Hardware stack levels used:    1
 10127 ;; Hardware stack levels required when called:    7
 10128 ;; This function calls:
 10129 ;;		Nothing
 10130 ;; This function is called by:
 10131 ;;		_TMR0_Initialize
 10132 ;; This function uses a non-reentrant model
 10133 ;;
 10134                           
 10135                           	psect	text32
 10136  005B62                     __ptext32:
 10137                           	opt stack 0
 10138  005B62                     _TMR0_StartTimer:
 10139                           	opt stack 21
 10140                           
 10141                           ;tmr0.c: 51: T0CONbits.TMR0ON = 1;
 10142                           
 10143                           ;incstack = 0
 10144  005B62  8ED5               	bsf	4053,7,c	;volatile
 10145  005B64  0012               	return		;funcret
 10146  005B66                     __end_of_TMR0_StartTimer:
 10147                           	opt stack 0
 10148                           tosu	equ	0xFFF
 10149                           tosh	equ	0xFFE
 10150                           tosl	equ	0xFFD
 10151                           pclath	equ	0xFFA
 10152                           tblptru	equ	0xFF8
 10153                           tblptrh	equ	0xFF7
 10154                           tblptrl	equ	0xFF6
 10155                           tablat	equ	0xFF5
 10156                           prodh	equ	0xFF4
 10157                           prodl	equ	0xFF3
 10158                           intcon	equ	0xFF2
 10159                           postinc0	equ	0xFEE
 10160                           wreg	equ	0xFE8
 10161                           postdec1	equ	0xFE5
 10162                           fsr1l	equ	0xFE1
 10163                           indf2	equ	0xFDF
 10164                           postinc2	equ	0xFDE
 10165                           postdec2	equ	0xFDD
 10166                           fsr2h	equ	0xFDA
 10167                           fsr2l	equ	0xFD9
 10168                           status	equ	0xFD8
 10169                           
 10170 ;; *************** function _TMR0_SetInterruptHandler *****************
 10171 ;; Defined at:
 10172 ;;		line 106 in file "mcc_generated_files/tmr0.c"
 10173 ;; Parameters:    Size  Location     Type
 10174 ;;  InterruptHan    2   48[BANK0 ] PTR void 
 10175 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 10176 ;; Auto vars:     Size  Location     Type
 10177 ;;		None
 10178 ;; Return value:  Size  Location     Type
 10179 ;;                  1    wreg      void 
 10180 ;; Registers used:
 10181 ;;		wreg, status,2, status,0
 10182 ;; Tracked objects:
 10183 ;;		On entry : 0/0
 10184 ;;		On exit  : 0/0
 10185 ;;		Unchanged: 0/0
 10186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10187 ;;      Params:         0       2       0       0       0       0       0
 10188 ;;      Locals:         0       0       0       0       0       0       0
 10189 ;;      Temps:          0       0       0       0       0       0       0
 10190 ;;      Totals:         0       2       0       0       0       0       0
 10191 ;;Total ram usage:        2 bytes
 10192 ;; Hardware stack levels used:    1
 10193 ;; Hardware stack levels required when called:    7
 10194 ;; This function calls:
 10195 ;;		Nothing
 10196 ;; This function is called by:
 10197 ;;		_TMR0_Initialize
 10198 ;; This function uses a non-reentrant model
 10199 ;;
 10200                           
 10201                           	psect	text33
 10202  005B40                     __ptext33:
 10203                           	opt stack 0
 10204  005B40                     _TMR0_SetInterruptHandler:
 10205                           	opt stack 21
 10206                           
 10207                           ;tmr0.c: 107: TMR0_InterruptHandler = InterruptHandler;
 10208                           
 10209                           ;incstack = 0
 10210  005B40  C090  F0CC         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 10211  005B44  C091  F0CD         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 10212  005B48  0012               	return		;funcret
 10213  005B4A                     __end_of_TMR0_SetInterruptHandler:
 10214                           	opt stack 0
 10215                           tosu	equ	0xFFF
 10216                           tosh	equ	0xFFE
 10217                           tosl	equ	0xFFD
 10218                           pclath	equ	0xFFA
 10219                           tblptru	equ	0xFF8
 10220                           tblptrh	equ	0xFF7
 10221                           tblptrl	equ	0xFF6
 10222                           tablat	equ	0xFF5
 10223                           prodh	equ	0xFF4
 10224                           prodl	equ	0xFF3
 10225                           intcon	equ	0xFF2
 10226                           postinc0	equ	0xFEE
 10227                           wreg	equ	0xFE8
 10228                           postdec1	equ	0xFE5
 10229                           fsr1l	equ	0xFE1
 10230                           indf2	equ	0xFDF
 10231                           postinc2	equ	0xFDE
 10232                           postdec2	equ	0xFDD
 10233                           fsr2h	equ	0xFDA
 10234                           fsr2l	equ	0xFD9
 10235                           status	equ	0xFD8
 10236                           
 10237 ;; *************** function _PIN_MANAGER_Initialize *****************
 10238 ;; Defined at:
 10239 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
 10240 ;; Parameters:    Size  Location     Type
 10241 ;;		None
 10242 ;; Auto vars:     Size  Location     Type
 10243 ;;		None
 10244 ;; Return value:  Size  Location     Type
 10245 ;;                  1    wreg      void 
 10246 ;; Registers used:
 10247 ;;		wreg, status,2
 10248 ;; Tracked objects:
 10249 ;;		On entry : 0/0
 10250 ;;		On exit  : 0/0
 10251 ;;		Unchanged: 0/0
 10252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10253 ;;      Params:         0       0       0       0       0       0       0
 10254 ;;      Locals:         0       0       0       0       0       0       0
 10255 ;;      Temps:          0       0       0       0       0       0       0
 10256 ;;      Totals:         0       0       0       0       0       0       0
 10257 ;;Total ram usage:        0 bytes
 10258 ;; Hardware stack levels used:    1
 10259 ;; Hardware stack levels required when called:    7
 10260 ;; This function calls:
 10261 ;;		Nothing
 10262 ;; This function is called by:
 10263 ;;		_SYSTEM_Initialize
 10264 ;; This function uses a non-reentrant model
 10265 ;;
 10266                           
 10267                           	psect	text34
 10268  00597C                     __ptext34:
 10269                           	opt stack 0
 10270  00597C                     _PIN_MANAGER_Initialize:
 10271                           	opt stack 22
 10272                           
 10273                           ;pin_manager.c: 56: LATA = 0x00;
 10274                           
 10275                           ;incstack = 0
 10276  00597C  0E00               	movlw	0
 10277  00597E  6E89               	movwf	3977,c	;volatile
 10278                           
 10279                           ;pin_manager.c: 57: LATB = 0x3C;
 10280  005980  0E3C               	movlw	60
 10281  005982  6E8A               	movwf	3978,c	;volatile
 10282                           
 10283                           ;pin_manager.c: 58: LATC = 0x1F;
 10284  005984  0E1F               	movlw	31
 10285  005986  6E8B               	movwf	3979,c	;volatile
 10286                           
 10287                           ;pin_manager.c: 63: TRISA = 0xC0;
 10288  005988  0EC0               	movlw	192
 10289  00598A  6E92               	movwf	3986,c	;volatile
 10290                           
 10291                           ;pin_manager.c: 64: TRISB = 0xC3;
 10292  00598C  0EC3               	movlw	195
 10293  00598E  6E93               	movwf	3987,c	;volatile
 10294                           
 10295                           ;pin_manager.c: 65: TRISC = 0x20;
 10296  005990  0E20               	movlw	32
 10297  005992  6E94               	movwf	3988,c	;volatile
 10298                           
 10299                           ;pin_manager.c: 70: ANSELC = 0x20;
 10300  005994  0E20               	movlw	32
 10301  005996  010F               	movlb	15	; () banked
 10302  005998  6F3A               	movwf	58,b	;volatile
 10303                           
 10304                           ;pin_manager.c: 71: ANSELB = 0x00;
 10305  00599A  0E00               	movlw	0
 10306  00599C  010F               	movlb	15	; () banked
 10307  00599E  6F39               	movwf	57,b	;volatile
 10308                           
 10309                           ;pin_manager.c: 72: ANSELA = 0x00;
 10310  0059A0  0E00               	movlw	0
 10311  0059A2  010F               	movlb	15	; () banked
 10312  0059A4  6F38               	movwf	56,b	;volatile
 10313                           
 10314                           ; BSR set to: 15
 10315                           ;pin_manager.c: 77: WPUB = 0xFF;
 10316  0059A6  6861               	setf	3937,c	;volatile
 10317                           
 10318                           ; BSR set to: 15
 10319                           ;pin_manager.c: 78: INTCON2bits.nRBPU = 0;
 10320  0059A8  9EF1               	bcf	intcon2,7,c	;volatile
 10321                           
 10322                           ; BSR set to: 15
 10323  0059AA  0012               	return		;funcret
 10324  0059AC                     __end_of_PIN_MANAGER_Initialize:
 10325                           	opt stack 0
 10326                           tosu	equ	0xFFF
 10327                           tosh	equ	0xFFE
 10328                           tosl	equ	0xFFD
 10329                           pclath	equ	0xFFA
 10330                           tblptru	equ	0xFF8
 10331                           tblptrh	equ	0xFF7
 10332                           tblptrl	equ	0xFF6
 10333                           tablat	equ	0xFF5
 10334                           prodh	equ	0xFF4
 10335                           prodl	equ	0xFF3
 10336                           intcon	equ	0xFF2
 10337                           intcon2	equ	0xFF1
 10338                           postinc0	equ	0xFEE
 10339                           wreg	equ	0xFE8
 10340                           postdec1	equ	0xFE5
 10341                           fsr1l	equ	0xFE1
 10342                           indf2	equ	0xFDF
 10343                           postinc2	equ	0xFDE
 10344                           postdec2	equ	0xFDD
 10345                           fsr2h	equ	0xFDA
 10346                           fsr2l	equ	0xFD9
 10347                           status	equ	0xFD8
 10348                           
 10349 ;; *************** function _OSCILLATOR_Initialize *****************
 10350 ;; Defined at:
 10351 ;;		line 122 in file "mcc_generated_files/mcc.c"
 10352 ;; Parameters:    Size  Location     Type
 10353 ;;		None
 10354 ;; Auto vars:     Size  Location     Type
 10355 ;;		None
 10356 ;; Return value:  Size  Location     Type
 10357 ;;                  1    wreg      void 
 10358 ;; Registers used:
 10359 ;;		wreg, status,2
 10360 ;; Tracked objects:
 10361 ;;		On entry : 0/0
 10362 ;;		On exit  : 0/0
 10363 ;;		Unchanged: 0/0
 10364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10365 ;;      Params:         0       0       0       0       0       0       0
 10366 ;;      Locals:         0       0       0       0       0       0       0
 10367 ;;      Temps:          0       0       0       0       0       0       0
 10368 ;;      Totals:         0       0       0       0       0       0       0
 10369 ;;Total ram usage:        0 bytes
 10370 ;; Hardware stack levels used:    1
 10371 ;; Hardware stack levels required when called:    7
 10372 ;; This function calls:
 10373 ;;		Nothing
 10374 ;; This function is called by:
 10375 ;;		_SYSTEM_Initialize
 10376 ;; This function uses a non-reentrant model
 10377 ;;
 10378                           
 10379                           	psect	text35
 10380  005B18                     __ptext35:
 10381                           	opt stack 0
 10382  005B18                     _OSCILLATOR_Initialize:
 10383                           	opt stack 22
 10384                           
 10385                           ;mcc.c: 125: OSCCON = 0x70;
 10386                           
 10387                           ; BSR set to: 15
 10388                           ;incstack = 0
 10389  005B18  0E70               	movlw	112
 10390  005B1A  6ED3               	movwf	4051,c	;volatile
 10391                           
 10392                           ;mcc.c: 127: OSCCON2 = 0x04;
 10393  005B1C  0E04               	movlw	4
 10394  005B1E  6ED2               	movwf	4050,c	;volatile
 10395                           
 10396                           ;mcc.c: 129: OSCTUNE = 0x00;
 10397  005B20  0E00               	movlw	0
 10398  005B22  6E9B               	movwf	3995,c	;volatile
 10399  005B24  0012               	return		;funcret
 10400  005B26                     __end_of_OSCILLATOR_Initialize:
 10401                           	opt stack 0
 10402                           tosu	equ	0xFFF
 10403                           tosh	equ	0xFFE
 10404                           tosl	equ	0xFFD
 10405                           pclath	equ	0xFFA
 10406                           tblptru	equ	0xFF8
 10407                           tblptrh	equ	0xFF7
 10408                           tblptrl	equ	0xFF6
 10409                           tablat	equ	0xFF5
 10410                           prodh	equ	0xFF4
 10411                           prodl	equ	0xFF3
 10412                           intcon	equ	0xFF2
 10413                           intcon2	equ	0xFF1
 10414                           postinc0	equ	0xFEE
 10415                           wreg	equ	0xFE8
 10416                           postdec1	equ	0xFE5
 10417                           fsr1l	equ	0xFE1
 10418                           indf2	equ	0xFDF
 10419                           postinc2	equ	0xFDE
 10420                           postdec2	equ	0xFDD
 10421                           fsr2h	equ	0xFDA
 10422                           fsr2l	equ	0xFD9
 10423                           status	equ	0xFD8
 10424                           
 10425 ;; *************** function _INTERRUPT_Initialize *****************
 10426 ;; Defined at:
 10427 ;;		line 4 in file "mcc_generated_files/interrupt_manager.c"
 10428 ;; Parameters:    Size  Location     Type
 10429 ;;		None
 10430 ;; Auto vars:     Size  Location     Type
 10431 ;;		None
 10432 ;; Return value:  Size  Location     Type
 10433 ;;                  1    wreg      void 
 10434 ;; Registers used:
 10435 ;;		None
 10436 ;; Tracked objects:
 10437 ;;		On entry : 0/0
 10438 ;;		On exit  : 0/0
 10439 ;;		Unchanged: 0/0
 10440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10441 ;;      Params:         0       0       0       0       0       0       0
 10442 ;;      Locals:         0       0       0       0       0       0       0
 10443 ;;      Temps:          0       0       0       0       0       0       0
 10444 ;;      Totals:         0       0       0       0       0       0       0
 10445 ;;Total ram usage:        0 bytes
 10446 ;; Hardware stack levels used:    1
 10447 ;; Hardware stack levels required when called:    7
 10448 ;; This function calls:
 10449 ;;		Nothing
 10450 ;; This function is called by:
 10451 ;;		_SYSTEM_Initialize
 10452 ;; This function uses a non-reentrant model
 10453 ;;
 10454                           
 10455                           	psect	text36
 10456  005B66                     __ptext36:
 10457                           	opt stack 0
 10458  005B66                     _INTERRUPT_Initialize:
 10459                           	opt stack 22
 10460                           
 10461                           ;interrupt_manager.c: 7: RCONbits.IPEN = 0;
 10462                           
 10463                           ;incstack = 0
 10464  005B66  9ED0               	bcf	4048,7,c	;volatile
 10465  005B68  0012               	return		;funcret
 10466  005B6A                     __end_of_INTERRUPT_Initialize:
 10467                           	opt stack 0
 10468                           tosu	equ	0xFFF
 10469                           tosh	equ	0xFFE
 10470                           tosl	equ	0xFFD
 10471                           pclath	equ	0xFFA
 10472                           tblptru	equ	0xFF8
 10473                           tblptrh	equ	0xFF7
 10474                           tblptrl	equ	0xFF6
 10475                           tablat	equ	0xFF5
 10476                           prodh	equ	0xFF4
 10477                           prodl	equ	0xFF3
 10478                           intcon	equ	0xFF2
 10479                           intcon2	equ	0xFF1
 10480                           postinc0	equ	0xFEE
 10481                           wreg	equ	0xFE8
 10482                           postdec1	equ	0xFE5
 10483                           fsr1l	equ	0xFE1
 10484                           indf2	equ	0xFDF
 10485                           postinc2	equ	0xFDE
 10486                           postdec2	equ	0xFDD
 10487                           fsr2h	equ	0xFDA
 10488                           fsr2l	equ	0xFD9
 10489                           status	equ	0xFD8
 10490                           
 10491 ;; *************** function _EXT_INT_Initialize *****************
 10492 ;; Defined at:
 10493 ;;		line 144 in file "mcc_generated_files/ext_int.c"
 10494 ;; Parameters:    Size  Location     Type
 10495 ;;		None
 10496 ;; Auto vars:     Size  Location     Type
 10497 ;;		None
 10498 ;; Return value:  Size  Location     Type
 10499 ;;                  1    wreg      void 
 10500 ;; Registers used:
 10501 ;;		None
 10502 ;; Tracked objects:
 10503 ;;		On entry : 0/0
 10504 ;;		On exit  : 0/0
 10505 ;;		Unchanged: 0/0
 10506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10507 ;;      Params:         0       0       0       0       0       0       0
 10508 ;;      Locals:         0       0       0       0       0       0       0
 10509 ;;      Temps:          0       0       0       0       0       0       0
 10510 ;;      Totals:         0       0       0       0       0       0       0
 10511 ;;Total ram usage:        0 bytes
 10512 ;; Hardware stack levels used:    1
 10513 ;; Hardware stack levels required when called:    7
 10514 ;; This function calls:
 10515 ;;		Nothing
 10516 ;; This function is called by:
 10517 ;;		_SYSTEM_Initialize
 10518 ;; This function uses a non-reentrant model
 10519 ;;
 10520                           
 10521                           	psect	text37
 10522  005B26                     __ptext37:
 10523                           	opt stack 0
 10524  005B26                     _EXT_INT_Initialize:
 10525                           	opt stack 22
 10526                           
 10527                           ;ext_int.c: 152: (INTCON3bits.INT1IF = 0);
 10528                           
 10529                           ;incstack = 0
 10530  005B26  90F0               	bcf	intcon3,0,c	;volatile
 10531                           
 10532                           ;ext_int.c: 153: (INTCON2bits.INTEDG1 = 0);
 10533  005B28  9AF1               	bcf	intcon2,5,c	;volatile
 10534                           
 10535                           ;ext_int.c: 154: (INTCON3bits.INT1IE = 1);
 10536  005B2A  86F0               	bsf	intcon3,3,c	;volatile
 10537                           
 10538                           ;ext_int.c: 162: (INTCONbits.INT0IF = 0);
 10539  005B2C  92F2               	bcf	intcon,1,c	;volatile
 10540                           
 10541                           ;ext_int.c: 163: (INTCON2bits.INTEDG0 = 0);
 10542  005B2E  9CF1               	bcf	intcon2,6,c	;volatile
 10543                           
 10544                           ;ext_int.c: 164: (INTCONbits.INT0IE = 1);
 10545  005B30  88F2               	bsf	intcon,4,c	;volatile
 10546  005B32  0012               	return		;funcret
 10547  005B34                     __end_of_EXT_INT_Initialize:
 10548                           	opt stack 0
 10549                           tosu	equ	0xFFF
 10550                           tosh	equ	0xFFE
 10551                           tosl	equ	0xFFD
 10552                           pclath	equ	0xFFA
 10553                           tblptru	equ	0xFF8
 10554                           tblptrh	equ	0xFF7
 10555                           tblptrl	equ	0xFF6
 10556                           tablat	equ	0xFF5
 10557                           prodh	equ	0xFF4
 10558                           prodl	equ	0xFF3
 10559                           intcon	equ	0xFF2
 10560                           intcon2	equ	0xFF1
 10561                           intcon3	equ	0xFF0
 10562                           postinc0	equ	0xFEE
 10563                           wreg	equ	0xFE8
 10564                           postdec1	equ	0xFE5
 10565                           fsr1l	equ	0xFE1
 10566                           indf2	equ	0xFDF
 10567                           postinc2	equ	0xFDE
 10568                           postdec2	equ	0xFDD
 10569                           fsr2h	equ	0xFDA
 10570                           fsr2l	equ	0xFD9
 10571                           status	equ	0xFD8
 10572                           
 10573 ;; *************** function _EUSART1_Initialize *****************
 10574 ;; Defined at:
 10575 ;;		line 55 in file "mcc_generated_files/eusart1.c"
 10576 ;; Parameters:    Size  Location     Type
 10577 ;;		None
 10578 ;; Auto vars:     Size  Location     Type
 10579 ;;		None
 10580 ;; Return value:  Size  Location     Type
 10581 ;;                  1    wreg      void 
 10582 ;; Registers used:
 10583 ;;		wreg, status,2
 10584 ;; Tracked objects:
 10585 ;;		On entry : 0/0
 10586 ;;		On exit  : 0/0
 10587 ;;		Unchanged: 0/0
 10588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10589 ;;      Params:         0       0       0       0       0       0       0
 10590 ;;      Locals:         0       0       0       0       0       0       0
 10591 ;;      Temps:          0       0       0       0       0       0       0
 10592 ;;      Totals:         0       0       0       0       0       0       0
 10593 ;;Total ram usage:        0 bytes
 10594 ;; Hardware stack levels used:    1
 10595 ;; Hardware stack levels required when called:    7
 10596 ;; This function calls:
 10597 ;;		Nothing
 10598 ;; This function is called by:
 10599 ;;		_SYSTEM_Initialize
 10600 ;; This function uses a non-reentrant model
 10601 ;;
 10602                           
 10603                           	psect	text38
 10604  005AD2                     __ptext38:
 10605                           	opt stack 0
 10606  005AD2                     _EUSART1_Initialize:
 10607                           	opt stack 22
 10608                           
 10609                           ;eusart1.c: 60: BAUDCON1 = 0x08;
 10610                           
 10611                           ;incstack = 0
 10612  005AD2  0E08               	movlw	8
 10613  005AD4  6EB8               	movwf	4024,c	;volatile
 10614                           
 10615                           ;eusart1.c: 63: RCSTA1 = 0x80;
 10616  005AD6  0E80               	movlw	128
 10617  005AD8  6EAB               	movwf	4011,c	;volatile
 10618                           
 10619                           ;eusart1.c: 66: TXSTA1 = 0x24;
 10620  005ADA  0E24               	movlw	36
 10621  005ADC  6EAC               	movwf	4012,c	;volatile
 10622                           
 10623                           ;eusart1.c: 69: SPBRG1 = 0xA0;
 10624  005ADE  0EA0               	movlw	160
 10625  005AE0  6EAF               	movwf	4015,c	;volatile
 10626                           
 10627                           ;eusart1.c: 72: SPBRGH1 = 0x01;
 10628  005AE2  0E01               	movlw	1
 10629  005AE4  6EB0               	movwf	4016,c	;volatile
 10630  005AE6  0012               	return		;funcret
 10631  005AE8                     __end_of_EUSART1_Initialize:
 10632                           	opt stack 0
 10633                           tosu	equ	0xFFF
 10634                           tosh	equ	0xFFE
 10635                           tosl	equ	0xFFD
 10636                           pclath	equ	0xFFA
 10637                           tblptru	equ	0xFF8
 10638                           tblptrh	equ	0xFF7
 10639                           tblptrl	equ	0xFF6
 10640                           tablat	equ	0xFF5
 10641                           prodh	equ	0xFF4
 10642                           prodl	equ	0xFF3
 10643                           intcon	equ	0xFF2
 10644                           intcon2	equ	0xFF1
 10645                           intcon3	equ	0xFF0
 10646                           postinc0	equ	0xFEE
 10647                           wreg	equ	0xFE8
 10648                           postdec1	equ	0xFE5
 10649                           fsr1l	equ	0xFE1
 10650                           indf2	equ	0xFDF
 10651                           postinc2	equ	0xFDE
 10652                           postdec2	equ	0xFDD
 10653                           fsr2h	equ	0xFDA
 10654                           fsr2l	equ	0xFD9
 10655                           status	equ	0xFD8
 10656                           
 10657 ;; *************** function _INTERRUPT_InterruptManager *****************
 10658 ;; Defined at:
 10659 ;;		line 10 in file "mcc_generated_files/interrupt_manager.c"
 10660 ;; Parameters:    Size  Location     Type
 10661 ;;		None
 10662 ;; Auto vars:     Size  Location     Type
 10663 ;;		None
 10664 ;; Return value:  Size  Location     Type
 10665 ;;                  1    wreg      void 
 10666 ;; Registers used:
 10667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10668 ;; Tracked objects:
 10669 ;;		On entry : 0/0
 10670 ;;		On exit  : 0/0
 10671 ;;		Unchanged: 0/0
 10672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10673 ;;      Params:         0       0       0       0       0       0       0
 10674 ;;      Locals:         0       0       0       0       0       0       0
 10675 ;;      Temps:          0      14       0       0       0       0       0
 10676 ;;      Totals:         0      14       0       0       0       0       0
 10677 ;;Total ram usage:       14 bytes
 10678 ;; Hardware stack levels used:    1
 10679 ;; Hardware stack levels required when called:    6
 10680 ;; This function calls:
 10681 ;;		_INT0_ISR
 10682 ;;		_INT1_ISR
 10683 ;;		_TMR0_ISR
 10684 ;; This function is called by:
 10685 ;;		Interrupt level 2
 10686 ;; This function uses a non-reentrant model
 10687 ;;
 10688                           
 10689                           	psect	intcode
 10690  000008                     __pintcode:
 10691                           	opt stack 0
 10692  000008                     _INTERRUPT_InterruptManager:
 10693                           	opt stack 19
 10694                           
 10695                           ;incstack = 0
 10696  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10697  00000A  CFFA F082          	movff	pclath,??_INTERRUPT_InterruptManager
 10698  00000E  CFFB F083          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 10699  000012  CFE9 F084          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 10700  000016  CFEA F085          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 10701  00001A  CFE1 F086          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 10702  00001E  CFE2 F087          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 10703  000022  CFD9 F088          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 10704  000026  CFDA F089          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 10705  00002A  CFF3 F08A          	movff	prodl,??_INTERRUPT_InterruptManager+8
 10706  00002E  CFF4 F08B          	movff	prodh,??_INTERRUPT_InterruptManager+9
 10707  000032  CFF6 F08C          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 10708  000036  CFF7 F08D          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 10709  00003A  CFF8 F08E          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 10710  00003E  CFF5 F08F          	movff	tablat,??_INTERRUPT_InterruptManager+13
 10711                           
 10712                           ;interrupt_manager.c: 13: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 10713  000042  B6F0               	btfsc	intcon3,3,c	;volatile
 10714  000044  A0F0               	btfss	intcon3,0,c	;volatile
 10715  000046  D003               	goto	i2l102
 10716                           
 10717                           ;interrupt_manager.c: 14: {
 10718                           ;interrupt_manager.c: 15: INT1_ISR();
 10719  000048  ECBD  F02A         	call	_INT1_ISR	;wreg free
 10720                           
 10721                           ;interrupt_manager.c: 16: }
 10722  00004C  D00B               	goto	i2l108
 10723  00004E                     i2l102:
 10724                           
 10725                           ;interrupt_manager.c: 17: else if(INTCONbits.INT0IE == 1 && INTCONbits.INT0IF == 1)
 10726  00004E  B8F2               	btfsc	intcon,4,c	;volatile
 10727  000050  A2F2               	btfss	intcon,1,c	;volatile
 10728  000052  D003               	goto	i2l104
 10729                           
 10730                           ;interrupt_manager.c: 18: {
 10731                           ;interrupt_manager.c: 19: INT0_ISR();
 10732  000054  EC7F  F024         	call	_INT0_ISR	;wreg free
 10733                           
 10734                           ;interrupt_manager.c: 20: }
 10735  000058  D005               	goto	i2l108
 10736  00005A                     i2l104:
 10737                           
 10738                           ;interrupt_manager.c: 21: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 10739  00005A  BAF2               	btfsc	intcon,5,c	;volatile
 10740  00005C  A4F2               	btfss	intcon,2,c	;volatile
 10741  00005E  D002               	goto	i2l108
 10742                           
 10743                           ;interrupt_manager.c: 22: {
 10744                           ;interrupt_manager.c: 23: TMR0_ISR();
 10745  000060  ECD6  F02C         	call	_TMR0_ISR	;wreg free
 10746  000064                     i2l108:
 10747  000064  C08F  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 10748  000068  C08E  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 10749  00006C  C08D  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 10750  000070  C08C  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 10751  000074  C08B  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 10752  000078  C08A  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 10753  00007C  C089  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 10754  000080  C088  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 10755  000084  C087  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 10756  000088  C086  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 10757  00008C  C085  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 10758  000090  C084  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 10759  000094  C083  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 10760  000098  C082  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 10761  00009C  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10762  00009E  0011               	retfie		f
 10763  0000A0                     __end_of_INTERRUPT_InterruptManager:
 10764                           	opt stack 0
 10765                           tosu	equ	0xFFF
 10766                           tosh	equ	0xFFE
 10767                           tosl	equ	0xFFD
 10768                           pclatu	equ	0xFFB
 10769                           pclath	equ	0xFFA
 10770                           tblptru	equ	0xFF8
 10771                           tblptrh	equ	0xFF7
 10772                           tblptrl	equ	0xFF6
 10773                           tablat	equ	0xFF5
 10774                           prodh	equ	0xFF4
 10775                           prodl	equ	0xFF3
 10776                           intcon	equ	0xFF2
 10777                           intcon2	equ	0xFF1
 10778                           intcon3	equ	0xFF0
 10779                           postinc0	equ	0xFEE
 10780                           fsr0h	equ	0xFEA
 10781                           fsr0l	equ	0xFE9
 10782                           wreg	equ	0xFE8
 10783                           postdec1	equ	0xFE5
 10784                           fsr1h	equ	0xFE2
 10785                           fsr1l	equ	0xFE1
 10786                           indf2	equ	0xFDF
 10787                           postinc2	equ	0xFDE
 10788                           postdec2	equ	0xFDD
 10789                           fsr2h	equ	0xFDA
 10790                           fsr2l	equ	0xFD9
 10791                           status	equ	0xFD8
 10792                           
 10793 ;; *************** function _TMR0_ISR *****************
 10794 ;; Defined at:
 10795 ;;		line 89 in file "mcc_generated_files/tmr0.c"
 10796 ;; Parameters:    Size  Location     Type
 10797 ;;		None
 10798 ;; Auto vars:     Size  Location     Type
 10799 ;;		None
 10800 ;; Return value:  Size  Location     Type
 10801 ;;                  1    wreg      void 
 10802 ;; Registers used:
 10803 ;;		wreg, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 10804 ;; Tracked objects:
 10805 ;;		On entry : 0/0
 10806 ;;		On exit  : 0/0
 10807 ;;		Unchanged: 0/0
 10808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10809 ;;      Params:         0       0       0       0       0       0       0
 10810 ;;      Locals:         0       0       0       0       0       0       0
 10811 ;;      Temps:          0       0       0       0       0       0       0
 10812 ;;      Totals:         0       0       0       0       0       0       0
 10813 ;;Total ram usage:        0 bytes
 10814 ;; Hardware stack levels used:    1
 10815 ;; Hardware stack levels required when called:    2
 10816 ;; This function calls:
 10817 ;;		Absolute function
 10818 ;;		_TMR0_DefaultInterruptHandler
 10819 ;; This function is called by:
 10820 ;;		_INTERRUPT_InterruptManager
 10821 ;; This function uses a non-reentrant model
 10822 ;;
 10823                           
 10824                           	psect	text40
 10825  0059AC                     __ptext40:
 10826                           	opt stack 0
 10827  0059AC                     _TMR0_ISR:
 10828                           	opt stack 22
 10829                           
 10830                           ;tmr0.c: 92: INTCONbits.TMR0IF = 0;
 10831                           
 10832                           ;incstack = 0
 10833  0059AC  94F2               	bcf	intcon,2,c	;volatile
 10834                           
 10835                           ;tmr0.c: 96: TMR0H = timer0ReloadVal >> 8;
 10836  0059AE  505E               	movf	_timer0ReloadVal+1,w,c	;volatile
 10837  0059B0  6ED7               	movwf	4055,c	;volatile
 10838                           
 10839                           ;tmr0.c: 97: TMR0L = (uint8_t) timer0ReloadVal;
 10840  0059B2  C05D  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 10841                           
 10842                           ;tmr0.c: 99: if(TMR0_InterruptHandler)
 10843  0059B6  0100               	movlb	0	; () banked
 10844  0059B8  51CC               	movf	_TMR0_InterruptHandler& (0+255),w,b
 10845  0059BA  0100               	movlb	0	; () banked
 10846  0059BC  11CD               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 10847  0059BE  B4D8               	btfsc	status,2,c
 10848  0059C0  0012               	return	
 10849                           
 10850                           ; BSR set to: 0
 10851                           ;tmr0.c: 100: {
 10852                           ;tmr0.c: 101: TMR0_InterruptHandler();
 10853  0059C2  D801               	call	i2u1684_48
 10854  0059C4  0012               	return	
 10855  0059C6                     i2u1684_48:
 10856  0059C6  0005               	push	
 10857  0059C8  0100               	movlb	0	; () banked
 10858  0059CA  6EFA               	movwf	pclath,c
 10859  0059CC  51CC               	movf	_TMR0_InterruptHandler& (0+255),w,b
 10860  0059CE  6EFD               	movwf	tosl,c
 10861  0059D0  51CD               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 10862  0059D2  6EFE               	movwf	tosh,c
 10863  0059D4  50F8               	movf	tblptru,w,c
 10864  0059D6  6EFF               	movwf	tosu,c
 10865  0059D8  50FA               	movf	pclath,w,c
 10866  0059DA  0012               	return		;indir
 10867  0059DC                     __end_of_TMR0_ISR:
 10868                           	opt stack 0
 10869                           tosu	equ	0xFFF
 10870                           tosh	equ	0xFFE
 10871                           tosl	equ	0xFFD
 10872                           pclatu	equ	0xFFB
 10873                           pclath	equ	0xFFA
 10874                           tblptru	equ	0xFF8
 10875                           tblptrh	equ	0xFF7
 10876                           tblptrl	equ	0xFF6
 10877                           tablat	equ	0xFF5
 10878                           prodh	equ	0xFF4
 10879                           prodl	equ	0xFF3
 10880                           intcon	equ	0xFF2
 10881                           intcon2	equ	0xFF1
 10882                           intcon3	equ	0xFF0
 10883                           postinc0	equ	0xFEE
 10884                           fsr0h	equ	0xFEA
 10885                           fsr0l	equ	0xFE9
 10886                           wreg	equ	0xFE8
 10887                           postdec1	equ	0xFE5
 10888                           fsr1h	equ	0xFE2
 10889                           fsr1l	equ	0xFE1
 10890                           indf2	equ	0xFDF
 10891                           postinc2	equ	0xFDE
 10892                           postdec2	equ	0xFDD
 10893                           fsr2h	equ	0xFDA
 10894                           fsr2l	equ	0xFD9
 10895                           status	equ	0xFD8
 10896                           
 10897 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 10898 ;; Defined at:
 10899 ;;		line 110 in file "mcc_generated_files/tmr0.c"
 10900 ;; Parameters:    Size  Location     Type
 10901 ;;		None
 10902 ;; Auto vars:     Size  Location     Type
 10903 ;;		None
 10904 ;; Return value:  Size  Location     Type
 10905 ;;                  1    wreg      void 
 10906 ;; Registers used:
 10907 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10908 ;; Tracked objects:
 10909 ;;		On entry : 0/0
 10910 ;;		On exit  : 0/0
 10911 ;;		Unchanged: 0/0
 10912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10913 ;;      Params:         0       0       0       0       0       0       0
 10914 ;;      Locals:         0       0       0       0       0       0       0
 10915 ;;      Temps:          1       0       0       0       0       0       0
 10916 ;;      Totals:         1       0       0       0       0       0       0
 10917 ;;Total ram usage:        1 bytes
 10918 ;; Hardware stack levels used:    1
 10919 ;; Hardware stack levels required when called:    1
 10920 ;; This function calls:
 10921 ;;		_SetRange
 10922 ;; This function is called by:
 10923 ;;		_TMR0_Initialize
 10924 ;;		_TMR0_ISR
 10925 ;; This function uses a non-reentrant model
 10926 ;;
 10927                           
 10928                           	psect	text41
 10929  005870                     __ptext41:
 10930                           	opt stack 0
 10931  005870                     _TMR0_DefaultInterruptHandler:
 10932                           	opt stack 22
 10933                           
 10934                           ;incstack = 0
 10935                           ;tmr0.c: 113: do { LATCbits.LATC7 = ~LATCbits.LATC7; } while(0);
 10936  005870  AE8B               	btfss	3979,7,c	;volatile
 10937  005872  D002               	goto	i2u709_40
 10938  005874  0E01               	movlw	1
 10939  005876  D001               	goto	i2u709_46
 10940  005878                     i2u709_40:
 10941  005878  0E00               	movlw	0
 10942  00587A                     i2u709_46:
 10943  00587A  0AFF               	xorlw	255
 10944  00587C  6E0C               	movwf	??_TMR0_DefaultInterruptHandler& (0+255),c
 10945  00587E  320C               	rrcf	??_TMR0_DefaultInterruptHandler,f,c
 10946  005880  320C               	rrcf	??_TMR0_DefaultInterruptHandler,f,c
 10947  005882  508B               	movf	3979,w,c	;volatile
 10948  005884  180C               	xorwf	??_TMR0_DefaultInterruptHandler,w,c
 10949  005886  0B7F               	andlw	-129
 10950  005888  180C               	xorwf	??_TMR0_DefaultInterruptHandler,w,c
 10951  00588A  6E8B               	movwf	3979,c	;volatile
 10952                           
 10953                           ;tmr0.c: 116: if (auto_range == 1)
 10954  00588C  0100               	movlb	0	; () banked
 10955  00588E  05CA               	decf	_auto_range& (0+255),w,b
 10956  005890  A4D8               	btfss	status,2,c
 10957  005892  0012               	return	
 10958                           
 10959                           ; BSR set to: 0
 10960                           ;tmr0.c: 117: {
 10961                           ;tmr0.c: 118: if (range < 5)
 10962  005894  0E05               	movlw	5
 10963  005896  0100               	movlb	0	; () banked
 10964  005898  61CB               	cpfslt	_range& (0+255),b
 10965  00589A  0012               	return	
 10966                           
 10967                           ; BSR set to: 0
 10968                           ;tmr0.c: 119: {
 10969                           ;tmr0.c: 120: range += 1;
 10970  00589C  0100               	movlb	0	; () banked
 10971  00589E  2BCB               	incf	_range& (0+255),f,b
 10972                           
 10973                           ; BSR set to: 0
 10974                           ;tmr0.c: 121: SetRange(range);
 10975  0058A0  0100               	movlb	0	; () banked
 10976  0058A2  51CB               	movf	_range& (0+255),w,b
 10977  0058A4  EC43  F01E         	call	_SetRange
 10978  0058A8  0012               	return	
 10979  0058AA                     __end_of_TMR0_DefaultInterruptHandler:
 10980                           	opt stack 0
 10981                           tosu	equ	0xFFF
 10982                           tosh	equ	0xFFE
 10983                           tosl	equ	0xFFD
 10984                           pclatu	equ	0xFFB
 10985                           pclath	equ	0xFFA
 10986                           tblptru	equ	0xFF8
 10987                           tblptrh	equ	0xFF7
 10988                           tblptrl	equ	0xFF6
 10989                           tablat	equ	0xFF5
 10990                           prodh	equ	0xFF4
 10991                           prodl	equ	0xFF3
 10992                           intcon	equ	0xFF2
 10993                           intcon2	equ	0xFF1
 10994                           intcon3	equ	0xFF0
 10995                           postinc0	equ	0xFEE
 10996                           fsr0h	equ	0xFEA
 10997                           fsr0l	equ	0xFE9
 10998                           wreg	equ	0xFE8
 10999                           postdec1	equ	0xFE5
 11000                           fsr1h	equ	0xFE2
 11001                           fsr1l	equ	0xFE1
 11002                           indf2	equ	0xFDF
 11003                           postinc2	equ	0xFDE
 11004                           postdec2	equ	0xFDD
 11005                           fsr2h	equ	0xFDA
 11006                           fsr2l	equ	0xFD9
 11007                           status	equ	0xFD8
 11008                           
 11009 ;; *************** function _INT1_ISR *****************
 11010 ;; Defined at:
 11011 ;;		line 56 in file "mcc_generated_files/ext_int.c"
 11012 ;; Parameters:    Size  Location     Type
 11013 ;;		None
 11014 ;; Auto vars:     Size  Location     Type
 11015 ;;		None
 11016 ;; Return value:  Size  Location     Type
 11017 ;;                  1    wreg      void 
 11018 ;; Registers used:
 11019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11020 ;; Tracked objects:
 11021 ;;		On entry : 0/0
 11022 ;;		On exit  : 0/0
 11023 ;;		Unchanged: 0/0
 11024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11025 ;;      Params:         0       0       0       0       0       0       0
 11026 ;;      Locals:         0       0       0       0       0       0       0
 11027 ;;      Temps:          0       0       0       0       0       0       0
 11028 ;;      Totals:         0       0       0       0       0       0       0
 11029 ;;Total ram usage:        0 bytes
 11030 ;; Hardware stack levels used:    1
 11031 ;; Hardware stack levels required when called:    5
 11032 ;; This function calls:
 11033 ;;		_SetRange
 11034 ;;		_printf
 11035 ;; This function is called by:
 11036 ;;		_INTERRUPT_InterruptManager
 11037 ;; This function uses a non-reentrant model
 11038 ;;
 11039                           
 11040                           	psect	text42
 11041  00557A                     __ptext42:
 11042                           	opt stack 0
 11043  00557A                     _INT1_ISR:
 11044                           	opt stack 19
 11045                           
 11046                           ;ext_int.c: 60: if (auto_range == 1)
 11047                           
 11048                           ;incstack = 0
 11049  00557A  0100               	movlb	0	; () banked
 11050  00557C  05CA               	decf	_auto_range& (0+255),w,b
 11051  00557E  A4D8               	btfss	status,2,c
 11052  005580  D005               	goto	i2l9873
 11053                           
 11054                           ; BSR set to: 0
 11055                           ;ext_int.c: 61: {
 11056                           ;ext_int.c: 62: stored_range = range;
 11057  005582  C0CB  F0B6         	movff	_range,_stored_range
 11058                           
 11059                           ; BSR set to: 0
 11060                           ;ext_int.c: 63: auto_range = 0;
 11061  005586  0E00               	movlw	0
 11062  005588  0100               	movlb	0	; () banked
 11063  00558A  6FCA               	movwf	_auto_range& (0+255),b
 11064  00558C                     i2l9873:
 11065                           
 11066                           ; BSR set to: 0
 11067                           ;ext_int.c: 64: }
 11068                           ;ext_int.c: 67: if (range < 5)
 11069  00558C  0E05               	movlw	5
 11070  00558E  0100               	movlb	0	; () banked
 11071  005590  61CB               	cpfslt	_range& (0+255),b
 11072  005592  D003               	goto	i2l9877
 11073                           
 11074                           ; BSR set to: 0
 11075                           ;ext_int.c: 68: {
 11076                           ;ext_int.c: 69: range += 1;
 11077  005594  0100               	movlb	0	; () banked
 11078  005596  2BCB               	incf	_range& (0+255),f,b
 11079                           
 11080                           ;ext_int.c: 70: }
 11081  005598  D003               	goto	i2l9879
 11082  00559A                     i2l9877:
 11083                           
 11084                           ; BSR set to: 0
 11085                           ;ext_int.c: 71: else
 11086                           ;ext_int.c: 73: {
 11087                           ;ext_int.c: 74: range -= (5 - 2);
 11088  00559A  0E03               	movlw	3
 11089  00559C  0100               	movlb	0	; () banked
 11090  00559E  5FCB               	subwf	_range& (0+255),f,b
 11091  0055A0                     i2l9879:
 11092                           
 11093                           ; BSR set to: 0
 11094                           ;ext_int.c: 75: }
 11095                           ;ext_int.c: 79: if (auto_range == 0 && range == stored_range)
 11096  0055A0  0100               	movlb	0	; () banked
 11097  0055A2  51CA               	movf	_auto_range& (0+255),w,b
 11098  0055A4  A4D8               	btfss	status,2,c
 11099  0055A6  D009               	goto	i2l9885
 11100                           
 11101                           ; BSR set to: 0
 11102  0055A8  0100               	movlb	0	; () banked
 11103  0055AA  51B6               	movf	_stored_range& (0+255),w,b
 11104  0055AC  0100               	movlb	0	; () banked
 11105  0055AE  19CB               	xorwf	_range& (0+255),w,b
 11106  0055B0  A4D8               	btfss	status,2,c
 11107  0055B2  D003               	goto	i2l9885
 11108                           
 11109                           ; BSR set to: 0
 11110                           ;ext_int.c: 80: {
 11111                           ;ext_int.c: 81: auto_range = 1;
 11112  0055B4  0E01               	movlw	1
 11113  0055B6  0100               	movlb	0	; () banked
 11114  0055B8  6FCA               	movwf	_auto_range& (0+255),b
 11115  0055BA                     i2l9885:
 11116                           
 11117                           ; BSR set to: 0
 11118                           ;ext_int.c: 82: }
 11119                           ;ext_int.c: 85: printf("Range: %d\r\n", range);
 11120  0055BA  0EC5               	movlw	low STR_1
 11121  0055BC  0100               	movlb	0	; () banked
 11122  0055BE  6F77               	movwf	printf@f& (0+255),b
 11123  0055C0  0E06               	movlw	high STR_1
 11124  0055C2  0100               	movlb	0	; () banked
 11125  0055C4  6F78               	movwf	(printf@f+1)& (0+255),b
 11126  0055C6  C0CB  F079         	movff	_range,?_printf+2
 11127  0055CA  0100               	movlb	0	; () banked
 11128  0055CC  6B7A               	clrf	(?_printf+3)& (0+255),b
 11129  0055CE  EC8B  F02C         	call	_printf	;wreg free
 11130                           
 11131                           ;ext_int.c: 87: SetRange(range);
 11132  0055D2  0100               	movlb	0	; () banked
 11133  0055D4  51CB               	movf	_range& (0+255),w,b
 11134  0055D6  EC43  F01E         	call	_SetRange
 11135                           
 11136                           ;ext_int.c: 91: (INTCON3bits.INT1IF = 0);
 11137  0055DA  90F0               	bcf	intcon3,0,c	;volatile
 11138  0055DC  0012               	return		;funcret
 11139  0055DE                     __end_of_INT1_ISR:
 11140                           	opt stack 0
 11141                           tosu	equ	0xFFF
 11142                           tosh	equ	0xFFE
 11143                           tosl	equ	0xFFD
 11144                           pclatu	equ	0xFFB
 11145                           pclath	equ	0xFFA
 11146                           tblptru	equ	0xFF8
 11147                           tblptrh	equ	0xFF7
 11148                           tblptrl	equ	0xFF6
 11149                           tablat	equ	0xFF5
 11150                           prodh	equ	0xFF4
 11151                           prodl	equ	0xFF3
 11152                           intcon	equ	0xFF2
 11153                           intcon2	equ	0xFF1
 11154                           intcon3	equ	0xFF0
 11155                           postinc0	equ	0xFEE
 11156                           fsr0h	equ	0xFEA
 11157                           fsr0l	equ	0xFE9
 11158                           wreg	equ	0xFE8
 11159                           postdec1	equ	0xFE5
 11160                           fsr1h	equ	0xFE2
 11161                           fsr1l	equ	0xFE1
 11162                           indf2	equ	0xFDF
 11163                           postinc2	equ	0xFDE
 11164                           postdec2	equ	0xFDD
 11165                           fsr2h	equ	0xFDA
 11166                           fsr2l	equ	0xFD9
 11167                           status	equ	0xFD8
 11168                           
 11169 ;; *************** function _INT0_ISR *****************
 11170 ;; Defined at:
 11171 ;;		line 97 in file "mcc_generated_files/ext_int.c"
 11172 ;; Parameters:    Size  Location     Type
 11173 ;;		None
 11174 ;; Auto vars:     Size  Location     Type
 11175 ;;		None
 11176 ;; Return value:  Size  Location     Type
 11177 ;;                  1    wreg      void 
 11178 ;; Registers used:
 11179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11180 ;; Tracked objects:
 11181 ;;		On entry : 0/0
 11182 ;;		On exit  : 0/0
 11183 ;;		Unchanged: 0/0
 11184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11185 ;;      Params:         0       0       0       0       0       0       0
 11186 ;;      Locals:         0       0       0       0       0       0       0
 11187 ;;      Temps:          0       0       0       0       0       0       0
 11188 ;;      Totals:         0       0       0       0       0       0       0
 11189 ;;Total ram usage:        0 bytes
 11190 ;; Hardware stack levels used:    1
 11191 ;; Hardware stack levels required when called:    5
 11192 ;; This function calls:
 11193 ;;		_SetRange
 11194 ;;		_TMR0_ReadTimer
 11195 ;;		_TMR0_Reload
 11196 ;;		_TMR0_StopTimer
 11197 ;;		___lwtoft
 11198 ;;		_printf
 11199 ;;		i2_TMR0_StartTimer
 11200 ;;		i2___ftadd
 11201 ;;		i2___ftdiv
 11202 ;;		i2___ftmul
 11203 ;;		i2___wmul
 11204 ;; This function is called by:
 11205 ;;		_INTERRUPT_InterruptManager
 11206 ;; This function uses a non-reentrant model
 11207 ;;
 11208                           
 11209                           	psect	text43
 11210  0048FE                     __ptext43:
 11211                           	opt stack 0
 11212  0048FE                     _INT0_ISR:
 11213                           	opt stack 19
 11214                           
 11215                           ;ext_int.c: 100: TMR0_StopTimer();
 11216                           
 11217                           ;incstack = 0
 11218  0048FE  ECB7  F02D         	call	_TMR0_StopTimer	;wreg free
 11219                           
 11220                           ;ext_int.c: 101: reading = TMR0_ReadTimer();
 11221  004902  ECF7  F02B         	call	_TMR0_ReadTimer	;wreg free
 11222  004906  C001  F05B         	movff	?_TMR0_ReadTimer,_reading
 11223  00490A  C002  F05C         	movff	?_TMR0_ReadTimer+1,_reading+1
 11224                           
 11225                           ;ext_int.c: 104: do { LATCbits.LATC7 = 1; } while(0);
 11226  00490E  8E8B               	bsf	3979,7,c	;volatile
 11227                           
 11228                           ;ext_int.c: 108: result = cal_current[range - 1] * ((float)reading - 27) / 3.01004;
 11229  004910  0E00               	movlw	0
 11230  004912  6E12               	movwf	i2___wmul@multiplicand+1,c
 11231  004914  0E03               	movlw	3
 11232  004916  6E11               	movwf	i2___wmul@multiplicand,c
 11233  004918  0EFF               	movlw	255
 11234  00491A  0100               	movlb	0	; () banked
 11235  00491C  25CB               	addwf	_range& (0+255),w,b
 11236  00491E  6E0F               	movwf	i2___wmul@multiplier,c
 11237  004920  6A10               	clrf	i2___wmul@multiplier+1,c
 11238  004922  0EFF               	movlw	255
 11239  004924  2210               	addwfc	i2___wmul@multiplier+1,f,c
 11240  004926  EC16  F02D         	call	i2___wmul	;wreg free
 11241  00492A  0E77               	movlw	low _cal_current
 11242  00492C  240F               	addwf	?i2___wmul,w,c
 11243  00492E  6EF6               	movwf	tblptrl,c
 11244  004930  0E06               	movlw	high _cal_current
 11245  004932  2010               	addwfc	?i2___wmul+1,w,c
 11246  004934  6EF7               	movwf	tblptrh,c
 11247  004936                     	if	0	;There are less than 3 active tblptr bytes
 11248  004936                     	endif
 11249  004936  0009               	tblrd		*+
 11250  004938  CFF5 F024          	movff	tablat,i2___ftmul@f2
 11251  00493C  0009               	tblrd		*+
 11252  00493E  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 11253  004942  000A               	tblrd		*-
 11254  004944  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 11255  004948  0E00               	movlw	0
 11256  00494A  6E18               	movwf	i2___ftadd@f2,c
 11257  00494C  0ED8               	movlw	216
 11258  00494E  6E19               	movwf	i2___ftadd@f2+1,c
 11259  004950  0EC1               	movlw	193
 11260  004952  6E1A               	movwf	i2___ftadd@f2+2,c
 11261  004954  C05B  F009         	movff	_reading,___lwtoft@c
 11262  004958  C05C  F00A         	movff	_reading+1,___lwtoft@c+1
 11263  00495C  EC3B  F02D         	call	___lwtoft	;wreg free
 11264  004960  C009  F015         	movff	?___lwtoft,i2___ftadd@f1
 11265  004964  C00A  F016         	movff	?___lwtoft+1,i2___ftadd@f1+1
 11266  004968  C00B  F017         	movff	?___lwtoft+2,i2___ftadd@f1+2
 11267  00496C  EC6D  F01D         	call	i2___ftadd	;wreg free
 11268  004970  C015  F021         	movff	?i2___ftadd,i2___ftmul@f1
 11269  004974  C016  F022         	movff	?i2___ftadd+1,i2___ftmul@f1+1
 11270  004978  C017  F023         	movff	?i2___ftadd+2,i2___ftmul@f1+2
 11271  00497C  EC8F  F025         	call	i2___ftmul	;wreg free
 11272  004980  C021  F030         	movff	?i2___ftmul,i2___ftdiv@f1
 11273  004984  C022  F031         	movff	?i2___ftmul+1,i2___ftdiv@f1+1
 11274  004988  C023  F032         	movff	?i2___ftmul+2,i2___ftdiv@f1+2
 11275  00498C  0EA4               	movlw	164
 11276  00498E  6E33               	movwf	i2___ftdiv@f2,c
 11277  004990  0E40               	movlw	64
 11278  004992  6E34               	movwf	i2___ftdiv@f2+1,c
 11279  004994  0E40               	movlw	64
 11280  004996  6E35               	movwf	i2___ftdiv@f2+2,c
 11281  004998  EC83  F026         	call	i2___ftdiv	;wreg free
 11282  00499C  C030  F058         	movff	?i2___ftdiv,_result
 11283  0049A0  C031  F059         	movff	?i2___ftdiv+1,_result+1
 11284  0049A4  C032  F05A         	movff	?i2___ftdiv+2,_result+2
 11285                           
 11286                           ;ext_int.c: 111: printf("Capacitance: %0.2f pF (Count: %u) - Range: %d (%d)\r\n", result
      +                          , reading, range, auto_range);
 11287  0049A8  0E90               	movlw	low STR_2
 11288  0049AA  0100               	movlb	0	; () banked
 11289  0049AC  6F77               	movwf	printf@f& (0+255),b
 11290  0049AE  0E06               	movlw	high STR_2
 11291  0049B0  0100               	movlb	0	; () banked
 11292  0049B2  6F78               	movwf	(printf@f+1)& (0+255),b
 11293  0049B4  C058  F079         	movff	_result,?_printf+2
 11294  0049B8  C059  F07A         	movff	_result+1,?_printf+3
 11295  0049BC  C05A  F07B         	movff	_result+2,?_printf+4
 11296  0049C0  C05B  F07C         	movff	_reading,?_printf+5
 11297  0049C4  C05C  F07D         	movff	_reading+1,?_printf+6
 11298  0049C8  C0CB  F07E         	movff	_range,?_printf+7
 11299  0049CC  0100               	movlb	0	; () banked
 11300  0049CE  6B7F               	clrf	(?_printf+8)& (0+255),b
 11301  0049D0  C0CA  F080         	movff	_auto_range,?_printf+9
 11302  0049D4  0100               	movlb	0	; () banked
 11303  0049D6  6B81               	clrf	(?_printf+10)& (0+255),b
 11304  0049D8  EC8B  F02C         	call	_printf	;wreg free
 11305                           
 11306                           ;ext_int.c: 114: if (auto_range == 1)
 11307  0049DC  0100               	movlb	0	; () banked
 11308  0049DE  05CA               	decf	_auto_range& (0+255),w,b
 11309  0049E0  A4D8               	btfss	status,2,c
 11310  0049E2  D010               	goto	i2l9911
 11311                           
 11312                           ; BSR set to: 0
 11313                           ;ext_int.c: 115: {
 11314                           ;ext_int.c: 116: if (reading < 1000 && range > 2)
 11315  0049E4  0EE8               	movlw	232
 11316  0049E6  5C5B               	subwf	_reading,w,c
 11317  0049E8  0E03               	movlw	3
 11318  0049EA  585C               	subwfb	_reading+1,w,c
 11319  0049EC  B0D8               	btfsc	status,0,c
 11320  0049EE  D00A               	goto	i2l9911
 11321                           
 11322                           ; BSR set to: 0
 11323  0049F0  0E02               	movlw	2
 11324  0049F2  0100               	movlb	0	; () banked
 11325  0049F4  65CB               	cpfsgt	_range& (0+255),b
 11326  0049F6  D006               	goto	i2l9911
 11327                           
 11328                           ; BSR set to: 0
 11329                           ;ext_int.c: 117: {
 11330                           ;ext_int.c: 118: range -= 1;
 11331  0049F8  0100               	movlb	0	; () banked
 11332  0049FA  07CB               	decf	_range& (0+255),f,b
 11333                           
 11334                           ; BSR set to: 0
 11335                           ;ext_int.c: 119: SetRange(range);
 11336  0049FC  0100               	movlb	0	; () banked
 11337  0049FE  51CB               	movf	_range& (0+255),w,b
 11338  004A00  EC43  F01E         	call	_SetRange
 11339  004A04                     i2l9911:
 11340                           
 11341                           ;ext_int.c: 120: }
 11342                           ;ext_int.c: 121: }
 11343                           ;ext_int.c: 124: TMR0_Reload();
 11344  004A04  ECAA  F02D         	call	_TMR0_Reload	;wreg free
 11345                           
 11346                           ;ext_int.c: 127: do { LATCbits.LATC7 = 0; } while(0);
 11347  004A08  9E8B               	bcf	3979,7,c	;volatile
 11348                           
 11349                           ;ext_int.c: 128: TMR0_StartTimer();
 11350  004A0A  ECB5  F02D         	call	i2_TMR0_StartTimer	;wreg free
 11351                           
 11352                           ;ext_int.c: 131: (INTCONbits.INT0IF = 0);
 11353  004A0E  92F2               	bcf	intcon,1,c	;volatile
 11354  004A10  0012               	return		;funcret
 11355  004A12                     __end_of_INT0_ISR:
 11356                           	opt stack 0
 11357                           tosu	equ	0xFFF
 11358                           tosh	equ	0xFFE
 11359                           tosl	equ	0xFFD
 11360                           pclatu	equ	0xFFB
 11361                           pclath	equ	0xFFA
 11362                           tblptru	equ	0xFF8
 11363                           tblptrh	equ	0xFF7
 11364                           tblptrl	equ	0xFF6
 11365                           tablat	equ	0xFF5
 11366                           prodh	equ	0xFF4
 11367                           prodl	equ	0xFF3
 11368                           intcon	equ	0xFF2
 11369                           intcon2	equ	0xFF1
 11370                           intcon3	equ	0xFF0
 11371                           postinc0	equ	0xFEE
 11372                           fsr0h	equ	0xFEA
 11373                           fsr0l	equ	0xFE9
 11374                           wreg	equ	0xFE8
 11375                           postdec1	equ	0xFE5
 11376                           fsr1h	equ	0xFE2
 11377                           fsr1l	equ	0xFE1
 11378                           indf2	equ	0xFDF
 11379                           postinc2	equ	0xFDE
 11380                           postdec2	equ	0xFDD
 11381                           fsr2h	equ	0xFDA
 11382                           fsr2l	equ	0xFD9
 11383                           status	equ	0xFD8
 11384                           
 11385 ;; *************** function i2___ftdiv *****************
 11386 ;; Defined at:
 11387 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
 11388 ;; Parameters:    Size  Location     Type
 11389 ;;  f1              3   47[COMRAM] float 
 11390 ;;  f2              3   50[COMRAM] float 
 11391 ;; Auto vars:     Size  Location     Type
 11392 ;;  __ftdiv         3   57[COMRAM] float 
 11393 ;;  __ftdiv         1   61[COMRAM] unsigned char 
 11394 ;;  __ftdiv         1   60[COMRAM] unsigned char 
 11395 ;;  __ftdiv         1   56[COMRAM] unsigned char 
 11396 ;; Return value:  Size  Location     Type
 11397 ;;                  3   47[COMRAM] float 
 11398 ;; Registers used:
 11399 ;;		wreg, status,2, status,0, cstack
 11400 ;; Tracked objects:
 11401 ;;		On entry : 0/0
 11402 ;;		On exit  : 0/0
 11403 ;;		Unchanged: 0/0
 11404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11405 ;;      Params:         6       0       0       0       0       0       0
 11406 ;;      Locals:         6       0       0       0       0       0       0
 11407 ;;      Temps:          3       0       0       0       0       0       0
 11408 ;;      Totals:        15       0       0       0       0       0       0
 11409 ;;Total ram usage:       15 bytes
 11410 ;; Hardware stack levels used:    1
 11411 ;; Hardware stack levels required when called:    1
 11412 ;; This function calls:
 11413 ;;		i2___ftpack
 11414 ;; This function is called by:
 11415 ;;		_INT0_ISR
 11416 ;; This function uses a non-reentrant model
 11417 ;;
 11418                           
 11419                           	psect	text44
 11420  004D06                     __ptext44:
 11421                           	opt stack 0
 11422  004D06                     i2___ftdiv:
 11423                           	opt stack 22
 11424                           
 11425                           ;incstack = 0
 11426  004D06  C032  F036         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 11427  004D0A  6A37               	clrf	(??i2___ftdiv+1)& (0+255),c
 11428  004D0C  6A38               	clrf	(??i2___ftdiv+2)& (0+255),c
 11429  004D0E  3431               	rlcf	i2___ftdiv@f1+1,w,c
 11430  004D10  3636               	rlcf	??i2___ftdiv& (0+255),f,c
 11431  004D12  E301               	bnc	u802_41
 11432  004D14  8037               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 11433  004D16                     u802_41:
 11434  004D16  5036               	movf	??i2___ftdiv,w,c
 11435  004D18  6E3D               	movwf	i2___ftdiv@exp,c
 11436  004D1A  503D               	movf	i2___ftdiv@exp,w,c
 11437  004D1C  A4D8               	btfss	status,2,c
 11438  004D1E  D007               	goto	i2l5627
 11439  004D20  0E00               	movlw	0
 11440  004D22  6E30               	movwf	?i2___ftdiv,c
 11441  004D24  0E00               	movlw	0
 11442  004D26  6E31               	movwf	?i2___ftdiv+1,c
 11443  004D28  0E00               	movlw	0
 11444  004D2A  6E32               	movwf	?i2___ftdiv+2,c
 11445  004D2C  0012               	return	
 11446  004D2E                     i2l5627:
 11447  004D2E  C035  F036         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 11448  004D32  6A37               	clrf	(??i2___ftdiv+1)& (0+255),c
 11449  004D34  6A38               	clrf	(??i2___ftdiv+2)& (0+255),c
 11450  004D36  3434               	rlcf	i2___ftdiv@f2+1,w,c
 11451  004D38  3636               	rlcf	??i2___ftdiv& (0+255),f,c
 11452  004D3A  E301               	bnc	u804_41
 11453  004D3C  8037               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 11454  004D3E                     u804_41:
 11455  004D3E  5036               	movf	??i2___ftdiv,w,c
 11456  004D40  6E3E               	movwf	i2___ftdiv@sign,c
 11457  004D42  503E               	movf	i2___ftdiv@sign,w,c
 11458  004D44  A4D8               	btfss	status,2,c
 11459  004D46  D007               	goto	i2l5633
 11460  004D48  0E00               	movlw	0
 11461  004D4A  6E30               	movwf	?i2___ftdiv,c
 11462  004D4C  0E00               	movlw	0
 11463  004D4E  6E31               	movwf	?i2___ftdiv+1,c
 11464  004D50  0E00               	movlw	0
 11465  004D52  6E32               	movwf	?i2___ftdiv+2,c
 11466  004D54  0012               	return	
 11467  004D56                     i2l5633:
 11468  004D56  0E00               	movlw	0
 11469  004D58  6E3A               	movwf	i2___ftdiv@f3,c
 11470  004D5A  0E00               	movlw	0
 11471  004D5C  6E3B               	movwf	i2___ftdiv@f3+1,c
 11472  004D5E  0E00               	movlw	0
 11473  004D60  6E3C               	movwf	i2___ftdiv@f3+2,c
 11474  004D62  503E               	movf	i2___ftdiv@sign,w,c
 11475  004D64  0F89               	addlw	137
 11476  004D66  5E3D               	subwf	i2___ftdiv@exp,f,c
 11477  004D68  C032  F03E         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 11478  004D6C  5035               	movf	i2___ftdiv@f2+2,w,c
 11479  004D6E  1A3E               	xorwf	i2___ftdiv@sign,f,c
 11480  004D70  0E80               	movlw	128
 11481  004D72  163E               	andwf	i2___ftdiv@sign,f,c
 11482  004D74  8E31               	bsf	i2___ftdiv@f1+1,7,c
 11483  004D76  0EFF               	movlw	255
 11484  004D78  1630               	andwf	i2___ftdiv@f1,f,c
 11485  004D7A  0EFF               	movlw	255
 11486  004D7C  1631               	andwf	i2___ftdiv@f1+1,f,c
 11487  004D7E  0E00               	movlw	0
 11488  004D80  1632               	andwf	i2___ftdiv@f1+2,f,c
 11489  004D82  8E34               	bsf	i2___ftdiv@f2+1,7,c
 11490  004D84  0EFF               	movlw	255
 11491  004D86  1633               	andwf	i2___ftdiv@f2,f,c
 11492  004D88  0EFF               	movlw	255
 11493  004D8A  1634               	andwf	i2___ftdiv@f2+1,f,c
 11494  004D8C  0E00               	movlw	0
 11495  004D8E  1635               	andwf	i2___ftdiv@f2+2,f,c
 11496  004D90  0E18               	movlw	24
 11497  004D92  6E39               	movwf	i2___ftdiv@cntr,c
 11498  004D94                     i2l5653:
 11499  004D94  90D8               	bcf	status,0,c
 11500  004D96  363A               	rlcf	i2___ftdiv@f3,f,c
 11501  004D98  363B               	rlcf	i2___ftdiv@f3+1,f,c
 11502  004D9A  363C               	rlcf	i2___ftdiv@f3+2,f,c
 11503  004D9C  5033               	movf	i2___ftdiv@f2,w,c
 11504  004D9E  5C30               	subwf	i2___ftdiv@f1,w,c
 11505  004DA0  5034               	movf	i2___ftdiv@f2+1,w,c
 11506  004DA2  5831               	subwfb	i2___ftdiv@f1+1,w,c
 11507  004DA4  5035               	movf	i2___ftdiv@f2+2,w,c
 11508  004DA6  5832               	subwfb	i2___ftdiv@f1+2,w,c
 11509  004DA8  A0D8               	btfss	status,0,c
 11510  004DAA  D007               	goto	i2l814
 11511  004DAC  5033               	movf	i2___ftdiv@f2,w,c
 11512  004DAE  5E30               	subwf	i2___ftdiv@f1,f,c
 11513  004DB0  5034               	movf	i2___ftdiv@f2+1,w,c
 11514  004DB2  5A31               	subwfb	i2___ftdiv@f1+1,f,c
 11515  004DB4  5035               	movf	i2___ftdiv@f2+2,w,c
 11516  004DB6  5A32               	subwfb	i2___ftdiv@f1+2,f,c
 11517  004DB8  803A               	bsf	i2___ftdiv@f3,0,c
 11518  004DBA                     i2l814:
 11519  004DBA  90D8               	bcf	status,0,c
 11520  004DBC  3630               	rlcf	i2___ftdiv@f1,f,c
 11521  004DBE  3631               	rlcf	i2___ftdiv@f1+1,f,c
 11522  004DC0  3632               	rlcf	i2___ftdiv@f1+2,f,c
 11523  004DC2  2E39               	decfsz	i2___ftdiv@cntr,f,c
 11524  004DC4  D7E7               	goto	i2l5653
 11525  004DC6  C03A  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 11526  004DCA  C03B  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 11527  004DCE  C03C  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 11528  004DD2  C03D  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 11529  004DD6  C03E  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 11530  004DDA  EC17  F028         	call	i2___ftpack	;wreg free
 11531  004DDE  C001  F030         	movff	?i2___ftpack,?i2___ftdiv
 11532  004DE2  C002  F031         	movff	?i2___ftpack+1,?i2___ftdiv+1
 11533  004DE6  C003  F032         	movff	?i2___ftpack+2,?i2___ftdiv+2
 11534  004DEA  0012               	return	
 11535  004DEC                     __end_ofi2___ftdiv:
 11536                           	opt stack 0
 11537                           tosu	equ	0xFFF
 11538                           tosh	equ	0xFFE
 11539                           tosl	equ	0xFFD
 11540                           pclatu	equ	0xFFB
 11541                           pclath	equ	0xFFA
 11542                           tblptru	equ	0xFF8
 11543                           tblptrh	equ	0xFF7
 11544                           tblptrl	equ	0xFF6
 11545                           tablat	equ	0xFF5
 11546                           prodh	equ	0xFF4
 11547                           prodl	equ	0xFF3
 11548                           intcon	equ	0xFF2
 11549                           intcon2	equ	0xFF1
 11550                           intcon3	equ	0xFF0
 11551                           postinc0	equ	0xFEE
 11552                           fsr0h	equ	0xFEA
 11553                           fsr0l	equ	0xFE9
 11554                           wreg	equ	0xFE8
 11555                           postdec1	equ	0xFE5
 11556                           fsr1h	equ	0xFE2
 11557                           fsr1l	equ	0xFE1
 11558                           indf2	equ	0xFDF
 11559                           postinc2	equ	0xFDE
 11560                           postdec2	equ	0xFDD
 11561                           fsr2h	equ	0xFDA
 11562                           fsr2l	equ	0xFD9
 11563                           status	equ	0xFD8
 11564                           
 11565 ;; *************** function i2_TMR0_StartTimer *****************
 11566 ;; Defined at:
 11567 ;;		line 48 in file "mcc_generated_files/tmr0.c"
 11568 ;; Parameters:    Size  Location     Type
 11569 ;;		None
 11570 ;; Auto vars:     Size  Location     Type
 11571 ;;		None
 11572 ;; Return value:  Size  Location     Type
 11573 ;;                  1    wreg      void 
 11574 ;; Registers used:
 11575 ;;		None
 11576 ;; Tracked objects:
 11577 ;;		On entry : 0/0
 11578 ;;		On exit  : 0/0
 11579 ;;		Unchanged: 0/0
 11580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11581 ;;      Params:         0       0       0       0       0       0       0
 11582 ;;      Locals:         0       0       0       0       0       0       0
 11583 ;;      Temps:          0       0       0       0       0       0       0
 11584 ;;      Totals:         0       0       0       0       0       0       0
 11585 ;;Total ram usage:        0 bytes
 11586 ;; Hardware stack levels used:    1
 11587 ;; This function calls:
 11588 ;;		Nothing
 11589 ;; This function is called by:
 11590 ;;		_INT0_ISR
 11591 ;; This function uses a non-reentrant model
 11592 ;;
 11593                           
 11594                           	psect	text45
 11595  005B6A                     __ptext45:
 11596                           	opt stack 0
 11597  005B6A                     i2_TMR0_StartTimer:
 11598                           	opt stack 23
 11599                           
 11600                           ;tmr0.c: 51: T0CONbits.TMR0ON = 1;
 11601                           
 11602                           ;incstack = 0
 11603  005B6A  8ED5               	bsf	4053,7,c	;volatile
 11604  005B6C  0012               	return		;funcret
 11605  005B6E                     __end_ofi2_TMR0_StartTimer:
 11606                           	opt stack 0
 11607                           tosu	equ	0xFFF
 11608                           tosh	equ	0xFFE
 11609                           tosl	equ	0xFFD
 11610                           pclatu	equ	0xFFB
 11611                           pclath	equ	0xFFA
 11612                           tblptru	equ	0xFF8
 11613                           tblptrh	equ	0xFF7
 11614                           tblptrl	equ	0xFF6
 11615                           tablat	equ	0xFF5
 11616                           prodh	equ	0xFF4
 11617                           prodl	equ	0xFF3
 11618                           intcon	equ	0xFF2
 11619                           intcon2	equ	0xFF1
 11620                           intcon3	equ	0xFF0
 11621                           postinc0	equ	0xFEE
 11622                           fsr0h	equ	0xFEA
 11623                           fsr0l	equ	0xFE9
 11624                           wreg	equ	0xFE8
 11625                           postdec1	equ	0xFE5
 11626                           fsr1h	equ	0xFE2
 11627                           fsr1l	equ	0xFE1
 11628                           indf2	equ	0xFDF
 11629                           postinc2	equ	0xFDE
 11630                           postdec2	equ	0xFDD
 11631                           fsr2h	equ	0xFDA
 11632                           fsr2l	equ	0xFD9
 11633                           status	equ	0xFD8
 11634                           
 11635 ;; *************** function _printf *****************
 11636 ;; Defined at:
 11637 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\printf.c"
 11638 ;; Parameters:    Size  Location     Type
 11639 ;;  f               2   23[BANK0 ] PTR const unsigned char 
 11640 ;;		 -> STR_2(53), STR_1(12), 
 11641 ;; Auto vars:     Size  Location     Type
 11642 ;;  pb              4   83[COMRAM] struct __prbuf
 11643 ;;  ap              2   81[COMRAM] PTR void [1]
 11644 ;;		 -> ?_sprintf(2), ?_printf(2), 
 11645 ;; Return value:  Size  Location     Type
 11646 ;;                  2   23[BANK0 ] int 
 11647 ;; Registers used:
 11648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11649 ;; Tracked objects:
 11650 ;;		On entry : 0/0
 11651 ;;		On exit  : 0/0
 11652 ;;		Unchanged: 0/0
 11653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11654 ;;      Params:         0      11       0       0       0       0       0
 11655 ;;      Locals:         6       0       0       0       0       0       0
 11656 ;;      Temps:          0       0       0       0       0       0       0
 11657 ;;      Totals:         6      11       0       0       0       0       0
 11658 ;;Total ram usage:       17 bytes
 11659 ;; Hardware stack levels used:    1
 11660 ;; Hardware stack levels required when called:    4
 11661 ;; This function calls:
 11662 ;;		i2__doprnt
 11663 ;; This function is called by:
 11664 ;;		_INT1_ISR
 11665 ;;		_INT0_ISR
 11666 ;; This function uses a non-reentrant model
 11667 ;;
 11668                           
 11669                           	psect	text46
 11670  005916                     __ptext46:
 11671                           	opt stack 0
 11672  005916                     _printf:
 11673                           	opt stack 19
 11674                           
 11675                           ;incstack = 0
 11676  005916  0E00               	movlw	0
 11677  005918  6E54               	movwf	printf@pb,c
 11678  00591A  0E00               	movlw	0
 11679  00591C  6E55               	movwf	printf@pb+1,c
 11680  00591E  0E4A               	movlw	low i2_putch
 11681  005920  6E56               	movwf	printf@pb+2,c
 11682  005922  0E5B               	movlw	high i2_putch
 11683  005924  6E57               	movwf	printf@pb+3,c
 11684  005926  0E79               	movlw	low (?_printf+2)
 11685  005928  6E52               	movwf	printf@ap,c
 11686  00592A  0E00               	movlw	high (?_printf+2)
 11687  00592C  6E53               	movwf	printf@ap+1,c
 11688                           
 11689                           ;	Return value of _printf is never used
 11690  00592E  0E54               	movlw	low printf@pb
 11691  005930  6E46               	movwf	i2__doprnt@pb,c
 11692  005932  0E00               	movlw	high printf@pb
 11693  005934  6E47               	movwf	i2__doprnt@pb+1,c
 11694  005936  C077  F048         	movff	printf@f,i2__doprnt@f
 11695  00593A  C078  F049         	movff	printf@f+1,i2__doprnt@f+1
 11696  00593E  0E52               	movlw	low printf@ap
 11697  005940  6E4A               	movwf	i2__doprnt@ap,c
 11698  005942  0E00               	movlw	high printf@ap
 11699  005944  6E4B               	movwf	i2__doprnt@ap+1,c
 11700  005946  ECB5  F00C         	call	i2__doprnt	;wreg free
 11701  00594A  0012               	return	
 11702  00594C                     __end_of_printf:
 11703                           	opt stack 0
 11704                           tosu	equ	0xFFF
 11705                           tosh	equ	0xFFE
 11706                           tosl	equ	0xFFD
 11707                           pclatu	equ	0xFFB
 11708                           pclath	equ	0xFFA
 11709                           tblptru	equ	0xFF8
 11710                           tblptrh	equ	0xFF7
 11711                           tblptrl	equ	0xFF6
 11712                           tablat	equ	0xFF5
 11713                           prodh	equ	0xFF4
 11714                           prodl	equ	0xFF3
 11715                           intcon	equ	0xFF2
 11716                           intcon2	equ	0xFF1
 11717                           intcon3	equ	0xFF0
 11718                           postinc0	equ	0xFEE
 11719                           fsr0h	equ	0xFEA
 11720                           fsr0l	equ	0xFE9
 11721                           wreg	equ	0xFE8
 11722                           postdec1	equ	0xFE5
 11723                           fsr1h	equ	0xFE2
 11724                           fsr1l	equ	0xFE1
 11725                           indf2	equ	0xFDF
 11726                           postinc2	equ	0xFDE
 11727                           postdec2	equ	0xFDD
 11728                           fsr2h	equ	0xFDA
 11729                           fsr2l	equ	0xFD9
 11730                           status	equ	0xFD8
 11731                           
 11732 ;; *************** function i2__doprnt *****************
 11733 ;; Defined at:
 11734 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 11735 ;; Parameters:    Size  Location     Type
 11736 ;;  pb              2   69[COMRAM] PTR struct __prbuf
 11737 ;;		 -> sprintf@pb(4), printf@pb(4), 
 11738 ;;  f               2   71[COMRAM] PTR const unsigned char 
 11739 ;;		 -> STR_6(11), STR_5(11), STR_4(11), STR_3(11), 
 11740 ;;		 -> STR_2(53), STR_1(12), 
 11741 ;;  ap              2   73[COMRAM] PTR PTR void 
 11742 ;;		 -> sprintf@ap(2), printf@ap(2), 
 11743 ;; Auto vars:     Size  Location     Type
 11744 ;;  _doprnt         4    9[BANK0 ] struct .
 11745 ;;  _doprnt         4    5[BANK0 ] unsigned long 
 11746 ;;  _doprnt         3   13[BANK0 ] unsigned long 
 11747 ;;  _doprnt         3    0        PTR const unsigned char 
 11748 ;;  _doprnt         2   20[BANK0 ] int 
 11749 ;;  _doprnt         2   18[BANK0 ] unsigned short 
 11750 ;;  _doprnt         2   16[BANK0 ] int 
 11751 ;;  _doprnt         2    3[BANK0 ] int 
 11752 ;;  _doprnt         2    0        unsigned int 
 11753 ;;  _doprnt         1   22[BANK0 ] char 
 11754 ;;  _doprnt         1    0        unsigned char 
 11755 ;; Return value:  Size  Location     Type
 11756 ;;                  2   69[COMRAM] int 
 11757 ;; Registers used:
 11758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11759 ;; Tracked objects:
 11760 ;;		On entry : 0/0
 11761 ;;		On exit  : 0/0
 11762 ;;		Unchanged: 0/0
 11763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11764 ;;      Params:         6       0       0       0       0       0       0
 11765 ;;      Locals:         0      23       0       0       0       0       0
 11766 ;;      Temps:          6       0       0       0       0       0       0
 11767 ;;      Totals:        12      23       0       0       0       0       0
 11768 ;;Total ram usage:       35 bytes
 11769 ;; Hardware stack levels used:    1
 11770 ;; Hardware stack levels required when called:    3
 11771 ;; This function calls:
 11772 ;;		Absolute function
 11773 ;;		i2___awdiv
 11774 ;;		i2___ftadd
 11775 ;;		i2___ftge
 11776 ;;		i2___ftmul
 11777 ;;		i2___ftneg
 11778 ;;		i2___ftsub
 11779 ;;		i2___fttol
 11780 ;;		i2___lldiv
 11781 ;;		i2___llmod
 11782 ;;		i2___lltoft
 11783 ;;		i2___wmul
 11784 ;;		i2__div_to_l_
 11785 ;;		i2__tdiv_to_l_
 11786 ;;		i2_fround
 11787 ;;		i2_isdigit
 11788 ;;		i2_putch
 11789 ;;		i2_scale
 11790 ;; This function is called by:
 11791 ;;		_printf
 11792 ;; This function uses a non-reentrant model
 11793 ;;
 11794                           
 11795                           	psect	text47
 11796  00196A                     __ptext47:
 11797                           	opt stack 0
 11798  00196A                     i2__doprnt:
 11799                           	opt stack 19
 11800                           
 11801                           ;doprnt.c: 499: signed char c;
 11802                           ;doprnt.c: 501: int width;
 11803                           ;doprnt.c: 504: int prec;
 11804                           ;doprnt.c: 508: unsigned short flag;
 11805                           ;doprnt.c: 515: char d;
 11806                           ;doprnt.c: 516: double fval;
 11807                           ;doprnt.c: 517: int exp;
 11808                           ;doprnt.c: 523: union {
 11809                           ;doprnt.c: 524: unsigned long vd;
 11810                           ;doprnt.c: 525: double integ;
 11811                           ;doprnt.c: 526: } tmpval;
 11812                           ;doprnt.c: 528: unsigned long val;
 11813                           ;doprnt.c: 529: unsigned len;
 11814                           ;doprnt.c: 530: const char * cp;
 11815                           ;doprnt.c: 536: while(c = *f++) {
 11816                           
 11817                           ;incstack = 0
 11818  00196A  EF5E  F015         	goto	i2l9459
 11819  00196E                     i2l9071:
 11820                           
 11821                           ;doprnt.c: 538: if(c != '%')
 11822  00196E  0E25               	movlw	37
 11823  001970  0100               	movlb	0	; () banked
 11824  001972  1976               	xorwf	i2__doprnt@c& (0+255),w,b
 11825  001974  B4D8               	btfsc	status,2,c
 11826  001976  D036               	goto	i2l9081
 11827                           
 11828                           ; BSR set to: 0
 11829                           ;doprnt.c: 540: {
 11830                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 11831  001978  EE20 F002          	lfsr	2,2
 11832  00197C  5046               	movf	i2__doprnt@pb,w,c
 11833  00197E  26D9               	addwf	fsr2l,f,c
 11834  001980  5047               	movf	i2__doprnt@pb+1,w,c
 11835  001982  22DA               	addwfc	fsr2h,f,c
 11836  001984  50DE               	movf	postinc2,w,c
 11837  001986  10DE               	iorwf	postinc2,w,c
 11838  001988  B4D8               	btfsc	status,2,c
 11839  00198A  D015               	goto	i2l9077
 11840                           
 11841                           ; BSR set to: 0
 11842  00198C  EE20 F002          	lfsr	2,2
 11843  001990  5046               	movf	i2__doprnt@pb,w,c
 11844  001992  26D9               	addwf	fsr2l,f,c
 11845  001994  5047               	movf	i2__doprnt@pb+1,w,c
 11846  001996  22DA               	addwfc	fsr2h,f,c
 11847  001998  D802               	call	i2u1498_48
 11848  00199A  EF5E  F015         	goto	i2l9459
 11849  00199E                     i2u1498_48:
 11850  00199E  0005               	push	
 11851  0019A0  6EFA               	movwf	pclath,c
 11852  0019A2  50DE               	movf	postinc2,w,c
 11853  0019A4  6EFD               	movwf	tosl,c
 11854  0019A6  50DE               	movf	postinc2,w,c
 11855  0019A8  6EFE               	movwf	tosh,c
 11856  0019AA  50F8               	movf	tblptru,w,c
 11857  0019AC  6EFF               	movwf	tosu,c
 11858  0019AE  50FA               	movf	pclath,w,c
 11859  0019B0  0100               	movlb	0	; () banked
 11860  0019B2  5176               	movf	i2__doprnt@c& (0+255),w,b
 11861  0019B4  0012               	return		;indir
 11862  0019B6                     i2l9077:
 11863  0019B6  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 11864  0019BA  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 11865  0019BE  CFDE F04C          	movff	postinc2,??i2__doprnt
 11866  0019C2  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 11867  0019C6  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 11868  0019CA  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 11869  0019CE  C076  FFDF         	movff	i2__doprnt@c,indf2
 11870  0019D2  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 11871  0019D6  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 11872  0019DA  2ADE               	incf	postinc2,f,c
 11873  0019DC  0E00               	movlw	0
 11874  0019DE  22DD               	addwfc	postdec2,f,c
 11875                           
 11876                           ;doprnt.c: 542: continue;
 11877  0019E0  EF5E  F015         	goto	i2l9459
 11878  0019E4                     i2l9081:
 11879                           
 11880                           ;doprnt.c: 543: }
 11881                           ;doprnt.c: 546: width = 0;
 11882  0019E4  0E00               	movlw	0
 11883  0019E6  0100               	movlb	0	; () banked
 11884  0019E8  6F71               	movwf	(i2__doprnt@width+1)& (0+255),b
 11885  0019EA  0E00               	movlw	0
 11886  0019EC  6F70               	movwf	i2__doprnt@width& (0+255),b
 11887                           
 11888                           ;doprnt.c: 548: flag = 0;
 11889  0019EE  0E00               	movlw	0
 11890  0019F0  0100               	movlb	0	; () banked
 11891  0019F2  6F73               	movwf	(i2__doprnt@flag+1)& (0+255),b
 11892  0019F4  0E00               	movlw	0
 11893  0019F6  6F72               	movwf	i2__doprnt@flag& (0+255),b
 11894                           
 11895                           ; BSR set to: 0
 11896                           ;doprnt.c: 551: switch(*f) {
 11897                           
 11898                           ;doprnt.c: 550: for(;;) {
 11899  0019F8  D004               	goto	i2l9087
 11900  0019FA                     i2l9083:
 11901                           
 11902                           ;doprnt.c: 580: flag |= 0x04;
 11903  0019FA  0100               	movlb	0	; () banked
 11904  0019FC  8572               	bsf	i2__doprnt@flag& (0+255),2,b
 11905                           
 11906                           ;doprnt.c: 581: f++;
 11907  0019FE  4A48               	infsnz	i2__doprnt@f,f,c
 11908  001A00  2A49               	incf	i2__doprnt@f+1,f,c
 11909  001A02                     i2l9087:
 11910  001A02  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 11911  001A06  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 11912  001A0A                     	if	0	;tblptru may be non-zero
 11913  001A0A                     	endif
 11914  001A0A                     	if	0	;tblptru may be non-zero
 11915  001A0A                     	endif
 11916  001A0A  0008               	tblrd		*
 11917  001A0C  50F5               	movf	tablat,w,c
 11918                           
 11919                           ; Switch size 1, requested type "space"
 11920                           ; Number of cases is 1, Range of values is 48 to 48
 11921                           ; switch strategies available:
 11922                           ; Name         Instructions Cycles
 11923                           ; simple_byte            4     3 (average)
 11924                           ;	Chosen strategy is simple_byte
 11925  001A0E  0A30               	xorlw	48	; case 48
 11926  001A10  B4D8               	btfsc	status,2,c
 11927  001A12  D7F3               	goto	i2l9083
 11928                           
 11929                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 11930                           
 11931                           ;doprnt.c: 586: }
 11932                           
 11933                           ;doprnt.c: 585: break;
 11934  001A14  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 11935  001A18  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 11936  001A1C                     	if	0	;tblptru may be non-zero
 11937  001A1C                     	endif
 11938  001A1C                     	if	0	;tblptru may be non-zero
 11939  001A1C                     	endif
 11940  001A1C  0008               	tblrd		*
 11941  001A1E  50F5               	movf	tablat,w,c
 11942  001A20  EC4D  F02D         	call	i2_isdigit
 11943  001A24  A0D8               	btfss	status,0,c
 11944  001A26  D035               	goto	i2l9101
 11945                           
 11946                           ;doprnt.c: 598: width = 0;
 11947  001A28  0E00               	movlw	0
 11948  001A2A  0100               	movlb	0	; () banked
 11949  001A2C  6F71               	movwf	(i2__doprnt@width+1)& (0+255),b
 11950  001A2E  0E00               	movlw	0
 11951  001A30  6F70               	movwf	i2__doprnt@width& (0+255),b
 11952  001A32                     i2l9093:
 11953                           
 11954                           ;doprnt.c: 600: width *= 10;
 11955  001A32  C070  F00F         	movff	i2__doprnt@width,i2___wmul@multiplier
 11956  001A36  C071  F010         	movff	i2__doprnt@width+1,i2___wmul@multiplier+1
 11957  001A3A  0E00               	movlw	0
 11958  001A3C  6E12               	movwf	i2___wmul@multiplicand+1,c
 11959  001A3E  0E0A               	movlw	10
 11960  001A40  6E11               	movwf	i2___wmul@multiplicand,c
 11961  001A42  EC16  F02D         	call	i2___wmul	;wreg free
 11962  001A46  C00F  F070         	movff	?i2___wmul,i2__doprnt@width
 11963  001A4A  C010  F071         	movff	?i2___wmul+1,i2__doprnt@width+1
 11964                           
 11965                           ;doprnt.c: 601: width += *f++ - '0';
 11966  001A4E  0ED0               	movlw	208
 11967  001A50  6E4C               	movwf	??i2__doprnt& (0+255),c
 11968  001A52  0EFF               	movlw	255
 11969  001A54  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 11970  001A56  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 11971  001A5A  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 11972  001A5E                     	if	0	;tblptru may be non-zero
 11973  001A5E                     	endif
 11974  001A5E                     	if	0	;tblptru may be non-zero
 11975  001A5E                     	endif
 11976  001A5E  0008               	tblrd		*
 11977  001A60  50F5               	movf	tablat,w,c
 11978  001A62  6E4E               	movwf	(??i2__doprnt+2)& (0+255),c
 11979  001A64  6A4F               	clrf	(??i2__doprnt+3)& (0+255),c
 11980  001A66  504C               	movf	??i2__doprnt,w,c
 11981  001A68  264E               	addwf	??i2__doprnt+2,f,c
 11982  001A6A  504D               	movf	??i2__doprnt+1,w,c
 11983  001A6C  224F               	addwfc	??i2__doprnt+3,f,c
 11984  001A6E  504E               	movf	??i2__doprnt+2,w,c
 11985  001A70  0100               	movlb	0	; () banked
 11986  001A72  2770               	addwf	i2__doprnt@width& (0+255),f,b
 11987  001A74  504F               	movf	??i2__doprnt+3,w,c
 11988  001A76  0100               	movlb	0	; () banked
 11989  001A78  2371               	addwfc	(i2__doprnt@width+1)& (0+255),f,b
 11990                           
 11991                           ; BSR set to: 0
 11992  001A7A  4A48               	infsnz	i2__doprnt@f,f,c
 11993  001A7C  2A49               	incf	i2__doprnt@f+1,f,c
 11994                           
 11995                           ; BSR set to: 0
 11996                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 11997  001A7E  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 11998  001A82  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 11999  001A86                     	if	0	;tblptru may be non-zero
 12000  001A86                     	endif
 12001  001A86                     	if	0	;tblptru may be non-zero
 12002  001A86                     	endif
 12003  001A86  0008               	tblrd		*
 12004  001A88  50F5               	movf	tablat,w,c
 12005  001A8A  EC4D  F02D         	call	i2_isdigit
 12006  001A8E  B0D8               	btfsc	status,0,c
 12007  001A90  D7D0               	goto	i2l9093
 12008  001A92                     i2l9101:
 12009                           
 12010                           ;doprnt.c: 608: }
 12011                           ;doprnt.c: 611: if(*f == '.') {
 12012  001A92  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12013  001A96  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12014  001A9A                     	if	0	;tblptru may be non-zero
 12015  001A9A                     	endif
 12016  001A9A                     	if	0	;tblptru may be non-zero
 12017  001A9A                     	endif
 12018  001A9A  0008               	tblrd		*
 12019  001A9C  50F5               	movf	tablat,w,c
 12020  001A9E  0A2E               	xorlw	46
 12021  001AA0  A4D8               	btfss	status,2,c
 12022  001AA2  D032               	goto	i2l9113
 12023                           
 12024                           ;doprnt.c: 612: flag |= 0x4000;
 12025  001AA4  0100               	movlb	0	; () banked
 12026  001AA6  8D73               	bsf	(i2__doprnt@flag+1)& (0+255),6,b
 12027                           
 12028                           ;doprnt.c: 613: f++;
 12029  001AA8  4A48               	infsnz	i2__doprnt@f,f,c
 12030  001AAA  2A49               	incf	i2__doprnt@f+1,f,c
 12031                           
 12032                           ; BSR set to: 0
 12033                           ;doprnt.c: 620: {
 12034                           ;doprnt.c: 621: prec = 0;
 12035  001AAC  0E00               	movlw	0
 12036  001AAE  0100               	movlb	0	; () banked
 12037  001AB0  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 12038  001AB2  0E00               	movlw	0
 12039  001AB4  6F74               	movwf	i2__doprnt@prec& (0+255),b
 12040                           
 12041                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 12042  001AB6  D01D               	goto	i2l9111
 12043  001AB8                     i2l9107:
 12044                           
 12045                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 12046  001AB8  C074  F00F         	movff	i2__doprnt@prec,i2___wmul@multiplier
 12047  001ABC  C075  F010         	movff	i2__doprnt@prec+1,i2___wmul@multiplier+1
 12048  001AC0  0E00               	movlw	0
 12049  001AC2  6E12               	movwf	i2___wmul@multiplicand+1,c
 12050  001AC4  0E0A               	movlw	10
 12051  001AC6  6E11               	movwf	i2___wmul@multiplicand,c
 12052  001AC8  EC16  F02D         	call	i2___wmul	;wreg free
 12053  001ACC  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12054  001AD0  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12055  001AD4                     	if	0	;tblptru may be non-zero
 12056  001AD4                     	endif
 12057  001AD4                     	if	0	;tblptru may be non-zero
 12058  001AD4                     	endif
 12059  001AD4  0008               	tblrd		*
 12060  001AD6  50F5               	movf	tablat,w,c
 12061  001AD8  260F               	addwf	?i2___wmul,f,c
 12062  001ADA  0E00               	movlw	0
 12063  001ADC  2210               	addwfc	?i2___wmul+1,f,c
 12064  001ADE  0ED0               	movlw	208
 12065  001AE0  240F               	addwf	?i2___wmul,w,c
 12066  001AE2  0100               	movlb	0	; () banked
 12067  001AE4  6F74               	movwf	i2__doprnt@prec& (0+255),b
 12068  001AE6  0EFF               	movlw	255
 12069  001AE8  2010               	addwfc	?i2___wmul+1,w,c
 12070  001AEA  0100               	movlb	0	; () banked
 12071  001AEC  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 12072                           
 12073                           ; BSR set to: 0
 12074  001AEE  4A48               	infsnz	i2__doprnt@f,f,c
 12075  001AF0  2A49               	incf	i2__doprnt@f+1,f,c
 12076  001AF2                     i2l9111:
 12077                           
 12078                           ; BSR set to: 0
 12079  001AF2  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12080  001AF6  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12081  001AFA                     	if	0	;tblptru may be non-zero
 12082  001AFA                     	endif
 12083  001AFA                     	if	0	;tblptru may be non-zero
 12084  001AFA                     	endif
 12085  001AFA  0008               	tblrd		*
 12086  001AFC  50F5               	movf	tablat,w,c
 12087  001AFE  EC4D  F02D         	call	i2_isdigit
 12088  001B02  A0D8               	btfss	status,0,c
 12089  001B04  D012               	goto	i2l9125
 12090  001B06  D7D8               	goto	i2l9107
 12091  001B08                     i2l9113:
 12092                           
 12093                           ;doprnt.c: 626: prec = 0;
 12094  001B08  0E00               	movlw	0
 12095  001B0A  0100               	movlb	0	; () banked
 12096  001B0C  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 12097  001B0E  0E00               	movlw	0
 12098  001B10  6F74               	movwf	i2__doprnt@prec& (0+255),b
 12099                           
 12100                           ; BSR set to: 0
 12101                           ;doprnt.c: 628: flag |= 0x1000;
 12102  001B12  0100               	movlb	0	; () banked
 12103  001B14  8973               	bsf	(i2__doprnt@flag+1)& (0+255),4,b
 12104                           
 12105                           ; BSR set to: 0
 12106                           ;doprnt.c: 635: switch(c = *f++) {
 12107                           
 12108                           ;doprnt.c: 630: }
 12109                           ;doprnt.c: 633: loop:
 12110                           
 12111                           ; BSR set to: 0
 12112  001B16  D009               	goto	i2l9125
 12113  001B18                     i2l9117:
 12114                           
 12115                           ; BSR set to: 0
 12116                           ;doprnt.c: 643: flag |= 0x10;
 12117  001B18  0100               	movlb	0	; () banked
 12118  001B1A  8972               	bsf	i2__doprnt@flag& (0+255),4,b
 12119                           
 12120                           ;doprnt.c: 644: goto loop;
 12121  001B1C  D006               	goto	i2l9125
 12122  001B1E                     i2l9119:
 12123                           
 12124                           ; BSR set to: 0
 12125                           ;doprnt.c: 663: flag |= 0x400;
 12126  001B1E  0100               	movlb	0	; () banked
 12127  001B20  8573               	bsf	(i2__doprnt@flag+1)& (0+255),2,b
 12128                           
 12129                           ; BSR set to: 0
 12130                           ;doprnt.c: 698: case 'i':
 12131                           ;doprnt.c: 699: break;
 12132                           
 12133                           ; BSR set to: 0
 12134                           
 12135                           ;doprnt.c: 697: case 'd':
 12136                           
 12137                           ;doprnt.c: 664: break;
 12138  001B22  D023               	goto	i2l9127
 12139  001B24                     i2l9121:
 12140                           
 12141                           ; BSR set to: 0
 12142                           ;doprnt.c: 818: flag |= 0x40;
 12143  001B24  0100               	movlb	0	; () banked
 12144  001B26  8D72               	bsf	i2__doprnt@flag& (0+255),6,b
 12145                           
 12146                           ; BSR set to: 0
 12147                           ;doprnt.c: 822: }
 12148                           
 12149                           ;doprnt.c: 819: break;
 12150  001B28  D020               	goto	i2l9127
 12151  001B2A                     i2l9125:
 12152  001B2A  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12153  001B2E  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12154  001B32  4A48               	infsnz	i2__doprnt@f,f,c
 12155  001B34  2A49               	incf	i2__doprnt@f+1,f,c
 12156  001B36                     	if	0	;tblptru may be non-zero
 12157  001B36                     	endif
 12158  001B36                     	if	0	;tblptru may be non-zero
 12159  001B36                     	endif
 12160  001B36  0008               	tblrd		*
 12161  001B38  CFF5 F076          	movff	tablat,i2__doprnt@c
 12162  001B3C  0100               	movlb	0	; () banked
 12163  001B3E  5176               	movf	i2__doprnt@c& (0+255),w,b
 12164                           
 12165                           ; Switch size 1, requested type "space"
 12166                           ; Number of cases is 6, Range of values is 0 to 117
 12167                           ; switch strategies available:
 12168                           ; Name         Instructions Cycles
 12169                           ; simple_byte           19    10 (average)
 12170                           ;	Chosen strategy is simple_byte
 12171  001B40  0A00               	xorlw	0	; case 0
 12172  001B42  B4D8               	btfsc	status,2,c
 12173  001B44  EF6C  F015         	goto	i2l9461
 12174  001B48  0A64               	xorlw	100	; case 100
 12175  001B4A  B4D8               	btfsc	status,2,c
 12176  001B4C  D00E               	goto	i2l9127
 12177  001B4E  0A02               	xorlw	2	; case 102
 12178  001B50  B4D8               	btfsc	status,2,c
 12179  001B52  D7E5               	goto	i2l9119
 12180  001B54  0A0F               	xorlw	15	; case 105
 12181  001B56  B4D8               	btfsc	status,2,c
 12182  001B58  D008               	goto	i2l9127
 12183  001B5A  0A05               	xorlw	5	; case 108
 12184  001B5C  B4D8               	btfsc	status,2,c
 12185  001B5E  D7DC               	goto	i2l9117
 12186  001B60  0A19               	xorlw	25	; case 117
 12187  001B62  B4D8               	btfsc	status,2,c
 12188  001B64  D7DF               	goto	i2l9121
 12189  001B66  EF5E  F015         	goto	i2l9459
 12190  001B6A                     i2l9127:
 12191                           
 12192                           ; BSR set to: 0
 12193                           ;doprnt.c: 825: if(flag & (0x700)) {
 12194  001B6A  0E07               	movlw	7
 12195  001B6C  0100               	movlb	0	; () banked
 12196  001B6E  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 12197  001B70  B4D8               	btfsc	status,2,c
 12198  001B72  EFB7  F012         	goto	i2l403
 12199                           
 12200                           ; BSR set to: 0
 12201                           ;doprnt.c: 827: if(flag & 0x1000)
 12202  001B76  0100               	movlb	0	; () banked
 12203  001B78  A973               	btfss	(i2__doprnt@flag+1)& (0+255),4,b
 12204  001B7A  D005               	goto	i2l9133
 12205                           
 12206                           ; BSR set to: 0
 12207                           ;doprnt.c: 829: prec = 6;
 12208  001B7C  0E00               	movlw	0
 12209  001B7E  0100               	movlb	0	; () banked
 12210  001B80  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 12211  001B82  0E06               	movlw	6
 12212  001B84  6F74               	movwf	i2__doprnt@prec& (0+255),b
 12213  001B86                     i2l9133:
 12214                           
 12215                           ; BSR set to: 0
 12216                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 12217  001B86  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 12218  001B8A  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 12219  001B8E  CFDF F04C          	movff	indf2,??i2__doprnt
 12220  001B92  0E03               	movlw	3
 12221  001B94  26DE               	addwf	postinc2,f,c
 12222  001B96  CFDF F04D          	movff	indf2,??i2__doprnt+1
 12223  001B9A  0E00               	movlw	0
 12224  001B9C  22DD               	addwfc	postdec2,f,c
 12225  001B9E  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12226  001BA2  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12227  001BA6  CFDE F06D          	movff	postinc2,i2__doprnt@fval
 12228  001BAA  CFDE F06E          	movff	postinc2,i2__doprnt@fval+1
 12229  001BAE  CFDD F06F          	movff	postdec2,i2__doprnt@fval+2
 12230                           
 12231                           ; BSR set to: 0
 12232                           ;doprnt.c: 831: if(fval < 0.0) {
 12233  001BB2  0100               	movlb	0	; () banked
 12234  001BB4  AF6F               	btfss	(i2__doprnt@fval+2)& (0+255),7,b
 12235  001BB6  D011               	goto	i2l9141
 12236                           
 12237                           ; BSR set to: 0
 12238                           ;doprnt.c: 832: fval = -fval;
 12239  001BB8  C06D  F001         	movff	i2__doprnt@fval,i2___ftneg@f1
 12240  001BBC  C06E  F002         	movff	i2__doprnt@fval+1,i2___ftneg@f1+1
 12241  001BC0  C06F  F003         	movff	i2__doprnt@fval+2,i2___ftneg@f1+2
 12242  001BC4  EC29  F02D         	call	i2___ftneg	;wreg free
 12243  001BC8  C001  F06D         	movff	?i2___ftneg,i2__doprnt@fval
 12244  001BCC  C002  F06E         	movff	?i2___ftneg+1,i2__doprnt@fval+1
 12245  001BD0  C003  F06F         	movff	?i2___ftneg+2,i2__doprnt@fval+2
 12246                           
 12247                           ;doprnt.c: 833: flag |= 0x03;
 12248  001BD4  0E03               	movlw	3
 12249  001BD6  0100               	movlb	0	; () banked
 12250  001BD8  1372               	iorwf	i2__doprnt@flag& (0+255),f,b
 12251  001BDA                     i2l9141:
 12252                           
 12253                           ; BSR set to: 0
 12254                           ;doprnt.c: 834: }
 12255                           ;doprnt.c: 835: exp = 0;
 12256  001BDA  0E00               	movlw	0
 12257  001BDC  0100               	movlb	0	; () banked
 12258  001BDE  6F64               	movwf	(i2__doprnt@exp+1)& (0+255),b
 12259  001BE0  0E00               	movlw	0
 12260  001BE2  6F63               	movwf	i2__doprnt@exp& (0+255),b
 12261                           
 12262                           ; BSR set to: 0
 12263                           ;doprnt.c: 836: if( fval!=0) {
 12264  001BE4  0100               	movlb	0	; () banked
 12265  001BE6  516D               	movf	i2__doprnt@fval& (0+255),w,b
 12266  001BE8  0100               	movlb	0	; () banked
 12267  001BEA  116E               	iorwf	(i2__doprnt@fval+1)& (0+255),w,b
 12268  001BEC  0100               	movlb	0	; () banked
 12269  001BEE  116F               	iorwf	(i2__doprnt@fval+2)& (0+255),w,b
 12270  001BF0  B4D8               	btfsc	status,2,c
 12271  001BF2  D08B               	goto	i2l9169
 12272                           
 12273                           ; BSR set to: 0
 12274                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 12275  001BF4  0E82               	movlw	130
 12276  001BF6  6E4C               	movwf	??i2__doprnt& (0+255),c
 12277  001BF8  0EFF               	movlw	255
 12278  001BFA  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 12279  001BFC  C06D  F04E         	movff	i2__doprnt@fval,??i2__doprnt+2
 12280  001C00  C06E  F04F         	movff	i2__doprnt@fval+1,??i2__doprnt+3
 12281  001C04  C06F  F050         	movff	i2__doprnt@fval+2,??i2__doprnt+4
 12282  001C08  C070  F051         	movff	i2__doprnt@fval+3,??i2__doprnt+5
 12283  001C0C  0E10               	movlw	16
 12284  001C0E  D005               	goto	i2u1507_40
 12285  001C10                     i2u1507_45:
 12286  001C10  90D8               	bcf	status,0,c
 12287  001C12  3251               	rrcf	??i2__doprnt+5,f,c
 12288  001C14  3250               	rrcf	??i2__doprnt+4,f,c
 12289  001C16  324F               	rrcf	??i2__doprnt+3,f,c
 12290  001C18  324E               	rrcf	??i2__doprnt+2,f,c
 12291  001C1A                     i2u1507_40:
 12292  001C1A  2EE8               	decfsz	wreg,f,c
 12293  001C1C  D7F9               	goto	i2u1507_45
 12294  001C1E  504E               	movf	??i2__doprnt+2,w,c
 12295  001C20  244C               	addwf	??i2__doprnt,w,c
 12296  001C22  0100               	movlb	0	; () banked
 12297  001C24  6F63               	movwf	i2__doprnt@exp& (0+255),b
 12298  001C26  0E00               	movlw	0
 12299  001C28  204D               	addwfc	??i2__doprnt+1,w,c
 12300  001C2A  0100               	movlb	0	; () banked
 12301  001C2C  6F64               	movwf	(i2__doprnt@exp+1)& (0+255),b
 12302                           
 12303                           ; BSR set to: 0
 12304                           ;doprnt.c: 838: exp--;
 12305  001C2E  0100               	movlb	0	; () banked
 12306  001C30  0763               	decf	i2__doprnt@exp& (0+255),f,b
 12307  001C32  A0D8               	btfss	status,0,c
 12308  001C34  0764               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 12309                           
 12310                           ; BSR set to: 0
 12311                           ;doprnt.c: 839: exp *= 3;
 12312  001C36  C063  F00F         	movff	i2__doprnt@exp,i2___wmul@multiplier
 12313  001C3A  C064  F010         	movff	i2__doprnt@exp+1,i2___wmul@multiplier+1
 12314  001C3E  0E00               	movlw	0
 12315  001C40  6E12               	movwf	i2___wmul@multiplicand+1,c
 12316  001C42  0E03               	movlw	3
 12317  001C44  6E11               	movwf	i2___wmul@multiplicand,c
 12318  001C46  EC16  F02D         	call	i2___wmul	;wreg free
 12319  001C4A  C00F  F063         	movff	?i2___wmul,i2__doprnt@exp
 12320  001C4E  C010  F064         	movff	?i2___wmul+1,i2__doprnt@exp+1
 12321                           
 12322                           ;doprnt.c: 840: exp /= 10;
 12323  001C52  C063  F007         	movff	i2__doprnt@exp,i2___awdiv@dividend
 12324  001C56  C064  F008         	movff	i2__doprnt@exp+1,i2___awdiv@dividend+1
 12325  001C5A  0E00               	movlw	0
 12326  001C5C  6E0A               	movwf	i2___awdiv@divisor+1,c
 12327  001C5E  0E0A               	movlw	10
 12328  001C60  6E09               	movwf	i2___awdiv@divisor,c
 12329  001C62  EC54  F029         	call	i2___awdiv	;wreg free
 12330  001C66  C007  F063         	movff	?i2___awdiv,i2__doprnt@exp
 12331  001C6A  C008  F064         	movff	?i2___awdiv+1,i2__doprnt@exp+1
 12332                           
 12333                           ;doprnt.c: 841: if(exp < 0)
 12334  001C6E  0100               	movlb	0	; () banked
 12335  001C70  AF64               	btfss	(i2__doprnt@exp+1)& (0+255),7,b
 12336  001C72  D004               	goto	i2l9157
 12337                           
 12338                           ; BSR set to: 0
 12339                           ;doprnt.c: 842: exp--;
 12340  001C74  0100               	movlb	0	; () banked
 12341  001C76  0763               	decf	i2__doprnt@exp& (0+255),f,b
 12342  001C78  A0D8               	btfss	status,0,c
 12343  001C7A  0764               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 12344  001C7C                     i2l9157:
 12345                           
 12346                           ; BSR set to: 0
 12347                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 12348  001C7C  0100               	movlb	0	; () banked
 12349  001C7E  5163               	movf	i2__doprnt@exp& (0+255),w,b
 12350  001C80  0800               	sublw	0
 12351  001C82  ECC8  F017         	call	i2_scale
 12352  001C86  C030  F069         	movff	?i2_scale,i2__doprnt@tmpval
 12353  001C8A  C031  F06A         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 12354  001C8E  C032  F06B         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 12355                           
 12356                           ;doprnt.c: 847: tmpval.integ *= fval;
 12357  001C92  C069  F021         	movff	i2__doprnt@tmpval,i2___ftmul@f1
 12358  001C96  C06A  F022         	movff	i2__doprnt@tmpval+1,i2___ftmul@f1+1
 12359  001C9A  C06B  F023         	movff	i2__doprnt@tmpval+2,i2___ftmul@f1+2
 12360  001C9E  C06D  F024         	movff	i2__doprnt@fval,i2___ftmul@f2
 12361  001CA2  C06E  F025         	movff	i2__doprnt@fval+1,i2___ftmul@f2+1
 12362  001CA6  C06F  F026         	movff	i2__doprnt@fval+2,i2___ftmul@f2+2
 12363  001CAA  EC8F  F025         	call	i2___ftmul	;wreg free
 12364  001CAE  C021  F069         	movff	?i2___ftmul,i2__doprnt@tmpval
 12365  001CB2  C022  F06A         	movff	?i2___ftmul+1,i2__doprnt@tmpval+1
 12366  001CB6  C023  F06B         	movff	?i2___ftmul+2,i2__doprnt@tmpval+2
 12367                           
 12368                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 12369  001CBA  C069  F001         	movff	i2__doprnt@tmpval,i2___ftge@ff1
 12370  001CBE  C06A  F002         	movff	i2__doprnt@tmpval+1,i2___ftge@ff1+1
 12371  001CC2  C06B  F003         	movff	i2__doprnt@tmpval+2,i2___ftge@ff1+2
 12372  001CC6  0E00               	movlw	0
 12373  001CC8  6E04               	movwf	i2___ftge@ff2,c
 12374  001CCA  0E80               	movlw	128
 12375  001CCC  6E05               	movwf	i2___ftge@ff2+1,c
 12376  001CCE  0E3F               	movlw	63
 12377  001CD0  6E06               	movwf	i2___ftge@ff2+2,c
 12378  001CD2  EC0C  F029         	call	i2___ftge	;wreg free
 12379  001CD6  B0D8               	btfsc	status,0,c
 12380  001CD8  D005               	goto	i2l9165
 12381                           
 12382                           ;doprnt.c: 849: exp--;
 12383  001CDA  0100               	movlb	0	; () banked
 12384  001CDC  0763               	decf	i2__doprnt@exp& (0+255),f,b
 12385  001CDE  A0D8               	btfss	status,0,c
 12386  001CE0  0764               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 12387  001CE2  D013               	goto	i2l9169
 12388  001CE4                     i2l9165:
 12389                           
 12390                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 12391  001CE4  C069  F001         	movff	i2__doprnt@tmpval,i2___ftge@ff1
 12392  001CE8  C06A  F002         	movff	i2__doprnt@tmpval+1,i2___ftge@ff1+1
 12393  001CEC  C06B  F003         	movff	i2__doprnt@tmpval+2,i2___ftge@ff1+2
 12394  001CF0  0E00               	movlw	0
 12395  001CF2  6E04               	movwf	i2___ftge@ff2,c
 12396  001CF4  0E20               	movlw	32
 12397  001CF6  6E05               	movwf	i2___ftge@ff2+1,c
 12398  001CF8  0E41               	movlw	65
 12399  001CFA  6E06               	movwf	i2___ftge@ff2+2,c
 12400  001CFC  EC0C  F029         	call	i2___ftge	;wreg free
 12401  001D00  A0D8               	btfss	status,0,c
 12402  001D02  D003               	goto	i2l9169
 12403                           
 12404                           ;doprnt.c: 851: exp++;
 12405  001D04  0100               	movlb	0	; () banked
 12406  001D06  4B63               	infsnz	i2__doprnt@exp& (0+255),f,b
 12407  001D08  2B64               	incf	(i2__doprnt@exp+1)& (0+255),f,b
 12408  001D0A                     i2l9169:
 12409                           
 12410                           ;doprnt.c: 852: }
 12411                           ;doprnt.c: 1112: if(prec <= 12)
 12412  001D0A  0100               	movlb	0	; () banked
 12413  001D0C  BF75               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 12414  001D0E  D008               	goto	i2l9171
 12415  001D10  0100               	movlb	0	; () banked
 12416  001D12  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 12417  001D14  E11D               	bnz	i2l9173
 12418  001D16  0E0D               	movlw	13
 12419  001D18  0100               	movlb	0	; () banked
 12420  001D1A  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 12421  001D1C  B0D8               	btfsc	status,0,c
 12422  001D1E  D018               	goto	i2l9173
 12423  001D20                     i2l9171:
 12424                           
 12425                           ; BSR set to: 0
 12426                           ;doprnt.c: 1113: fval += fround(prec);
 12427  001D20  C06D  F015         	movff	i2__doprnt@fval,i2___ftadd@f1
 12428  001D24  C06E  F016         	movff	i2__doprnt@fval+1,i2___ftadd@f1+1
 12429  001D28  C06F  F017         	movff	i2__doprnt@fval+2,i2___ftadd@f1+2
 12430  001D2C  0100               	movlb	0	; () banked
 12431  001D2E  5174               	movf	i2__doprnt@prec& (0+255),w,b
 12432  001D30  EC4A  F01C         	call	i2_fround
 12433  001D34  C030  F018         	movff	?i2_fround,i2___ftadd@f2
 12434  001D38  C031  F019         	movff	?i2_fround+1,i2___ftadd@f2+1
 12435  001D3C  C032  F01A         	movff	?i2_fround+2,i2___ftadd@f2+2
 12436  001D40  EC6D  F01D         	call	i2___ftadd	;wreg free
 12437  001D44  C015  F06D         	movff	?i2___ftadd,i2__doprnt@fval
 12438  001D48  C016  F06E         	movff	?i2___ftadd+1,i2__doprnt@fval+1
 12439  001D4C  C017  F06F         	movff	?i2___ftadd+2,i2__doprnt@fval+2
 12440  001D50                     i2l9173:
 12441                           
 12442                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 12443  001D50  0100               	movlb	0	; () banked
 12444  001D52  BF64               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 12445  001D54  D008               	goto	i2l9175
 12446  001D56  0100               	movlb	0	; () banked
 12447  001D58  5164               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 12448  001D5A  E126               	bnz	i2l9181
 12449  001D5C  0E0A               	movlw	10
 12450  001D5E  0100               	movlb	0	; () banked
 12451  001D60  5D63               	subwf	i2__doprnt@exp& (0+255),w,b
 12452  001D62  B0D8               	btfsc	status,0,c
 12453  001D64  D021               	goto	i2l9181
 12454  001D66                     i2l9175:
 12455                           
 12456                           ; BSR set to: 0
 12457  001D66  0100               	movlb	0	; () banked
 12458  001D68  516D               	movf	i2__doprnt@fval& (0+255),w,b
 12459  001D6A  0100               	movlb	0	; () banked
 12460  001D6C  116E               	iorwf	(i2__doprnt@fval+1)& (0+255),w,b
 12461  001D6E  0100               	movlb	0	; () banked
 12462  001D70  116F               	iorwf	(i2__doprnt@fval+2)& (0+255),w,b
 12463  001D72  B4D8               	btfsc	status,2,c
 12464  001D74  D05B               	goto	i2l9195
 12465                           
 12466                           ; BSR set to: 0
 12467  001D76  C06D  F037         	movff	i2__doprnt@fval,i2___fttol@f1
 12468  001D7A  C06E  F038         	movff	i2__doprnt@fval+1,i2___fttol@f1+1
 12469  001D7E  C06F  F039         	movff	i2__doprnt@fval+2,i2___fttol@f1+2
 12470  001D82  EC09  F026         	call	i2___fttol	;wreg free
 12471  001D86  5037               	movf	?i2___fttol,w,c
 12472  001D88  1038               	iorwf	?i2___fttol+1,w,c
 12473  001D8A  1039               	iorwf	?i2___fttol+2,w,c
 12474  001D8C  103A               	iorwf	?i2___fttol+3,w,c
 12475  001D8E  A4D8               	btfss	status,2,c
 12476  001D90  D04D               	goto	i2l9195
 12477  001D92  0100               	movlb	0	; () banked
 12478  001D94  BF64               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 12479  001D96  D04A               	goto	i2l9195
 12480  001D98  0100               	movlb	0	; () banked
 12481  001D9A  5164               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 12482  001D9C  E105               	bnz	i2l9181
 12483  001D9E  0E02               	movlw	2
 12484  001DA0  0100               	movlb	0	; () banked
 12485  001DA2  5D63               	subwf	i2__doprnt@exp& (0+255),w,b
 12486  001DA4  A0D8               	btfss	status,0,c
 12487  001DA6  D042               	goto	i2l9195
 12488  001DA8                     i2l9181:
 12489                           
 12490                           ; BSR set to: 0
 12491                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 12492  001DA8  C069  F001         	movff	i2__doprnt@tmpval,i2___ftge@ff1
 12493  001DAC  C06A  F002         	movff	i2__doprnt@tmpval+1,i2___ftge@ff1+1
 12494  001DB0  C06B  F003         	movff	i2__doprnt@tmpval+2,i2___ftge@ff1+2
 12495  001DB4  0E70               	movlw	112
 12496  001DB6  6E04               	movwf	i2___ftge@ff2,c
 12497  001DB8  0E89               	movlw	137
 12498  001DBA  6E05               	movwf	i2___ftge@ff2+1,c
 12499  001DBC  0E40               	movlw	64
 12500  001DBE  6E06               	movwf	i2___ftge@ff2+2,c
 12501  001DC0  EC0C  F029         	call	i2___ftge	;wreg free
 12502  001DC4  B0D8               	btfsc	status,0,c
 12503  001DC6  D003               	goto	i2l9185
 12504                           
 12505                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 12506  001DC8  0100               	movlb	0	; () banked
 12507  001DCA  0EF7               	movlw	247
 12508  001DCC  D002               	goto	L6
 12509  001DCE                     i2l9185:
 12510                           
 12511                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 12512  001DCE  0100               	movlb	0	; () banked
 12513  001DD0  0EF8               	movlw	248
 12514  001DD2                     L6:
 12515  001DD2  2763               	addwf	i2__doprnt@exp& (0+255),f,b
 12516  001DD4  0EFF               	movlw	255
 12517  001DD6  2364               	addwfc	(i2__doprnt@exp+1)& (0+255),f,b
 12518                           
 12519                           ; BSR set to: 0
 12520                           ;doprnt.c: 1124: }
 12521                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 12522                           
 12523                           ; BSR set to: 0
 12524  001DD8  0100               	movlb	0	; () banked
 12525  001DDA  5163               	movf	i2__doprnt@exp& (0+255),w,b
 12526  001DDC  ECC8  F017         	call	i2_scale
 12527  001DE0  C030  F069         	movff	?i2_scale,i2__doprnt@tmpval
 12528  001DE4  C031  F06A         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 12529  001DE8  C032  F06B         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 12530                           
 12531                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 12532  001DEC  C06D  F001         	movff	i2__doprnt@fval,i2__tdiv_to_l_@f1
 12533  001DF0  C06E  F002         	movff	i2__doprnt@fval+1,i2__tdiv_to_l_@f1+1
 12534  001DF4  C06F  F003         	movff	i2__doprnt@fval+2,i2__tdiv_to_l_@f1+2
 12535  001DF8  C069  F004         	movff	i2__doprnt@tmpval,i2__tdiv_to_l_@f2
 12536  001DFC  C06A  F005         	movff	i2__doprnt@tmpval+1,i2__tdiv_to_l_@f2+1
 12537  001E00  C06B  F006         	movff	i2__doprnt@tmpval+2,i2__tdiv_to_l_@f2+2
 12538  001E04  EC52  F023         	call	i2__tdiv_to_l_	;wreg free
 12539  001E08  C001  F065         	movff	?i2__tdiv_to_l_,i2__doprnt@val
 12540  001E0C  C002  F066         	movff	?i2__tdiv_to_l_+1,i2__doprnt@val+1
 12541  001E10  C003  F067         	movff	?i2__tdiv_to_l_+2,i2__doprnt@val+2
 12542  001E14  C004  F068         	movff	?i2__tdiv_to_l_+3,i2__doprnt@val+3
 12543                           
 12544                           ;doprnt.c: 1129: fval = 0.0;
 12545  001E18  0E00               	movlw	0
 12546  001E1A  0100               	movlb	0	; () banked
 12547  001E1C  6F6D               	movwf	i2__doprnt@fval& (0+255),b
 12548  001E1E  0E00               	movlw	0
 12549  001E20  0100               	movlb	0	; () banked
 12550  001E22  6F6E               	movwf	(i2__doprnt@fval+1)& (0+255),b
 12551  001E24  0E00               	movlw	0
 12552  001E26  0100               	movlb	0	; () banked
 12553  001E28  6F6F               	movwf	(i2__doprnt@fval+2)& (0+255),b
 12554                           
 12555                           ;doprnt.c: 1130: } else {
 12556  001E2A  D033               	goto	i2l9199
 12557  001E2C                     i2l9195:
 12558                           
 12559                           ;doprnt.c: 1131: val = (unsigned long)fval;
 12560  001E2C  C06D  F037         	movff	i2__doprnt@fval,i2___fttol@f1
 12561  001E30  C06E  F038         	movff	i2__doprnt@fval+1,i2___fttol@f1+1
 12562  001E34  C06F  F039         	movff	i2__doprnt@fval+2,i2___fttol@f1+2
 12563  001E38  EC09  F026         	call	i2___fttol	;wreg free
 12564  001E3C  C037  F065         	movff	?i2___fttol,i2__doprnt@val
 12565  001E40  C038  F066         	movff	?i2___fttol+1,i2__doprnt@val+1
 12566  001E44  C039  F067         	movff	?i2___fttol+2,i2__doprnt@val+2
 12567  001E48  C03A  F068         	movff	?i2___fttol+3,i2__doprnt@val+3
 12568                           
 12569                           ;doprnt.c: 1132: fval -= (double)val;
 12570  001E4C  C06D  F021         	movff	i2__doprnt@fval,i2___ftsub@f1
 12571  001E50  C06E  F022         	movff	i2__doprnt@fval+1,i2___ftsub@f1+1
 12572  001E54  C06F  F023         	movff	i2__doprnt@fval+2,i2___ftsub@f1+2
 12573  001E58  C065  F009         	movff	i2__doprnt@val,i2___lltoft@c
 12574  001E5C  C066  F00A         	movff	i2__doprnt@val+1,i2___lltoft@c+1
 12575  001E60  C067  F00B         	movff	i2__doprnt@val+2,i2___lltoft@c+2
 12576  001E64  C068  F00C         	movff	i2__doprnt@val+3,i2___lltoft@c+3
 12577  001E68  ECEF  F02A         	call	i2___lltoft	;wreg free
 12578  001E6C  C009  F024         	movff	?i2___lltoft,i2___ftsub@f2
 12579  001E70  C00A  F025         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 12580  001E74  C00B  F026         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 12581  001E78  EC18  F02C         	call	i2___ftsub	;wreg free
 12582  001E7C  C021  F06D         	movff	?i2___ftsub,i2__doprnt@fval
 12583  001E80  C022  F06E         	movff	?i2___ftsub+1,i2__doprnt@fval+1
 12584  001E84  C023  F06F         	movff	?i2___ftsub+2,i2__doprnt@fval+2
 12585                           
 12586                           ;doprnt.c: 1133: exp = 0;
 12587  001E88  0E00               	movlw	0
 12588  001E8A  0100               	movlb	0	; () banked
 12589  001E8C  6F64               	movwf	(i2__doprnt@exp+1)& (0+255),b
 12590  001E8E  0E00               	movlw	0
 12591  001E90  6F63               	movwf	i2__doprnt@exp& (0+255),b
 12592  001E92                     i2l9199:
 12593                           
 12594                           ; BSR set to: 0
 12595                           ;doprnt.c: 1134: }
 12596                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 12597  001E92  0E01               	movlw	1
 12598  001E94  0100               	movlb	0	; () banked
 12599  001E96  6F76               	movwf	i2__doprnt@c& (0+255),b
 12600  001E98                     i2l9201:
 12601                           
 12602                           ; BSR set to: 0
 12603  001E98  0E0A               	movlw	10
 12604  001E9A  0100               	movlb	0	; () banked
 12605  001E9C  1976               	xorwf	i2__doprnt@c& (0+255),w,b
 12606  001E9E  B4D8               	btfsc	status,2,c
 12607  001EA0  D01E               	goto	i2l9213
 12608                           
 12609                           ; BSR set to: 0
 12610                           ;doprnt.c: 1137: if(val < dpowers[c])
 12611                           
 12612                           ; BSR set to: 0
 12613                           
 12614                           ; BSR set to: 0
 12615  001EA2  0100               	movlb	0	; () banked
 12616  001EA4  5176               	movf	i2__doprnt@c& (0+255),w,b
 12617  001EA6  0D04               	mullw	4
 12618  001EA8  0E01               	movlw	low _dpowers
 12619  001EAA  24F3               	addwf	prodl,w,c
 12620  001EAC  6EF6               	movwf	tblptrl,c
 12621  001EAE  0E06               	movlw	high _dpowers
 12622  001EB0  20F4               	addwfc	prodh,w,c
 12623  001EB2  6EF7               	movwf	tblptrh,c
 12624  001EB4                     	if	0	;There are less than 3 active tblptr bytes
 12625  001EB4                     	endif
 12626  001EB4  0009               	tblrd		*+
 12627  001EB6  50F5               	movf	tablat,w,c
 12628  001EB8  0100               	movlb	0	; () banked
 12629  001EBA  5D65               	subwf	i2__doprnt@val& (0+255),w,b
 12630  001EBC  0009               	tblrd		*+
 12631  001EBE  50F5               	movf	tablat,w,c
 12632  001EC0  0100               	movlb	0	; () banked
 12633  001EC2  5966               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 12634  001EC4  0009               	tblrd		*+
 12635  001EC6  50F5               	movf	tablat,w,c
 12636  001EC8  0100               	movlb	0	; () banked
 12637  001ECA  5967               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 12638  001ECC  0009               	tblrd		*+
 12639  001ECE  50F5               	movf	tablat,w,c
 12640  001ED0  0100               	movlb	0	; () banked
 12641  001ED2  5968               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 12642  001ED4  A0D8               	btfss	status,0,c
 12643  001ED6  D003               	goto	i2l9213
 12644                           
 12645                           ; BSR set to: 0
 12646                           
 12647                           ; BSR set to: 0
 12648                           
 12649                           ; BSR set to: 0
 12650                           ;doprnt.c: 1138: break;
 12651  001ED8  0100               	movlb	0	; () banked
 12652  001EDA  2B76               	incf	i2__doprnt@c& (0+255),f,b
 12653  001EDC  D7DD               	goto	i2l9201
 12654  001EDE                     i2l9213:
 12655                           
 12656                           ; BSR set to: 0
 12657                           ;doprnt.c: 1142: width -= prec + c + exp;
 12658  001EDE  C076  F04C         	movff	i2__doprnt@c,??i2__doprnt
 12659  001EE2  6A4D               	clrf	(??i2__doprnt+1)& (0+255),c
 12660  001EE4  BE4C               	btfsc	??i2__doprnt& (0+255),7,c
 12661  001EE6  064D               	decf	(??i2__doprnt+1)& (0+255),f,c
 12662  001EE8  0100               	movlb	0	; () banked
 12663  001EEA  5174               	movf	i2__doprnt@prec& (0+255),w,b
 12664  001EEC  264C               	addwf	??i2__doprnt,f,c
 12665  001EEE  0100               	movlb	0	; () banked
 12666  001EF0  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 12667  001EF2  224D               	addwfc	??i2__doprnt+1,f,c
 12668  001EF4  0100               	movlb	0	; () banked
 12669  001EF6  5163               	movf	i2__doprnt@exp& (0+255),w,b
 12670  001EF8  264C               	addwf	??i2__doprnt,f,c
 12671  001EFA  0100               	movlb	0	; () banked
 12672  001EFC  5164               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 12673  001EFE  224D               	addwfc	??i2__doprnt+1,f,c
 12674  001F00  504C               	movf	??i2__doprnt,w,c
 12675  001F02  0100               	movlb	0	; () banked
 12676  001F04  5F70               	subwf	i2__doprnt@width& (0+255),f,b
 12677  001F06  504D               	movf	??i2__doprnt+1,w,c
 12678  001F08  0100               	movlb	0	; () banked
 12679  001F0A  5B71               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 12680                           
 12681                           ;doprnt.c: 1143: if(
 12682                           ;doprnt.c: 1147: prec)
 12683  001F0C  0100               	movlb	0	; () banked
 12684  001F0E  5174               	movf	i2__doprnt@prec& (0+255),w,b
 12685  001F10  0100               	movlb	0	; () banked
 12686  001F12  1175               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 12687  001F14  B4D8               	btfsc	status,2,c
 12688  001F16  D004               	goto	i2l9217
 12689                           
 12690                           ; BSR set to: 0
 12691                           ;doprnt.c: 1148: width--;
 12692  001F18  0100               	movlb	0	; () banked
 12693  001F1A  0770               	decf	i2__doprnt@width& (0+255),f,b
 12694  001F1C  A0D8               	btfss	status,0,c
 12695  001F1E  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 12696  001F20                     i2l9217:
 12697                           
 12698                           ; BSR set to: 0
 12699                           ;doprnt.c: 1149: if(flag & 0x03)
 12700  001F20  0E03               	movlw	3
 12701  001F22  0100               	movlb	0	; () banked
 12702  001F24  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 12703  001F26  6E4C               	movwf	??i2__doprnt& (0+255),c
 12704  001F28  0E00               	movlw	0
 12705  001F2A  0100               	movlb	0	; () banked
 12706  001F2C  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 12707  001F2E  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 12708  001F30  504C               	movf	??i2__doprnt,w,c
 12709  001F32  104D               	iorwf	??i2__doprnt+1,w,c
 12710  001F34  B4D8               	btfsc	status,2,c
 12711  001F36  D004               	goto	i2l9221
 12712                           
 12713                           ; BSR set to: 0
 12714                           ;doprnt.c: 1150: width--;
 12715  001F38  0100               	movlb	0	; () banked
 12716  001F3A  0770               	decf	i2__doprnt@width& (0+255),f,b
 12717  001F3C  A0D8               	btfss	status,0,c
 12718  001F3E  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 12719  001F40                     i2l9221:
 12720                           
 12721                           ; BSR set to: 0
 12722                           ;doprnt.c: 1153: if(flag & 0x04) {
 12723  001F40  0100               	movlb	0	; () banked
 12724  001F42  A572               	btfss	i2__doprnt@flag& (0+255),2,b
 12725  001F44  D0B6               	goto	i2l9255
 12726                           
 12727                           ; BSR set to: 0
 12728                           ;doprnt.c: 1157: if(flag & 0x03)
 12729  001F46  0E03               	movlw	3
 12730  001F48  0100               	movlb	0	; () banked
 12731  001F4A  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 12732  001F4C  6E4C               	movwf	??i2__doprnt& (0+255),c
 12733  001F4E  0E00               	movlw	0
 12734  001F50  0100               	movlb	0	; () banked
 12735  001F52  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 12736  001F54  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 12737  001F56  504C               	movf	??i2__doprnt,w,c
 12738  001F58  104D               	iorwf	??i2__doprnt+1,w,c
 12739  001F5A  B4D8               	btfsc	status,2,c
 12740  001F5C  D069               	goto	i2l9243
 12741                           
 12742                           ; BSR set to: 0
 12743                           ;doprnt.c: 1159: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 12744  001F5E  EE20 F002          	lfsr	2,2
 12745  001F62  5046               	movf	i2__doprnt@pb,w,c
 12746  001F64  26D9               	addwf	fsr2l,f,c
 12747  001F66  5047               	movf	i2__doprnt@pb+1,w,c
 12748  001F68  22DA               	addwfc	fsr2h,f,c
 12749  001F6A  50DE               	movf	postinc2,w,c
 12750  001F6C  10DE               	iorwf	postinc2,w,c
 12751  001F6E  B4D8               	btfsc	status,2,c
 12752  001F70  D013               	goto	i2l9229
 12753                           
 12754                           ; BSR set to: 0
 12755  001F72  EE20 F002          	lfsr	2,2
 12756  001F76  5046               	movf	i2__doprnt@pb,w,c
 12757  001F78  26D9               	addwf	fsr2l,f,c
 12758  001F7A  5047               	movf	i2__doprnt@pb+1,w,c
 12759  001F7C  22DA               	addwfc	fsr2h,f,c
 12760  001F7E  D801               	call	i2u1525_48
 12761  001F80  D057               	goto	i2l9243
 12762  001F82                     i2u1525_48:
 12763  001F82  0005               	push	
 12764  001F84  6EFA               	movwf	pclath,c
 12765  001F86  50DE               	movf	postinc2,w,c
 12766  001F88  6EFD               	movwf	tosl,c
 12767  001F8A  50DE               	movf	postinc2,w,c
 12768  001F8C  6EFE               	movwf	tosh,c
 12769  001F8E  50F8               	movf	tblptru,w,c
 12770  001F90  6EFF               	movwf	tosu,c
 12771  001F92  50FA               	movf	pclath,w,c
 12772  001F94  0E2D               	movlw	45
 12773  001F96  0012               	return		;indir
 12774  001F98                     i2l9229:
 12775  001F98  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12776  001F9C  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12777  001FA0  CFDE F04C          	movff	postinc2,??i2__doprnt
 12778  001FA4  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12779  001FA8  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12780  001FAC  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12781  001FB0  0E2D               	movlw	45
 12782  001FB2  6EDF               	movwf	indf2,c
 12783  001FB4  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12784  001FB8  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12785  001FBC  2ADE               	incf	postinc2,f,c
 12786  001FBE  0E00               	movlw	0
 12787  001FC0  22DD               	addwfc	postdec2,f,c
 12788                           
 12789                           ;doprnt.c: 1168: while(width > 0) {
 12790  001FC2  D036               	goto	i2l9243
 12791  001FC4                     i2l9233:
 12792                           
 12793                           ;doprnt.c: 1169: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 12794  001FC4  EE20 F002          	lfsr	2,2
 12795  001FC8  5046               	movf	i2__doprnt@pb,w,c
 12796  001FCA  26D9               	addwf	fsr2l,f,c
 12797  001FCC  5047               	movf	i2__doprnt@pb+1,w,c
 12798  001FCE  22DA               	addwfc	fsr2h,f,c
 12799  001FD0  50DE               	movf	postinc2,w,c
 12800  001FD2  10DE               	iorwf	postinc2,w,c
 12801  001FD4  B4D8               	btfsc	status,2,c
 12802  001FD6  D013               	goto	i2l9237
 12803  001FD8  EE20 F002          	lfsr	2,2
 12804  001FDC  5046               	movf	i2__doprnt@pb,w,c
 12805  001FDE  26D9               	addwf	fsr2l,f,c
 12806  001FE0  5047               	movf	i2__doprnt@pb+1,w,c
 12807  001FE2  22DA               	addwfc	fsr2h,f,c
 12808  001FE4  D801               	call	i2u1527_48
 12809  001FE6  D020               	goto	i2l9241
 12810  001FE8                     i2u1527_48:
 12811  001FE8  0005               	push	
 12812  001FEA  6EFA               	movwf	pclath,c
 12813  001FEC  50DE               	movf	postinc2,w,c
 12814  001FEE  6EFD               	movwf	tosl,c
 12815  001FF0  50DE               	movf	postinc2,w,c
 12816  001FF2  6EFE               	movwf	tosh,c
 12817  001FF4  50F8               	movf	tblptru,w,c
 12818  001FF6  6EFF               	movwf	tosu,c
 12819  001FF8  50FA               	movf	pclath,w,c
 12820  001FFA  0E30               	movlw	48
 12821  001FFC  0012               	return		;indir
 12822  001FFE                     i2l9237:
 12823  001FFE  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12824  002002  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12825  002006  CFDE F04C          	movff	postinc2,??i2__doprnt
 12826  00200A  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12827  00200E  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12828  002012  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12829  002016  0E30               	movlw	48
 12830  002018  6EDF               	movwf	indf2,c
 12831  00201A  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12832  00201E  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12833  002022  2ADE               	incf	postinc2,f,c
 12834  002024  0E00               	movlw	0
 12835  002026  22DD               	addwfc	postdec2,f,c
 12836  002028                     i2l9241:
 12837                           
 12838                           ;doprnt.c: 1170: width--;
 12839  002028  0100               	movlb	0	; () banked
 12840  00202A  0770               	decf	i2__doprnt@width& (0+255),f,b
 12841  00202C  A0D8               	btfss	status,0,c
 12842  00202E  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 12843  002030                     i2l9243:
 12844  002030  0100               	movlb	0	; () banked
 12845  002032  BF71               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 12846  002034  D0F8               	goto	i2l9277
 12847  002036  0100               	movlb	0	; () banked
 12848  002038  5171               	movf	(i2__doprnt@width+1)& (0+255),w,b
 12849  00203A  E1C4               	bnz	i2l9233
 12850  00203C  0100               	movlb	0	; () banked
 12851  00203E  0570               	decf	i2__doprnt@width& (0+255),w,b
 12852  002040  A0D8               	btfss	status,0,c
 12853  002042  D0F1               	goto	i2l9277
 12854  002044  D7BF               	goto	i2l9233
 12855  002046                     i2l9245:
 12856                           
 12857                           ; BSR set to: 0
 12858                           ;doprnt.c: 1181: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 12859  002046  EE20 F002          	lfsr	2,2
 12860  00204A  5046               	movf	i2__doprnt@pb,w,c
 12861  00204C  26D9               	addwf	fsr2l,f,c
 12862  00204E  5047               	movf	i2__doprnt@pb+1,w,c
 12863  002050  22DA               	addwfc	fsr2h,f,c
 12864  002052  50DE               	movf	postinc2,w,c
 12865  002054  10DE               	iorwf	postinc2,w,c
 12866  002056  B4D8               	btfsc	status,2,c
 12867  002058  D013               	goto	i2l9249
 12868                           
 12869                           ; BSR set to: 0
 12870  00205A  EE20 F002          	lfsr	2,2
 12871  00205E  5046               	movf	i2__doprnt@pb,w,c
 12872  002060  26D9               	addwf	fsr2l,f,c
 12873  002062  5047               	movf	i2__doprnt@pb+1,w,c
 12874  002064  22DA               	addwfc	fsr2h,f,c
 12875  002066  D801               	call	i2u1530_48
 12876  002068  D020               	goto	i2l9253
 12877  00206A                     i2u1530_48:
 12878  00206A  0005               	push	
 12879  00206C  6EFA               	movwf	pclath,c
 12880  00206E  50DE               	movf	postinc2,w,c
 12881  002070  6EFD               	movwf	tosl,c
 12882  002072  50DE               	movf	postinc2,w,c
 12883  002074  6EFE               	movwf	tosh,c
 12884  002076  50F8               	movf	tblptru,w,c
 12885  002078  6EFF               	movwf	tosu,c
 12886  00207A  50FA               	movf	pclath,w,c
 12887  00207C  0E20               	movlw	32
 12888  00207E  0012               	return		;indir
 12889  002080                     i2l9249:
 12890  002080  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12891  002084  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12892  002088  CFDE F04C          	movff	postinc2,??i2__doprnt
 12893  00208C  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12894  002090  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12895  002094  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12896  002098  0E20               	movlw	32
 12897  00209A  6EDF               	movwf	indf2,c
 12898  00209C  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12899  0020A0  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12900  0020A4  2ADE               	incf	postinc2,f,c
 12901  0020A6  0E00               	movlw	0
 12902  0020A8  22DD               	addwfc	postdec2,f,c
 12903  0020AA                     i2l9253:
 12904                           
 12905                           ;doprnt.c: 1182: width--;
 12906  0020AA  0100               	movlb	0	; () banked
 12907  0020AC  0770               	decf	i2__doprnt@width& (0+255),f,b
 12908  0020AE  A0D8               	btfss	status,0,c
 12909  0020B0  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 12910  0020B2                     i2l9255:
 12911                           
 12912                           ; BSR set to: 0
 12913  0020B2  0100               	movlb	0	; () banked
 12914  0020B4  BF71               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 12915  0020B6  D007               	goto	i2l9257
 12916  0020B8  0100               	movlb	0	; () banked
 12917  0020BA  5171               	movf	(i2__doprnt@width+1)& (0+255),w,b
 12918  0020BC  E1C4               	bnz	i2l9245
 12919  0020BE  0100               	movlb	0	; () banked
 12920  0020C0  0570               	decf	i2__doprnt@width& (0+255),w,b
 12921  0020C2  B0D8               	btfsc	status,0,c
 12922  0020C4  D7C0               	goto	i2l9245
 12923  0020C6                     i2l9257:
 12924                           
 12925                           ; BSR set to: 0
 12926                           ;doprnt.c: 1183: }
 12927                           ;doprnt.c: 1188: if(flag & 0x03)
 12928  0020C6  0E03               	movlw	3
 12929  0020C8  0100               	movlb	0	; () banked
 12930  0020CA  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 12931  0020CC  6E4C               	movwf	??i2__doprnt& (0+255),c
 12932  0020CE  0E00               	movlw	0
 12933  0020D0  0100               	movlb	0	; () banked
 12934  0020D2  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 12935  0020D4  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 12936  0020D6  504C               	movf	??i2__doprnt,w,c
 12937  0020D8  104D               	iorwf	??i2__doprnt+1,w,c
 12938  0020DA  B4D8               	btfsc	status,2,c
 12939  0020DC  D0A4               	goto	i2l9277
 12940                           
 12941                           ; BSR set to: 0
 12942                           ;doprnt.c: 1190: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 12943  0020DE  EE20 F002          	lfsr	2,2
 12944  0020E2  5046               	movf	i2__doprnt@pb,w,c
 12945  0020E4  26D9               	addwf	fsr2l,f,c
 12946  0020E6  5047               	movf	i2__doprnt@pb+1,w,c
 12947  0020E8  22DA               	addwfc	fsr2h,f,c
 12948  0020EA  50DE               	movf	postinc2,w,c
 12949  0020EC  10DE               	iorwf	postinc2,w,c
 12950  0020EE  B4D8               	btfsc	status,2,c
 12951  0020F0  D013               	goto	i2l9263
 12952                           
 12953                           ; BSR set to: 0
 12954  0020F2  EE20 F002          	lfsr	2,2
 12955  0020F6  5046               	movf	i2__doprnt@pb,w,c
 12956  0020F8  26D9               	addwf	fsr2l,f,c
 12957  0020FA  5047               	movf	i2__doprnt@pb+1,w,c
 12958  0020FC  22DA               	addwfc	fsr2h,f,c
 12959  0020FE  D801               	call	i2u1534_48
 12960  002100  D092               	goto	i2l9277
 12961  002102                     i2u1534_48:
 12962  002102  0005               	push	
 12963  002104  6EFA               	movwf	pclath,c
 12964  002106  50DE               	movf	postinc2,w,c
 12965  002108  6EFD               	movwf	tosl,c
 12966  00210A  50DE               	movf	postinc2,w,c
 12967  00210C  6EFE               	movwf	tosh,c
 12968  00210E  50F8               	movf	tblptru,w,c
 12969  002110  6EFF               	movwf	tosu,c
 12970  002112  50FA               	movf	pclath,w,c
 12971  002114  0E2D               	movlw	45
 12972  002116  0012               	return		;indir
 12973  002118                     i2l9263:
 12974  002118  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12975  00211C  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12976  002120  CFDE F04C          	movff	postinc2,??i2__doprnt
 12977  002124  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12978  002128  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12979  00212C  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12980  002130  0E2D               	movlw	45
 12981  002132  D077               	goto	L7
 12982  002134                     i2l9265:
 12983  002134  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12984  002138  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12985  00213C  2ADE               	incf	postinc2,f,c
 12986  00213E  0E00               	movlw	0
 12987  002140  22DD               	addwfc	postdec2,f,c
 12988                           
 12989                           ;doprnt.c: 1195: }
 12990                           ;doprnt.c: 1196: while(c--) {
 12991  002142  D071               	goto	i2l9277
 12992  002144                     i2l9267:
 12993                           
 12994                           ;doprnt.c: 1200: {
 12995                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 12996  002144  C065  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 12997  002148  C066  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 12998  00214C  C067  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 12999  002150  C068  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 13000  002154  0100               	movlb	0	; () banked
 13001  002156  5176               	movf	i2__doprnt@c& (0+255),w,b
 13002  002158  0D04               	mullw	4
 13003  00215A  0E01               	movlw	low _dpowers
 13004  00215C  24F3               	addwf	prodl,w,c
 13005  00215E  6EF6               	movwf	tblptrl,c
 13006  002160  0E06               	movlw	high _dpowers
 13007  002162  20F4               	addwfc	prodh,w,c
 13008  002164  6EF7               	movwf	tblptrh,c
 13009  002166                     	if	0	;There are less than 3 active tblptr bytes
 13010  002166                     	endif
 13011  002166  0009               	tblrd		*+
 13012  002168  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 13013  00216C  0009               	tblrd		*+
 13014  00216E  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 13015  002172  0009               	tblrd		*+
 13016  002174  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 13017  002178  000A               	tblrd		*-
 13018  00217A  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 13019  00217E  EC96  F029         	call	i2___lldiv
 13020  002182  C001  F069         	movff	?i2___lldiv,i2__doprnt@tmpval
 13021  002186  C002  F06A         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 13022  00218A  C003  F06B         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 13023  00218E  C004  F06C         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 13024                           
 13025                           ;doprnt.c: 1202: tmpval.vd %= 10;
 13026  002192  C069  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 13027  002196  C06A  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 13028  00219A  C06B  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 13029  00219E  C06C  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 13030  0021A2  0E0A               	movlw	10
 13031  0021A4  6E12               	movwf	i2___llmod@divisor,c
 13032  0021A6  0E00               	movlw	0
 13033  0021A8  6E13               	movwf	i2___llmod@divisor+1,c
 13034  0021AA  0E00               	movlw	0
 13035  0021AC  6E14               	movwf	i2___llmod@divisor+2,c
 13036  0021AE  0E00               	movlw	0
 13037  0021B0  6E15               	movwf	i2___llmod@divisor+3,c
 13038  0021B2  EC8A  F02A         	call	i2___llmod	;wreg free
 13039  0021B6  C00E  F069         	movff	?i2___llmod,i2__doprnt@tmpval
 13040  0021BA  C00F  F06A         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 13041  0021BE  C010  F06B         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 13042  0021C2  C011  F06C         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 13043                           
 13044                           ;doprnt.c: 1203: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 13045  0021C6  EE20 F002          	lfsr	2,2
 13046  0021CA  5046               	movf	i2__doprnt@pb,w,c
 13047  0021CC  26D9               	addwf	fsr2l,f,c
 13048  0021CE  5047               	movf	i2__doprnt@pb+1,w,c
 13049  0021D0  22DA               	addwfc	fsr2h,f,c
 13050  0021D2  50DE               	movf	postinc2,w,c
 13051  0021D4  10DE               	iorwf	postinc2,w,c
 13052  0021D6  B4D8               	btfsc	status,2,c
 13053  0021D8  D015               	goto	i2l9275
 13054  0021DA  EE20 F002          	lfsr	2,2
 13055  0021DE  5046               	movf	i2__doprnt@pb,w,c
 13056  0021E0  26D9               	addwf	fsr2l,f,c
 13057  0021E2  5047               	movf	i2__doprnt@pb+1,w,c
 13058  0021E4  22DA               	addwfc	fsr2h,f,c
 13059  0021E6  D801               	call	i2u1536_48
 13060  0021E8  D01E               	goto	i2l9277
 13061  0021EA                     i2u1536_48:
 13062  0021EA  0005               	push	
 13063  0021EC  6EFA               	movwf	pclath,c
 13064  0021EE  50DE               	movf	postinc2,w,c
 13065  0021F0  6EFD               	movwf	tosl,c
 13066  0021F2  50DE               	movf	postinc2,w,c
 13067  0021F4  6EFE               	movwf	tosh,c
 13068  0021F6  50F8               	movf	tblptru,w,c
 13069  0021F8  6EFF               	movwf	tosu,c
 13070  0021FA  50FA               	movf	pclath,w,c
 13071  0021FC  0100               	movlb	0	; () banked
 13072  0021FE  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 13073  002200  0F30               	addlw	48
 13074  002202  0012               	return		;indir
 13075  002204                     i2l9275:
 13076  002204  0100               	movlb	0	; () banked
 13077  002206  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 13078  002208  0F30               	addlw	48
 13079  00220A  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13080  00220E  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13081  002212  CFDE F04C          	movff	postinc2,??i2__doprnt
 13082  002216  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13083  00221A  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13084  00221E  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13085  002222                     L7:
 13086  002222  6EDF               	movwf	indf2,c
 13087  002224  D787               	goto	i2l9265
 13088  002226                     i2l9277:
 13089  002226  0100               	movlb	0	; () banked
 13090  002228  0776               	decf	i2__doprnt@c& (0+255),f,b
 13091  00222A  0100               	movlb	0	; () banked
 13092  00222C  2976               	incf	i2__doprnt@c& (0+255),w,b
 13093  00222E  B4D8               	btfsc	status,2,c
 13094  002230  D037               	goto	i2l9289
 13095  002232  D788               	goto	i2l9267
 13096  002234                     i2l9279:
 13097                           
 13098                           ; BSR set to: 0
 13099                           ;doprnt.c: 1208: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 13100  002234  EE20 F002          	lfsr	2,2
 13101  002238  5046               	movf	i2__doprnt@pb,w,c
 13102  00223A  26D9               	addwf	fsr2l,f,c
 13103  00223C  5047               	movf	i2__doprnt@pb+1,w,c
 13104  00223E  22DA               	addwfc	fsr2h,f,c
 13105  002240  50DE               	movf	postinc2,w,c
 13106  002242  10DE               	iorwf	postinc2,w,c
 13107  002244  B4D8               	btfsc	status,2,c
 13108  002246  D013               	goto	i2l9283
 13109                           
 13110                           ; BSR set to: 0
 13111  002248  EE20 F002          	lfsr	2,2
 13112  00224C  5046               	movf	i2__doprnt@pb,w,c
 13113  00224E  26D9               	addwf	fsr2l,f,c
 13114  002250  5047               	movf	i2__doprnt@pb+1,w,c
 13115  002252  22DA               	addwfc	fsr2h,f,c
 13116  002254  D801               	call	i2u1539_48
 13117  002256  D020               	goto	i2l9287
 13118  002258                     i2u1539_48:
 13119  002258  0005               	push	
 13120  00225A  6EFA               	movwf	pclath,c
 13121  00225C  50DE               	movf	postinc2,w,c
 13122  00225E  6EFD               	movwf	tosl,c
 13123  002260  50DE               	movf	postinc2,w,c
 13124  002262  6EFE               	movwf	tosh,c
 13125  002264  50F8               	movf	tblptru,w,c
 13126  002266  6EFF               	movwf	tosu,c
 13127  002268  50FA               	movf	pclath,w,c
 13128  00226A  0E30               	movlw	48
 13129  00226C  0012               	return		;indir
 13130  00226E                     i2l9283:
 13131  00226E  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13132  002272  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13133  002276  CFDE F04C          	movff	postinc2,??i2__doprnt
 13134  00227A  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13135  00227E  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13136  002282  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13137  002286  0E30               	movlw	48
 13138  002288  6EDF               	movwf	indf2,c
 13139  00228A  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13140  00228E  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13141  002292  2ADE               	incf	postinc2,f,c
 13142  002294  0E00               	movlw	0
 13143  002296  22DD               	addwfc	postdec2,f,c
 13144  002298                     i2l9287:
 13145                           
 13146                           ;doprnt.c: 1209: exp--;
 13147  002298  0100               	movlb	0	; () banked
 13148  00229A  0763               	decf	i2__doprnt@exp& (0+255),f,b
 13149  00229C  A0D8               	btfss	status,0,c
 13150  00229E  0764               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 13151  0022A0                     i2l9289:
 13152                           
 13153                           ; BSR set to: 0
 13154  0022A0  0100               	movlb	0	; () banked
 13155  0022A2  BF64               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 13156  0022A4  D007               	goto	i2l9291
 13157  0022A6  0100               	movlb	0	; () banked
 13158  0022A8  5164               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 13159  0022AA  E1C4               	bnz	i2l9279
 13160  0022AC  0100               	movlb	0	; () banked
 13161  0022AE  0563               	decf	i2__doprnt@exp& (0+255),w,b
 13162  0022B0  B0D8               	btfsc	status,0,c
 13163  0022B2  D7C0               	goto	i2l9279
 13164  0022B4                     i2l9291:
 13165                           
 13166                           ; BSR set to: 0
 13167                           ;doprnt.c: 1210: }
 13168                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 13169  0022B4  0100               	movlb	0	; () banked
 13170  0022B6  BF75               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 13171  0022B8  D00C               	goto	i2l455
 13172  0022BA  0100               	movlb	0	; () banked
 13173  0022BC  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 13174  0022BE  E105               	bnz	i2u1541_40
 13175  0022C0  0E09               	movlw	9
 13176  0022C2  0100               	movlb	0	; () banked
 13177  0022C4  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 13178  0022C6  A0D8               	btfss	status,0,c
 13179  0022C8  D004               	goto	i2l455
 13180  0022CA                     i2u1541_40:
 13181                           
 13182                           ; BSR set to: 0
 13183                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 13184  0022CA  0E08               	movlw	8
 13185  0022CC  0100               	movlb	0	; () banked
 13186  0022CE  6F76               	movwf	i2__doprnt@c& (0+255),b
 13187  0022D0  D002               	goto	i2l9295
 13188  0022D2                     i2l455:
 13189                           
 13190                           ; BSR set to: 0
 13191                           ;doprnt.c: 1213: else
 13192                           ;doprnt.c: 1214: c = prec;
 13193  0022D2  C074  F076         	movff	i2__doprnt@prec,i2__doprnt@c
 13194  0022D6                     i2l9295:
 13195                           
 13196                           ; BSR set to: 0
 13197                           ;doprnt.c: 1215: prec -= c;
 13198  0022D6  0100               	movlb	0	; () banked
 13199  0022D8  5176               	movf	i2__doprnt@c& (0+255),w,b
 13200  0022DA  0100               	movlb	0	; () banked
 13201  0022DC  5F74               	subwf	i2__doprnt@prec& (0+255),f,b
 13202  0022DE  0E00               	movlw	0
 13203  0022E0  0100               	movlb	0	; () banked
 13204  0022E2  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 13205  0022E4  0EFF               	movlw	255
 13206  0022E6  0100               	movlb	0	; () banked
 13207  0022E8  5B75               	subwfb	(i2__doprnt@prec+1)& (0+255),f,b
 13208                           
 13209                           ; BSR set to: 0
 13210                           ;doprnt.c: 1219: if(c)
 13211  0022EA  0100               	movlb	0	; () banked
 13212  0022EC  5176               	movf	i2__doprnt@c& (0+255),w,b
 13213  0022EE  0100               	movlb	0	; () banked
 13214  0022F0  B4D8               	btfsc	status,2,c
 13215  0022F2  D032               	goto	i2l9307
 13216                           
 13217                           ; BSR set to: 0
 13218                           ;doprnt.c: 1221: if(pb->func) (pb->func('.')); else ((*pb->ptr++ = '.'));
 13219  0022F4  EE20 F002          	lfsr	2,2
 13220  0022F8  5046               	movf	i2__doprnt@pb,w,c
 13221  0022FA  26D9               	addwf	fsr2l,f,c
 13222  0022FC  5047               	movf	i2__doprnt@pb+1,w,c
 13223  0022FE  22DA               	addwfc	fsr2h,f,c
 13224  002300  50DE               	movf	postinc2,w,c
 13225  002302  10DE               	iorwf	postinc2,w,c
 13226  002304  B4D8               	btfsc	status,2,c
 13227  002306  D013               	goto	i2l9303
 13228                           
 13229                           ; BSR set to: 0
 13230  002308  EE20 F002          	lfsr	2,2
 13231  00230C  5046               	movf	i2__doprnt@pb,w,c
 13232  00230E  26D9               	addwf	fsr2l,f,c
 13233  002310  5047               	movf	i2__doprnt@pb+1,w,c
 13234  002312  22DA               	addwfc	fsr2h,f,c
 13235  002314  D801               	call	i2u1544_48
 13236  002316  D020               	goto	i2l9307
 13237  002318                     i2u1544_48:
 13238  002318  0005               	push	
 13239  00231A  6EFA               	movwf	pclath,c
 13240  00231C  50DE               	movf	postinc2,w,c
 13241  00231E  6EFD               	movwf	tosl,c
 13242  002320  50DE               	movf	postinc2,w,c
 13243  002322  6EFE               	movwf	tosh,c
 13244  002324  50F8               	movf	tblptru,w,c
 13245  002326  6EFF               	movwf	tosu,c
 13246  002328  50FA               	movf	pclath,w,c
 13247  00232A  0E2E               	movlw	46
 13248  00232C  0012               	return		;indir
 13249  00232E                     i2l9303:
 13250  00232E  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13251  002332  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13252  002336  CFDE F04C          	movff	postinc2,??i2__doprnt
 13253  00233A  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13254  00233E  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13255  002342  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13256  002346  0E2E               	movlw	46
 13257  002348  6EDF               	movwf	indf2,c
 13258  00234A  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13259  00234E  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13260  002352  2ADE               	incf	postinc2,f,c
 13261  002354  0E00               	movlw	0
 13262  002356  22DD               	addwfc	postdec2,f,c
 13263  002358                     i2l9307:
 13264                           
 13265                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 13266  002358  0100               	movlb	0	; () banked
 13267  00235A  5176               	movf	i2__doprnt@c& (0+255),w,b
 13268  00235C  ECC8  F017         	call	i2_scale
 13269  002360  C030  F060         	movff	?i2_scale,i2__doprnt$1925
 13270  002364  C031  F061         	movff	?i2_scale+1,i2__doprnt$1925+1
 13271  002368  C032  F062         	movff	?i2_scale+2,i2__doprnt$1925+2
 13272                           
 13273                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 13274  00236C  C06D  F024         	movff	i2__doprnt@fval,i2___ftmul@f2
 13275  002370  C06E  F025         	movff	i2__doprnt@fval+1,i2___ftmul@f2+1
 13276  002374  C06F  F026         	movff	i2__doprnt@fval+2,i2___ftmul@f2+2
 13277  002378  C060  F021         	movff	i2__doprnt$1925,i2___ftmul@f1
 13278  00237C  C061  F022         	movff	i2__doprnt$1925+1,i2___ftmul@f1+1
 13279  002380  C062  F023         	movff	i2__doprnt$1925+2,i2___ftmul@f1+2
 13280  002384  EC8F  F025         	call	i2___ftmul	;wreg free
 13281  002388  C021  F037         	movff	?i2___ftmul,i2___fttol@f1
 13282  00238C  C022  F038         	movff	?i2___ftmul+1,i2___fttol@f1+1
 13283  002390  C023  F039         	movff	?i2___ftmul+2,i2___fttol@f1+2
 13284  002394  EC09  F026         	call	i2___fttol	;wreg free
 13285  002398  C037  F065         	movff	?i2___fttol,i2__doprnt@val
 13286  00239C  C038  F066         	movff	?i2___fttol+1,i2__doprnt@val+1
 13287  0023A0  C039  F067         	movff	?i2___fttol+2,i2__doprnt@val+2
 13288  0023A4  C03A  F068         	movff	?i2___fttol+3,i2__doprnt@val+3
 13289                           
 13290                           ;doprnt.c: 1228: while(c--) {
 13291  0023A8  D09E               	goto	i2l9323
 13292  0023AA                     i2l9311:
 13293                           
 13294                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 13295  0023AA  C065  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 13296  0023AE  C066  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 13297  0023B2  C067  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 13298  0023B6  C068  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 13299  0023BA  0100               	movlb	0	; () banked
 13300  0023BC  5176               	movf	i2__doprnt@c& (0+255),w,b
 13301  0023BE  0D04               	mullw	4
 13302  0023C0  0E01               	movlw	low _dpowers
 13303  0023C2  24F3               	addwf	prodl,w,c
 13304  0023C4  6EF6               	movwf	tblptrl,c
 13305  0023C6  0E06               	movlw	high _dpowers
 13306  0023C8  20F4               	addwfc	prodh,w,c
 13307  0023CA  6EF7               	movwf	tblptrh,c
 13308  0023CC                     	if	0	;There are less than 3 active tblptr bytes
 13309  0023CC                     	endif
 13310  0023CC  0009               	tblrd		*+
 13311  0023CE  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 13312  0023D2  0009               	tblrd		*+
 13313  0023D4  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 13314  0023D8  0009               	tblrd		*+
 13315  0023DA  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 13316  0023DE  000A               	tblrd		*-
 13317  0023E0  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 13318  0023E4  EC96  F029         	call	i2___lldiv	;wreg free
 13319  0023E8  C001  F069         	movff	?i2___lldiv,i2__doprnt@tmpval
 13320  0023EC  C002  F06A         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 13321  0023F0  C003  F06B         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 13322  0023F4  C004  F06C         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 13323                           
 13324                           ;doprnt.c: 1230: tmpval.vd %= 10;
 13325  0023F8  C069  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 13326  0023FC  C06A  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 13327  002400  C06B  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 13328  002404  C06C  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 13329  002408  0E0A               	movlw	10
 13330  00240A  6E12               	movwf	i2___llmod@divisor,c
 13331  00240C  0E00               	movlw	0
 13332  00240E  6E13               	movwf	i2___llmod@divisor+1,c
 13333  002410  0E00               	movlw	0
 13334  002412  6E14               	movwf	i2___llmod@divisor+2,c
 13335  002414  0E00               	movlw	0
 13336  002416  6E15               	movwf	i2___llmod@divisor+3,c
 13337  002418  EC8A  F02A         	call	i2___llmod	;wreg free
 13338  00241C  C00E  F069         	movff	?i2___llmod,i2__doprnt@tmpval
 13339  002420  C00F  F06A         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 13340  002424  C010  F06B         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 13341  002428  C011  F06C         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 13342                           
 13343                           ;doprnt.c: 1231: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 13344  00242C  EE20 F002          	lfsr	2,2
 13345  002430  5046               	movf	i2__doprnt@pb,w,c
 13346  002432  26D9               	addwf	fsr2l,f,c
 13347  002434  5047               	movf	i2__doprnt@pb+1,w,c
 13348  002436  22DA               	addwfc	fsr2h,f,c
 13349  002438  50DE               	movf	postinc2,w,c
 13350  00243A  10DE               	iorwf	postinc2,w,c
 13351  00243C  B4D8               	btfsc	status,2,c
 13352  00243E  D015               	goto	i2l9319
 13353  002440  EE20 F002          	lfsr	2,2
 13354  002444  5046               	movf	i2__doprnt@pb,w,c
 13355  002446  26D9               	addwf	fsr2l,f,c
 13356  002448  5047               	movf	i2__doprnt@pb+1,w,c
 13357  00244A  22DA               	addwfc	fsr2h,f,c
 13358  00244C  D801               	call	i2u1546_48
 13359  00244E  D024               	goto	i2l9321
 13360  002450                     i2u1546_48:
 13361  002450  0005               	push	
 13362  002452  6EFA               	movwf	pclath,c
 13363  002454  50DE               	movf	postinc2,w,c
 13364  002456  6EFD               	movwf	tosl,c
 13365  002458  50DE               	movf	postinc2,w,c
 13366  00245A  6EFE               	movwf	tosh,c
 13367  00245C  50F8               	movf	tblptru,w,c
 13368  00245E  6EFF               	movwf	tosu,c
 13369  002460  50FA               	movf	pclath,w,c
 13370  002462  0100               	movlb	0	; () banked
 13371  002464  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 13372  002466  0F30               	addlw	48
 13373  002468  0012               	return		;indir
 13374  00246A                     i2l9319:
 13375  00246A  0100               	movlb	0	; () banked
 13376  00246C  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 13377  00246E  0F30               	addlw	48
 13378  002470  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13379  002474  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13380  002478  CFDE F04C          	movff	postinc2,??i2__doprnt
 13381  00247C  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13382  002480  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13383  002484  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13384  002488  6EDF               	movwf	indf2,c
 13385  00248A  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13386  00248E  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13387  002492  2ADE               	incf	postinc2,f,c
 13388  002494  0E00               	movlw	0
 13389  002496  22DD               	addwfc	postdec2,f,c
 13390  002498                     i2l9321:
 13391                           
 13392                           ;doprnt.c: 1232: val %= dpowers[c];
 13393  002498  C065  F00E         	movff	i2__doprnt@val,i2___llmod@dividend
 13394  00249C  C066  F00F         	movff	i2__doprnt@val+1,i2___llmod@dividend+1
 13395  0024A0  C067  F010         	movff	i2__doprnt@val+2,i2___llmod@dividend+2
 13396  0024A4  C068  F011         	movff	i2__doprnt@val+3,i2___llmod@dividend+3
 13397  0024A8  0100               	movlb	0	; () banked
 13398  0024AA  5176               	movf	i2__doprnt@c& (0+255),w,b
 13399  0024AC  0D04               	mullw	4
 13400  0024AE  0E01               	movlw	low _dpowers
 13401  0024B0  24F3               	addwf	prodl,w,c
 13402  0024B2  6EF6               	movwf	tblptrl,c
 13403  0024B4  0E06               	movlw	high _dpowers
 13404  0024B6  20F4               	addwfc	prodh,w,c
 13405  0024B8  6EF7               	movwf	tblptrh,c
 13406  0024BA                     	if	0	;There are less than 3 active tblptr bytes
 13407  0024BA                     	endif
 13408  0024BA  0009               	tblrd		*+
 13409  0024BC  CFF5 F012          	movff	tablat,i2___llmod@divisor
 13410  0024C0  0009               	tblrd		*+
 13411  0024C2  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 13412  0024C6  0009               	tblrd		*+
 13413  0024C8  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 13414  0024CC  000A               	tblrd		*-
 13415  0024CE  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 13416  0024D2  EC8A  F02A         	call	i2___llmod
 13417  0024D6  C00E  F065         	movff	?i2___llmod,i2__doprnt@val
 13418  0024DA  C00F  F066         	movff	?i2___llmod+1,i2__doprnt@val+1
 13419  0024DE  C010  F067         	movff	?i2___llmod+2,i2__doprnt@val+2
 13420  0024E2  C011  F068         	movff	?i2___llmod+3,i2__doprnt@val+3
 13421  0024E6                     i2l9323:
 13422  0024E6  0100               	movlb	0	; () banked
 13423  0024E8  0776               	decf	i2__doprnt@c& (0+255),f,b
 13424  0024EA  0100               	movlb	0	; () banked
 13425  0024EC  2976               	incf	i2__doprnt@c& (0+255),w,b
 13426  0024EE  B4D8               	btfsc	status,2,c
 13427  0024F0  D037               	goto	i2l9335
 13428  0024F2  D75B               	goto	i2l9311
 13429  0024F4                     i2l9325:
 13430                           
 13431                           ; BSR set to: 0
 13432                           ;doprnt.c: 1236: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 13433  0024F4  EE20 F002          	lfsr	2,2
 13434  0024F8  5046               	movf	i2__doprnt@pb,w,c
 13435  0024FA  26D9               	addwf	fsr2l,f,c
 13436  0024FC  5047               	movf	i2__doprnt@pb+1,w,c
 13437  0024FE  22DA               	addwfc	fsr2h,f,c
 13438  002500  50DE               	movf	postinc2,w,c
 13439  002502  10DE               	iorwf	postinc2,w,c
 13440  002504  B4D8               	btfsc	status,2,c
 13441  002506  D013               	goto	i2l9329
 13442                           
 13443                           ; BSR set to: 0
 13444  002508  EE20 F002          	lfsr	2,2
 13445  00250C  5046               	movf	i2__doprnt@pb,w,c
 13446  00250E  26D9               	addwf	fsr2l,f,c
 13447  002510  5047               	movf	i2__doprnt@pb+1,w,c
 13448  002512  22DA               	addwfc	fsr2h,f,c
 13449  002514  D801               	call	i2u1549_48
 13450  002516  D020               	goto	i2l9333
 13451  002518                     i2u1549_48:
 13452  002518  0005               	push	
 13453  00251A  6EFA               	movwf	pclath,c
 13454  00251C  50DE               	movf	postinc2,w,c
 13455  00251E  6EFD               	movwf	tosl,c
 13456  002520  50DE               	movf	postinc2,w,c
 13457  002522  6EFE               	movwf	tosh,c
 13458  002524  50F8               	movf	tblptru,w,c
 13459  002526  6EFF               	movwf	tosu,c
 13460  002528  50FA               	movf	pclath,w,c
 13461  00252A  0E30               	movlw	48
 13462  00252C  0012               	return		;indir
 13463  00252E                     i2l9329:
 13464  00252E  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13465  002532  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13466  002536  CFDE F04C          	movff	postinc2,??i2__doprnt
 13467  00253A  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13468  00253E  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13469  002542  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13470  002546  0E30               	movlw	48
 13471  002548  6EDF               	movwf	indf2,c
 13472  00254A  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13473  00254E  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13474  002552  2ADE               	incf	postinc2,f,c
 13475  002554  0E00               	movlw	0
 13476  002556  22DD               	addwfc	postdec2,f,c
 13477  002558                     i2l9333:
 13478                           
 13479                           ;doprnt.c: 1237: prec--;
 13480  002558  0100               	movlb	0	; () banked
 13481  00255A  0774               	decf	i2__doprnt@prec& (0+255),f,b
 13482  00255C  A0D8               	btfss	status,0,c
 13483  00255E  0775               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 13484  002560                     i2l9335:
 13485                           
 13486                           ; BSR set to: 0
 13487  002560  0100               	movlb	0	; () banked
 13488  002562  5174               	movf	i2__doprnt@prec& (0+255),w,b
 13489  002564  0100               	movlb	0	; () banked
 13490  002566  1175               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 13491  002568  B4D8               	btfsc	status,2,c
 13492  00256A  D2A8               	goto	i2l9459
 13493  00256C  D7C3               	goto	i2l9325
 13494  00256E                     i2l403:
 13495                           
 13496                           ; BSR set to: 0
 13497                           ;doprnt.c: 1246: }
 13498                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
 13499  00256E  0100               	movlb	0	; () banked
 13500  002570  BD72               	btfsc	i2__doprnt@flag& (0+255),6,b
 13501  002572  D046               	goto	i2l470
 13502                           
 13503                           ; BSR set to: 0
 13504                           ;doprnt.c: 1253: {
 13505                           ;doprnt.c: 1255: if(flag & 0x10)
 13506  002574  0100               	movlb	0	; () banked
 13507  002576  A972               	btfss	i2__doprnt@flag& (0+255),4,b
 13508  002578  D019               	goto	i2l9341
 13509                           
 13510                           ; BSR set to: 0
 13511                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 13512  00257A  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 13513  00257E  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 13514  002582  CFDF F04C          	movff	indf2,??i2__doprnt
 13515  002586  0E04               	movlw	4
 13516  002588  26DE               	addwf	postinc2,f,c
 13517  00258A  CFDF F04D          	movff	indf2,??i2__doprnt+1
 13518  00258E  0E00               	movlw	0
 13519  002590  22DD               	addwfc	postdec2,f,c
 13520  002592  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13521  002596  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13522  00259A  CFDE F065          	movff	postinc2,i2__doprnt@val
 13523  00259E  CFDE F066          	movff	postinc2,i2__doprnt@val+1
 13524  0025A2  CFDE F067          	movff	postinc2,i2__doprnt@val+2
 13525  0025A6  CFDE F068          	movff	postinc2,i2__doprnt@val+3
 13526  0025AA  D01A               	goto	i2l9343
 13527  0025AC                     i2l9341:
 13528                           
 13529                           ; BSR set to: 0
 13530                           ;doprnt.c: 1257: else
 13531                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 13532  0025AC  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 13533  0025B0  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 13534  0025B4  CFDF F04C          	movff	indf2,??i2__doprnt
 13535  0025B8  0E02               	movlw	2
 13536  0025BA  26DE               	addwf	postinc2,f,c
 13537  0025BC  CFDF F04D          	movff	indf2,??i2__doprnt+1
 13538  0025C0  0E00               	movlw	0
 13539  0025C2  22DD               	addwfc	postdec2,f,c
 13540  0025C4  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13541  0025C8  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13542  0025CC  CFDE F065          	movff	postinc2,i2__doprnt@val
 13543  0025D0  CFDD F066          	movff	postdec2,i2__doprnt@val+1
 13544  0025D4  0100               	movlb	0	; () banked
 13545  0025D6  0E00               	movlw	0
 13546  0025D8  BF66               	btfsc	(i2__doprnt@val+1)& (0+255),7,b
 13547  0025DA  0EFF               	movlw	-1
 13548  0025DC  6F67               	movwf	(i2__doprnt@val+2)& (0+255),b
 13549  0025DE  6F68               	movwf	(i2__doprnt@val+3)& (0+255),b
 13550  0025E0                     i2l9343:
 13551                           
 13552                           ; BSR set to: 0
 13553                           ;doprnt.c: 1261: if((long)val < 0) {
 13554  0025E0  0100               	movlb	0	; () banked
 13555  0025E2  AF68               	btfss	(i2__doprnt@val+3)& (0+255),7,b
 13556  0025E4  D044               	goto	i2l9353
 13557                           
 13558                           ; BSR set to: 0
 13559                           ;doprnt.c: 1262: flag |= 0x03;
 13560  0025E6  0E03               	movlw	3
 13561  0025E8  0100               	movlb	0	; () banked
 13562  0025EA  1372               	iorwf	i2__doprnt@flag& (0+255),f,b
 13563                           
 13564                           ; BSR set to: 0
 13565                           ;doprnt.c: 1263: val = -val;
 13566  0025EC  0100               	movlb	0	; () banked
 13567  0025EE  1F68               	comf	(i2__doprnt@val+3)& (0+255),f,b
 13568  0025F0  1F67               	comf	(i2__doprnt@val+2)& (0+255),f,b
 13569  0025F2  1F66               	comf	(i2__doprnt@val+1)& (0+255),f,b
 13570  0025F4  6D65               	negf	i2__doprnt@val& (0+255),b
 13571  0025F6  0E00               	movlw	0
 13572  0025F8  2366               	addwfc	(i2__doprnt@val+1)& (0+255),f,b
 13573  0025FA  2367               	addwfc	(i2__doprnt@val+2)& (0+255),f,b
 13574  0025FC  2368               	addwfc	(i2__doprnt@val+3)& (0+255),f,b
 13575                           
 13576                           ; BSR set to: 0
 13577                           ;doprnt.c: 1264: }
 13578                           ;doprnt.c: 1266: }
 13579  0025FE  D037               	goto	i2l9353
 13580  002600                     i2l470:
 13581                           
 13582                           ; BSR set to: 0
 13583                           ;doprnt.c: 1268: else
 13584                           ;doprnt.c: 1273: {
 13585                           ;doprnt.c: 1281: if(flag & 0x10)
 13586  002600  0100               	movlb	0	; () banked
 13587  002602  A972               	btfss	i2__doprnt@flag& (0+255),4,b
 13588  002604  D019               	goto	i2l9351
 13589                           
 13590                           ; BSR set to: 0
 13591                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 13592  002606  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 13593  00260A  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 13594  00260E  CFDF F04C          	movff	indf2,??i2__doprnt
 13595  002612  0E04               	movlw	4
 13596  002614  26DE               	addwf	postinc2,f,c
 13597  002616  CFDF F04D          	movff	indf2,??i2__doprnt+1
 13598  00261A  0E00               	movlw	0
 13599  00261C  22DD               	addwfc	postdec2,f,c
 13600  00261E  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13601  002622  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13602  002626  CFDE F065          	movff	postinc2,i2__doprnt@val
 13603  00262A  CFDE F066          	movff	postinc2,i2__doprnt@val+1
 13604  00262E  CFDE F067          	movff	postinc2,i2__doprnt@val+2
 13605  002632  CFDE F068          	movff	postinc2,i2__doprnt@val+3
 13606  002636  D01B               	goto	i2l9353
 13607  002638                     i2l9351:
 13608                           
 13609                           ; BSR set to: 0
 13610                           ;doprnt.c: 1283: else
 13611                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 13612  002638  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 13613  00263C  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 13614  002640  CFDF F04C          	movff	indf2,??i2__doprnt
 13615  002644  0E02               	movlw	2
 13616  002646  26DE               	addwf	postinc2,f,c
 13617  002648  CFDF F04D          	movff	indf2,??i2__doprnt+1
 13618  00264C  0E00               	movlw	0
 13619  00264E  22DD               	addwfc	postdec2,f,c
 13620  002650  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13621  002654  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13622  002658  CFDE F04E          	movff	postinc2,??i2__doprnt+2
 13623  00265C  CFDD F04F          	movff	postdec2,??i2__doprnt+3
 13624  002660  C04E  F065         	movff	??i2__doprnt+2,i2__doprnt@val
 13625  002664  C04F  F066         	movff	??i2__doprnt+3,i2__doprnt@val+1
 13626  002668  0100               	movlb	0	; () banked
 13627  00266A  6B67               	clrf	(i2__doprnt@val+2)& (0+255),b
 13628  00266C  6B68               	clrf	(i2__doprnt@val+3)& (0+255),b
 13629  00266E                     i2l9353:
 13630                           
 13631                           ; BSR set to: 0
 13632                           ;doprnt.c: 1287: }
 13633                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 13634  00266E  0100               	movlb	0	; () banked
 13635  002670  5174               	movf	i2__doprnt@prec& (0+255),w,b
 13636  002672  0100               	movlb	0	; () banked
 13637  002674  1175               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 13638  002676  A4D8               	btfss	status,2,c
 13639  002678  D00D               	goto	i2l9359
 13640                           
 13641                           ; BSR set to: 0
 13642  00267A  0100               	movlb	0	; () banked
 13643  00267C  5165               	movf	i2__doprnt@val& (0+255),w,b
 13644  00267E  0100               	movlb	0	; () banked
 13645  002680  1166               	iorwf	(i2__doprnt@val+1)& (0+255),w,b
 13646  002682  0100               	movlb	0	; () banked
 13647  002684  1167               	iorwf	(i2__doprnt@val+2)& (0+255),w,b
 13648  002686  0100               	movlb	0	; () banked
 13649  002688  1168               	iorwf	(i2__doprnt@val+3)& (0+255),w,b
 13650  00268A  A4D8               	btfss	status,2,c
 13651  00268C  D003               	goto	i2l9359
 13652                           
 13653                           ; BSR set to: 0
 13654                           ;doprnt.c: 1291: prec++;
 13655  00268E  0100               	movlb	0	; () banked
 13656  002690  4B74               	infsnz	i2__doprnt@prec& (0+255),f,b
 13657  002692  2B75               	incf	(i2__doprnt@prec+1)& (0+255),f,b
 13658  002694                     i2l9359:
 13659                           
 13660                           ; BSR set to: 0
 13661                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 13662  002694  0E01               	movlw	1
 13663  002696  0100               	movlb	0	; () banked
 13664  002698  6F76               	movwf	i2__doprnt@c& (0+255),b
 13665  00269A                     i2l9361:
 13666                           
 13667                           ; BSR set to: 0
 13668  00269A  0E0A               	movlw	10
 13669  00269C  0100               	movlb	0	; () banked
 13670  00269E  1976               	xorwf	i2__doprnt@c& (0+255),w,b
 13671  0026A0  B4D8               	btfsc	status,2,c
 13672  0026A2  D01E               	goto	i2l9373
 13673                           
 13674                           ; BSR set to: 0
 13675                           ;doprnt.c: 1306: if(val < dpowers[c])
 13676                           
 13677                           ; BSR set to: 0
 13678                           
 13679                           ; BSR set to: 0
 13680  0026A4  0100               	movlb	0	; () banked
 13681  0026A6  5176               	movf	i2__doprnt@c& (0+255),w,b
 13682  0026A8  0D04               	mullw	4
 13683  0026AA  0E01               	movlw	low _dpowers
 13684  0026AC  24F3               	addwf	prodl,w,c
 13685  0026AE  6EF6               	movwf	tblptrl,c
 13686  0026B0  0E06               	movlw	high _dpowers
 13687  0026B2  20F4               	addwfc	prodh,w,c
 13688  0026B4  6EF7               	movwf	tblptrh,c
 13689  0026B6                     	if	0	;There are less than 3 active tblptr bytes
 13690  0026B6                     	endif
 13691  0026B6  0009               	tblrd		*+
 13692  0026B8  50F5               	movf	tablat,w,c
 13693  0026BA  0100               	movlb	0	; () banked
 13694  0026BC  5D65               	subwf	i2__doprnt@val& (0+255),w,b
 13695  0026BE  0009               	tblrd		*+
 13696  0026C0  50F5               	movf	tablat,w,c
 13697  0026C2  0100               	movlb	0	; () banked
 13698  0026C4  5966               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 13699  0026C6  0009               	tblrd		*+
 13700  0026C8  50F5               	movf	tablat,w,c
 13701  0026CA  0100               	movlb	0	; () banked
 13702  0026CC  5967               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 13703  0026CE  0009               	tblrd		*+
 13704  0026D0  50F5               	movf	tablat,w,c
 13705  0026D2  0100               	movlb	0	; () banked
 13706  0026D4  5968               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 13707  0026D6  A0D8               	btfss	status,0,c
 13708  0026D8  D003               	goto	i2l9373
 13709                           
 13710                           ; BSR set to: 0
 13711                           
 13712                           ; BSR set to: 0
 13713                           
 13714                           ; BSR set to: 0
 13715                           ;doprnt.c: 1307: break;
 13716  0026DA  0100               	movlb	0	; () banked
 13717  0026DC  2B76               	incf	i2__doprnt@c& (0+255),f,b
 13718  0026DE  D7DD               	goto	i2l9361
 13719  0026E0                     i2l9373:
 13720                           
 13721                           ; BSR set to: 0
 13722                           ;doprnt.c: 1339: if(c < prec)
 13723  0026E0  0E80               	movlw	128
 13724  0026E2  0100               	movlb	0	; () banked
 13725  0026E4  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 13726  0026E6  0E7F               	movlw	127
 13727  0026E8  6E4C               	movwf	??i2__doprnt& (0+255),c
 13728  0026EA  0100               	movlb	0	; () banked
 13729  0026EC  5174               	movf	i2__doprnt@prec& (0+255),w,b
 13730  0026EE  0100               	movlb	0	; () banked
 13731  0026F0  5D76               	subwf	i2__doprnt@c& (0+255),w,b
 13732  0026F2  0100               	movlb	0	; () banked
 13733  0026F4  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 13734  0026F6  0A80               	xorlw	128
 13735  0026F8  584C               	subwfb	??i2__doprnt& (0+255),w,c
 13736  0026FA  B0D8               	btfsc	status,0,c
 13737  0026FC  D003               	goto	i2l9377
 13738                           
 13739                           ; BSR set to: 0
 13740                           ;doprnt.c: 1340: c = prec;
 13741  0026FE  C074  F076         	movff	i2__doprnt@prec,i2__doprnt@c
 13742  002702  D016               	goto	i2l9381
 13743  002704                     i2l9377:
 13744                           
 13745                           ; BSR set to: 0
 13746                           ;doprnt.c: 1341: else if(prec < c)
 13747  002704  0100               	movlb	0	; () banked
 13748  002706  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 13749  002708  0A80               	xorlw	128
 13750  00270A  6E4C               	movwf	??i2__doprnt& (0+255),c
 13751  00270C  0100               	movlb	0	; () banked
 13752  00270E  5176               	movf	i2__doprnt@c& (0+255),w,b
 13753  002710  0100               	movlb	0	; () banked
 13754  002712  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 13755  002714  0E80               	movlw	128
 13756  002716  0100               	movlb	0	; () banked
 13757  002718  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 13758  00271A  0E7F               	movlw	127
 13759  00271C  584C               	subwfb	??i2__doprnt& (0+255),w,c
 13760  00271E  B0D8               	btfsc	status,0,c
 13761  002720  D007               	goto	i2l9381
 13762                           
 13763                           ; BSR set to: 0
 13764                           ;doprnt.c: 1342: prec = c;
 13765  002722  0100               	movlb	0	; () banked
 13766  002724  5176               	movf	i2__doprnt@c& (0+255),w,b
 13767  002726  0100               	movlb	0	; () banked
 13768  002728  6F74               	movwf	i2__doprnt@prec& (0+255),b
 13769  00272A  6B75               	clrf	(i2__doprnt@prec+1)& (0+255),b
 13770  00272C  BF74               	btfsc	i2__doprnt@prec& (0+255),7,b
 13771  00272E  0775               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 13772  002730                     i2l9381:
 13773                           
 13774                           ; BSR set to: 0
 13775                           ;doprnt.c: 1345: if(width && flag & 0x03)
 13776  002730  0100               	movlb	0	; () banked
 13777  002732  5170               	movf	i2__doprnt@width& (0+255),w,b
 13778  002734  0100               	movlb	0	; () banked
 13779  002736  1171               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 13780  002738  B4D8               	btfsc	status,2,c
 13781  00273A  D010               	goto	i2l9387
 13782                           
 13783                           ; BSR set to: 0
 13784  00273C  0E03               	movlw	3
 13785  00273E  0100               	movlb	0	; () banked
 13786  002740  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 13787  002742  6E4C               	movwf	??i2__doprnt& (0+255),c
 13788  002744  0E00               	movlw	0
 13789  002746  0100               	movlb	0	; () banked
 13790  002748  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 13791  00274A  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 13792  00274C  504C               	movf	??i2__doprnt,w,c
 13793  00274E  104D               	iorwf	??i2__doprnt+1,w,c
 13794  002750  B4D8               	btfsc	status,2,c
 13795  002752  D004               	goto	i2l9387
 13796                           
 13797                           ; BSR set to: 0
 13798                           ;doprnt.c: 1346: width--;
 13799  002754  0100               	movlb	0	; () banked
 13800  002756  0770               	decf	i2__doprnt@width& (0+255),f,b
 13801  002758  A0D8               	btfss	status,0,c
 13802  00275A  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 13803  00275C                     i2l9387:
 13804                           
 13805                           ; BSR set to: 0
 13806                           ;doprnt.c: 1348: if(flag & 0x4000) {
 13807  00275C  0100               	movlb	0	; () banked
 13808  00275E  AD73               	btfss	(i2__doprnt@flag+1)& (0+255),6,b
 13809  002760  D01C               	goto	i2l9395
 13810                           
 13811                           ; BSR set to: 0
 13812                           ;doprnt.c: 1349: if(width > prec)
 13813  002762  0100               	movlb	0	; () banked
 13814  002764  5170               	movf	i2__doprnt@width& (0+255),w,b
 13815  002766  0100               	movlb	0	; () banked
 13816  002768  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 13817  00276A  0100               	movlb	0	; () banked
 13818  00276C  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 13819  00276E  0A80               	xorlw	128
 13820  002770  6E4C               	movwf	??i2__doprnt& (0+255),c
 13821  002772  0100               	movlb	0	; () banked
 13822  002774  5171               	movf	(i2__doprnt@width+1)& (0+255),w,b
 13823  002776  0A80               	xorlw	128
 13824  002778  584C               	subwfb	??i2__doprnt& (0+255),w,c
 13825  00277A  B0D8               	btfsc	status,0,c
 13826  00277C  D009               	goto	i2l9393
 13827                           
 13828                           ; BSR set to: 0
 13829                           ;doprnt.c: 1350: width -= prec;
 13830  00277E  0100               	movlb	0	; () banked
 13831  002780  5174               	movf	i2__doprnt@prec& (0+255),w,b
 13832  002782  0100               	movlb	0	; () banked
 13833  002784  5F70               	subwf	i2__doprnt@width& (0+255),f,b
 13834  002786  0100               	movlb	0	; () banked
 13835  002788  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 13836  00278A  0100               	movlb	0	; () banked
 13837  00278C  5B71               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 13838  00278E  D005               	goto	i2l9395
 13839  002790                     i2l9393:
 13840                           
 13841                           ; BSR set to: 0
 13842                           ;doprnt.c: 1351: else
 13843                           ;doprnt.c: 1352: width = 0;
 13844  002790  0E00               	movlw	0
 13845  002792  0100               	movlb	0	; () banked
 13846  002794  6F71               	movwf	(i2__doprnt@width+1)& (0+255),b
 13847  002796  0E00               	movlw	0
 13848  002798  6F70               	movwf	i2__doprnt@width& (0+255),b
 13849  00279A                     i2l9395:
 13850                           
 13851                           ; BSR set to: 0
 13852                           ;doprnt.c: 1353: }
 13853                           ;doprnt.c: 1381: if(width > c)
 13854  00279A  0E80               	movlw	128
 13855  00279C  0100               	movlb	0	; () banked
 13856  00279E  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 13857  0027A0  0E7F               	movlw	127
 13858  0027A2  6E4C               	movwf	??i2__doprnt& (0+255),c
 13859  0027A4  0100               	movlb	0	; () banked
 13860  0027A6  5170               	movf	i2__doprnt@width& (0+255),w,b
 13861  0027A8  0100               	movlb	0	; () banked
 13862  0027AA  5D76               	subwf	i2__doprnt@c& (0+255),w,b
 13863  0027AC  0100               	movlb	0	; () banked
 13864  0027AE  5171               	movf	(i2__doprnt@width+1)& (0+255),w,b
 13865  0027B0  0A80               	xorlw	128
 13866  0027B2  584C               	subwfb	??i2__doprnt& (0+255),w,c
 13867  0027B4  B0D8               	btfsc	status,0,c
 13868  0027B6  D00B               	goto	i2l9399
 13869                           
 13870                           ; BSR set to: 0
 13871                           ;doprnt.c: 1382: width -= c;
 13872  0027B8  0100               	movlb	0	; () banked
 13873  0027BA  5176               	movf	i2__doprnt@c& (0+255),w,b
 13874  0027BC  0100               	movlb	0	; () banked
 13875  0027BE  5F70               	subwf	i2__doprnt@width& (0+255),f,b
 13876  0027C0  0E00               	movlw	0
 13877  0027C2  0100               	movlb	0	; () banked
 13878  0027C4  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 13879  0027C6  0EFF               	movlw	255
 13880  0027C8  0100               	movlb	0	; () banked
 13881  0027CA  5B71               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 13882  0027CC  D005               	goto	i2l9401
 13883  0027CE                     i2l9399:
 13884                           
 13885                           ; BSR set to: 0
 13886                           ;doprnt.c: 1383: else
 13887                           ;doprnt.c: 1384: width = 0;
 13888  0027CE  0E00               	movlw	0
 13889  0027D0  0100               	movlb	0	; () banked
 13890  0027D2  6F71               	movwf	(i2__doprnt@width+1)& (0+255),b
 13891  0027D4  0E00               	movlw	0
 13892  0027D6  6F70               	movwf	i2__doprnt@width& (0+255),b
 13893  0027D8                     i2l9401:
 13894                           
 13895                           ; BSR set to: 0
 13896                           ;doprnt.c: 1387: if(flag & 0x04) {
 13897  0027D8  0100               	movlb	0	; () banked
 13898  0027DA  A572               	btfss	i2__doprnt@flag& (0+255),2,b
 13899  0027DC  D07B               	goto	i2l9425
 13900                           
 13901                           ; BSR set to: 0
 13902                           ;doprnt.c: 1392: if(flag & 0x03)
 13903  0027DE  0E03               	movlw	3
 13904  0027E0  0100               	movlb	0	; () banked
 13905  0027E2  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 13906  0027E4  6E4C               	movwf	??i2__doprnt& (0+255),c
 13907  0027E6  0E00               	movlw	0
 13908  0027E8  0100               	movlb	0	; () banked
 13909  0027EA  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 13910  0027EC  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 13911  0027EE  504C               	movf	??i2__doprnt,w,c
 13912  0027F0  104D               	iorwf	??i2__doprnt+1,w,c
 13913  0027F2  B4D8               	btfsc	status,2,c
 13914  0027F4  D032               	goto	i2l9413
 13915                           
 13916                           ; BSR set to: 0
 13917                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 13918  0027F6  EE20 F002          	lfsr	2,2
 13919  0027FA  5046               	movf	i2__doprnt@pb,w,c
 13920  0027FC  26D9               	addwf	fsr2l,f,c
 13921  0027FE  5047               	movf	i2__doprnt@pb+1,w,c
 13922  002800  22DA               	addwfc	fsr2h,f,c
 13923  002802  50DE               	movf	postinc2,w,c
 13924  002804  10DE               	iorwf	postinc2,w,c
 13925  002806  B4D8               	btfsc	status,2,c
 13926  002808  D013               	goto	i2l9409
 13927                           
 13928                           ; BSR set to: 0
 13929  00280A  EE20 F002          	lfsr	2,2
 13930  00280E  5046               	movf	i2__doprnt@pb,w,c
 13931  002810  26D9               	addwf	fsr2l,f,c
 13932  002812  5047               	movf	i2__doprnt@pb+1,w,c
 13933  002814  22DA               	addwfc	fsr2h,f,c
 13934  002816  D801               	call	i2u1570_48
 13935  002818  D020               	goto	i2l9413
 13936  00281A                     i2u1570_48:
 13937  00281A  0005               	push	
 13938  00281C  6EFA               	movwf	pclath,c
 13939  00281E  50DE               	movf	postinc2,w,c
 13940  002820  6EFD               	movwf	tosl,c
 13941  002822  50DE               	movf	postinc2,w,c
 13942  002824  6EFE               	movwf	tosh,c
 13943  002826  50F8               	movf	tblptru,w,c
 13944  002828  6EFF               	movwf	tosu,c
 13945  00282A  50FA               	movf	pclath,w,c
 13946  00282C  0E2D               	movlw	45
 13947  00282E  0012               	return		;indir
 13948  002830                     i2l9409:
 13949  002830  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13950  002834  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13951  002838  CFDE F04C          	movff	postinc2,??i2__doprnt
 13952  00283C  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13953  002840  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13954  002844  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13955  002848  0E2D               	movlw	45
 13956  00284A  6EDF               	movwf	indf2,c
 13957  00284C  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13958  002850  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13959  002854  2ADE               	incf	postinc2,f,c
 13960  002856  0E00               	movlw	0
 13961  002858  22DD               	addwfc	postdec2,f,c
 13962  00285A                     i2l9413:
 13963                           
 13964                           ;doprnt.c: 1415: if(width)
 13965  00285A  0100               	movlb	0	; () banked
 13966  00285C  5170               	movf	i2__doprnt@width& (0+255),w,b
 13967  00285E  0100               	movlb	0	; () banked
 13968  002860  1171               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 13969  002862  B4D8               	btfsc	status,2,c
 13970  002864  D120               	goto	i2l9457
 13971                           
 13972                           ; BSR set to: 0
 13973                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 13974                           
 13975                           ; BSR set to: 0
 13976                           
 13977                           ;doprnt.c: 1416: do
 13978  002866  EE20 F002          	lfsr	2,2
 13979  00286A  5046               	movf	i2__doprnt@pb,w,c
 13980  00286C  26D9               	addwf	fsr2l,f,c
 13981  00286E  5047               	movf	i2__doprnt@pb+1,w,c
 13982  002870  22DA               	addwfc	fsr2h,f,c
 13983  002872  50DE               	movf	postinc2,w,c
 13984  002874  10DE               	iorwf	postinc2,w,c
 13985  002876  B4D8               	btfsc	status,2,c
 13986  002878  D013               	goto	i2l9419
 13987                           
 13988                           ; BSR set to: 0
 13989  00287A  EE20 F002          	lfsr	2,2
 13990  00287E  5046               	movf	i2__doprnt@pb,w,c
 13991  002880  26D9               	addwf	fsr2l,f,c
 13992  002882  5047               	movf	i2__doprnt@pb+1,w,c
 13993  002884  22DA               	addwfc	fsr2h,f,c
 13994  002886  D801               	call	i2u1573_48
 13995  002888  D020               	goto	i2l9423
 13996  00288A                     i2u1573_48:
 13997  00288A  0005               	push	
 13998  00288C  6EFA               	movwf	pclath,c
 13999  00288E  50DE               	movf	postinc2,w,c
 14000  002890  6EFD               	movwf	tosl,c
 14001  002892  50DE               	movf	postinc2,w,c
 14002  002894  6EFE               	movwf	tosh,c
 14003  002896  50F8               	movf	tblptru,w,c
 14004  002898  6EFF               	movwf	tosu,c
 14005  00289A  50FA               	movf	pclath,w,c
 14006  00289C  0E30               	movlw	48
 14007  00289E  0012               	return		;indir
 14008  0028A0                     i2l9419:
 14009  0028A0  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14010  0028A4  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14011  0028A8  CFDE F04C          	movff	postinc2,??i2__doprnt
 14012  0028AC  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 14013  0028B0  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 14014  0028B4  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 14015  0028B8  0E30               	movlw	48
 14016  0028BA  6EDF               	movwf	indf2,c
 14017  0028BC  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14018  0028C0  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14019  0028C4  2ADE               	incf	postinc2,f,c
 14020  0028C6  0E00               	movlw	0
 14021  0028C8  22DD               	addwfc	postdec2,f,c
 14022  0028CA                     i2l9423:
 14023                           
 14024                           ;doprnt.c: 1418: while(--width);
 14025  0028CA  0100               	movlb	0	; () banked
 14026  0028CC  0770               	decf	i2__doprnt@width& (0+255),f,b
 14027  0028CE  A0D8               	btfss	status,0,c
 14028  0028D0  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 14029  0028D2  D7C3               	goto	i2l9413
 14030  0028D4                     i2l9425:
 14031                           
 14032                           ; BSR set to: 0
 14033                           ;doprnt.c: 1422: {
 14034                           ;doprnt.c: 1424: if(width
 14035                           ;doprnt.c: 1428: )
 14036  0028D4  0100               	movlb	0	; () banked
 14037  0028D6  5170               	movf	i2__doprnt@width& (0+255),w,b
 14038  0028D8  0100               	movlb	0	; () banked
 14039  0028DA  1171               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 14040  0028DC  B4D8               	btfsc	status,2,c
 14041  0028DE  D03C               	goto	i2l9437
 14042  0028E0                     i2l9427:
 14043                           
 14044                           ; BSR set to: 0
 14045                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 14046  0028E0  EE20 F002          	lfsr	2,2
 14047  0028E4  5046               	movf	i2__doprnt@pb,w,c
 14048  0028E6  26D9               	addwf	fsr2l,f,c
 14049  0028E8  5047               	movf	i2__doprnt@pb+1,w,c
 14050  0028EA  22DA               	addwfc	fsr2h,f,c
 14051  0028EC  50DE               	movf	postinc2,w,c
 14052  0028EE  10DE               	iorwf	postinc2,w,c
 14053  0028F0  B4D8               	btfsc	status,2,c
 14054  0028F2  D013               	goto	i2l9431
 14055                           
 14056                           ; BSR set to: 0
 14057  0028F4  EE20 F002          	lfsr	2,2
 14058  0028F8  5046               	movf	i2__doprnt@pb,w,c
 14059  0028FA  26D9               	addwf	fsr2l,f,c
 14060  0028FC  5047               	movf	i2__doprnt@pb+1,w,c
 14061  0028FE  22DA               	addwfc	fsr2h,f,c
 14062  002900  D801               	call	i2u1577_48
 14063  002902  D020               	goto	i2l9435
 14064  002904                     i2u1577_48:
 14065  002904  0005               	push	
 14066  002906  6EFA               	movwf	pclath,c
 14067  002908  50DE               	movf	postinc2,w,c
 14068  00290A  6EFD               	movwf	tosl,c
 14069  00290C  50DE               	movf	postinc2,w,c
 14070  00290E  6EFE               	movwf	tosh,c
 14071  002910  50F8               	movf	tblptru,w,c
 14072  002912  6EFF               	movwf	tosu,c
 14073  002914  50FA               	movf	pclath,w,c
 14074  002916  0E20               	movlw	32
 14075  002918  0012               	return		;indir
 14076  00291A                     i2l9431:
 14077  00291A  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14078  00291E  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14079  002922  CFDE F04C          	movff	postinc2,??i2__doprnt
 14080  002926  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 14081  00292A  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 14082  00292E  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 14083  002932  0E20               	movlw	32
 14084  002934  6EDF               	movwf	indf2,c
 14085  002936  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14086  00293A  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14087  00293E  2ADE               	incf	postinc2,f,c
 14088  002940  0E00               	movlw	0
 14089  002942  22DD               	addwfc	postdec2,f,c
 14090  002944                     i2l9435:
 14091                           
 14092                           ;doprnt.c: 1431: while(--width);
 14093  002944  0100               	movlb	0	; () banked
 14094  002946  0770               	decf	i2__doprnt@width& (0+255),f,b
 14095  002948  A0D8               	btfss	status,0,c
 14096  00294A  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 14097  00294C  0100               	movlb	0	; () banked
 14098  00294E  5170               	movf	i2__doprnt@width& (0+255),w,b
 14099  002950  0100               	movlb	0	; () banked
 14100  002952  1171               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 14101  002954  A4D8               	btfss	status,2,c
 14102  002956  D7C4               	goto	i2l9427
 14103  002958                     i2l9437:
 14104                           
 14105                           ; BSR set to: 0
 14106                           ;doprnt.c: 1438: if(flag & 0x03)
 14107  002958  0E03               	movlw	3
 14108  00295A  0100               	movlb	0	; () banked
 14109  00295C  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 14110  00295E  6E4C               	movwf	??i2__doprnt& (0+255),c
 14111  002960  0E00               	movlw	0
 14112  002962  0100               	movlb	0	; () banked
 14113  002964  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 14114  002966  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 14115  002968  504C               	movf	??i2__doprnt,w,c
 14116  00296A  104D               	iorwf	??i2__doprnt+1,w,c
 14117  00296C  B4D8               	btfsc	status,2,c
 14118  00296E  D09B               	goto	i2l9457
 14119                           
 14120                           ; BSR set to: 0
 14121                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 14122  002970  EE20 F002          	lfsr	2,2
 14123  002974  5046               	movf	i2__doprnt@pb,w,c
 14124  002976  26D9               	addwf	fsr2l,f,c
 14125  002978  5047               	movf	i2__doprnt@pb+1,w,c
 14126  00297A  22DA               	addwfc	fsr2h,f,c
 14127  00297C  50DE               	movf	postinc2,w,c
 14128  00297E  10DE               	iorwf	postinc2,w,c
 14129  002980  B4D8               	btfsc	status,2,c
 14130  002982  D013               	goto	i2l9443
 14131                           
 14132                           ; BSR set to: 0
 14133  002984  EE20 F002          	lfsr	2,2
 14134  002988  5046               	movf	i2__doprnt@pb,w,c
 14135  00298A  26D9               	addwf	fsr2l,f,c
 14136  00298C  5047               	movf	i2__doprnt@pb+1,w,c
 14137  00298E  22DA               	addwfc	fsr2h,f,c
 14138  002990  D801               	call	i2u1581_48
 14139  002992  D089               	goto	i2l9457
 14140  002994                     i2u1581_48:
 14141  002994  0005               	push	
 14142  002996  6EFA               	movwf	pclath,c
 14143  002998  50DE               	movf	postinc2,w,c
 14144  00299A  6EFD               	movwf	tosl,c
 14145  00299C  50DE               	movf	postinc2,w,c
 14146  00299E  6EFE               	movwf	tosh,c
 14147  0029A0  50F8               	movf	tblptru,w,c
 14148  0029A2  6EFF               	movwf	tosu,c
 14149  0029A4  50FA               	movf	pclath,w,c
 14150  0029A6  0E2D               	movlw	45
 14151  0029A8  0012               	return		;indir
 14152  0029AA                     i2l9443:
 14153  0029AA  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14154  0029AE  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14155  0029B2  CFDE F04C          	movff	postinc2,??i2__doprnt
 14156  0029B6  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 14157  0029BA  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 14158  0029BE  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 14159  0029C2  0E2D               	movlw	45
 14160  0029C4  6EDF               	movwf	indf2,c
 14161  0029C6  D068               	goto	i2l9455
 14162  0029C8                     i2l9447:
 14163                           
 14164                           ;doprnt.c: 1478: {
 14165                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 14166  0029C8  C074  F04C         	movff	i2__doprnt@prec,??i2__doprnt
 14167  0029CC  C075  F04D         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 14168  0029D0  90D8               	bcf	status,0,c
 14169  0029D2  364C               	rlcf	??i2__doprnt,f,c
 14170  0029D4  364D               	rlcf	??i2__doprnt+1,f,c
 14171  0029D6  90D8               	bcf	status,0,c
 14172  0029D8  364C               	rlcf	??i2__doprnt,f,c
 14173  0029DA  364D               	rlcf	??i2__doprnt+1,f,c
 14174  0029DC  0E01               	movlw	low _dpowers
 14175  0029DE  244C               	addwf	??i2__doprnt,w,c
 14176  0029E0  6EF6               	movwf	tblptrl,c
 14177  0029E2  0E06               	movlw	high _dpowers
 14178  0029E4  204D               	addwfc	??i2__doprnt+1,w,c
 14179  0029E6  6EF7               	movwf	tblptrh,c
 14180  0029E8                     	if	0	;There are less than 3 active tblptr bytes
 14181  0029E8                     	endif
 14182  0029E8  0009               	tblrd		*+
 14183  0029EA  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 14184  0029EE  0009               	tblrd		*+
 14185  0029F0  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 14186  0029F4  0009               	tblrd		*+
 14187  0029F6  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 14188  0029FA  000A               	tblrd		*-
 14189  0029FC  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 14190  002A00  C065  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 14191  002A04  C066  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 14192  002A08  C067  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 14193  002A0C  C068  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 14194  002A10  EC96  F029         	call	i2___lldiv
 14195  002A14  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 14196  002A18  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 14197  002A1C  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 14198  002A20  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 14199  002A24  0E0A               	movlw	10
 14200  002A26  6E12               	movwf	i2___llmod@divisor,c
 14201  002A28  0E00               	movlw	0
 14202  002A2A  6E13               	movwf	i2___llmod@divisor+1,c
 14203  002A2C  0E00               	movlw	0
 14204  002A2E  6E14               	movwf	i2___llmod@divisor+2,c
 14205  002A30  0E00               	movlw	0
 14206  002A32  6E15               	movwf	i2___llmod@divisor+3,c
 14207  002A34  EC8A  F02A         	call	i2___llmod	;wreg free
 14208  002A38  500E               	movf	?i2___llmod,w,c
 14209  002A3A  0F30               	addlw	48
 14210  002A3C  0100               	movlb	0	; () banked
 14211  002A3E  6F76               	movwf	i2__doprnt@c& (0+255),b
 14212                           
 14213                           ; BSR set to: 0
 14214                           ;doprnt.c: 1523: }
 14215                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 14216  002A40  EE20 F002          	lfsr	2,2
 14217  002A44  5046               	movf	i2__doprnt@pb,w,c
 14218  002A46  26D9               	addwf	fsr2l,f,c
 14219  002A48  5047               	movf	i2__doprnt@pb+1,w,c
 14220  002A4A  22DA               	addwfc	fsr2h,f,c
 14221  002A4C  50DE               	movf	postinc2,w,c
 14222  002A4E  10DE               	iorwf	postinc2,w,c
 14223  002A50  B4D8               	btfsc	status,2,c
 14224  002A52  D014               	goto	i2l9453
 14225                           
 14226                           ; BSR set to: 0
 14227  002A54  EE20 F002          	lfsr	2,2
 14228  002A58  5046               	movf	i2__doprnt@pb,w,c
 14229  002A5A  26D9               	addwf	fsr2l,f,c
 14230  002A5C  5047               	movf	i2__doprnt@pb+1,w,c
 14231  002A5E  22DA               	addwfc	fsr2h,f,c
 14232  002A60  D801               	call	i2u1583_48
 14233  002A62  D021               	goto	i2l9457
 14234  002A64                     i2u1583_48:
 14235  002A64  0005               	push	
 14236  002A66  6EFA               	movwf	pclath,c
 14237  002A68  50DE               	movf	postinc2,w,c
 14238  002A6A  6EFD               	movwf	tosl,c
 14239  002A6C  50DE               	movf	postinc2,w,c
 14240  002A6E  6EFE               	movwf	tosh,c
 14241  002A70  50F8               	movf	tblptru,w,c
 14242  002A72  6EFF               	movwf	tosu,c
 14243  002A74  50FA               	movf	pclath,w,c
 14244  002A76  0100               	movlb	0	; () banked
 14245  002A78  5176               	movf	i2__doprnt@c& (0+255),w,b
 14246  002A7A  0012               	return		;indir
 14247  002A7C                     i2l9453:
 14248  002A7C  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14249  002A80  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14250  002A84  CFDE F04C          	movff	postinc2,??i2__doprnt
 14251  002A88  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 14252  002A8C  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 14253  002A90  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 14254  002A94  C076  FFDF         	movff	i2__doprnt@c,indf2
 14255  002A98                     i2l9455:
 14256  002A98  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14257  002A9C  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14258  002AA0  2ADE               	incf	postinc2,f,c
 14259  002AA2  0E00               	movlw	0
 14260  002AA4  22DD               	addwfc	postdec2,f,c
 14261  002AA6                     i2l9457:
 14262  002AA6  0100               	movlb	0	; () banked
 14263  002AA8  0774               	decf	i2__doprnt@prec& (0+255),f,b
 14264  002AAA  A0D8               	btfss	status,0,c
 14265  002AAC  0775               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 14266  002AAE  0100               	movlb	0	; () banked
 14267  002AB0  2974               	incf	i2__doprnt@prec& (0+255),w,b
 14268  002AB2  E18A               	bnz	i2l9447
 14269  002AB4  0100               	movlb	0	; () banked
 14270  002AB6  2975               	incf	(i2__doprnt@prec+1)& (0+255),w,b
 14271  002AB8  A4D8               	btfss	status,2,c
 14272  002ABA  D786               	goto	i2l9447
 14273  002ABC                     i2l9459:
 14274  002ABC  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 14275  002AC0  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 14276  002AC4  4A48               	infsnz	i2__doprnt@f,f,c
 14277  002AC6  2A49               	incf	i2__doprnt@f+1,f,c
 14278  002AC8                     	if	0	;tblptru may be non-zero
 14279  002AC8                     	endif
 14280  002AC8                     	if	0	;tblptru may be non-zero
 14281  002AC8                     	endif
 14282  002AC8  0008               	tblrd		*
 14283  002ACA  CFF5 F076          	movff	tablat,i2__doprnt@c
 14284  002ACE  0100               	movlb	0	; () banked
 14285  002AD0  5176               	movf	i2__doprnt@c& (0+255),w,b
 14286  002AD2  A4D8               	btfss	status,2,c
 14287  002AD4  EFB7  F00C         	goto	i2l9071
 14288  002AD8                     i2l9461:
 14289                           
 14290                           ; BSR set to: 0
 14291                           ;doprnt.c: 1540: return 0;
 14292  002AD8  0E00               	movlw	0
 14293  002ADA  6E47               	movwf	?i2__doprnt+1,c
 14294  002ADC  0E00               	movlw	0
 14295  002ADE  6E46               	movwf	?i2__doprnt,c
 14296  002AE0  0012               	return	
 14297  002AE2                     __end_ofi2__doprnt:
 14298                           	opt stack 0
 14299                           tosu	equ	0xFFF
 14300                           tosh	equ	0xFFE
 14301                           tosl	equ	0xFFD
 14302                           pclatu	equ	0xFFB
 14303                           pclath	equ	0xFFA
 14304                           tblptru	equ	0xFF8
 14305                           tblptrh	equ	0xFF7
 14306                           tblptrl	equ	0xFF6
 14307                           tablat	equ	0xFF5
 14308                           prodh	equ	0xFF4
 14309                           prodl	equ	0xFF3
 14310                           intcon	equ	0xFF2
 14311                           intcon2	equ	0xFF1
 14312                           intcon3	equ	0xFF0
 14313                           postinc0	equ	0xFEE
 14314                           fsr0h	equ	0xFEA
 14315                           fsr0l	equ	0xFE9
 14316                           wreg	equ	0xFE8
 14317                           postdec1	equ	0xFE5
 14318                           fsr1h	equ	0xFE2
 14319                           fsr1l	equ	0xFE1
 14320                           indf2	equ	0xFDF
 14321                           postinc2	equ	0xFDE
 14322                           postdec2	equ	0xFDD
 14323                           fsr2h	equ	0xFDA
 14324                           fsr2l	equ	0xFD9
 14325                           status	equ	0xFD8
 14326                           
 14327 ;; *************** function i2_scale *****************
 14328 ;; Defined at:
 14329 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 14330 ;; Parameters:    Size  Location     Type
 14331 ;;  scl             1    wreg     char 
 14332 ;; Auto vars:     Size  Location     Type
 14333 ;;  scl             1   53[COMRAM] char 
 14334 ;; Return value:  Size  Location     Type
 14335 ;;                  3   47[COMRAM] char 
 14336 ;; Registers used:
 14337 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14338 ;; Tracked objects:
 14339 ;;		On entry : 0/0
 14340 ;;		On exit  : 0/0
 14341 ;;		Unchanged: 0/0
 14342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14343 ;;      Params:         3       0       0       0       0       0       0
 14344 ;;      Locals:         4       0       0       0       0       0       0
 14345 ;;      Temps:          0       0       0       0       0       0       0
 14346 ;;      Totals:         7       0       0       0       0       0       0
 14347 ;;Total ram usage:        7 bytes
 14348 ;; Hardware stack levels used:    1
 14349 ;; Hardware stack levels required when called:    2
 14350 ;; This function calls:
 14351 ;;		i2___awdiv
 14352 ;;		i2___awmod
 14353 ;;		i2___ftmul
 14354 ;;		i2___wmul
 14355 ;; This function is called by:
 14356 ;;		i2__doprnt
 14357 ;; This function uses a non-reentrant model
 14358 ;;
 14359                           
 14360                           	psect	text48
 14361  002F90                     __ptext48:
 14362                           	opt stack 0
 14363  002F90                     i2_scale:
 14364                           	opt stack 19
 14365                           
 14366                           ; BSR set to: 0
 14367                           ;incstack = 0
 14368                           ;i2scale@scl stored from wreg
 14369  002F90  6E36               	movwf	i2scale@scl,c
 14370                           
 14371                           ;doprnt.c: 428: if(scl < 0) {
 14372  002F92  AE36               	btfss	i2scale@scl,7,c
 14373  002F94  D0FB               	goto	i2l4133
 14374                           
 14375                           ;doprnt.c: 429: scl = -scl;
 14376  002F96  6C36               	negf	i2scale@scl,c
 14377                           
 14378                           ;doprnt.c: 430: if(scl>=110)
 14379  002F98  5036               	movf	i2scale@scl,w,c
 14380  002F9A  0A80               	xorlw	128
 14381  002F9C  0F12               	addlw	-238
 14382  002F9E  A0D8               	btfss	status,0,c
 14383  002FA0  D091               	goto	i2l4123
 14384                           
 14385                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 14386  002FA2  0E00               	movlw	0
 14387  002FA4  6E12               	movwf	i2___wmul@multiplicand+1,c
 14388  002FA6  0E03               	movlw	3
 14389  002FA8  6E11               	movwf	i2___wmul@multiplicand,c
 14390  002FAA  0E00               	movlw	0
 14391  002FAC  6E0A               	movwf	i2___awdiv@divisor+1,c
 14392  002FAE  0E0A               	movlw	10
 14393  002FB0  6E09               	movwf	i2___awdiv@divisor,c
 14394  002FB2  0E00               	movlw	0
 14395  002FB4  6E04               	movwf	i2___awmod@divisor+1,c
 14396  002FB6  0E64               	movlw	100
 14397  002FB8  6E03               	movwf	i2___awmod@divisor,c
 14398  002FBA  5036               	movf	i2scale@scl,w,c
 14399  002FBC  6E01               	movwf	i2___awmod@dividend,c
 14400  002FBE  6A02               	clrf	i2___awmod@dividend+1,c
 14401  002FC0  BE01               	btfsc	i2___awmod@dividend,7,c
 14402  002FC2  0602               	decf	i2___awmod@dividend+1,f,c
 14403  002FC4  EC52  F02A         	call	i2___awmod
 14404  002FC8  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 14405  002FCC  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 14406  002FD0  EC54  F029         	call	i2___awdiv	;wreg free
 14407  002FD4  0E09               	movlw	9
 14408  002FD6  2407               	addwf	?i2___awdiv,w,c
 14409  002FD8  6E0F               	movwf	i2___wmul@multiplier,c
 14410  002FDA  0E00               	movlw	0
 14411  002FDC  2008               	addwfc	?i2___awdiv+1,w,c
 14412  002FDE  6E10               	movwf	i2___wmul@multiplier+1,c
 14413  002FE0  EC16  F02D         	call	i2___wmul	;wreg free
 14414  002FE4  0E29               	movlw	low __npowers_
 14415  002FE6  240F               	addwf	?i2___wmul,w,c
 14416  002FE8  6EF6               	movwf	tblptrl,c
 14417  002FEA  0E06               	movlw	high __npowers_
 14418  002FEC  2010               	addwfc	?i2___wmul+1,w,c
 14419  002FEE  6EF7               	movwf	tblptrh,c
 14420  002FF0                     	if	0	;There are less than 3 active tblptr bytes
 14421  002FF0                     	endif
 14422  002FF0  0009               	tblrd		*+
 14423  002FF2  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14424  002FF6  0009               	tblrd		*+
 14425  002FF8  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14426  002FFC  000A               	tblrd		*-
 14427  002FFE  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14428  003002  0E00               	movlw	0
 14429  003004  6E0A               	movwf	i2___awdiv@divisor+1,c
 14430  003006  0E64               	movlw	100
 14431  003008  6E09               	movwf	i2___awdiv@divisor,c
 14432  00300A  5036               	movf	i2scale@scl,w,c
 14433  00300C  6E07               	movwf	i2___awdiv@dividend,c
 14434  00300E  6A08               	clrf	i2___awdiv@dividend+1,c
 14435  003010  BE07               	btfsc	i2___awdiv@dividend,7,c
 14436  003012  0608               	decf	i2___awdiv@dividend+1,f,c
 14437  003014  EC54  F029         	call	i2___awdiv	;wreg free
 14438  003018  0E12               	movlw	18
 14439  00301A  2407               	addwf	?i2___awdiv,w,c
 14440  00301C  6E0F               	movwf	i2___wmul@multiplier,c
 14441  00301E  0E00               	movlw	0
 14442  003020  2008               	addwfc	?i2___awdiv+1,w,c
 14443  003022  6E10               	movwf	i2___wmul@multiplier+1,c
 14444  003024  0E00               	movlw	0
 14445  003026  6E12               	movwf	i2___wmul@multiplicand+1,c
 14446  003028  0E03               	movlw	3
 14447  00302A  6E11               	movwf	i2___wmul@multiplicand,c
 14448  00302C  EC16  F02D         	call	i2___wmul	;wreg free
 14449  003030  0E29               	movlw	low __npowers_
 14450  003032  240F               	addwf	?i2___wmul,w,c
 14451  003034  6EF6               	movwf	tblptrl,c
 14452  003036  0E06               	movlw	high __npowers_
 14453  003038  2010               	addwfc	?i2___wmul+1,w,c
 14454  00303A  6EF7               	movwf	tblptrh,c
 14455  00303C                     	if	0	;There are less than 3 active tblptr bytes
 14456  00303C                     	endif
 14457  00303C  0009               	tblrd		*+
 14458  00303E  CFF5 F021          	movff	tablat,i2___ftmul@f1
 14459  003042  0009               	tblrd		*+
 14460  003044  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 14461  003048  000A               	tblrd		*-
 14462  00304A  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 14463  00304E  EC8F  F025         	call	i2___ftmul	;wreg free
 14464  003052  C021  F033         	movff	?i2___ftmul,i2_scale$1924
 14465  003056  C022  F034         	movff	?i2___ftmul+1,i2_scale$1924+1
 14466  00305A  C023  F035         	movff	?i2___ftmul+2,i2_scale$1924+2
 14467                           
 14468                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 14469  00305E  C033  F021         	movff	i2_scale$1924,i2___ftmul@f1
 14470  003062  C034  F022         	movff	i2_scale$1924+1,i2___ftmul@f1+1
 14471  003066  C035  F023         	movff	i2_scale$1924+2,i2___ftmul@f1+2
 14472  00306A  0E00               	movlw	0
 14473  00306C  6E12               	movwf	i2___wmul@multiplicand+1,c
 14474  00306E  0E03               	movlw	3
 14475  003070  6E11               	movwf	i2___wmul@multiplicand,c
 14476  003072  0E00               	movlw	0
 14477  003074  6E04               	movwf	i2___awmod@divisor+1,c
 14478  003076  0E0A               	movlw	10
 14479  003078  6E03               	movwf	i2___awmod@divisor,c
 14480  00307A  5036               	movf	i2scale@scl,w,c
 14481  00307C  6E01               	movwf	i2___awmod@dividend,c
 14482  00307E  6A02               	clrf	i2___awmod@dividend+1,c
 14483  003080  BE01               	btfsc	i2___awmod@dividend,7,c
 14484  003082  0602               	decf	i2___awmod@dividend+1,f,c
 14485  003084  EC52  F02A         	call	i2___awmod	;wreg free
 14486  003088  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 14487  00308C  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14488  003090  EC16  F02D         	call	i2___wmul	;wreg free
 14489  003094  0E29               	movlw	low __npowers_
 14490  003096  240F               	addwf	?i2___wmul,w,c
 14491  003098  6EF6               	movwf	tblptrl,c
 14492  00309A  0E06               	movlw	high __npowers_
 14493  00309C  2010               	addwfc	?i2___wmul+1,w,c
 14494  00309E  6EF7               	movwf	tblptrh,c
 14495  0030A0                     	if	0	;There are less than 3 active tblptr bytes
 14496  0030A0                     	endif
 14497  0030A0  0009               	tblrd		*+
 14498  0030A2  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14499  0030A6  0009               	tblrd		*+
 14500  0030A8  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14501  0030AC  000A               	tblrd		*-
 14502  0030AE  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14503  0030B2  EC8F  F025         	call	i2___ftmul	;wreg free
 14504  0030B6  C021  F030         	movff	?i2___ftmul,?i2_scale
 14505  0030BA  C022  F031         	movff	?i2___ftmul+1,?i2_scale+1
 14506  0030BE  C023  F032         	movff	?i2___ftmul+2,?i2_scale+2
 14507  0030C2  0012               	return	
 14508  0030C4                     i2l4123:
 14509                           
 14510                           ;doprnt.c: 432: else if(scl > 10)
 14511  0030C4  5036               	movf	i2scale@scl,w,c
 14512  0030C6  0A80               	xorlw	128
 14513  0030C8  0F75               	addlw	-139
 14514  0030CA  A0D8               	btfss	status,0,c
 14515  0030CC  D04D               	goto	i2l4129
 14516                           
 14517                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 14518  0030CE  0E00               	movlw	0
 14519  0030D0  6E0A               	movwf	i2___awdiv@divisor+1,c
 14520  0030D2  0E0A               	movlw	10
 14521  0030D4  6E09               	movwf	i2___awdiv@divisor,c
 14522  0030D6  5036               	movf	i2scale@scl,w,c
 14523  0030D8  6E07               	movwf	i2___awdiv@dividend,c
 14524  0030DA  6A08               	clrf	i2___awdiv@dividend+1,c
 14525  0030DC  BE07               	btfsc	i2___awdiv@dividend,7,c
 14526  0030DE  0608               	decf	i2___awdiv@dividend+1,f,c
 14527  0030E0  EC54  F029         	call	i2___awdiv	;wreg free
 14528  0030E4  0E09               	movlw	9
 14529  0030E6  2407               	addwf	?i2___awdiv,w,c
 14530  0030E8  6E0F               	movwf	i2___wmul@multiplier,c
 14531  0030EA  0E00               	movlw	0
 14532  0030EC  2008               	addwfc	?i2___awdiv+1,w,c
 14533  0030EE  6E10               	movwf	i2___wmul@multiplier+1,c
 14534  0030F0  0E00               	movlw	0
 14535  0030F2  6E12               	movwf	i2___wmul@multiplicand+1,c
 14536  0030F4  0E03               	movlw	3
 14537  0030F6  6E11               	movwf	i2___wmul@multiplicand,c
 14538  0030F8  EC16  F02D         	call	i2___wmul	;wreg free
 14539  0030FC  0E29               	movlw	low __npowers_
 14540  0030FE  240F               	addwf	?i2___wmul,w,c
 14541  003100  6EF6               	movwf	tblptrl,c
 14542  003102  0E06               	movlw	high __npowers_
 14543  003104  2010               	addwfc	?i2___wmul+1,w,c
 14544  003106  6EF7               	movwf	tblptrh,c
 14545  003108                     	if	0	;There are less than 3 active tblptr bytes
 14546  003108                     	endif
 14547  003108  0009               	tblrd		*+
 14548  00310A  CFF5 F021          	movff	tablat,i2___ftmul@f1
 14549  00310E  0009               	tblrd		*+
 14550  003110  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 14551  003114  000A               	tblrd		*-
 14552  003116  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 14553  00311A  0E00               	movlw	0
 14554  00311C  6E12               	movwf	i2___wmul@multiplicand+1,c
 14555  00311E  0E03               	movlw	3
 14556  003120  6E11               	movwf	i2___wmul@multiplicand,c
 14557  003122  0E00               	movlw	0
 14558  003124  6E04               	movwf	i2___awmod@divisor+1,c
 14559  003126  0E0A               	movlw	10
 14560  003128  6E03               	movwf	i2___awmod@divisor,c
 14561  00312A  5036               	movf	i2scale@scl,w,c
 14562  00312C  6E01               	movwf	i2___awmod@dividend,c
 14563  00312E  6A02               	clrf	i2___awmod@dividend+1,c
 14564  003130  BE01               	btfsc	i2___awmod@dividend,7,c
 14565  003132  0602               	decf	i2___awmod@dividend+1,f,c
 14566  003134  EC52  F02A         	call	i2___awmod	;wreg free
 14567  003138  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 14568  00313C  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14569  003140  EC16  F02D         	call	i2___wmul	;wreg free
 14570  003144  0E29               	movlw	low __npowers_
 14571  003146  240F               	addwf	?i2___wmul,w,c
 14572  003148  6EF6               	movwf	tblptrl,c
 14573  00314A  0E06               	movlw	high __npowers_
 14574  00314C  2010               	addwfc	?i2___wmul+1,w,c
 14575  00314E  6EF7               	movwf	tblptrh,c
 14576  003150                     	if	0	;There are less than 3 active tblptr bytes
 14577  003150                     	endif
 14578  003150  0009               	tblrd		*+
 14579  003152  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14580  003156  0009               	tblrd		*+
 14581  003158  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14582  00315C  000A               	tblrd		*-
 14583  00315E  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14584  003162  EC8F  F025         	call	i2___ftmul	;wreg free
 14585  003166  D7A7               	goto	L8
 14586  003168                     i2l4129:
 14587                           
 14588                           ;doprnt.c: 434: return _npowers_[scl];
 14589  003168  5036               	movf	i2scale@scl,w,c
 14590  00316A  0D03               	mullw	3
 14591  00316C  0E29               	movlw	low __npowers_
 14592  00316E  24F3               	addwf	prodl,w,c
 14593  003170  6EF6               	movwf	tblptrl,c
 14594  003172  0E06               	movlw	high __npowers_
 14595  003174  20F4               	addwfc	prodh,w,c
 14596  003176  6EF7               	movwf	tblptrh,c
 14597  003178                     	if	0	;There are less than 3 active tblptr bytes
 14598  003178                     	endif
 14599  003178  0009               	tblrd		*+
 14600  00317A  CFF5 F030          	movff	tablat,?i2_scale
 14601  00317E  0009               	tblrd		*+
 14602  003180  CFF5 F031          	movff	tablat,?i2_scale+1
 14603  003184  000A               	tblrd		*-
 14604  003186  CFF5 F032          	movff	tablat,?i2_scale+2
 14605  00318A  0012               	return	
 14606  00318C                     i2l4133:
 14607                           
 14608                           ;doprnt.c: 435: }
 14609                           ;doprnt.c: 436: if(scl>=110)
 14610  00318C  5036               	movf	i2scale@scl,w,c
 14611  00318E  0A80               	xorlw	128
 14612  003190  0F12               	addlw	-238
 14613  003192  A0D8               	btfss	status,0,c
 14614  003194  D091               	goto	i2l4141
 14615                           
 14616                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 14617  003196  0E00               	movlw	0
 14618  003198  6E12               	movwf	i2___wmul@multiplicand+1,c
 14619  00319A  0E03               	movlw	3
 14620  00319C  6E11               	movwf	i2___wmul@multiplicand,c
 14621  00319E  0E00               	movlw	0
 14622  0031A0  6E0A               	movwf	i2___awdiv@divisor+1,c
 14623  0031A2  0E0A               	movlw	10
 14624  0031A4  6E09               	movwf	i2___awdiv@divisor,c
 14625  0031A6  0E00               	movlw	0
 14626  0031A8  6E04               	movwf	i2___awmod@divisor+1,c
 14627  0031AA  0E64               	movlw	100
 14628  0031AC  6E03               	movwf	i2___awmod@divisor,c
 14629  0031AE  5036               	movf	i2scale@scl,w,c
 14630  0031B0  6E01               	movwf	i2___awmod@dividend,c
 14631  0031B2  6A02               	clrf	i2___awmod@dividend+1,c
 14632  0031B4  BE01               	btfsc	i2___awmod@dividend,7,c
 14633  0031B6  0602               	decf	i2___awmod@dividend+1,f,c
 14634  0031B8  EC52  F02A         	call	i2___awmod	;wreg free
 14635  0031BC  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 14636  0031C0  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 14637  0031C4  EC54  F029         	call	i2___awdiv	;wreg free
 14638  0031C8  0E09               	movlw	9
 14639  0031CA  2407               	addwf	?i2___awdiv,w,c
 14640  0031CC  6E0F               	movwf	i2___wmul@multiplier,c
 14641  0031CE  0E00               	movlw	0
 14642  0031D0  2008               	addwfc	?i2___awdiv+1,w,c
 14643  0031D2  6E10               	movwf	i2___wmul@multiplier+1,c
 14644  0031D4  EC16  F02D         	call	i2___wmul	;wreg free
 14645  0031D8  0E50               	movlw	low __powers_
 14646  0031DA  240F               	addwf	?i2___wmul,w,c
 14647  0031DC  6EF6               	movwf	tblptrl,c
 14648  0031DE  0E06               	movlw	high __powers_
 14649  0031E0  2010               	addwfc	?i2___wmul+1,w,c
 14650  0031E2  6EF7               	movwf	tblptrh,c
 14651  0031E4                     	if	0	;There are less than 3 active tblptr bytes
 14652  0031E4                     	endif
 14653  0031E4  0009               	tblrd		*+
 14654  0031E6  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14655  0031EA  0009               	tblrd		*+
 14656  0031EC  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14657  0031F0  000A               	tblrd		*-
 14658  0031F2  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14659  0031F6  0E00               	movlw	0
 14660  0031F8  6E0A               	movwf	i2___awdiv@divisor+1,c
 14661  0031FA  0E64               	movlw	100
 14662  0031FC  6E09               	movwf	i2___awdiv@divisor,c
 14663  0031FE  5036               	movf	i2scale@scl,w,c
 14664  003200  6E07               	movwf	i2___awdiv@dividend,c
 14665  003202  6A08               	clrf	i2___awdiv@dividend+1,c
 14666  003204  BE07               	btfsc	i2___awdiv@dividend,7,c
 14667  003206  0608               	decf	i2___awdiv@dividend+1,f,c
 14668  003208  EC54  F029         	call	i2___awdiv	;wreg free
 14669  00320C  0E12               	movlw	18
 14670  00320E  2407               	addwf	?i2___awdiv,w,c
 14671  003210  6E0F               	movwf	i2___wmul@multiplier,c
 14672  003212  0E00               	movlw	0
 14673  003214  2008               	addwfc	?i2___awdiv+1,w,c
 14674  003216  6E10               	movwf	i2___wmul@multiplier+1,c
 14675  003218  0E00               	movlw	0
 14676  00321A  6E12               	movwf	i2___wmul@multiplicand+1,c
 14677  00321C  0E03               	movlw	3
 14678  00321E  6E11               	movwf	i2___wmul@multiplicand,c
 14679  003220  EC16  F02D         	call	i2___wmul	;wreg free
 14680  003224  0E50               	movlw	low __powers_
 14681  003226  240F               	addwf	?i2___wmul,w,c
 14682  003228  6EF6               	movwf	tblptrl,c
 14683  00322A  0E06               	movlw	high __powers_
 14684  00322C  2010               	addwfc	?i2___wmul+1,w,c
 14685  00322E  6EF7               	movwf	tblptrh,c
 14686  003230                     	if	0	;There are less than 3 active tblptr bytes
 14687  003230                     	endif
 14688  003230  0009               	tblrd		*+
 14689  003232  CFF5 F021          	movff	tablat,i2___ftmul@f1
 14690  003236  0009               	tblrd		*+
 14691  003238  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 14692  00323C  000A               	tblrd		*-
 14693  00323E  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 14694  003242  EC8F  F025         	call	i2___ftmul	;wreg free
 14695  003246  C021  F033         	movff	?i2___ftmul,i2_scale$1924
 14696  00324A  C022  F034         	movff	?i2___ftmul+1,i2_scale$1924+1
 14697  00324E  C023  F035         	movff	?i2___ftmul+2,i2_scale$1924+2
 14698                           
 14699                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 14700  003252  C033  F021         	movff	i2_scale$1924,i2___ftmul@f1
 14701  003256  C034  F022         	movff	i2_scale$1924+1,i2___ftmul@f1+1
 14702  00325A  C035  F023         	movff	i2_scale$1924+2,i2___ftmul@f1+2
 14703  00325E  0E00               	movlw	0
 14704  003260  6E12               	movwf	i2___wmul@multiplicand+1,c
 14705  003262  0E03               	movlw	3
 14706  003264  6E11               	movwf	i2___wmul@multiplicand,c
 14707  003266  0E00               	movlw	0
 14708  003268  6E04               	movwf	i2___awmod@divisor+1,c
 14709  00326A  0E0A               	movlw	10
 14710  00326C  6E03               	movwf	i2___awmod@divisor,c
 14711  00326E  5036               	movf	i2scale@scl,w,c
 14712  003270  6E01               	movwf	i2___awmod@dividend,c
 14713  003272  6A02               	clrf	i2___awmod@dividend+1,c
 14714  003274  BE01               	btfsc	i2___awmod@dividend,7,c
 14715  003276  0602               	decf	i2___awmod@dividend+1,f,c
 14716  003278  EC52  F02A         	call	i2___awmod	;wreg free
 14717  00327C  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 14718  003280  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14719  003284  EC16  F02D         	call	i2___wmul	;wreg free
 14720  003288  0E50               	movlw	low __powers_
 14721  00328A  240F               	addwf	?i2___wmul,w,c
 14722  00328C  6EF6               	movwf	tblptrl,c
 14723  00328E  0E06               	movlw	high __powers_
 14724  003290  2010               	addwfc	?i2___wmul+1,w,c
 14725  003292  6EF7               	movwf	tblptrh,c
 14726  003294                     	if	0	;There are less than 3 active tblptr bytes
 14727  003294                     	endif
 14728  003294  0009               	tblrd		*+
 14729  003296  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14730  00329A  0009               	tblrd		*+
 14731  00329C  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14732  0032A0  000A               	tblrd		*-
 14733  0032A2  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14734  0032A6  EC8F  F025         	call	i2___ftmul	;wreg free
 14735  0032AA  C021  F030         	movff	?i2___ftmul,?i2_scale
 14736  0032AE  C022  F031         	movff	?i2___ftmul+1,?i2_scale+1
 14737  0032B2  C023  F032         	movff	?i2___ftmul+2,?i2_scale+2
 14738  0032B6  0012               	return	
 14739  0032B8                     i2l4141:
 14740                           
 14741                           ;doprnt.c: 438: else if(scl > 10)
 14742  0032B8  5036               	movf	i2scale@scl,w,c
 14743  0032BA  0A80               	xorlw	128
 14744  0032BC  0F75               	addlw	-139
 14745  0032BE  A0D8               	btfss	status,0,c
 14746  0032C0  D04D               	goto	i2l4147
 14747                           
 14748                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 14749  0032C2  0E00               	movlw	0
 14750  0032C4  6E0A               	movwf	i2___awdiv@divisor+1,c
 14751  0032C6  0E0A               	movlw	10
 14752  0032C8  6E09               	movwf	i2___awdiv@divisor,c
 14753  0032CA  5036               	movf	i2scale@scl,w,c
 14754  0032CC  6E07               	movwf	i2___awdiv@dividend,c
 14755  0032CE  6A08               	clrf	i2___awdiv@dividend+1,c
 14756  0032D0  BE07               	btfsc	i2___awdiv@dividend,7,c
 14757  0032D2  0608               	decf	i2___awdiv@dividend+1,f,c
 14758  0032D4  EC54  F029         	call	i2___awdiv	;wreg free
 14759  0032D8  0E09               	movlw	9
 14760  0032DA  2407               	addwf	?i2___awdiv,w,c
 14761  0032DC  6E0F               	movwf	i2___wmul@multiplier,c
 14762  0032DE  0E00               	movlw	0
 14763  0032E0  2008               	addwfc	?i2___awdiv+1,w,c
 14764  0032E2  6E10               	movwf	i2___wmul@multiplier+1,c
 14765  0032E4  0E00               	movlw	0
 14766  0032E6  6E12               	movwf	i2___wmul@multiplicand+1,c
 14767  0032E8  0E03               	movlw	3
 14768  0032EA  6E11               	movwf	i2___wmul@multiplicand,c
 14769  0032EC  EC16  F02D         	call	i2___wmul	;wreg free
 14770  0032F0  0E50               	movlw	low __powers_
 14771  0032F2  240F               	addwf	?i2___wmul,w,c
 14772  0032F4  6EF6               	movwf	tblptrl,c
 14773  0032F6  0E06               	movlw	high __powers_
 14774  0032F8  2010               	addwfc	?i2___wmul+1,w,c
 14775  0032FA  6EF7               	movwf	tblptrh,c
 14776  0032FC                     	if	0	;There are less than 3 active tblptr bytes
 14777  0032FC                     	endif
 14778  0032FC  0009               	tblrd		*+
 14779  0032FE  CFF5 F021          	movff	tablat,i2___ftmul@f1
 14780  003302  0009               	tblrd		*+
 14781  003304  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 14782  003308  000A               	tblrd		*-
 14783  00330A  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 14784  00330E  0E00               	movlw	0
 14785  003310  6E12               	movwf	i2___wmul@multiplicand+1,c
 14786  003312  0E03               	movlw	3
 14787  003314  6E11               	movwf	i2___wmul@multiplicand,c
 14788  003316  0E00               	movlw	0
 14789  003318  6E04               	movwf	i2___awmod@divisor+1,c
 14790  00331A  0E0A               	movlw	10
 14791  00331C  6E03               	movwf	i2___awmod@divisor,c
 14792  00331E  5036               	movf	i2scale@scl,w,c
 14793  003320  6E01               	movwf	i2___awmod@dividend,c
 14794  003322  6A02               	clrf	i2___awmod@dividend+1,c
 14795  003324  BE01               	btfsc	i2___awmod@dividend,7,c
 14796  003326  0602               	decf	i2___awmod@dividend+1,f,c
 14797  003328  EC52  F02A         	call	i2___awmod	;wreg free
 14798  00332C  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 14799  003330  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14800  003334  EC16  F02D         	call	i2___wmul	;wreg free
 14801  003338  0E50               	movlw	low __powers_
 14802  00333A  240F               	addwf	?i2___wmul,w,c
 14803  00333C  6EF6               	movwf	tblptrl,c
 14804  00333E  0E06               	movlw	high __powers_
 14805  003340  2010               	addwfc	?i2___wmul+1,w,c
 14806  003342  6EF7               	movwf	tblptrh,c
 14807  003344                     	if	0	;There are less than 3 active tblptr bytes
 14808  003344                     	endif
 14809  003344  0009               	tblrd		*+
 14810  003346  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14811  00334A  0009               	tblrd		*+
 14812  00334C  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14813  003350  000A               	tblrd		*-
 14814  003352  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14815  003356  EC8F  F025         	call	i2___ftmul	;wreg free
 14816  00335A  D7A7               	goto	L9
 14817  00335C                     i2l4147:
 14818                           
 14819                           ;doprnt.c: 440: return _powers_[scl];
 14820  00335C  5036               	movf	i2scale@scl,w,c
 14821  00335E  0D03               	mullw	3
 14822  003360  0E50               	movlw	low __powers_
 14823  003362  24F3               	addwf	prodl,w,c
 14824  003364  6EF6               	movwf	tblptrl,c
 14825  003366  0E06               	movlw	high __powers_
 14826  003368  20F4               	addwfc	prodh,w,c
 14827  00336A  6EF7               	movwf	tblptrh,c
 14828  00336C                     	if	0	;There are less than 3 active tblptr bytes
 14829  00336C                     	endif
 14830  00336C  0009               	tblrd		*+
 14831  00336E  CFF5 F030          	movff	tablat,?i2_scale
 14832  003372  0009               	tblrd		*+
 14833  003374  CFF5 F031          	movff	tablat,?i2_scale+1
 14834  003378  000A               	tblrd		*-
 14835  00337A  CFF5 F032          	movff	tablat,?i2_scale+2
 14836  00337E  0012               	return	
 14837  003380                     __end_ofi2_scale:
 14838                           	opt stack 0
 14839                           tosu	equ	0xFFF
 14840                           tosh	equ	0xFFE
 14841                           tosl	equ	0xFFD
 14842                           pclatu	equ	0xFFB
 14843                           pclath	equ	0xFFA
 14844                           tblptru	equ	0xFF8
 14845                           tblptrh	equ	0xFF7
 14846                           tblptrl	equ	0xFF6
 14847                           tablat	equ	0xFF5
 14848                           prodh	equ	0xFF4
 14849                           prodl	equ	0xFF3
 14850                           intcon	equ	0xFF2
 14851                           intcon2	equ	0xFF1
 14852                           intcon3	equ	0xFF0
 14853                           postinc0	equ	0xFEE
 14854                           fsr0h	equ	0xFEA
 14855                           fsr0l	equ	0xFE9
 14856                           wreg	equ	0xFE8
 14857                           postdec1	equ	0xFE5
 14858                           fsr1h	equ	0xFE2
 14859                           fsr1l	equ	0xFE1
 14860                           indf2	equ	0xFDF
 14861                           postinc2	equ	0xFDE
 14862                           postdec2	equ	0xFDD
 14863                           fsr2h	equ	0xFDA
 14864                           fsr2l	equ	0xFD9
 14865                           status	equ	0xFD8
 14866                           
 14867 ;; *************** function i2_putch *****************
 14868 ;; Defined at:
 14869 ;;		line 111 in file "mcc_generated_files/eusart1.c"
 14870 ;; Parameters:    Size  Location     Type
 14871 ;;  txData          1    wreg     unsigned char 
 14872 ;; Auto vars:     Size  Location     Type
 14873 ;;  txData          1    1[COMRAM] unsigned char 
 14874 ;; Return value:  Size  Location     Type
 14875 ;;                  1    wreg      void 
 14876 ;; Registers used:
 14877 ;;		wreg, status,2, cstack
 14878 ;; Tracked objects:
 14879 ;;		On entry : 0/0
 14880 ;;		On exit  : 0/0
 14881 ;;		Unchanged: 0/0
 14882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14883 ;;      Params:         0       0       0       0       0       0       0
 14884 ;;      Locals:         1       0       0       0       0       0       0
 14885 ;;      Temps:          0       0       0       0       0       0       0
 14886 ;;      Totals:         1       0       0       0       0       0       0
 14887 ;;Total ram usage:        1 bytes
 14888 ;; Hardware stack levels used:    1
 14889 ;; Hardware stack levels required when called:    1
 14890 ;; This function calls:
 14891 ;;		i2_EUSART1_Write
 14892 ;; This function is called by:
 14893 ;;		_printf
 14894 ;; This function uses a non-reentrant model
 14895 ;;
 14896                           
 14897                           	psect	text49
 14898  005B4A                     __ptext49:
 14899                           	opt stack 0
 14900  005B4A                     i2_putch:
 14901                           	opt stack 20
 14902                           
 14903                           ;incstack = 0
 14904                           ;i2putch@txData stored from wreg
 14905  005B4A  6E02               	movwf	i2putch@txData,c
 14906                           
 14907                           ;eusart1.c: 113: EUSART1_Write(txData);
 14908  005B4C  5002               	movf	i2putch@txData,w,c
 14909  005B4E  EC9A  F02D         	call	i2_EUSART1_Write
 14910  005B52  0012               	return		;funcret
 14911  005B54                     __end_ofi2_putch:
 14912                           	opt stack 0
 14913                           tosu	equ	0xFFF
 14914                           tosh	equ	0xFFE
 14915                           tosl	equ	0xFFD
 14916                           pclatu	equ	0xFFB
 14917                           pclath	equ	0xFFA
 14918                           tblptru	equ	0xFF8
 14919                           tblptrh	equ	0xFF7
 14920                           tblptrl	equ	0xFF6
 14921                           tablat	equ	0xFF5
 14922                           prodh	equ	0xFF4
 14923                           prodl	equ	0xFF3
 14924                           intcon	equ	0xFF2
 14925                           intcon2	equ	0xFF1
 14926                           intcon3	equ	0xFF0
 14927                           postinc0	equ	0xFEE
 14928                           fsr0h	equ	0xFEA
 14929                           fsr0l	equ	0xFE9
 14930                           wreg	equ	0xFE8
 14931                           postdec1	equ	0xFE5
 14932                           fsr1h	equ	0xFE2
 14933                           fsr1l	equ	0xFE1
 14934                           indf2	equ	0xFDF
 14935                           postinc2	equ	0xFDE
 14936                           postdec2	equ	0xFDD
 14937                           fsr2h	equ	0xFDA
 14938                           fsr2l	equ	0xFD9
 14939                           status	equ	0xFD8
 14940                           
 14941 ;; *************** function i2_EUSART1_Write *****************
 14942 ;; Defined at:
 14943 ;;		line 97 in file "mcc_generated_files/eusart1.c"
 14944 ;; Parameters:    Size  Location     Type
 14945 ;;  txData          1    wreg     unsigned char 
 14946 ;; Auto vars:     Size  Location     Type
 14947 ;;  txData          1    0[COMRAM] unsigned char 
 14948 ;; Return value:  Size  Location     Type
 14949 ;;                  1    wreg      void 
 14950 ;; Registers used:
 14951 ;;		wreg
 14952 ;; Tracked objects:
 14953 ;;		On entry : 0/0
 14954 ;;		On exit  : 0/0
 14955 ;;		Unchanged: 0/0
 14956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14957 ;;      Params:         0       0       0       0       0       0       0
 14958 ;;      Locals:         1       0       0       0       0       0       0
 14959 ;;      Temps:          0       0       0       0       0       0       0
 14960 ;;      Totals:         1       0       0       0       0       0       0
 14961 ;;Total ram usage:        1 bytes
 14962 ;; Hardware stack levels used:    1
 14963 ;; This function calls:
 14964 ;;		Nothing
 14965 ;; This function is called by:
 14966 ;;		i2_putch
 14967 ;; This function uses a non-reentrant model
 14968 ;;
 14969                           
 14970                           	psect	text50
 14971  005B34                     __ptext50:
 14972                           	opt stack 0
 14973  005B34                     i2_EUSART1_Write:
 14974                           	opt stack 20
 14975                           
 14976                           ;incstack = 0
 14977                           ;i2EUSART1_Write@txData stored from wreg
 14978  005B34  6E01               	movwf	i2EUSART1_Write@txData,c
 14979  005B36                     i2l227:
 14980  005B36  A89E               	btfss	3998,4,c	;volatile
 14981  005B38  D7FE               	goto	i2l227
 14982                           
 14983                           ;eusart1.c: 101: }
 14984                           ;eusart1.c: 103: TXREG1 = txData;
 14985  005B3A  C001  FFAD         	movff	i2EUSART1_Write@txData,4013	;volatile
 14986  005B3E  0012               	return		;funcret
 14987  005B40                     __end_ofi2_EUSART1_Write:
 14988                           	opt stack 0
 14989                           tosu	equ	0xFFF
 14990                           tosh	equ	0xFFE
 14991                           tosl	equ	0xFFD
 14992                           pclatu	equ	0xFFB
 14993                           pclath	equ	0xFFA
 14994                           tblptru	equ	0xFF8
 14995                           tblptrh	equ	0xFF7
 14996                           tblptrl	equ	0xFF6
 14997                           tablat	equ	0xFF5
 14998                           prodh	equ	0xFF4
 14999                           prodl	equ	0xFF3
 15000                           intcon	equ	0xFF2
 15001                           intcon2	equ	0xFF1
 15002                           intcon3	equ	0xFF0
 15003                           postinc0	equ	0xFEE
 15004                           fsr0h	equ	0xFEA
 15005                           fsr0l	equ	0xFE9
 15006                           wreg	equ	0xFE8
 15007                           postdec1	equ	0xFE5
 15008                           fsr1h	equ	0xFE2
 15009                           fsr1l	equ	0xFE1
 15010                           indf2	equ	0xFDF
 15011                           postinc2	equ	0xFDE
 15012                           postdec2	equ	0xFDD
 15013                           fsr2h	equ	0xFDA
 15014                           fsr2l	equ	0xFD9
 15015                           status	equ	0xFD8
 15016                           
 15017 ;; *************** function i2_isdigit *****************
 15018 ;; Defined at:
 15019 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
 15020 ;; Parameters:    Size  Location     Type
 15021 ;;  c               1    wreg     unsigned char 
 15022 ;; Auto vars:     Size  Location     Type
 15023 ;;  c               1    2[COMRAM] unsigned char 
 15024 ;; Return value:  Size  Location     Type
 15025 ;;		None               void
 15026 ;; Registers used:
 15027 ;;		wreg, status,2, status,0
 15028 ;; Tracked objects:
 15029 ;;		On entry : 0/0
 15030 ;;		On exit  : 0/0
 15031 ;;		Unchanged: 0/0
 15032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15033 ;;      Params:         0       0       0       0       0       0       0
 15034 ;;      Locals:         2       0       0       0       0       0       0
 15035 ;;      Temps:          1       0       0       0       0       0       0
 15036 ;;      Totals:         3       0       0       0       0       0       0
 15037 ;;Total ram usage:        3 bytes
 15038 ;; Hardware stack levels used:    1
 15039 ;; This function calls:
 15040 ;;		Nothing
 15041 ;; This function is called by:
 15042 ;;		i2__doprnt
 15043 ;; This function uses a non-reentrant model
 15044 ;;
 15045                           
 15046                           	psect	text51
 15047  005A9A                     __ptext51:
 15048                           	opt stack 0
 15049  005A9A                     i2_isdigit:
 15050                           	opt stack 21
 15051                           
 15052                           ;incstack = 0
 15053                           ;i2isdigit@c stored from wreg
 15054  005A9A  6E03               	movwf	i2isdigit@c,c
 15055  005A9C  0E00               	movlw	0
 15056  005A9E  6E02               	movwf	i2_isdigit$1289,c
 15057  005AA0  0E3A               	movlw	58
 15058  005AA2  6003               	cpfslt	i2isdigit@c,c
 15059  005AA4  D005               	goto	i2l4351
 15060  005AA6  0E2F               	movlw	47
 15061  005AA8  6403               	cpfsgt	i2isdigit@c,c
 15062  005AAA  D002               	goto	i2l4351
 15063  005AAC  0E01               	movlw	1
 15064  005AAE  6E02               	movwf	i2_isdigit$1289,c
 15065  005AB0                     i2l4351:
 15066  005AB0  C002  F001         	movff	i2_isdigit$1289,??i2_isdigit
 15067  005AB4  3001               	rrcf	??i2_isdigit,w,c
 15068  005AB6  0012               	return	
 15069  005AB8                     __end_ofi2_isdigit:
 15070                           	opt stack 0
 15071                           tosu	equ	0xFFF
 15072                           tosh	equ	0xFFE
 15073                           tosl	equ	0xFFD
 15074                           pclatu	equ	0xFFB
 15075                           pclath	equ	0xFFA
 15076                           tblptru	equ	0xFF8
 15077                           tblptrh	equ	0xFF7
 15078                           tblptrl	equ	0xFF6
 15079                           tablat	equ	0xFF5
 15080                           prodh	equ	0xFF4
 15081                           prodl	equ	0xFF3
 15082                           intcon	equ	0xFF2
 15083                           intcon2	equ	0xFF1
 15084                           intcon3	equ	0xFF0
 15085                           postinc0	equ	0xFEE
 15086                           fsr0h	equ	0xFEA
 15087                           fsr0l	equ	0xFE9
 15088                           wreg	equ	0xFE8
 15089                           postdec1	equ	0xFE5
 15090                           fsr1h	equ	0xFE2
 15091                           fsr1l	equ	0xFE1
 15092                           indf2	equ	0xFDF
 15093                           postinc2	equ	0xFDE
 15094                           postdec2	equ	0xFDD
 15095                           fsr2h	equ	0xFDA
 15096                           fsr2l	equ	0xFD9
 15097                           status	equ	0xFD8
 15098                           
 15099 ;; *************** function i2_fround *****************
 15100 ;; Defined at:
 15101 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 15102 ;; Parameters:    Size  Location     Type
 15103 ;;  prec            1    wreg     unsigned char 
 15104 ;; Auto vars:     Size  Location     Type
 15105 ;;  prec            1   56[COMRAM] unsigned char 
 15106 ;; Return value:  Size  Location     Type
 15107 ;;                  3   47[COMRAM] unsigned char 
 15108 ;; Registers used:
 15109 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15110 ;; Tracked objects:
 15111 ;;		On entry : 0/0
 15112 ;;		On exit  : 0/0
 15113 ;;		Unchanged: 0/0
 15114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15115 ;;      Params:         3       0       0       0       0       0       0
 15116 ;;      Locals:         7       0       0       0       0       0       0
 15117 ;;      Temps:          0       0       0       0       0       0       0
 15118 ;;      Totals:        10       0       0       0       0       0       0
 15119 ;;Total ram usage:       10 bytes
 15120 ;; Hardware stack levels used:    1
 15121 ;; Hardware stack levels required when called:    2
 15122 ;; This function calls:
 15123 ;;		i2___awdiv
 15124 ;;		i2___awmod
 15125 ;;		i2___ftmul
 15126 ;;		i2___wmul
 15127 ;; This function is called by:
 15128 ;;		i2__doprnt
 15129 ;; This function uses a non-reentrant model
 15130 ;;
 15131                           
 15132                           	psect	text52
 15133  003894                     __ptext52:
 15134                           	opt stack 0
 15135  003894                     i2_fround:
 15136                           	opt stack 19
 15137                           
 15138                           ;incstack = 0
 15139                           ;i2fround@prec stored from wreg
 15140  003894  6E39               	movwf	i2fround@prec,c
 15141                           
 15142                           ;doprnt.c: 413: if(prec>=110)
 15143  003896  0E6D               	movlw	109
 15144  003898  6439               	cpfsgt	i2fround@prec,c
 15145  00389A  D09F               	goto	i2l4101
 15146                           
 15147                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15148  00389C  0E00               	movlw	0
 15149  00389E  6E12               	movwf	i2___wmul@multiplicand+1,c
 15150  0038A0  0E03               	movlw	3
 15151  0038A2  6E11               	movwf	i2___wmul@multiplicand,c
 15152  0038A4  0E00               	movlw	0
 15153  0038A6  6E0A               	movwf	i2___awdiv@divisor+1,c
 15154  0038A8  0E0A               	movlw	10
 15155  0038AA  6E09               	movwf	i2___awdiv@divisor,c
 15156  0038AC  0E00               	movlw	0
 15157  0038AE  6E04               	movwf	i2___awmod@divisor+1,c
 15158  0038B0  0E64               	movlw	100
 15159  0038B2  6E03               	movwf	i2___awmod@divisor,c
 15160  0038B4  C039  F001         	movff	i2fround@prec,i2___awmod@dividend
 15161  0038B8  6A02               	clrf	i2___awmod@dividend+1,c
 15162  0038BA  EC52  F02A         	call	i2___awmod	;wreg free
 15163  0038BE  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 15164  0038C2  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 15165  0038C6  EC54  F029         	call	i2___awdiv	;wreg free
 15166  0038CA  0E09               	movlw	9
 15167  0038CC  2407               	addwf	?i2___awdiv,w,c
 15168  0038CE  6E0F               	movwf	i2___wmul@multiplier,c
 15169  0038D0  0E00               	movlw	0
 15170  0038D2  2008               	addwfc	?i2___awdiv+1,w,c
 15171  0038D4  6E10               	movwf	i2___wmul@multiplier+1,c
 15172  0038D6  EC16  F02D         	call	i2___wmul	;wreg free
 15173  0038DA  0E29               	movlw	low __npowers_
 15174  0038DC  240F               	addwf	?i2___wmul,w,c
 15175  0038DE  6EF6               	movwf	tblptrl,c
 15176  0038E0  0E06               	movlw	high __npowers_
 15177  0038E2  2010               	addwfc	?i2___wmul+1,w,c
 15178  0038E4  6EF7               	movwf	tblptrh,c
 15179  0038E6                     	if	0	;There are less than 3 active tblptr bytes
 15180  0038E6                     	endif
 15181  0038E6  0009               	tblrd		*+
 15182  0038E8  CFF5 F024          	movff	tablat,i2___ftmul@f2
 15183  0038EC  0009               	tblrd		*+
 15184  0038EE  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 15185  0038F2  000A               	tblrd		*-
 15186  0038F4  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 15187  0038F8  0E00               	movlw	0
 15188  0038FA  6E0A               	movwf	i2___awdiv@divisor+1,c
 15189  0038FC  0E64               	movlw	100
 15190  0038FE  6E09               	movwf	i2___awdiv@divisor,c
 15191  003900  C039  F007         	movff	i2fround@prec,i2___awdiv@dividend
 15192  003904  6A08               	clrf	i2___awdiv@dividend+1,c
 15193  003906  EC54  F029         	call	i2___awdiv	;wreg free
 15194  00390A  0E12               	movlw	18
 15195  00390C  2407               	addwf	?i2___awdiv,w,c
 15196  00390E  6E0F               	movwf	i2___wmul@multiplier,c
 15197  003910  0E00               	movlw	0
 15198  003912  2008               	addwfc	?i2___awdiv+1,w,c
 15199  003914  6E10               	movwf	i2___wmul@multiplier+1,c
 15200  003916  0E00               	movlw	0
 15201  003918  6E12               	movwf	i2___wmul@multiplicand+1,c
 15202  00391A  0E03               	movlw	3
 15203  00391C  6E11               	movwf	i2___wmul@multiplicand,c
 15204  00391E  EC16  F02D         	call	i2___wmul	;wreg free
 15205  003922  0E29               	movlw	low __npowers_
 15206  003924  240F               	addwf	?i2___wmul,w,c
 15207  003926  6EF6               	movwf	tblptrl,c
 15208  003928  0E06               	movlw	high __npowers_
 15209  00392A  2010               	addwfc	?i2___wmul+1,w,c
 15210  00392C  6EF7               	movwf	tblptrh,c
 15211  00392E                     	if	0	;There are less than 3 active tblptr bytes
 15212  00392E                     	endif
 15213  00392E  0009               	tblrd		*+
 15214  003930  CFF5 F021          	movff	tablat,i2___ftmul@f1
 15215  003934  0009               	tblrd		*+
 15216  003936  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 15217  00393A  000A               	tblrd		*-
 15218  00393C  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 15219  003940  EC8F  F025         	call	i2___ftmul	;wreg free
 15220  003944  C021  F036         	movff	?i2___ftmul,i2_fround$1922
 15221  003948  C022  F037         	movff	?i2___ftmul+1,i2_fround$1922+1
 15222  00394C  C023  F038         	movff	?i2___ftmul+2,i2_fround$1922+2
 15223                           
 15224                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15225  003950  0E00               	movlw	0
 15226  003952  6E12               	movwf	i2___wmul@multiplicand+1,c
 15227  003954  0E03               	movlw	3
 15228  003956  6E11               	movwf	i2___wmul@multiplicand,c
 15229  003958  0E00               	movlw	0
 15230  00395A  6E04               	movwf	i2___awmod@divisor+1,c
 15231  00395C  0E0A               	movlw	10
 15232  00395E  6E03               	movwf	i2___awmod@divisor,c
 15233  003960  C039  F001         	movff	i2fround@prec,i2___awmod@dividend
 15234  003964  6A02               	clrf	i2___awmod@dividend+1,c
 15235  003966  EC52  F02A         	call	i2___awmod	;wreg free
 15236  00396A  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 15237  00396E  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15238  003972  EC16  F02D         	call	i2___wmul	;wreg free
 15239  003976  0E29               	movlw	low __npowers_
 15240  003978  240F               	addwf	?i2___wmul,w,c
 15241  00397A  6EF6               	movwf	tblptrl,c
 15242  00397C  0E06               	movlw	high __npowers_
 15243  00397E  2010               	addwfc	?i2___wmul+1,w,c
 15244  003980  6EF7               	movwf	tblptrh,c
 15245  003982                     	if	0	;There are less than 3 active tblptr bytes
 15246  003982                     	endif
 15247  003982  0009               	tblrd		*+
 15248  003984  CFF5 F024          	movff	tablat,i2___ftmul@f2
 15249  003988  0009               	tblrd		*+
 15250  00398A  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 15251  00398E  000A               	tblrd		*-
 15252  003990  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 15253  003994  C036  F021         	movff	i2_fround$1922,i2___ftmul@f1
 15254  003998  C037  F022         	movff	i2_fround$1922+1,i2___ftmul@f1+1
 15255  00399C  C038  F023         	movff	i2_fround$1922+2,i2___ftmul@f1+2
 15256  0039A0  EC8F  F025         	call	i2___ftmul	;wreg free
 15257  0039A4  C021  F033         	movff	?i2___ftmul,i2_fround$1923
 15258  0039A8  C022  F034         	movff	?i2___ftmul+1,i2_fround$1923+1
 15259  0039AC  C023  F035         	movff	?i2___ftmul+2,i2_fround$1923+2
 15260                           
 15261                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15262  0039B0  C033  F021         	movff	i2_fround$1923,i2___ftmul@f1
 15263  0039B4  C034  F022         	movff	i2_fround$1923+1,i2___ftmul@f1+1
 15264  0039B8  C035  F023         	movff	i2_fround$1923+2,i2___ftmul@f1+2
 15265  0039BC  0E00               	movlw	0
 15266  0039BE  6E24               	movwf	i2___ftmul@f2,c
 15267  0039C0  0E00               	movlw	0
 15268  0039C2  6E25               	movwf	i2___ftmul@f2+1,c
 15269  0039C4  0E3F               	movlw	63
 15270  0039C6  6E26               	movwf	i2___ftmul@f2+2,c
 15271  0039C8  EC8F  F025         	call	i2___ftmul	;wreg free
 15272  0039CC  C021  F030         	movff	?i2___ftmul,?i2_fround
 15273  0039D0  C022  F031         	movff	?i2___ftmul+1,?i2_fround+1
 15274  0039D4  C023  F032         	movff	?i2___ftmul+2,?i2_fround+2
 15275  0039D8  0012               	return	
 15276  0039DA                     i2l4101:
 15277                           
 15278                           ;doprnt.c: 415: else if(prec > 10)
 15279  0039DA  0E0A               	movlw	10
 15280  0039DC  6439               	cpfsgt	i2fround@prec,c
 15281  0039DE  D05D               	goto	i2l4109
 15282                           
 15283                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 15284  0039E0  0E00               	movlw	0
 15285  0039E2  6E12               	movwf	i2___wmul@multiplicand+1,c
 15286  0039E4  0E03               	movlw	3
 15287  0039E6  6E11               	movwf	i2___wmul@multiplicand,c
 15288  0039E8  0E00               	movlw	0
 15289  0039EA  6E04               	movwf	i2___awmod@divisor+1,c
 15290  0039EC  0E0A               	movlw	10
 15291  0039EE  6E03               	movwf	i2___awmod@divisor,c
 15292  0039F0  C039  F001         	movff	i2fround@prec,i2___awmod@dividend
 15293  0039F4  6A02               	clrf	i2___awmod@dividend+1,c
 15294  0039F6  EC52  F02A         	call	i2___awmod	;wreg free
 15295  0039FA  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 15296  0039FE  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15297  003A02  EC16  F02D         	call	i2___wmul	;wreg free
 15298  003A06  0E29               	movlw	low __npowers_
 15299  003A08  240F               	addwf	?i2___wmul,w,c
 15300  003A0A  6EF6               	movwf	tblptrl,c
 15301  003A0C  0E06               	movlw	high __npowers_
 15302  003A0E  2010               	addwfc	?i2___wmul+1,w,c
 15303  003A10  6EF7               	movwf	tblptrh,c
 15304  003A12                     	if	0	;There are less than 3 active tblptr bytes
 15305  003A12                     	endif
 15306  003A12  0009               	tblrd		*+
 15307  003A14  CFF5 F024          	movff	tablat,i2___ftmul@f2
 15308  003A18  0009               	tblrd		*+
 15309  003A1A  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 15310  003A1E  000A               	tblrd		*-
 15311  003A20  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 15312  003A24  0E00               	movlw	0
 15313  003A26  6E0A               	movwf	i2___awdiv@divisor+1,c
 15314  003A28  0E0A               	movlw	10
 15315  003A2A  6E09               	movwf	i2___awdiv@divisor,c
 15316  003A2C  C039  F007         	movff	i2fround@prec,i2___awdiv@dividend
 15317  003A30  6A08               	clrf	i2___awdiv@dividend+1,c
 15318  003A32  EC54  F029         	call	i2___awdiv	;wreg free
 15319  003A36  0E09               	movlw	9
 15320  003A38  2407               	addwf	?i2___awdiv,w,c
 15321  003A3A  6E0F               	movwf	i2___wmul@multiplier,c
 15322  003A3C  0E00               	movlw	0
 15323  003A3E  2008               	addwfc	?i2___awdiv+1,w,c
 15324  003A40  6E10               	movwf	i2___wmul@multiplier+1,c
 15325  003A42  0E00               	movlw	0
 15326  003A44  6E12               	movwf	i2___wmul@multiplicand+1,c
 15327  003A46  0E03               	movlw	3
 15328  003A48  6E11               	movwf	i2___wmul@multiplicand,c
 15329  003A4A  EC16  F02D         	call	i2___wmul	;wreg free
 15330  003A4E  0E29               	movlw	low __npowers_
 15331  003A50  240F               	addwf	?i2___wmul,w,c
 15332  003A52  6EF6               	movwf	tblptrl,c
 15333  003A54  0E06               	movlw	high __npowers_
 15334  003A56  2010               	addwfc	?i2___wmul+1,w,c
 15335  003A58  6EF7               	movwf	tblptrh,c
 15336  003A5A                     	if	0	;There are less than 3 active tblptr bytes
 15337  003A5A                     	endif
 15338  003A5A  0009               	tblrd		*+
 15339  003A5C  CFF5 F021          	movff	tablat,i2___ftmul@f1
 15340  003A60  0009               	tblrd		*+
 15341  003A62  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 15342  003A66  000A               	tblrd		*-
 15343  003A68  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 15344  003A6C  EC8F  F025         	call	i2___ftmul	;wreg free
 15345  003A70  C021  F036         	movff	?i2___ftmul,i2_fround$1922
 15346  003A74  C022  F037         	movff	?i2___ftmul+1,i2_fround$1922+1
 15347  003A78  C023  F038         	movff	?i2___ftmul+2,i2_fround$1922+2
 15348                           
 15349                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 15350  003A7C  C036  F021         	movff	i2_fround$1922,i2___ftmul@f1
 15351  003A80  C037  F022         	movff	i2_fround$1922+1,i2___ftmul@f1+1
 15352  003A84  C038  F023         	movff	i2_fround$1922+2,i2___ftmul@f1+2
 15353  003A88  0E00               	movlw	0
 15354  003A8A  6E24               	movwf	i2___ftmul@f2,c
 15355  003A8C  0E00               	movlw	0
 15356  003A8E  6E25               	movwf	i2___ftmul@f2+1,c
 15357  003A90  0E3F               	movlw	63
 15358  003A92  6E26               	movwf	i2___ftmul@f2+2,c
 15359  003A94  EC8F  F025         	call	i2___ftmul	;wreg free
 15360  003A98  D799               	goto	L10
 15361  003A9A                     i2l4109:
 15362                           
 15363                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 15364  003A9A  5039               	movf	i2fround@prec,w,c
 15365  003A9C  0D03               	mullw	3
 15366  003A9E  0E29               	movlw	low __npowers_
 15367  003AA0  24F3               	addwf	prodl,w,c
 15368  003AA2  6EF6               	movwf	tblptrl,c
 15369  003AA4  0E06               	movlw	high __npowers_
 15370  003AA6  20F4               	addwfc	prodh,w,c
 15371  003AA8  6EF7               	movwf	tblptrh,c
 15372  003AAA                     	if	0	;There are less than 3 active tblptr bytes
 15373  003AAA                     	endif
 15374  003AAA  0009               	tblrd		*+
 15375  003AAC  CFF5 F021          	movff	tablat,i2___ftmul@f1
 15376  003AB0  0009               	tblrd		*+
 15377  003AB2  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 15378  003AB6  000A               	tblrd		*-
 15379  003AB8  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 15380  003ABC  0E00               	movlw	0
 15381  003ABE  6E24               	movwf	i2___ftmul@f2,c
 15382  003AC0  0E00               	movlw	0
 15383  003AC2  6E25               	movwf	i2___ftmul@f2+1,c
 15384  003AC4  0E3F               	movlw	63
 15385  003AC6  6E26               	movwf	i2___ftmul@f2+2,c
 15386  003AC8  EC8F  F025         	call	i2___ftmul	;wreg free
 15387  003ACC  C021  F030         	movff	?i2___ftmul,?i2_fround
 15388  003AD0  C022  F031         	movff	?i2___ftmul+1,?i2_fround+1
 15389  003AD4  C023  F032         	movff	?i2___ftmul+2,?i2_fround+2
 15390  003AD8  0012               	return	
 15391  003ADA                     __end_ofi2_fround:
 15392                           	opt stack 0
 15393                           tosu	equ	0xFFF
 15394                           tosh	equ	0xFFE
 15395                           tosl	equ	0xFFD
 15396                           pclatu	equ	0xFFB
 15397                           pclath	equ	0xFFA
 15398                           tblptru	equ	0xFF8
 15399                           tblptrh	equ	0xFF7
 15400                           tblptrl	equ	0xFF6
 15401                           tablat	equ	0xFF5
 15402                           prodh	equ	0xFF4
 15403                           prodl	equ	0xFF3
 15404                           intcon	equ	0xFF2
 15405                           intcon2	equ	0xFF1
 15406                           intcon3	equ	0xFF0
 15407                           postinc0	equ	0xFEE
 15408                           fsr0h	equ	0xFEA
 15409                           fsr0l	equ	0xFE9
 15410                           wreg	equ	0xFE8
 15411                           postdec1	equ	0xFE5
 15412                           fsr1h	equ	0xFE2
 15413                           fsr1l	equ	0xFE1
 15414                           indf2	equ	0xFDF
 15415                           postinc2	equ	0xFDE
 15416                           postdec2	equ	0xFDD
 15417                           fsr2h	equ	0xFDA
 15418                           fsr2l	equ	0xFD9
 15419                           status	equ	0xFD8
 15420                           
 15421 ;; *************** function i2___wmul *****************
 15422 ;; Defined at:
 15423 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 15424 ;; Parameters:    Size  Location     Type
 15425 ;;  multiplier      2   14[COMRAM] unsigned int 
 15426 ;;  multiplicand    2   16[COMRAM] unsigned int 
 15427 ;; Auto vars:     Size  Location     Type
 15428 ;;  __wmul          2   18[COMRAM] unsigned int 
 15429 ;; Return value:  Size  Location     Type
 15430 ;;                  2   14[COMRAM] unsigned int 
 15431 ;; Registers used:
 15432 ;;		wreg, status,2, status,0, prodl, prodh
 15433 ;; Tracked objects:
 15434 ;;		On entry : 0/0
 15435 ;;		On exit  : 0/0
 15436 ;;		Unchanged: 0/0
 15437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15438 ;;      Params:         4       0       0       0       0       0       0
 15439 ;;      Locals:         2       0       0       0       0       0       0
 15440 ;;      Temps:          0       0       0       0       0       0       0
 15441 ;;      Totals:         6       0       0       0       0       0       0
 15442 ;;Total ram usage:        6 bytes
 15443 ;; Hardware stack levels used:    1
 15444 ;; This function calls:
 15445 ;;		Nothing
 15446 ;; This function is called by:
 15447 ;;		_INT0_ISR
 15448 ;;		i2_fround
 15449 ;;		i2_scale
 15450 ;;		i2__doprnt
 15451 ;; This function uses a non-reentrant model
 15452 ;;
 15453                           
 15454                           	psect	text53
 15455  005A2C                     __ptext53:
 15456                           	opt stack 0
 15457  005A2C                     i2___wmul:
 15458                           	opt stack 20
 15459                           
 15460                           ;incstack = 0
 15461  005A2C  500F               	movf	i2___wmul@multiplier,w,c
 15462  005A2E  0211               	mulwf	i2___wmul@multiplicand,c
 15463  005A30  CFF3 F013          	movff	prodl,i2___wmul@product
 15464  005A34  CFF4 F014          	movff	prodh,i2___wmul@product+1
 15465  005A38  500F               	movf	i2___wmul@multiplier,w,c
 15466  005A3A  0212               	mulwf	i2___wmul@multiplicand+1,c
 15467  005A3C  50F3               	movf	prodl,w,c
 15468  005A3E  2614               	addwf	i2___wmul@product+1,f,c
 15469  005A40  5010               	movf	i2___wmul@multiplier+1,w,c
 15470  005A42  0211               	mulwf	i2___wmul@multiplicand,c
 15471  005A44  50F3               	movf	prodl,w,c
 15472  005A46  2614               	addwf	i2___wmul@product+1,f,c
 15473  005A48  C013  F00F         	movff	i2___wmul@product,?i2___wmul
 15474  005A4C  C014  F010         	movff	i2___wmul@product+1,?i2___wmul+1
 15475  005A50  0012               	return	
 15476  005A52                     __end_ofi2___wmul:
 15477                           	opt stack 0
 15478                           tosu	equ	0xFFF
 15479                           tosh	equ	0xFFE
 15480                           tosl	equ	0xFFD
 15481                           pclatu	equ	0xFFB
 15482                           pclath	equ	0xFFA
 15483                           tblptru	equ	0xFF8
 15484                           tblptrh	equ	0xFF7
 15485                           tblptrl	equ	0xFF6
 15486                           tablat	equ	0xFF5
 15487                           prodh	equ	0xFF4
 15488                           prodl	equ	0xFF3
 15489                           intcon	equ	0xFF2
 15490                           intcon2	equ	0xFF1
 15491                           intcon3	equ	0xFF0
 15492                           postinc0	equ	0xFEE
 15493                           fsr0h	equ	0xFEA
 15494                           fsr0l	equ	0xFE9
 15495                           wreg	equ	0xFE8
 15496                           postdec1	equ	0xFE5
 15497                           fsr1h	equ	0xFE2
 15498                           fsr1l	equ	0xFE1
 15499                           indf2	equ	0xFDF
 15500                           postinc2	equ	0xFDE
 15501                           postdec2	equ	0xFDD
 15502                           fsr2h	equ	0xFDA
 15503                           fsr2l	equ	0xFD9
 15504                           status	equ	0xFD8
 15505                           
 15506 ;; *************** function i2___ftmul *****************
 15507 ;; Defined at:
 15508 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
 15509 ;; Parameters:    Size  Location     Type
 15510 ;;  f1              3   32[COMRAM] float 
 15511 ;;  f2              3   35[COMRAM] float 
 15512 ;; Auto vars:     Size  Location     Type
 15513 ;;  __ftmul         3   42[COMRAM] unsigned um
 15514 ;;  __ftmul         1   46[COMRAM] unsigned char 
 15515 ;;  __ftmul         1   45[COMRAM] unsigned char 
 15516 ;;  __ftmul         1   41[COMRAM] unsigned char 
 15517 ;; Return value:  Size  Location     Type
 15518 ;;                  3   32[COMRAM] float 
 15519 ;; Registers used:
 15520 ;;		wreg, status,2, status,0, cstack
 15521 ;; Tracked objects:
 15522 ;;		On entry : 0/0
 15523 ;;		On exit  : 0/0
 15524 ;;		Unchanged: 0/0
 15525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15526 ;;      Params:         6       0       0       0       0       0       0
 15527 ;;      Locals:         6       0       0       0       0       0       0
 15528 ;;      Temps:          3       0       0       0       0       0       0
 15529 ;;      Totals:        15       0       0       0       0       0       0
 15530 ;;Total ram usage:       15 bytes
 15531 ;; Hardware stack levels used:    1
 15532 ;; Hardware stack levels required when called:    1
 15533 ;; This function calls:
 15534 ;;		i2___ftpack
 15535 ;; This function is called by:
 15536 ;;		_INT0_ISR
 15537 ;;		i2_fround
 15538 ;;		i2_scale
 15539 ;;		i2__doprnt
 15540 ;; This function uses a non-reentrant model
 15541 ;;
 15542                           
 15543                           	psect	text54
 15544  004B1E                     __ptext54:
 15545                           	opt stack 0
 15546  004B1E                     i2___ftmul:
 15547                           	opt stack 19
 15548                           
 15549                           ;incstack = 0
 15550  004B1E  C023  F027         	movff	i2___ftmul@f1+2,??i2___ftmul
 15551  004B22  6A28               	clrf	(??i2___ftmul+1)& (0+255),c
 15552  004B24  6A29               	clrf	(??i2___ftmul+2)& (0+255),c
 15553  004B26  3422               	rlcf	i2___ftmul@f1+1,w,c
 15554  004B28  3627               	rlcf	??i2___ftmul& (0+255),f,c
 15555  004B2A  E301               	bnc	u468_41
 15556  004B2C  8028               	bsf	(??i2___ftmul+1)& (0+255),0,c
 15557  004B2E                     u468_41:
 15558  004B2E  5027               	movf	??i2___ftmul,w,c
 15559  004B30  6E2A               	movwf	i2___ftmul@exp,c
 15560  004B32  502A               	movf	i2___ftmul@exp,w,c
 15561  004B34  A4D8               	btfss	status,2,c
 15562  004B36  D007               	goto	i2l3839
 15563  004B38  0E00               	movlw	0
 15564  004B3A  6E21               	movwf	?i2___ftmul,c
 15565  004B3C  0E00               	movlw	0
 15566  004B3E  6E22               	movwf	?i2___ftmul+1,c
 15567  004B40  0E00               	movlw	0
 15568  004B42  6E23               	movwf	?i2___ftmul+2,c
 15569  004B44  0012               	return	
 15570  004B46                     i2l3839:
 15571  004B46  C026  F027         	movff	i2___ftmul@f2+2,??i2___ftmul
 15572  004B4A  6A28               	clrf	(??i2___ftmul+1)& (0+255),c
 15573  004B4C  6A29               	clrf	(??i2___ftmul+2)& (0+255),c
 15574  004B4E  3425               	rlcf	i2___ftmul@f2+1,w,c
 15575  004B50  3627               	rlcf	??i2___ftmul& (0+255),f,c
 15576  004B52  E301               	bnc	u470_41
 15577  004B54  8028               	bsf	(??i2___ftmul+1)& (0+255),0,c
 15578  004B56                     u470_41:
 15579  004B56  5027               	movf	??i2___ftmul,w,c
 15580  004B58  6E2F               	movwf	i2___ftmul@sign,c
 15581  004B5A  502F               	movf	i2___ftmul@sign,w,c
 15582  004B5C  A4D8               	btfss	status,2,c
 15583  004B5E  D007               	goto	i2l3845
 15584  004B60  0E00               	movlw	0
 15585  004B62  6E21               	movwf	?i2___ftmul,c
 15586  004B64  0E00               	movlw	0
 15587  004B66  6E22               	movwf	?i2___ftmul+1,c
 15588  004B68  0E00               	movlw	0
 15589  004B6A  6E23               	movwf	?i2___ftmul+2,c
 15590  004B6C  0012               	return	
 15591  004B6E                     i2l3845:
 15592  004B6E  502F               	movf	i2___ftmul@sign,w,c
 15593  004B70  0F7B               	addlw	123
 15594  004B72  262A               	addwf	i2___ftmul@exp,f,c
 15595  004B74  C023  F02F         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 15596  004B78  5026               	movf	i2___ftmul@f2+2,w,c
 15597  004B7A  1A2F               	xorwf	i2___ftmul@sign,f,c
 15598  004B7C  0E80               	movlw	128
 15599  004B7E  162F               	andwf	i2___ftmul@sign,f,c
 15600  004B80  8E22               	bsf	i2___ftmul@f1+1,7,c
 15601  004B82  8E25               	bsf	i2___ftmul@f2+1,7,c
 15602  004B84  0EFF               	movlw	255
 15603  004B86  1624               	andwf	i2___ftmul@f2,f,c
 15604  004B88  0EFF               	movlw	255
 15605  004B8A  1625               	andwf	i2___ftmul@f2+1,f,c
 15606  004B8C  0E00               	movlw	0
 15607  004B8E  1626               	andwf	i2___ftmul@f2+2,f,c
 15608  004B90  0E00               	movlw	0
 15609  004B92  6E2B               	movwf	i2___ftmul@f3_as_product,c
 15610  004B94  0E00               	movlw	0
 15611  004B96  6E2C               	movwf	i2___ftmul@f3_as_product+1,c
 15612  004B98  0E00               	movlw	0
 15613  004B9A  6E2D               	movwf	i2___ftmul@f3_as_product+2,c
 15614  004B9C  0E07               	movlw	7
 15615  004B9E  6E2E               	movwf	i2___ftmul@cntr,c
 15616  004BA0                     i2l3859:
 15617  004BA0  A021               	btfss	i2___ftmul@f1,0,c
 15618  004BA2  D006               	goto	i2l3863
 15619  004BA4  5024               	movf	i2___ftmul@f2,w,c
 15620  004BA6  262B               	addwf	i2___ftmul@f3_as_product,f,c
 15621  004BA8  5025               	movf	i2___ftmul@f2+1,w,c
 15622  004BAA  222C               	addwfc	i2___ftmul@f3_as_product+1,f,c
 15623  004BAC  5026               	movf	i2___ftmul@f2+2,w,c
 15624  004BAE  222D               	addwfc	i2___ftmul@f3_as_product+2,f,c
 15625  004BB0                     i2l3863:
 15626  004BB0  90D8               	bcf	status,0,c
 15627  004BB2  3223               	rrcf	i2___ftmul@f1+2,f,c
 15628  004BB4  3222               	rrcf	i2___ftmul@f1+1,f,c
 15629  004BB6  3221               	rrcf	i2___ftmul@f1,f,c
 15630  004BB8  90D8               	bcf	status,0,c
 15631  004BBA  3624               	rlcf	i2___ftmul@f2,f,c
 15632  004BBC  3625               	rlcf	i2___ftmul@f2+1,f,c
 15633  004BBE  3626               	rlcf	i2___ftmul@f2+2,f,c
 15634  004BC0  2E2E               	decfsz	i2___ftmul@cntr,f,c
 15635  004BC2  D7EE               	goto	i2l3859
 15636  004BC4  0E09               	movlw	9
 15637  004BC6  6E2E               	movwf	i2___ftmul@cntr,c
 15638  004BC8                     i2l3869:
 15639  004BC8  A021               	btfss	i2___ftmul@f1,0,c
 15640  004BCA  D006               	goto	i2l3873
 15641  004BCC  5024               	movf	i2___ftmul@f2,w,c
 15642  004BCE  262B               	addwf	i2___ftmul@f3_as_product,f,c
 15643  004BD0  5025               	movf	i2___ftmul@f2+1,w,c
 15644  004BD2  222C               	addwfc	i2___ftmul@f3_as_product+1,f,c
 15645  004BD4  5026               	movf	i2___ftmul@f2+2,w,c
 15646  004BD6  222D               	addwfc	i2___ftmul@f3_as_product+2,f,c
 15647  004BD8                     i2l3873:
 15648  004BD8  90D8               	bcf	status,0,c
 15649  004BDA  3223               	rrcf	i2___ftmul@f1+2,f,c
 15650  004BDC  3222               	rrcf	i2___ftmul@f1+1,f,c
 15651  004BDE  3221               	rrcf	i2___ftmul@f1,f,c
 15652  004BE0  90D8               	bcf	status,0,c
 15653  004BE2  322D               	rrcf	i2___ftmul@f3_as_product+2,f,c
 15654  004BE4  322C               	rrcf	i2___ftmul@f3_as_product+1,f,c
 15655  004BE6  322B               	rrcf	i2___ftmul@f3_as_product,f,c
 15656  004BE8  2E2E               	decfsz	i2___ftmul@cntr,f,c
 15657  004BEA  D7EE               	goto	i2l3869
 15658  004BEC  C02B  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 15659  004BF0  C02C  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 15660  004BF4  C02D  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 15661  004BF8  C02A  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 15662  004BFC  C02F  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 15663  004C00  EC17  F028         	call	i2___ftpack	;wreg free
 15664  004C04  C001  F021         	movff	?i2___ftpack,?i2___ftmul
 15665  004C08  C002  F022         	movff	?i2___ftpack+1,?i2___ftmul+1
 15666  004C0C  C003  F023         	movff	?i2___ftpack+2,?i2___ftmul+2
 15667  004C10  0012               	return	
 15668  004C12                     __end_ofi2___ftmul:
 15669                           	opt stack 0
 15670                           tosu	equ	0xFFF
 15671                           tosh	equ	0xFFE
 15672                           tosl	equ	0xFFD
 15673                           pclatu	equ	0xFFB
 15674                           pclath	equ	0xFFA
 15675                           tblptru	equ	0xFF8
 15676                           tblptrh	equ	0xFF7
 15677                           tblptrl	equ	0xFF6
 15678                           tablat	equ	0xFF5
 15679                           prodh	equ	0xFF4
 15680                           prodl	equ	0xFF3
 15681                           intcon	equ	0xFF2
 15682                           intcon2	equ	0xFF1
 15683                           intcon3	equ	0xFF0
 15684                           postinc0	equ	0xFEE
 15685                           fsr0h	equ	0xFEA
 15686                           fsr0l	equ	0xFE9
 15687                           wreg	equ	0xFE8
 15688                           postdec1	equ	0xFE5
 15689                           fsr1h	equ	0xFE2
 15690                           fsr1l	equ	0xFE1
 15691                           indf2	equ	0xFDF
 15692                           postinc2	equ	0xFDE
 15693                           postdec2	equ	0xFDD
 15694                           fsr2h	equ	0xFDA
 15695                           fsr2l	equ	0xFD9
 15696                           status	equ	0xFD8
 15697                           
 15698 ;; *************** function i2___awmod *****************
 15699 ;; Defined at:
 15700 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 15701 ;; Parameters:    Size  Location     Type
 15702 ;;  dividend        2    0[COMRAM] int 
 15703 ;;  divisor         2    2[COMRAM] int 
 15704 ;; Auto vars:     Size  Location     Type
 15705 ;;  __awmod         1    5[COMRAM] unsigned char 
 15706 ;;  __awmod         1    4[COMRAM] unsigned char 
 15707 ;; Return value:  Size  Location     Type
 15708 ;;                  2    0[COMRAM] int 
 15709 ;; Registers used:
 15710 ;;		wreg, status,2, status,0
 15711 ;; Tracked objects:
 15712 ;;		On entry : 0/0
 15713 ;;		On exit  : 0/0
 15714 ;;		Unchanged: 0/0
 15715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15716 ;;      Params:         4       0       0       0       0       0       0
 15717 ;;      Locals:         2       0       0       0       0       0       0
 15718 ;;      Temps:          0       0       0       0       0       0       0
 15719 ;;      Totals:         6       0       0       0       0       0       0
 15720 ;;Total ram usage:        6 bytes
 15721 ;; Hardware stack levels used:    1
 15722 ;; This function calls:
 15723 ;;		Nothing
 15724 ;; This function is called by:
 15725 ;;		i2_fround
 15726 ;;		i2_scale
 15727 ;; This function uses a non-reentrant model
 15728 ;;
 15729                           
 15730                           	psect	text55
 15731  0054A4                     __ptext55:
 15732                           	opt stack 0
 15733  0054A4                     i2___awmod:
 15734                           	opt stack 20
 15735                           
 15736                           ;incstack = 0
 15737  0054A4  0E00               	movlw	0
 15738  0054A6  6E06               	movwf	i2___awmod@sign,c
 15739  0054A8  AE02               	btfss	i2___awmod@dividend+1,7,c
 15740  0054AA  D006               	goto	i2l3735
 15741  0054AC  6C01               	negf	i2___awmod@dividend,c
 15742  0054AE  1E02               	comf	i2___awmod@dividend+1,f,c
 15743  0054B0  B0D8               	btfsc	status,0,c
 15744  0054B2  2A02               	incf	i2___awmod@dividend+1,f,c
 15745  0054B4  0E01               	movlw	1
 15746  0054B6  6E06               	movwf	i2___awmod@sign,c
 15747  0054B8                     i2l3735:
 15748  0054B8  AE04               	btfss	i2___awmod@divisor+1,7,c
 15749  0054BA  D004               	goto	i2l3739
 15750  0054BC  6C03               	negf	i2___awmod@divisor,c
 15751  0054BE  1E04               	comf	i2___awmod@divisor+1,f,c
 15752  0054C0  B0D8               	btfsc	status,0,c
 15753  0054C2  2A04               	incf	i2___awmod@divisor+1,f,c
 15754  0054C4                     i2l3739:
 15755  0054C4  5003               	movf	i2___awmod@divisor,w,c
 15756  0054C6  1004               	iorwf	i2___awmod@divisor+1,w,c
 15757  0054C8  B4D8               	btfsc	status,2,c
 15758  0054CA  D018               	goto	i2l3755
 15759  0054CC  0E01               	movlw	1
 15760  0054CE  6E05               	movwf	i2___awmod@counter,c
 15761  0054D0  D004               	goto	i2l3745
 15762  0054D2                     i2l3743:
 15763  0054D2  90D8               	bcf	status,0,c
 15764  0054D4  3603               	rlcf	i2___awmod@divisor,f,c
 15765  0054D6  3604               	rlcf	i2___awmod@divisor+1,f,c
 15766  0054D8  2A05               	incf	i2___awmod@counter,f,c
 15767  0054DA                     i2l3745:
 15768  0054DA  AE04               	btfss	i2___awmod@divisor+1,7,c
 15769  0054DC  D7FA               	goto	i2l3743
 15770  0054DE                     i2l3747:
 15771  0054DE  5003               	movf	i2___awmod@divisor,w,c
 15772  0054E0  5C01               	subwf	i2___awmod@dividend,w,c
 15773  0054E2  5004               	movf	i2___awmod@divisor+1,w,c
 15774  0054E4  5802               	subwfb	i2___awmod@dividend+1,w,c
 15775  0054E6  A0D8               	btfss	status,0,c
 15776  0054E8  D004               	goto	i2l3751
 15777  0054EA  5003               	movf	i2___awmod@divisor,w,c
 15778  0054EC  5E01               	subwf	i2___awmod@dividend,f,c
 15779  0054EE  5004               	movf	i2___awmod@divisor+1,w,c
 15780  0054F0  5A02               	subwfb	i2___awmod@dividend+1,f,c
 15781  0054F2                     i2l3751:
 15782  0054F2  90D8               	bcf	status,0,c
 15783  0054F4  3204               	rrcf	i2___awmod@divisor+1,f,c
 15784  0054F6  3203               	rrcf	i2___awmod@divisor,f,c
 15785  0054F8  2E05               	decfsz	i2___awmod@counter,f,c
 15786  0054FA  D7F1               	goto	i2l3747
 15787  0054FC                     i2l3755:
 15788  0054FC  5006               	movf	i2___awmod@sign,w,c
 15789  0054FE  B4D8               	btfsc	status,2,c
 15790  005500  D004               	goto	i2l3759
 15791  005502  6C01               	negf	i2___awmod@dividend,c
 15792  005504  1E02               	comf	i2___awmod@dividend+1,f,c
 15793  005506  B0D8               	btfsc	status,0,c
 15794  005508  2A02               	incf	i2___awmod@dividend+1,f,c
 15795  00550A                     i2l3759:
 15796  00550A  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 15797  00550E  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 15798  005512  0012               	return	
 15799  005514                     __end_ofi2___awmod:
 15800                           	opt stack 0
 15801                           tosu	equ	0xFFF
 15802                           tosh	equ	0xFFE
 15803                           tosl	equ	0xFFD
 15804                           pclatu	equ	0xFFB
 15805                           pclath	equ	0xFFA
 15806                           tblptru	equ	0xFF8
 15807                           tblptrh	equ	0xFF7
 15808                           tblptrl	equ	0xFF6
 15809                           tablat	equ	0xFF5
 15810                           prodh	equ	0xFF4
 15811                           prodl	equ	0xFF3
 15812                           intcon	equ	0xFF2
 15813                           intcon2	equ	0xFF1
 15814                           intcon3	equ	0xFF0
 15815                           postinc0	equ	0xFEE
 15816                           fsr0h	equ	0xFEA
 15817                           fsr0l	equ	0xFE9
 15818                           wreg	equ	0xFE8
 15819                           postdec1	equ	0xFE5
 15820                           fsr1h	equ	0xFE2
 15821                           fsr1l	equ	0xFE1
 15822                           indf2	equ	0xFDF
 15823                           postinc2	equ	0xFDE
 15824                           postdec2	equ	0xFDD
 15825                           fsr2h	equ	0xFDA
 15826                           fsr2l	equ	0xFD9
 15827                           status	equ	0xFD8
 15828                           
 15829 ;; *************** function i2___awdiv *****************
 15830 ;; Defined at:
 15831 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 15832 ;; Parameters:    Size  Location     Type
 15833 ;;  dividend        2    6[COMRAM] int 
 15834 ;;  divisor         2    8[COMRAM] int 
 15835 ;; Auto vars:     Size  Location     Type
 15836 ;;  __awdiv         2   12[COMRAM] int 
 15837 ;;  __awdiv         1   11[COMRAM] unsigned char 
 15838 ;;  __awdiv         1   10[COMRAM] unsigned char 
 15839 ;; Return value:  Size  Location     Type
 15840 ;;                  2    6[COMRAM] int 
 15841 ;; Registers used:
 15842 ;;		wreg, status,2, status,0
 15843 ;; Tracked objects:
 15844 ;;		On entry : 0/0
 15845 ;;		On exit  : 0/0
 15846 ;;		Unchanged: 0/0
 15847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15848 ;;      Params:         4       0       0       0       0       0       0
 15849 ;;      Locals:         4       0       0       0       0       0       0
 15850 ;;      Temps:          0       0       0       0       0       0       0
 15851 ;;      Totals:         8       0       0       0       0       0       0
 15852 ;;Total ram usage:        8 bytes
 15853 ;; Hardware stack levels used:    1
 15854 ;; This function calls:
 15855 ;;		Nothing
 15856 ;; This function is called by:
 15857 ;;		i2_fround
 15858 ;;		i2_scale
 15859 ;;		i2__doprnt
 15860 ;; This function uses a non-reentrant model
 15861 ;;
 15862                           
 15863                           	psect	text56
 15864  0052A8                     __ptext56:
 15865                           	opt stack 0
 15866  0052A8                     i2___awdiv:
 15867                           	opt stack 20
 15868                           
 15869                           ;incstack = 0
 15870  0052A8  0E00               	movlw	0
 15871  0052AA  6E0C               	movwf	i2___awdiv@sign,c
 15872  0052AC  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 15873  0052AE  D006               	goto	i2l3691
 15874  0052B0  6C09               	negf	i2___awdiv@divisor,c
 15875  0052B2  1E0A               	comf	i2___awdiv@divisor+1,f,c
 15876  0052B4  B0D8               	btfsc	status,0,c
 15877  0052B6  2A0A               	incf	i2___awdiv@divisor+1,f,c
 15878  0052B8  0E01               	movlw	1
 15879  0052BA  6E0C               	movwf	i2___awdiv@sign,c
 15880  0052BC                     i2l3691:
 15881  0052BC  AE08               	btfss	i2___awdiv@dividend+1,7,c
 15882  0052BE  D006               	goto	i2l3697
 15883  0052C0  6C07               	negf	i2___awdiv@dividend,c
 15884  0052C2  1E08               	comf	i2___awdiv@dividend+1,f,c
 15885  0052C4  B0D8               	btfsc	status,0,c
 15886  0052C6  2A08               	incf	i2___awdiv@dividend+1,f,c
 15887  0052C8  0E01               	movlw	1
 15888  0052CA  1A0C               	xorwf	i2___awdiv@sign,f,c
 15889  0052CC                     i2l3697:
 15890  0052CC  0E00               	movlw	0
 15891  0052CE  6E0E               	movwf	i2___awdiv@quotient+1,c
 15892  0052D0  0E00               	movlw	0
 15893  0052D2  6E0D               	movwf	i2___awdiv@quotient,c
 15894  0052D4  5009               	movf	i2___awdiv@divisor,w,c
 15895  0052D6  100A               	iorwf	i2___awdiv@divisor+1,w,c
 15896  0052D8  B4D8               	btfsc	status,2,c
 15897  0052DA  D01C               	goto	i2l3719
 15898  0052DC  0E01               	movlw	1
 15899  0052DE  6E0B               	movwf	i2___awdiv@counter,c
 15900  0052E0  D004               	goto	i2l3705
 15901  0052E2                     i2l3703:
 15902  0052E2  90D8               	bcf	status,0,c
 15903  0052E4  3609               	rlcf	i2___awdiv@divisor,f,c
 15904  0052E6  360A               	rlcf	i2___awdiv@divisor+1,f,c
 15905  0052E8  2A0B               	incf	i2___awdiv@counter,f,c
 15906  0052EA                     i2l3705:
 15907  0052EA  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 15908  0052EC  D7FA               	goto	i2l3703
 15909  0052EE                     i2l3707:
 15910  0052EE  90D8               	bcf	status,0,c
 15911  0052F0  360D               	rlcf	i2___awdiv@quotient,f,c
 15912  0052F2  360E               	rlcf	i2___awdiv@quotient+1,f,c
 15913  0052F4  5009               	movf	i2___awdiv@divisor,w,c
 15914  0052F6  5C07               	subwf	i2___awdiv@dividend,w,c
 15915  0052F8  500A               	movf	i2___awdiv@divisor+1,w,c
 15916  0052FA  5808               	subwfb	i2___awdiv@dividend+1,w,c
 15917  0052FC  A0D8               	btfss	status,0,c
 15918  0052FE  D005               	goto	i2l3715
 15919  005300  5009               	movf	i2___awdiv@divisor,w,c
 15920  005302  5E07               	subwf	i2___awdiv@dividend,f,c
 15921  005304  500A               	movf	i2___awdiv@divisor+1,w,c
 15922  005306  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 15923  005308  800D               	bsf	i2___awdiv@quotient,0,c
 15924  00530A                     i2l3715:
 15925  00530A  90D8               	bcf	status,0,c
 15926  00530C  320A               	rrcf	i2___awdiv@divisor+1,f,c
 15927  00530E  3209               	rrcf	i2___awdiv@divisor,f,c
 15928  005310  2E0B               	decfsz	i2___awdiv@counter,f,c
 15929  005312  D7ED               	goto	i2l3707
 15930  005314                     i2l3719:
 15931  005314  500C               	movf	i2___awdiv@sign,w,c
 15932  005316  B4D8               	btfsc	status,2,c
 15933  005318  D004               	goto	i2l3723
 15934  00531A  6C0D               	negf	i2___awdiv@quotient,c
 15935  00531C  1E0E               	comf	i2___awdiv@quotient+1,f,c
 15936  00531E  B0D8               	btfsc	status,0,c
 15937  005320  2A0E               	incf	i2___awdiv@quotient+1,f,c
 15938  005322                     i2l3723:
 15939  005322  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 15940  005326  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 15941  00532A  0012               	return	
 15942  00532C                     __end_ofi2___awdiv:
 15943                           	opt stack 0
 15944                           tosu	equ	0xFFF
 15945                           tosh	equ	0xFFE
 15946                           tosl	equ	0xFFD
 15947                           pclatu	equ	0xFFB
 15948                           pclath	equ	0xFFA
 15949                           tblptru	equ	0xFF8
 15950                           tblptrh	equ	0xFF7
 15951                           tblptrl	equ	0xFF6
 15952                           tablat	equ	0xFF5
 15953                           prodh	equ	0xFF4
 15954                           prodl	equ	0xFF3
 15955                           intcon	equ	0xFF2
 15956                           intcon2	equ	0xFF1
 15957                           intcon3	equ	0xFF0
 15958                           postinc0	equ	0xFEE
 15959                           fsr0h	equ	0xFEA
 15960                           fsr0l	equ	0xFE9
 15961                           wreg	equ	0xFE8
 15962                           postdec1	equ	0xFE5
 15963                           fsr1h	equ	0xFE2
 15964                           fsr1l	equ	0xFE1
 15965                           indf2	equ	0xFDF
 15966                           postinc2	equ	0xFDE
 15967                           postdec2	equ	0xFDD
 15968                           fsr2h	equ	0xFDA
 15969                           fsr2l	equ	0xFD9
 15970                           status	equ	0xFD8
 15971                           
 15972 ;; *************** function i2__tdiv_to_l_ *****************
 15973 ;; Defined at:
 15974 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdivl.c"
 15975 ;; Parameters:    Size  Location     Type
 15976 ;;  f1              3    0[COMRAM] float 
 15977 ;;  f2              3    3[COMRAM] float 
 15978 ;; Auto vars:     Size  Location     Type
 15979 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 15980 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 15981 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 15982 ;; Return value:  Size  Location     Type
 15983 ;;                  4    0[COMRAM] unsigned long 
 15984 ;; Registers used:
 15985 ;;		wreg, status,2, status,0
 15986 ;; Tracked objects:
 15987 ;;		On entry : 0/0
 15988 ;;		On exit  : 0/0
 15989 ;;		Unchanged: 0/0
 15990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15991 ;;      Params:         6       0       0       0       0       0       0
 15992 ;;      Locals:         6       0       0       0       0       0       0
 15993 ;;      Temps:          3       0       0       0       0       0       0
 15994 ;;      Totals:        15       0       0       0       0       0       0
 15995 ;;Total ram usage:       15 bytes
 15996 ;; Hardware stack levels used:    1
 15997 ;; This function calls:
 15998 ;;		Nothing
 15999 ;; This function is called by:
 16000 ;;		i2__doprnt
 16001 ;; This function uses a non-reentrant model
 16002 ;;
 16003                           
 16004                           	psect	text57
 16005  0046A4                     __ptext57:
 16006                           	opt stack 0
 16007  0046A4                     i2__tdiv_to_l_:
 16008                           	opt stack 21
 16009                           
 16010                           ;incstack = 0
 16011  0046A4  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 16012  0046A8  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 16013  0046AA  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 16014  0046AC  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 16015  0046AE  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 16016  0046B0  E301               	bnc	u528_41
 16017  0046B2  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 16018  0046B4                     u528_41:
 16019  0046B4  5007               	movf	??i2__tdiv_to_l_,w,c
 16020  0046B6  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 16021  0046B8  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 16022  0046BA  A4D8               	btfss	status,2,c
 16023  0046BC  D009               	goto	i2l4217
 16024  0046BE  0E00               	movlw	0
 16025  0046C0  6E01               	movwf	?i2__tdiv_to_l_,c
 16026  0046C2  0E00               	movlw	0
 16027  0046C4  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16028  0046C6  0E00               	movlw	0
 16029  0046C8  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16030  0046CA  0E00               	movlw	0
 16031  0046CC  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16032  0046CE  0012               	return	
 16033  0046D0                     i2l4217:
 16034  0046D0  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 16035  0046D4  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 16036  0046D6  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 16037  0046D8  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 16038  0046DA  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 16039  0046DC  E301               	bnc	u530_41
 16040  0046DE  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 16041  0046E0                     u530_41:
 16042  0046E0  5007               	movf	??i2__tdiv_to_l_,w,c
 16043  0046E2  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 16044  0046E4  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 16045  0046E6  A4D8               	btfss	status,2,c
 16046  0046E8  D009               	goto	i2l4223
 16047  0046EA  0E00               	movlw	0
 16048  0046EC  6E01               	movwf	?i2__tdiv_to_l_,c
 16049  0046EE  0E00               	movlw	0
 16050  0046F0  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16051  0046F2  0E00               	movlw	0
 16052  0046F4  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16053  0046F6  0E00               	movlw	0
 16054  0046F8  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16055  0046FA  0012               	return	
 16056  0046FC                     i2l4223:
 16057  0046FC  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 16058  0046FE  0EFF               	movlw	255
 16059  004700  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 16060  004702  0EFF               	movlw	255
 16061  004704  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 16062  004706  0E00               	movlw	0
 16063  004708  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 16064  00470A  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 16065  00470C  0EFF               	movlw	255
 16066  00470E  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 16067  004710  0EFF               	movlw	255
 16068  004712  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 16069  004714  0E00               	movlw	0
 16070  004716  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 16071  004718  0E00               	movlw	0
 16072  00471A  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 16073  00471C  0E00               	movlw	0
 16074  00471E  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 16075  004720  0E00               	movlw	0
 16076  004722  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 16077  004724  0E00               	movlw	0
 16078  004726  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 16079  004728  0E7F               	movlw	127
 16080  00472A  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 16081  00472C  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 16082  00472E  0F98               	addlw	152
 16083  004730  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 16084  004732  0E18               	movlw	24
 16085  004734  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 16086  004736                     i2l821:
 16087  004736  90D8               	bcf	status,0,c
 16088  004738  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 16089  00473A  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 16090  00473C  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 16091  00473E  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 16092  004740  5004               	movf	i2__tdiv_to_l_@f2,w,c
 16093  004742  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 16094  004744  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 16095  004746  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 16096  004748  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 16097  00474A  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 16098  00474C  A0D8               	btfss	status,0,c
 16099  00474E  D007               	goto	i2l822
 16100  004750  5004               	movf	i2__tdiv_to_l_@f2,w,c
 16101  004752  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 16102  004754  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 16103  004756  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 16104  004758  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 16105  00475A  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 16106  00475C  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 16107  00475E                     i2l822:
 16108  00475E  90D8               	bcf	status,0,c
 16109  004760  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 16110  004762  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 16111  004764  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 16112  004766  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 16113  004768  D7E6               	goto	i2l821
 16114  00476A  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 16115  00476C  D016               	goto	i2l4257
 16116  00476E  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 16117  004770  0A80               	xorlw	128
 16118  004772  0F97               	addlw	151
 16119  004774  B0D8               	btfsc	status,0,c
 16120  004776  D009               	goto	i2l4253
 16121  004778  0E00               	movlw	0
 16122  00477A  6E01               	movwf	?i2__tdiv_to_l_,c
 16123  00477C  0E00               	movlw	0
 16124  00477E  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16125  004780  0E00               	movlw	0
 16126  004782  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16127  004784  0E00               	movlw	0
 16128  004786  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16129  004788  0012               	return	
 16130  00478A                     i2l4253:
 16131  00478A  90D8               	bcf	status,0,c
 16132  00478C  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 16133  00478E  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 16134  004790  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 16135  004792  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 16136  004794  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 16137  004796  D7F9               	goto	i2l4253
 16138  004798  D015               	goto	i2l828
 16139  00479A                     i2l4257:
 16140  00479A  0E17               	movlw	23
 16141  00479C  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 16142  00479E  D00F               	goto	i2l4265
 16143  0047A0  0E00               	movlw	0
 16144  0047A2  6E01               	movwf	?i2__tdiv_to_l_,c
 16145  0047A4  0E00               	movlw	0
 16146  0047A6  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16147  0047A8  0E00               	movlw	0
 16148  0047AA  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16149  0047AC  0E00               	movlw	0
 16150  0047AE  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16151  0047B0  0012               	return	
 16152  0047B2                     i2l4263:
 16153  0047B2  90D8               	bcf	status,0,c
 16154  0047B4  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 16155  0047B6  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 16156  0047B8  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 16157  0047BA  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 16158  0047BC  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 16159  0047BE                     i2l4265:
 16160  0047BE  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 16161  0047C0  A4D8               	btfss	status,2,c
 16162  0047C2  D7F7               	goto	i2l4263
 16163  0047C4                     i2l828:
 16164  0047C4  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 16165  0047C8  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 16166  0047CC  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 16167  0047D0  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 16168  0047D4  0012               	return		;funcret
 16169  0047D6                     __end_ofi2__tdiv_to_l_:
 16170                           	opt stack 0
 16171                           tosu	equ	0xFFF
 16172                           tosh	equ	0xFFE
 16173                           tosl	equ	0xFFD
 16174                           pclatu	equ	0xFFB
 16175                           pclath	equ	0xFFA
 16176                           tblptru	equ	0xFF8
 16177                           tblptrh	equ	0xFF7
 16178                           tblptrl	equ	0xFF6
 16179                           tablat	equ	0xFF5
 16180                           prodh	equ	0xFF4
 16181                           prodl	equ	0xFF3
 16182                           intcon	equ	0xFF2
 16183                           intcon2	equ	0xFF1
 16184                           intcon3	equ	0xFF0
 16185                           postinc0	equ	0xFEE
 16186                           fsr0h	equ	0xFEA
 16187                           fsr0l	equ	0xFE9
 16188                           wreg	equ	0xFE8
 16189                           postdec1	equ	0xFE5
 16190                           fsr1h	equ	0xFE2
 16191                           fsr1l	equ	0xFE1
 16192                           indf2	equ	0xFDF
 16193                           postinc2	equ	0xFDE
 16194                           postdec2	equ	0xFDD
 16195                           fsr2h	equ	0xFDA
 16196                           fsr2l	equ	0xFD9
 16197                           status	equ	0xFD8
 16198                           
 16199 ;; *************** function i2__div_to_l_ *****************
 16200 ;; Defined at:
 16201 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fldivl.c"
 16202 ;; Parameters:    Size  Location     Type
 16203 ;;  f1              3    0[COMRAM] unsigned long 
 16204 ;;  f2              3    3[COMRAM] unsigned long 
 16205 ;; Auto vars:     Size  Location     Type
 16206 ;;  _div_to_l_      4    6[COMRAM] unsigned long 
 16207 ;;  _div_to_l_      1   11[COMRAM] unsigned char 
 16208 ;;  _div_to_l_      1   10[COMRAM] unsigned char 
 16209 ;; Return value:  Size  Location     Type
 16210 ;;                  4    0[COMRAM] unsigned long 
 16211 ;; Registers used:
 16212 ;;		wreg, status,2, status,0
 16213 ;; Tracked objects:
 16214 ;;		On entry : 0/0
 16215 ;;		On exit  : 0/0
 16216 ;;		Unchanged: 0/0
 16217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16218 ;;      Params:         6       0       0       0       0       0       0
 16219 ;;      Locals:         6       0       0       0       0       0       0
 16220 ;;      Temps:          0       0       0       0       0       0       0
 16221 ;;      Totals:        12       0       0       0       0       0       0
 16222 ;;Total ram usage:       12 bytes
 16223 ;; Hardware stack levels used:    1
 16224 ;; This function calls:
 16225 ;;		Nothing
 16226 ;; This function is called by:
 16227 ;;		i2__doprnt
 16228 ;; This function uses a non-reentrant model
 16229 ;;
 16230                           
 16231                           	psect	text58
 16232  0047D6                     __ptext58:
 16233                           	opt stack 0
 16234  0047D6                     i2__div_to_l_:
 16235                           	opt stack 21
 16236                           
 16237                           ;incstack = 0
 16238  0047D6  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 16239  0047D8  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 16240  0047DA  6E0C               	movwf	i2__div_to_l_@exp1,c
 16241  0047DC  500C               	movf	i2__div_to_l_@exp1,w,c
 16242  0047DE  A4D8               	btfss	status,2,c
 16243  0047E0  D009               	goto	i2l4157
 16244  0047E2  0E00               	movlw	0
 16245  0047E4  6E01               	movwf	?i2__div_to_l_,c
 16246  0047E6  0E00               	movlw	0
 16247  0047E8  6E02               	movwf	?i2__div_to_l_+1,c
 16248  0047EA  0E00               	movlw	0
 16249  0047EC  6E03               	movwf	?i2__div_to_l_+2,c
 16250  0047EE  0E00               	movlw	0
 16251  0047F0  6E04               	movwf	?i2__div_to_l_+3,c
 16252  0047F2  0012               	return	
 16253  0047F4                     i2l4157:
 16254  0047F4  3406               	rlcf	i2__div_to_l_@f2+2,w,c
 16255  0047F6  3407               	rlcf	i2__div_to_l_@f2+3,w,c
 16256  0047F8  6E0B               	movwf	i2__div_to_l_@cntr,c
 16257  0047FA  500B               	movf	i2__div_to_l_@cntr,w,c
 16258  0047FC  A4D8               	btfss	status,2,c
 16259  0047FE  D009               	goto	i2l4163
 16260  004800  0E00               	movlw	0
 16261  004802  6E01               	movwf	?i2__div_to_l_,c
 16262  004804  0E00               	movlw	0
 16263  004806  6E02               	movwf	?i2__div_to_l_+1,c
 16264  004808  0E00               	movlw	0
 16265  00480A  6E03               	movwf	?i2__div_to_l_+2,c
 16266  00480C  0E00               	movlw	0
 16267  00480E  6E04               	movwf	?i2__div_to_l_+3,c
 16268  004810  0012               	return	
 16269  004812                     i2l4163:
 16270  004812  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 16271  004814  0EFF               	movlw	255
 16272  004816  1601               	andwf	i2__div_to_l_@f1,f,c
 16273  004818  0EFF               	movlw	255
 16274  00481A  1602               	andwf	i2__div_to_l_@f1+1,f,c
 16275  00481C  0EFF               	movlw	255
 16276  00481E  1603               	andwf	i2__div_to_l_@f1+2,f,c
 16277  004820  0E00               	movlw	0
 16278  004822  1604               	andwf	i2__div_to_l_@f1+3,f,c
 16279  004824  8E06               	bsf	i2__div_to_l_@f2+2,7,c
 16280  004826  0EFF               	movlw	255
 16281  004828  1604               	andwf	i2__div_to_l_@f2,f,c
 16282  00482A  0EFF               	movlw	255
 16283  00482C  1605               	andwf	i2__div_to_l_@f2+1,f,c
 16284  00482E  0EFF               	movlw	255
 16285  004830  1606               	andwf	i2__div_to_l_@f2+2,f,c
 16286  004832  0E00               	movlw	0
 16287  004834  1607               	andwf	i2__div_to_l_@f2+3,f,c
 16288  004836  0E00               	movlw	0
 16289  004838  6E07               	movwf	i2__div_to_l_@quot,c
 16290  00483A  0E00               	movlw	0
 16291  00483C  6E08               	movwf	i2__div_to_l_@quot+1,c
 16292  00483E  0E00               	movlw	0
 16293  004840  6E09               	movwf	i2__div_to_l_@quot+2,c
 16294  004842  0E00               	movlw	0
 16295  004844  6E0A               	movwf	i2__div_to_l_@quot+3,c
 16296  004846  0E7F               	movlw	127
 16297  004848  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 16298  00484A  500B               	movf	i2__div_to_l_@cntr,w,c
 16299  00484C  0FA0               	addlw	160
 16300  00484E  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 16301  004850  0E20               	movlw	32
 16302  004852  6E0B               	movwf	i2__div_to_l_@cntr,c
 16303  004854                     i2l4177:
 16304  004854  90D8               	bcf	status,0,c
 16305  004856  3607               	rlcf	i2__div_to_l_@quot,f,c
 16306  004858  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 16307  00485A  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 16308  00485C  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 16309  00485E  5004               	movf	i2__div_to_l_@f2,w,c
 16310  004860  5C01               	subwf	i2__div_to_l_@f1,w,c
 16311  004862  5005               	movf	i2__div_to_l_@f2+1,w,c
 16312  004864  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 16313  004866  5006               	movf	i2__div_to_l_@f2+2,w,c
 16314  004868  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 16315  00486A  5007               	movf	i2__div_to_l_@f2+3,w,c
 16316  00486C  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 16317  00486E  A0D8               	btfss	status,0,c
 16318  004870  D009               	goto	i2l4185
 16319  004872  5004               	movf	i2__div_to_l_@f2,w,c
 16320  004874  5E01               	subwf	i2__div_to_l_@f1,f,c
 16321  004876  5005               	movf	i2__div_to_l_@f2+1,w,c
 16322  004878  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 16323  00487A  5006               	movf	i2__div_to_l_@f2+2,w,c
 16324  00487C  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 16325  00487E  5007               	movf	i2__div_to_l_@f2+3,w,c
 16326  004880  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 16327  004882  8007               	bsf	i2__div_to_l_@quot,0,c
 16328  004884                     i2l4185:
 16329  004884  90D8               	bcf	status,0,c
 16330  004886  3601               	rlcf	i2__div_to_l_@f1,f,c
 16331  004888  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 16332  00488A  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 16333  00488C  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 16334  00488E  2E0B               	decfsz	i2__div_to_l_@cntr,f,c
 16335  004890  D7E1               	goto	i2l4177
 16336  004892  AE0C               	btfss	i2__div_to_l_@exp1,7,c
 16337  004894  D016               	goto	i2l4201
 16338  004896  500C               	movf	i2__div_to_l_@exp1,w,c
 16339  004898  0A80               	xorlw	128
 16340  00489A  0F9F               	addlw	159
 16341  00489C  B0D8               	btfsc	status,0,c
 16342  00489E  D009               	goto	i2l4197
 16343  0048A0  0E00               	movlw	0
 16344  0048A2  6E01               	movwf	?i2__div_to_l_,c
 16345  0048A4  0E00               	movlw	0
 16346  0048A6  6E02               	movwf	?i2__div_to_l_+1,c
 16347  0048A8  0E00               	movlw	0
 16348  0048AA  6E03               	movwf	?i2__div_to_l_+2,c
 16349  0048AC  0E00               	movlw	0
 16350  0048AE  6E04               	movwf	?i2__div_to_l_+3,c
 16351  0048B0  0012               	return	
 16352  0048B2                     i2l4197:
 16353  0048B2  90D8               	bcf	status,0,c
 16354  0048B4  320A               	rrcf	i2__div_to_l_@quot+3,f,c
 16355  0048B6  3209               	rrcf	i2__div_to_l_@quot+2,f,c
 16356  0048B8  3208               	rrcf	i2__div_to_l_@quot+1,f,c
 16357  0048BA  3207               	rrcf	i2__div_to_l_@quot,f,c
 16358  0048BC  3E0C               	incfsz	i2__div_to_l_@exp1,f,c
 16359  0048BE  D7F9               	goto	i2l4197
 16360  0048C0  D015               	goto	i2l724
 16361  0048C2                     i2l4201:
 16362  0048C2  0E1F               	movlw	31
 16363  0048C4  640C               	cpfsgt	i2__div_to_l_@exp1,c
 16364  0048C6  D00F               	goto	i2l4209
 16365  0048C8  0E00               	movlw	0
 16366  0048CA  6E01               	movwf	?i2__div_to_l_,c
 16367  0048CC  0E00               	movlw	0
 16368  0048CE  6E02               	movwf	?i2__div_to_l_+1,c
 16369  0048D0  0E00               	movlw	0
 16370  0048D2  6E03               	movwf	?i2__div_to_l_+2,c
 16371  0048D4  0E00               	movlw	0
 16372  0048D6  6E04               	movwf	?i2__div_to_l_+3,c
 16373  0048D8  0012               	return	
 16374  0048DA                     i2l4207:
 16375  0048DA  90D8               	bcf	status,0,c
 16376  0048DC  3607               	rlcf	i2__div_to_l_@quot,f,c
 16377  0048DE  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 16378  0048E0  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 16379  0048E2  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 16380  0048E4  060C               	decf	i2__div_to_l_@exp1,f,c
 16381  0048E6                     i2l4209:
 16382  0048E6  500C               	movf	i2__div_to_l_@exp1,w,c
 16383  0048E8  A4D8               	btfss	status,2,c
 16384  0048EA  D7F7               	goto	i2l4207
 16385  0048EC                     i2l724:
 16386  0048EC  C007  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 16387  0048F0  C008  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 16388  0048F4  C009  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 16389  0048F8  C00A  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 16390  0048FC  0012               	return		;funcret
 16391  0048FE                     __end_ofi2__div_to_l_:
 16392                           	opt stack 0
 16393                           tosu	equ	0xFFF
 16394                           tosh	equ	0xFFE
 16395                           tosl	equ	0xFFD
 16396                           pclatu	equ	0xFFB
 16397                           pclath	equ	0xFFA
 16398                           tblptru	equ	0xFF8
 16399                           tblptrh	equ	0xFF7
 16400                           tblptrl	equ	0xFF6
 16401                           tablat	equ	0xFF5
 16402                           prodh	equ	0xFF4
 16403                           prodl	equ	0xFF3
 16404                           intcon	equ	0xFF2
 16405                           intcon2	equ	0xFF1
 16406                           intcon3	equ	0xFF0
 16407                           postinc0	equ	0xFEE
 16408                           fsr0h	equ	0xFEA
 16409                           fsr0l	equ	0xFE9
 16410                           wreg	equ	0xFE8
 16411                           postdec1	equ	0xFE5
 16412                           fsr1h	equ	0xFE2
 16413                           fsr1l	equ	0xFE1
 16414                           indf2	equ	0xFDF
 16415                           postinc2	equ	0xFDE
 16416                           postdec2	equ	0xFDD
 16417                           fsr2h	equ	0xFDA
 16418                           fsr2l	equ	0xFD9
 16419                           status	equ	0xFD8
 16420                           
 16421 ;; *************** function i2___lltoft *****************
 16422 ;; Defined at:
 16423 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lltoft.c"
 16424 ;; Parameters:    Size  Location     Type
 16425 ;;  c               4    8[COMRAM] unsigned long 
 16426 ;; Auto vars:     Size  Location     Type
 16427 ;;  __lltoft        1   16[COMRAM] unsigned char 
 16428 ;; Return value:  Size  Location     Type
 16429 ;;                  3    8[COMRAM] float 
 16430 ;; Registers used:
 16431 ;;		wreg, status,2, status,0, cstack
 16432 ;; Tracked objects:
 16433 ;;		On entry : 0/0
 16434 ;;		On exit  : 0/0
 16435 ;;		Unchanged: 0/0
 16436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16437 ;;      Params:         4       0       0       0       0       0       0
 16438 ;;      Locals:         1       0       0       0       0       0       0
 16439 ;;      Temps:          4       0       0       0       0       0       0
 16440 ;;      Totals:         9       0       0       0       0       0       0
 16441 ;;Total ram usage:        9 bytes
 16442 ;; Hardware stack levels used:    1
 16443 ;; Hardware stack levels required when called:    1
 16444 ;; This function calls:
 16445 ;;		i2___ftpack
 16446 ;; This function is called by:
 16447 ;;		i2__doprnt
 16448 ;; This function uses a non-reentrant model
 16449 ;;
 16450                           
 16451                           	psect	text59
 16452  0055DE                     __ptext59:
 16453                           	opt stack 0
 16454  0055DE                     i2___lltoft:
 16455                           	opt stack 20
 16456                           
 16457                           ;incstack = 0
 16458  0055DE  0E8E               	movlw	142
 16459  0055E0  6E11               	movwf	i2___lltoft@exp,c
 16460  0055E2  D006               	goto	i2l4397
 16461  0055E4                     i2l4395:
 16462  0055E4  90D8               	bcf	status,0,c
 16463  0055E6  320C               	rrcf	i2___lltoft@c+3,f,c
 16464  0055E8  320B               	rrcf	i2___lltoft@c+2,f,c
 16465  0055EA  320A               	rrcf	i2___lltoft@c+1,f,c
 16466  0055EC  3209               	rrcf	i2___lltoft@c,f,c
 16467  0055EE  2A11               	incf	i2___lltoft@exp,f,c
 16468  0055F0                     i2l4397:
 16469  0055F0  0E00               	movlw	0
 16470  0055F2  1409               	andwf	i2___lltoft@c,w,c
 16471  0055F4  6E0D               	movwf	??i2___lltoft& (0+255),c
 16472  0055F6  0E00               	movlw	0
 16473  0055F8  140A               	andwf	i2___lltoft@c+1,w,c
 16474  0055FA  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 16475  0055FC  0E00               	movlw	0
 16476  0055FE  140B               	andwf	i2___lltoft@c+2,w,c
 16477  005600  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 16478  005602  0EFF               	movlw	255
 16479  005604  140C               	andwf	i2___lltoft@c+3,w,c
 16480  005606  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 16481  005608  500D               	movf	??i2___lltoft,w,c
 16482  00560A  100E               	iorwf	??i2___lltoft+1,w,c
 16483  00560C  100F               	iorwf	??i2___lltoft+2,w,c
 16484  00560E  1010               	iorwf	??i2___lltoft+3,w,c
 16485  005610  A4D8               	btfss	status,2,c
 16486  005612  D7E8               	goto	i2l4395
 16487  005614  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 16488  005618  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 16489  00561C  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 16490  005620  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 16491  005624  0E00               	movlw	0
 16492  005626  6E05               	movwf	i2___ftpack@sign,c
 16493  005628  EC17  F028         	call	i2___ftpack	;wreg free
 16494  00562C  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 16495  005630  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 16496  005634  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 16497  005638  0012               	return	
 16498  00563A                     __end_ofi2___lltoft:
 16499                           	opt stack 0
 16500                           tosu	equ	0xFFF
 16501                           tosh	equ	0xFFE
 16502                           tosl	equ	0xFFD
 16503                           pclatu	equ	0xFFB
 16504                           pclath	equ	0xFFA
 16505                           tblptru	equ	0xFF8
 16506                           tblptrh	equ	0xFF7
 16507                           tblptrl	equ	0xFF6
 16508                           tablat	equ	0xFF5
 16509                           prodh	equ	0xFF4
 16510                           prodl	equ	0xFF3
 16511                           intcon	equ	0xFF2
 16512                           intcon2	equ	0xFF1
 16513                           intcon3	equ	0xFF0
 16514                           postinc0	equ	0xFEE
 16515                           fsr0h	equ	0xFEA
 16516                           fsr0l	equ	0xFE9
 16517                           wreg	equ	0xFE8
 16518                           postdec1	equ	0xFE5
 16519                           fsr1h	equ	0xFE2
 16520                           fsr1l	equ	0xFE1
 16521                           indf2	equ	0xFDF
 16522                           postinc2	equ	0xFDE
 16523                           postdec2	equ	0xFDD
 16524                           fsr2h	equ	0xFDA
 16525                           fsr2l	equ	0xFD9
 16526                           status	equ	0xFD8
 16527                           
 16528 ;; *************** function i2___llmod *****************
 16529 ;; Defined at:
 16530 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
 16531 ;; Parameters:    Size  Location     Type
 16532 ;;  dividend        4   13[COMRAM] unsigned long 
 16533 ;;  divisor         4   17[COMRAM] unsigned long 
 16534 ;; Auto vars:     Size  Location     Type
 16535 ;;  __llmod         1   21[COMRAM] unsigned char 
 16536 ;; Return value:  Size  Location     Type
 16537 ;;                  4   13[COMRAM] unsigned long 
 16538 ;; Registers used:
 16539 ;;		wreg, status,2, status,0
 16540 ;; Tracked objects:
 16541 ;;		On entry : 0/0
 16542 ;;		On exit  : 0/0
 16543 ;;		Unchanged: 0/0
 16544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16545 ;;      Params:         8       0       0       0       0       0       0
 16546 ;;      Locals:         1       0       0       0       0       0       0
 16547 ;;      Temps:          0       0       0       0       0       0       0
 16548 ;;      Totals:         9       0       0       0       0       0       0
 16549 ;;Total ram usage:        9 bytes
 16550 ;; Hardware stack levels used:    1
 16551 ;; This function calls:
 16552 ;;		Nothing
 16553 ;; This function is called by:
 16554 ;;		i2__doprnt
 16555 ;; This function uses a non-reentrant model
 16556 ;;
 16557                           
 16558                           	psect	text60
 16559  005514                     __ptext60:
 16560                           	opt stack 0
 16561  005514                     i2___llmod:
 16562                           	opt stack 21
 16563                           
 16564                           ;incstack = 0
 16565  005514  5012               	movf	i2___llmod@divisor,w,c
 16566  005516  1013               	iorwf	i2___llmod@divisor+1,w,c
 16567  005518  1014               	iorwf	i2___llmod@divisor+2,w,c
 16568  00551A  1015               	iorwf	i2___llmod@divisor+3,w,c
 16569  00551C  B4D8               	btfsc	status,2,c
 16570  00551E  D024               	goto	i2l935
 16571  005520  0E01               	movlw	1
 16572  005522  6E16               	movwf	i2___llmod@counter,c
 16573  005524  D006               	goto	i2l4383
 16574  005526                     i2l4381:
 16575  005526  90D8               	bcf	status,0,c
 16576  005528  3612               	rlcf	i2___llmod@divisor,f,c
 16577  00552A  3613               	rlcf	i2___llmod@divisor+1,f,c
 16578  00552C  3614               	rlcf	i2___llmod@divisor+2,f,c
 16579  00552E  3615               	rlcf	i2___llmod@divisor+3,f,c
 16580  005530  2A16               	incf	i2___llmod@counter,f,c
 16581  005532                     i2l4383:
 16582  005532  AE15               	btfss	i2___llmod@divisor+3,7,c
 16583  005534  D7F8               	goto	i2l4381
 16584  005536                     i2l4385:
 16585  005536  5012               	movf	i2___llmod@divisor,w,c
 16586  005538  5C0E               	subwf	i2___llmod@dividend,w,c
 16587  00553A  5013               	movf	i2___llmod@divisor+1,w,c
 16588  00553C  580F               	subwfb	i2___llmod@dividend+1,w,c
 16589  00553E  5014               	movf	i2___llmod@divisor+2,w,c
 16590  005540  5810               	subwfb	i2___llmod@dividend+2,w,c
 16591  005542  5015               	movf	i2___llmod@divisor+3,w,c
 16592  005544  5811               	subwfb	i2___llmod@dividend+3,w,c
 16593  005546  A0D8               	btfss	status,0,c
 16594  005548  D008               	goto	i2l4389
 16595  00554A  5012               	movf	i2___llmod@divisor,w,c
 16596  00554C  5E0E               	subwf	i2___llmod@dividend,f,c
 16597  00554E  5013               	movf	i2___llmod@divisor+1,w,c
 16598  005550  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 16599  005552  5014               	movf	i2___llmod@divisor+2,w,c
 16600  005554  5A10               	subwfb	i2___llmod@dividend+2,f,c
 16601  005556  5015               	movf	i2___llmod@divisor+3,w,c
 16602  005558  5A11               	subwfb	i2___llmod@dividend+3,f,c
 16603  00555A                     i2l4389:
 16604  00555A  90D8               	bcf	status,0,c
 16605  00555C  3215               	rrcf	i2___llmod@divisor+3,f,c
 16606  00555E  3214               	rrcf	i2___llmod@divisor+2,f,c
 16607  005560  3213               	rrcf	i2___llmod@divisor+1,f,c
 16608  005562  3212               	rrcf	i2___llmod@divisor,f,c
 16609  005564  2E16               	decfsz	i2___llmod@counter,f,c
 16610  005566  D7E7               	goto	i2l4385
 16611  005568                     i2l935:
 16612  005568  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 16613  00556C  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 16614  005570  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 16615  005574  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 16616  005578  0012               	return		;funcret
 16617  00557A                     __end_ofi2___llmod:
 16618                           	opt stack 0
 16619                           tosu	equ	0xFFF
 16620                           tosh	equ	0xFFE
 16621                           tosl	equ	0xFFD
 16622                           pclatu	equ	0xFFB
 16623                           pclath	equ	0xFFA
 16624                           tblptru	equ	0xFF8
 16625                           tblptrh	equ	0xFF7
 16626                           tblptrl	equ	0xFF6
 16627                           tablat	equ	0xFF5
 16628                           prodh	equ	0xFF4
 16629                           prodl	equ	0xFF3
 16630                           intcon	equ	0xFF2
 16631                           intcon2	equ	0xFF1
 16632                           intcon3	equ	0xFF0
 16633                           postinc0	equ	0xFEE
 16634                           fsr0h	equ	0xFEA
 16635                           fsr0l	equ	0xFE9
 16636                           wreg	equ	0xFE8
 16637                           postdec1	equ	0xFE5
 16638                           fsr1h	equ	0xFE2
 16639                           fsr1l	equ	0xFE1
 16640                           indf2	equ	0xFDF
 16641                           postinc2	equ	0xFDE
 16642                           postdec2	equ	0xFDD
 16643                           fsr2h	equ	0xFDA
 16644                           fsr2l	equ	0xFD9
 16645                           status	equ	0xFD8
 16646                           
 16647 ;; *************** function i2___lldiv *****************
 16648 ;; Defined at:
 16649 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
 16650 ;; Parameters:    Size  Location     Type
 16651 ;;  dividend        4    0[COMRAM] unsigned long 
 16652 ;;  divisor         4    4[COMRAM] unsigned long 
 16653 ;; Auto vars:     Size  Location     Type
 16654 ;;  __lldiv         4    8[COMRAM] unsigned long 
 16655 ;;  __lldiv         1   12[COMRAM] unsigned char 
 16656 ;; Return value:  Size  Location     Type
 16657 ;;                  4    0[COMRAM] unsigned long 
 16658 ;; Registers used:
 16659 ;;		wreg, status,2, status,0
 16660 ;; Tracked objects:
 16661 ;;		On entry : 0/0
 16662 ;;		On exit  : 0/0
 16663 ;;		Unchanged: 0/0
 16664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16665 ;;      Params:         8       0       0       0       0       0       0
 16666 ;;      Locals:         5       0       0       0       0       0       0
 16667 ;;      Temps:          0       0       0       0       0       0       0
 16668 ;;      Totals:        13       0       0       0       0       0       0
 16669 ;;Total ram usage:       13 bytes
 16670 ;; Hardware stack levels used:    1
 16671 ;; This function calls:
 16672 ;;		Nothing
 16673 ;; This function is called by:
 16674 ;;		i2__doprnt
 16675 ;; This function uses a non-reentrant model
 16676 ;;
 16677                           
 16678                           	psect	text61
 16679  00532C                     __ptext61:
 16680                           	opt stack 0
 16681  00532C                     i2___lldiv:
 16682                           	opt stack 21
 16683                           
 16684                           ;incstack = 0
 16685  00532C  0E00               	movlw	0
 16686  00532E  6E09               	movwf	i2___lldiv@quotient,c
 16687  005330  0E00               	movlw	0
 16688  005332  6E0A               	movwf	i2___lldiv@quotient+1,c
 16689  005334  0E00               	movlw	0
 16690  005336  6E0B               	movwf	i2___lldiv@quotient+2,c
 16691  005338  0E00               	movlw	0
 16692  00533A  6E0C               	movwf	i2___lldiv@quotient+3,c
 16693  00533C  5005               	movf	i2___lldiv@divisor,w,c
 16694  00533E  1006               	iorwf	i2___lldiv@divisor+1,w,c
 16695  005340  1007               	iorwf	i2___lldiv@divisor+2,w,c
 16696  005342  1008               	iorwf	i2___lldiv@divisor+3,w,c
 16697  005344  B4D8               	btfsc	status,2,c
 16698  005346  D02A               	goto	i2l925
 16699  005348  0E01               	movlw	1
 16700  00534A  6E0D               	movwf	i2___lldiv@counter,c
 16701  00534C  D006               	goto	i2l4363
 16702  00534E                     i2l4361:
 16703  00534E  90D8               	bcf	status,0,c
 16704  005350  3605               	rlcf	i2___lldiv@divisor,f,c
 16705  005352  3606               	rlcf	i2___lldiv@divisor+1,f,c
 16706  005354  3607               	rlcf	i2___lldiv@divisor+2,f,c
 16707  005356  3608               	rlcf	i2___lldiv@divisor+3,f,c
 16708  005358  2A0D               	incf	i2___lldiv@counter,f,c
 16709  00535A                     i2l4363:
 16710  00535A  AE08               	btfss	i2___lldiv@divisor+3,7,c
 16711  00535C  D7F8               	goto	i2l4361
 16712  00535E                     i2l4365:
 16713  00535E  90D8               	bcf	status,0,c
 16714  005360  3609               	rlcf	i2___lldiv@quotient,f,c
 16715  005362  360A               	rlcf	i2___lldiv@quotient+1,f,c
 16716  005364  360B               	rlcf	i2___lldiv@quotient+2,f,c
 16717  005366  360C               	rlcf	i2___lldiv@quotient+3,f,c
 16718  005368  5005               	movf	i2___lldiv@divisor,w,c
 16719  00536A  5C01               	subwf	i2___lldiv@dividend,w,c
 16720  00536C  5006               	movf	i2___lldiv@divisor+1,w,c
 16721  00536E  5802               	subwfb	i2___lldiv@dividend+1,w,c
 16722  005370  5007               	movf	i2___lldiv@divisor+2,w,c
 16723  005372  5803               	subwfb	i2___lldiv@dividend+2,w,c
 16724  005374  5008               	movf	i2___lldiv@divisor+3,w,c
 16725  005376  5804               	subwfb	i2___lldiv@dividend+3,w,c
 16726  005378  A0D8               	btfss	status,0,c
 16727  00537A  D009               	goto	i2l4373
 16728  00537C  5005               	movf	i2___lldiv@divisor,w,c
 16729  00537E  5E01               	subwf	i2___lldiv@dividend,f,c
 16730  005380  5006               	movf	i2___lldiv@divisor+1,w,c
 16731  005382  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 16732  005384  5007               	movf	i2___lldiv@divisor+2,w,c
 16733  005386  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 16734  005388  5008               	movf	i2___lldiv@divisor+3,w,c
 16735  00538A  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 16736  00538C  8009               	bsf	i2___lldiv@quotient,0,c
 16737  00538E                     i2l4373:
 16738  00538E  90D8               	bcf	status,0,c
 16739  005390  3208               	rrcf	i2___lldiv@divisor+3,f,c
 16740  005392  3207               	rrcf	i2___lldiv@divisor+2,f,c
 16741  005394  3206               	rrcf	i2___lldiv@divisor+1,f,c
 16742  005396  3205               	rrcf	i2___lldiv@divisor,f,c
 16743  005398  2E0D               	decfsz	i2___lldiv@counter,f,c
 16744  00539A  D7E1               	goto	i2l4365
 16745  00539C                     i2l925:
 16746  00539C  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 16747  0053A0  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 16748  0053A4  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 16749  0053A8  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 16750  0053AC  0012               	return		;funcret
 16751  0053AE                     __end_ofi2___lldiv:
 16752                           	opt stack 0
 16753                           tosu	equ	0xFFF
 16754                           tosh	equ	0xFFE
 16755                           tosl	equ	0xFFD
 16756                           pclatu	equ	0xFFB
 16757                           pclath	equ	0xFFA
 16758                           tblptru	equ	0xFF8
 16759                           tblptrh	equ	0xFF7
 16760                           tblptrl	equ	0xFF6
 16761                           tablat	equ	0xFF5
 16762                           prodh	equ	0xFF4
 16763                           prodl	equ	0xFF3
 16764                           intcon	equ	0xFF2
 16765                           intcon2	equ	0xFF1
 16766                           intcon3	equ	0xFF0
 16767                           postinc0	equ	0xFEE
 16768                           fsr0h	equ	0xFEA
 16769                           fsr0l	equ	0xFE9
 16770                           wreg	equ	0xFE8
 16771                           postdec1	equ	0xFE5
 16772                           fsr1h	equ	0xFE2
 16773                           fsr1l	equ	0xFE1
 16774                           indf2	equ	0xFDF
 16775                           postinc2	equ	0xFDE
 16776                           postdec2	equ	0xFDD
 16777                           fsr2h	equ	0xFDA
 16778                           fsr2l	equ	0xFD9
 16779                           status	equ	0xFD8
 16780                           
 16781 ;; *************** function i2___fttol *****************
 16782 ;; Defined at:
 16783 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
 16784 ;; Parameters:    Size  Location     Type
 16785 ;;  f1              3   54[COMRAM] float 
 16786 ;; Auto vars:     Size  Location     Type
 16787 ;;  __fttol         4   64[COMRAM] unsigned long 
 16788 ;;  __fttol         1   68[COMRAM] unsigned char 
 16789 ;;  __fttol         1   63[COMRAM] unsigned char 
 16790 ;; Return value:  Size  Location     Type
 16791 ;;                  4   54[COMRAM] long 
 16792 ;; Registers used:
 16793 ;;		wreg, status,2, status,0
 16794 ;; Tracked objects:
 16795 ;;		On entry : 0/0
 16796 ;;		On exit  : 0/0
 16797 ;;		Unchanged: 0/0
 16798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16799 ;;      Params:         4       0       0       0       0       0       0
 16800 ;;      Locals:         6       0       0       0       0       0       0
 16801 ;;      Temps:          5       0       0       0       0       0       0
 16802 ;;      Totals:        15       0       0       0       0       0       0
 16803 ;;Total ram usage:       15 bytes
 16804 ;; Hardware stack levels used:    1
 16805 ;; This function calls:
 16806 ;;		Nothing
 16807 ;; This function is called by:
 16808 ;;		i2__doprnt
 16809 ;; This function uses a non-reentrant model
 16810 ;;
 16811                           
 16812                           	psect	text62
 16813  004C12                     __ptext62:
 16814                           	opt stack 0
 16815  004C12                     i2___fttol:
 16816                           	opt stack 21
 16817                           
 16818                           ;incstack = 0
 16819  004C12  C039  F03B         	movff	i2___fttol@f1+2,??i2___fttol
 16820  004C16  6A3C               	clrf	(??i2___fttol+1)& (0+255),c
 16821  004C18  6A3D               	clrf	(??i2___fttol+2)& (0+255),c
 16822  004C1A  3438               	rlcf	i2___fttol@f1+1,w,c
 16823  004C1C  363B               	rlcf	??i2___fttol& (0+255),f,c
 16824  004C1E  E301               	bnc	u542_41
 16825  004C20  803C               	bsf	(??i2___fttol+1)& (0+255),0,c
 16826  004C22                     u542_41:
 16827  004C22  503B               	movf	??i2___fttol,w,c
 16828  004C24  6E45               	movwf	i2___fttol@exp1,c
 16829  004C26  5045               	movf	i2___fttol@exp1,w,c
 16830  004C28  A4D8               	btfss	status,2,c
 16831  004C2A  D009               	goto	i2l4303
 16832  004C2C  0E00               	movlw	0
 16833  004C2E  6E37               	movwf	?i2___fttol,c
 16834  004C30  0E00               	movlw	0
 16835  004C32  6E38               	movwf	?i2___fttol+1,c
 16836  004C34  0E00               	movlw	0
 16837  004C36  6E39               	movwf	?i2___fttol+2,c
 16838  004C38  0E00               	movlw	0
 16839  004C3A  6E3A               	movwf	?i2___fttol+3,c
 16840  004C3C  0012               	return	
 16841  004C3E                     i2l4303:
 16842  004C3E  0E17               	movlw	23
 16843  004C40  6E3B               	movwf	??i2___fttol& (0+255),c
 16844  004C42  C037  F03C         	movff	i2___fttol@f1,??i2___fttol+1
 16845  004C46  C038  F03D         	movff	i2___fttol@f1+1,??i2___fttol+2
 16846  004C4A  C039  F03E         	movff	i2___fttol@f1+2,??i2___fttol+3
 16847  004C4E  283B               	incf	??i2___fttol,w,c
 16848  004C50  6E3F               	movwf	(??i2___fttol+4)& (0+255),c
 16849  004C52  D004               	goto	i2u544_40
 16850  004C54                     i2u544_45:
 16851  004C54  90D8               	bcf	status,0,c
 16852  004C56  323E               	rrcf	??i2___fttol+3,f,c
 16853  004C58  323D               	rrcf	??i2___fttol+2,f,c
 16854  004C5A  323C               	rrcf	??i2___fttol+1,f,c
 16855  004C5C                     i2u544_40:
 16856  004C5C  2E3F               	decfsz	(??i2___fttol+4)& (0+255),f,c
 16857  004C5E  D7FA               	goto	i2u544_45
 16858  004C60  503C               	movf	??i2___fttol+1,w,c
 16859  004C62  6E40               	movwf	i2___fttol@sign1,c
 16860  004C64  8E38               	bsf	i2___fttol@f1+1,7,c
 16861  004C66  0EFF               	movlw	255
 16862  004C68  1637               	andwf	i2___fttol@f1,f,c
 16863  004C6A  0EFF               	movlw	255
 16864  004C6C  1638               	andwf	i2___fttol@f1+1,f,c
 16865  004C6E  0E00               	movlw	0
 16866  004C70  1639               	andwf	i2___fttol@f1+2,f,c
 16867  004C72  5037               	movf	i2___fttol@f1,w,c
 16868  004C74  6E41               	movwf	i2___fttol@lval,c
 16869  004C76  5038               	movf	i2___fttol@f1+1,w,c
 16870  004C78  6E42               	movwf	i2___fttol@lval+1,c
 16871  004C7A  5039               	movf	i2___fttol@f1+2,w,c
 16872  004C7C  6E43               	movwf	i2___fttol@lval+2,c
 16873  004C7E  6A44               	clrf	i2___fttol@lval+3,c
 16874  004C80  0E8E               	movlw	142
 16875  004C82  5E45               	subwf	i2___fttol@exp1,f,c
 16876  004C84  AE45               	btfss	i2___fttol@exp1,7,c
 16877  004C86  D016               	goto	i2l4325
 16878  004C88  5045               	movf	i2___fttol@exp1,w,c
 16879  004C8A  0A80               	xorlw	128
 16880  004C8C  0F8F               	addlw	143
 16881  004C8E  B0D8               	btfsc	status,0,c
 16882  004C90  D009               	goto	i2l4321
 16883  004C92  0E00               	movlw	0
 16884  004C94  6E37               	movwf	?i2___fttol,c
 16885  004C96  0E00               	movlw	0
 16886  004C98  6E38               	movwf	?i2___fttol+1,c
 16887  004C9A  0E00               	movlw	0
 16888  004C9C  6E39               	movwf	?i2___fttol+2,c
 16889  004C9E  0E00               	movlw	0
 16890  004CA0  6E3A               	movwf	?i2___fttol+3,c
 16891  004CA2  0012               	return	
 16892  004CA4                     i2l4321:
 16893  004CA4  90D8               	bcf	status,0,c
 16894  004CA6  3244               	rrcf	i2___fttol@lval+3,f,c
 16895  004CA8  3243               	rrcf	i2___fttol@lval+2,f,c
 16896  004CAA  3242               	rrcf	i2___fttol@lval+1,f,c
 16897  004CAC  3241               	rrcf	i2___fttol@lval,f,c
 16898  004CAE  3E45               	incfsz	i2___fttol@exp1,f,c
 16899  004CB0  D7F9               	goto	i2l4321
 16900  004CB2  D015               	goto	i2l4335
 16901  004CB4                     i2l4325:
 16902  004CB4  0E17               	movlw	23
 16903  004CB6  6445               	cpfsgt	i2___fttol@exp1,c
 16904  004CB8  D00F               	goto	i2l4333
 16905  004CBA  0E00               	movlw	0
 16906  004CBC  6E37               	movwf	?i2___fttol,c
 16907  004CBE  0E00               	movlw	0
 16908  004CC0  6E38               	movwf	?i2___fttol+1,c
 16909  004CC2  0E00               	movlw	0
 16910  004CC4  6E39               	movwf	?i2___fttol+2,c
 16911  004CC6  0E00               	movlw	0
 16912  004CC8  6E3A               	movwf	?i2___fttol+3,c
 16913  004CCA  0012               	return	
 16914  004CCC                     i2l4331:
 16915  004CCC  90D8               	bcf	status,0,c
 16916  004CCE  3641               	rlcf	i2___fttol@lval,f,c
 16917  004CD0  3642               	rlcf	i2___fttol@lval+1,f,c
 16918  004CD2  3643               	rlcf	i2___fttol@lval+2,f,c
 16919  004CD4  3644               	rlcf	i2___fttol@lval+3,f,c
 16920  004CD6  0645               	decf	i2___fttol@exp1,f,c
 16921  004CD8                     i2l4333:
 16922  004CD8  5045               	movf	i2___fttol@exp1,w,c
 16923  004CDA  A4D8               	btfss	status,2,c
 16924  004CDC  D7F7               	goto	i2l4331
 16925  004CDE                     i2l4335:
 16926  004CDE  5040               	movf	i2___fttol@sign1,w,c
 16927  004CE0  B4D8               	btfsc	status,2,c
 16928  004CE2  D008               	goto	i2l4339
 16929  004CE4  1E44               	comf	i2___fttol@lval+3,f,c
 16930  004CE6  1E43               	comf	i2___fttol@lval+2,f,c
 16931  004CE8  1E42               	comf	i2___fttol@lval+1,f,c
 16932  004CEA  6C41               	negf	i2___fttol@lval,c
 16933  004CEC  0E00               	movlw	0
 16934  004CEE  2242               	addwfc	i2___fttol@lval+1,f,c
 16935  004CF0  2243               	addwfc	i2___fttol@lval+2,f,c
 16936  004CF2  2244               	addwfc	i2___fttol@lval+3,f,c
 16937  004CF4                     i2l4339:
 16938  004CF4  C041  F037         	movff	i2___fttol@lval,?i2___fttol
 16939  004CF8  C042  F038         	movff	i2___fttol@lval+1,?i2___fttol+1
 16940  004CFC  C043  F039         	movff	i2___fttol@lval+2,?i2___fttol+2
 16941  004D00  C044  F03A         	movff	i2___fttol@lval+3,?i2___fttol+3
 16942  004D04  0012               	return	
 16943  004D06                     __end_ofi2___fttol:
 16944                           	opt stack 0
 16945                           tosu	equ	0xFFF
 16946                           tosh	equ	0xFFE
 16947                           tosl	equ	0xFFD
 16948                           pclatu	equ	0xFFB
 16949                           pclath	equ	0xFFA
 16950                           tblptru	equ	0xFF8
 16951                           tblptrh	equ	0xFF7
 16952                           tblptrl	equ	0xFF6
 16953                           tablat	equ	0xFF5
 16954                           prodh	equ	0xFF4
 16955                           prodl	equ	0xFF3
 16956                           intcon	equ	0xFF2
 16957                           intcon2	equ	0xFF1
 16958                           intcon3	equ	0xFF0
 16959                           postinc0	equ	0xFEE
 16960                           fsr0h	equ	0xFEA
 16961                           fsr0l	equ	0xFE9
 16962                           wreg	equ	0xFE8
 16963                           postdec1	equ	0xFE5
 16964                           fsr1h	equ	0xFE2
 16965                           fsr1l	equ	0xFE1
 16966                           indf2	equ	0xFDF
 16967                           postinc2	equ	0xFDE
 16968                           postdec2	equ	0xFDD
 16969                           fsr2h	equ	0xFDA
 16970                           fsr2l	equ	0xFD9
 16971                           status	equ	0xFD8
 16972                           
 16973 ;; *************** function i2___ftsub *****************
 16974 ;; Defined at:
 16975 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
 16976 ;; Parameters:    Size  Location     Type
 16977 ;;  f1              3   32[COMRAM] float 
 16978 ;;  f2              3   35[COMRAM] float 
 16979 ;; Auto vars:     Size  Location     Type
 16980 ;;		None
 16981 ;; Return value:  Size  Location     Type
 16982 ;;                  3   32[COMRAM] float 
 16983 ;; Registers used:
 16984 ;;		wreg, status,2, status,0, cstack
 16985 ;; Tracked objects:
 16986 ;;		On entry : 0/0
 16987 ;;		On exit  : 0/0
 16988 ;;		Unchanged: 0/0
 16989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16990 ;;      Params:         6       0       0       0       0       0       0
 16991 ;;      Locals:         0       0       0       0       0       0       0
 16992 ;;      Temps:          0       0       0       0       0       0       0
 16993 ;;      Totals:         6       0       0       0       0       0       0
 16994 ;;Total ram usage:        6 bytes
 16995 ;; Hardware stack levels used:    1
 16996 ;; Hardware stack levels required when called:    2
 16997 ;; This function calls:
 16998 ;;		i2___ftadd
 16999 ;; This function is called by:
 17000 ;;		i2__doprnt
 17001 ;; This function uses a non-reentrant model
 17002 ;;
 17003                           
 17004                           	psect	text63
 17005  005830                     __ptext63:
 17006                           	opt stack 0
 17007  005830                     i2___ftsub:
 17008                           	opt stack 19
 17009                           
 17010                           ;incstack = 0
 17011  005830  5024               	movf	i2___ftsub@f2,w,c
 17012  005832  1025               	iorwf	i2___ftsub@f2+1,w,c
 17013  005834  1026               	iorwf	i2___ftsub@f2+2,w,c
 17014  005836  B4D8               	btfsc	status,2,c
 17015  005838  D006               	goto	i2l4293
 17016  00583A  0E00               	movlw	0
 17017  00583C  1A24               	xorwf	i2___ftsub@f2,f,c
 17018  00583E  0E00               	movlw	0
 17019  005840  1A25               	xorwf	i2___ftsub@f2+1,f,c
 17020  005842  0E80               	movlw	128
 17021  005844  1A26               	xorwf	i2___ftsub@f2+2,f,c
 17022  005846                     i2l4293:
 17023  005846  C021  F015         	movff	i2___ftsub@f1,i2___ftadd@f1
 17024  00584A  C022  F016         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 17025  00584E  C023  F017         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 17026  005852  C024  F018         	movff	i2___ftsub@f2,i2___ftadd@f2
 17027  005856  C025  F019         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 17028  00585A  C026  F01A         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 17029  00585E  EC6D  F01D         	call	i2___ftadd	;wreg free
 17030  005862  C015  F021         	movff	?i2___ftadd,?i2___ftsub
 17031  005866  C016  F022         	movff	?i2___ftadd+1,?i2___ftsub+1
 17032  00586A  C017  F023         	movff	?i2___ftadd+2,?i2___ftsub+2
 17033  00586E  0012               	return	
 17034  005870                     __end_ofi2___ftsub:
 17035                           	opt stack 0
 17036                           tosu	equ	0xFFF
 17037                           tosh	equ	0xFFE
 17038                           tosl	equ	0xFFD
 17039                           pclatu	equ	0xFFB
 17040                           pclath	equ	0xFFA
 17041                           tblptru	equ	0xFF8
 17042                           tblptrh	equ	0xFF7
 17043                           tblptrl	equ	0xFF6
 17044                           tablat	equ	0xFF5
 17045                           prodh	equ	0xFF4
 17046                           prodl	equ	0xFF3
 17047                           intcon	equ	0xFF2
 17048                           intcon2	equ	0xFF1
 17049                           intcon3	equ	0xFF0
 17050                           postinc0	equ	0xFEE
 17051                           fsr0h	equ	0xFEA
 17052                           fsr0l	equ	0xFE9
 17053                           wreg	equ	0xFE8
 17054                           postdec1	equ	0xFE5
 17055                           fsr1h	equ	0xFE2
 17056                           fsr1l	equ	0xFE1
 17057                           indf2	equ	0xFDF
 17058                           postinc2	equ	0xFDE
 17059                           postdec2	equ	0xFDD
 17060                           fsr2h	equ	0xFDA
 17061                           fsr2l	equ	0xFD9
 17062                           status	equ	0xFD8
 17063                           
 17064 ;; *************** function i2___ftadd *****************
 17065 ;; Defined at:
 17066 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
 17067 ;; Parameters:    Size  Location     Type
 17068 ;;  f1              3   20[COMRAM] float 
 17069 ;;  f2              3   23[COMRAM] float 
 17070 ;; Auto vars:     Size  Location     Type
 17071 ;;  __ftadd         1   31[COMRAM] unsigned char 
 17072 ;;  __ftadd         1   30[COMRAM] unsigned char 
 17073 ;;  __ftadd         1   29[COMRAM] unsigned char 
 17074 ;; Return value:  Size  Location     Type
 17075 ;;                  3   20[COMRAM] float 
 17076 ;; Registers used:
 17077 ;;		wreg, status,2, status,0, cstack
 17078 ;; Tracked objects:
 17079 ;;		On entry : 0/0
 17080 ;;		On exit  : 0/0
 17081 ;;		Unchanged: 0/0
 17082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17083 ;;      Params:         6       0       0       0       0       0       0
 17084 ;;      Locals:         3       0       0       0       0       0       0
 17085 ;;      Temps:          3       0       0       0       0       0       0
 17086 ;;      Totals:        12       0       0       0       0       0       0
 17087 ;;Total ram usage:       12 bytes
 17088 ;; Hardware stack levels used:    1
 17089 ;; Hardware stack levels required when called:    1
 17090 ;; This function calls:
 17091 ;;		i2___ftpack
 17092 ;; This function is called by:
 17093 ;;		_INT0_ISR
 17094 ;;		i2__doprnt
 17095 ;;		i2___ftsub
 17096 ;; This function uses a non-reentrant model
 17097 ;;
 17098                           
 17099                           	psect	text64
 17100  003ADA                     __ptext64:
 17101                           	opt stack 0
 17102  003ADA                     i2___ftadd:
 17103                           	opt stack 19
 17104                           
 17105                           ;incstack = 0
 17106  003ADA  C017  F01B         	movff	i2___ftadd@f1+2,??i2___ftadd
 17107  003ADE  6A1C               	clrf	(??i2___ftadd+1)& (0+255),c
 17108  003AE0  6A1D               	clrf	(??i2___ftadd+2)& (0+255),c
 17109  003AE2  3416               	rlcf	i2___ftadd@f1+1,w,c
 17110  003AE4  361B               	rlcf	??i2___ftadd& (0+255),f,c
 17111  003AE6  E301               	bnc	u447_41
 17112  003AE8  801C               	bsf	(??i2___ftadd+1)& (0+255),0,c
 17113  003AEA                     u447_41:
 17114  003AEA  501B               	movf	??i2___ftadd,w,c
 17115  003AEC  6E20               	movwf	i2___ftadd@exp1,c
 17116  003AEE  C01A  F01B         	movff	i2___ftadd@f2+2,??i2___ftadd
 17117  003AF2  6A1C               	clrf	(??i2___ftadd+1)& (0+255),c
 17118  003AF4  6A1D               	clrf	(??i2___ftadd+2)& (0+255),c
 17119  003AF6  3419               	rlcf	i2___ftadd@f2+1,w,c
 17120  003AF8  361B               	rlcf	??i2___ftadd& (0+255),f,c
 17121  003AFA  E301               	bnc	u448_41
 17122  003AFC  801C               	bsf	(??i2___ftadd+1)& (0+255),0,c
 17123  003AFE                     u448_41:
 17124  003AFE  501B               	movf	??i2___ftadd,w,c
 17125  003B00  6E1F               	movwf	i2___ftadd@exp2,c
 17126  003B02  5020               	movf	i2___ftadd@exp1,w,c
 17127  003B04  B4D8               	btfsc	status,2,c
 17128  003B06  D00B               	goto	i2l779
 17129  003B08  501F               	movf	i2___ftadd@exp2,w,c
 17130  003B0A  5C20               	subwf	i2___ftadd@exp1,w,c
 17131  003B0C  B0D8               	btfsc	status,0,c
 17132  003B0E  D00E               	goto	i2l3771
 17133  003B10  5020               	movf	i2___ftadd@exp1,w,c
 17134  003B12  0800               	sublw	0
 17135  003B14  241F               	addwf	i2___ftadd@exp2,w,c
 17136  003B16  6E1B               	movwf	??i2___ftadd& (0+255),c
 17137  003B18  0E18               	movlw	24
 17138  003B1A  641B               	cpfsgt	??i2___ftadd,c
 17139  003B1C  D007               	goto	i2l3771
 17140  003B1E                     i2l779:
 17141  003B1E  C018  F015         	movff	i2___ftadd@f2,?i2___ftadd
 17142  003B22  C019  F016         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 17143  003B26  C01A  F017         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 17144  003B2A  0012               	return	
 17145  003B2C                     i2l3771:
 17146  003B2C  501F               	movf	i2___ftadd@exp2,w,c
 17147  003B2E  B4D8               	btfsc	status,2,c
 17148  003B30  D00B               	goto	i2l783
 17149  003B32  5020               	movf	i2___ftadd@exp1,w,c
 17150  003B34  5C1F               	subwf	i2___ftadd@exp2,w,c
 17151  003B36  B0D8               	btfsc	status,0,c
 17152  003B38  D00E               	goto	i2l3777
 17153  003B3A  501F               	movf	i2___ftadd@exp2,w,c
 17154  003B3C  0800               	sublw	0
 17155  003B3E  2420               	addwf	i2___ftadd@exp1,w,c
 17156  003B40  6E1B               	movwf	??i2___ftadd& (0+255),c
 17157  003B42  0E18               	movlw	24
 17158  003B44  641B               	cpfsgt	??i2___ftadd,c
 17159  003B46  D007               	goto	i2l3777
 17160  003B48                     i2l783:
 17161  003B48  C015  F015         	movff	i2___ftadd@f1,?i2___ftadd
 17162  003B4C  C016  F016         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 17163  003B50  C017  F017         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 17164  003B54  0012               	return	
 17165  003B56                     i2l3777:
 17166  003B56  0E06               	movlw	6
 17167  003B58  6E1E               	movwf	i2___ftadd@sign,c
 17168  003B5A  BE17               	btfsc	i2___ftadd@f1+2,7,c
 17169  003B5C  8E1E               	bsf	i2___ftadd@sign,7,c
 17170  003B5E  BE1A               	btfsc	i2___ftadd@f2+2,7,c
 17171  003B60  8C1E               	bsf	i2___ftadd@sign,6,c
 17172  003B62  8E16               	bsf	i2___ftadd@f1+1,7,c
 17173  003B64  0EFF               	movlw	255
 17174  003B66  1615               	andwf	i2___ftadd@f1,f,c
 17175  003B68  0EFF               	movlw	255
 17176  003B6A  1616               	andwf	i2___ftadd@f1+1,f,c
 17177  003B6C  0E00               	movlw	0
 17178  003B6E  1617               	andwf	i2___ftadd@f1+2,f,c
 17179  003B70  8E19               	bsf	i2___ftadd@f2+1,7,c
 17180  003B72  0EFF               	movlw	255
 17181  003B74  1618               	andwf	i2___ftadd@f2,f,c
 17182  003B76  0EFF               	movlw	255
 17183  003B78  1619               	andwf	i2___ftadd@f2+1,f,c
 17184  003B7A  0E00               	movlw	0
 17185  003B7C  161A               	andwf	i2___ftadd@f2+2,f,c
 17186  003B7E  501F               	movf	i2___ftadd@exp2,w,c
 17187  003B80  5C20               	subwf	i2___ftadd@exp1,w,c
 17188  003B82  B0D8               	btfsc	status,0,c
 17189  003B84  D01B               	goto	i2l3803
 17190  003B86                     i2l3793:
 17191  003B86  90D8               	bcf	status,0,c
 17192  003B88  3618               	rlcf	i2___ftadd@f2,f,c
 17193  003B8A  3619               	rlcf	i2___ftadd@f2+1,f,c
 17194  003B8C  361A               	rlcf	i2___ftadd@f2+2,f,c
 17195  003B8E  061F               	decf	i2___ftadd@exp2,f,c
 17196  003B90  5020               	movf	i2___ftadd@exp1,w,c
 17197  003B92  181F               	xorwf	i2___ftadd@exp2,w,c
 17198  003B94  B4D8               	btfsc	status,2,c
 17199  003B96  D00D               	goto	i2l3801
 17200  003B98  061E               	decf	i2___ftadd@sign,f,c
 17201  003B9A  C01E  F01B         	movff	i2___ftadd@sign,??i2___ftadd
 17202  003B9E  0E07               	movlw	7
 17203  003BA0  161B               	andwf	??i2___ftadd,f,c
 17204  003BA2  B4D8               	btfsc	status,2,c
 17205  003BA4  D006               	goto	i2l3801
 17206  003BA6  D7EF               	goto	i2l3793
 17207  003BA8                     i2l3799:
 17208  003BA8  90D8               	bcf	status,0,c
 17209  003BAA  3217               	rrcf	i2___ftadd@f1+2,f,c
 17210  003BAC  3216               	rrcf	i2___ftadd@f1+1,f,c
 17211  003BAE  3215               	rrcf	i2___ftadd@f1,f,c
 17212  003BB0  2A20               	incf	i2___ftadd@exp1,f,c
 17213  003BB2                     i2l3801:
 17214  003BB2  501F               	movf	i2___ftadd@exp2,w,c
 17215  003BB4  1820               	xorwf	i2___ftadd@exp1,w,c
 17216  003BB6  B4D8               	btfsc	status,2,c
 17217  003BB8  D01F               	goto	i2l794
 17218  003BBA  D7F6               	goto	i2l3799
 17219  003BBC                     i2l3803:
 17220  003BBC  5020               	movf	i2___ftadd@exp1,w,c
 17221  003BBE  5C1F               	subwf	i2___ftadd@exp2,w,c
 17222  003BC0  B0D8               	btfsc	status,0,c
 17223  003BC2  D01A               	goto	i2l794
 17224  003BC4                     i2l3805:
 17225  003BC4  90D8               	bcf	status,0,c
 17226  003BC6  3615               	rlcf	i2___ftadd@f1,f,c
 17227  003BC8  3616               	rlcf	i2___ftadd@f1+1,f,c
 17228  003BCA  3617               	rlcf	i2___ftadd@f1+2,f,c
 17229  003BCC  0620               	decf	i2___ftadd@exp1,f,c
 17230  003BCE  5020               	movf	i2___ftadd@exp1,w,c
 17231  003BD0  181F               	xorwf	i2___ftadd@exp2,w,c
 17232  003BD2  B4D8               	btfsc	status,2,c
 17233  003BD4  D00D               	goto	i2l3813
 17234  003BD6  061E               	decf	i2___ftadd@sign,f,c
 17235  003BD8  C01E  F01B         	movff	i2___ftadd@sign,??i2___ftadd
 17236  003BDC  0E07               	movlw	7
 17237  003BDE  161B               	andwf	??i2___ftadd,f,c
 17238  003BE0  B4D8               	btfsc	status,2,c
 17239  003BE2  D006               	goto	i2l3813
 17240  003BE4  D7EF               	goto	i2l3805
 17241  003BE6                     i2l3811:
 17242  003BE6  90D8               	bcf	status,0,c
 17243  003BE8  321A               	rrcf	i2___ftadd@f2+2,f,c
 17244  003BEA  3219               	rrcf	i2___ftadd@f2+1,f,c
 17245  003BEC  3218               	rrcf	i2___ftadd@f2,f,c
 17246  003BEE  2A1F               	incf	i2___ftadd@exp2,f,c
 17247  003BF0                     i2l3813:
 17248  003BF0  501F               	movf	i2___ftadd@exp2,w,c
 17249  003BF2  1820               	xorwf	i2___ftadd@exp1,w,c
 17250  003BF4  A4D8               	btfss	status,2,c
 17251  003BF6  D7F7               	goto	i2l3811
 17252  003BF8                     i2l794:
 17253  003BF8  AE1E               	btfss	i2___ftadd@sign,7,c
 17254  003BFA  D00C               	goto	i2l803
 17255  003BFC  0EFF               	movlw	255
 17256  003BFE  1A15               	xorwf	i2___ftadd@f1,f,c
 17257  003C00  0EFF               	movlw	255
 17258  003C02  1A16               	xorwf	i2___ftadd@f1+1,f,c
 17259  003C04  0EFF               	movlw	255
 17260  003C06  1A17               	xorwf	i2___ftadd@f1+2,f,c
 17261  003C08  0E01               	movlw	1
 17262  003C0A  2615               	addwf	i2___ftadd@f1,f,c
 17263  003C0C  0E00               	movlw	0
 17264  003C0E  2216               	addwfc	i2___ftadd@f1+1,f,c
 17265  003C10  0E00               	movlw	0
 17266  003C12  2217               	addwfc	i2___ftadd@f1+2,f,c
 17267  003C14                     i2l803:
 17268  003C14  AC1E               	btfss	i2___ftadd@sign,6,c
 17269  003C16  D00C               	goto	i2l3819
 17270  003C18  0EFF               	movlw	255
 17271  003C1A  1A18               	xorwf	i2___ftadd@f2,f,c
 17272  003C1C  0EFF               	movlw	255
 17273  003C1E  1A19               	xorwf	i2___ftadd@f2+1,f,c
 17274  003C20  0EFF               	movlw	255
 17275  003C22  1A1A               	xorwf	i2___ftadd@f2+2,f,c
 17276  003C24  0E01               	movlw	1
 17277  003C26  2618               	addwf	i2___ftadd@f2,f,c
 17278  003C28  0E00               	movlw	0
 17279  003C2A  2219               	addwfc	i2___ftadd@f2+1,f,c
 17280  003C2C  0E00               	movlw	0
 17281  003C2E  221A               	addwfc	i2___ftadd@f2+2,f,c
 17282  003C30                     i2l3819:
 17283  003C30  0E00               	movlw	0
 17284  003C32  6E1E               	movwf	i2___ftadd@sign,c
 17285  003C34  5015               	movf	i2___ftadd@f1,w,c
 17286  003C36  2618               	addwf	i2___ftadd@f2,f,c
 17287  003C38  5016               	movf	i2___ftadd@f1+1,w,c
 17288  003C3A  2219               	addwfc	i2___ftadd@f2+1,f,c
 17289  003C3C  5017               	movf	i2___ftadd@f1+2,w,c
 17290  003C3E  221A               	addwfc	i2___ftadd@f2+2,f,c
 17291  003C40  AE1A               	btfss	i2___ftadd@f2+2,7,c
 17292  003C42  D00E               	goto	i2l3829
 17293  003C44  0EFF               	movlw	255
 17294  003C46  1A18               	xorwf	i2___ftadd@f2,f,c
 17295  003C48  0EFF               	movlw	255
 17296  003C4A  1A19               	xorwf	i2___ftadd@f2+1,f,c
 17297  003C4C  0EFF               	movlw	255
 17298  003C4E  1A1A               	xorwf	i2___ftadd@f2+2,f,c
 17299  003C50  0E01               	movlw	1
 17300  003C52  2618               	addwf	i2___ftadd@f2,f,c
 17301  003C54  0E00               	movlw	0
 17302  003C56  2219               	addwfc	i2___ftadd@f2+1,f,c
 17303  003C58  0E00               	movlw	0
 17304  003C5A  221A               	addwfc	i2___ftadd@f2+2,f,c
 17305  003C5C  0E01               	movlw	1
 17306  003C5E  6E1E               	movwf	i2___ftadd@sign,c
 17307  003C60                     i2l3829:
 17308  003C60  C018  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 17309  003C64  C019  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 17310  003C68  C01A  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 17311  003C6C  C020  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 17312  003C70  C01E  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 17313  003C74  EC17  F028         	call	i2___ftpack	;wreg free
 17314  003C78  C001  F015         	movff	?i2___ftpack,?i2___ftadd
 17315  003C7C  C002  F016         	movff	?i2___ftpack+1,?i2___ftadd+1
 17316  003C80  C003  F017         	movff	?i2___ftpack+2,?i2___ftadd+2
 17317  003C84  0012               	return	
 17318  003C86                     __end_ofi2___ftadd:
 17319                           	opt stack 0
 17320                           tosu	equ	0xFFF
 17321                           tosh	equ	0xFFE
 17322                           tosl	equ	0xFFD
 17323                           pclatu	equ	0xFFB
 17324                           pclath	equ	0xFFA
 17325                           tblptru	equ	0xFF8
 17326                           tblptrh	equ	0xFF7
 17327                           tblptrl	equ	0xFF6
 17328                           tablat	equ	0xFF5
 17329                           prodh	equ	0xFF4
 17330                           prodl	equ	0xFF3
 17331                           intcon	equ	0xFF2
 17332                           intcon2	equ	0xFF1
 17333                           intcon3	equ	0xFF0
 17334                           postinc0	equ	0xFEE
 17335                           fsr0h	equ	0xFEA
 17336                           fsr0l	equ	0xFE9
 17337                           wreg	equ	0xFE8
 17338                           postdec1	equ	0xFE5
 17339                           fsr1h	equ	0xFE2
 17340                           fsr1l	equ	0xFE1
 17341                           indf2	equ	0xFDF
 17342                           postinc2	equ	0xFDE
 17343                           postdec2	equ	0xFDD
 17344                           fsr2h	equ	0xFDA
 17345                           fsr2l	equ	0xFD9
 17346                           status	equ	0xFD8
 17347                           
 17348 ;; *************** function i2___ftneg *****************
 17349 ;; Defined at:
 17350 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
 17351 ;; Parameters:    Size  Location     Type
 17352 ;;  f1              3    0[COMRAM] float 
 17353 ;; Auto vars:     Size  Location     Type
 17354 ;;		None
 17355 ;; Return value:  Size  Location     Type
 17356 ;;                  3    0[COMRAM] float 
 17357 ;; Registers used:
 17358 ;;		wreg, status,2, status,0
 17359 ;; Tracked objects:
 17360 ;;		On entry : 0/0
 17361 ;;		On exit  : 0/0
 17362 ;;		Unchanged: 0/0
 17363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17364 ;;      Params:         3       0       0       0       0       0       0
 17365 ;;      Locals:         0       0       0       0       0       0       0
 17366 ;;      Temps:          0       0       0       0       0       0       0
 17367 ;;      Totals:         3       0       0       0       0       0       0
 17368 ;;Total ram usage:        3 bytes
 17369 ;; Hardware stack levels used:    1
 17370 ;; This function calls:
 17371 ;;		Nothing
 17372 ;; This function is called by:
 17373 ;;		i2__doprnt
 17374 ;; This function uses a non-reentrant model
 17375 ;;
 17376                           
 17377                           	psect	text65
 17378  005A52                     __ptext65:
 17379                           	opt stack 0
 17380  005A52                     i2___ftneg:
 17381                           	opt stack 21
 17382                           
 17383                           ;incstack = 0
 17384  005A52  5001               	movf	i2___ftneg@f1,w,c
 17385  005A54  1002               	iorwf	i2___ftneg@f1+1,w,c
 17386  005A56  1003               	iorwf	i2___ftneg@f1+2,w,c
 17387  005A58  B4D8               	btfsc	status,2,c
 17388  005A5A  D006               	goto	i2l853
 17389  005A5C  0E00               	movlw	0
 17390  005A5E  1A01               	xorwf	i2___ftneg@f1,f,c
 17391  005A60  0E00               	movlw	0
 17392  005A62  1A02               	xorwf	i2___ftneg@f1+1,f,c
 17393  005A64  0E80               	movlw	128
 17394  005A66  1A03               	xorwf	i2___ftneg@f1+2,f,c
 17395  005A68                     i2l853:
 17396  005A68  C001  F001         	movff	i2___ftneg@f1,?i2___ftneg
 17397  005A6C  C002  F002         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 17398  005A70  C003  F003         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 17399  005A74  0012               	return		;funcret
 17400  005A76                     __end_ofi2___ftneg:
 17401                           	opt stack 0
 17402                           tosu	equ	0xFFF
 17403                           tosh	equ	0xFFE
 17404                           tosl	equ	0xFFD
 17405                           pclatu	equ	0xFFB
 17406                           pclath	equ	0xFFA
 17407                           tblptru	equ	0xFF8
 17408                           tblptrh	equ	0xFF7
 17409                           tblptrl	equ	0xFF6
 17410                           tablat	equ	0xFF5
 17411                           prodh	equ	0xFF4
 17412                           prodl	equ	0xFF3
 17413                           intcon	equ	0xFF2
 17414                           intcon2	equ	0xFF1
 17415                           intcon3	equ	0xFF0
 17416                           postinc0	equ	0xFEE
 17417                           fsr0h	equ	0xFEA
 17418                           fsr0l	equ	0xFE9
 17419                           wreg	equ	0xFE8
 17420                           postdec1	equ	0xFE5
 17421                           fsr1h	equ	0xFE2
 17422                           fsr1l	equ	0xFE1
 17423                           indf2	equ	0xFDF
 17424                           postinc2	equ	0xFDE
 17425                           postdec2	equ	0xFDD
 17426                           fsr2h	equ	0xFDA
 17427                           fsr2l	equ	0xFD9
 17428                           status	equ	0xFD8
 17429                           
 17430 ;; *************** function i2___ftge *****************
 17431 ;; Defined at:
 17432 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
 17433 ;; Parameters:    Size  Location     Type
 17434 ;;  ff1             3    0[COMRAM] float 
 17435 ;;  ff2             3    3[COMRAM] float 
 17436 ;; Auto vars:     Size  Location     Type
 17437 ;;		None
 17438 ;; Return value:  Size  Location     Type
 17439 ;;		None               void
 17440 ;; Registers used:
 17441 ;;		wreg, status,2, status,0
 17442 ;; Tracked objects:
 17443 ;;		On entry : 0/0
 17444 ;;		On exit  : 0/0
 17445 ;;		Unchanged: 0/0
 17446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17447 ;;      Params:         6       0       0       0       0       0       0
 17448 ;;      Locals:         0       0       0       0       0       0       0
 17449 ;;      Temps:          3       0       0       0       0       0       0
 17450 ;;      Totals:         9       0       0       0       0       0       0
 17451 ;;Total ram usage:        9 bytes
 17452 ;; Hardware stack levels used:    1
 17453 ;; This function calls:
 17454 ;;		Nothing
 17455 ;; This function is called by:
 17456 ;;		i2__doprnt
 17457 ;; This function uses a non-reentrant model
 17458 ;;
 17459                           
 17460                           	psect	text66
 17461  005218                     __ptext66:
 17462                           	opt stack 0
 17463  005218                     i2___ftge:
 17464                           	opt stack 21
 17465                           
 17466                           ;incstack = 0
 17467  005218  AE03               	btfss	i2___ftge@ff1+2,7,c
 17468  00521A  D016               	goto	i2l4271
 17469  00521C  C001  F007         	movff	i2___ftge@ff1,??i2___ftge
 17470  005220  C002  F008         	movff	i2___ftge@ff1+1,??i2___ftge+1
 17471  005224  C003  F009         	movff	i2___ftge@ff1+2,??i2___ftge+2
 17472  005228  1E07               	comf	??i2___ftge,f,c
 17473  00522A  1E08               	comf	??i2___ftge+1,f,c
 17474  00522C  1E09               	comf	??i2___ftge+2,f,c
 17475  00522E  2A07               	incf	??i2___ftge,f,c
 17476  005230  0E00               	movlw	0
 17477  005232  2208               	addwfc	??i2___ftge+1,f,c
 17478  005234  2209               	addwfc	??i2___ftge+2,f,c
 17479  005236  0E00               	movlw	0
 17480  005238  2407               	addwf	??i2___ftge,w,c
 17481  00523A  6E01               	movwf	i2___ftge@ff1,c
 17482  00523C  0E00               	movlw	0
 17483  00523E  2008               	addwfc	??i2___ftge+1,w,c
 17484  005240  6E02               	movwf	i2___ftge@ff1+1,c
 17485  005242  0E80               	movlw	128
 17486  005244  2009               	addwfc	??i2___ftge+2,w,c
 17487  005246  6E03               	movwf	i2___ftge@ff1+2,c
 17488  005248                     i2l4271:
 17489  005248  AE06               	btfss	i2___ftge@ff2+2,7,c
 17490  00524A  D016               	goto	i2l4275
 17491  00524C  C004  F007         	movff	i2___ftge@ff2,??i2___ftge
 17492  005250  C005  F008         	movff	i2___ftge@ff2+1,??i2___ftge+1
 17493  005254  C006  F009         	movff	i2___ftge@ff2+2,??i2___ftge+2
 17494  005258  1E07               	comf	??i2___ftge,f,c
 17495  00525A  1E08               	comf	??i2___ftge+1,f,c
 17496  00525C  1E09               	comf	??i2___ftge+2,f,c
 17497  00525E  2A07               	incf	??i2___ftge,f,c
 17498  005260  0E00               	movlw	0
 17499  005262  2208               	addwfc	??i2___ftge+1,f,c
 17500  005264  2209               	addwfc	??i2___ftge+2,f,c
 17501  005266  0E00               	movlw	0
 17502  005268  2407               	addwf	??i2___ftge,w,c
 17503  00526A  6E04               	movwf	i2___ftge@ff2,c
 17504  00526C  0E00               	movlw	0
 17505  00526E  2008               	addwfc	??i2___ftge+1,w,c
 17506  005270  6E05               	movwf	i2___ftge@ff2+1,c
 17507  005272  0E80               	movlw	128
 17508  005274  2009               	addwfc	??i2___ftge+2,w,c
 17509  005276  6E06               	movwf	i2___ftge@ff2+2,c
 17510  005278                     i2l4275:
 17511  005278  0E00               	movlw	0
 17512  00527A  1A01               	xorwf	i2___ftge@ff1,f,c
 17513  00527C  0E00               	movlw	0
 17514  00527E  1A02               	xorwf	i2___ftge@ff1+1,f,c
 17515  005280  0E80               	movlw	128
 17516  005282  1A03               	xorwf	i2___ftge@ff1+2,f,c
 17517  005284  0E00               	movlw	0
 17518  005286  1A04               	xorwf	i2___ftge@ff2,f,c
 17519  005288  0E00               	movlw	0
 17520  00528A  1A05               	xorwf	i2___ftge@ff2+1,f,c
 17521  00528C  0E80               	movlw	128
 17522  00528E  1A06               	xorwf	i2___ftge@ff2+2,f,c
 17523  005290  5004               	movf	i2___ftge@ff2,w,c
 17524  005292  5C01               	subwf	i2___ftge@ff1,w,c
 17525  005294  5005               	movf	i2___ftge@ff2+1,w,c
 17526  005296  5802               	subwfb	i2___ftge@ff1+1,w,c
 17527  005298  5006               	movf	i2___ftge@ff2+2,w,c
 17528  00529A  5803               	subwfb	i2___ftge@ff1+2,w,c
 17529  00529C  B0D8               	btfsc	status,0,c
 17530  00529E  D002               	goto	i2l4281
 17531  0052A0  90D8               	bcf	status,0,c
 17532  0052A2  0012               	return	
 17533  0052A4                     i2l4281:
 17534  0052A4  80D8               	bsf	status,0,c
 17535  0052A6  0012               	return	
 17536  0052A8                     __end_ofi2___ftge:
 17537                           	opt stack 0
 17538                           tosu	equ	0xFFF
 17539                           tosh	equ	0xFFE
 17540                           tosl	equ	0xFFD
 17541                           pclatu	equ	0xFFB
 17542                           pclath	equ	0xFFA
 17543                           tblptru	equ	0xFF8
 17544                           tblptrh	equ	0xFF7
 17545                           tblptrl	equ	0xFF6
 17546                           tablat	equ	0xFF5
 17547                           prodh	equ	0xFF4
 17548                           prodl	equ	0xFF3
 17549                           intcon	equ	0xFF2
 17550                           intcon2	equ	0xFF1
 17551                           intcon3	equ	0xFF0
 17552                           postinc0	equ	0xFEE
 17553                           fsr0h	equ	0xFEA
 17554                           fsr0l	equ	0xFE9
 17555                           wreg	equ	0xFE8
 17556                           postdec1	equ	0xFE5
 17557                           fsr1h	equ	0xFE2
 17558                           fsr1l	equ	0xFE1
 17559                           indf2	equ	0xFDF
 17560                           postinc2	equ	0xFDE
 17561                           postdec2	equ	0xFDD
 17562                           fsr2h	equ	0xFDA
 17563                           fsr2l	equ	0xFD9
 17564                           status	equ	0xFD8
 17565                           
 17566 ;; *************** function ___lwtoft *****************
 17567 ;; Defined at:
 17568 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
 17569 ;; Parameters:    Size  Location     Type
 17570 ;;  c               2    8[COMRAM] unsigned int 
 17571 ;; Auto vars:     Size  Location     Type
 17572 ;;		None
 17573 ;; Return value:  Size  Location     Type
 17574 ;;                  3    8[COMRAM] float 
 17575 ;; Registers used:
 17576 ;;		wreg, status,2, status,0, cstack
 17577 ;; Tracked objects:
 17578 ;;		On entry : 0/0
 17579 ;;		On exit  : 0/0
 17580 ;;		Unchanged: 0/0
 17581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17582 ;;      Params:         3       0       0       0       0       0       0
 17583 ;;      Locals:         0       0       0       0       0       0       0
 17584 ;;      Temps:          0       0       0       0       0       0       0
 17585 ;;      Totals:         3       0       0       0       0       0       0
 17586 ;;Total ram usage:        3 bytes
 17587 ;; Hardware stack levels used:    1
 17588 ;; Hardware stack levels required when called:    1
 17589 ;; This function calls:
 17590 ;;		i2___ftpack
 17591 ;; This function is called by:
 17592 ;;		_INT0_ISR
 17593 ;; This function uses a non-reentrant model
 17594 ;;
 17595                           
 17596                           	psect	text67
 17597  005A76                     __ptext67:
 17598                           	opt stack 0
 17599  005A76                     ___lwtoft:
 17600                           	opt stack 22
 17601                           
 17602                           ;incstack = 0
 17603  005A76  C009  F001         	movff	___lwtoft@c,i2___ftpack@arg
 17604  005A7A  C00A  F002         	movff	___lwtoft@c+1,i2___ftpack@arg+1
 17605  005A7E  6A03               	clrf	i2___ftpack@arg+2,c
 17606  005A80  0E8E               	movlw	142
 17607  005A82  6E04               	movwf	i2___ftpack@exp,c
 17608  005A84  0E00               	movlw	0
 17609  005A86  6E05               	movwf	i2___ftpack@sign,c
 17610  005A88  EC17  F028         	call	i2___ftpack	;wreg free
 17611  005A8C  C001  F009         	movff	?i2___ftpack,?___lwtoft
 17612  005A90  C002  F00A         	movff	?i2___ftpack+1,?___lwtoft+1
 17613  005A94  C003  F00B         	movff	?i2___ftpack+2,?___lwtoft+2
 17614  005A98  0012               	return	
 17615  005A9A                     __end_of___lwtoft:
 17616                           	opt stack 0
 17617                           tosu	equ	0xFFF
 17618                           tosh	equ	0xFFE
 17619                           tosl	equ	0xFFD
 17620                           pclatu	equ	0xFFB
 17621                           pclath	equ	0xFFA
 17622                           tblptru	equ	0xFF8
 17623                           tblptrh	equ	0xFF7
 17624                           tblptrl	equ	0xFF6
 17625                           tablat	equ	0xFF5
 17626                           prodh	equ	0xFF4
 17627                           prodl	equ	0xFF3
 17628                           intcon	equ	0xFF2
 17629                           intcon2	equ	0xFF1
 17630                           intcon3	equ	0xFF0
 17631                           postinc0	equ	0xFEE
 17632                           fsr0h	equ	0xFEA
 17633                           fsr0l	equ	0xFE9
 17634                           wreg	equ	0xFE8
 17635                           postdec1	equ	0xFE5
 17636                           fsr1h	equ	0xFE2
 17637                           fsr1l	equ	0xFE1
 17638                           indf2	equ	0xFDF
 17639                           postinc2	equ	0xFDE
 17640                           postdec2	equ	0xFDD
 17641                           fsr2h	equ	0xFDA
 17642                           fsr2l	equ	0xFD9
 17643                           status	equ	0xFD8
 17644                           
 17645 ;; *************** function i2___ftpack *****************
 17646 ;; Defined at:
 17647 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
 17648 ;; Parameters:    Size  Location     Type
 17649 ;;  arg             3    0[COMRAM] unsigned um
 17650 ;;  exp             1    3[COMRAM] unsigned char 
 17651 ;;  sign            1    4[COMRAM] unsigned char 
 17652 ;; Auto vars:     Size  Location     Type
 17653 ;;		None
 17654 ;; Return value:  Size  Location     Type
 17655 ;;                  3    0[COMRAM] float 
 17656 ;; Registers used:
 17657 ;;		wreg, status,2, status,0
 17658 ;; Tracked objects:
 17659 ;;		On entry : 0/0
 17660 ;;		On exit  : 0/0
 17661 ;;		Unchanged: 0/0
 17662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17663 ;;      Params:         5       0       0       0       0       0       0
 17664 ;;      Locals:         0       0       0       0       0       0       0
 17665 ;;      Temps:          3       0       0       0       0       0       0
 17666 ;;      Totals:         8       0       0       0       0       0       0
 17667 ;;Total ram usage:        8 bytes
 17668 ;; Hardware stack levels used:    1
 17669 ;; This function calls:
 17670 ;;		Nothing
 17671 ;; This function is called by:
 17672 ;;		___lwtoft
 17673 ;;		i2___ftadd
 17674 ;;		i2___ftdiv
 17675 ;;		i2___ftmul
 17676 ;;		i2___lltoft
 17677 ;; This function uses a non-reentrant model
 17678 ;;
 17679                           
 17680                           	psect	text68
 17681  00502E                     __ptext68:
 17682                           	opt stack 0
 17683  00502E                     i2___ftpack:
 17684                           	opt stack 19
 17685                           
 17686                           ;incstack = 0
 17687  00502E  5004               	movf	i2___ftpack@exp,w,c
 17688  005030  B4D8               	btfsc	status,2,c
 17689  005032  D005               	goto	i2l3605
 17690  005034  5001               	movf	i2___ftpack@arg,w,c
 17691  005036  1002               	iorwf	i2___ftpack@arg+1,w,c
 17692  005038  1003               	iorwf	i2___ftpack@arg+2,w,c
 17693  00503A  A4D8               	btfss	status,2,c
 17694  00503C  D00C               	goto	i2l3611
 17695  00503E                     i2l3605:
 17696  00503E  0E00               	movlw	0
 17697  005040  6E01               	movwf	?i2___ftpack,c
 17698  005042  0E00               	movlw	0
 17699  005044  6E02               	movwf	?i2___ftpack+1,c
 17700  005046  0E00               	movlw	0
 17701  005048  6E03               	movwf	?i2___ftpack+2,c
 17702  00504A  0012               	return	
 17703  00504C                     i2l3609:
 17704  00504C  2A04               	incf	i2___ftpack@exp,f,c
 17705  00504E  90D8               	bcf	status,0,c
 17706  005050  3203               	rrcf	i2___ftpack@arg+2,f,c
 17707  005052  3202               	rrcf	i2___ftpack@arg+1,f,c
 17708  005054  3201               	rrcf	i2___ftpack@arg,f,c
 17709  005056                     i2l3611:
 17710  005056  0E00               	movlw	0
 17711  005058  1401               	andwf	i2___ftpack@arg,w,c
 17712  00505A  6E06               	movwf	??i2___ftpack& (0+255),c
 17713  00505C  0E00               	movlw	0
 17714  00505E  1402               	andwf	i2___ftpack@arg+1,w,c
 17715  005060  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 17716  005062  0EFE               	movlw	254
 17717  005064  1403               	andwf	i2___ftpack@arg+2,w,c
 17718  005066  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 17719  005068  5006               	movf	??i2___ftpack,w,c
 17720  00506A  1007               	iorwf	??i2___ftpack+1,w,c
 17721  00506C  1008               	iorwf	??i2___ftpack+2,w,c
 17722  00506E  B4D8               	btfsc	status,2,c
 17723  005070  D00C               	goto	i2l3617
 17724  005072  D7EC               	goto	i2l3609
 17725  005074                     i2l3613:
 17726  005074  2A04               	incf	i2___ftpack@exp,f,c
 17727  005076  0E01               	movlw	1
 17728  005078  2601               	addwf	i2___ftpack@arg,f,c
 17729  00507A  0E00               	movlw	0
 17730  00507C  2202               	addwfc	i2___ftpack@arg+1,f,c
 17731  00507E  0E00               	movlw	0
 17732  005080  2203               	addwfc	i2___ftpack@arg+2,f,c
 17733  005082  90D8               	bcf	status,0,c
 17734  005084  3203               	rrcf	i2___ftpack@arg+2,f,c
 17735  005086  3202               	rrcf	i2___ftpack@arg+1,f,c
 17736  005088  3201               	rrcf	i2___ftpack@arg,f,c
 17737  00508A                     i2l3617:
 17738  00508A  0E00               	movlw	0
 17739  00508C  1401               	andwf	i2___ftpack@arg,w,c
 17740  00508E  6E06               	movwf	??i2___ftpack& (0+255),c
 17741  005090  0E00               	movlw	0
 17742  005092  1402               	andwf	i2___ftpack@arg+1,w,c
 17743  005094  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 17744  005096  0EFF               	movlw	255
 17745  005098  1403               	andwf	i2___ftpack@arg+2,w,c
 17746  00509A  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 17747  00509C  5006               	movf	??i2___ftpack,w,c
 17748  00509E  1007               	iorwf	??i2___ftpack+1,w,c
 17749  0050A0  1008               	iorwf	??i2___ftpack+2,w,c
 17750  0050A2  B4D8               	btfsc	status,2,c
 17751  0050A4  D006               	goto	i2l3621
 17752  0050A6  D7E6               	goto	i2l3613
 17753  0050A8                     i2l3619:
 17754  0050A8  0604               	decf	i2___ftpack@exp,f,c
 17755  0050AA  90D8               	bcf	status,0,c
 17756  0050AC  3601               	rlcf	i2___ftpack@arg,f,c
 17757  0050AE  3602               	rlcf	i2___ftpack@arg+1,f,c
 17758  0050B0  3603               	rlcf	i2___ftpack@arg+2,f,c
 17759  0050B2                     i2l3621:
 17760  0050B2  BE02               	btfsc	i2___ftpack@arg+1,7,c
 17761  0050B4  D003               	goto	i2l756
 17762  0050B6  0E02               	movlw	2
 17763  0050B8  6004               	cpfslt	i2___ftpack@exp,c
 17764  0050BA  D7F6               	goto	i2l3619
 17765  0050BC                     i2l756:
 17766  0050BC  A004               	btfss	i2___ftpack@exp,0,c
 17767  0050BE  9E02               	bcf	i2___ftpack@arg+1,7,c
 17768  0050C0  90D8               	bcf	status,0,c
 17769  0050C2  3204               	rrcf	i2___ftpack@exp,f,c
 17770  0050C4  5004               	movf	i2___ftpack@exp,w,c
 17771  0050C6  1203               	iorwf	i2___ftpack@arg+2,f,c
 17772  0050C8  5005               	movf	i2___ftpack@sign,w,c
 17773  0050CA  A4D8               	btfss	status,2,c
 17774  0050CC  8E03               	bsf	i2___ftpack@arg+2,7,c
 17775  0050CE  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 17776  0050D2  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 17777  0050D6  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 17778  0050DA  0012               	return	
 17779  0050DC                     __end_ofi2___ftpack:
 17780                           	opt stack 0
 17781                           tosu	equ	0xFFF
 17782                           tosh	equ	0xFFE
 17783                           tosl	equ	0xFFD
 17784                           pclatu	equ	0xFFB
 17785                           pclath	equ	0xFFA
 17786                           tblptru	equ	0xFF8
 17787                           tblptrh	equ	0xFF7
 17788                           tblptrl	equ	0xFF6
 17789                           tablat	equ	0xFF5
 17790                           prodh	equ	0xFF4
 17791                           prodl	equ	0xFF3
 17792                           intcon	equ	0xFF2
 17793                           intcon2	equ	0xFF1
 17794                           intcon3	equ	0xFF0
 17795                           postinc0	equ	0xFEE
 17796                           fsr0h	equ	0xFEA
 17797                           fsr0l	equ	0xFE9
 17798                           wreg	equ	0xFE8
 17799                           postdec1	equ	0xFE5
 17800                           fsr1h	equ	0xFE2
 17801                           fsr1l	equ	0xFE1
 17802                           indf2	equ	0xFDF
 17803                           postinc2	equ	0xFDE
 17804                           postdec2	equ	0xFDD
 17805                           fsr2h	equ	0xFDA
 17806                           fsr2l	equ	0xFD9
 17807                           status	equ	0xFD8
 17808                           
 17809 ;; *************** function _TMR0_StopTimer *****************
 17810 ;; Defined at:
 17811 ;;		line 54 in file "mcc_generated_files/tmr0.c"
 17812 ;; Parameters:    Size  Location     Type
 17813 ;;		None
 17814 ;; Auto vars:     Size  Location     Type
 17815 ;;		None
 17816 ;; Return value:  Size  Location     Type
 17817 ;;                  1    wreg      void 
 17818 ;; Registers used:
 17819 ;;		None
 17820 ;; Tracked objects:
 17821 ;;		On entry : 0/0
 17822 ;;		On exit  : 0/0
 17823 ;;		Unchanged: 0/0
 17824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17825 ;;      Params:         0       0       0       0       0       0       0
 17826 ;;      Locals:         0       0       0       0       0       0       0
 17827 ;;      Temps:          0       0       0       0       0       0       0
 17828 ;;      Totals:         0       0       0       0       0       0       0
 17829 ;;Total ram usage:        0 bytes
 17830 ;; Hardware stack levels used:    1
 17831 ;; This function calls:
 17832 ;;		Nothing
 17833 ;; This function is called by:
 17834 ;;		_INT0_ISR
 17835 ;; This function uses a non-reentrant model
 17836 ;;
 17837                           
 17838                           	psect	text69
 17839  005B6E                     __ptext69:
 17840                           	opt stack 0
 17841  005B6E                     _TMR0_StopTimer:
 17842                           	opt stack 23
 17843                           
 17844                           ;tmr0.c: 57: T0CONbits.TMR0ON = 0;
 17845                           
 17846                           ;incstack = 0
 17847  005B6E  9ED5               	bcf	4053,7,c	;volatile
 17848  005B70  0012               	return		;funcret
 17849  005B72                     __end_of_TMR0_StopTimer:
 17850                           	opt stack 0
 17851                           tosu	equ	0xFFF
 17852                           tosh	equ	0xFFE
 17853                           tosl	equ	0xFFD
 17854                           pclatu	equ	0xFFB
 17855                           pclath	equ	0xFFA
 17856                           tblptru	equ	0xFF8
 17857                           tblptrh	equ	0xFF7
 17858                           tblptrl	equ	0xFF6
 17859                           tablat	equ	0xFF5
 17860                           prodh	equ	0xFF4
 17861                           prodl	equ	0xFF3
 17862                           intcon	equ	0xFF2
 17863                           intcon2	equ	0xFF1
 17864                           intcon3	equ	0xFF0
 17865                           postinc0	equ	0xFEE
 17866                           fsr0h	equ	0xFEA
 17867                           fsr0l	equ	0xFE9
 17868                           wreg	equ	0xFE8
 17869                           postdec1	equ	0xFE5
 17870                           fsr1h	equ	0xFE2
 17871                           fsr1l	equ	0xFE1
 17872                           indf2	equ	0xFDF
 17873                           postinc2	equ	0xFDE
 17874                           postdec2	equ	0xFDD
 17875                           fsr2h	equ	0xFDA
 17876                           fsr2l	equ	0xFD9
 17877                           status	equ	0xFD8
 17878                           
 17879 ;; *************** function _TMR0_Reload *****************
 17880 ;; Defined at:
 17881 ;;		line 82 in file "mcc_generated_files/tmr0.c"
 17882 ;; Parameters:    Size  Location     Type
 17883 ;;		None
 17884 ;; Auto vars:     Size  Location     Type
 17885 ;;		None
 17886 ;; Return value:  Size  Location     Type
 17887 ;;                  1    wreg      void 
 17888 ;; Registers used:
 17889 ;;		wreg, status,2
 17890 ;; Tracked objects:
 17891 ;;		On entry : 0/0
 17892 ;;		On exit  : 0/0
 17893 ;;		Unchanged: 0/0
 17894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17895 ;;      Params:         0       0       0       0       0       0       0
 17896 ;;      Locals:         0       0       0       0       0       0       0
 17897 ;;      Temps:          0       0       0       0       0       0       0
 17898 ;;      Totals:         0       0       0       0       0       0       0
 17899 ;;Total ram usage:        0 bytes
 17900 ;; Hardware stack levels used:    1
 17901 ;; This function calls:
 17902 ;;		Nothing
 17903 ;; This function is called by:
 17904 ;;		_INT0_ISR
 17905 ;; This function uses a non-reentrant model
 17906 ;;
 17907                           
 17908                           	psect	text70
 17909  005B54                     __ptext70:
 17910                           	opt stack 0
 17911  005B54                     _TMR0_Reload:
 17912                           	opt stack 23
 17913                           
 17914                           ;tmr0.c: 85: TMR0H = timer0ReloadVal >> 8;
 17915                           
 17916                           ;incstack = 0
 17917  005B54  505E               	movf	_timer0ReloadVal+1,w,c	;volatile
 17918  005B56  6ED7               	movwf	4055,c	;volatile
 17919                           
 17920                           ;tmr0.c: 86: TMR0L = (uint8_t) timer0ReloadVal;
 17921  005B58  C05D  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 17922  005B5C  0012               	return		;funcret
 17923  005B5E                     __end_of_TMR0_Reload:
 17924                           	opt stack 0
 17925                           tosu	equ	0xFFF
 17926                           tosh	equ	0xFFE
 17927                           tosl	equ	0xFFD
 17928                           pclatu	equ	0xFFB
 17929                           pclath	equ	0xFFA
 17930                           tblptru	equ	0xFF8
 17931                           tblptrh	equ	0xFF7
 17932                           tblptrl	equ	0xFF6
 17933                           tablat	equ	0xFF5
 17934                           prodh	equ	0xFF4
 17935                           prodl	equ	0xFF3
 17936                           intcon	equ	0xFF2
 17937                           intcon2	equ	0xFF1
 17938                           intcon3	equ	0xFF0
 17939                           postinc0	equ	0xFEE
 17940                           fsr0h	equ	0xFEA
 17941                           fsr0l	equ	0xFE9
 17942                           wreg	equ	0xFE8
 17943                           postdec1	equ	0xFE5
 17944                           fsr1h	equ	0xFE2
 17945                           fsr1l	equ	0xFE1
 17946                           indf2	equ	0xFDF
 17947                           postinc2	equ	0xFDE
 17948                           postdec2	equ	0xFDD
 17949                           fsr2h	equ	0xFDA
 17950                           fsr2l	equ	0xFD9
 17951                           status	equ	0xFD8
 17952                           
 17953 ;; *************** function _TMR0_ReadTimer *****************
 17954 ;; Defined at:
 17955 ;;		line 60 in file "mcc_generated_files/tmr0.c"
 17956 ;; Parameters:    Size  Location     Type
 17957 ;;		None
 17958 ;; Auto vars:     Size  Location     Type
 17959 ;;  readVal         2    6[COMRAM] unsigned int 
 17960 ;;  readValHigh     1    9[COMRAM] unsigned char 
 17961 ;;  readValLow      1    8[COMRAM] unsigned char 
 17962 ;; Return value:  Size  Location     Type
 17963 ;;                  2    0[COMRAM] unsigned int 
 17964 ;; Registers used:
 17965 ;;		wreg, status,2, status,0
 17966 ;; Tracked objects:
 17967 ;;		On entry : 0/0
 17968 ;;		On exit  : 0/0
 17969 ;;		Unchanged: 0/0
 17970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17971 ;;      Params:         2       0       0       0       0       0       0
 17972 ;;      Locals:         4       0       0       0       0       0       0
 17973 ;;      Temps:          4       0       0       0       0       0       0
 17974 ;;      Totals:        10       0       0       0       0       0       0
 17975 ;;Total ram usage:       10 bytes
 17976 ;; Hardware stack levels used:    1
 17977 ;; This function calls:
 17978 ;;		Nothing
 17979 ;; This function is called by:
 17980 ;;		_INT0_ISR
 17981 ;; This function uses a non-reentrant model
 17982 ;;
 17983                           
 17984                           	psect	text71
 17985  0057EE                     __ptext71:
 17986                           	opt stack 0
 17987  0057EE                     _TMR0_ReadTimer:
 17988                           	opt stack 23
 17989                           
 17990                           ;tmr0.c: 62: uint16_t readVal;
 17991                           ;tmr0.c: 63: uint8_t readValLow;
 17992                           ;tmr0.c: 64: uint8_t readValHigh;
 17993                           ;tmr0.c: 66: readValLow = TMR0L;
 17994                           
 17995                           ;incstack = 0
 17996  0057EE  CFD6 F009          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
 17997                           
 17998                           ;tmr0.c: 67: readValHigh = TMR0H;
 17999  0057F2  CFD7 F00A          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
 18000                           
 18001                           ;tmr0.c: 70: readVal = ((uint16_t)readValHigh << 8) + readValLow - (timer0ReloadVal);
 18002  0057F6  C05D  F003         	movff	_timer0ReloadVal,??_TMR0_ReadTimer	;volatile
 18003  0057FA  C05E  F004         	movff	_timer0ReloadVal+1,??_TMR0_ReadTimer+1	;volatile
 18004  0057FE  1E03               	comf	??_TMR0_ReadTimer,f,c
 18005  005800  1E04               	comf	??_TMR0_ReadTimer+1,f,c
 18006  005802  4A03               	infsnz	??_TMR0_ReadTimer,f,c
 18007  005804  2A04               	incf	??_TMR0_ReadTimer+1,f,c
 18008  005806  5009               	movf	TMR0_ReadTimer@readValLow,w,c
 18009  005808  C00A  F005         	movff	TMR0_ReadTimer@readValHigh,??_TMR0_ReadTimer+2
 18010  00580C  6A06               	clrf	(??_TMR0_ReadTimer+3)& (0+255),c
 18011  00580E  C005  F006         	movff	??_TMR0_ReadTimer+2,??_TMR0_ReadTimer+3
 18012  005812  6A05               	clrf	??_TMR0_ReadTimer+2,c
 18013  005814  2605               	addwf	??_TMR0_ReadTimer+2,f,c
 18014  005816  0E00               	movlw	0
 18015  005818  2206               	addwfc	??_TMR0_ReadTimer+3,f,c
 18016  00581A  5003               	movf	??_TMR0_ReadTimer,w,c
 18017  00581C  2405               	addwf	??_TMR0_ReadTimer+2,w,c
 18018  00581E  6E07               	movwf	TMR0_ReadTimer@readVal,c
 18019  005820  5004               	movf	??_TMR0_ReadTimer+1,w,c
 18020  005822  2006               	addwfc	??_TMR0_ReadTimer+3,w,c
 18021  005824  6E08               	movwf	TMR0_ReadTimer@readVal+1,c
 18022                           
 18023                           ;tmr0.c: 72: return readVal;
 18024  005826  C007  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
 18025  00582A  C008  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
 18026  00582E  0012               	return	
 18027  005830                     __end_of_TMR0_ReadTimer:
 18028                           	opt stack 0
 18029                           tosu	equ	0xFFF
 18030                           tosh	equ	0xFFE
 18031                           tosl	equ	0xFFD
 18032                           pclatu	equ	0xFFB
 18033                           pclath	equ	0xFFA
 18034                           tblptru	equ	0xFF8
 18035                           tblptrh	equ	0xFF7
 18036                           tblptrl	equ	0xFF6
 18037                           tablat	equ	0xFF5
 18038                           prodh	equ	0xFF4
 18039                           prodl	equ	0xFF3
 18040                           intcon	equ	0xFF2
 18041                           intcon2	equ	0xFF1
 18042                           intcon3	equ	0xFF0
 18043                           postinc0	equ	0xFEE
 18044                           fsr0h	equ	0xFEA
 18045                           fsr0l	equ	0xFE9
 18046                           wreg	equ	0xFE8
 18047                           postdec1	equ	0xFE5
 18048                           fsr1h	equ	0xFE2
 18049                           fsr1l	equ	0xFE1
 18050                           indf2	equ	0xFDF
 18051                           postinc2	equ	0xFDE
 18052                           postdec2	equ	0xFDD
 18053                           fsr2h	equ	0xFDA
 18054                           fsr2l	equ	0xFD9
 18055                           status	equ	0xFD8
 18056                           
 18057 ;; *************** function _SetRange *****************
 18058 ;; Defined at:
 18059 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 18060 ;; Parameters:    Size  Location     Type
 18061 ;;  new_range       1    wreg     unsigned char 
 18062 ;; Auto vars:     Size  Location     Type
 18063 ;;  new_range       1   10[COMRAM] unsigned char 
 18064 ;; Return value:  Size  Location     Type
 18065 ;;                  1    wreg      void 
 18066 ;; Registers used:
 18067 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 18068 ;; Tracked objects:
 18069 ;;		On entry : 0/0
 18070 ;;		On exit  : 0/0
 18071 ;;		Unchanged: 0/0
 18072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18073 ;;      Params:         0       0       0       0       0       0       0
 18074 ;;      Locals:         1       0       0       0       0       0       0
 18075 ;;      Temps:         10       0       0       0       0       0       0
 18076 ;;      Totals:        11       0       0       0       0       0       0
 18077 ;;Total ram usage:       11 bytes
 18078 ;; Hardware stack levels used:    1
 18079 ;; This function calls:
 18080 ;;		Nothing
 18081 ;; This function is called by:
 18082 ;;		_INT1_ISR
 18083 ;;		_INT0_ISR
 18084 ;;		_TMR0_DefaultInterruptHandler
 18085 ;; This function uses a non-reentrant model
 18086 ;;
 18087                           
 18088                           	psect	text72
 18089  003C86                     __ptext72:
 18090                           	opt stack 0
 18091  003C86                     _SetRange:
 18092                           	opt stack 22
 18093                           
 18094                           ;incstack = 0
 18095                           ;SetRange@new_range stored from wreg
 18096  003C86  6E0B               	movwf	SetRange@new_range,c
 18097                           
 18098                           ;ext_int.c: 44: LATC |= (1 << R1_BIT[0]) | (1 << R1_BIT[1]) | (1 << R1_BIT[2]) | (1 << R
      +                          1_BIT[3]) | (1 << R1_BIT[4]);
 18099  003C88  0E8A               	movlw	low (_R1_BIT+4)
 18100  003C8A  6EF6               	movwf	tblptrl,c
 18101  003C8C  0E06               	movlw	high (_R1_BIT+4)
 18102  003C8E  6EF7               	movwf	tblptrh,c
 18103  003C90                     	if	0	;tblptru may be non-zero
 18104  003C90                     	endif
 18105  003C90                     	if	0	;tblptru may be non-zero
 18106  003C90                     	endif
 18107  003C90  0008               	tblrd		*
 18108  003C92  CFF5 F001          	movff	tablat,??_SetRange
 18109  003C96  0E01               	movlw	1
 18110  003C98  6E02               	movwf	(??_SetRange+1)& (0+255),c
 18111  003C9A  2A01               	incf	??_SetRange,f,c
 18112  003C9C  D002               	goto	i2u559_44
 18113  003C9E                     i2u559_45:
 18114  003C9E  90D8               	bcf	status,0,c
 18115  003CA0  3602               	rlcf	??_SetRange+1,f,c
 18116  003CA2                     i2u559_44:
 18117  003CA2  2E01               	decfsz	??_SetRange,f,c
 18118  003CA4  D7FC               	goto	i2u559_45
 18119  003CA6  0E89               	movlw	low (_R1_BIT+3)
 18120  003CA8  6EF6               	movwf	tblptrl,c
 18121  003CAA  0E06               	movlw	high (_R1_BIT+3)
 18122  003CAC  6EF7               	movwf	tblptrh,c
 18123  003CAE                     	if	0	;tblptru may be non-zero
 18124  003CAE                     	endif
 18125  003CAE                     	if	0	;tblptru may be non-zero
 18126  003CAE                     	endif
 18127  003CAE  0008               	tblrd		*
 18128  003CB0  CFF5 F003          	movff	tablat,??_SetRange+2
 18129  003CB4  0E01               	movlw	1
 18130  003CB6  6E04               	movwf	(??_SetRange+3)& (0+255),c
 18131  003CB8  2A03               	incf	??_SetRange+2,f,c
 18132  003CBA  D002               	goto	i2u560_44
 18133  003CBC                     i2u560_45:
 18134  003CBC  90D8               	bcf	status,0,c
 18135  003CBE  3604               	rlcf	??_SetRange+3,f,c
 18136  003CC0                     i2u560_44:
 18137  003CC0  2E03               	decfsz	??_SetRange+2,f,c
 18138  003CC2  D7FC               	goto	i2u560_45
 18139  003CC4  0E88               	movlw	low (_R1_BIT+2)
 18140  003CC6  6EF6               	movwf	tblptrl,c
 18141  003CC8  0E06               	movlw	high (_R1_BIT+2)
 18142  003CCA  6EF7               	movwf	tblptrh,c
 18143  003CCC                     	if	0	;tblptru may be non-zero
 18144  003CCC                     	endif
 18145  003CCC                     	if	0	;tblptru may be non-zero
 18146  003CCC                     	endif
 18147  003CCC  0008               	tblrd		*
 18148  003CCE  CFF5 F005          	movff	tablat,??_SetRange+4
 18149  003CD2  0E01               	movlw	1
 18150  003CD4  6E06               	movwf	(??_SetRange+5)& (0+255),c
 18151  003CD6  2A05               	incf	??_SetRange+4,f,c
 18152  003CD8  D002               	goto	i2u561_44
 18153  003CDA                     i2u561_45:
 18154  003CDA  90D8               	bcf	status,0,c
 18155  003CDC  3606               	rlcf	??_SetRange+5,f,c
 18156  003CDE                     i2u561_44:
 18157  003CDE  2E05               	decfsz	??_SetRange+4,f,c
 18158  003CE0  D7FC               	goto	i2u561_45
 18159  003CE2  0E87               	movlw	low (_R1_BIT+1)
 18160  003CE4  6EF6               	movwf	tblptrl,c
 18161  003CE6  0E06               	movlw	high (_R1_BIT+1)
 18162  003CE8  6EF7               	movwf	tblptrh,c
 18163  003CEA                     	if	0	;tblptru may be non-zero
 18164  003CEA                     	endif
 18165  003CEA                     	if	0	;tblptru may be non-zero
 18166  003CEA                     	endif
 18167  003CEA  0008               	tblrd		*
 18168  003CEC  CFF5 F007          	movff	tablat,??_SetRange+6
 18169  003CF0  0E01               	movlw	1
 18170  003CF2  6E08               	movwf	(??_SetRange+7)& (0+255),c
 18171  003CF4  2A07               	incf	??_SetRange+6,f,c
 18172  003CF6  D002               	goto	i2u562_44
 18173  003CF8                     i2u562_45:
 18174  003CF8  90D8               	bcf	status,0,c
 18175  003CFA  3608               	rlcf	??_SetRange+7,f,c
 18176  003CFC                     i2u562_44:
 18177  003CFC  2E07               	decfsz	??_SetRange+6,f,c
 18178  003CFE  D7FC               	goto	i2u562_45
 18179  003D00  0E86               	movlw	low _R1_BIT
 18180  003D02  6EF6               	movwf	tblptrl,c
 18181  003D04                     	if	1	;There is more than 1 active tblptr byte
 18182  003D04  0E06               	movlw	high _R1_BIT
 18183  003D06  6EF7               	movwf	tblptrh,c
 18184  003D08                     	endif
 18185  003D08                     	if	0	;There are less than 3 active tblptr bytes
 18186  003D08                     	endif
 18187  003D08  0008               	tblrd		*
 18188  003D0A  CFF5 F009          	movff	tablat,??_SetRange+8
 18189  003D0E  0E01               	movlw	1
 18190  003D10  6E0A               	movwf	(??_SetRange+9)& (0+255),c
 18191  003D12  2A09               	incf	??_SetRange+8,f,c
 18192  003D14  D002               	goto	i2u563_44
 18193  003D16                     i2u563_45:
 18194  003D16  90D8               	bcf	status,0,c
 18195  003D18  360A               	rlcf	??_SetRange+9,f,c
 18196  003D1A                     i2u563_44:
 18197  003D1A  2E09               	decfsz	??_SetRange+8,f,c
 18198  003D1C  D7FC               	goto	i2u563_45
 18199  003D1E  500A               	movf	??_SetRange+9,w,c
 18200  003D20  1008               	iorwf	??_SetRange+7,w,c
 18201  003D22  1006               	iorwf	??_SetRange+5,w,c
 18202  003D24  1004               	iorwf	??_SetRange+3,w,c
 18203  003D26  1002               	iorwf	??_SetRange+1,w,c
 18204  003D28  128B               	iorwf	3979,f,c	;volatile
 18205                           
 18206                           ;ext_int.c: 45: LATB |= (1 << RSET_BIT[0]) | (1 << RSET_BIT[1]) | (1 << RSET_BIT[3]) | (
      +                          1 << RSET_BIT[4]);
 18207  003D2A  0E8F               	movlw	low (_RSET_BIT+4)
 18208  003D2C  6EF6               	movwf	tblptrl,c
 18209  003D2E  0E06               	movlw	high (_RSET_BIT+4)
 18210  003D30  6EF7               	movwf	tblptrh,c
 18211  003D32                     	if	0	;tblptru may be non-zero
 18212  003D32                     	endif
 18213  003D32                     	if	0	;tblptru may be non-zero
 18214  003D32                     	endif
 18215  003D32  0008               	tblrd		*
 18216  003D34  CFF5 F001          	movff	tablat,??_SetRange
 18217  003D38  0E01               	movlw	1
 18218  003D3A  6E02               	movwf	(??_SetRange+1)& (0+255),c
 18219  003D3C  2A01               	incf	??_SetRange,f,c
 18220  003D3E  D002               	goto	i2u564_44
 18221  003D40                     i2u564_45:
 18222  003D40  90D8               	bcf	status,0,c
 18223  003D42  3602               	rlcf	??_SetRange+1,f,c
 18224  003D44                     i2u564_44:
 18225  003D44  2E01               	decfsz	??_SetRange,f,c
 18226  003D46  D7FC               	goto	i2u564_45
 18227  003D48  0E8E               	movlw	low (_RSET_BIT+3)
 18228  003D4A  6EF6               	movwf	tblptrl,c
 18229  003D4C  0E06               	movlw	high (_RSET_BIT+3)
 18230  003D4E  6EF7               	movwf	tblptrh,c
 18231  003D50                     	if	0	;tblptru may be non-zero
 18232  003D50                     	endif
 18233  003D50                     	if	0	;tblptru may be non-zero
 18234  003D50                     	endif
 18235  003D50  0008               	tblrd		*
 18236  003D52  CFF5 F003          	movff	tablat,??_SetRange+2
 18237  003D56  0E01               	movlw	1
 18238  003D58  6E04               	movwf	(??_SetRange+3)& (0+255),c
 18239  003D5A  2A03               	incf	??_SetRange+2,f,c
 18240  003D5C  D002               	goto	i2u565_44
 18241  003D5E                     i2u565_45:
 18242  003D5E  90D8               	bcf	status,0,c
 18243  003D60  3604               	rlcf	??_SetRange+3,f,c
 18244  003D62                     i2u565_44:
 18245  003D62  2E03               	decfsz	??_SetRange+2,f,c
 18246  003D64  D7FC               	goto	i2u565_45
 18247  003D66  0E8C               	movlw	low (_RSET_BIT+1)
 18248  003D68  6EF6               	movwf	tblptrl,c
 18249  003D6A  0E06               	movlw	high (_RSET_BIT+1)
 18250  003D6C  6EF7               	movwf	tblptrh,c
 18251  003D6E                     	if	0	;tblptru may be non-zero
 18252  003D6E                     	endif
 18253  003D6E                     	if	0	;tblptru may be non-zero
 18254  003D6E                     	endif
 18255  003D6E  0008               	tblrd		*
 18256  003D70  CFF5 F005          	movff	tablat,??_SetRange+4
 18257  003D74  0E01               	movlw	1
 18258  003D76  6E06               	movwf	(??_SetRange+5)& (0+255),c
 18259  003D78  2A05               	incf	??_SetRange+4,f,c
 18260  003D7A  D002               	goto	i2u566_44
 18261  003D7C                     i2u566_45:
 18262  003D7C  90D8               	bcf	status,0,c
 18263  003D7E  3606               	rlcf	??_SetRange+5,f,c
 18264  003D80                     i2u566_44:
 18265  003D80  2E05               	decfsz	??_SetRange+4,f,c
 18266  003D82  D7FC               	goto	i2u566_45
 18267  003D84  0E8B               	movlw	low _RSET_BIT
 18268  003D86  6EF6               	movwf	tblptrl,c
 18269  003D88                     	if	1	;There is more than 1 active tblptr byte
 18270  003D88  0E06               	movlw	high _RSET_BIT
 18271  003D8A  6EF7               	movwf	tblptrh,c
 18272  003D8C                     	endif
 18273  003D8C                     	if	0	;There are less than 3 active tblptr bytes
 18274  003D8C                     	endif
 18275  003D8C  0008               	tblrd		*
 18276  003D8E  CFF5 F007          	movff	tablat,??_SetRange+6
 18277  003D92  0E01               	movlw	1
 18278  003D94  6E08               	movwf	(??_SetRange+7)& (0+255),c
 18279  003D96  2A07               	incf	??_SetRange+6,f,c
 18280  003D98  D002               	goto	i2u567_44
 18281  003D9A                     i2u567_45:
 18282  003D9A  90D8               	bcf	status,0,c
 18283  003D9C  3608               	rlcf	??_SetRange+7,f,c
 18284  003D9E                     i2u567_44:
 18285  003D9E  2E07               	decfsz	??_SetRange+6,f,c
 18286  003DA0  D7FC               	goto	i2u567_45
 18287  003DA2  5008               	movf	??_SetRange+7,w,c
 18288  003DA4  1006               	iorwf	??_SetRange+5,w,c
 18289  003DA6  1004               	iorwf	??_SetRange+3,w,c
 18290  003DA8  1002               	iorwf	??_SetRange+1,w,c
 18291  003DAA  128A               	iorwf	3978,f,c	;volatile
 18292                           
 18293                           ;ext_int.c: 47: LATC &= ~(1 << R1_BIT[new_range - 1]);
 18294  003DAC  0EFF               	movlw	255
 18295  003DAE  6E01               	movwf	??_SetRange& (0+255),c
 18296  003DB0  0EFF               	movlw	255
 18297  003DB2  6E02               	movwf	(??_SetRange+1)& (0+255),c
 18298  003DB4  500B               	movf	SetRange@new_range,w,c
 18299  003DB6  6E03               	movwf	(??_SetRange+2)& (0+255),c
 18300  003DB8  6A04               	clrf	(??_SetRange+3)& (0+255),c
 18301  003DBA  5001               	movf	??_SetRange,w,c
 18302  003DBC  2603               	addwf	??_SetRange+2,f,c
 18303  003DBE  5002               	movf	??_SetRange+1,w,c
 18304  003DC0  2204               	addwfc	??_SetRange+3,f,c
 18305  003DC2  0E86               	movlw	low _R1_BIT
 18306  003DC4  2403               	addwf	??_SetRange+2,w,c
 18307  003DC6  6EF6               	movwf	tblptrl,c
 18308  003DC8  0E06               	movlw	high _R1_BIT
 18309  003DCA  2004               	addwfc	??_SetRange+3,w,c
 18310  003DCC  6EF7               	movwf	tblptrh,c
 18311  003DCE                     	if	0	;There are less than 3 active tblptr bytes
 18312  003DCE                     	endif
 18313  003DCE  0008               	tblrd		*
 18314  003DD0  CFF5 F005          	movff	tablat,??_SetRange+4
 18315  003DD4  0E01               	movlw	1
 18316  003DD6  6E06               	movwf	(??_SetRange+5)& (0+255),c
 18317  003DD8  2A05               	incf	??_SetRange+4,f,c
 18318  003DDA  D002               	goto	i2u568_44
 18319  003DDC                     i2u568_45:
 18320  003DDC  90D8               	bcf	status,0,c
 18321  003DDE  3606               	rlcf	??_SetRange+5,f,c
 18322  003DE0                     i2u568_44:
 18323  003DE0  2E05               	decfsz	??_SetRange+4,f,c
 18324  003DE2  D7FC               	goto	i2u568_45
 18325  003DE4  5006               	movf	??_SetRange+5,w,c
 18326  003DE6  0AFF               	xorlw	255
 18327  003DE8  168B               	andwf	3979,f,c	;volatile
 18328                           
 18329                           ;ext_int.c: 48: LATB &= ~(1 << RSET_BIT[new_range - 1]);
 18330  003DEA  0EFF               	movlw	255
 18331  003DEC  6E01               	movwf	??_SetRange& (0+255),c
 18332  003DEE  0EFF               	movlw	255
 18333  003DF0  6E02               	movwf	(??_SetRange+1)& (0+255),c
 18334  003DF2  500B               	movf	SetRange@new_range,w,c
 18335  003DF4  6E03               	movwf	(??_SetRange+2)& (0+255),c
 18336  003DF6  6A04               	clrf	(??_SetRange+3)& (0+255),c
 18337  003DF8  5001               	movf	??_SetRange,w,c
 18338  003DFA  2603               	addwf	??_SetRange+2,f,c
 18339  003DFC  5002               	movf	??_SetRange+1,w,c
 18340  003DFE  2204               	addwfc	??_SetRange+3,f,c
 18341  003E00  0E8B               	movlw	low _RSET_BIT
 18342  003E02  2403               	addwf	??_SetRange+2,w,c
 18343  003E04  6EF6               	movwf	tblptrl,c
 18344  003E06  0E06               	movlw	high _RSET_BIT
 18345  003E08  2004               	addwfc	??_SetRange+3,w,c
 18346  003E0A  6EF7               	movwf	tblptrh,c
 18347  003E0C                     	if	0	;There are less than 3 active tblptr bytes
 18348  003E0C                     	endif
 18349  003E0C  0008               	tblrd		*
 18350  003E0E  CFF5 F005          	movff	tablat,??_SetRange+4
 18351  003E12  0E01               	movlw	1
 18352  003E14  6E06               	movwf	(??_SetRange+5)& (0+255),c
 18353  003E16  2A05               	incf	??_SetRange+4,f,c
 18354  003E18  D002               	goto	i2u569_44
 18355  003E1A                     i2u569_45:
 18356  003E1A  90D8               	bcf	status,0,c
 18357  003E1C  3606               	rlcf	??_SetRange+5,f,c
 18358  003E1E                     i2u569_44:
 18359  003E1E  2E05               	decfsz	??_SetRange+4,f,c
 18360  003E20  D7FC               	goto	i2u569_45
 18361  003E22  5006               	movf	??_SetRange+5,w,c
 18362  003E24  0AFF               	xorlw	255
 18363  003E26  168A               	andwf	3978,f,c	;volatile
 18364  003E28  0012               	return		;funcret
 18365  003E2A                     __end_of_SetRange:
 18366                           	opt stack 0
 18367                           tosu	equ	0xFFF
 18368                           tosh	equ	0xFFE
 18369                           tosl	equ	0xFFD
 18370                           pclatu	equ	0xFFB
 18371                           pclath	equ	0xFFA
 18372                           tblptru	equ	0xFF8
 18373                           tblptrh	equ	0xFF7
 18374                           tblptrl	equ	0xFF6
 18375                           tablat	equ	0xFF5
 18376                           prodh	equ	0xFF4
 18377                           prodl	equ	0xFF3
 18378                           intcon	equ	0xFF2
 18379                           intcon2	equ	0xFF1
 18380                           intcon3	equ	0xFF0
 18381                           postinc0	equ	0xFEE
 18382                           fsr0h	equ	0xFEA
 18383                           fsr0l	equ	0xFE9
 18384                           wreg	equ	0xFE8
 18385                           postdec1	equ	0xFE5
 18386                           fsr1h	equ	0xFE2
 18387                           fsr1l	equ	0xFE1
 18388                           indf2	equ	0xFDF
 18389                           postinc2	equ	0xFDE
 18390                           postdec2	equ	0xFDD
 18391                           fsr2h	equ	0xFDA
 18392                           fsr2l	equ	0xFD9
 18393                           status	equ	0xFD8
 18394                           tosu	equ	0xFFF
 18395                           tosh	equ	0xFFE
 18396                           tosl	equ	0xFFD
 18397                           pclatu	equ	0xFFB
 18398                           pclath	equ	0xFFA
 18399                           tblptru	equ	0xFF8
 18400                           tblptrh	equ	0xFF7
 18401                           tblptrl	equ	0xFF6
 18402                           tablat	equ	0xFF5
 18403                           prodh	equ	0xFF4
 18404                           prodl	equ	0xFF3
 18405                           intcon	equ	0xFF2
 18406                           intcon2	equ	0xFF1
 18407                           intcon3	equ	0xFF0
 18408                           postinc0	equ	0xFEE
 18409                           fsr0h	equ	0xFEA
 18410                           fsr0l	equ	0xFE9
 18411                           wreg	equ	0xFE8
 18412                           postdec1	equ	0xFE5
 18413                           fsr1h	equ	0xFE2
 18414                           fsr1l	equ	0xFE1
 18415                           indf2	equ	0xFDF
 18416                           postinc2	equ	0xFDE
 18417                           postdec2	equ	0xFDD
 18418                           fsr2h	equ	0xFDA
 18419                           fsr2l	equ	0xFD9
 18420                           status	equ	0xFD8
 18421                           
 18422                           	psect	text73
 18423  000000                     __ptext73:
 18424                           	opt stack 0
 18425                           tosu	equ	0xFFF
 18426                           tosh	equ	0xFFE
 18427                           tosl	equ	0xFFD
 18428                           pclatu	equ	0xFFB
 18429                           pclath	equ	0xFFA
 18430                           tblptru	equ	0xFF8
 18431                           tblptrh	equ	0xFF7
 18432                           tblptrl	equ	0xFF6
 18433                           tablat	equ	0xFF5
 18434                           prodh	equ	0xFF4
 18435                           prodl	equ	0xFF3
 18436                           intcon	equ	0xFF2
 18437                           intcon2	equ	0xFF1
 18438                           intcon3	equ	0xFF0
 18439                           postinc0	equ	0xFEE
 18440                           fsr0h	equ	0xFEA
 18441                           fsr0l	equ	0xFE9
 18442                           wreg	equ	0xFE8
 18443                           postdec1	equ	0xFE5
 18444                           fsr1h	equ	0xFE2
 18445                           fsr1l	equ	0xFE1
 18446                           indf2	equ	0xFDF
 18447                           postinc2	equ	0xFDE
 18448                           postdec2	equ	0xFDD
 18449                           fsr2h	equ	0xFDA
 18450                           fsr2l	equ	0xFD9
 18451                           status	equ	0xFD8
 18452                           
 18453                           	psect	rparam
 18454  0000                     tosu	equ	0xFFF
 18455                           tosh	equ	0xFFE
 18456                           tosl	equ	0xFFD
 18457                           pclatu	equ	0xFFB
 18458                           pclath	equ	0xFFA
 18459                           tblptru	equ	0xFF8
 18460                           tblptrh	equ	0xFF7
 18461                           tblptrl	equ	0xFF6
 18462                           tablat	equ	0xFF5
 18463                           prodh	equ	0xFF4
 18464                           prodl	equ	0xFF3
 18465                           intcon	equ	0xFF2
 18466                           intcon2	equ	0xFF1
 18467                           intcon3	equ	0xFF0
 18468                           postinc0	equ	0xFEE
 18469                           fsr0h	equ	0xFEA
 18470                           fsr0l	equ	0xFE9
 18471                           wreg	equ	0xFE8
 18472                           postdec1	equ	0xFE5
 18473                           fsr1h	equ	0xFE2
 18474                           fsr1l	equ	0xFE1
 18475                           indf2	equ	0xFDF
 18476                           postinc2	equ	0xFDE
 18477                           postdec2	equ	0xFDD
 18478                           fsr2h	equ	0xFDA
 18479                           fsr2l	equ	0xFD9
 18480                           status	equ	0xFD8
 18481                           
 18482                           	psect	temp
 18483  00005F                     btemp:
 18484                           	opt stack 0
 18485  00005F                     	ds	1
 18486  0000                     int$flags	set	btemp
 18487                           tosu	equ	0xFFF
 18488                           tosh	equ	0xFFE
 18489                           tosl	equ	0xFFD
 18490                           pclatu	equ	0xFFB
 18491                           pclath	equ	0xFFA
 18492                           tblptru	equ	0xFF8
 18493                           tblptrh	equ	0xFF7
 18494                           tblptrl	equ	0xFF6
 18495                           tablat	equ	0xFF5
 18496                           prodh	equ	0xFF4
 18497                           prodl	equ	0xFF3
 18498                           intcon	equ	0xFF2
 18499                           intcon2	equ	0xFF1
 18500                           intcon3	equ	0xFF0
 18501                           postinc0	equ	0xFEE
 18502                           fsr0h	equ	0xFEA
 18503                           fsr0l	equ	0xFE9
 18504                           wreg	equ	0xFE8
 18505                           postdec1	equ	0xFE5
 18506                           fsr1h	equ	0xFE2
 18507                           fsr1l	equ	0xFE1
 18508                           indf2	equ	0xFDF
 18509                           postinc2	equ	0xFDE
 18510                           postdec2	equ	0xFDD
 18511                           fsr2h	equ	0xFDA
 18512                           fsr2l	equ	0xFD9
 18513                           status	equ	0xFD8


Data Sizes:
    Strings     109
    Constant    143
    Data        4
    BSS         23
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      94
    BANK0           160     86     110
    BANK1           256     89      89
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_6(CODE[11]), STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[11]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 53
		 -> STR_2(CODE[53]), STR_1(CODE[12]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> i2_putch(), putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> lcd_sendInt@displayString(COMRAM[10]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), printf@ap(COMRAM[2]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 53
		 -> STR_6(CODE[11]), STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[11]), 
		 -> STR_2(CODE[53]), STR_1(CODE[12]), 

    S997__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    S997__prbuf$ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 5
		 -> sprintf@pb(BANK1[4]), printf@pb(COMRAM[4]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 10
		 -> lcd_sendUInt@displayString(COMRAM[10]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> lcd_sendInt@displayString(COMRAM[10]), 

    lcd_sendString@a	PTR const unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), lcd_sendUInt@displayString(COMRAM[10]), lcd_sendInt@displayString(COMRAM[10]), main@cap_string(BANK1[16]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_TMR0_DefaultInterruptHandler
    _TMR0_DefaultInterruptHandler->_SetRange
    _INT1_ISR->_printf
    _INT0_ISR->_printf
    i2___ftdiv->i2___ftmul
    _printf->i2__doprnt
    i2__doprnt->i2___fttol
    i2_scale->i2___ftmul
    i2_putch->i2_EUSART1_Write
    i2_fround->i2___ftmul
    i2___wmul->i2___awdiv
    i2___ftmul->i2___ftadd
    i2___awdiv->i2___awmod
    i2___lltoft->i2___ftpack
    i2___llmod->i2___lldiv
    i2___fttol->i2_scale
    i2___ftsub->i2___ftadd
    i2___ftadd->i2___wmul
    ___lwtoft->i2___ftpack

Critical Paths under _main in BANK0

    __doprnt->_fround
    __doprnt->_scale
    _scale->___ftmul
    _putch->_EUSART1_Write
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftadd->_fround
    _lcd_sendString->_lcd_sendChar
    _lcd_sendChar->__lcd_Port
    _lcd_init->_lcd_sendCommand
    _lcd_clear->_lcd_sendCommand
    _lcd_sendCommand->__lcd_Port
    ___ftdiv->___ftpack
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INT1_ISR->_printf
    _INT0_ISR->_printf
    _printf->i2__doprnt

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->__doprnt
    __doprnt->___ftsub
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   77068
                                             73 BANK1     16    16      0
                  _SYSTEM_Initialize
                            ___ftdiv
                             ___ftge
                          _lcd_clear
                           _lcd_init
                     _lcd_sendString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             13     6      7   70609
                                             60 BANK1     13     6      7
                            ___ftdiv (ARG)
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             41    35      6   66641
                                             25 BANK1     35    29      6
                   Absolute function *
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch *
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               10     7      3   12970
                                             83 BANK0      3     0      3
                                              0 BANK1      4     4      0
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      44
                                             49 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      22
                                             48 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                             48 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              13    10      3   12691
                                             83 BANK0      3     0      3
                                              0 BANK1      7     7      0
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    3094
                                             62 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    5375
                                             68 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             48 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             54 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         15     9      6     431
                                             48 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          12     6      6     591
                                             48 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2655
                                             56 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     773
                                             61 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     750
                                             48 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     716
                                              4 BANK1     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    4628
                                             19 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    4150
                                              7 BANK1     12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     160
                                             48 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     904
                                             48 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_sendString                                       4     2      2     588
                                             52 BANK0      4     2      2
                       _lcd_sendChar
 ---------------------------------------------------------------------------------
 (2) _lcd_sendChar                                         3     3      0     178
                                             49 BANK0      3     3      0
                          __lcd_Port
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     198
                                             51 BANK0      1     1      0
                          __lcd_Port
                    _lcd_sendCommand
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0     110
                    _lcd_sendCommand
 ---------------------------------------------------------------------------------
 (2) _lcd_sendCommand                                      2     2      0     110
                                             49 BANK0      2     2      0
                          __lcd_Port
 ---------------------------------------------------------------------------------
 (3) __lcd_Port                                            1     1      0      88
                                             48 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    3345
                                             56 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2419
                                             48 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      86
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      86
                                             50 BANK0      2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      86
                                             48 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                          14    14      0   80804
                                             34 BANK0     14    14      0
                           _INT0_ISR
                           _INT1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0      44
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         1     1      0      44
                                             11 COMRAM     1     1      0
                           _SetRange
 ---------------------------------------------------------------------------------
 (7) _INT1_ISR                                             0     0      0   37271
                           _SetRange
                             _printf
 ---------------------------------------------------------------------------------
 (7) _INT0_ISR                                             0     0      0   43489
                           _SetRange
                     _TMR0_ReadTimer
                        _TMR0_Reload
                     _TMR0_StopTimer
                           ___lwtoft
                             _printf
                  i2_TMR0_StartTimer
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (8) i2___ftdiv                                           15     9      6     953
                                             47 COMRAM    15     9      6
                           ___lwtoft (ARG)
                          i2___ftadd (ARG)
                          i2___ftmul (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) i2_TMR0_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _printf                                              17     6     11   37227
                                             81 COMRAM     6     6      0
                                             23 BANK0     11     0     11
                          i2__doprnt
 ---------------------------------------------------------------------------------
 (9) i2__doprnt                                           41    35      6   34081
                                             69 COMRAM    12     6      6
                                              0 BANK0     23    23      0
                   Absolute function *
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch *
                            i2_scale
 ---------------------------------------------------------------------------------
 (10) i2_scale                                            13    10      3    4945
                                             47 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (10) i2_putch                                             1     1      0      44
                                              1 COMRAM     1     1      0
                    i2_EUSART1_Write
 ---------------------------------------------------------------------------------
 (11) i2_EUSART1_Write                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) i2_isdigit                                           3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (10) i2_fround                                           16    13      3    4747
                                             47 COMRAM    10     7      3
                          i2___awdiv
                          i2___awmod
                          i2___ftadd (ARG)
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (11) i2___wmul                                            6     2      4    1145
                                             14 COMRAM     6     2      4
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___ftmul                                          15     9      6    1727
                                             32 COMRAM    15     9      6
                           ___lwtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___ftadd (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___awmod                                           6     2      4     764
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (11) i2___awdiv                                           8     4      4     820
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (10) i2__tdiv_to_l_                                      15     9      6     355
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (10) i2__div_to_l_                                       12     6      6     481
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (10) i2___lltoft                                          9     5      4     716
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (10) i2___llmod                                           9     1      8     367
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___lldiv                                          13     5      8     318
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (10) i2___fttol                                          15    11      4     330
                                             54 COMRAM    15    11      4
                          i2___ftmul (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftsub                                           6     0      6    1736
                                             32 COMRAM     6     0      6
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___ftadd                                          12     6      6    1617
                                             20 COMRAM    12     6      6
                           ___lwtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftneg                                           3     0      3      71
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (10) i2___ftge                                            9     3      6     292
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (8) ___lwtoft                                             3     0      3     707
                                              8 COMRAM     3     0      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (12) i2___ftpack                                          8     3      5     621
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (8) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ReadTimer                                      10     8      2      69
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (9) _SetRange                                            11    11      0      44
                                              0 COMRAM    11    11      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _EXT_INT_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
   ___ftdiv
     ___ftpack
   ___ftge
   _lcd_clear
     _lcd_sendCommand
       __lcd_Port
   _lcd_init
     __lcd_Port
     _lcd_sendCommand
       __lcd_Port
   _lcd_sendString
     _lcd_sendChar
       __lcd_Port
   _sprintf
     ___ftdiv (ARG)
       ___ftpack
     __doprnt (ARG)
       Absolute function(Fake) *
       ___awdiv *
         ___awmod (ARG)
       ___ftadd *
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge *
       ___ftmul *
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg *
       ___ftsub *
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol *
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv *
       ___llmod *
         ___lldiv (ARG)
       ___lltoft *
         ___ftpack
       ___wmul *
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_ *
       __tdiv_to_l_ *
       _fround *
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit *
       _putch *
         _EUSART1_Write
       _scale *
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _INT0_ISR
     _SetRange
     _TMR0_ReadTimer
     _TMR0_Reload
     _TMR0_StopTimer
     ___lwtoft
       i2___ftpack
     _printf
       i2__doprnt
         Absolute function(Fake) *
         i2___awdiv *
           i2___awmod (ARG)
         i2___ftadd *
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftge *
         i2___ftmul *
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftadd (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg *
         i2___ftsub *
           i2___ftadd
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___lltoft (ARG)
             i2___ftpack
         i2___fttol *
           i2___ftmul (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftadd (ARG)
                 ___lwtoft (ARG)
                   i2___ftpack
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lldiv *
         i2___llmod *
           i2___lldiv (ARG)
         i2___lltoft *
           i2___ftpack
         i2___wmul *
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2__div_to_l_ *
         i2__tdiv_to_l_ *
         i2_fround *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftadd (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2_isdigit *
         i2_putch *
           i2_EUSART1_Write
         i2_scale *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
     i2_TMR0_StartTimer
     i2___ftadd
       ___lwtoft (ARG)
         i2___ftpack
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
       i2___ftpack (ARG)
       i2___ftpack (ARG)
       i2___wmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
     i2___ftdiv
       ___lwtoft (ARG)
         i2___ftpack
       i2___ftadd (ARG)
         ___lwtoft (ARG)
           i2___ftpack
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftmul (ARG)
         ___lwtoft (ARG)
           i2___ftpack
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftadd (ARG)
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftpack (ARG)
       i2___wmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
     i2___ftmul
       ___lwtoft (ARG)
         i2___ftpack
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
       i2___ftadd (ARG)
         ___lwtoft (ARG)
           i2___ftpack
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftpack (ARG)
       i2___wmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
     i2___wmul
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
   _INT1_ISR
     _SetRange
     _printf
       i2__doprnt
         Absolute function(Fake) *
         i2___awdiv *
           i2___awmod (ARG)
         i2___ftadd *
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftge *
         i2___ftmul *
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftadd (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg *
         i2___ftsub *
           i2___ftadd
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___lltoft (ARG)
             i2___ftpack
         i2___fttol *
           i2___ftmul (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftadd (ARG)
                 ___lwtoft (ARG)
                   i2___ftpack
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lldiv *
         i2___llmod *
           i2___lldiv (ARG)
         i2___lltoft *
           i2___ftpack
         i2___wmul *
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2__div_to_l_ *
         i2__tdiv_to_l_ *
         i2_fround *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftadd (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2_isdigit *
         i2_putch *
           i2_EUSART1_Write
         i2_scale *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
       _SetRange

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     59      59       6       34.8%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     56      6E       4       68.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      5E       1      100.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     125       9        0.0%
DATA                 0      0     125      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Jan 23 20:27:00 2017

                           ?_lcd_sendChar 0001                              ___awdiv@sign 009B  
                     ___wmul@multiplicand 00A0                                i2___ftpack 502E  
                         _timer0ReloadVal 005D                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                              ___ftadd@exp1 0112  
                            ___ftadd@exp2 0111                                i2___lltoft 55DE  
                             __CFG_LVP$ON 000000                              ___ftadd@sign 0110  
                         ?_lcd_sendString 0094                          ?_lcd_sendCommand 0001  
                                     l227 5B00                                       l403 13AC  
                                     l332 58EE                                       l334 58FA  
                                     l336 5906                                       l338 5912  
                                     l259 416C                                       l470 143E  
                                     l455 1102                                       l803 37F6  
                                     l724 413E                                       l821 3EF2  
                                     l814 452A                                       l822 3F36  
                                     l756 4AEA                                       l828 3FB6  
                                     l853 596E                                       l925 501C  
                                     l783 36CE                                       l935 5206  
                                     l785 36F6                                       l794 37CC  
                                     l779 3694                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                              ___awmod@sign 0095  
                                     tosl 000FFD                                       wreg 000FE8  
                            ___ftdiv@cntr 00A1                              ___ftdiv@sign 00A6  
                                    l6001 375C                                      l6003 376A  
                                    l6021 3820                                      l6013 37B2  
                                    l6005 3778                                      l4423 5908  
                                    l4415 58F0                                      l6031 386E  
                                    l6015 37C0                                      l6007 3784  
                                    l4511 3E9E                                      l6103 4F04  
                                    l4601 40F4                                      l4505 3E64  
                                    l6105 4F10                                      l6041 42F0  
                                    l6201 2D1A                                      l4419 58FC  
                                    l4611 4124                                      l6123 4F68  
                                    l6115 4F46                                      l6107 4F16  
                                    l4701 4FB6                                      l4613 4134  
                                    l4605 4108                                      l4541 3F6C  
                                    l6061 4378                                      l6213 2EA4  
                                    l6205 2D40                                      l4631 4E6C  
                                    l4551 3F9C                                      l6119 4F54  
                                    l6151 5152                                      l6143 511C  
                                    l6135 50F8                                      l6071 43B6  
                                    l6047 432A                                      l4721 51B0  
                                    l4561 3FEE                                      l4553 3FAC  
                                    l4545 3F80                                      l6145 5128  
                                    l6065 4396                                      l4627 4E2C  
                                    l6227 56AE                                      l6091 4ED0  
                                    l6147 512E                                      l6155 5160  
                                    l6139 5108                                      l6075 43D4  
                                    l6219 2F6A                                      l4637 4EB0  
                                    l6237 459A                                      l4709 500A  
                                    l4725 51F4                                      l4717 519A  
                                    l4581 4068                                      l6181 35E4  
                                    l6173 3500                                      l6255 462C  
                                    l4719 51AA                                      l4567 4014  
                                    l6159 5174                                      l4495 59FC  
                                    l7161 444E                                      l6273 4692  
                                    l6265 465C                                      l6281 53C6  
                                    l6097 4EE6                                      l6267 466C  
                                    l6259 4640                                      l6195 2C54  
                                    l6269 4676                                      l4589 40BC  
                                    l7167 4488                                      l6279 53B6  
                                    l4697 4FA0                                      l5931 4A40  
                                    l7187 44E8                                      l4699 4FB0  
                                    l5941 4ACE                                      l5933 4A4E  
                                    l5943 4ADC                                      l5935 4A7E  
                                    l5927 4A2C                                      l5783 5704  
                                    l5955 4B10                                      l5939 4A9E  
                                    l5779 56E4                                      l5949 4AF4  
                                    l5973 36A2                                      l9503 0842  
                                    l5985 36EC                                      l9601 0C82  
                                    l9521 08DC                                      l9513 08B0  
                                    l5995 372E                                      l5979 36DC  
                                    l9603 0C88                                      l9523 08E2  
                                    l9515 08C6                                      l9509 086A  
                                    l9631 0DAA                                      l9623 0D46  
                                    l9615 0CCE                                      l9543 099A  
                                    l9535 0946                                      l9519 08D6  
                                    l9527 08E8                                      l9801 1624  
                                    l9721 12A4                                      l9713 11DE  
                                    l9705 1162                                      l9529 092A  
                                    l9473 0702                                      l9811 1692  
                                    l9803 162E                                      l9731 136C  
                                    l9723 12D2                                      l9651 0E9A  
                                    l9643 0E3E                                      l9635 0DD6  
                                    l9619 0D1E                                      l9571 0AEA  
                                    l9483 077C                                      l9821 1706  
                                    l9725 1320                                      l9709 118C  
                                    l9645 0E46                                      l9573 0B00  
                                    l9485 0792                                      l9815 16BC  
                                    l9743 13EA                                      l9735 1396  
                                    l9727 132E                                      l9655 0EC4  
                                    l9647 0E5C                                      l9639 0E14  
                                    l9583 0B90                                      l9575 0B30  
                                    l9567 0ABC                                      l9559 0A4C  
                                    l9495 07CC                                      l9479 074E  
                                    l9833 1784                                      l9825 1730  
                                    l9761 14D2                                      l9753 1476  
                                    l9745 141E                                      l9737 139E  
                                    l9681 1060                                      l9665 0F3E  
                                    l9657 0ECC                                      l9577 0B46  
                                    l9489 079C                                      l9827 173A  
                                    l9763 14D8                                      l9755 14AC  
                                    l9691 10D0                                      l9667 0F5A  
                                    l9659 0EE0                                      l9587 0BBE  
                                    l9845 1820                                      l9837 17AE  
                                    l9829 1746                                      l9693 10E4  
                                    l9685 109E                                      l9677 1030  
                                    l9669 0F6A                                      l9597 0C1C  
                                    l9861 1940                     __size_ofi2__div_to_l_ 0128  
                                    l9855 1900                                      l9839 17C2  
                                    l9783 1576                                      l9775 151E  
                                    l9679 1052                                      l9863 195E  
                                    STR_1 06C5                                      STR_2 0690  
                                    l9857 191C                                      l9849 183E  
                                    l9697 1106                                      l9689 10C8  
                                    STR_3 06F2                                      STR_4 06DC  
                                    l9859 192A                                      l9795 15E2  
                                    l9779 1546                                      l9971 41E0  
                                    STR_5 06E7                                      STR_6 06D1  
                                    l9797 15EC                                      l9789 15AA  
                                    l9977 427C                                      l9979 42A4  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      u5831 3E40  
                                    u8411 3642                                      u5851 3E7A  
                                    u8421 3660                                      u8621 42CC  
                                    u8641 4306                                      u8900 45C0  
                                    u8905 45B6                                      u8881 4576  
                                    _WPUB 000F61                             _EUSART1_Write 5AFC  
                                    _main 4150                               i2__doprnt@c 0076  
                            ___ftpack@arg 0090                               i2__doprnt@f 0048  
                            ___ftpack@exp 0093                           _TMR0_StartTimer 5B62  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr0l 000FE9                                      fsr2h 000FDA  
                                    fsr1l 000FE1                                      indf2 000FDF  
                                    fsr2l 000FD9                                      btemp 005F  
                           __CFG_BORV$190 000000                              i2___ftadd@f1 0015  
                            i2___ftadd@f2 0018                                      pclat 000FFA  
                            i2___ftge@ff1 0001                              i2___ftge@ff2 0004  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00A0                             __CFG_IESO$OFF 000000  
                            i2___ftdiv@f1 0030                              i2___ftdiv@f2 0033  
                            i2___ftdiv@f3 003A                           __end_ofi2_scale 3380  
                            i2___ftneg@f1 0001                           __end_ofi2_putch 5B54  
                          ??_lcd_sendChar 0091                              ___ftmul@cntr 00B1  
                            i2___ftmul@f1 0021                              i2___ftmul@f2 0024  
                            ___param_bank 000010                              ___ftmul@sign 00B2  
                            i2___ftsub@f1 0021                              i2___ftsub@f2 0024  
                            i2___fttol@f1 0037                  __size_ofi2_EUSART1_Write 000C  
                            ___fttol@exp1 0112                              i2___lltoft@c 0009  
                            ___fttol@lval 010E                   __end_of_TMR0_Initialize 57EE  
                        __end_of_INT0_ISR 4A12                          __end_of_INT1_ISR 55DE  
          ??_TMR0_DefaultInterruptHandler 000C            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 5B26                                     ?_main 0001  
                         __end_of___awdiv 4F72                           __end_of___ftadd 3894  
                         __end_of___awmod 517E                 TMR0_ReadTimer@readValHigh 000A  
                         __end_of___ftdiv 4560                           __end_of___ftneg 597C  
                         __end_of___lldiv 502E                           __end_of___ftmul 4414  
                                   _T0CON 000FD5                           ___awdiv@divisor 0098  
                         __end_of___llmod 5218                           __end_of___ftsub 56D8  
                         __end_of___fttol 46A4                                     u10861 442A  
                                   u10881 4464                                     u16310 10FA  
                                   u16208 0E84                                     u16158 0D94  
                                   u16248 0F28                                     u16178 0DFE  
                                   u16348 114C                                     u16268 1016  
                          __CFG_DEBUG$OFF 000000                                     u16608 167C  
                                   u16368 128A                                     u16298 1088  
                                   u16718 180A                                     u16638 16F0  
                                   u16398 1356                                     u16738 18E8  
                                   u15970 09E0                                     u16678 176E  
                                   u15975 09D4                                     u15888 0736  
                                   u16947 5748                                     u16957 575C  
                                   u16967 5438                                     u16977 5450  
                                   u16987 5468                                     u16997 5A1E  
                                   i2l102 004E                                     i2l104 005A  
                                   i2l108 0064                                     i2l227 5B36  
                                   i2l403 256E                                     i2l470 2600  
                                   i2l455 22D2                                     i2l803 3C14  
                                   i2l724 48EC                                     i2l821 4736  
                                   i2l822 475E                                     i2l814 4DBA  
                                   i2l756 50BC                                     i2l828 47C4  
                                   i2l853 5A68                                     i2l925 539C  
                                   i2l783 3B48                                     i2l935 5568  
                                   i2l794 3BF8                                     i2l779 3B1E  
                         ___awdiv@counter 009A                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                              i2__div_to_l_ 47D6  
                         __end_of__doprnt 196A                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
       __size_of_TMR0_SetInterruptHandler 000A                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
               ?_TMR0_SetInterruptHandler 0090                             __CFG_WRT3$OFF 000000  
                            ___lltoft@exp 00A0                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                        __end_of_TMR0_ISR 59DC                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                                i2isdigit@c 0003  
                        __end_of_RSET_BIT 0690                           __end_of_dpowers 0629  
                              i2scale@scl 0036                              i2__doprnt@ap 004A  
                            i2__doprnt@pb 0046                                     _scale 2AE2  
                                   _range 00CB                           __end_of_isdigit 5A06  
                      __CFG_MCLRE$EXTMCLR 000000                             ___ftpack@sign 0094  
                                   _putch 5AE8                                     _units 00C8  
                          ?_EUSART1_Write 0001                                     pclath 000FFA  
                                   tablat 000FF5                          __end_ofi2___ftge 52A8  
                        __end_ofi2___wmul 5A52                                     status 000FD8  
                         __end_of_sprintf 568C                            __CFG_HFOFST$ON 000000  
                          __CFG_FOSC$HSMP 000000                          __end_ofi2_fround 3ADA  
                           i2___ftdiv@exp 003D                        __size_ofi2___awdiv 0084  
                      __size_ofi2___ftadd 01AC                        __size_ofi2___awmod 0070  
                          __CFG_PBADEN$ON 000000                        __size_ofi2___ftdiv 00E6  
                      __size_ofi2___ftneg 0024                        __size_ofi2___lldiv 0082  
                      __size_ofi2___ftmul 00F4                        __size_ofi2___llmod 0066  
                      __size_ofi2___ftsub 0040                        __size_ofi2___fttol 00F4  
                      __size_ofi2__doprnt 1178                           __initialization 5766  
                       i2___lldiv@divisor 0005                __end_of_EUSART1_Initialize 5AE8  
                            __end_of_main 42B6                              _stored_range 00B6  
                       i2___lldiv@counter 000D                             i2___ftmul@exp 002A  
                      __size_ofi2_isdigit 001E               ?_INTERRUPT_InterruptManager 0001  
                             ?i2___ftpack 0001                             lcd_sendChar@a 0093  
                           lcd_sendChar@y 0092                               ?i2___lltoft 0009  
                                  ??_main 00B6                             ___fttol@sign1 010D  
                        __end_of_SetRange 3E2A                             __activetblptr 000002  
                    __size_of__tdiv_to_l_ 019E                   __end_of_TMR0_StartTimer 5B66  
                        ___llmod@dividend 009D                                    ?_scale 00B3  
                        ___awdiv@dividend 0096                                    _ANSELA 000F38  
                                  ?_putch 0001                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                          __end_of___ftpack 4B1E  
                        __end_of___lltoft 542A                                    _R1_BIT 0686  
                                  i2l4101 39DA                                    i2l4201 48C2  
                                  i2l4123 30C4                                    i2l4109 3A9A  
                                  i2l4141 32B8                                    i2l4133 318C  
                          __CFG_WDTEN$OFF 000000                                    i2l4303 4C3E  
                                  i2l4207 48DA                                    i2l4223 46FC  
                                  i2l4321 4CA4                                    i2l4209 48E6  
                                  i2l4217 46D0                                    i2l4129 3168  
                                  i2l3611 5056                                    i2l4331 4CCC  
                                  i2l4163 4812                                    i2l4147 335C  
                                  i2l3621 50B2                                    i2l3613 5074  
                                  i2l3605 503E                                    i2l4333 4CD8  
                                  i2l4325 4CB4                                    i2l4157 47F4  
                                  i2l4253 478A                                    i2l4271 5248  
                                  i2l4335 4CDE                                    i2l4263 47B2  
                                  i2l3703 52E2                                    i2l4351 5AB0  
                                  i2l3617 508A                                    i2l3609 504C  
                                  i2l4281 52A4                                    i2l3801 3BB2  
                                  i2l4361 534E                                    i2l4185 4884  
                                  i2l4177 4854                                    i2l4265 47BE  
                                  i2l4257 479A                                    i2l3705 52EA  
                                  i2l3619 50A8                                    i2l4275 5278  
                                  i2l3811 3BE6                                    i2l3803 3BBC  
                                  i2l4339 4CF4                                    i2l4363 535A  
                                  i2l3723 5322                                    i2l3715 530A  
                                  i2l3707 52EE                                    i2l3813 3BF0  
                                  i2l3805 3BC4                                    i2l4293 5846  
                                  i2l4373 538E                                    i2l4365 535E  
                                  i2l4381 5526                                    i2l4197 48B2  
                                  i2l4383 5532                                    i2l3719 5314  
                                  i2l3751 54F2                                    i2l3743 54D2  
                                  i2l3735 54B8                                    i2l4385 5536  
                                  i2l3745 54DA                                    i2l3819 3C30  
                                  i2l3771 3B2C                                    i2l4395 55E4  
                                  i2l3691 52BC                                    i2l3747 54DE  
                                  i2l3755 54FC                                    i2l3739 54C4  
                                  i2l3829 3C60                                    i2l4389 555A  
                                  i2l4397 55F0                                    i2l3845 4B6E  
                                  i2l3759 550A                                    i2l3863 4BB0  
                                  i2l3839 4B46                                    i2l3793 3B86  
                                  i2l3777 3B56                                    i2l3697 52CC  
                                  i2l3873 4BD8                                    i2l5633 4D56  
                                  i2l3859 4BA0                                    i2l5627 4D2E  
                                  i2l3869 4BC8                                    i2l9101 1A92  
                                  i2l5653 4D94                                    i2l3799 3BA8  
                                  i2l9111 1AF2                                    i2l9201 1E98  
                                  i2l9121 1B24                                    i2l9113 1B08  
                                  i2l9107 1AB8                                    i2l9221 1F40  
                                  i2l9213 1EDE                                    i2l9141 1BDA  
                                  i2l9133 1B86                                    i2l9117 1B18  
                                  i2l9125 1B2A                                    i2l9311 23AA  
                                  i2l9303 232E                                    i2l9127 1B6A  
                                  i2l9119 1B1E                                    i2l9071 196E  
                           i2putch@txData 0002                                    i2l9401 27D8  
                                  i2l9321 2498                                    i2l9241 2028  
                                  i2l9233 1FC4                                    i2l9217 1F20  
                                  i2l9081 19E4                                    i2l9323 24E6  
                                  i2l9307 2358                                    i2l9243 2030  
                                  i2l9171 1D20                                    i2l9083 19FA  
                                  i2l9413 285A                                    i2l9341 25AC  
                                  i2l9333 2558                                    i2l9325 24F4  
                                  i2l9253 20AA                                    i2l9245 2046  
                                  i2l9237 1FFE                                    i2l9229 1F98  
                                  i2l9181 1DA8                                    i2l9173 1D50  
                                  i2l9165 1CE4                                    i2l9157 1C7C  
                                  i2l9093 1A32                                    i2l9077 19B6  
                                  i2l9431 291A                                    i2l9423 28CA  
                                  i2l9351 2638                                    i2l9343 25E0  
                                  i2l9335 2560                                    i2l9319 246A  
                                  i2l9263 2118                                    i2l9255 20B2  
                                  i2l9175 1D66                                    i2l9087 1A02  
                                  i2l9409 2830                                    i2l9425 28D4  
                                  i2l9361 269A                                    i2l9353 266E  
                                  i2l9329 252E                                    i2l9265 2134  
                                  i2l9257 20C6                                    i2l9249 2080  
                                  i2l9185 1DCE                                    i2l9169 1D0A  
                                  i2l9443 29AA                                    i2l9435 2944  
                                  i2l9427 28E0                                    i2l9419 28A0  
                                  i2l9291 22B4                                    i2l9283 226E  
                                  i2l9275 2204                                    i2l9267 2144  
                                  i2l9195 1E2C                                    i2l9453 2A7C  
                                  i2l9437 2958                                    i2l9381 2730  
                                  i2l9373 26E0                                    i2l9277 2226  
                                  i2l9461 2AD8                                    i2l9455 2A98  
                                  i2l9447 29C8                                    i2l9359 2694  
                                  i2l9295 22D6                                    i2l9287 2298  
                                  i2l9279 2234                                    i2l9199 1E92  
                                  i2l9457 2AA6                                    i2l9393 2790  
                                  i2l9377 2704                                    i2l9289 22A0  
                                  i2l9395 279A                                    i2l9387 275C  
                                  i2l9459 2ABC                                    i2l9399 27CE  
                                  i2l9911 4A04                                    i2l9873 558C  
                                  i2l9885 55BA                                    i2l9877 559A  
                                  i2l9879 55A0                                    _RCREG1 000FAE  
                               ??i2_scale 0033                          __end_of___lwtoft 5A9A  
                                  u530_41 46E0                                    u542_41 4C22  
                                  u470_41 4B56                                    _RCSTA1 000FAB  
                                  u447_41 3AEA                                    u448_41 3AFE  
                                  u528_41 46B4                                    _OSCCON 000FD3  
                                  u802_41 4D16                                    u468_41 4B2E  
                                  u804_41 4D3E                                    _SPBRG1 000FAF  
                               ??i2_putch 0002                                    _TXREG1 000FAD  
                                  _TXSTA1 000FAC                    __size_ofi2__tdiv_to_l_ 0132  
                            __doprnt$1743 0125                            __CFG_XINST$OFF 000000  
                            i2_scale$1924 0033                          __end_of__powers_ 0677  
                        __end_of_lcd_init 54A4                              ?_TMR0_Reload 0001  
                                  ___ftge 4DEC                          lcd_sendChar@temp 0091  
                                  ___wmul 58AA                                 ??___awdiv 009A  
                               ??___ftadd 010D                            __CFG_STVREN$ON 000000  
                               ??___awmod 0094                                 ??___ftdiv 009E  
                               ??___ftneg 0093                                 ??___lldiv 0098  
                               ??___ftmul 00AA                                 ??___llmod 00A5  
                               ??___ftsub 00B6                                 ??___fttol 0108  
                               ??__doprnt 011F                          ?_TMR0_Initialize 0001  
                                  _fround 3380                             i2__doprnt@exp 0063  
                           i2__doprnt@val 0065                                    clear_0 578C  
                        ___awdiv@quotient 009C                           ___awmod@divisor 0092  
                                  _result 0058                              __doprnt@flag 0137  
                         ___awmod@counter 0094                                    _printf 5916  
                            __doprnt@fval 0134                              __doprnt@prec 0139  
                          i2___awdiv@sign 000C                     ___ftmul@f3_as_product 00AE  
                       ??i2_EUSART1_Write 0001                                 ??_isdigit 0090  
                       __end_ofi2___awdiv 532C                         __end_ofi2___ftadd 3C86  
                       __end_ofi2___awmod 5514                         __end_ofi2___ftdiv 4DEC  
                          i2___ftadd@exp1 0020                            i2___ftadd@exp2 001F  
                       __end_ofi2___ftneg 5A76                         __end_ofi2___lldiv 53AE  
                       __end_ofi2___ftmul 4C12                         __end_ofi2___llmod 557A  
                       __end_ofi2___ftsub 5870                         __end_ofi2___fttol 4D06  
                          i2___ftadd@sign 001E                              __mediumconst 0000  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                         __end_ofi2__doprnt 2AE2  
                    __end_of_lcd_sendChar 5766                          lcd_sendCommand@a 0092  
                          i2___awmod@sign 0006                           ??_EUSART1_Write 0090  
TMR0_SetInterruptHandler@InterruptHandler 0090                                 ??_sprintf 00B6  
           __size_of_INTERRUPT_Initialize 0004                         __end_ofi2_isdigit 5AB8  
                       _SYSTEM_Initialize 5AB8                            i2___ftdiv@cntr 0039  
                              __accesstop 0060                   __end_of__initialization 579C  
                          i2___ftdiv@sign 003E                                 ?_INT0_ISR 0001  
                               ?_INT1_ISR 0001                                ___ftadd@f1 0107  
                              ___ftadd@f2 010A                       __size_ofi2___ftpack 00AE  
                              ___ftge@ff1 0090                                ___ftge@ff2 0093  
                      ?_SYSTEM_Initialize 0001                       __size_ofi2___lltoft 005C  
                           ___rparam_used 000001                                ___ftdiv@f1 0098  
                              ___ftdiv@f2 009B                                ___ftdiv@f3 00A2  
                              ___ftneg@f1 0090                        __size_of__lcd_Port 0036  
                          i2___ftpack@arg 0001                        i2__tdiv_to_l_@exp1 000F  
                       i2___llmod@divisor 0012                            i2___ftpack@exp 0004  
                      i2__tdiv_to_l_@cntr 000E                         i2___llmod@counter 0016  
                      i2__tdiv_to_l_@quot 000A                                ___ftmul@f1 00A4  
                              ___ftmul@f2 00A7                                ___ftsub@f1 0113  
                              ___ftsub@f2 0116                                ___fttol@f1 0104  
                          __pcstackCOMRAM 0001                        i2___lldiv@dividend 0001  
                            __pidataBANK0 5B5E                       ??_SYSTEM_Initialize 0094  
                        ??_lcd_sendString 0096                                 ?_TMR0_ISR 0001  
                              ___lltoft@c 0098                            i2___ftmul@cntr 002E  
                           __end_of_scale 2F90                            i2___ftmul@sign 002F  
                           __end_of_putch 5AFC                   __size_of_TMR0_ReadTimer 0042  
                          main@cap_string 0149                            i2___fttol@exp1 0045  
                              ___lwtoft@c 0009                            i2___fttol@lval 0041  
                               ?i2___ftge 0001                                 ?i2___wmul 000F  
                           i2__tdiv_to_l_ 46A4               __size_of_EXT_INT_Initialize 000E  
                              __div_to_l_ 3FC8                                 ?i2_fround 0030  
                      __size_of_lcd_clear 000E                                __doprnt@ap 011D  
                              __doprnt@pb 0119                     i2EUSART1_Write@txData 0001  
                         __div_to_l_@exp1 009B                          ?_TMR0_StartTimer 0001  
                         __div_to_l_@cntr 009A                                   ??_scale 00B6  
               __end_of_SYSTEM_Initialize 5AD2                            i2___lltoft@exp 0011  
                         __div_to_l_@quot 0096                                   ??_putch 0091  
                      i2___lldiv@quotient 0009                                __pbssBANK0 00B6  
                        i2__tdiv_to_l_@f1 0001                          i2__tdiv_to_l_@f2 0004  
                         __CFG_PLLCFG$OFF 000000                                ??_INT0_ISR 0058  
                              ??_INT1_ISR 0058                                __pnvCOMRAM 005D  
                           __div_to_l_@f1 0090                             __div_to_l_@f2 0093  
                               ?_SetRange 0001                        __CFG_CCP2MX$PORTC1 000000  
                                 ?___ftge 0090          __end_of_TMR0_SetInterruptHandler 5B4A  
                 __size_of_TMR0_StopTimer 0004                                   ?___wmul 009E  
                              ??_TMR0_ISR 000D                        __CFG_CCP3MX$PORTB5 000000  
                                 ?_fround 00B3                                 ?___ftpack 0090  
                                 ?_printf 0077                                 ?___lltoft 0098  
                          ?i2__tdiv_to_l_ 0001                                ??i2___ftge 0007  
                               ?___lwtoft 0009                                ??i2___wmul 0013  
                       __end_of__lcd_Port 5916                                ??i2_fround 0033  
                                 _OSCCON2 000FD2                                   _OSCTUNE 000F9B  
                                 _SPBRGH1 000FB0                  __size_of_lcd_sendCommand 0026  
                               ?_lcd_init 0001                                   i2_scale 2F90  
                                 i2_putch 5B4A                                ??_SetRange 0001  
                              _auto_range 00CA                           __CFG_PWRTEN$OFF 000000  
                       __end_of__npowers_ 0650                                   __Hparam 0000  
                              _scale$1742 0100                                   __Lparam 0000  
                       __end_of_lcd_clear 5B18                           __size_of___ftge 00C8  
                                 ___awdiv 4EB4                                   ___ftadd 362C  
                          i2__doprnt$1925 0060                                   ___awmod 50DC  
                                 ___ftdiv 4414                                   ___ftneg 594C  
                                 ___lldiv 4F72                           __size_of___wmul 0036  
                                 ___ftmul 42B6                                   ___llmod 517E  
                                 ___ftsub 568C                                   ___fttol 4560  
                            __psmallconst 0600                      __size_of_TMR0_Reload 000A  
                                 __doprnt 06FE                                   __pcinit 5766  
                            ??i2___ftpack 0006                                ??___ftpack 0095  
                         __size_of_fround 02AC                   i2___ftmul@f3_as_product 002B  
                                 __ramtop 0600                              ??i2___lltoft 000D  
                              ??___lltoft 009C                                   __ptext0 4150  
                                 __ptext1 563A                                   __ptext2 06FE  
                                 __ptext3 2AE2                                   __ptext4 5AE8  
                                 __ptext5 5AFC                                   __ptext6 59DC  
                                 __ptext7 3380                                   __ptext8 58AA  
                                 __ptext9 42B6                           __size_of_printf 0036  
                   __size_of_lcd_sendChar 0046                                ??___lwtoft 000C  
                               _T0CONbits 000FD5                             i2_fround$1922 0036  
                           i2_fround$1923 0033                               ?__div_to_l_ 0090  
                                 _dpowers 0601                     _OSCILLATOR_Initialize 5B18  
                            i2fround@prec 0039                                   _isdigit 59DC  
                          i2__doprnt@flag 0072                                   _reading 005B  
                          i2__doprnt@fval 006D                          ___awmod@dividend 0090  
                          i2__doprnt@prec 0074                        _EUSART1_Initialize 5AD2  
                ??_PIN_MANAGER_Initialize 0090                __size_of_SYSTEM_Initialize 001A  
                                 _sprintf 563A                             __doprnt@width 0132  
                              ??_lcd_init 0093                      end_of_initialization 579C  
                                 ftoa@buf 00B7                       ?_EUSART1_Initialize 0001  
                           __Lmediumconst 0000                       i2___wmul@multiplier 000F  
                      __end_ofi2___ftpack 50DC                                 i2u1530_48 206A  
                               i2u1507_40 1C1A                                 i2u1507_45 1C10  
                               i2u1541_40 22CA                                 i2u1525_48 1F82  
                               i2u1534_48 2102                                 i2u1527_48 1FE8  
                               i2u1544_48 2318                                 i2u1536_48 21EA  
                               i2u1570_48 281A                                 i2u1546_48 2450  
                               i2u1539_48 2258                                 i2u1581_48 2994  
                               i2u1573_48 288A                                 i2u1549_48 2518  
                               i2u1583_48 2A64                                 i2u1577_48 2904  
                               i2u1498_48 199E                                 i2u1684_48 59C6  
                      __end_ofi2___lltoft 563A                           ___lldiv@divisor 0094  
                         ___lldiv@counter 009C                           i2_EUSART1_Write 5B34  
                   TMR0_ReadTimer@readVal 0007                                   printf@f 0077  
                            _lcd_sendChar 5720                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                            __tdiv_to_l_@f1 0090  
                          __tdiv_to_l_@f2 0093                            _TMR0_ReadTimer 57EE  
                    ??_EUSART1_Initialize 0090                           ??i2__tdiv_to_l_ 0007  
                     __end_of_cal_current 0686                             ??__tdiv_to_l_ 0096  
                _TMR0_SetInterruptHandler 5B40                                 i2___awdiv 52A8  
                     EUSART1_Write@txData 0090                                 i2___ftadd 3ADA  
                               i2___awmod 54A4                                 i2___ftdiv 4D06  
                               i2___ftneg 5A52                                 i2___lldiv 532C  
                               i2___ftmul 4B1E                                 i2___llmod 5514  
                               i2___ftsub 5830                                 i2___fttol 4C12  
                               i2__doprnt 196A                            __end_of_R1_BIT 068B  
                             ___ftdiv@exp 00A5                        i2___llmod@dividend 000E  
                      i2___awdiv@dividend 0007                         ??_lcd_sendCommand 0091  
                         i2___ftpack@sign 0005                                 i2_isdigit 5A9A  
                       __size_of_INT0_ISR 0114                       __size_of__div_to_l_ 0188  
                       __size_of_INT1_ISR 0064                               ___ftmul@exp 00AD  
                          _TMR0_StopTimer 5B6E                    __end_of_TMR0_ReadTimer 5830  
                       SetRange@new_range 000B              __end_of_INTERRUPT_Initialize 5B6A  
                          __end_of___ftge 4EB4                            __end_of___wmul 58E0  
                       __size_of_TMR0_ISR 0030                    ?_OSCILLATOR_Initialize 0001  
                          __end_of_fround 362C                          i2___wmul@product 0013  
                          __end_of_printf 594C                       start_initialization 5766  
                       __size_ofi2___ftge 0090                        i2___awdiv@quotient 000D  
                       __size_ofi2___wmul 0026                  __size_of_TMR0_Initialize 0044  
         __size_of_PIN_MANAGER_Initialize 0030                       __end_of__tdiv_to_l_ 3FC8  
                             __lcd_Port@a 0090                           i2___fttol@sign1 0040  
                       __size_ofi2_fround 0246                                ?i2___awdiv 0007  
                              ?i2___ftadd 0015                                ?i2___awmod 0001  
                              ?i2___ftdiv 0030                                ?i2___ftneg 0001  
                              ?i2___lldiv 0001                                ?i2___ftmul 0021  
                              ?i2___llmod 000E                                ?i2___ftsub 0021  
                              ?i2___fttol 0037                               putch@txData 0091  
                   __end_of_EUSART1_Write 5B0A                                ?i2__doprnt 0046  
                 __end_ofi2_EUSART1_Write 5B40                           ___llmod@divisor 00A1  
                         ___llmod@counter 00A5                    __end_of_TMR0_StopTimer 5B72  
                              ?i2_isdigit 0001                               _cal_current 0677  
                                ??___ftge 0096                         __size_of_SetRange 01A4  
                         ?_TMR0_ReadTimer 0001                                  ??___wmul 00A2  
                             __doprnt@exp 0128                               __doprnt@val 012A  
                             __pdataBANK0 00C8                                  ??_fround 00B6  
              __end_of_EXT_INT_Initialize 5B34                                  ??_printf 0052  
                              fround@prec 0106                             ?i2__div_to_l_ 0001  
                       __size_of___ftpack 010C                         __size_of___lltoft 007C  
                             __pbssCOMRAM 0058                         __size_of___lwtoft 0024  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                            _isdigit$1289 0091                                 __lcd_Port 58E0  
                                ?i2_scale 0030                         __size_of_lcd_init 007A  
                                ?i2_putch 0001                                 __doprnt@c 013B  
                               __doprnt@f 011B                     _TMR0_InterruptHandler 00CC  
                               __pnvBANK0 00CC                  __size_of_TMR0_StartTimer 0004  
                         lcd_sendString@a 0094                           lcd_sendString@i 0096  
                         ?_TMR0_StopTimer 0001                    _PIN_MANAGER_Initialize 597C  
                               __pintcode 0008                                  ?___awdiv 0096  
                                ?___ftadd 0107                                  ?___awmod 0090  
                                ?___ftdiv 0098                                  ?___ftneg 0090  
                                ?___lldiv 0090                                  ?___ftmul 00A4  
                                ?___llmod 009D                                  ?___ftsub 0113  
                               __npowers_ 0629                                  ?___fttol 0104  
                                ?__doprnt 0119                                 _lcd_clear 5B0A  
            ??_INTERRUPT_InterruptManager 0082                          __CFG_PRICLKEN$ON 000000  
                             __tdiv_to_l_ 3E2A                            ??i2__div_to_l_ 0007  
                            ??__div_to_l_ 0096                               __smallconst 0600  
                                _BAUDCON1 000FB8                                  ?_isdigit 0001  
                 __size_of_lcd_sendString 0048                               ??i2___awdiv 000B  
                             ??i2___ftadd 001B                               ??i2___awmod 0005  
                                ?_sprintf 013C                               ??i2___ftdiv 0036  
                             ??i2___ftneg 0004                               ??i2___lldiv 0009  
                             ??i2___ftmul 0027                            __size_of_scale 04AE  
                             ??i2___llmod 0016                               ??i2___ftsub 0027  
                             ??i2___fttol 003B                                ?__lcd_Port 0001  
                          __size_of_putch 0014                      _INTERRUPT_Initialize 5B66  
                             ??i2__doprnt 004C                         ??_TMR0_Initialize 0092  
                                _INT0_ISR 48FE                          ?i2_EUSART1_Write 0001  
                                _INT1_ISR 557A                            ___wmul@product 00A2  
                        i2__doprnt@tmpval 0069                                  _LATAbits 000F89  
                                _LATCbits 000F8B                               ??i2_isdigit 0001  
                       i2_TMR0_StartTimer 5B6A       __size_of_INTERRUPT_InterruptManager 0098  
              ??_TMR0_SetInterruptHandler 0092                                  _PIR1bits 000F9E  
                      __end_of__div_to_l_ 4150                                  i2u544_40 4C5C  
                                i2u560_44 3CC0                                  i2u560_45 3CBC  
                                i2u544_45 4C54                                  i2u561_44 3CDE  
                                i2u561_45 3CDA                                  i2u562_44 3CFC  
                                i2u562_45 3CF8                                  i2u563_44 3D1A  
                                i2u563_45 3D16                                  i2u564_44 3D44  
                                i2u564_45 3D40                                  i2u709_40 5878  
                                i2u565_44 3D62                                  i2u565_45 3D5E  
                                i2u709_46 587A                                  i2u566_44 3D80  
                                i2u566_45 3D7C                                  i2u567_44 3D9E  
                                i2u559_44 3CA2                                  i2u567_45 3D9A  
                                i2u559_45 3C9E                                  i2u568_44 3DE0  
                                i2u568_45 3DDC                                  i2u569_44 3E1E  
                                i2u569_45 3E1A                             ??_TMR0_Reload 0001  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                      ?i2_TMR0_StartTimer 0001                                  _TMR0_ISR 59AC  
                         i2__div_to_l_@f1 0001                           i2__div_to_l_@f2 0004  
                                _RSET_BIT 068B                                ?_lcd_clear 0001  
                TMR0_ReadTimer@readValLow 0009                       ??i2_TMR0_StartTimer 0001  
                       ___wmul@multiplier 009E                                  i2___ftge 5218  
                                i2___wmul 5A2C                         i2___awdiv@divisor 0009  
                                i2_fround 3894                         i2___awdiv@counter 000B  
                         _lcd_sendCommand 5A06                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                                 copy_data0 577A  
                   ?_INTERRUPT_Initialize 0001                        i2___awmod@dividend 0001  
                        __size_ofi2_scale 03F0                 __end_ofi2_TMR0_StartTimer 5B6E  
                        __size_ofi2_putch 000A                                  _SetRange 3C86  
                                __Hrparam 0000                                  __Lrparam 0000  
                      __CFG_BOREN$SBORDIS 000000                         __CFG_P2BMX$PORTB5 000000  
                 ??_OSCILLATOR_Initialize 0090                         ??_TMR0_StartTimer 0090  
                        __size_of___awdiv 00BE                          __size_of___ftadd 0268  
                        __size_of___awmod 00A2                          __size_of___ftdiv 014C  
                        __size_of___ftneg 0030                     i2___wmul@multiplicand 0011  
                        __size_of___lldiv 00BC                          __size_of___ftmul 015E  
                        __size_of___llmod 009A                          __size_of___ftsub 004C  
                        __size_of___fttol 0144               __size_of_EUSART1_Initialize 0016  
                                ___ftpack 4A12                          __size_of__doprnt 126C  
                             _fround$1740 0103                               _fround$1741 0100  
                                ___lltoft 53AE                     __end_ofi2__tdiv_to_l_ 47D6  
                     __end_of_TMR0_Reload 5B5E                           _putch$intlevel0 5AEE  
                                ___lwtoft 5A76                          __size_of_isdigit 002A  
                                __ptext10 50DC                                  __ptext11 4EB4  
                                __ptext20 594C                                  __ptext12 3E2A  
                                __ptext21 4DEC                                  __ptext13 3FC8  
                                __ptext30 5AB8                                  __ptext22 56D8  
                                __ptext14 53AE                                  __ptext31 57AA  
                                __ptext23 5720                                  __ptext15 517E  
                                __ptext40 59AC                                  __ptext32 5B62  
                                __ptext24 542A                                  __ptext16 4F72  
                                __ptext41 5870                                  __ptext33 5B40  
                                __ptext25 5B0A                                  __ptext17 4560  
                                __ptext50 5B34                                  __ptext42 557A  
                                __ptext34 597C                                  __ptext26 5A06  
                                __ptext18 568C                                  __ptext51 5A9A  
                                __ptext43 48FE                                  __ptext35 5B18  
                                __ptext27 58E0                                  __ptext19 362C  
                                __ptext60 5514                                  __ptext52 3894  
                                __ptext44 4D06                                  __ptext36 5B66  
                                __ptext28 4414                                  __ptext61 532C  
                                __ptext53 5A2C                                  __ptext45 5B6A  
                                __ptext37 5B26                                  __ptext29 4A12  
                                __ptext70 5B54                                  __ptext62 4C12  
                                __ptext54 4B1E                                  __ptext46 5916  
                                __ptext38 5AD2                                  __ptext71 57EE  
                                __ptext63 5830                                  __ptext55 54A4  
                                __ptext47 196A                                  __ptext72 3C86  
                                __ptext64 3ADA                                  __ptext56 52A8  
                                __ptext48 2F90                                  __ptext73 0000  
                                __ptext65 5A52                                  __ptext57 46A4  
                                __ptext49 5B4A                                  __ptext66 5218  
                                __ptext58 47D6                                  __ptext67 5A76  
                                __ptext59 55DE                                  __ptext68 502E  
                                __ptext69 5B6E                                  __powers_ 0650  
                                _lcd_init 542A                               ??__lcd_Port 0090  
                        __size_of_sprintf 0052                            i2_isdigit$1289 0002  
                           __size_of_main 0166                          ??_TMR0_ReadTimer 0003  
                    __end_ofi2__div_to_l_ 48FE      __end_of_TMR0_DefaultInterruptHandler 58AA  
   __size_of_TMR0_DefaultInterruptHandler 003A              _TMR0_DefaultInterruptHandler 5870  
                         i2__doprnt@width 0070                                  int$flags 005F  
      __end_of_INTERRUPT_InterruptManager 00A0                _INTERRUPT_InterruptManager 0008  
                             ??_lcd_clear 0093                            __doprnt@tmpval 012E  
                 __end_of_lcd_sendCommand 5A2C                         i2___awmod@divisor 0003  
                       i2___awmod@counter 0005                                _INTCONbits 000FF2  
                          _lcd_sendString 56D8                                  isdigit@c 0092  
                  ??_INTERRUPT_Initialize 0090                                  scale@scl 0103  
                      _EXT_INT_Initialize 5B26                                  intlevel2 0000  
                               sprintf@ap 0143                                 sprintf@pb 0145  
                        ??_TMR0_StopTimer 0001                          __tdiv_to_l_@exp1 009E  
                        __tdiv_to_l_@cntr 009D                                 sprintf@wh 013C  
                        __tdiv_to_l_@quot 0099                          ___lldiv@dividend 0090  
                 ?_PIN_MANAGER_Initialize 0001                __size_ofi2_TMR0_StartTimer 0004  
                     ?_EXT_INT_Initialize 0001                                _RCSTA1bits 000FAB  
           ?_TMR0_DefaultInterruptHandler 0001                               _TMR0_Reload 5B54  
                                printf@ap 0052                                  printf@pb 0054  
                  __size_of_EUSART1_Write 000E                              ?__tdiv_to_l_ 0090  
                  __end_of_lcd_sendString 5720                      ??_EXT_INT_Initialize 0090  
                                sprintf@f 013E                          ___lldiv@quotient 0098  
                         _TMR0_Initialize 57AA                         __CFG_T3CMX$PORTC0 000000  
          __end_of_PIN_MANAGER_Initialize 59AC                         i2__div_to_l_@exp1 000C  
                       i2__div_to_l_@cntr 000B                         i2__div_to_l_@quot 0007  
