

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Mon Jan 23 21:39:53 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    94                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    95  0000                     
    96                           ; Version 1.40
    97                           ; Generated 01/12/2016 GMT
    98                           ; 
    99                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
   100                           ; All rights reserved.
   101                           ; 
   102                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   103                           ; 
   104                           ; Redistribution and use in source and binary forms, with or without modification, are
   105                           ; permitted provided that the following conditions are met:
   106                           ; 
   107                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   108                           ;        conditions and the following disclaimer.
   109                           ; 
   110                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   111                           ;        of conditions and the following disclaimer in the documentation and/or other
   112                           ;        materials provided with the distribution.
   113                           ; 
   114                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   115                           ;        software without specific prior written permission.
   116                           ; 
   117                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   118                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   119                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   120                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   121                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   122                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   123                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   124                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   125                           ; 
   126                           ; 
   127                           ; Code-generator required, PIC18F25K22 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130  0000                     
   131                           	psect	idataBANK0
   132  0055D6                     __pidataBANK0:
   133                           	opt stack 0
   134                           
   135                           ;initializer for _units
   136  0055D6  70                 	db	112
   137  0055D7  46                 	db	70
   138                           
   139                           ;initializer for _auto_range
   140  0055D8  01                 	db	1
   141                           
   142                           ;initializer for _range
   143  0055D9  02                 	db	2
   144                           
   145                           	psect	mediumconst
   146  007EEE                     __pmediumconst:
   147                           	opt stack 0
   148  007EEE  00                 	db	0
   149  007EEF                     _dpowers:
   150                           	opt stack 0
   151  007EEF  0001               	dw	1
   152  007EF1  0000               	dw	0
   153  007EF3  000A               	dw	10
   154  007EF5  0000               	dw	0
   155  007EF7  0064               	dw	100
   156  007EF9  0000               	dw	0
   157  007EFB  03E8               	dw	1000
   158  007EFD  0000               	dw	0
   159  007EFF  2710               	dw	10000
   160  007F01  0000               	dw	0
   161  007F03  86A0               	dw	34464
   162  007F05  0001               	dw	1
   163  007F07  4240               	dw	16960
   164  007F09  000F               	dw	15
   165  007F0B  9680               	dw	38528
   166  007F0D  0098               	dw	152
   167  007F0F  E100               	dw	57600
   168  007F11  05F5               	dw	1525
   169  007F13  CA00               	dw	51712
   170  007F15  3B9A               	dw	15258
   171  007F17                     __end_of_dpowers:
   172                           	opt stack 0
   173  007F17                     __npowers_:
   174                           	opt stack 0
   175  007F17  00                 	db	0
   176  007F18  80                 	db	128
   177  007F19  3F                 	db	63
   178  007F1A  CD                 	db	205
   179  007F1B  CC                 	db	204
   180  007F1C  3D                 	db	61
   181  007F1D  D7                 	db	215
   182  007F1E  23                 	db	35
   183  007F1F  3C                 	db	60
   184  007F20  12                 	db	18
   185  007F21  83                 	db	131
   186  007F22  3A                 	db	58
   187  007F23  B7                 	db	183
   188  007F24  D1                 	db	209
   189  007F25  38                 	db	56
   190  007F26  C6                 	db	198
   191  007F27  27                 	db	39
   192  007F28  37                 	db	55
   193  007F29  38                 	db	56
   194  007F2A  86                 	db	134
   195  007F2B  35                 	db	53
   196  007F2C  C0                 	db	192
   197  007F2D  D6                 	db	214
   198  007F2E  33                 	db	51
   199  007F2F  CC                 	db	204
   200  007F30  2B                 	db	43
   201  007F31  32                 	db	50
   202  007F32  70                 	db	112
   203  007F33  89                 	db	137
   204  007F34  30                 	db	48
   205  007F35  E7                 	db	231
   206  007F36  DB                 	db	219
   207  007F37  2E                 	db	46
   208  007F38  E5                 	db	229
   209  007F39  3C                 	db	60
   210  007F3A  1E                 	db	30
   211  007F3B  42                 	db	66
   212  007F3C  A2                 	db	162
   213  007F3D  0D                 	db	13
   214  007F3E                     __end_of__npowers_:
   215                           	opt stack 0
   216  007F3E                     __powers_:
   217                           	opt stack 0
   218  007F3E  00                 	db	0
   219  007F3F  80                 	db	128
   220  007F40  3F                 	db	63
   221  007F41  00                 	db	0
   222  007F42  20                 	db	32
   223  007F43  41                 	db	65
   224  007F44  00                 	db	0
   225  007F45  C8                 	db	200
   226  007F46  42                 	db	66
   227  007F47  00                 	db	0
   228  007F48  7A                 	db	122
   229  007F49  44                 	db	68
   230  007F4A  40                 	db	64
   231  007F4B  1C                 	db	28
   232  007F4C  46                 	db	70
   233  007F4D  50                 	db	80
   234  007F4E  C3                 	db	195
   235  007F4F  47                 	db	71
   236  007F50  24                 	db	36
   237  007F51  74                 	db	116
   238  007F52  49                 	db	73
   239  007F53  97                 	db	151
   240  007F54  18                 	db	24
   241  007F55  4B                 	db	75
   242  007F56  BC                 	db	188
   243  007F57  BE                 	db	190
   244  007F58  4C                 	db	76
   245  007F59  6B                 	db	107
   246  007F5A  6E                 	db	110
   247  007F5B  4E                 	db	78
   248  007F5C  03                 	db	3
   249  007F5D  15                 	db	21
   250  007F5E  50                 	db	80
   251  007F5F  79                 	db	121
   252  007F60  AD                 	db	173
   253  007F61  60                 	db	96
   254  007F62  F3                 	db	243
   255  007F63  49                 	db	73
   256  007F64  71                 	db	113
   257  007F65                     __end_of__powers_:
   258                           	opt stack 0
   259  007F65                     _cal_current:
   260                           	opt stack 0
   261  007F65  00                 	db	0
   262  007F66  00                 	db	0
   263  007F67  3F                 	db	63
   264  007F68  9A                 	db	154
   265  007F69  F9                 	db	249
   266  007F6A  40                 	db	64
   267  007F6B  DC                 	db	220
   268  007F6C  D8                 	db	216
   269  007F6D  42                 	db	66
   270  007F6E  70                 	db	112
   271  007F6F  8A                 	db	138
   272  007F70  45                 	db	69
   273  007F71  C0                 	db	192
   274  007F72  DA                 	db	218
   275  007F73  47                 	db	71
   276  007F74                     __end_of_cal_current:
   277                           	opt stack 0
   278  007F74                     _R1_BIT:
   279                           	opt stack 0
   280  007F74  00                 	db	0
   281  007F75  01                 	db	1
   282  007F76  02                 	db	2
   283  007F77  03                 	db	3
   284  007F78  04                 	db	4
   285  007F79                     __end_of_R1_BIT:
   286                           	opt stack 0
   287  007F79                     _RSET_BIT:
   288                           	opt stack 0
   289  007F79  02                 	db	2
   290  007F7A  03                 	db	3
   291  007F7B  03                 	db	3
   292  007F7C  04                 	db	4
   293  007F7D  05                 	db	5
   294  007F7E                     __end_of_RSET_BIT:
   295                           	opt stack 0
   296  007F7E                     STR_2:
   297  007F7E  43                 	db	67	;'C'
   298  007F7F  61                 	db	97	;'a'
   299  007F80  70                 	db	112	;'p'
   300  007F81  61                 	db	97	;'a'
   301  007F82  63                 	db	99	;'c'
   302  007F83  69                 	db	105	;'i'
   303  007F84  74                 	db	116	;'t'
   304  007F85  61                 	db	97	;'a'
   305  007F86  6E                 	db	110	;'n'
   306  007F87  63                 	db	99	;'c'
   307  007F88  65                 	db	101	;'e'
   308  007F89  3A                 	db	58	;':'
   309  007F8A  20                 	db	32
   310  007F8B  25                 	db	37
   311  007F8C  30                 	db	48	;'0'
   312  007F8D  2E                 	db	46
   313  007F8E  32                 	db	50	;'2'
   314  007F8F  66                 	db	102	;'f'
   315  007F90  20                 	db	32
   316  007F91  70                 	db	112	;'p'
   317  007F92  46                 	db	70	;'F'
   318  007F93  20                 	db	32
   319  007F94  28                 	db	40
   320  007F95  43                 	db	67	;'C'
   321  007F96  6F                 	db	111	;'o'
   322  007F97  75                 	db	117	;'u'
   323  007F98  6E                 	db	110	;'n'
   324  007F99  74                 	db	116	;'t'
   325  007F9A  3A                 	db	58	;':'
   326  007F9B  20                 	db	32
   327  007F9C  25                 	db	37
   328  007F9D  75                 	db	117	;'u'
   329  007F9E  29                 	db	41
   330  007F9F  20                 	db	32
   331  007FA0  2D                 	db	45
   332  007FA1  20                 	db	32
   333  007FA2  52                 	db	82	;'R'
   334  007FA3  61                 	db	97	;'a'
   335  007FA4  6E                 	db	110	;'n'
   336  007FA5  67                 	db	103	;'g'
   337  007FA6  65                 	db	101	;'e'
   338  007FA7  3A                 	db	58	;':'
   339  007FA8  20                 	db	32
   340  007FA9  25                 	db	37
   341  007FAA  64                 	db	100	;'d'
   342  007FAB  20                 	db	32
   343  007FAC  28                 	db	40
   344  007FAD  25                 	db	37
   345  007FAE  64                 	db	100	;'d'
   346  007FAF  29                 	db	41
   347  007FB0  0D                 	db	13
   348  007FB1  0A                 	db	10
   349  007FB2  00                 	db	0
   350  007FB3                     STR_1:
   351  007FB3  0D                 	db	13
   352  007FB4  0A                 	db	10
   353  007FB5  53                 	db	83	;'S'
   354  007FB6  65                 	db	101	;'e'
   355  007FB7  74                 	db	116	;'t'
   356  007FB8  74                 	db	116	;'t'
   357  007FB9  69                 	db	105	;'i'
   358  007FBA  6E                 	db	110	;'n'
   359  007FBB  67                 	db	103	;'g'
   360  007FBC  20                 	db	32
   361  007FBD  72                 	db	114	;'r'
   362  007FBE  61                 	db	97	;'a'
   363  007FBF  6E                 	db	110	;'n'
   364  007FC0  67                 	db	103	;'g'
   365  007FC1  65                 	db	101	;'e'
   366  007FC2  20                 	db	32
   367  007FC3  3D                 	db	61	;'='
   368  007FC4  20                 	db	32
   369  007FC5  25                 	db	37
   370  007FC6  64                 	db	100	;'d'
   371  007FC7  0D                 	db	13
   372  007FC8  0A                 	db	10
   373  007FC9  00                 	db	0
   374  007FCA  25                 	db	37
   375  007FCB  6C                 	db	108	;'l'
   376  007FCC  75                 	db	117	;'u'
   377  007FCD  2E                 	db	46
   378  007FCE  25                 	db	37
   379  007FCF  36                 	db	54	;'6'
   380  007FD0  2E                 	db	46
   381  007FD1  36                 	db	54	;'6'
   382  007FD2  6C                 	db	108	;'l'
   383  007FD3  75                 	db	117	;'u'
   384  007FD4  00                 	db	0
   385  007FD5                     STR_4:
   386  007FD5  43                 	db	67	;'C'
   387  007FD6  3D                 	db	61	;'='
   388  007FD7  25                 	db	37
   389  007FD8  31                 	db	49	;'1'
   390  007FD9  32                 	db	50	;'2'
   391  007FDA  2E                 	db	46
   392  007FDB  33                 	db	51	;'3'
   393  007FDC  66                 	db	102	;'f'
   394  007FDD  6E                 	db	110	;'n'
   395  007FDE  46                 	db	70	;'F'
   396  007FDF  00                 	db	0
   397  007FE0                     STR_6:
   398  007FE0  43                 	db	67	;'C'
   399  007FE1  3D                 	db	61	;'='
   400  007FE2  25                 	db	37
   401  007FE3  31                 	db	49	;'1'
   402  007FE4  32                 	db	50	;'2'
   403  007FE5  2E                 	db	46
   404  007FE6  30                 	db	48	;'0'
   405  007FE7  66                 	db	102	;'f'
   406  007FE8  70                 	db	112	;'p'
   407  007FE9  46                 	db	70	;'F'
   408  007FEA  00                 	db	0
   409  007FEB                     STR_3:
   410  007FEB  43                 	db	67	;'C'
   411  007FEC  3D                 	db	61	;'='
   412  007FED  25                 	db	37
   413  007FEE  31                 	db	49	;'1'
   414  007FEF  32                 	db	50	;'2'
   415  007FF0  2E                 	db	46
   416  007FF1  36                 	db	54	;'6'
   417  007FF2  66                 	db	102	;'f'
   418  007FF3  75                 	db	117	;'u'
   419  007FF4  46                 	db	70	;'F'
   420  007FF5  00                 	db	0
   421  007FF6                     STR_5:
   422  007FF6  43                 	db	67	;'C'
   423  007FF7  3D                 	db	61	;'='
   424  007FF8  45                 	db	69	;'E'
   425  007FF9  52                 	db	82	;'R'
   426  007FFA  52                 	db	82	;'R'
   427  007FFB  4F                 	db	79	;'O'
   428  007FFC  52                 	db	82	;'R'
   429  007FFD  00                 	db	0
   430                           
   431                           ; #config settings
   432  007FFE  00                 	db	0	; dummy byte at the end
   433  0000                     
   434                           	psect	nvCOMRAM
   435  00005C                     __pnvCOMRAM:
   436                           	opt stack 0
   437  00005C                     _timer0ReloadVal:
   438                           	opt stack 0
   439  00005C                     	ds	2
   440                           
   441                           	psect	nvBANK0
   442  0000CE                     __pnvBANK0:
   443                           	opt stack 0
   444  0000CE                     _TMR0_InterruptHandler:
   445                           	opt stack 0
   446  0000CE                     	ds	2
   447  0000                     _ANSELA	set	3896
   448  0000                     _ANSELB	set	3897
   449  0000                     _ANSELC	set	3898
   450  0000                     _BAUDCON1	set	4024
   451  0000                     _INTCON2bits	set	4081
   452  0000                     _INTCON3bits	set	4080
   453  0000                     _INTCONbits	set	4082
   454  0000                     _LATA	set	3977
   455  0000                     _LATAbits	set	3977
   456  0000                     _LATB	set	3978
   457  0000                     _LATC	set	3979
   458  0000                     _LATCbits	set	3979
   459  0000                     _OSCCON	set	4051
   460  0000                     _OSCCON2	set	4050
   461  0000                     _OSCTUNE	set	3995
   462  0000                     _PIR1bits	set	3998
   463  0000                     _RCONbits	set	4048
   464  0000                     _RCREG1	set	4014
   465  0000                     _RCSTA1	set	4011
   466  0000                     _RCSTA1bits	set	4011
   467  0000                     _SPBRG1	set	4015
   468  0000                     _SPBRGH1	set	4016
   469  0000                     _T0CON	set	4053
   470  0000                     _T0CONbits	set	4053
   471  0000                     _TMR0H	set	4055
   472  0000                     _TMR0L	set	4054
   473  0000                     _TRISA	set	3986
   474  0000                     _TRISB	set	3987
   475  0000                     _TRISC	set	3988
   476  0000                     _TXREG1	set	4013
   477  0000                     _TXSTA1	set	4012
   478  0000                     _WPUB	set	3937
   479                           
   480                           	psect	cinit
   481  005240                     __pcinit:
   482                           	opt stack 0
   483  005240                     start_initialization:
   484                           	opt stack 0
   485  005240                     __initialization:
   486                           	opt stack 0
   487                           
   488                           ; Initialize objects allocated to BANK0 (4 bytes)
   489                           ; load TBLPTR registers with __pidataBANK0
   490  005240  0ED6               	movlw	low __pidataBANK0
   491  005242  6EF6               	movwf	tblptrl,c
   492  005244  0E55               	movlw	high __pidataBANK0
   493  005246  6EF7               	movwf	tblptrh,c
   494  005248  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   495  00524A  6EF8               	movwf	tblptru,c
   496  00524C  EE00  F0CA         	lfsr	0,__pdataBANK0
   497  005250  EE10 F004          	lfsr	1,4
   498  005254                     copy_data0:
   499  005254  0009               	tblrd		*+
   500  005256  CFF5 FFEE          	movff	tablat,postinc0
   501  00525A  50E5               	movf	postdec1,w,c
   502  00525C  50E1               	movf	fsr1l,w,c
   503  00525E  E1FA               	bnz	copy_data0
   504                           
   505                           ; Clear objects allocated to BANK0 (20 bytes)
   506  005260  EE00  F0B6         	lfsr	0,__pbssBANK0
   507  005264  0E14               	movlw	20
   508  005266                     clear_0:
   509  005266  6AEE               	clrf	postinc0,c
   510  005268  06E8               	decf	wreg,f,c
   511  00526A  E1FD               	bnz	clear_0
   512                           
   513                           ; Clear objects allocated to COMRAM (4 bytes)
   514  00526C  6A5B               	clrf	(__pbssCOMRAM+3)& (0+255),c
   515  00526E  6A5A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   516  005270  6A59               	clrf	(__pbssCOMRAM+1)& (0+255),c
   517  005272  6A58               	clrf	__pbssCOMRAM& (0+255),c
   518  005274                     end_of_initialization:
   519                           	opt stack 0
   520  005274                     __end_of__initialization:
   521                           	opt stack 0
   522  005274  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   523  005276  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   524  005278  0E00               	movlw	low (__Lmediumconst shr (0+16))
   525  00527A  6EF8               	movwf	tblptru,c
   526  00527C  0100               	movlb	0
   527  00527E  EFB7  F01C         	goto	_main	;jump to C main() function
   528                           tblptru	equ	0xFF8
   529                           tblptrh	equ	0xFF7
   530                           tblptrl	equ	0xFF6
   531                           tablat	equ	0xFF5
   532                           postinc0	equ	0xFEE
   533                           wreg	equ	0xFE8
   534                           postdec1	equ	0xFE5
   535                           fsr1l	equ	0xFE1
   536                           
   537                           	psect	bssCOMRAM
   538  000058                     __pbssCOMRAM:
   539                           	opt stack 0
   540  000058                     _result:
   541                           	opt stack 0
   542  000058                     	ds	3
   543  00005B                     _cal_mode:
   544                           	opt stack 0
   545  00005B                     	ds	1
   546                           tblptru	equ	0xFF8
   547                           tblptrh	equ	0xFF7
   548                           tblptrl	equ	0xFF6
   549                           tablat	equ	0xFF5
   550                           postinc0	equ	0xFEE
   551                           wreg	equ	0xFE8
   552                           postdec1	equ	0xFE5
   553                           fsr1l	equ	0xFE1
   554                           
   555                           	psect	bssBANK0
   556  0000B6                     __pbssBANK0:
   557                           	opt stack 0
   558  0000B6                     _reading:
   559                           	opt stack 0
   560  0000B6                     	ds	2
   561  0000B8                     _stored_range:
   562                           	opt stack 0
   563  0000B8                     	ds	1
   564  0000B9                     ftoa@buf:
   565                           	opt stack 0
   566  0000B9                     	ds	17
   567                           tblptru	equ	0xFF8
   568                           tblptrh	equ	0xFF7
   569                           tblptrl	equ	0xFF6
   570                           tablat	equ	0xFF5
   571                           postinc0	equ	0xFEE
   572                           wreg	equ	0xFE8
   573                           postdec1	equ	0xFE5
   574                           fsr1l	equ	0xFE1
   575                           
   576                           	psect	dataBANK0
   577  0000CA                     __pdataBANK0:
   578                           	opt stack 0
   579  0000CA                     _units:
   580                           	opt stack 0
   581  0000CA                     	ds	2
   582  0000CC                     _auto_range:
   583                           	opt stack 0
   584  0000CC                     	ds	1
   585  0000CD                     _range:
   586                           	opt stack 0
   587  0000CD                     	ds	1
   588                           tblptru	equ	0xFF8
   589                           tblptrh	equ	0xFF7
   590                           tblptrl	equ	0xFF6
   591                           tablat	equ	0xFF5
   592                           postinc0	equ	0xFEE
   593                           wreg	equ	0xFE8
   594                           postdec1	equ	0xFE5
   595                           fsr1l	equ	0xFE1
   596                           
   597                           	psect	cstackBANK1
   598  000100                     __pcstackBANK1:
   599                           	opt stack 0
   600  000100                     _fround$1649:
   601                           	opt stack 0
   602  000100                     _scale$1650:
   603                           	opt stack 0
   604                           
   605                           ; 3 bytes @ 0x0
   606  000100                     	ds	3
   607  000103                     scale@scl:
   608                           	opt stack 0
   609  000103                     _fround$1648:
   610                           	opt stack 0
   611                           
   612                           ; 3 bytes @ 0x3
   613  000103                     	ds	1
   614  000104                     ?___fttol:
   615                           	opt stack 0
   616  000104                     ___fttol@f1:
   617                           	opt stack 0
   618                           
   619                           ; 3 bytes @ 0x4
   620  000104                     	ds	2
   621  000106                     fround@prec:
   622                           	opt stack 0
   623                           
   624                           ; 1 bytes @ 0x6
   625  000106                     	ds	1
   626  000107                     ?___ftadd:
   627                           	opt stack 0
   628  000107                     ___ftadd@f1:
   629                           	opt stack 0
   630                           
   631                           ; 3 bytes @ 0x7
   632  000107                     	ds	1
   633  000108                     ??___fttol:
   634                           
   635                           ; 1 bytes @ 0x8
   636  000108                     	ds	2
   637  00010A                     ___ftadd@f2:
   638                           	opt stack 0
   639                           
   640                           ; 3 bytes @ 0xA
   641  00010A                     	ds	3
   642  00010D                     ??___ftadd:
   643  00010D                     ___fttol@sign1:
   644                           	opt stack 0
   645                           
   646                           ; 1 bytes @ 0xD
   647  00010D                     	ds	1
   648  00010E                     ___fttol@lval:
   649                           	opt stack 0
   650                           
   651                           ; 4 bytes @ 0xE
   652  00010E                     	ds	2
   653  000110                     ___ftadd@sign:
   654                           	opt stack 0
   655                           
   656                           ; 1 bytes @ 0x10
   657  000110                     	ds	1
   658  000111                     ___ftadd@exp2:
   659                           	opt stack 0
   660                           
   661                           ; 1 bytes @ 0x11
   662  000111                     	ds	1
   663  000112                     ___ftadd@exp1:
   664                           	opt stack 0
   665  000112                     ___fttol@exp1:
   666                           	opt stack 0
   667                           
   668                           ; 1 bytes @ 0x12
   669  000112                     	ds	1
   670  000113                     ?___ftsub:
   671                           	opt stack 0
   672  000113                     ___ftsub@f1:
   673                           	opt stack 0
   674                           
   675                           ; 3 bytes @ 0x13
   676  000113                     	ds	3
   677  000116                     ___ftsub@f2:
   678                           	opt stack 0
   679                           
   680                           ; 3 bytes @ 0x16
   681  000116                     	ds	3
   682  000119                     ?__doprnt:
   683                           	opt stack 0
   684  000119                     __doprnt@pb:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0x19
   688  000119                     	ds	2
   689  00011B                     __doprnt@f:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x1B
   693  00011B                     	ds	2
   694  00011D                     __doprnt@ap:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0x1D
   698  00011D                     	ds	2
   699  00011F                     ??__doprnt:
   700                           
   701                           ; 1 bytes @ 0x1F
   702  00011F                     	ds	6
   703  000125                     __doprnt$1651:
   704                           	opt stack 0
   705                           
   706                           ; 3 bytes @ 0x25
   707  000125                     	ds	3
   708  000128                     __doprnt@exp:
   709                           	opt stack 0
   710                           
   711                           ; 2 bytes @ 0x28
   712  000128                     	ds	2
   713  00012A                     __doprnt@val:
   714                           	opt stack 0
   715                           
   716                           ; 4 bytes @ 0x2A
   717  00012A                     	ds	4
   718  00012E                     __doprnt@tmpval:
   719                           	opt stack 0
   720                           
   721                           ; 4 bytes @ 0x2E
   722  00012E                     	ds	4
   723  000132                     __doprnt@width:
   724                           	opt stack 0
   725                           
   726                           ; 2 bytes @ 0x32
   727  000132                     	ds	2
   728  000134                     __doprnt@fval:
   729                           	opt stack 0
   730                           
   731                           ; 3 bytes @ 0x34
   732  000134                     	ds	3
   733  000137                     __doprnt@flag:
   734                           	opt stack 0
   735                           
   736                           ; 2 bytes @ 0x37
   737  000137                     	ds	2
   738  000139                     __doprnt@prec:
   739                           	opt stack 0
   740                           
   741                           ; 2 bytes @ 0x39
   742  000139                     	ds	2
   743  00013B                     __doprnt@c:
   744                           	opt stack 0
   745                           
   746                           ; 1 bytes @ 0x3B
   747  00013B                     	ds	1
   748  00013C                     ?_sprintf:
   749                           	opt stack 0
   750  00013C                     sprintf@wh:
   751                           	opt stack 0
   752                           
   753                           ; 2 bytes @ 0x3C
   754  00013C                     	ds	2
   755  00013E                     sprintf@f:
   756                           	opt stack 0
   757                           
   758                           ; 2 bytes @ 0x3E
   759  00013E                     	ds	5
   760  000143                     sprintf@ap:
   761                           	opt stack 0
   762                           
   763                           ; 2 bytes @ 0x43
   764  000143                     	ds	2
   765  000145                     sprintf@pb:
   766                           	opt stack 0
   767                           
   768                           ; 4 bytes @ 0x45
   769  000145                     	ds	4
   770  000149                     main@cap_string:
   771                           	opt stack 0
   772                           
   773                           ; 16 bytes @ 0x49
   774  000149                     	ds	16
   775                           tblptru	equ	0xFF8
   776                           tblptrh	equ	0xFF7
   777                           tblptrl	equ	0xFF6
   778                           tablat	equ	0xFF5
   779                           postinc0	equ	0xFEE
   780                           wreg	equ	0xFE8
   781                           postdec1	equ	0xFE5
   782                           fsr1l	equ	0xFE1
   783                           
   784                           	psect	cstackBANK0
   785  000060                     __pcstackBANK0:
   786                           	opt stack 0
   787  000060                     i2__doprnt$1833:
   788                           	opt stack 0
   789                           
   790                           ; 3 bytes @ 0x0
   791  000060                     	ds	3
   792  000063                     i2__doprnt@exp:
   793                           	opt stack 0
   794                           
   795                           ; 2 bytes @ 0x3
   796  000063                     	ds	2
   797  000065                     i2__doprnt@val:
   798                           	opt stack 0
   799                           
   800                           ; 4 bytes @ 0x5
   801  000065                     	ds	4
   802  000069                     i2__doprnt@tmpval:
   803                           	opt stack 0
   804                           
   805                           ; 4 bytes @ 0x9
   806  000069                     	ds	4
   807  00006D                     i2__doprnt@fval:
   808                           	opt stack 0
   809                           
   810                           ; 3 bytes @ 0xD
   811  00006D                     	ds	3
   812  000070                     i2__doprnt@width:
   813                           	opt stack 0
   814                           
   815                           ; 2 bytes @ 0x10
   816  000070                     	ds	2
   817  000072                     i2__doprnt@flag:
   818                           	opt stack 0
   819                           
   820                           ; 2 bytes @ 0x12
   821  000072                     	ds	2
   822  000074                     i2__doprnt@prec:
   823                           	opt stack 0
   824                           
   825                           ; 2 bytes @ 0x14
   826  000074                     	ds	2
   827  000076                     i2__doprnt@c:
   828                           	opt stack 0
   829                           
   830                           ; 1 bytes @ 0x16
   831  000076                     	ds	1
   832  000077                     ?_printf:
   833                           	opt stack 0
   834  000077                     printf@f:
   835                           	opt stack 0
   836                           
   837                           ; 2 bytes @ 0x17
   838  000077                     	ds	11
   839  000082                     ??_INTERRUPT_InterruptManager:
   840                           
   841                           ; 1 bytes @ 0x22
   842  000082                     	ds	14
   843  000090                     ??_isdigit:
   844  000090                     ?___awmod:
   845                           	opt stack 0
   846  000090                     ?___ftpack:
   847                           	opt stack 0
   848  000090                     ?___ftneg:
   849                           	opt stack 0
   850  000090                     ?__tdiv_to_l_:
   851                           	opt stack 0
   852  000090                     ?__div_to_l_:
   853                           	opt stack 0
   854  000090                     ?___lldiv:
   855                           	opt stack 0
   856  000090                     EUSART1_Write@txData:
   857                           	opt stack 0
   858  000090                     __lcd_Port@a:
   859                           	opt stack 0
   860  000090                     TMR0_SetInterruptHandler@InterruptHandler:
   861                           	opt stack 0
   862  000090                     ___awmod@dividend:
   863                           	opt stack 0
   864  000090                     __div_to_l_@f1:
   865                           	opt stack 0
   866  000090                     ___ftpack@arg:
   867                           	opt stack 0
   868  000090                     __tdiv_to_l_@f1:
   869                           	opt stack 0
   870  000090                     ___ftge@ff1:
   871                           	opt stack 0
   872  000090                     ___ftneg@f1:
   873                           	opt stack 0
   874  000090                     ___lldiv@dividend:
   875                           	opt stack 0
   876                           
   877                           ; 4 bytes @ 0x30
   878  000090                     	ds	1
   879  000091                     ??_lcd_sendCommand:
   880  000091                     putch@txData:
   881                           	opt stack 0
   882  000091                     lcd_sendChar@temp:
   883                           	opt stack 0
   884  000091                     _isdigit$1198:
   885                           	opt stack 0
   886                           
   887                           ; 1 bytes @ 0x31
   888  000091                     	ds	1
   889  000092                     ??_TMR0_Initialize:
   890  000092                     lcd_sendCommand@a:
   891                           	opt stack 0
   892  000092                     lcd_sendChar@y:
   893                           	opt stack 0
   894  000092                     isdigit@c:
   895                           	opt stack 0
   896  000092                     ___awmod@divisor:
   897                           	opt stack 0
   898                           
   899                           ; 2 bytes @ 0x32
   900  000092                     	ds	1
   901  000093                     ??_lcd_init:
   902  000093                     lcd_setPosition@y:
   903                           	opt stack 0
   904  000093                     lcd_sendChar@a:
   905                           	opt stack 0
   906  000093                     ___ftpack@exp:
   907                           	opt stack 0
   908  000093                     __div_to_l_@f2:
   909                           	opt stack 0
   910  000093                     __tdiv_to_l_@f2:
   911                           	opt stack 0
   912  000093                     ___ftge@ff2:
   913                           	opt stack 0
   914                           
   915                           ; 3 bytes @ 0x33
   916  000093                     	ds	1
   917  000094                     lcd_setPosition@x:
   918                           	opt stack 0
   919  000094                     ___awmod@counter:
   920                           	opt stack 0
   921  000094                     ___ftpack@sign:
   922                           	opt stack 0
   923  000094                     lcd_sendString@a:
   924                           	opt stack 0
   925  000094                     ___lldiv@divisor:
   926                           	opt stack 0
   927                           
   928                           ; 4 bytes @ 0x34
   929  000094                     	ds	1
   930  000095                     ??___ftpack:
   931  000095                     lcd_setPosition@i:
   932                           	opt stack 0
   933  000095                     ___awmod@sign:
   934                           	opt stack 0
   935                           
   936                           ; 1 bytes @ 0x35
   937  000095                     	ds	1
   938  000096                     ??__tdiv_to_l_:
   939  000096                     ??___ftge:
   940  000096                     ?___awdiv:
   941                           	opt stack 0
   942  000096                     lcd_setPosition@j:
   943                           	opt stack 0
   944  000096                     lcd_sendString@i:
   945                           	opt stack 0
   946  000096                     ___awdiv@dividend:
   947                           	opt stack 0
   948  000096                     __div_to_l_@quot:
   949                           	opt stack 0
   950                           
   951                           ; 4 bytes @ 0x36
   952  000096                     	ds	1
   953  000097                     lcd_setPosition@temp:
   954                           	opt stack 0
   955                           
   956                           ; 1 bytes @ 0x37
   957  000097                     	ds	1
   958  000098                     ?___ftdiv:
   959                           	opt stack 0
   960  000098                     ?___lltoft:
   961                           	opt stack 0
   962  000098                     lcd_sendStringToPos@y:
   963                           	opt stack 0
   964  000098                     ___awdiv@divisor:
   965                           	opt stack 0
   966  000098                     ___ftdiv@f1:
   967                           	opt stack 0
   968  000098                     ___lldiv@quotient:
   969                           	opt stack 0
   970  000098                     ___lltoft@c:
   971                           	opt stack 0
   972                           
   973                           ; 4 bytes @ 0x38
   974  000098                     	ds	1
   975  000099                     lcd_sendStringToPos@charString:
   976                           	opt stack 0
   977  000099                     __tdiv_to_l_@quot:
   978                           	opt stack 0
   979                           
   980                           ; 4 bytes @ 0x39
   981  000099                     	ds	1
   982  00009A                     ___awdiv@counter:
   983                           	opt stack 0
   984  00009A                     __div_to_l_@cntr:
   985                           	opt stack 0
   986                           
   987                           ; 1 bytes @ 0x3A
   988  00009A                     	ds	1
   989  00009B                     lcd_sendStringToPos@x:
   990                           	opt stack 0
   991  00009B                     ___awdiv@sign:
   992                           	opt stack 0
   993  00009B                     __div_to_l_@exp1:
   994                           	opt stack 0
   995  00009B                     ___ftdiv@f2:
   996                           	opt stack 0
   997                           
   998                           ; 3 bytes @ 0x3B
   999  00009B                     	ds	1
  1000  00009C                     ??___lltoft:
  1001  00009C                     ___lldiv@counter:
  1002                           	opt stack 0
  1003  00009C                     ___awdiv@quotient:
  1004                           	opt stack 0
  1005                           
  1006                           ; 2 bytes @ 0x3C
  1007  00009C                     	ds	1
  1008  00009D                     ?___llmod:
  1009                           	opt stack 0
  1010  00009D                     __tdiv_to_l_@cntr:
  1011                           	opt stack 0
  1012  00009D                     ___llmod@dividend:
  1013                           	opt stack 0
  1014                           
  1015                           ; 4 bytes @ 0x3D
  1016  00009D                     	ds	1
  1017  00009E                     ??___ftdiv:
  1018  00009E                     ?___wmul:
  1019                           	opt stack 0
  1020  00009E                     __tdiv_to_l_@exp1:
  1021                           	opt stack 0
  1022  00009E                     ___wmul@multiplier:
  1023                           	opt stack 0
  1024                           
  1025                           ; 2 bytes @ 0x3E
  1026  00009E                     	ds	2
  1027  0000A0                     ___lltoft@exp:
  1028                           	opt stack 0
  1029  0000A0                     ___wmul@multiplicand:
  1030                           	opt stack 0
  1031                           
  1032                           ; 2 bytes @ 0x40
  1033  0000A0                     	ds	1
  1034  0000A1                     ___ftdiv@cntr:
  1035                           	opt stack 0
  1036  0000A1                     ___llmod@divisor:
  1037                           	opt stack 0
  1038                           
  1039                           ; 4 bytes @ 0x41
  1040  0000A1                     	ds	1
  1041  0000A2                     ___wmul@product:
  1042                           	opt stack 0
  1043  0000A2                     ___ftdiv@f3:
  1044                           	opt stack 0
  1045                           
  1046                           ; 3 bytes @ 0x42
  1047  0000A2                     	ds	2
  1048  0000A4                     ?___ftmul:
  1049                           	opt stack 0
  1050  0000A4                     ___ftmul@f1:
  1051                           	opt stack 0
  1052                           
  1053                           ; 3 bytes @ 0x44
  1054  0000A4                     	ds	1
  1055  0000A5                     ___ftdiv@exp:
  1056                           	opt stack 0
  1057  0000A5                     ___llmod@counter:
  1058                           	opt stack 0
  1059                           
  1060                           ; 1 bytes @ 0x45
  1061  0000A5                     	ds	1
  1062  0000A6                     ___ftdiv@sign:
  1063                           	opt stack 0
  1064                           
  1065                           ; 1 bytes @ 0x46
  1066  0000A6                     	ds	1
  1067  0000A7                     ___ftmul@f2:
  1068                           	opt stack 0
  1069                           
  1070                           ; 3 bytes @ 0x47
  1071  0000A7                     	ds	3
  1072  0000AA                     ??___ftmul:
  1073                           
  1074                           ; 1 bytes @ 0x4A
  1075  0000AA                     	ds	3
  1076  0000AD                     ___ftmul@exp:
  1077                           	opt stack 0
  1078                           
  1079                           ; 1 bytes @ 0x4D
  1080  0000AD                     	ds	1
  1081  0000AE                     ___ftmul@f3_as_product:
  1082                           	opt stack 0
  1083                           
  1084                           ; 3 bytes @ 0x4E
  1085  0000AE                     	ds	3
  1086  0000B1                     ___ftmul@cntr:
  1087                           	opt stack 0
  1088                           
  1089                           ; 1 bytes @ 0x51
  1090  0000B1                     	ds	1
  1091  0000B2                     ___ftmul@sign:
  1092                           	opt stack 0
  1093                           
  1094                           ; 1 bytes @ 0x52
  1095  0000B2                     	ds	1
  1096  0000B3                     ?_fround:
  1097                           	opt stack 0
  1098  0000B3                     ?_scale:
  1099                           	opt stack 0
  1100                           
  1101                           ; 3 bytes @ 0x53
  1102  0000B3                     	ds	3
  1103  0000B6                     tblptru	equ	0xFF8
  1104                           tblptrh	equ	0xFF7
  1105                           tblptrl	equ	0xFF6
  1106                           tablat	equ	0xFF5
  1107                           postinc0	equ	0xFEE
  1108                           wreg	equ	0xFE8
  1109                           postdec1	equ	0xFE5
  1110                           fsr1l	equ	0xFE1
  1111                           
  1112                           ; 1 bytes @ 0x56
  1113                           
  1114                           	psect	cstackCOMRAM
  1115  000001                     __pcstackCOMRAM:
  1116                           	opt stack 0
  1117  000001                     ??_SetRange:
  1118  000001                     ??i2_isdigit:
  1119  000001                     ?_TMR0_ReadTimer:
  1120                           	opt stack 0
  1121  000001                     ?i2___awmod:
  1122                           	opt stack 0
  1123  000001                     ?i2___ftpack:
  1124                           	opt stack 0
  1125  000001                     ?i2___ftneg:
  1126                           	opt stack 0
  1127  000001                     ?i2__div_to_l_:
  1128                           	opt stack 0
  1129  000001                     ?i2__tdiv_to_l_:
  1130                           	opt stack 0
  1131  000001                     ?i2___lldiv:
  1132                           	opt stack 0
  1133  000001                     i2EUSART1_Write@txData:
  1134                           	opt stack 0
  1135  000001                     i2___awmod@dividend:
  1136                           	opt stack 0
  1137  000001                     i2__div_to_l_@f1:
  1138                           	opt stack 0
  1139  000001                     i2___ftpack@arg:
  1140                           	opt stack 0
  1141  000001                     i2__tdiv_to_l_@f1:
  1142                           	opt stack 0
  1143  000001                     i2___ftge@ff1:
  1144                           	opt stack 0
  1145  000001                     i2___ftneg@f1:
  1146                           	opt stack 0
  1147  000001                     i2___lldiv@dividend:
  1148                           	opt stack 0
  1149                           
  1150                           ; 4 bytes @ 0x0
  1151  000001                     	ds	1
  1152  000002                     i2putch@txData:
  1153                           	opt stack 0
  1154  000002                     i2_isdigit$1198:
  1155                           	opt stack 0
  1156                           
  1157                           ; 1 bytes @ 0x1
  1158  000002                     	ds	1
  1159  000003                     ??_TMR0_ReadTimer:
  1160  000003                     i2isdigit@c:
  1161                           	opt stack 0
  1162  000003                     i2___awmod@divisor:
  1163                           	opt stack 0
  1164                           
  1165                           ; 2 bytes @ 0x2
  1166  000003                     	ds	1
  1167  000004                     i2___ftpack@exp:
  1168                           	opt stack 0
  1169  000004                     i2__div_to_l_@f2:
  1170                           	opt stack 0
  1171  000004                     i2__tdiv_to_l_@f2:
  1172                           	opt stack 0
  1173  000004                     i2___ftge@ff2:
  1174                           	opt stack 0
  1175                           
  1176                           ; 3 bytes @ 0x3
  1177  000004                     	ds	1
  1178  000005                     i2___awmod@counter:
  1179                           	opt stack 0
  1180  000005                     i2___ftpack@sign:
  1181                           	opt stack 0
  1182  000005                     i2___lldiv@divisor:
  1183                           	opt stack 0
  1184                           
  1185                           ; 4 bytes @ 0x4
  1186  000005                     	ds	1
  1187  000006                     ??i2___ftpack:
  1188  000006                     i2___awmod@sign:
  1189                           	opt stack 0
  1190                           
  1191                           ; 1 bytes @ 0x5
  1192  000006                     	ds	1
  1193  000007                     ??i2__tdiv_to_l_:
  1194  000007                     ??i2___ftge:
  1195  000007                     ?i2___awdiv:
  1196                           	opt stack 0
  1197  000007                     TMR0_ReadTimer@readVal:
  1198                           	opt stack 0
  1199  000007                     i2___awdiv@dividend:
  1200                           	opt stack 0
  1201  000007                     i2__div_to_l_@quot:
  1202                           	opt stack 0
  1203                           
  1204                           ; 4 bytes @ 0x6
  1205  000007                     	ds	2
  1206  000009                     ?___lwtoft:
  1207                           	opt stack 0
  1208  000009                     ?i2___lltoft:
  1209                           	opt stack 0
  1210  000009                     TMR0_ReadTimer@readValLow:
  1211                           	opt stack 0
  1212  000009                     ___lwtoft@c:
  1213                           	opt stack 0
  1214  000009                     i2___awdiv@divisor:
  1215                           	opt stack 0
  1216  000009                     i2___lldiv@quotient:
  1217                           	opt stack 0
  1218  000009                     i2___lltoft@c:
  1219                           	opt stack 0
  1220                           
  1221                           ; 4 bytes @ 0x8
  1222  000009                     	ds	1
  1223  00000A                     TMR0_ReadTimer@readValHigh:
  1224                           	opt stack 0
  1225  00000A                     i2__tdiv_to_l_@quot:
  1226                           	opt stack 0
  1227                           
  1228                           ; 4 bytes @ 0x9
  1229  00000A                     	ds	1
  1230  00000B                     SetRange@new_range:
  1231                           	opt stack 0
  1232  00000B                     i2___awdiv@counter:
  1233                           	opt stack 0
  1234  00000B                     i2__div_to_l_@cntr:
  1235                           	opt stack 0
  1236                           
  1237                           ; 1 bytes @ 0xA
  1238  00000B                     	ds	1
  1239  00000C                     ??_TMR0_DefaultInterruptHandler:
  1240  00000C                     i2___awdiv@sign:
  1241                           	opt stack 0
  1242  00000C                     i2__div_to_l_@exp1:
  1243                           	opt stack 0
  1244                           
  1245                           ; 1 bytes @ 0xB
  1246  00000C                     	ds	1
  1247  00000D                     ??i2___lltoft:
  1248  00000D                     i2___lldiv@counter:
  1249                           	opt stack 0
  1250  00000D                     i2___awdiv@quotient:
  1251                           	opt stack 0
  1252                           
  1253                           ; 2 bytes @ 0xC
  1254  00000D                     	ds	1
  1255  00000E                     ?i2___llmod:
  1256                           	opt stack 0
  1257  00000E                     i2__tdiv_to_l_@cntr:
  1258                           	opt stack 0
  1259  00000E                     i2___llmod@dividend:
  1260                           	opt stack 0
  1261                           
  1262                           ; 4 bytes @ 0xD
  1263  00000E                     	ds	1
  1264  00000F                     ?i2___wmul:
  1265                           	opt stack 0
  1266  00000F                     i2__tdiv_to_l_@exp1:
  1267                           	opt stack 0
  1268  00000F                     i2___wmul@multiplier:
  1269                           	opt stack 0
  1270                           
  1271                           ; 2 bytes @ 0xE
  1272  00000F                     	ds	2
  1273  000011                     i2___lltoft@exp:
  1274                           	opt stack 0
  1275  000011                     i2___wmul@multiplicand:
  1276                           	opt stack 0
  1277                           
  1278                           ; 2 bytes @ 0x10
  1279  000011                     	ds	1
  1280  000012                     i2___llmod@divisor:
  1281                           	opt stack 0
  1282                           
  1283                           ; 4 bytes @ 0x11
  1284  000012                     	ds	1
  1285  000013                     i2___wmul@product:
  1286                           	opt stack 0
  1287                           
  1288                           ; 2 bytes @ 0x12
  1289  000013                     	ds	2
  1290  000015                     ?i2___ftadd:
  1291                           	opt stack 0
  1292  000015                     i2___ftadd@f1:
  1293                           	opt stack 0
  1294                           
  1295                           ; 3 bytes @ 0x14
  1296  000015                     	ds	1
  1297  000016                     i2___llmod@counter:
  1298                           	opt stack 0
  1299                           
  1300                           ; 1 bytes @ 0x15
  1301  000016                     	ds	2
  1302  000018                     i2___ftadd@f2:
  1303                           	opt stack 0
  1304                           
  1305                           ; 3 bytes @ 0x17
  1306  000018                     	ds	3
  1307  00001B                     ??i2___ftadd:
  1308                           
  1309                           ; 1 bytes @ 0x1A
  1310  00001B                     	ds	3
  1311  00001E                     i2___ftadd@sign:
  1312                           	opt stack 0
  1313                           
  1314                           ; 1 bytes @ 0x1D
  1315  00001E                     	ds	1
  1316  00001F                     i2___ftadd@exp2:
  1317                           	opt stack 0
  1318                           
  1319                           ; 1 bytes @ 0x1E
  1320  00001F                     	ds	1
  1321  000020                     i2___ftadd@exp1:
  1322                           	opt stack 0
  1323                           
  1324                           ; 1 bytes @ 0x1F
  1325  000020                     	ds	1
  1326  000021                     ?i2___ftmul:
  1327                           	opt stack 0
  1328  000021                     ?i2___ftsub:
  1329                           	opt stack 0
  1330  000021                     i2___ftmul@f1:
  1331                           	opt stack 0
  1332  000021                     i2___ftsub@f1:
  1333                           	opt stack 0
  1334                           
  1335                           ; 3 bytes @ 0x20
  1336  000021                     	ds	3
  1337  000024                     i2___ftmul@f2:
  1338                           	opt stack 0
  1339  000024                     i2___ftsub@f2:
  1340                           	opt stack 0
  1341                           
  1342                           ; 3 bytes @ 0x23
  1343  000024                     	ds	3
  1344  000027                     ??i2___ftmul:
  1345  000027                     
  1346                           ; 1 bytes @ 0x26
  1347  000027                     	ds	3
  1348  00002A                     i2___ftmul@exp:
  1349                           	opt stack 0
  1350                           
  1351                           ; 1 bytes @ 0x29
  1352  00002A                     	ds	1
  1353  00002B                     i2___ftmul@f3_as_product:
  1354                           	opt stack 0
  1355                           
  1356                           ; 3 bytes @ 0x2A
  1357  00002B                     	ds	3
  1358  00002E                     i2___ftmul@cntr:
  1359                           	opt stack 0
  1360                           
  1361                           ; 1 bytes @ 0x2D
  1362  00002E                     	ds	1
  1363  00002F                     i2___ftmul@sign:
  1364                           	opt stack 0
  1365                           
  1366                           ; 1 bytes @ 0x2E
  1367  00002F                     	ds	1
  1368  000030                     ?i2_fround:
  1369                           	opt stack 0
  1370  000030                     ?i2_scale:
  1371                           	opt stack 0
  1372  000030                     ?i2___ftdiv:
  1373                           	opt stack 0
  1374  000030                     i2___ftdiv@f1:
  1375                           	opt stack 0
  1376                           
  1377                           ; 3 bytes @ 0x2F
  1378  000030                     	ds	3
  1379  000033                     i2___ftdiv@f2:
  1380                           	opt stack 0
  1381  000033                     i2_fround$1831:
  1382                           	opt stack 0
  1383  000033                     i2_scale$1832:
  1384                           	opt stack 0
  1385                           
  1386                           ; 3 bytes @ 0x32
  1387  000033                     	ds	3
  1388  000036                     ??i2___ftdiv:
  1389  000036                     i2scale@scl:
  1390                           	opt stack 0
  1391  000036                     i2_fround$1830:
  1392                           	opt stack 0
  1393                           
  1394                           ; 3 bytes @ 0x35
  1395  000036                     	ds	1
  1396  000037                     ?i2___fttol:
  1397                           	opt stack 0
  1398  000037                     i2___fttol@f1:
  1399                           	opt stack 0
  1400                           
  1401                           ; 3 bytes @ 0x36
  1402  000037                     	ds	2
  1403  000039                     i2fround@prec:
  1404                           	opt stack 0
  1405  000039                     i2___ftdiv@cntr:
  1406                           	opt stack 0
  1407                           
  1408                           ; 1 bytes @ 0x38
  1409  000039                     	ds	1
  1410  00003A                     i2___ftdiv@f3:
  1411                           	opt stack 0
  1412                           
  1413                           ; 3 bytes @ 0x39
  1414  00003A                     	ds	1
  1415  00003B                     ??i2___fttol:
  1416                           
  1417                           ; 1 bytes @ 0x3A
  1418  00003B                     	ds	2
  1419  00003D                     i2___ftdiv@exp:
  1420                           	opt stack 0
  1421                           
  1422                           ; 1 bytes @ 0x3C
  1423  00003D                     	ds	1
  1424  00003E                     i2___ftdiv@sign:
  1425                           	opt stack 0
  1426                           
  1427                           ; 1 bytes @ 0x3D
  1428  00003E                     	ds	2
  1429  000040                     i2___fttol@sign1:
  1430                           	opt stack 0
  1431                           
  1432                           ; 1 bytes @ 0x3F
  1433  000040                     	ds	1
  1434  000041                     i2___fttol@lval:
  1435                           	opt stack 0
  1436                           
  1437                           ; 4 bytes @ 0x40
  1438  000041                     	ds	4
  1439  000045                     i2___fttol@exp1:
  1440                           	opt stack 0
  1441                           
  1442                           ; 1 bytes @ 0x44
  1443  000045                     	ds	1
  1444  000046                     ?i2__doprnt:
  1445                           	opt stack 0
  1446  000046                     i2__doprnt@pb:
  1447                           	opt stack 0
  1448                           
  1449                           ; 2 bytes @ 0x45
  1450  000046                     	ds	2
  1451  000048                     i2__doprnt@f:
  1452                           	opt stack 0
  1453                           
  1454                           ; 2 bytes @ 0x47
  1455  000048                     	ds	2
  1456  00004A                     i2__doprnt@ap:
  1457                           	opt stack 0
  1458                           
  1459                           ; 2 bytes @ 0x49
  1460  00004A                     	ds	2
  1461  00004C                     ??i2__doprnt:
  1462                           
  1463                           ; 1 bytes @ 0x4B
  1464  00004C                     	ds	6
  1465  000052                     printf@ap:
  1466                           	opt stack 0
  1467                           
  1468                           ; 2 bytes @ 0x51
  1469  000052                     	ds	2
  1470  000054                     printf@pb:
  1471                           	opt stack 0
  1472                           
  1473                           ; 4 bytes @ 0x53
  1474  000054                     	ds	4
  1475  000058                     tblptru	equ	0xFF8
  1476                           tblptrh	equ	0xFF7
  1477                           tblptrl	equ	0xFF6
  1478                           tablat	equ	0xFF5
  1479                           postinc0	equ	0xFEE
  1480                           wreg	equ	0xFE8
  1481                           postdec1	equ	0xFE5
  1482                           fsr1l	equ	0xFE1
  1483                           
  1484                           ; 1 bytes @ 0x57
  1485 ;;
  1486 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1487 ;;
  1488 ;; *************** function _main *****************
  1489 ;; Defined at:
  1490 ;;		line 8 in file "main.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;		None
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;  cap_string     16   73[BANK1 ] unsigned char [16]
  1495 ;; Return value:  Size  Location     Type
  1496 ;;                  1    wreg      void 
  1497 ;; Registers used:
  1498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1504 ;;      Params:         0       0       0       0       0       0       0
  1505 ;;      Locals:         0       0      16       0       0       0       0
  1506 ;;      Temps:          0       0       0       0       0       0       0
  1507 ;;      Totals:         0       0      16       0       0       0       0
  1508 ;;Total ram usage:       16 bytes
  1509 ;; Hardware stack levels required when called:   12
  1510 ;; This function calls:
  1511 ;;		_SYSTEM_Initialize
  1512 ;;		___ftdiv
  1513 ;;		___ftge
  1514 ;;		_lcd_clear
  1515 ;;		_lcd_init
  1516 ;;		_lcd_sendStringToPos
  1517 ;;		_sprintf
  1518 ;; This function is called by:
  1519 ;;		Startup code after reset
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           	psect	text0
  1524  00396E                     __ptext0:
  1525                           	opt stack 0
  1526  00396E                     _main:
  1527                           	opt stack 19
  1528                           
  1529                           ;main.c: 11: SYSTEM_Initialize();
  1530                           
  1531                           ;incstack = 0
  1532  00396E  EC98  F02A         	call	_SYSTEM_Initialize	;wreg free
  1533                           
  1534                           ;main.c: 30: (INTCONbits.GIE = 1);
  1535  003972  8EF2               	bsf	intcon,7,c	;volatile
  1536                           
  1537                           ;main.c: 33: (INTCONbits.PEIE = 1);
  1538  003974  8CF2               	bsf	intcon,6,c	;volatile
  1539                           
  1540                           ;main.c: 41: lcd_init();
  1541  003976  EC04  F027         	call	_lcd_init	;wreg free
  1542                           
  1543                           ;main.c: 42: lcd_clear();
  1544  00397A  ECC1  F02A         	call	_lcd_clear	;wreg free
  1545                           
  1546                           ;main.c: 46: LATC |= (1 << 0) | (1 << 1) | (1 << 2) | (1 << 3) | (1 << 4);
  1547  00397E  0E1F               	movlw	31
  1548  003980  128B               	iorwf	3979,f,c	;volatile
  1549                           
  1550                           ;main.c: 47: LATB |= (1 << 2) | (1 << 3) | (1 << 4) | (1 << 5);
  1551  003982  0E3C               	movlw	60
  1552  003984  128A               	iorwf	3978,f,c	;volatile
  1553                           
  1554                           ;main.c: 50: LATC &= ~(1 << 1);
  1555  003986  928B               	bcf	3979,1,c	;volatile
  1556                           
  1557                           ;main.c: 51: LATB &= ~(1 << 3);
  1558  003988  968A               	bcf	3978,3,c	;volatile
  1559  00398A                     l270:
  1560                           
  1561                           ;main.c: 54: {
  1562                           ;main.c: 56: char cap_string[16];
  1563                           ;main.c: 59: if (result >= 1000000.0)
  1564  00398A  C058  F090         	movff	_result,___ftge@ff1
  1565  00398E  C059  F091         	movff	_result+1,___ftge@ff1+1
  1566  003992  C05A  F092         	movff	_result+2,___ftge@ff1+2
  1567  003996  0E24               	movlw	36
  1568  003998  0100               	movlb	0	; () banked
  1569  00399A  6F93               	movwf	___ftge@ff2& (0+255),b
  1570  00399C  0E74               	movlw	116
  1571  00399E  0100               	movlb	0	; () banked
  1572  0039A0  6F94               	movwf	(___ftge@ff2+1)& (0+255),b
  1573  0039A2  0E49               	movlw	73
  1574  0039A4  0100               	movlb	0	; () banked
  1575  0039A6  6F95               	movwf	(___ftge@ff2+2)& (0+255),b
  1576  0039A8  ECE5  F023         	call	___ftge	;wreg free
  1577  0039AC  0100               	movlb	0	; () banked
  1578  0039AE  A0D8               	btfss	status,0,c
  1579  0039B0  D026               	goto	l10024
  1580                           
  1581                           ; BSR set to: 0
  1582                           ;main.c: 60: {
  1583                           ;main.c: 61: sprintf(cap_string, "C=%12.6fuF", result / 1000000.0);
  1584  0039B2  0E49               	movlw	low main@cap_string
  1585  0039B4  0101               	movlb	1	; () banked
  1586  0039B6  6F3C               	movwf	sprintf@wh& (0+255),b
  1587  0039B8  0E01               	movlw	high main@cap_string
  1588  0039BA  0101               	movlb	1	; () banked
  1589  0039BC  6F3D               	movwf	(sprintf@wh+1)& (0+255),b
  1590  0039BE  0EEB               	movlw	low STR_3
  1591  0039C0  0101               	movlb	1	; () banked
  1592  0039C2  6F3E               	movwf	sprintf@f& (0+255),b
  1593  0039C4  0E7F               	movlw	high STR_3
  1594  0039C6  0101               	movlb	1	; () banked
  1595  0039C8  6F3F               	movwf	(sprintf@f+1)& (0+255),b
  1596  0039CA  C058  F098         	movff	_result,___ftdiv@f1
  1597  0039CE  C059  F099         	movff	_result+1,___ftdiv@f1+1
  1598  0039D2  C05A  F09A         	movff	_result+2,___ftdiv@f1+2
  1599  0039D6  0E24               	movlw	36
  1600  0039D8  0100               	movlb	0	; () banked
  1601  0039DA  6F9B               	movwf	___ftdiv@f2& (0+255),b
  1602  0039DC  0E74               	movlw	116
  1603  0039DE  0100               	movlb	0	; () banked
  1604  0039E0  6F9C               	movwf	(___ftdiv@f2+1)& (0+255),b
  1605  0039E2  0E49               	movlw	73
  1606  0039E4  0100               	movlb	0	; () banked
  1607  0039E6  6F9D               	movwf	(___ftdiv@f2+2)& (0+255),b
  1608  0039E8  ECF2  F01E         	call	___ftdiv	;wreg free
  1609  0039EC  C098  F140         	movff	?___ftdiv,?_sprintf+4
  1610  0039F0  C099  F141         	movff	?___ftdiv+1,?_sprintf+5
  1611  0039F4  C09A  F142         	movff	?___ftdiv+2,?_sprintf+6
  1612  0039F8  EC46  F028         	call	_sprintf	;wreg free
  1613                           
  1614                           ;main.c: 62: }
  1615  0039FC  D073               	goto	l10036
  1616  0039FE                     l10024:
  1617                           
  1618                           ;main.c: 63: else if (result < 1000000 && result >= 1000.0)
  1619  0039FE  C058  F090         	movff	_result,___ftge@ff1
  1620  003A02  C059  F091         	movff	_result+1,___ftge@ff1+1
  1621  003A06  C05A  F092         	movff	_result+2,___ftge@ff1+2
  1622  003A0A  0E24               	movlw	36
  1623  003A0C  0100               	movlb	0	; () banked
  1624  003A0E  6F93               	movwf	___ftge@ff2& (0+255),b
  1625  003A10  0E74               	movlw	116
  1626  003A12  0100               	movlb	0	; () banked
  1627  003A14  6F94               	movwf	(___ftge@ff2+1)& (0+255),b
  1628  003A16  0E49               	movlw	73
  1629  003A18  0100               	movlb	0	; () banked
  1630  003A1A  6F95               	movwf	(___ftge@ff2+2)& (0+255),b
  1631  003A1C  ECE5  F023         	call	___ftge	;wreg free
  1632  003A20  0100               	movlb	0	; () banked
  1633  003A22  B0D8               	btfsc	status,0,c
  1634  003A24  D03A               	goto	l10030
  1635                           
  1636                           ; BSR set to: 0
  1637  003A26  C058  F090         	movff	_result,___ftge@ff1
  1638  003A2A  C059  F091         	movff	_result+1,___ftge@ff1+1
  1639  003A2E  C05A  F092         	movff	_result+2,___ftge@ff1+2
  1640  003A32  0E00               	movlw	0
  1641  003A34  0100               	movlb	0	; () banked
  1642  003A36  6F93               	movwf	___ftge@ff2& (0+255),b
  1643  003A38  0E7A               	movlw	122
  1644  003A3A  0100               	movlb	0	; () banked
  1645  003A3C  6F94               	movwf	(___ftge@ff2+1)& (0+255),b
  1646  003A3E  0E44               	movlw	68
  1647  003A40  0100               	movlb	0	; () banked
  1648  003A42  6F95               	movwf	(___ftge@ff2+2)& (0+255),b
  1649  003A44  ECE5  F023         	call	___ftge	;wreg free
  1650  003A48  0100               	movlb	0	; () banked
  1651  003A4A  A0D8               	btfss	status,0,c
  1652  003A4C  D026               	goto	l10030
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;main.c: 64: {
  1656                           ;main.c: 65: sprintf(cap_string, "C=%12.3fnF", result / 1000.0);
  1657  003A4E  0E49               	movlw	low main@cap_string
  1658  003A50  0101               	movlb	1	; () banked
  1659  003A52  6F3C               	movwf	sprintf@wh& (0+255),b
  1660  003A54  0E01               	movlw	high main@cap_string
  1661  003A56  0101               	movlb	1	; () banked
  1662  003A58  6F3D               	movwf	(sprintf@wh+1)& (0+255),b
  1663  003A5A  0ED5               	movlw	low STR_4
  1664  003A5C  0101               	movlb	1	; () banked
  1665  003A5E  6F3E               	movwf	sprintf@f& (0+255),b
  1666  003A60  0E7F               	movlw	high STR_4
  1667  003A62  0101               	movlb	1	; () banked
  1668  003A64  6F3F               	movwf	(sprintf@f+1)& (0+255),b
  1669  003A66  C058  F098         	movff	_result,___ftdiv@f1
  1670  003A6A  C059  F099         	movff	_result+1,___ftdiv@f1+1
  1671  003A6E  C05A  F09A         	movff	_result+2,___ftdiv@f1+2
  1672  003A72  0E00               	movlw	0
  1673  003A74  0100               	movlb	0	; () banked
  1674  003A76  6F9B               	movwf	___ftdiv@f2& (0+255),b
  1675  003A78  0E7A               	movlw	122
  1676  003A7A  0100               	movlb	0	; () banked
  1677  003A7C  6F9C               	movwf	(___ftdiv@f2+1)& (0+255),b
  1678  003A7E  0E44               	movlw	68
  1679  003A80  0100               	movlb	0	; () banked
  1680  003A82  6F9D               	movwf	(___ftdiv@f2+2)& (0+255),b
  1681  003A84  ECF2  F01E         	call	___ftdiv	;wreg free
  1682  003A88  C098  F140         	movff	?___ftdiv,?_sprintf+4
  1683  003A8C  C099  F141         	movff	?___ftdiv+1,?_sprintf+5
  1684  003A90  C09A  F142         	movff	?___ftdiv+2,?_sprintf+6
  1685  003A94  EC46  F028         	call	_sprintf	;wreg free
  1686                           
  1687                           ;main.c: 66: }
  1688  003A98  D025               	goto	l10036
  1689  003A9A                     l10030:
  1690                           
  1691                           ;main.c: 67: else if (result < 0)
  1692  003A9A  AE5A               	btfss	_result+2,7,c
  1693  003A9C  D00F               	goto	l10034
  1694                           
  1695                           ;main.c: 68: {
  1696                           ;main.c: 69: sprintf(cap_string, "C=ERROR");
  1697  003A9E  0E49               	movlw	low main@cap_string
  1698  003AA0  0101               	movlb	1	; () banked
  1699  003AA2  6F3C               	movwf	sprintf@wh& (0+255),b
  1700  003AA4  0E01               	movlw	high main@cap_string
  1701  003AA6  0101               	movlb	1	; () banked
  1702  003AA8  6F3D               	movwf	(sprintf@wh+1)& (0+255),b
  1703  003AAA  0EF6               	movlw	low STR_5
  1704  003AAC  0101               	movlb	1	; () banked
  1705  003AAE  6F3E               	movwf	sprintf@f& (0+255),b
  1706  003AB0  0E7F               	movlw	high STR_5
  1707  003AB2  0101               	movlb	1	; () banked
  1708  003AB4  6F3F               	movwf	(sprintf@f+1)& (0+255),b
  1709  003AB6  EC46  F028         	call	_sprintf	;wreg free
  1710                           
  1711                           ;main.c: 70: }
  1712  003ABA  D014               	goto	l10036
  1713  003ABC                     l10034:
  1714                           
  1715                           ;main.c: 71: else
  1716                           ;main.c: 72: {
  1717                           ;main.c: 73: sprintf(cap_string, "C=%12.0fpF", result);
  1718  003ABC  0E49               	movlw	low main@cap_string
  1719  003ABE  0101               	movlb	1	; () banked
  1720  003AC0  6F3C               	movwf	sprintf@wh& (0+255),b
  1721  003AC2  0E01               	movlw	high main@cap_string
  1722  003AC4  0101               	movlb	1	; () banked
  1723  003AC6  6F3D               	movwf	(sprintf@wh+1)& (0+255),b
  1724  003AC8  0EE0               	movlw	low STR_6
  1725  003ACA  0101               	movlb	1	; () banked
  1726  003ACC  6F3E               	movwf	sprintf@f& (0+255),b
  1727  003ACE  0E7F               	movlw	high STR_6
  1728  003AD0  0101               	movlb	1	; () banked
  1729  003AD2  6F3F               	movwf	(sprintf@f+1)& (0+255),b
  1730  003AD4  C058  F140         	movff	_result,?_sprintf+4
  1731  003AD8  C059  F141         	movff	_result+1,?_sprintf+5
  1732  003ADC  C05A  F142         	movff	_result+2,?_sprintf+6
  1733  003AE0  EC46  F028         	call	_sprintf	;wreg free
  1734  003AE4                     l10036:
  1735                           
  1736                           ;main.c: 74: }
  1737                           ;main.c: 76: lcd_sendStringToPos(1, 1, cap_string);
  1738  003AE4  0E01               	movlw	1
  1739  003AE6  0100               	movlb	0	; () banked
  1740  003AE8  6F98               	movwf	lcd_sendStringToPos@y& (0+255),b
  1741  003AEA  0E49               	movlw	low main@cap_string
  1742  003AEC  0100               	movlb	0	; () banked
  1743  003AEE  6F99               	movwf	lcd_sendStringToPos@charString& (0+255),b
  1744  003AF0  0E01               	movlw	high main@cap_string
  1745  003AF2  0100               	movlb	0	; () banked
  1746  003AF4  6F9A               	movwf	(lcd_sendStringToPos@charString+1)& (0+255),b
  1747  003AF6  0E01               	movlw	1
  1748  003AF8  EC7A  F02A         	call	_lcd_sendStringToPos
  1749  003AFC  D746               	goto	l270
  1750  003AFE                     __end_of_main:
  1751                           	opt stack 0
  1752                           tblptru	equ	0xFF8
  1753                           tblptrh	equ	0xFF7
  1754                           tblptrl	equ	0xFF6
  1755                           tablat	equ	0xFF5
  1756                           intcon	equ	0xFF2
  1757                           postinc0	equ	0xFEE
  1758                           wreg	equ	0xFE8
  1759                           postdec1	equ	0xFE5
  1760                           fsr1l	equ	0xFE1
  1761                           status	equ	0xFD8
  1762                           
  1763 ;; *************** function _sprintf *****************
  1764 ;; Defined at:
  1765 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\sprintf.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;  wh              2   60[BANK1 ] PTR unsigned char 
  1768 ;;		 -> ftoa@buf(17), main@cap_string(16), 
  1769 ;;  f               2   62[BANK1 ] PTR const unsigned char 
  1770 ;;		 -> STR_7(11), STR_6(11), STR_5(8), STR_4(11), 
  1771 ;;		 -> STR_3(11), 
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;  pb              4   69[BANK1 ] struct __prbuf
  1774 ;;  ap              2   67[BANK1 ] PTR void [1]
  1775 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  2   60[BANK1 ] int 
  1778 ;; Registers used:
  1779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1785 ;;      Params:         0       0       7       0       0       0       0
  1786 ;;      Locals:         0       0       6       0       0       0       0
  1787 ;;      Temps:          0       0       0       0       0       0       0
  1788 ;;      Totals:         0       0      13       0       0       0       0
  1789 ;;Total ram usage:       13 bytes
  1790 ;; Hardware stack levels used:    1
  1791 ;; Hardware stack levels required when called:   11
  1792 ;; This function calls:
  1793 ;;		__doprnt
  1794 ;; This function is called by:
  1795 ;;		_main
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text1
  1800  00508C                     __ptext1:
  1801                           	opt stack 0
  1802  00508C                     _sprintf:
  1803                           	opt stack 19
  1804                           
  1805                           ;incstack = 0
  1806  00508C  C13C  F145         	movff	sprintf@wh,sprintf@pb
  1807  005090  C13D  F146         	movff	sprintf@wh+1,sprintf@pb+1
  1808  005094  0E00               	movlw	0
  1809  005096  0101               	movlb	1	; () banked
  1810  005098  6F47               	movwf	(sprintf@pb+2)& (0+255),b
  1811  00509A  0E00               	movlw	0
  1812  00509C  0101               	movlb	1	; () banked
  1813  00509E  6F48               	movwf	(sprintf@pb+3)& (0+255),b
  1814  0050A0  0E40               	movlw	low (?_sprintf+4)
  1815  0050A2  0101               	movlb	1	; () banked
  1816  0050A4  6F43               	movwf	sprintf@ap& (0+255),b
  1817  0050A6  0E01               	movlw	high (?_sprintf+4)
  1818  0050A8  0101               	movlb	1	; () banked
  1819  0050AA  6F44               	movwf	(sprintf@ap+1)& (0+255),b
  1820                           
  1821                           ; BSR set to: 1
  1822  0050AC  0E45               	movlw	low sprintf@pb
  1823  0050AE  0101               	movlb	1	; () banked
  1824  0050B0  6F19               	movwf	__doprnt@pb& (0+255),b
  1825  0050B2  0E01               	movlw	high sprintf@pb
  1826  0050B4  0101               	movlb	1	; () banked
  1827  0050B6  6F1A               	movwf	(__doprnt@pb+1)& (0+255),b
  1828  0050B8  C13E  F11B         	movff	sprintf@f,__doprnt@f
  1829  0050BC  C13F  F11C         	movff	sprintf@f+1,__doprnt@f+1
  1830  0050C0  0E43               	movlw	low sprintf@ap
  1831  0050C2  0101               	movlb	1	; () banked
  1832  0050C4  6F1D               	movwf	__doprnt@ap& (0+255),b
  1833  0050C6  0E01               	movlw	high sprintf@ap
  1834  0050C8  0101               	movlb	1	; () banked
  1835  0050CA  6F1E               	movwf	(__doprnt@ap+1)& (0+255),b
  1836  0050CC  EC52  F000         	call	__doprnt	;wreg free
  1837  0050D0  C145  FFD9         	movff	sprintf@pb,fsr2l
  1838  0050D4  C146  FFDA         	movff	sprintf@pb+1,fsr2h
  1839  0050D8  0E00               	movlw	0
  1840  0050DA  6EDF               	movwf	indf2,c
  1841  0050DC  0012               	return	
  1842  0050DE                     __end_of_sprintf:
  1843                           	opt stack 0
  1844                           tblptru	equ	0xFF8
  1845                           tblptrh	equ	0xFF7
  1846                           tblptrl	equ	0xFF6
  1847                           tablat	equ	0xFF5
  1848                           intcon	equ	0xFF2
  1849                           postinc0	equ	0xFEE
  1850                           wreg	equ	0xFE8
  1851                           postdec1	equ	0xFE5
  1852                           fsr1l	equ	0xFE1
  1853                           indf2	equ	0xFDF
  1854                           fsr2h	equ	0xFDA
  1855                           fsr2l	equ	0xFD9
  1856                           status	equ	0xFD8
  1857                           
  1858 ;; *************** function __doprnt *****************
  1859 ;; Defined at:
  1860 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;  pb              2   25[BANK1 ] PTR struct __prbuf
  1863 ;;		 -> sprintf@pb(4), printf@pb(4), 
  1864 ;;  f               2   27[BANK1 ] PTR const unsigned char 
  1865 ;;		 -> STR_7(11), STR_6(11), STR_5(8), STR_4(11), 
  1866 ;;		 -> STR_3(11), STR_2(53), STR_1(23), 
  1867 ;;  ap              2   29[BANK1 ] PTR PTR void 
  1868 ;;		 -> sprintf@ap(2), printf@ap(2), 
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;  tmpval          4   46[BANK1 ] struct .
  1871 ;;  val             4   42[BANK1 ] unsigned long 
  1872 ;;  fval            3   52[BANK1 ] unsigned long 
  1873 ;;  cp              3    0        PTR const unsigned char 
  1874 ;;  prec            2   57[BANK1 ] int 
  1875 ;;  flag            2   55[BANK1 ] unsigned short 
  1876 ;;  width           2   50[BANK1 ] int 
  1877 ;;  exp             2   40[BANK1 ] int 
  1878 ;;  len             2    0        unsigned int 
  1879 ;;  c               1   59[BANK1 ] char 
  1880 ;;  d               1    0        unsigned char 
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  2   25[BANK1 ] int 
  1883 ;; Registers used:
  1884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1890 ;;      Params:         0       0       6       0       0       0       0
  1891 ;;      Locals:         0       0      23       0       0       0       0
  1892 ;;      Temps:          0       0       6       0       0       0       0
  1893 ;;      Totals:         0       0      35       0       0       0       0
  1894 ;;Total ram usage:       35 bytes
  1895 ;; Hardware stack levels used:    1
  1896 ;; Hardware stack levels required when called:   10
  1897 ;; This function calls:
  1898 ;;		Absolute function
  1899 ;;		___awdiv
  1900 ;;		___ftadd
  1901 ;;		___ftge
  1902 ;;		___ftmul
  1903 ;;		___ftneg
  1904 ;;		___ftsub
  1905 ;;		___fttol
  1906 ;;		___lldiv
  1907 ;;		___llmod
  1908 ;;		___lltoft
  1909 ;;		___wmul
  1910 ;;		__div_to_l_
  1911 ;;		__tdiv_to_l_
  1912 ;;		_fround
  1913 ;;		_isdigit
  1914 ;;		_putch
  1915 ;;		_scale
  1916 ;; This function is called by:
  1917 ;;		_sprintf
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           	psect	text2
  1922  0000A4                     __ptext2:
  1923                           	opt stack 0
  1924  0000A4                     __doprnt:
  1925                           	opt stack 19
  1926                           
  1927                           ;doprnt.c: 499: signed char c;
  1928                           ;doprnt.c: 501: int width;
  1929                           ;doprnt.c: 504: int prec;
  1930                           ;doprnt.c: 508: unsigned short flag;
  1931                           ;doprnt.c: 515: char d;
  1932                           ;doprnt.c: 516: double fval;
  1933                           ;doprnt.c: 517: int exp;
  1934                           ;doprnt.c: 523: union {
  1935                           ;doprnt.c: 524: unsigned long vd;
  1936                           ;doprnt.c: 525: double integ;
  1937                           ;doprnt.c: 526: } tmpval;
  1938                           ;doprnt.c: 528: unsigned long val;
  1939                           ;doprnt.c: 529: unsigned len;
  1940                           ;doprnt.c: 530: const char * cp;
  1941                           ;doprnt.c: 536: while(c = *f++) {
  1942                           
  1943                           ;incstack = 0
  1944  0000A4  EF73  F009         	goto	l9912
  1945  0000A8                     l9524:
  1946                           
  1947                           ;doprnt.c: 538: if(c != '%')
  1948  0000A8  0E25               	movlw	37
  1949  0000AA  0101               	movlb	1	; () banked
  1950  0000AC  193B               	xorwf	__doprnt@c& (0+255),w,b
  1951  0000AE  B4D8               	btfsc	status,2,c
  1952  0000B0  D038               	goto	l9534
  1953                           
  1954                           ; BSR set to: 1
  1955                           ;doprnt.c: 540: {
  1956                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  1957  0000B2  0101               	movlb	1	; () banked
  1958  0000B4  EE20 F002          	lfsr	2,2
  1959  0000B8  5119               	movf	__doprnt@pb& (0+255),w,b
  1960  0000BA  26D9               	addwf	fsr2l,f,c
  1961  0000BC  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  1962  0000BE  22DA               	addwfc	fsr2h,f,c
  1963  0000C0  50DE               	movf	postinc2,w,c
  1964  0000C2  10DE               	iorwf	postinc2,w,c
  1965  0000C4  B4D8               	btfsc	status,2,c
  1966  0000C6  D016               	goto	l9530
  1967                           
  1968                           ; BSR set to: 1
  1969  0000C8  0101               	movlb	1	; () banked
  1970  0000CA  EE20 F002          	lfsr	2,2
  1971  0000CE  5119               	movf	__doprnt@pb& (0+255),w,b
  1972  0000D0  26D9               	addwf	fsr2l,f,c
  1973  0000D2  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  1974  0000D4  22DA               	addwfc	fsr2h,f,c
  1975  0000D6  D802               	call	u16008
  1976  0000D8  EF73  F009         	goto	l9912
  1977  0000DC                     u16008:
  1978  0000DC  0005               	push	
  1979  0000DE  6EFA               	movwf	pclath,c
  1980  0000E0  50DE               	movf	postinc2,w,c
  1981  0000E2  6EFD               	movwf	tosl,c
  1982  0000E4  50DE               	movf	postinc2,w,c
  1983  0000E6  6EFE               	movwf	tosh,c
  1984  0000E8  50F8               	movf	tblptru,w,c
  1985  0000EA  6EFF               	movwf	tosu,c
  1986  0000EC  50FA               	movf	pclath,w,c
  1987  0000EE  0101               	movlb	1	; () banked
  1988  0000F0  513B               	movf	__doprnt@c& (0+255),w,b
  1989  0000F2  0012               	return		;indir
  1990  0000F4                     l9530:
  1991  0000F4  C119  FFD9         	movff	__doprnt@pb,fsr2l
  1992  0000F8  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  1993  0000FC  CFDE F11F          	movff	postinc2,??__doprnt
  1994  000100  CFDD F120          	movff	postdec2,??__doprnt+1
  1995  000104  C11F  FFD9         	movff	??__doprnt,fsr2l
  1996  000108  C120  FFDA         	movff	??__doprnt+1,fsr2h
  1997  00010C  C13B  FFDF         	movff	__doprnt@c,indf2
  1998  000110  C119  FFD9         	movff	__doprnt@pb,fsr2l
  1999  000114  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  2000  000118  2ADE               	incf	postinc2,f,c
  2001  00011A  0E00               	movlw	0
  2002  00011C  22DD               	addwfc	postdec2,f,c
  2003                           
  2004                           ;doprnt.c: 542: continue;
  2005  00011E  EF73  F009         	goto	l9912
  2006  000122                     l9534:
  2007                           
  2008                           ;doprnt.c: 543: }
  2009                           ;doprnt.c: 546: width = 0;
  2010  000122  0E00               	movlw	0
  2011  000124  0101               	movlb	1	; () banked
  2012  000126  6F33               	movwf	(__doprnt@width+1)& (0+255),b
  2013  000128  0E00               	movlw	0
  2014  00012A  6F32               	movwf	__doprnt@width& (0+255),b
  2015                           
  2016                           ;doprnt.c: 548: flag = 0;
  2017  00012C  0E00               	movlw	0
  2018  00012E  0101               	movlb	1	; () banked
  2019  000130  6F38               	movwf	(__doprnt@flag+1)& (0+255),b
  2020  000132  0E00               	movlw	0
  2021  000134  6F37               	movwf	__doprnt@flag& (0+255),b
  2022                           
  2023                           ; BSR set to: 1
  2024                           ;doprnt.c: 551: switch(*f) {
  2025                           
  2026                           ;doprnt.c: 550: for(;;) {
  2027  000136  D005               	goto	l9540
  2028  000138                     l9536:
  2029                           
  2030                           ;doprnt.c: 580: flag |= 0x04;
  2031  000138  0101               	movlb	1	; () banked
  2032  00013A  8537               	bsf	__doprnt@flag& (0+255),2,b
  2033                           
  2034                           ;doprnt.c: 581: f++;
  2035  00013C  0101               	movlb	1	; () banked
  2036  00013E  4B1B               	infsnz	__doprnt@f& (0+255),f,b
  2037  000140  2B1C               	incf	(__doprnt@f+1)& (0+255),f,b
  2038  000142                     l9540:
  2039  000142  C11B  FFF6         	movff	__doprnt@f,tblptrl
  2040  000146  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  2041  00014A                     	if	0	;tblptru may be non-zero
  2042  00014A                     	endif
  2043  00014A                     	if	0	;tblptru may be non-zero
  2044  00014A                     	endif
  2045  00014A  0008               	tblrd		*
  2046  00014C  50F5               	movf	tablat,w,c
  2047                           
  2048                           ; Switch size 1, requested type "space"
  2049                           ; Number of cases is 1, Range of values is 48 to 48
  2050                           ; switch strategies available:
  2051                           ; Name         Instructions Cycles
  2052                           ; simple_byte            4     3 (average)
  2053                           ;	Chosen strategy is simple_byte
  2054  00014E  0A30               	xorlw	48	; case 48
  2055  000150  B4D8               	btfsc	status,2,c
  2056  000152  D7F2               	goto	l9536
  2057                           
  2058                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2059                           
  2060                           ;doprnt.c: 586: }
  2061                           
  2062                           ;doprnt.c: 585: break;
  2063  000154  C11B  FFF6         	movff	__doprnt@f,tblptrl
  2064  000158  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  2065  00015C                     	if	0	;tblptru may be non-zero
  2066  00015C                     	endif
  2067  00015C                     	if	0	;tblptru may be non-zero
  2068  00015C                     	endif
  2069  00015C  0008               	tblrd		*
  2070  00015E  50F5               	movf	tablat,w,c
  2071  000160  EC1B  F02A         	call	_isdigit
  2072  000164  A0D8               	btfss	status,0,c
  2073  000166  D040               	goto	l9554
  2074                           
  2075                           ;doprnt.c: 598: width = 0;
  2076  000168  0E00               	movlw	0
  2077  00016A  0101               	movlb	1	; () banked
  2078  00016C  6F33               	movwf	(__doprnt@width+1)& (0+255),b
  2079  00016E  0E00               	movlw	0
  2080  000170  6F32               	movwf	__doprnt@width& (0+255),b
  2081  000172                     l9546:
  2082                           
  2083                           ;doprnt.c: 600: width *= 10;
  2084  000172  C132  F09E         	movff	__doprnt@width,___wmul@multiplier
  2085  000176  C133  F09F         	movff	__doprnt@width+1,___wmul@multiplier+1
  2086  00017A  0E00               	movlw	0
  2087  00017C  0100               	movlb	0	; () banked
  2088  00017E  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2089  000180  0E0A               	movlw	10
  2090  000182  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  2091  000184  EC82  F029         	call	___wmul	;wreg free
  2092  000188  C09E  F132         	movff	?___wmul,__doprnt@width
  2093  00018C  C09F  F133         	movff	?___wmul+1,__doprnt@width+1
  2094                           
  2095                           ;doprnt.c: 601: width += *f++ - '0';
  2096  000190  0ED0               	movlw	208
  2097  000192  0101               	movlb	1	; () banked
  2098  000194  6F1F               	movwf	??__doprnt& (0+255),b
  2099  000196  0EFF               	movlw	255
  2100  000198  0101               	movlb	1	; () banked
  2101  00019A  6F20               	movwf	(??__doprnt+1)& (0+255),b
  2102  00019C  C11B  FFF6         	movff	__doprnt@f,tblptrl
  2103  0001A0  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  2104  0001A4                     	if	0	;tblptru may be non-zero
  2105  0001A4                     	endif
  2106  0001A4                     	if	0	;tblptru may be non-zero
  2107  0001A4                     	endif
  2108  0001A4  0008               	tblrd		*
  2109  0001A6  50F5               	movf	tablat,w,c
  2110  0001A8  0101               	movlb	1	; () banked
  2111  0001AA  6F21               	movwf	(??__doprnt+2)& (0+255),b
  2112  0001AC  6B22               	clrf	(??__doprnt+3)& (0+255),b
  2113  0001AE  0101               	movlb	1	; () banked
  2114  0001B0  511F               	movf	??__doprnt& (0+255),w,b
  2115  0001B2  0101               	movlb	1	; () banked
  2116  0001B4  2721               	addwf	(??__doprnt+2)& (0+255),f,b
  2117  0001B6  0101               	movlb	1	; () banked
  2118  0001B8  5120               	movf	(??__doprnt+1)& (0+255),w,b
  2119  0001BA  0101               	movlb	1	; () banked
  2120  0001BC  2322               	addwfc	(??__doprnt+3)& (0+255),f,b
  2121  0001BE  0101               	movlb	1	; () banked
  2122  0001C0  5121               	movf	(??__doprnt+2)& (0+255),w,b
  2123  0001C2  0101               	movlb	1	; () banked
  2124  0001C4  2732               	addwf	__doprnt@width& (0+255),f,b
  2125  0001C6  0101               	movlb	1	; () banked
  2126  0001C8  5122               	movf	(??__doprnt+3)& (0+255),w,b
  2127  0001CA  0101               	movlb	1	; () banked
  2128  0001CC  2333               	addwfc	(__doprnt@width+1)& (0+255),f,b
  2129                           
  2130                           ; BSR set to: 1
  2131  0001CE  0101               	movlb	1	; () banked
  2132  0001D0  4B1B               	infsnz	__doprnt@f& (0+255),f,b
  2133  0001D2  2B1C               	incf	(__doprnt@f+1)& (0+255),f,b
  2134                           
  2135                           ; BSR set to: 1
  2136                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2137  0001D4  C11B  FFF6         	movff	__doprnt@f,tblptrl
  2138  0001D8  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  2139  0001DC                     	if	0	;tblptru may be non-zero
  2140  0001DC                     	endif
  2141  0001DC                     	if	0	;tblptru may be non-zero
  2142  0001DC                     	endif
  2143  0001DC  0008               	tblrd		*
  2144  0001DE  50F5               	movf	tablat,w,c
  2145  0001E0  EC1B  F02A         	call	_isdigit
  2146  0001E4  B0D8               	btfsc	status,0,c
  2147  0001E6  D7C5               	goto	l9546
  2148  0001E8                     l9554:
  2149                           
  2150                           ;doprnt.c: 608: }
  2151                           ;doprnt.c: 611: if(*f == '.') {
  2152  0001E8  C11B  FFF6         	movff	__doprnt@f,tblptrl
  2153  0001EC  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  2154  0001F0                     	if	0	;tblptru may be non-zero
  2155  0001F0                     	endif
  2156  0001F0                     	if	0	;tblptru may be non-zero
  2157  0001F0                     	endif
  2158  0001F0  0008               	tblrd		*
  2159  0001F2  50F5               	movf	tablat,w,c
  2160  0001F4  0A2E               	xorlw	46
  2161  0001F6  A4D8               	btfss	status,2,c
  2162  0001F8  D039               	goto	l9566
  2163                           
  2164                           ;doprnt.c: 612: flag |= 0x4000;
  2165  0001FA  0101               	movlb	1	; () banked
  2166  0001FC  8D38               	bsf	(__doprnt@flag+1)& (0+255),6,b
  2167                           
  2168                           ;doprnt.c: 613: f++;
  2169  0001FE  0101               	movlb	1	; () banked
  2170  000200  4B1B               	infsnz	__doprnt@f& (0+255),f,b
  2171  000202  2B1C               	incf	(__doprnt@f+1)& (0+255),f,b
  2172                           
  2173                           ; BSR set to: 1
  2174                           ;doprnt.c: 620: {
  2175                           ;doprnt.c: 621: prec = 0;
  2176  000204  0E00               	movlw	0
  2177  000206  0101               	movlb	1	; () banked
  2178  000208  6F3A               	movwf	(__doprnt@prec+1)& (0+255),b
  2179  00020A  0E00               	movlw	0
  2180  00020C  6F39               	movwf	__doprnt@prec& (0+255),b
  2181                           
  2182                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  2183  00020E  D023               	goto	l9564
  2184  000210                     l9560:
  2185                           
  2186                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  2187  000210  C139  F09E         	movff	__doprnt@prec,___wmul@multiplier
  2188  000214  C13A  F09F         	movff	__doprnt@prec+1,___wmul@multiplier+1
  2189  000218  0E00               	movlw	0
  2190  00021A  0100               	movlb	0	; () banked
  2191  00021C  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2192  00021E  0E0A               	movlw	10
  2193  000220  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  2194  000222  EC82  F029         	call	___wmul	;wreg free
  2195  000226  C11B  FFF6         	movff	__doprnt@f,tblptrl
  2196  00022A  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  2197  00022E                     	if	0	;tblptru may be non-zero
  2198  00022E                     	endif
  2199  00022E                     	if	0	;tblptru may be non-zero
  2200  00022E                     	endif
  2201  00022E  0008               	tblrd		*
  2202  000230  50F5               	movf	tablat,w,c
  2203  000232  0100               	movlb	0	; () banked
  2204  000234  279E               	addwf	?___wmul& (0+255),f,b
  2205  000236  0E00               	movlw	0
  2206  000238  0100               	movlb	0	; () banked
  2207  00023A  239F               	addwfc	(?___wmul+1)& (0+255),f,b
  2208  00023C  0ED0               	movlw	208
  2209  00023E  0100               	movlb	0	; () banked
  2210  000240  259E               	addwf	?___wmul& (0+255),w,b
  2211  000242  0101               	movlb	1	; () banked
  2212  000244  6F39               	movwf	__doprnt@prec& (0+255),b
  2213  000246  0EFF               	movlw	255
  2214  000248  0100               	movlb	0	; () banked
  2215  00024A  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  2216  00024C  0101               	movlb	1	; () banked
  2217  00024E  6F3A               	movwf	(__doprnt@prec+1)& (0+255),b
  2218                           
  2219                           ; BSR set to: 1
  2220  000250  0101               	movlb	1	; () banked
  2221  000252  4B1B               	infsnz	__doprnt@f& (0+255),f,b
  2222  000254  2B1C               	incf	(__doprnt@f+1)& (0+255),f,b
  2223  000256                     l9564:
  2224                           
  2225                           ; BSR set to: 1
  2226  000256  C11B  FFF6         	movff	__doprnt@f,tblptrl
  2227  00025A  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  2228  00025E                     	if	0	;tblptru may be non-zero
  2229  00025E                     	endif
  2230  00025E                     	if	0	;tblptru may be non-zero
  2231  00025E                     	endif
  2232  00025E  0008               	tblrd		*
  2233  000260  50F5               	movf	tablat,w,c
  2234  000262  EC1B  F02A         	call	_isdigit
  2235  000266  A0D8               	btfss	status,0,c
  2236  000268  D012               	goto	l9578
  2237  00026A  D7D2               	goto	l9560
  2238  00026C                     l9566:
  2239                           
  2240                           ;doprnt.c: 626: prec = 0;
  2241  00026C  0E00               	movlw	0
  2242  00026E  0101               	movlb	1	; () banked
  2243  000270  6F3A               	movwf	(__doprnt@prec+1)& (0+255),b
  2244  000272  0E00               	movlw	0
  2245  000274  6F39               	movwf	__doprnt@prec& (0+255),b
  2246                           
  2247                           ; BSR set to: 1
  2248                           ;doprnt.c: 628: flag |= 0x1000;
  2249  000276  0101               	movlb	1	; () banked
  2250  000278  8938               	bsf	(__doprnt@flag+1)& (0+255),4,b
  2251                           
  2252                           ; BSR set to: 1
  2253                           ;doprnt.c: 635: switch(c = *f++) {
  2254                           
  2255                           ;doprnt.c: 630: }
  2256                           ;doprnt.c: 633: loop:
  2257                           
  2258                           ; BSR set to: 1
  2259  00027A  D009               	goto	l9578
  2260  00027C                     l9570:
  2261                           
  2262                           ; BSR set to: 1
  2263                           ;doprnt.c: 643: flag |= 0x10;
  2264  00027C  0101               	movlb	1	; () banked
  2265  00027E  8937               	bsf	__doprnt@flag& (0+255),4,b
  2266                           
  2267                           ;doprnt.c: 644: goto loop;
  2268  000280  D006               	goto	l9578
  2269  000282                     l9572:
  2270                           
  2271                           ; BSR set to: 1
  2272                           ;doprnt.c: 663: flag |= 0x400;
  2273  000282  0101               	movlb	1	; () banked
  2274  000284  8538               	bsf	(__doprnt@flag+1)& (0+255),2,b
  2275                           
  2276                           ; BSR set to: 1
  2277                           ;doprnt.c: 698: case 'i':
  2278                           ;doprnt.c: 699: break;
  2279                           
  2280                           ; BSR set to: 1
  2281                           
  2282                           ;doprnt.c: 697: case 'd':
  2283                           
  2284                           ;doprnt.c: 664: break;
  2285  000286  D024               	goto	l9580
  2286  000288                     l9574:
  2287                           
  2288                           ; BSR set to: 1
  2289                           ;doprnt.c: 818: flag |= 0x40;
  2290  000288  0101               	movlb	1	; () banked
  2291  00028A  8D37               	bsf	__doprnt@flag& (0+255),6,b
  2292                           
  2293                           ; BSR set to: 1
  2294                           ;doprnt.c: 822: }
  2295                           
  2296                           ;doprnt.c: 819: break;
  2297  00028C  D021               	goto	l9580
  2298  00028E                     l9578:
  2299  00028E  C11B  FFF6         	movff	__doprnt@f,tblptrl
  2300  000292  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  2301  000296  0101               	movlb	1	; () banked
  2302  000298  4B1B               	infsnz	__doprnt@f& (0+255),f,b
  2303  00029A  2B1C               	incf	(__doprnt@f+1)& (0+255),f,b
  2304  00029C                     	if	0	;tblptru may be non-zero
  2305  00029C                     	endif
  2306  00029C                     	if	0	;tblptru may be non-zero
  2307  00029C                     	endif
  2308  00029C  0008               	tblrd		*
  2309  00029E  CFF5 F13B          	movff	tablat,__doprnt@c
  2310  0002A2  0101               	movlb	1	; () banked
  2311  0002A4  513B               	movf	__doprnt@c& (0+255),w,b
  2312                           
  2313                           ; Switch size 1, requested type "space"
  2314                           ; Number of cases is 6, Range of values is 0 to 117
  2315                           ; switch strategies available:
  2316                           ; Name         Instructions Cycles
  2317                           ; simple_byte           19    10 (average)
  2318                           ;	Chosen strategy is simple_byte
  2319  0002A6  0A00               	xorlw	0	; case 0
  2320  0002A8  B4D8               	btfsc	status,2,c
  2321  0002AA  EF82  F009         	goto	l9914
  2322  0002AE  0A64               	xorlw	100	; case 100
  2323  0002B0  B4D8               	btfsc	status,2,c
  2324  0002B2  D00E               	goto	l9580
  2325  0002B4  0A02               	xorlw	2	; case 102
  2326  0002B6  B4D8               	btfsc	status,2,c
  2327  0002B8  D7E4               	goto	l9572
  2328  0002BA  0A0F               	xorlw	15	; case 105
  2329  0002BC  B4D8               	btfsc	status,2,c
  2330  0002BE  D008               	goto	l9580
  2331  0002C0  0A05               	xorlw	5	; case 108
  2332  0002C2  B4D8               	btfsc	status,2,c
  2333  0002C4  D7DB               	goto	l9570
  2334  0002C6  0A19               	xorlw	25	; case 117
  2335  0002C8  B4D8               	btfsc	status,2,c
  2336  0002CA  D7DE               	goto	l9574
  2337  0002CC  EF73  F009         	goto	l9912
  2338  0002D0                     l9580:
  2339                           
  2340                           ; BSR set to: 1
  2341                           ;doprnt.c: 825: if(flag & (0x700)) {
  2342  0002D0  0E07               	movlw	7
  2343  0002D2  0101               	movlb	1	; () banked
  2344  0002D4  1538               	andwf	(__doprnt@flag+1)& (0+255),w,b
  2345  0002D6  B4D8               	btfsc	status,2,c
  2346  0002D8  EFA9  F006         	goto	l416
  2347                           
  2348                           ; BSR set to: 1
  2349                           ;doprnt.c: 827: if(flag & 0x1000)
  2350  0002DC  0101               	movlb	1	; () banked
  2351  0002DE  A938               	btfss	(__doprnt@flag+1)& (0+255),4,b
  2352  0002E0  D005               	goto	l9586
  2353                           
  2354                           ; BSR set to: 1
  2355                           ;doprnt.c: 829: prec = 6;
  2356  0002E2  0E00               	movlw	0
  2357  0002E4  0101               	movlb	1	; () banked
  2358  0002E6  6F3A               	movwf	(__doprnt@prec+1)& (0+255),b
  2359  0002E8  0E06               	movlw	6
  2360  0002EA  6F39               	movwf	__doprnt@prec& (0+255),b
  2361  0002EC                     l9586:
  2362                           
  2363                           ; BSR set to: 1
  2364                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2365  0002EC  C11D  FFD9         	movff	__doprnt@ap,fsr2l
  2366  0002F0  C11E  FFDA         	movff	__doprnt@ap+1,fsr2h
  2367  0002F4  CFDF F11F          	movff	indf2,??__doprnt
  2368  0002F8  0E03               	movlw	3
  2369  0002FA  26DE               	addwf	postinc2,f,c
  2370  0002FC  CFDF F120          	movff	indf2,??__doprnt+1
  2371  000300  0E00               	movlw	0
  2372  000302  22DD               	addwfc	postdec2,f,c
  2373  000304  C11F  FFD9         	movff	??__doprnt,fsr2l
  2374  000308  C120  FFDA         	movff	??__doprnt+1,fsr2h
  2375  00030C  CFDE F134          	movff	postinc2,__doprnt@fval
  2376  000310  CFDE F135          	movff	postinc2,__doprnt@fval+1
  2377  000314  CFDD F136          	movff	postdec2,__doprnt@fval+2
  2378                           
  2379                           ; BSR set to: 1
  2380                           ;doprnt.c: 831: if(fval < 0.0) {
  2381  000318  0101               	movlb	1	; () banked
  2382  00031A  AF36               	btfss	(__doprnt@fval+2)& (0+255),7,b
  2383  00031C  D011               	goto	l9594
  2384                           
  2385                           ; BSR set to: 1
  2386                           ;doprnt.c: 832: fval = -fval;
  2387  00031E  C134  F090         	movff	__doprnt@fval,___ftneg@f1
  2388  000322  C135  F091         	movff	__doprnt@fval+1,___ftneg@f1+1
  2389  000326  C136  F092         	movff	__doprnt@fval+2,___ftneg@f1+2
  2390  00032A  ECD3  F029         	call	___ftneg	;wreg free
  2391  00032E  C090  F134         	movff	?___ftneg,__doprnt@fval
  2392  000332  C091  F135         	movff	?___ftneg+1,__doprnt@fval+1
  2393  000336  C092  F136         	movff	?___ftneg+2,__doprnt@fval+2
  2394                           
  2395                           ;doprnt.c: 833: flag |= 0x03;
  2396  00033A  0E03               	movlw	3
  2397  00033C  0101               	movlb	1	; () banked
  2398  00033E  1337               	iorwf	__doprnt@flag& (0+255),f,b
  2399  000340                     l9594:
  2400                           
  2401                           ; BSR set to: 1
  2402                           ;doprnt.c: 834: }
  2403                           ;doprnt.c: 835: exp = 0;
  2404  000340  0E00               	movlw	0
  2405  000342  0101               	movlb	1	; () banked
  2406  000344  6F29               	movwf	(__doprnt@exp+1)& (0+255),b
  2407  000346  0E00               	movlw	0
  2408  000348  6F28               	movwf	__doprnt@exp& (0+255),b
  2409                           
  2410                           ; BSR set to: 1
  2411                           ;doprnt.c: 836: if( fval!=0) {
  2412  00034A  0101               	movlb	1	; () banked
  2413  00034C  5134               	movf	__doprnt@fval& (0+255),w,b
  2414  00034E  0101               	movlb	1	; () banked
  2415  000350  1135               	iorwf	(__doprnt@fval+1)& (0+255),w,b
  2416  000352  0101               	movlb	1	; () banked
  2417  000354  1136               	iorwf	(__doprnt@fval+2)& (0+255),w,b
  2418  000356  B4D8               	btfsc	status,2,c
  2419  000358  D09B               	goto	l9622
  2420                           
  2421                           ; BSR set to: 1
  2422                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2423  00035A  0E82               	movlw	130
  2424  00035C  0101               	movlb	1	; () banked
  2425  00035E  6F1F               	movwf	??__doprnt& (0+255),b
  2426  000360  0EFF               	movlw	255
  2427  000362  0101               	movlb	1	; () banked
  2428  000364  6F20               	movwf	(??__doprnt+1)& (0+255),b
  2429  000366  C134  F121         	movff	__doprnt@fval,??__doprnt+2
  2430  00036A  C135  F122         	movff	__doprnt@fval+1,??__doprnt+3
  2431  00036E  C136  F123         	movff	__doprnt@fval+2,??__doprnt+4
  2432  000372  C137  F124         	movff	__doprnt@fval+3,??__doprnt+5
  2433  000376  0E10               	movlw	16
  2434  000378  D006               	goto	u16090
  2435  00037A                     u16095:
  2436  00037A  0101               	movlb	1	; () banked
  2437  00037C  90D8               	bcf	status,0,c
  2438  00037E  3324               	rrcf	(??__doprnt+5)& (0+255),f,b
  2439  000380  3323               	rrcf	(??__doprnt+4)& (0+255),f,b
  2440  000382  3322               	rrcf	(??__doprnt+3)& (0+255),f,b
  2441  000384  3321               	rrcf	(??__doprnt+2)& (0+255),f,b
  2442  000386                     u16090:
  2443  000386  2EE8               	decfsz	wreg,f,c
  2444  000388  D7F8               	goto	u16095
  2445  00038A  0101               	movlb	1	; () banked
  2446  00038C  5121               	movf	(??__doprnt+2)& (0+255),w,b
  2447  00038E  0101               	movlb	1	; () banked
  2448  000390  251F               	addwf	??__doprnt& (0+255),w,b
  2449  000392  0101               	movlb	1	; () banked
  2450  000394  6F28               	movwf	__doprnt@exp& (0+255),b
  2451  000396  0E00               	movlw	0
  2452  000398  0101               	movlb	1	; () banked
  2453  00039A  2120               	addwfc	(??__doprnt+1)& (0+255),w,b
  2454  00039C  0101               	movlb	1	; () banked
  2455  00039E  6F29               	movwf	(__doprnt@exp+1)& (0+255),b
  2456                           
  2457                           ; BSR set to: 1
  2458                           ;doprnt.c: 838: exp--;
  2459  0003A0  0101               	movlb	1	; () banked
  2460  0003A2  0728               	decf	__doprnt@exp& (0+255),f,b
  2461  0003A4  A0D8               	btfss	status,0,c
  2462  0003A6  0729               	decf	(__doprnt@exp+1)& (0+255),f,b
  2463                           
  2464                           ; BSR set to: 1
  2465                           ;doprnt.c: 839: exp *= 3;
  2466  0003A8  C128  F09E         	movff	__doprnt@exp,___wmul@multiplier
  2467  0003AC  C129  F09F         	movff	__doprnt@exp+1,___wmul@multiplier+1
  2468  0003B0  0E00               	movlw	0
  2469  0003B2  0100               	movlb	0	; () banked
  2470  0003B4  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2471  0003B6  0E03               	movlw	3
  2472  0003B8  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  2473  0003BA  EC82  F029         	call	___wmul	;wreg free
  2474  0003BE  C09E  F128         	movff	?___wmul,__doprnt@exp
  2475  0003C2  C09F  F129         	movff	?___wmul+1,__doprnt@exp+1
  2476                           
  2477                           ;doprnt.c: 840: exp /= 10;
  2478  0003C6  C128  F096         	movff	__doprnt@exp,___awdiv@dividend
  2479  0003CA  C129  F097         	movff	__doprnt@exp+1,___awdiv@dividend+1
  2480  0003CE  0E00               	movlw	0
  2481  0003D0  0100               	movlb	0	; () banked
  2482  0003D2  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  2483  0003D4  0E0A               	movlw	10
  2484  0003D6  6F98               	movwf	___awdiv@divisor& (0+255),b
  2485  0003D8  EC49  F024         	call	___awdiv	;wreg free
  2486  0003DC  C096  F128         	movff	?___awdiv,__doprnt@exp
  2487  0003E0  C097  F129         	movff	?___awdiv+1,__doprnt@exp+1
  2488                           
  2489                           ;doprnt.c: 841: if(exp < 0)
  2490  0003E4  0101               	movlb	1	; () banked
  2491  0003E6  AF29               	btfss	(__doprnt@exp+1)& (0+255),7,b
  2492  0003E8  D004               	goto	l9610
  2493                           
  2494                           ; BSR set to: 1
  2495                           ;doprnt.c: 842: exp--;
  2496  0003EA  0101               	movlb	1	; () banked
  2497  0003EC  0728               	decf	__doprnt@exp& (0+255),f,b
  2498  0003EE  A0D8               	btfss	status,0,c
  2499  0003F0  0729               	decf	(__doprnt@exp+1)& (0+255),f,b
  2500  0003F2                     l9610:
  2501                           
  2502                           ; BSR set to: 1
  2503                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2504  0003F2  0101               	movlb	1	; () banked
  2505  0003F4  5128               	movf	__doprnt@exp& (0+255),w,b
  2506  0003F6  0800               	sublw	0
  2507  0003F8  EC44  F012         	call	_scale
  2508  0003FC  C0B3  F12E         	movff	?_scale,__doprnt@tmpval
  2509  000400  C0B4  F12F         	movff	?_scale+1,__doprnt@tmpval+1
  2510  000404  C0B5  F130         	movff	?_scale+2,__doprnt@tmpval+2
  2511                           
  2512                           ;doprnt.c: 847: tmpval.integ *= fval;
  2513  000408  C12E  F0A4         	movff	__doprnt@tmpval,___ftmul@f1
  2514  00040C  C12F  F0A5         	movff	__doprnt@tmpval+1,___ftmul@f1+1
  2515  000410  C130  F0A6         	movff	__doprnt@tmpval+2,___ftmul@f1+2
  2516  000414  C134  F0A7         	movff	__doprnt@fval,___ftmul@f2
  2517  000418  C135  F0A8         	movff	__doprnt@fval+1,___ftmul@f2+1
  2518  00041C  C136  F0A9         	movff	__doprnt@fval+2,___ftmul@f2+2
  2519  000420  EC43  F01E         	call	___ftmul	;wreg free
  2520  000424  C0A4  F12E         	movff	?___ftmul,__doprnt@tmpval
  2521  000428  C0A5  F12F         	movff	?___ftmul+1,__doprnt@tmpval+1
  2522  00042C  C0A6  F130         	movff	?___ftmul+2,__doprnt@tmpval+2
  2523                           
  2524                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2525  000430  C12E  F090         	movff	__doprnt@tmpval,___ftge@ff1
  2526  000434  C12F  F091         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  2527  000438  C130  F092         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  2528  00043C  0E00               	movlw	0
  2529  00043E  0100               	movlb	0	; () banked
  2530  000440  6F93               	movwf	___ftge@ff2& (0+255),b
  2531  000442  0E80               	movlw	128
  2532  000444  0100               	movlb	0	; () banked
  2533  000446  6F94               	movwf	(___ftge@ff2+1)& (0+255),b
  2534  000448  0E3F               	movlw	63
  2535  00044A  0100               	movlb	0	; () banked
  2536  00044C  6F95               	movwf	(___ftge@ff2+2)& (0+255),b
  2537  00044E  ECE5  F023         	call	___ftge	;wreg free
  2538  000452  0100               	movlb	0	; () banked
  2539  000454  B0D8               	btfsc	status,0,c
  2540  000456  D005               	goto	l9618
  2541                           
  2542                           ; BSR set to: 0
  2543                           ;doprnt.c: 849: exp--;
  2544  000458  0101               	movlb	1	; () banked
  2545  00045A  0728               	decf	__doprnt@exp& (0+255),f,b
  2546  00045C  A0D8               	btfss	status,0,c
  2547  00045E  0729               	decf	(__doprnt@exp+1)& (0+255),f,b
  2548  000460  D017               	goto	l9622
  2549  000462                     l9618:
  2550                           
  2551                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2552  000462  C12E  F090         	movff	__doprnt@tmpval,___ftge@ff1
  2553  000466  C12F  F091         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  2554  00046A  C130  F092         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  2555  00046E  0E00               	movlw	0
  2556  000470  0100               	movlb	0	; () banked
  2557  000472  6F93               	movwf	___ftge@ff2& (0+255),b
  2558  000474  0E20               	movlw	32
  2559  000476  0100               	movlb	0	; () banked
  2560  000478  6F94               	movwf	(___ftge@ff2+1)& (0+255),b
  2561  00047A  0E41               	movlw	65
  2562  00047C  0100               	movlb	0	; () banked
  2563  00047E  6F95               	movwf	(___ftge@ff2+2)& (0+255),b
  2564  000480  ECE5  F023         	call	___ftge	;wreg free
  2565  000484  0100               	movlb	0	; () banked
  2566  000486  A0D8               	btfss	status,0,c
  2567  000488  D003               	goto	l9622
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;doprnt.c: 851: exp++;
  2571  00048A  0101               	movlb	1	; () banked
  2572  00048C  4B28               	infsnz	__doprnt@exp& (0+255),f,b
  2573  00048E  2B29               	incf	(__doprnt@exp+1)& (0+255),f,b
  2574  000490                     l9622:
  2575                           
  2576                           ;doprnt.c: 852: }
  2577                           ;doprnt.c: 1112: if(prec <= 12)
  2578  000490  0101               	movlb	1	; () banked
  2579  000492  BF3A               	btfsc	(__doprnt@prec+1)& (0+255),7,b
  2580  000494  D008               	goto	l9624
  2581  000496  0101               	movlb	1	; () banked
  2582  000498  513A               	movf	(__doprnt@prec+1)& (0+255),w,b
  2583  00049A  E11D               	bnz	l9626
  2584  00049C  0E0D               	movlw	13
  2585  00049E  0101               	movlb	1	; () banked
  2586  0004A0  5D39               	subwf	__doprnt@prec& (0+255),w,b
  2587  0004A2  B0D8               	btfsc	status,0,c
  2588  0004A4  D018               	goto	l9626
  2589  0004A6                     l9624:
  2590                           
  2591                           ; BSR set to: 1
  2592                           ;doprnt.c: 1113: fval += fround(prec);
  2593  0004A6  C134  F107         	movff	__doprnt@fval,___ftadd@f1
  2594  0004AA  C135  F108         	movff	__doprnt@fval+1,___ftadd@f1+1
  2595  0004AE  C136  F109         	movff	__doprnt@fval+2,___ftadd@f1+2
  2596  0004B2  0101               	movlb	1	; () banked
  2597  0004B4  5139               	movf	__doprnt@prec& (0+255),w,b
  2598  0004B6  EC93  F016         	call	_fround
  2599  0004BA  C0B3  F10A         	movff	?_fround,___ftadd@f2
  2600  0004BE  C0B4  F10B         	movff	?_fround+1,___ftadd@f2+1
  2601  0004C2  C0B5  F10C         	movff	?_fround+2,___ftadd@f2+2
  2602  0004C6  ECE9  F017         	call	___ftadd	;wreg free
  2603  0004CA  C107  F134         	movff	?___ftadd,__doprnt@fval
  2604  0004CE  C108  F135         	movff	?___ftadd+1,__doprnt@fval+1
  2605  0004D2  C109  F136         	movff	?___ftadd+2,__doprnt@fval+2
  2606  0004D6                     l9626:
  2607                           
  2608                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2609  0004D6  0101               	movlb	1	; () banked
  2610  0004D8  BF29               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  2611  0004DA  D008               	goto	l9628
  2612  0004DC  0101               	movlb	1	; () banked
  2613  0004DE  5129               	movf	(__doprnt@exp+1)& (0+255),w,b
  2614  0004E0  E12A               	bnz	l9634
  2615  0004E2  0E0A               	movlw	10
  2616  0004E4  0101               	movlb	1	; () banked
  2617  0004E6  5D28               	subwf	__doprnt@exp& (0+255),w,b
  2618  0004E8  B0D8               	btfsc	status,0,c
  2619  0004EA  D025               	goto	l9634
  2620  0004EC                     l9628:
  2621                           
  2622                           ; BSR set to: 1
  2623  0004EC  0101               	movlb	1	; () banked
  2624  0004EE  5134               	movf	__doprnt@fval& (0+255),w,b
  2625  0004F0  0101               	movlb	1	; () banked
  2626  0004F2  1135               	iorwf	(__doprnt@fval+1)& (0+255),w,b
  2627  0004F4  0101               	movlb	1	; () banked
  2628  0004F6  1136               	iorwf	(__doprnt@fval+2)& (0+255),w,b
  2629  0004F8  B4D8               	btfsc	status,2,c
  2630  0004FA  D063               	goto	l9648
  2631                           
  2632                           ; BSR set to: 1
  2633  0004FC  C134  F104         	movff	__doprnt@fval,___fttol@f1
  2634  000500  C135  F105         	movff	__doprnt@fval+1,___fttol@f1+1
  2635  000504  C136  F106         	movff	__doprnt@fval+2,___fttol@f1+2
  2636  000508  EC98  F01F         	call	___fttol	;wreg free
  2637  00050C  0101               	movlb	1	; () banked
  2638  00050E  5104               	movf	?___fttol& (0+255),w,b
  2639  000510  0101               	movlb	1	; () banked
  2640  000512  1105               	iorwf	(?___fttol+1)& (0+255),w,b
  2641  000514  0101               	movlb	1	; () banked
  2642  000516  1106               	iorwf	(?___fttol+2)& (0+255),w,b
  2643  000518  0101               	movlb	1	; () banked
  2644  00051A  1107               	iorwf	(?___fttol+3)& (0+255),w,b
  2645  00051C  A4D8               	btfss	status,2,c
  2646  00051E  D051               	goto	l9648
  2647                           
  2648                           ; BSR set to: 1
  2649  000520  0101               	movlb	1	; () banked
  2650  000522  BF29               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  2651  000524  D04E               	goto	l9648
  2652  000526  0101               	movlb	1	; () banked
  2653  000528  5129               	movf	(__doprnt@exp+1)& (0+255),w,b
  2654  00052A  E105               	bnz	l9634
  2655  00052C  0E02               	movlw	2
  2656  00052E  0101               	movlb	1	; () banked
  2657  000530  5D28               	subwf	__doprnt@exp& (0+255),w,b
  2658  000532  A0D8               	btfss	status,0,c
  2659  000534  D046               	goto	l9648
  2660  000536                     l9634:
  2661                           
  2662                           ; BSR set to: 1
  2663                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  2664  000536  C12E  F090         	movff	__doprnt@tmpval,___ftge@ff1
  2665  00053A  C12F  F091         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  2666  00053E  C130  F092         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  2667  000542  0E70               	movlw	112
  2668  000544  0100               	movlb	0	; () banked
  2669  000546  6F93               	movwf	___ftge@ff2& (0+255),b
  2670  000548  0E89               	movlw	137
  2671  00054A  0100               	movlb	0	; () banked
  2672  00054C  6F94               	movwf	(___ftge@ff2+1)& (0+255),b
  2673  00054E  0E40               	movlw	64
  2674  000550  0100               	movlb	0	; () banked
  2675  000552  6F95               	movwf	(___ftge@ff2+2)& (0+255),b
  2676  000554  ECE5  F023         	call	___ftge	;wreg free
  2677  000558  0100               	movlb	0	; () banked
  2678  00055A  B0D8               	btfsc	status,0,c
  2679  00055C  D003               	goto	l9638
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2683  00055E  0101               	movlb	1	; () banked
  2684  000560  0EF7               	movlw	247
  2685  000562  D002               	goto	L1
  2686  000564                     l9638:
  2687                           
  2688                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2689  000564  0101               	movlb	1	; () banked
  2690  000566  0EF8               	movlw	248
  2691  000568                     L1:
  2692  000568  2728               	addwf	__doprnt@exp& (0+255),f,b
  2693  00056A  0EFF               	movlw	255
  2694  00056C  2329               	addwfc	(__doprnt@exp+1)& (0+255),f,b
  2695                           
  2696                           ; BSR set to: 1
  2697                           ;doprnt.c: 1124: }
  2698                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  2699                           
  2700                           ; BSR set to: 1
  2701  00056E  0101               	movlb	1	; () banked
  2702  000570  5128               	movf	__doprnt@exp& (0+255),w,b
  2703  000572  EC44  F012         	call	_scale
  2704  000576  C0B3  F12E         	movff	?_scale,__doprnt@tmpval
  2705  00057A  C0B4  F12F         	movff	?_scale+1,__doprnt@tmpval+1
  2706  00057E  C0B5  F130         	movff	?_scale+2,__doprnt@tmpval+2
  2707                           
  2708                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2709  000582  C134  F090         	movff	__doprnt@fval,__tdiv_to_l_@f1
  2710  000586  C135  F091         	movff	__doprnt@fval+1,__tdiv_to_l_@f1+1
  2711  00058A  C136  F092         	movff	__doprnt@fval+2,__tdiv_to_l_@f1+2
  2712  00058E  C12E  F093         	movff	__doprnt@tmpval,__tdiv_to_l_@f2
  2713  000592  C12F  F094         	movff	__doprnt@tmpval+1,__tdiv_to_l_@f2+1
  2714  000596  C130  F095         	movff	__doprnt@tmpval+2,__tdiv_to_l_@f2+2
  2715  00059A  ECE8  F01B         	call	__tdiv_to_l_	;wreg free
  2716  00059E  C090  F12A         	movff	?__tdiv_to_l_,__doprnt@val
  2717  0005A2  C091  F12B         	movff	?__tdiv_to_l_+1,__doprnt@val+1
  2718  0005A6  C092  F12C         	movff	?__tdiv_to_l_+2,__doprnt@val+2
  2719  0005AA  C093  F12D         	movff	?__tdiv_to_l_+3,__doprnt@val+3
  2720                           
  2721                           ;doprnt.c: 1129: fval = 0.0;
  2722  0005AE  0E00               	movlw	0
  2723  0005B0  0101               	movlb	1	; () banked
  2724  0005B2  6F34               	movwf	__doprnt@fval& (0+255),b
  2725  0005B4  0E00               	movlw	0
  2726  0005B6  0101               	movlb	1	; () banked
  2727  0005B8  6F35               	movwf	(__doprnt@fval+1)& (0+255),b
  2728  0005BA  0E00               	movlw	0
  2729  0005BC  0101               	movlb	1	; () banked
  2730  0005BE  6F36               	movwf	(__doprnt@fval+2)& (0+255),b
  2731                           
  2732                           ;doprnt.c: 1130: } else {
  2733  0005C0  D033               	goto	l9652
  2734  0005C2                     l9648:
  2735                           
  2736                           ; BSR set to: 1
  2737                           ;doprnt.c: 1131: val = (unsigned long)fval;
  2738  0005C2  C134  F104         	movff	__doprnt@fval,___fttol@f1
  2739  0005C6  C135  F105         	movff	__doprnt@fval+1,___fttol@f1+1
  2740  0005CA  C136  F106         	movff	__doprnt@fval+2,___fttol@f1+2
  2741  0005CE  EC98  F01F         	call	___fttol	;wreg free
  2742  0005D2  C104  F12A         	movff	?___fttol,__doprnt@val
  2743  0005D6  C105  F12B         	movff	?___fttol+1,__doprnt@val+1
  2744  0005DA  C106  F12C         	movff	?___fttol+2,__doprnt@val+2
  2745  0005DE  C107  F12D         	movff	?___fttol+3,__doprnt@val+3
  2746                           
  2747                           ;doprnt.c: 1132: fval -= (double)val;
  2748  0005E2  C134  F113         	movff	__doprnt@fval,___ftsub@f1
  2749  0005E6  C135  F114         	movff	__doprnt@fval+1,___ftsub@f1+1
  2750  0005EA  C136  F115         	movff	__doprnt@fval+2,___ftsub@f1+2
  2751  0005EE  C12A  F098         	movff	__doprnt@val,___lltoft@c
  2752  0005F2  C12B  F099         	movff	__doprnt@val+1,___lltoft@c+1
  2753  0005F6  C12C  F09A         	movff	__doprnt@val+2,___lltoft@c+2
  2754  0005FA  C12D  F09B         	movff	__doprnt@val+3,___lltoft@c+3
  2755  0005FE  ECC6  F026         	call	___lltoft	;wreg free
  2756  000602  C098  F116         	movff	?___lltoft,___ftsub@f2
  2757  000606  C099  F117         	movff	?___lltoft+1,___ftsub@f2+1
  2758  00060A  C09A  F118         	movff	?___lltoft+2,___ftsub@f2+2
  2759  00060E  EC6F  F028         	call	___ftsub	;wreg free
  2760  000612  C113  F134         	movff	?___ftsub,__doprnt@fval
  2761  000616  C114  F135         	movff	?___ftsub+1,__doprnt@fval+1
  2762  00061A  C115  F136         	movff	?___ftsub+2,__doprnt@fval+2
  2763                           
  2764                           ;doprnt.c: 1133: exp = 0;
  2765  00061E  0E00               	movlw	0
  2766  000620  0101               	movlb	1	; () banked
  2767  000622  6F29               	movwf	(__doprnt@exp+1)& (0+255),b
  2768  000624  0E00               	movlw	0
  2769  000626  6F28               	movwf	__doprnt@exp& (0+255),b
  2770  000628                     l9652:
  2771                           
  2772                           ; BSR set to: 1
  2773                           ;doprnt.c: 1134: }
  2774                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2775  000628  0E01               	movlw	1
  2776  00062A  0101               	movlb	1	; () banked
  2777  00062C  6F3B               	movwf	__doprnt@c& (0+255),b
  2778  00062E                     l9654:
  2779                           
  2780                           ; BSR set to: 1
  2781  00062E  0E0A               	movlw	10
  2782  000630  0101               	movlb	1	; () banked
  2783  000632  193B               	xorwf	__doprnt@c& (0+255),w,b
  2784  000634  B4D8               	btfsc	status,2,c
  2785  000636  D01E               	goto	l9666
  2786                           
  2787                           ; BSR set to: 1
  2788                           ;doprnt.c: 1137: if(val < dpowers[c])
  2789                           
  2790                           ; BSR set to: 1
  2791                           
  2792                           ; BSR set to: 1
  2793  000638  0101               	movlb	1	; () banked
  2794  00063A  513B               	movf	__doprnt@c& (0+255),w,b
  2795  00063C  0D04               	mullw	4
  2796  00063E  0EEF               	movlw	low _dpowers
  2797  000640  24F3               	addwf	prodl,w,c
  2798  000642  6EF6               	movwf	tblptrl,c
  2799  000644  0E7E               	movlw	high _dpowers
  2800  000646  20F4               	addwfc	prodh,w,c
  2801  000648  6EF7               	movwf	tblptrh,c
  2802  00064A                     	if	0	;There are less than 3 active tblptr bytes
  2803  00064A                     	endif
  2804  00064A  0009               	tblrd		*+
  2805  00064C  50F5               	movf	tablat,w,c
  2806  00064E  0101               	movlb	1	; () banked
  2807  000650  5D2A               	subwf	__doprnt@val& (0+255),w,b
  2808  000652  0009               	tblrd		*+
  2809  000654  50F5               	movf	tablat,w,c
  2810  000656  0101               	movlb	1	; () banked
  2811  000658  592B               	subwfb	(__doprnt@val+1)& (0+255),w,b
  2812  00065A  0009               	tblrd		*+
  2813  00065C  50F5               	movf	tablat,w,c
  2814  00065E  0101               	movlb	1	; () banked
  2815  000660  592C               	subwfb	(__doprnt@val+2)& (0+255),w,b
  2816  000662  0009               	tblrd		*+
  2817  000664  50F5               	movf	tablat,w,c
  2818  000666  0101               	movlb	1	; () banked
  2819  000668  592D               	subwfb	(__doprnt@val+3)& (0+255),w,b
  2820  00066A  A0D8               	btfss	status,0,c
  2821  00066C  D003               	goto	l9666
  2822                           
  2823                           ; BSR set to: 1
  2824                           
  2825                           ; BSR set to: 1
  2826                           
  2827                           ; BSR set to: 1
  2828                           ;doprnt.c: 1138: break;
  2829  00066E  0101               	movlb	1	; () banked
  2830  000670  2B3B               	incf	__doprnt@c& (0+255),f,b
  2831  000672  D7DD               	goto	l9654
  2832  000674                     l9666:
  2833                           
  2834                           ; BSR set to: 1
  2835                           ;doprnt.c: 1142: width -= prec + c + exp;
  2836  000674  C13B  F11F         	movff	__doprnt@c,??__doprnt
  2837  000678  0101               	movlb	1	; () banked
  2838  00067A  6B20               	clrf	(??__doprnt+1)& (0+255),b
  2839  00067C  BF1F               	btfsc	??__doprnt& (0+255),7,b
  2840  00067E  0720               	decf	(??__doprnt+1)& (0+255),f,b
  2841  000680  0101               	movlb	1	; () banked
  2842  000682  5139               	movf	__doprnt@prec& (0+255),w,b
  2843  000684  0101               	movlb	1	; () banked
  2844  000686  271F               	addwf	??__doprnt& (0+255),f,b
  2845  000688  0101               	movlb	1	; () banked
  2846  00068A  513A               	movf	(__doprnt@prec+1)& (0+255),w,b
  2847  00068C  0101               	movlb	1	; () banked
  2848  00068E  2320               	addwfc	(??__doprnt+1)& (0+255),f,b
  2849  000690  0101               	movlb	1	; () banked
  2850  000692  5128               	movf	__doprnt@exp& (0+255),w,b
  2851  000694  0101               	movlb	1	; () banked
  2852  000696  271F               	addwf	??__doprnt& (0+255),f,b
  2853  000698  0101               	movlb	1	; () banked
  2854  00069A  5129               	movf	(__doprnt@exp+1)& (0+255),w,b
  2855  00069C  0101               	movlb	1	; () banked
  2856  00069E  2320               	addwfc	(??__doprnt+1)& (0+255),f,b
  2857  0006A0  0101               	movlb	1	; () banked
  2858  0006A2  511F               	movf	??__doprnt& (0+255),w,b
  2859  0006A4  0101               	movlb	1	; () banked
  2860  0006A6  5F32               	subwf	__doprnt@width& (0+255),f,b
  2861  0006A8  0101               	movlb	1	; () banked
  2862  0006AA  5120               	movf	(??__doprnt+1)& (0+255),w,b
  2863  0006AC  0101               	movlb	1	; () banked
  2864  0006AE  5B33               	subwfb	(__doprnt@width+1)& (0+255),f,b
  2865                           
  2866                           ;doprnt.c: 1143: if(
  2867                           ;doprnt.c: 1147: prec)
  2868  0006B0  0101               	movlb	1	; () banked
  2869  0006B2  5139               	movf	__doprnt@prec& (0+255),w,b
  2870  0006B4  0101               	movlb	1	; () banked
  2871  0006B6  113A               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  2872  0006B8  B4D8               	btfsc	status,2,c
  2873  0006BA  D004               	goto	l9670
  2874                           
  2875                           ; BSR set to: 1
  2876                           ;doprnt.c: 1148: width--;
  2877  0006BC  0101               	movlb	1	; () banked
  2878  0006BE  0732               	decf	__doprnt@width& (0+255),f,b
  2879  0006C0  A0D8               	btfss	status,0,c
  2880  0006C2  0733               	decf	(__doprnt@width+1)& (0+255),f,b
  2881  0006C4                     l9670:
  2882                           
  2883                           ; BSR set to: 1
  2884                           ;doprnt.c: 1149: if(flag & 0x03)
  2885  0006C4  0E03               	movlw	3
  2886  0006C6  0101               	movlb	1	; () banked
  2887  0006C8  1537               	andwf	__doprnt@flag& (0+255),w,b
  2888  0006CA  0101               	movlb	1	; () banked
  2889  0006CC  6F1F               	movwf	??__doprnt& (0+255),b
  2890  0006CE  0E00               	movlw	0
  2891  0006D0  0101               	movlb	1	; () banked
  2892  0006D2  1538               	andwf	(__doprnt@flag+1)& (0+255),w,b
  2893  0006D4  0101               	movlb	1	; () banked
  2894  0006D6  6F20               	movwf	(??__doprnt+1)& (0+255),b
  2895  0006D8  0101               	movlb	1	; () banked
  2896  0006DA  511F               	movf	??__doprnt& (0+255),w,b
  2897  0006DC  0101               	movlb	1	; () banked
  2898  0006DE  1120               	iorwf	(??__doprnt+1)& (0+255),w,b
  2899  0006E0  B4D8               	btfsc	status,2,c
  2900  0006E2  D004               	goto	l9674
  2901                           
  2902                           ; BSR set to: 1
  2903                           ;doprnt.c: 1150: width--;
  2904  0006E4  0101               	movlb	1	; () banked
  2905  0006E6  0732               	decf	__doprnt@width& (0+255),f,b
  2906  0006E8  A0D8               	btfss	status,0,c
  2907  0006EA  0733               	decf	(__doprnt@width+1)& (0+255),f,b
  2908  0006EC                     l9674:
  2909                           
  2910                           ; BSR set to: 1
  2911                           ;doprnt.c: 1153: if(flag & 0x04) {
  2912  0006EC  0101               	movlb	1	; () banked
  2913  0006EE  A537               	btfss	__doprnt@flag& (0+255),2,b
  2914  0006F0  D0C0               	goto	l9708
  2915                           
  2916                           ; BSR set to: 1
  2917                           ;doprnt.c: 1157: if(flag & 0x03)
  2918  0006F2  0E03               	movlw	3
  2919  0006F4  0101               	movlb	1	; () banked
  2920  0006F6  1537               	andwf	__doprnt@flag& (0+255),w,b
  2921  0006F8  0101               	movlb	1	; () banked
  2922  0006FA  6F1F               	movwf	??__doprnt& (0+255),b
  2923  0006FC  0E00               	movlw	0
  2924  0006FE  0101               	movlb	1	; () banked
  2925  000700  1538               	andwf	(__doprnt@flag+1)& (0+255),w,b
  2926  000702  0101               	movlb	1	; () banked
  2927  000704  6F20               	movwf	(??__doprnt+1)& (0+255),b
  2928  000706  0101               	movlb	1	; () banked
  2929  000708  511F               	movf	??__doprnt& (0+255),w,b
  2930  00070A  0101               	movlb	1	; () banked
  2931  00070C  1120               	iorwf	(??__doprnt+1)& (0+255),w,b
  2932  00070E  B4D8               	btfsc	status,2,c
  2933  000710  D06D               	goto	l9696
  2934                           
  2935                           ; BSR set to: 1
  2936                           ;doprnt.c: 1159: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  2937  000712  0101               	movlb	1	; () banked
  2938  000714  EE20 F002          	lfsr	2,2
  2939  000718  5119               	movf	__doprnt@pb& (0+255),w,b
  2940  00071A  26D9               	addwf	fsr2l,f,c
  2941  00071C  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  2942  00071E  22DA               	addwfc	fsr2h,f,c
  2943  000720  50DE               	movf	postinc2,w,c
  2944  000722  10DE               	iorwf	postinc2,w,c
  2945  000724  B4D8               	btfsc	status,2,c
  2946  000726  D014               	goto	l9682
  2947                           
  2948                           ; BSR set to: 1
  2949  000728  0101               	movlb	1	; () banked
  2950  00072A  EE20 F002          	lfsr	2,2
  2951  00072E  5119               	movf	__doprnt@pb& (0+255),w,b
  2952  000730  26D9               	addwf	fsr2l,f,c
  2953  000732  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  2954  000734  22DA               	addwfc	fsr2h,f,c
  2955  000736  D801               	call	u16278
  2956  000738  D059               	goto	l9696
  2957  00073A                     u16278:
  2958  00073A  0005               	push	
  2959  00073C  6EFA               	movwf	pclath,c
  2960  00073E  50DE               	movf	postinc2,w,c
  2961  000740  6EFD               	movwf	tosl,c
  2962  000742  50DE               	movf	postinc2,w,c
  2963  000744  6EFE               	movwf	tosh,c
  2964  000746  50F8               	movf	tblptru,w,c
  2965  000748  6EFF               	movwf	tosu,c
  2966  00074A  50FA               	movf	pclath,w,c
  2967  00074C  0E2D               	movlw	45
  2968  00074E  0012               	return		;indir
  2969  000750                     l9682:
  2970  000750  C119  FFD9         	movff	__doprnt@pb,fsr2l
  2971  000754  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  2972  000758  CFDE F11F          	movff	postinc2,??__doprnt
  2973  00075C  CFDD F120          	movff	postdec2,??__doprnt+1
  2974  000760  C11F  FFD9         	movff	??__doprnt,fsr2l
  2975  000764  C120  FFDA         	movff	??__doprnt+1,fsr2h
  2976  000768  0E2D               	movlw	45
  2977  00076A  6EDF               	movwf	indf2,c
  2978  00076C  C119  FFD9         	movff	__doprnt@pb,fsr2l
  2979  000770  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  2980  000774  2ADE               	incf	postinc2,f,c
  2981  000776  0E00               	movlw	0
  2982  000778  22DD               	addwfc	postdec2,f,c
  2983                           
  2984                           ;doprnt.c: 1168: while(width > 0) {
  2985  00077A  D038               	goto	l9696
  2986  00077C                     l9686:
  2987                           
  2988                           ;doprnt.c: 1169: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  2989  00077C  0101               	movlb	1	; () banked
  2990  00077E  EE20 F002          	lfsr	2,2
  2991  000782  5119               	movf	__doprnt@pb& (0+255),w,b
  2992  000784  26D9               	addwf	fsr2l,f,c
  2993  000786  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  2994  000788  22DA               	addwfc	fsr2h,f,c
  2995  00078A  50DE               	movf	postinc2,w,c
  2996  00078C  10DE               	iorwf	postinc2,w,c
  2997  00078E  B4D8               	btfsc	status,2,c
  2998  000790  D014               	goto	l9690
  2999                           
  3000                           ; BSR set to: 1
  3001  000792  0101               	movlb	1	; () banked
  3002  000794  EE20 F002          	lfsr	2,2
  3003  000798  5119               	movf	__doprnt@pb& (0+255),w,b
  3004  00079A  26D9               	addwf	fsr2l,f,c
  3005  00079C  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3006  00079E  22DA               	addwfc	fsr2h,f,c
  3007  0007A0  D801               	call	u16298
  3008  0007A2  D020               	goto	l9694
  3009  0007A4                     u16298:
  3010  0007A4  0005               	push	
  3011  0007A6  6EFA               	movwf	pclath,c
  3012  0007A8  50DE               	movf	postinc2,w,c
  3013  0007AA  6EFD               	movwf	tosl,c
  3014  0007AC  50DE               	movf	postinc2,w,c
  3015  0007AE  6EFE               	movwf	tosh,c
  3016  0007B0  50F8               	movf	tblptru,w,c
  3017  0007B2  6EFF               	movwf	tosu,c
  3018  0007B4  50FA               	movf	pclath,w,c
  3019  0007B6  0E30               	movlw	48
  3020  0007B8  0012               	return		;indir
  3021  0007BA                     l9690:
  3022  0007BA  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3023  0007BE  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3024  0007C2  CFDE F11F          	movff	postinc2,??__doprnt
  3025  0007C6  CFDD F120          	movff	postdec2,??__doprnt+1
  3026  0007CA  C11F  FFD9         	movff	??__doprnt,fsr2l
  3027  0007CE  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3028  0007D2  0E30               	movlw	48
  3029  0007D4  6EDF               	movwf	indf2,c
  3030  0007D6  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3031  0007DA  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3032  0007DE  2ADE               	incf	postinc2,f,c
  3033  0007E0  0E00               	movlw	0
  3034  0007E2  22DD               	addwfc	postdec2,f,c
  3035  0007E4                     l9694:
  3036                           
  3037                           ;doprnt.c: 1170: width--;
  3038  0007E4  0101               	movlb	1	; () banked
  3039  0007E6  0732               	decf	__doprnt@width& (0+255),f,b
  3040  0007E8  A0D8               	btfss	status,0,c
  3041  0007EA  0733               	decf	(__doprnt@width+1)& (0+255),f,b
  3042  0007EC                     l9696:
  3043  0007EC  0101               	movlb	1	; () banked
  3044  0007EE  BF33               	btfsc	(__doprnt@width+1)& (0+255),7,b
  3045  0007F0  D103               	goto	l9730
  3046  0007F2  0101               	movlb	1	; () banked
  3047  0007F4  5133               	movf	(__doprnt@width+1)& (0+255),w,b
  3048  0007F6  E1C2               	bnz	l9686
  3049  0007F8  0101               	movlb	1	; () banked
  3050  0007FA  0532               	decf	__doprnt@width& (0+255),w,b
  3051  0007FC  A0D8               	btfss	status,0,c
  3052  0007FE  D0FC               	goto	l9730
  3053  000800  D7BD               	goto	l9686
  3054  000802                     l9698:
  3055                           
  3056                           ; BSR set to: 1
  3057                           ;doprnt.c: 1181: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  3058  000802  0101               	movlb	1	; () banked
  3059  000804  EE20 F002          	lfsr	2,2
  3060  000808  5119               	movf	__doprnt@pb& (0+255),w,b
  3061  00080A  26D9               	addwf	fsr2l,f,c
  3062  00080C  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3063  00080E  22DA               	addwfc	fsr2h,f,c
  3064  000810  50DE               	movf	postinc2,w,c
  3065  000812  10DE               	iorwf	postinc2,w,c
  3066  000814  B4D8               	btfsc	status,2,c
  3067  000816  D014               	goto	l9702
  3068                           
  3069                           ; BSR set to: 1
  3070  000818  0101               	movlb	1	; () banked
  3071  00081A  EE20 F002          	lfsr	2,2
  3072  00081E  5119               	movf	__doprnt@pb& (0+255),w,b
  3073  000820  26D9               	addwf	fsr2l,f,c
  3074  000822  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3075  000824  22DA               	addwfc	fsr2h,f,c
  3076  000826  D801               	call	u16328
  3077  000828  D020               	goto	l9706
  3078  00082A                     u16328:
  3079  00082A  0005               	push	
  3080  00082C  6EFA               	movwf	pclath,c
  3081  00082E  50DE               	movf	postinc2,w,c
  3082  000830  6EFD               	movwf	tosl,c
  3083  000832  50DE               	movf	postinc2,w,c
  3084  000834  6EFE               	movwf	tosh,c
  3085  000836  50F8               	movf	tblptru,w,c
  3086  000838  6EFF               	movwf	tosu,c
  3087  00083A  50FA               	movf	pclath,w,c
  3088  00083C  0E20               	movlw	32
  3089  00083E  0012               	return		;indir
  3090  000840                     l9702:
  3091  000840  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3092  000844  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3093  000848  CFDE F11F          	movff	postinc2,??__doprnt
  3094  00084C  CFDD F120          	movff	postdec2,??__doprnt+1
  3095  000850  C11F  FFD9         	movff	??__doprnt,fsr2l
  3096  000854  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3097  000858  0E20               	movlw	32
  3098  00085A  6EDF               	movwf	indf2,c
  3099  00085C  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3100  000860  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3101  000864  2ADE               	incf	postinc2,f,c
  3102  000866  0E00               	movlw	0
  3103  000868  22DD               	addwfc	postdec2,f,c
  3104  00086A                     l9706:
  3105                           
  3106                           ;doprnt.c: 1182: width--;
  3107  00086A  0101               	movlb	1	; () banked
  3108  00086C  0732               	decf	__doprnt@width& (0+255),f,b
  3109  00086E  A0D8               	btfss	status,0,c
  3110  000870  0733               	decf	(__doprnt@width+1)& (0+255),f,b
  3111  000872                     l9708:
  3112                           
  3113                           ; BSR set to: 1
  3114  000872  0101               	movlb	1	; () banked
  3115  000874  BF33               	btfsc	(__doprnt@width+1)& (0+255),7,b
  3116  000876  D007               	goto	l9710
  3117  000878  0101               	movlb	1	; () banked
  3118  00087A  5133               	movf	(__doprnt@width+1)& (0+255),w,b
  3119  00087C  E1C2               	bnz	l9698
  3120  00087E  0101               	movlb	1	; () banked
  3121  000880  0532               	decf	__doprnt@width& (0+255),w,b
  3122  000882  B0D8               	btfsc	status,0,c
  3123  000884  D7BE               	goto	l9698
  3124  000886                     l9710:
  3125                           
  3126                           ; BSR set to: 1
  3127                           ;doprnt.c: 1183: }
  3128                           ;doprnt.c: 1188: if(flag & 0x03)
  3129  000886  0E03               	movlw	3
  3130  000888  0101               	movlb	1	; () banked
  3131  00088A  1537               	andwf	__doprnt@flag& (0+255),w,b
  3132  00088C  0101               	movlb	1	; () banked
  3133  00088E  6F1F               	movwf	??__doprnt& (0+255),b
  3134  000890  0E00               	movlw	0
  3135  000892  0101               	movlb	1	; () banked
  3136  000894  1538               	andwf	(__doprnt@flag+1)& (0+255),w,b
  3137  000896  0101               	movlb	1	; () banked
  3138  000898  6F20               	movwf	(??__doprnt+1)& (0+255),b
  3139  00089A  0101               	movlb	1	; () banked
  3140  00089C  511F               	movf	??__doprnt& (0+255),w,b
  3141  00089E  0101               	movlb	1	; () banked
  3142  0008A0  1120               	iorwf	(??__doprnt+1)& (0+255),w,b
  3143  0008A2  B4D8               	btfsc	status,2,c
  3144  0008A4  D0A9               	goto	l9730
  3145                           
  3146                           ; BSR set to: 1
  3147                           ;doprnt.c: 1190: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  3148  0008A6  0101               	movlb	1	; () banked
  3149  0008A8  EE20 F002          	lfsr	2,2
  3150  0008AC  5119               	movf	__doprnt@pb& (0+255),w,b
  3151  0008AE  26D9               	addwf	fsr2l,f,c
  3152  0008B0  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3153  0008B2  22DA               	addwfc	fsr2h,f,c
  3154  0008B4  50DE               	movf	postinc2,w,c
  3155  0008B6  10DE               	iorwf	postinc2,w,c
  3156  0008B8  B4D8               	btfsc	status,2,c
  3157  0008BA  D014               	goto	l9716
  3158                           
  3159                           ; BSR set to: 1
  3160  0008BC  0101               	movlb	1	; () banked
  3161  0008BE  EE20 F002          	lfsr	2,2
  3162  0008C2  5119               	movf	__doprnt@pb& (0+255),w,b
  3163  0008C4  26D9               	addwf	fsr2l,f,c
  3164  0008C6  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3165  0008C8  22DA               	addwfc	fsr2h,f,c
  3166  0008CA  D801               	call	u16368
  3167  0008CC  D095               	goto	l9730
  3168  0008CE                     u16368:
  3169  0008CE  0005               	push	
  3170  0008D0  6EFA               	movwf	pclath,c
  3171  0008D2  50DE               	movf	postinc2,w,c
  3172  0008D4  6EFD               	movwf	tosl,c
  3173  0008D6  50DE               	movf	postinc2,w,c
  3174  0008D8  6EFE               	movwf	tosh,c
  3175  0008DA  50F8               	movf	tblptru,w,c
  3176  0008DC  6EFF               	movwf	tosu,c
  3177  0008DE  50FA               	movf	pclath,w,c
  3178  0008E0  0E2D               	movlw	45
  3179  0008E2  0012               	return		;indir
  3180  0008E4                     l9716:
  3181  0008E4  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3182  0008E8  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3183  0008EC  CFDE F11F          	movff	postinc2,??__doprnt
  3184  0008F0  CFDD F120          	movff	postdec2,??__doprnt+1
  3185  0008F4  C11F  FFD9         	movff	??__doprnt,fsr2l
  3186  0008F8  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3187  0008FC  0E2D               	movlw	45
  3188  0008FE  D07A               	goto	L2
  3189  000900                     l9718:
  3190  000900  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3191  000904  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3192  000908  2ADE               	incf	postinc2,f,c
  3193  00090A  0E00               	movlw	0
  3194  00090C  22DD               	addwfc	postdec2,f,c
  3195                           
  3196                           ;doprnt.c: 1195: }
  3197                           ;doprnt.c: 1196: while(c--) {
  3198  00090E  D074               	goto	l9730
  3199  000910                     l9720:
  3200                           
  3201                           ;doprnt.c: 1200: {
  3202                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3203  000910  C12A  F090         	movff	__doprnt@val,___lldiv@dividend
  3204  000914  C12B  F091         	movff	__doprnt@val+1,___lldiv@dividend+1
  3205  000918  C12C  F092         	movff	__doprnt@val+2,___lldiv@dividend+2
  3206  00091C  C12D  F093         	movff	__doprnt@val+3,___lldiv@dividend+3
  3207  000920  0101               	movlb	1	; () banked
  3208  000922  513B               	movf	__doprnt@c& (0+255),w,b
  3209  000924  0D04               	mullw	4
  3210  000926  0EEF               	movlw	low _dpowers
  3211  000928  24F3               	addwf	prodl,w,c
  3212  00092A  6EF6               	movwf	tblptrl,c
  3213  00092C  0E7E               	movlw	high _dpowers
  3214  00092E  20F4               	addwfc	prodh,w,c
  3215  000930  6EF7               	movwf	tblptrh,c
  3216  000932                     	if	0	;There are less than 3 active tblptr bytes
  3217  000932                     	endif
  3218  000932  0009               	tblrd		*+
  3219  000934  CFF5 F094          	movff	tablat,___lldiv@divisor
  3220  000938  0009               	tblrd		*+
  3221  00093A  CFF5 F095          	movff	tablat,___lldiv@divisor+1
  3222  00093E  0009               	tblrd		*+
  3223  000940  CFF5 F096          	movff	tablat,___lldiv@divisor+2
  3224  000944  000A               	tblrd		*-
  3225  000946  CFF5 F097          	movff	tablat,___lldiv@divisor+3
  3226  00094A  ECA8  F024         	call	___lldiv
  3227  00094E  C090  F12E         	movff	?___lldiv,__doprnt@tmpval
  3228  000952  C091  F12F         	movff	?___lldiv+1,__doprnt@tmpval+1
  3229  000956  C092  F130         	movff	?___lldiv+2,__doprnt@tmpval+2
  3230  00095A  C093  F131         	movff	?___lldiv+3,__doprnt@tmpval+3
  3231                           
  3232                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3233  00095E  C12E  F09D         	movff	__doprnt@tmpval,___llmod@dividend
  3234  000962  C12F  F09E         	movff	__doprnt@tmpval+1,___llmod@dividend+1
  3235  000966  C130  F09F         	movff	__doprnt@tmpval+2,___llmod@dividend+2
  3236  00096A  C131  F0A0         	movff	__doprnt@tmpval+3,___llmod@dividend+3
  3237  00096E  0E0A               	movlw	10
  3238  000970  0100               	movlb	0	; () banked
  3239  000972  6FA1               	movwf	___llmod@divisor& (0+255),b
  3240  000974  0E00               	movlw	0
  3241  000976  6FA2               	movwf	(___llmod@divisor+1)& (0+255),b
  3242  000978  0E00               	movlw	0
  3243  00097A  6FA3               	movwf	(___llmod@divisor+2)& (0+255),b
  3244  00097C  0E00               	movlw	0
  3245  00097E  6FA4               	movwf	(___llmod@divisor+3)& (0+255),b
  3246  000980  ECAE  F025         	call	___llmod	;wreg free
  3247  000984  C09D  F12E         	movff	?___llmod,__doprnt@tmpval
  3248  000988  C09E  F12F         	movff	?___llmod+1,__doprnt@tmpval+1
  3249  00098C  C09F  F130         	movff	?___llmod+2,__doprnt@tmpval+2
  3250  000990  C0A0  F131         	movff	?___llmod+3,__doprnt@tmpval+3
  3251                           
  3252                           ;doprnt.c: 1203: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
  3253  000994  0101               	movlb	1	; () banked
  3254  000996  EE20 F002          	lfsr	2,2
  3255  00099A  5119               	movf	__doprnt@pb& (0+255),w,b
  3256  00099C  26D9               	addwf	fsr2l,f,c
  3257  00099E  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3258  0009A0  22DA               	addwfc	fsr2h,f,c
  3259  0009A2  50DE               	movf	postinc2,w,c
  3260  0009A4  10DE               	iorwf	postinc2,w,c
  3261  0009A6  B4D8               	btfsc	status,2,c
  3262  0009A8  D016               	goto	l9728
  3263                           
  3264                           ; BSR set to: 1
  3265  0009AA  0101               	movlb	1	; () banked
  3266  0009AC  EE20 F002          	lfsr	2,2
  3267  0009B0  5119               	movf	__doprnt@pb& (0+255),w,b
  3268  0009B2  26D9               	addwf	fsr2l,f,c
  3269  0009B4  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3270  0009B6  22DA               	addwfc	fsr2h,f,c
  3271  0009B8  D801               	call	u16388
  3272  0009BA  D01E               	goto	l9730
  3273  0009BC                     u16388:
  3274  0009BC  0005               	push	
  3275  0009BE  6EFA               	movwf	pclath,c
  3276  0009C0  50DE               	movf	postinc2,w,c
  3277  0009C2  6EFD               	movwf	tosl,c
  3278  0009C4  50DE               	movf	postinc2,w,c
  3279  0009C6  6EFE               	movwf	tosh,c
  3280  0009C8  50F8               	movf	tblptru,w,c
  3281  0009CA  6EFF               	movwf	tosu,c
  3282  0009CC  50FA               	movf	pclath,w,c
  3283  0009CE  0101               	movlb	1	; () banked
  3284  0009D0  512E               	movf	__doprnt@tmpval& (0+255),w,b
  3285  0009D2  0F30               	addlw	48
  3286  0009D4  0012               	return		;indir
  3287  0009D6                     l9728:
  3288  0009D6  0101               	movlb	1	; () banked
  3289  0009D8  512E               	movf	__doprnt@tmpval& (0+255),w,b
  3290  0009DA  0F30               	addlw	48
  3291  0009DC  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3292  0009E0  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3293  0009E4  CFDE F11F          	movff	postinc2,??__doprnt
  3294  0009E8  CFDD F120          	movff	postdec2,??__doprnt+1
  3295  0009EC  C11F  FFD9         	movff	??__doprnt,fsr2l
  3296  0009F0  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3297  0009F4                     L2:
  3298  0009F4  6EDF               	movwf	indf2,c
  3299  0009F6  D784               	goto	l9718
  3300  0009F8                     l9730:
  3301  0009F8  0101               	movlb	1	; () banked
  3302  0009FA  073B               	decf	__doprnt@c& (0+255),f,b
  3303  0009FC  0101               	movlb	1	; () banked
  3304  0009FE  293B               	incf	__doprnt@c& (0+255),w,b
  3305  000A00  B4D8               	btfsc	status,2,c
  3306  000A02  D039               	goto	l9742
  3307  000A04  D785               	goto	l9720
  3308  000A06                     l9732:
  3309                           
  3310                           ; BSR set to: 1
  3311                           ;doprnt.c: 1208: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  3312  000A06  0101               	movlb	1	; () banked
  3313  000A08  EE20 F002          	lfsr	2,2
  3314  000A0C  5119               	movf	__doprnt@pb& (0+255),w,b
  3315  000A0E  26D9               	addwf	fsr2l,f,c
  3316  000A10  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3317  000A12  22DA               	addwfc	fsr2h,f,c
  3318  000A14  50DE               	movf	postinc2,w,c
  3319  000A16  10DE               	iorwf	postinc2,w,c
  3320  000A18  B4D8               	btfsc	status,2,c
  3321  000A1A  D014               	goto	l9736
  3322                           
  3323                           ; BSR set to: 1
  3324  000A1C  0101               	movlb	1	; () banked
  3325  000A1E  EE20 F002          	lfsr	2,2
  3326  000A22  5119               	movf	__doprnt@pb& (0+255),w,b
  3327  000A24  26D9               	addwf	fsr2l,f,c
  3328  000A26  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3329  000A28  22DA               	addwfc	fsr2h,f,c
  3330  000A2A  D801               	call	u16418
  3331  000A2C  D020               	goto	l9740
  3332  000A2E                     u16418:
  3333  000A2E  0005               	push	
  3334  000A30  6EFA               	movwf	pclath,c
  3335  000A32  50DE               	movf	postinc2,w,c
  3336  000A34  6EFD               	movwf	tosl,c
  3337  000A36  50DE               	movf	postinc2,w,c
  3338  000A38  6EFE               	movwf	tosh,c
  3339  000A3A  50F8               	movf	tblptru,w,c
  3340  000A3C  6EFF               	movwf	tosu,c
  3341  000A3E  50FA               	movf	pclath,w,c
  3342  000A40  0E30               	movlw	48
  3343  000A42  0012               	return		;indir
  3344  000A44                     l9736:
  3345  000A44  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3346  000A48  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3347  000A4C  CFDE F11F          	movff	postinc2,??__doprnt
  3348  000A50  CFDD F120          	movff	postdec2,??__doprnt+1
  3349  000A54  C11F  FFD9         	movff	??__doprnt,fsr2l
  3350  000A58  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3351  000A5C  0E30               	movlw	48
  3352  000A5E  6EDF               	movwf	indf2,c
  3353  000A60  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3354  000A64  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3355  000A68  2ADE               	incf	postinc2,f,c
  3356  000A6A  0E00               	movlw	0
  3357  000A6C  22DD               	addwfc	postdec2,f,c
  3358  000A6E                     l9740:
  3359                           
  3360                           ;doprnt.c: 1209: exp--;
  3361  000A6E  0101               	movlb	1	; () banked
  3362  000A70  0728               	decf	__doprnt@exp& (0+255),f,b
  3363  000A72  A0D8               	btfss	status,0,c
  3364  000A74  0729               	decf	(__doprnt@exp+1)& (0+255),f,b
  3365  000A76                     l9742:
  3366                           
  3367                           ; BSR set to: 1
  3368  000A76  0101               	movlb	1	; () banked
  3369  000A78  BF29               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  3370  000A7A  D007               	goto	l9744
  3371  000A7C  0101               	movlb	1	; () banked
  3372  000A7E  5129               	movf	(__doprnt@exp+1)& (0+255),w,b
  3373  000A80  E1C2               	bnz	l9732
  3374  000A82  0101               	movlb	1	; () banked
  3375  000A84  0528               	decf	__doprnt@exp& (0+255),w,b
  3376  000A86  B0D8               	btfsc	status,0,c
  3377  000A88  D7BE               	goto	l9732
  3378  000A8A                     l9744:
  3379                           
  3380                           ; BSR set to: 1
  3381                           ;doprnt.c: 1210: }
  3382                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3383  000A8A  0101               	movlb	1	; () banked
  3384  000A8C  BF3A               	btfsc	(__doprnt@prec+1)& (0+255),7,b
  3385  000A8E  D00C               	goto	l468
  3386  000A90  0101               	movlb	1	; () banked
  3387  000A92  513A               	movf	(__doprnt@prec+1)& (0+255),w,b
  3388  000A94  E105               	bnz	u16430
  3389  000A96  0E09               	movlw	9
  3390  000A98  0101               	movlb	1	; () banked
  3391  000A9A  5D39               	subwf	__doprnt@prec& (0+255),w,b
  3392  000A9C  A0D8               	btfss	status,0,c
  3393  000A9E  D004               	goto	l468
  3394  000AA0                     u16430:
  3395                           
  3396                           ; BSR set to: 1
  3397                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3398  000AA0  0E08               	movlw	8
  3399  000AA2  0101               	movlb	1	; () banked
  3400  000AA4  6F3B               	movwf	__doprnt@c& (0+255),b
  3401  000AA6  D002               	goto	l9748
  3402  000AA8                     l468:
  3403                           
  3404                           ; BSR set to: 1
  3405                           ;doprnt.c: 1213: else
  3406                           ;doprnt.c: 1214: c = prec;
  3407  000AA8  C139  F13B         	movff	__doprnt@prec,__doprnt@c
  3408  000AAC                     l9748:
  3409                           
  3410                           ; BSR set to: 1
  3411                           ;doprnt.c: 1215: prec -= c;
  3412  000AAC  0101               	movlb	1	; () banked
  3413  000AAE  513B               	movf	__doprnt@c& (0+255),w,b
  3414  000AB0  0101               	movlb	1	; () banked
  3415  000AB2  5F39               	subwf	__doprnt@prec& (0+255),f,b
  3416  000AB4  0E00               	movlw	0
  3417  000AB6  0101               	movlb	1	; () banked
  3418  000AB8  BF3B               	btfsc	__doprnt@c& (0+255),7,b
  3419  000ABA  0EFF               	movlw	255
  3420  000ABC  0101               	movlb	1	; () banked
  3421  000ABE  5B3A               	subwfb	(__doprnt@prec+1)& (0+255),f,b
  3422                           
  3423                           ; BSR set to: 1
  3424                           ;doprnt.c: 1219: if(c)
  3425  000AC0  0101               	movlb	1	; () banked
  3426  000AC2  513B               	movf	__doprnt@c& (0+255),w,b
  3427  000AC4  0101               	movlb	1	; () banked
  3428  000AC6  B4D8               	btfsc	status,2,c
  3429  000AC8  D034               	goto	l9760
  3430                           
  3431                           ; BSR set to: 1
  3432                           ;doprnt.c: 1221: if(pb->func) (pb->func('.')); else ((*pb->ptr++ = '.'));
  3433  000ACA  0101               	movlb	1	; () banked
  3434  000ACC  EE20 F002          	lfsr	2,2
  3435  000AD0  5119               	movf	__doprnt@pb& (0+255),w,b
  3436  000AD2  26D9               	addwf	fsr2l,f,c
  3437  000AD4  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3438  000AD6  22DA               	addwfc	fsr2h,f,c
  3439  000AD8  50DE               	movf	postinc2,w,c
  3440  000ADA  10DE               	iorwf	postinc2,w,c
  3441  000ADC  B4D8               	btfsc	status,2,c
  3442  000ADE  D014               	goto	l9756
  3443                           
  3444                           ; BSR set to: 1
  3445  000AE0  0101               	movlb	1	; () banked
  3446  000AE2  EE20 F002          	lfsr	2,2
  3447  000AE6  5119               	movf	__doprnt@pb& (0+255),w,b
  3448  000AE8  26D9               	addwf	fsr2l,f,c
  3449  000AEA  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3450  000AEC  22DA               	addwfc	fsr2h,f,c
  3451  000AEE  D801               	call	u16468
  3452  000AF0  D020               	goto	l9760
  3453  000AF2                     u16468:
  3454  000AF2  0005               	push	
  3455  000AF4  6EFA               	movwf	pclath,c
  3456  000AF6  50DE               	movf	postinc2,w,c
  3457  000AF8  6EFD               	movwf	tosl,c
  3458  000AFA  50DE               	movf	postinc2,w,c
  3459  000AFC  6EFE               	movwf	tosh,c
  3460  000AFE  50F8               	movf	tblptru,w,c
  3461  000B00  6EFF               	movwf	tosu,c
  3462  000B02  50FA               	movf	pclath,w,c
  3463  000B04  0E2E               	movlw	46
  3464  000B06  0012               	return		;indir
  3465  000B08                     l9756:
  3466  000B08  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3467  000B0C  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3468  000B10  CFDE F11F          	movff	postinc2,??__doprnt
  3469  000B14  CFDD F120          	movff	postdec2,??__doprnt+1
  3470  000B18  C11F  FFD9         	movff	??__doprnt,fsr2l
  3471  000B1C  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3472  000B20  0E2E               	movlw	46
  3473  000B22  6EDF               	movwf	indf2,c
  3474  000B24  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3475  000B28  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3476  000B2C  2ADE               	incf	postinc2,f,c
  3477  000B2E  0E00               	movlw	0
  3478  000B30  22DD               	addwfc	postdec2,f,c
  3479  000B32                     l9760:
  3480                           
  3481                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3482  000B32  0101               	movlb	1	; () banked
  3483  000B34  513B               	movf	__doprnt@c& (0+255),w,b
  3484  000B36  EC44  F012         	call	_scale
  3485  000B3A  C0B3  F125         	movff	?_scale,__doprnt$1651
  3486  000B3E  C0B4  F126         	movff	?_scale+1,__doprnt$1651+1
  3487  000B42  C0B5  F127         	movff	?_scale+2,__doprnt$1651+2
  3488                           
  3489                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3490  000B46  C134  F0A7         	movff	__doprnt@fval,___ftmul@f2
  3491  000B4A  C135  F0A8         	movff	__doprnt@fval+1,___ftmul@f2+1
  3492  000B4E  C136  F0A9         	movff	__doprnt@fval+2,___ftmul@f2+2
  3493  000B52  C125  F0A4         	movff	__doprnt$1651,___ftmul@f1
  3494  000B56  C126  F0A5         	movff	__doprnt$1651+1,___ftmul@f1+1
  3495  000B5A  C127  F0A6         	movff	__doprnt$1651+2,___ftmul@f1+2
  3496  000B5E  EC43  F01E         	call	___ftmul	;wreg free
  3497  000B62  C0A4  F104         	movff	?___ftmul,___fttol@f1
  3498  000B66  C0A5  F105         	movff	?___ftmul+1,___fttol@f1+1
  3499  000B6A  C0A6  F106         	movff	?___ftmul+2,___fttol@f1+2
  3500  000B6E  EC98  F01F         	call	___fttol	;wreg free
  3501  000B72  C104  F12A         	movff	?___fttol,__doprnt@val
  3502  000B76  C105  F12B         	movff	?___fttol+1,__doprnt@val+1
  3503  000B7A  C106  F12C         	movff	?___fttol+2,__doprnt@val+2
  3504  000B7E  C107  F12D         	movff	?___fttol+3,__doprnt@val+3
  3505                           
  3506                           ;doprnt.c: 1228: while(c--) {
  3507  000B82  D0A1               	goto	l9776
  3508  000B84                     l9764:
  3509                           
  3510                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3511  000B84  C12A  F090         	movff	__doprnt@val,___lldiv@dividend
  3512  000B88  C12B  F091         	movff	__doprnt@val+1,___lldiv@dividend+1
  3513  000B8C  C12C  F092         	movff	__doprnt@val+2,___lldiv@dividend+2
  3514  000B90  C12D  F093         	movff	__doprnt@val+3,___lldiv@dividend+3
  3515  000B94  0101               	movlb	1	; () banked
  3516  000B96  513B               	movf	__doprnt@c& (0+255),w,b
  3517  000B98  0D04               	mullw	4
  3518  000B9A  0EEF               	movlw	low _dpowers
  3519  000B9C  24F3               	addwf	prodl,w,c
  3520  000B9E  6EF6               	movwf	tblptrl,c
  3521  000BA0  0E7E               	movlw	high _dpowers
  3522  000BA2  20F4               	addwfc	prodh,w,c
  3523  000BA4  6EF7               	movwf	tblptrh,c
  3524  000BA6                     	if	0	;There are less than 3 active tblptr bytes
  3525  000BA6                     	endif
  3526  000BA6  0009               	tblrd		*+
  3527  000BA8  CFF5 F094          	movff	tablat,___lldiv@divisor
  3528  000BAC  0009               	tblrd		*+
  3529  000BAE  CFF5 F095          	movff	tablat,___lldiv@divisor+1
  3530  000BB2  0009               	tblrd		*+
  3531  000BB4  CFF5 F096          	movff	tablat,___lldiv@divisor+2
  3532  000BB8  000A               	tblrd		*-
  3533  000BBA  CFF5 F097          	movff	tablat,___lldiv@divisor+3
  3534  000BBE  ECA8  F024         	call	___lldiv	;wreg free
  3535  000BC2  C090  F12E         	movff	?___lldiv,__doprnt@tmpval
  3536  000BC6  C091  F12F         	movff	?___lldiv+1,__doprnt@tmpval+1
  3537  000BCA  C092  F130         	movff	?___lldiv+2,__doprnt@tmpval+2
  3538  000BCE  C093  F131         	movff	?___lldiv+3,__doprnt@tmpval+3
  3539                           
  3540                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3541  000BD2  C12E  F09D         	movff	__doprnt@tmpval,___llmod@dividend
  3542  000BD6  C12F  F09E         	movff	__doprnt@tmpval+1,___llmod@dividend+1
  3543  000BDA  C130  F09F         	movff	__doprnt@tmpval+2,___llmod@dividend+2
  3544  000BDE  C131  F0A0         	movff	__doprnt@tmpval+3,___llmod@dividend+3
  3545  000BE2  0E0A               	movlw	10
  3546  000BE4  0100               	movlb	0	; () banked
  3547  000BE6  6FA1               	movwf	___llmod@divisor& (0+255),b
  3548  000BE8  0E00               	movlw	0
  3549  000BEA  6FA2               	movwf	(___llmod@divisor+1)& (0+255),b
  3550  000BEC  0E00               	movlw	0
  3551  000BEE  6FA3               	movwf	(___llmod@divisor+2)& (0+255),b
  3552  000BF0  0E00               	movlw	0
  3553  000BF2  6FA4               	movwf	(___llmod@divisor+3)& (0+255),b
  3554  000BF4  ECAE  F025         	call	___llmod	;wreg free
  3555  000BF8  C09D  F12E         	movff	?___llmod,__doprnt@tmpval
  3556  000BFC  C09E  F12F         	movff	?___llmod+1,__doprnt@tmpval+1
  3557  000C00  C09F  F130         	movff	?___llmod+2,__doprnt@tmpval+2
  3558  000C04  C0A0  F131         	movff	?___llmod+3,__doprnt@tmpval+3
  3559                           
  3560                           ;doprnt.c: 1231: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
  3561  000C08  0101               	movlb	1	; () banked
  3562  000C0A  EE20 F002          	lfsr	2,2
  3563  000C0E  5119               	movf	__doprnt@pb& (0+255),w,b
  3564  000C10  26D9               	addwf	fsr2l,f,c
  3565  000C12  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3566  000C14  22DA               	addwfc	fsr2h,f,c
  3567  000C16  50DE               	movf	postinc2,w,c
  3568  000C18  10DE               	iorwf	postinc2,w,c
  3569  000C1A  B4D8               	btfsc	status,2,c
  3570  000C1C  D016               	goto	l9772
  3571                           
  3572                           ; BSR set to: 1
  3573  000C1E  0101               	movlb	1	; () banked
  3574  000C20  EE20 F002          	lfsr	2,2
  3575  000C24  5119               	movf	__doprnt@pb& (0+255),w,b
  3576  000C26  26D9               	addwf	fsr2l,f,c
  3577  000C28  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3578  000C2A  22DA               	addwfc	fsr2h,f,c
  3579  000C2C  D801               	call	u16488
  3580  000C2E  D024               	goto	l9774
  3581  000C30                     u16488:
  3582  000C30  0005               	push	
  3583  000C32  6EFA               	movwf	pclath,c
  3584  000C34  50DE               	movf	postinc2,w,c
  3585  000C36  6EFD               	movwf	tosl,c
  3586  000C38  50DE               	movf	postinc2,w,c
  3587  000C3A  6EFE               	movwf	tosh,c
  3588  000C3C  50F8               	movf	tblptru,w,c
  3589  000C3E  6EFF               	movwf	tosu,c
  3590  000C40  50FA               	movf	pclath,w,c
  3591  000C42  0101               	movlb	1	; () banked
  3592  000C44  512E               	movf	__doprnt@tmpval& (0+255),w,b
  3593  000C46  0F30               	addlw	48
  3594  000C48  0012               	return		;indir
  3595  000C4A                     l9772:
  3596  000C4A  0101               	movlb	1	; () banked
  3597  000C4C  512E               	movf	__doprnt@tmpval& (0+255),w,b
  3598  000C4E  0F30               	addlw	48
  3599  000C50  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3600  000C54  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3601  000C58  CFDE F11F          	movff	postinc2,??__doprnt
  3602  000C5C  CFDD F120          	movff	postdec2,??__doprnt+1
  3603  000C60  C11F  FFD9         	movff	??__doprnt,fsr2l
  3604  000C64  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3605  000C68  6EDF               	movwf	indf2,c
  3606  000C6A  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3607  000C6E  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3608  000C72  2ADE               	incf	postinc2,f,c
  3609  000C74  0E00               	movlw	0
  3610  000C76  22DD               	addwfc	postdec2,f,c
  3611  000C78                     l9774:
  3612                           
  3613                           ;doprnt.c: 1232: val %= dpowers[c];
  3614  000C78  C12A  F09D         	movff	__doprnt@val,___llmod@dividend
  3615  000C7C  C12B  F09E         	movff	__doprnt@val+1,___llmod@dividend+1
  3616  000C80  C12C  F09F         	movff	__doprnt@val+2,___llmod@dividend+2
  3617  000C84  C12D  F0A0         	movff	__doprnt@val+3,___llmod@dividend+3
  3618  000C88  0101               	movlb	1	; () banked
  3619  000C8A  513B               	movf	__doprnt@c& (0+255),w,b
  3620  000C8C  0D04               	mullw	4
  3621  000C8E  0EEF               	movlw	low _dpowers
  3622  000C90  24F3               	addwf	prodl,w,c
  3623  000C92  6EF6               	movwf	tblptrl,c
  3624  000C94  0E7E               	movlw	high _dpowers
  3625  000C96  20F4               	addwfc	prodh,w,c
  3626  000C98  6EF7               	movwf	tblptrh,c
  3627  000C9A                     	if	0	;There are less than 3 active tblptr bytes
  3628  000C9A                     	endif
  3629  000C9A  0009               	tblrd		*+
  3630  000C9C  CFF5 F0A1          	movff	tablat,___llmod@divisor
  3631  000CA0  0009               	tblrd		*+
  3632  000CA2  CFF5 F0A2          	movff	tablat,___llmod@divisor+1
  3633  000CA6  0009               	tblrd		*+
  3634  000CA8  CFF5 F0A3          	movff	tablat,___llmod@divisor+2
  3635  000CAC  000A               	tblrd		*-
  3636  000CAE  CFF5 F0A4          	movff	tablat,___llmod@divisor+3
  3637  000CB2  ECAE  F025         	call	___llmod
  3638  000CB6  C09D  F12A         	movff	?___llmod,__doprnt@val
  3639  000CBA  C09E  F12B         	movff	?___llmod+1,__doprnt@val+1
  3640  000CBE  C09F  F12C         	movff	?___llmod+2,__doprnt@val+2
  3641  000CC2  C0A0  F12D         	movff	?___llmod+3,__doprnt@val+3
  3642  000CC6                     l9776:
  3643  000CC6  0101               	movlb	1	; () banked
  3644  000CC8  073B               	decf	__doprnt@c& (0+255),f,b
  3645  000CCA  0101               	movlb	1	; () banked
  3646  000CCC  293B               	incf	__doprnt@c& (0+255),w,b
  3647  000CCE  B4D8               	btfsc	status,2,c
  3648  000CD0  D039               	goto	l9788
  3649  000CD2  D758               	goto	l9764
  3650  000CD4                     l9778:
  3651                           
  3652                           ; BSR set to: 1
  3653                           ;doprnt.c: 1236: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  3654  000CD4  0101               	movlb	1	; () banked
  3655  000CD6  EE20 F002          	lfsr	2,2
  3656  000CDA  5119               	movf	__doprnt@pb& (0+255),w,b
  3657  000CDC  26D9               	addwf	fsr2l,f,c
  3658  000CDE  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3659  000CE0  22DA               	addwfc	fsr2h,f,c
  3660  000CE2  50DE               	movf	postinc2,w,c
  3661  000CE4  10DE               	iorwf	postinc2,w,c
  3662  000CE6  B4D8               	btfsc	status,2,c
  3663  000CE8  D014               	goto	l9782
  3664                           
  3665                           ; BSR set to: 1
  3666  000CEA  0101               	movlb	1	; () banked
  3667  000CEC  EE20 F002          	lfsr	2,2
  3668  000CF0  5119               	movf	__doprnt@pb& (0+255),w,b
  3669  000CF2  26D9               	addwf	fsr2l,f,c
  3670  000CF4  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3671  000CF6  22DA               	addwfc	fsr2h,f,c
  3672  000CF8  D801               	call	u16518
  3673  000CFA  D020               	goto	l9786
  3674  000CFC                     u16518:
  3675  000CFC  0005               	push	
  3676  000CFE  6EFA               	movwf	pclath,c
  3677  000D00  50DE               	movf	postinc2,w,c
  3678  000D02  6EFD               	movwf	tosl,c
  3679  000D04  50DE               	movf	postinc2,w,c
  3680  000D06  6EFE               	movwf	tosh,c
  3681  000D08  50F8               	movf	tblptru,w,c
  3682  000D0A  6EFF               	movwf	tosu,c
  3683  000D0C  50FA               	movf	pclath,w,c
  3684  000D0E  0E30               	movlw	48
  3685  000D10  0012               	return		;indir
  3686  000D12                     l9782:
  3687  000D12  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3688  000D16  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3689  000D1A  CFDE F11F          	movff	postinc2,??__doprnt
  3690  000D1E  CFDD F120          	movff	postdec2,??__doprnt+1
  3691  000D22  C11F  FFD9         	movff	??__doprnt,fsr2l
  3692  000D26  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3693  000D2A  0E30               	movlw	48
  3694  000D2C  6EDF               	movwf	indf2,c
  3695  000D2E  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3696  000D32  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3697  000D36  2ADE               	incf	postinc2,f,c
  3698  000D38  0E00               	movlw	0
  3699  000D3A  22DD               	addwfc	postdec2,f,c
  3700  000D3C                     l9786:
  3701                           
  3702                           ;doprnt.c: 1237: prec--;
  3703  000D3C  0101               	movlb	1	; () banked
  3704  000D3E  0739               	decf	__doprnt@prec& (0+255),f,b
  3705  000D40  A0D8               	btfss	status,0,c
  3706  000D42  073A               	decf	(__doprnt@prec+1)& (0+255),f,b
  3707  000D44                     l9788:
  3708                           
  3709                           ; BSR set to: 1
  3710  000D44  0101               	movlb	1	; () banked
  3711  000D46  5139               	movf	__doprnt@prec& (0+255),w,b
  3712  000D48  0101               	movlb	1	; () banked
  3713  000D4A  113A               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  3714  000D4C  B4D8               	btfsc	status,2,c
  3715  000D4E  D2CB               	goto	l9912
  3716  000D50  D7C1               	goto	l9778
  3717  000D52                     l416:
  3718                           
  3719                           ; BSR set to: 1
  3720                           ;doprnt.c: 1246: }
  3721                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
  3722  000D52  0101               	movlb	1	; () banked
  3723  000D54  BD37               	btfsc	__doprnt@flag& (0+255),6,b
  3724  000D56  D046               	goto	l483
  3725                           
  3726                           ; BSR set to: 1
  3727                           ;doprnt.c: 1253: {
  3728                           ;doprnt.c: 1255: if(flag & 0x10)
  3729  000D58  0101               	movlb	1	; () banked
  3730  000D5A  A937               	btfss	__doprnt@flag& (0+255),4,b
  3731  000D5C  D019               	goto	l9794
  3732                           
  3733                           ; BSR set to: 1
  3734                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  3735  000D5E  C11D  FFD9         	movff	__doprnt@ap,fsr2l
  3736  000D62  C11E  FFDA         	movff	__doprnt@ap+1,fsr2h
  3737  000D66  CFDF F11F          	movff	indf2,??__doprnt
  3738  000D6A  0E04               	movlw	4
  3739  000D6C  26DE               	addwf	postinc2,f,c
  3740  000D6E  CFDF F120          	movff	indf2,??__doprnt+1
  3741  000D72  0E00               	movlw	0
  3742  000D74  22DD               	addwfc	postdec2,f,c
  3743  000D76  C11F  FFD9         	movff	??__doprnt,fsr2l
  3744  000D7A  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3745  000D7E  CFDE F12A          	movff	postinc2,__doprnt@val
  3746  000D82  CFDE F12B          	movff	postinc2,__doprnt@val+1
  3747  000D86  CFDE F12C          	movff	postinc2,__doprnt@val+2
  3748  000D8A  CFDE F12D          	movff	postinc2,__doprnt@val+3
  3749  000D8E  D01A               	goto	l9796
  3750  000D90                     l9794:
  3751                           
  3752                           ; BSR set to: 1
  3753                           ;doprnt.c: 1257: else
  3754                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3755  000D90  C11D  FFD9         	movff	__doprnt@ap,fsr2l
  3756  000D94  C11E  FFDA         	movff	__doprnt@ap+1,fsr2h
  3757  000D98  CFDF F11F          	movff	indf2,??__doprnt
  3758  000D9C  0E02               	movlw	2
  3759  000D9E  26DE               	addwf	postinc2,f,c
  3760  000DA0  CFDF F120          	movff	indf2,??__doprnt+1
  3761  000DA4  0E00               	movlw	0
  3762  000DA6  22DD               	addwfc	postdec2,f,c
  3763  000DA8  C11F  FFD9         	movff	??__doprnt,fsr2l
  3764  000DAC  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3765  000DB0  CFDE F12A          	movff	postinc2,__doprnt@val
  3766  000DB4  CFDD F12B          	movff	postdec2,__doprnt@val+1
  3767  000DB8  0101               	movlb	1	; () banked
  3768  000DBA  0E00               	movlw	0
  3769  000DBC  BF2B               	btfsc	(__doprnt@val+1)& (0+255),7,b
  3770  000DBE  0EFF               	movlw	-1
  3771  000DC0  6F2C               	movwf	(__doprnt@val+2)& (0+255),b
  3772  000DC2  6F2D               	movwf	(__doprnt@val+3)& (0+255),b
  3773  000DC4                     l9796:
  3774                           
  3775                           ; BSR set to: 1
  3776                           ;doprnt.c: 1261: if((long)val < 0) {
  3777  000DC4  0101               	movlb	1	; () banked
  3778  000DC6  AF2D               	btfss	(__doprnt@val+3)& (0+255),7,b
  3779  000DC8  D044               	goto	l9806
  3780                           
  3781                           ; BSR set to: 1
  3782                           ;doprnt.c: 1262: flag |= 0x03;
  3783  000DCA  0E03               	movlw	3
  3784  000DCC  0101               	movlb	1	; () banked
  3785  000DCE  1337               	iorwf	__doprnt@flag& (0+255),f,b
  3786                           
  3787                           ; BSR set to: 1
  3788                           ;doprnt.c: 1263: val = -val;
  3789  000DD0  0101               	movlb	1	; () banked
  3790  000DD2  1F2D               	comf	(__doprnt@val+3)& (0+255),f,b
  3791  000DD4  1F2C               	comf	(__doprnt@val+2)& (0+255),f,b
  3792  000DD6  1F2B               	comf	(__doprnt@val+1)& (0+255),f,b
  3793  000DD8  6D2A               	negf	__doprnt@val& (0+255),b
  3794  000DDA  0E00               	movlw	0
  3795  000DDC  232B               	addwfc	(__doprnt@val+1)& (0+255),f,b
  3796  000DDE  232C               	addwfc	(__doprnt@val+2)& (0+255),f,b
  3797  000DE0  232D               	addwfc	(__doprnt@val+3)& (0+255),f,b
  3798                           
  3799                           ; BSR set to: 1
  3800                           ;doprnt.c: 1264: }
  3801                           ;doprnt.c: 1266: }
  3802  000DE2  D037               	goto	l9806
  3803  000DE4                     l483:
  3804                           
  3805                           ; BSR set to: 1
  3806                           ;doprnt.c: 1268: else
  3807                           ;doprnt.c: 1273: {
  3808                           ;doprnt.c: 1281: if(flag & 0x10)
  3809  000DE4  0101               	movlb	1	; () banked
  3810  000DE6  A937               	btfss	__doprnt@flag& (0+255),4,b
  3811  000DE8  D019               	goto	l9804
  3812                           
  3813                           ; BSR set to: 1
  3814                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  3815  000DEA  C11D  FFD9         	movff	__doprnt@ap,fsr2l
  3816  000DEE  C11E  FFDA         	movff	__doprnt@ap+1,fsr2h
  3817  000DF2  CFDF F11F          	movff	indf2,??__doprnt
  3818  000DF6  0E04               	movlw	4
  3819  000DF8  26DE               	addwf	postinc2,f,c
  3820  000DFA  CFDF F120          	movff	indf2,??__doprnt+1
  3821  000DFE  0E00               	movlw	0
  3822  000E00  22DD               	addwfc	postdec2,f,c
  3823  000E02  C11F  FFD9         	movff	??__doprnt,fsr2l
  3824  000E06  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3825  000E0A  CFDE F12A          	movff	postinc2,__doprnt@val
  3826  000E0E  CFDE F12B          	movff	postinc2,__doprnt@val+1
  3827  000E12  CFDE F12C          	movff	postinc2,__doprnt@val+2
  3828  000E16  CFDE F12D          	movff	postinc2,__doprnt@val+3
  3829  000E1A  D01B               	goto	l9806
  3830  000E1C                     l9804:
  3831                           
  3832                           ; BSR set to: 1
  3833                           ;doprnt.c: 1283: else
  3834                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3835  000E1C  C11D  FFD9         	movff	__doprnt@ap,fsr2l
  3836  000E20  C11E  FFDA         	movff	__doprnt@ap+1,fsr2h
  3837  000E24  CFDF F11F          	movff	indf2,??__doprnt
  3838  000E28  0E02               	movlw	2
  3839  000E2A  26DE               	addwf	postinc2,f,c
  3840  000E2C  CFDF F120          	movff	indf2,??__doprnt+1
  3841  000E30  0E00               	movlw	0
  3842  000E32  22DD               	addwfc	postdec2,f,c
  3843  000E34  C11F  FFD9         	movff	??__doprnt,fsr2l
  3844  000E38  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3845  000E3C  CFDE F121          	movff	postinc2,??__doprnt+2
  3846  000E40  CFDD F122          	movff	postdec2,??__doprnt+3
  3847  000E44  C121  F12A         	movff	??__doprnt+2,__doprnt@val
  3848  000E48  C122  F12B         	movff	??__doprnt+3,__doprnt@val+1
  3849  000E4C  0101               	movlb	1	; () banked
  3850  000E4E  6B2C               	clrf	(__doprnt@val+2)& (0+255),b
  3851  000E50  6B2D               	clrf	(__doprnt@val+3)& (0+255),b
  3852  000E52                     l9806:
  3853                           
  3854                           ; BSR set to: 1
  3855                           ;doprnt.c: 1287: }
  3856                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3857  000E52  0101               	movlb	1	; () banked
  3858  000E54  5139               	movf	__doprnt@prec& (0+255),w,b
  3859  000E56  0101               	movlb	1	; () banked
  3860  000E58  113A               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  3861  000E5A  A4D8               	btfss	status,2,c
  3862  000E5C  D00D               	goto	l9812
  3863                           
  3864                           ; BSR set to: 1
  3865  000E5E  0101               	movlb	1	; () banked
  3866  000E60  512A               	movf	__doprnt@val& (0+255),w,b
  3867  000E62  0101               	movlb	1	; () banked
  3868  000E64  112B               	iorwf	(__doprnt@val+1)& (0+255),w,b
  3869  000E66  0101               	movlb	1	; () banked
  3870  000E68  112C               	iorwf	(__doprnt@val+2)& (0+255),w,b
  3871  000E6A  0101               	movlb	1	; () banked
  3872  000E6C  112D               	iorwf	(__doprnt@val+3)& (0+255),w,b
  3873  000E6E  A4D8               	btfss	status,2,c
  3874  000E70  D003               	goto	l9812
  3875                           
  3876                           ; BSR set to: 1
  3877                           ;doprnt.c: 1291: prec++;
  3878  000E72  0101               	movlb	1	; () banked
  3879  000E74  4B39               	infsnz	__doprnt@prec& (0+255),f,b
  3880  000E76  2B3A               	incf	(__doprnt@prec+1)& (0+255),f,b
  3881  000E78                     l9812:
  3882                           
  3883                           ; BSR set to: 1
  3884                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3885  000E78  0E01               	movlw	1
  3886  000E7A  0101               	movlb	1	; () banked
  3887  000E7C  6F3B               	movwf	__doprnt@c& (0+255),b
  3888  000E7E                     l9814:
  3889                           
  3890                           ; BSR set to: 1
  3891  000E7E  0E0A               	movlw	10
  3892  000E80  0101               	movlb	1	; () banked
  3893  000E82  193B               	xorwf	__doprnt@c& (0+255),w,b
  3894  000E84  B4D8               	btfsc	status,2,c
  3895  000E86  D01E               	goto	l9826
  3896                           
  3897                           ; BSR set to: 1
  3898                           ;doprnt.c: 1306: if(val < dpowers[c])
  3899                           
  3900                           ; BSR set to: 1
  3901                           
  3902                           ; BSR set to: 1
  3903  000E88  0101               	movlb	1	; () banked
  3904  000E8A  513B               	movf	__doprnt@c& (0+255),w,b
  3905  000E8C  0D04               	mullw	4
  3906  000E8E  0EEF               	movlw	low _dpowers
  3907  000E90  24F3               	addwf	prodl,w,c
  3908  000E92  6EF6               	movwf	tblptrl,c
  3909  000E94  0E7E               	movlw	high _dpowers
  3910  000E96  20F4               	addwfc	prodh,w,c
  3911  000E98  6EF7               	movwf	tblptrh,c
  3912  000E9A                     	if	0	;There are less than 3 active tblptr bytes
  3913  000E9A                     	endif
  3914  000E9A  0009               	tblrd		*+
  3915  000E9C  50F5               	movf	tablat,w,c
  3916  000E9E  0101               	movlb	1	; () banked
  3917  000EA0  5D2A               	subwf	__doprnt@val& (0+255),w,b
  3918  000EA2  0009               	tblrd		*+
  3919  000EA4  50F5               	movf	tablat,w,c
  3920  000EA6  0101               	movlb	1	; () banked
  3921  000EA8  592B               	subwfb	(__doprnt@val+1)& (0+255),w,b
  3922  000EAA  0009               	tblrd		*+
  3923  000EAC  50F5               	movf	tablat,w,c
  3924  000EAE  0101               	movlb	1	; () banked
  3925  000EB0  592C               	subwfb	(__doprnt@val+2)& (0+255),w,b
  3926  000EB2  0009               	tblrd		*+
  3927  000EB4  50F5               	movf	tablat,w,c
  3928  000EB6  0101               	movlb	1	; () banked
  3929  000EB8  592D               	subwfb	(__doprnt@val+3)& (0+255),w,b
  3930  000EBA  A0D8               	btfss	status,0,c
  3931  000EBC  D003               	goto	l9826
  3932                           
  3933                           ; BSR set to: 1
  3934                           
  3935                           ; BSR set to: 1
  3936                           
  3937                           ; BSR set to: 1
  3938                           ;doprnt.c: 1307: break;
  3939  000EBE  0101               	movlb	1	; () banked
  3940  000EC0  2B3B               	incf	__doprnt@c& (0+255),f,b
  3941  000EC2  D7DD               	goto	l9814
  3942  000EC4                     l9826:
  3943                           
  3944                           ; BSR set to: 1
  3945                           ;doprnt.c: 1339: if(c < prec)
  3946  000EC4  0E80               	movlw	128
  3947  000EC6  0101               	movlb	1	; () banked
  3948  000EC8  BF3B               	btfsc	__doprnt@c& (0+255),7,b
  3949  000ECA  0E7F               	movlw	127
  3950  000ECC  0101               	movlb	1	; () banked
  3951  000ECE  6F1F               	movwf	??__doprnt& (0+255),b
  3952  000ED0  0101               	movlb	1	; () banked
  3953  000ED2  5139               	movf	__doprnt@prec& (0+255),w,b
  3954  000ED4  0101               	movlb	1	; () banked
  3955  000ED6  5D3B               	subwf	__doprnt@c& (0+255),w,b
  3956  000ED8  0101               	movlb	1	; () banked
  3957  000EDA  513A               	movf	(__doprnt@prec+1)& (0+255),w,b
  3958  000EDC  0A80               	xorlw	128
  3959  000EDE  0101               	movlb	1	; () banked
  3960  000EE0  591F               	subwfb	??__doprnt& (0+255),w,b
  3961  000EE2  B0D8               	btfsc	status,0,c
  3962  000EE4  D003               	goto	l9830
  3963                           
  3964                           ; BSR set to: 1
  3965                           ;doprnt.c: 1340: c = prec;
  3966  000EE6  C139  F13B         	movff	__doprnt@prec,__doprnt@c
  3967  000EEA  D018               	goto	l9834
  3968  000EEC                     l9830:
  3969                           
  3970                           ; BSR set to: 1
  3971                           ;doprnt.c: 1341: else if(prec < c)
  3972  000EEC  0101               	movlb	1	; () banked
  3973  000EEE  513A               	movf	(__doprnt@prec+1)& (0+255),w,b
  3974  000EF0  0A80               	xorlw	128
  3975  000EF2  0101               	movlb	1	; () banked
  3976  000EF4  6F1F               	movwf	??__doprnt& (0+255),b
  3977  000EF6  0101               	movlb	1	; () banked
  3978  000EF8  513B               	movf	__doprnt@c& (0+255),w,b
  3979  000EFA  0101               	movlb	1	; () banked
  3980  000EFC  5D39               	subwf	__doprnt@prec& (0+255),w,b
  3981  000EFE  0E80               	movlw	128
  3982  000F00  0101               	movlb	1	; () banked
  3983  000F02  BF3B               	btfsc	__doprnt@c& (0+255),7,b
  3984  000F04  0E7F               	movlw	127
  3985  000F06  0101               	movlb	1	; () banked
  3986  000F08  591F               	subwfb	??__doprnt& (0+255),w,b
  3987  000F0A  B0D8               	btfsc	status,0,c
  3988  000F0C  D007               	goto	l9834
  3989                           
  3990                           ; BSR set to: 1
  3991                           ;doprnt.c: 1342: prec = c;
  3992  000F0E  0101               	movlb	1	; () banked
  3993  000F10  513B               	movf	__doprnt@c& (0+255),w,b
  3994  000F12  0101               	movlb	1	; () banked
  3995  000F14  6F39               	movwf	__doprnt@prec& (0+255),b
  3996  000F16  6B3A               	clrf	(__doprnt@prec+1)& (0+255),b
  3997  000F18  BF39               	btfsc	__doprnt@prec& (0+255),7,b
  3998  000F1A  073A               	decf	(__doprnt@prec+1)& (0+255),f,b
  3999  000F1C                     l9834:
  4000                           
  4001                           ; BSR set to: 1
  4002                           ;doprnt.c: 1345: if(width && flag & 0x03)
  4003  000F1C  0101               	movlb	1	; () banked
  4004  000F1E  5132               	movf	__doprnt@width& (0+255),w,b
  4005  000F20  0101               	movlb	1	; () banked
  4006  000F22  1133               	iorwf	(__doprnt@width+1)& (0+255),w,b
  4007  000F24  B4D8               	btfsc	status,2,c
  4008  000F26  D014               	goto	l9840
  4009                           
  4010                           ; BSR set to: 1
  4011  000F28  0E03               	movlw	3
  4012  000F2A  0101               	movlb	1	; () banked
  4013  000F2C  1537               	andwf	__doprnt@flag& (0+255),w,b
  4014  000F2E  0101               	movlb	1	; () banked
  4015  000F30  6F1F               	movwf	??__doprnt& (0+255),b
  4016  000F32  0E00               	movlw	0
  4017  000F34  0101               	movlb	1	; () banked
  4018  000F36  1538               	andwf	(__doprnt@flag+1)& (0+255),w,b
  4019  000F38  0101               	movlb	1	; () banked
  4020  000F3A  6F20               	movwf	(??__doprnt+1)& (0+255),b
  4021  000F3C  0101               	movlb	1	; () banked
  4022  000F3E  511F               	movf	??__doprnt& (0+255),w,b
  4023  000F40  0101               	movlb	1	; () banked
  4024  000F42  1120               	iorwf	(??__doprnt+1)& (0+255),w,b
  4025  000F44  B4D8               	btfsc	status,2,c
  4026  000F46  D004               	goto	l9840
  4027                           
  4028                           ; BSR set to: 1
  4029                           ;doprnt.c: 1346: width--;
  4030  000F48  0101               	movlb	1	; () banked
  4031  000F4A  0732               	decf	__doprnt@width& (0+255),f,b
  4032  000F4C  A0D8               	btfss	status,0,c
  4033  000F4E  0733               	decf	(__doprnt@width+1)& (0+255),f,b
  4034  000F50                     l9840:
  4035                           
  4036                           ; BSR set to: 1
  4037                           ;doprnt.c: 1348: if(flag & 0x4000) {
  4038  000F50  0101               	movlb	1	; () banked
  4039  000F52  AD38               	btfss	(__doprnt@flag+1)& (0+255),6,b
  4040  000F54  D01E               	goto	l9848
  4041                           
  4042                           ; BSR set to: 1
  4043                           ;doprnt.c: 1349: if(width > prec)
  4044  000F56  0101               	movlb	1	; () banked
  4045  000F58  5132               	movf	__doprnt@width& (0+255),w,b
  4046  000F5A  0101               	movlb	1	; () banked
  4047  000F5C  5D39               	subwf	__doprnt@prec& (0+255),w,b
  4048  000F5E  0101               	movlb	1	; () banked
  4049  000F60  513A               	movf	(__doprnt@prec+1)& (0+255),w,b
  4050  000F62  0A80               	xorlw	128
  4051  000F64  0101               	movlb	1	; () banked
  4052  000F66  6F1F               	movwf	??__doprnt& (0+255),b
  4053  000F68  0101               	movlb	1	; () banked
  4054  000F6A  5133               	movf	(__doprnt@width+1)& (0+255),w,b
  4055  000F6C  0A80               	xorlw	128
  4056  000F6E  0101               	movlb	1	; () banked
  4057  000F70  591F               	subwfb	??__doprnt& (0+255),w,b
  4058  000F72  B0D8               	btfsc	status,0,c
  4059  000F74  D009               	goto	l9846
  4060                           
  4061                           ; BSR set to: 1
  4062                           ;doprnt.c: 1350: width -= prec;
  4063  000F76  0101               	movlb	1	; () banked
  4064  000F78  5139               	movf	__doprnt@prec& (0+255),w,b
  4065  000F7A  0101               	movlb	1	; () banked
  4066  000F7C  5F32               	subwf	__doprnt@width& (0+255),f,b
  4067  000F7E  0101               	movlb	1	; () banked
  4068  000F80  513A               	movf	(__doprnt@prec+1)& (0+255),w,b
  4069  000F82  0101               	movlb	1	; () banked
  4070  000F84  5B33               	subwfb	(__doprnt@width+1)& (0+255),f,b
  4071  000F86  D005               	goto	l9848
  4072  000F88                     l9846:
  4073                           
  4074                           ; BSR set to: 1
  4075                           ;doprnt.c: 1351: else
  4076                           ;doprnt.c: 1352: width = 0;
  4077  000F88  0E00               	movlw	0
  4078  000F8A  0101               	movlb	1	; () banked
  4079  000F8C  6F33               	movwf	(__doprnt@width+1)& (0+255),b
  4080  000F8E  0E00               	movlw	0
  4081  000F90  6F32               	movwf	__doprnt@width& (0+255),b
  4082  000F92                     l9848:
  4083                           
  4084                           ; BSR set to: 1
  4085                           ;doprnt.c: 1353: }
  4086                           ;doprnt.c: 1381: if(width > c)
  4087  000F92  0E80               	movlw	128
  4088  000F94  0101               	movlb	1	; () banked
  4089  000F96  BF3B               	btfsc	__doprnt@c& (0+255),7,b
  4090  000F98  0E7F               	movlw	127
  4091  000F9A  0101               	movlb	1	; () banked
  4092  000F9C  6F1F               	movwf	??__doprnt& (0+255),b
  4093  000F9E  0101               	movlb	1	; () banked
  4094  000FA0  5132               	movf	__doprnt@width& (0+255),w,b
  4095  000FA2  0101               	movlb	1	; () banked
  4096  000FA4  5D3B               	subwf	__doprnt@c& (0+255),w,b
  4097  000FA6  0101               	movlb	1	; () banked
  4098  000FA8  5133               	movf	(__doprnt@width+1)& (0+255),w,b
  4099  000FAA  0A80               	xorlw	128
  4100  000FAC  0101               	movlb	1	; () banked
  4101  000FAE  591F               	subwfb	??__doprnt& (0+255),w,b
  4102  000FB0  B0D8               	btfsc	status,0,c
  4103  000FB2  D00B               	goto	l9852
  4104                           
  4105                           ; BSR set to: 1
  4106                           ;doprnt.c: 1382: width -= c;
  4107  000FB4  0101               	movlb	1	; () banked
  4108  000FB6  513B               	movf	__doprnt@c& (0+255),w,b
  4109  000FB8  0101               	movlb	1	; () banked
  4110  000FBA  5F32               	subwf	__doprnt@width& (0+255),f,b
  4111  000FBC  0E00               	movlw	0
  4112  000FBE  0101               	movlb	1	; () banked
  4113  000FC0  BF3B               	btfsc	__doprnt@c& (0+255),7,b
  4114  000FC2  0EFF               	movlw	255
  4115  000FC4  0101               	movlb	1	; () banked
  4116  000FC6  5B33               	subwfb	(__doprnt@width+1)& (0+255),f,b
  4117  000FC8  D005               	goto	l9854
  4118  000FCA                     l9852:
  4119                           
  4120                           ; BSR set to: 1
  4121                           ;doprnt.c: 1383: else
  4122                           ;doprnt.c: 1384: width = 0;
  4123  000FCA  0E00               	movlw	0
  4124  000FCC  0101               	movlb	1	; () banked
  4125  000FCE  6F33               	movwf	(__doprnt@width+1)& (0+255),b
  4126  000FD0  0E00               	movlw	0
  4127  000FD2  6F32               	movwf	__doprnt@width& (0+255),b
  4128  000FD4                     l9854:
  4129                           
  4130                           ; BSR set to: 1
  4131                           ;doprnt.c: 1387: if(flag & 0x04) {
  4132  000FD4  0101               	movlb	1	; () banked
  4133  000FD6  A537               	btfss	__doprnt@flag& (0+255),2,b
  4134  000FD8  D083               	goto	l9878
  4135                           
  4136                           ; BSR set to: 1
  4137                           ;doprnt.c: 1392: if(flag & 0x03)
  4138  000FDA  0E03               	movlw	3
  4139  000FDC  0101               	movlb	1	; () banked
  4140  000FDE  1537               	andwf	__doprnt@flag& (0+255),w,b
  4141  000FE0  0101               	movlb	1	; () banked
  4142  000FE2  6F1F               	movwf	??__doprnt& (0+255),b
  4143  000FE4  0E00               	movlw	0
  4144  000FE6  0101               	movlb	1	; () banked
  4145  000FE8  1538               	andwf	(__doprnt@flag+1)& (0+255),w,b
  4146  000FEA  0101               	movlb	1	; () banked
  4147  000FEC  6F20               	movwf	(??__doprnt+1)& (0+255),b
  4148  000FEE  0101               	movlb	1	; () banked
  4149  000FF0  511F               	movf	??__doprnt& (0+255),w,b
  4150  000FF2  0101               	movlb	1	; () banked
  4151  000FF4  1120               	iorwf	(??__doprnt+1)& (0+255),w,b
  4152  000FF6  B4D8               	btfsc	status,2,c
  4153  000FF8  D034               	goto	l9866
  4154                           
  4155                           ; BSR set to: 1
  4156                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  4157  000FFA  0101               	movlb	1	; () banked
  4158  000FFC  EE20 F002          	lfsr	2,2
  4159  001000  5119               	movf	__doprnt@pb& (0+255),w,b
  4160  001002  26D9               	addwf	fsr2l,f,c
  4161  001004  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4162  001006  22DA               	addwfc	fsr2h,f,c
  4163  001008  50DE               	movf	postinc2,w,c
  4164  00100A  10DE               	iorwf	postinc2,w,c
  4165  00100C  B4D8               	btfsc	status,2,c
  4166  00100E  D014               	goto	l9862
  4167                           
  4168                           ; BSR set to: 1
  4169  001010  0101               	movlb	1	; () banked
  4170  001012  EE20 F002          	lfsr	2,2
  4171  001016  5119               	movf	__doprnt@pb& (0+255),w,b
  4172  001018  26D9               	addwf	fsr2l,f,c
  4173  00101A  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4174  00101C  22DA               	addwfc	fsr2h,f,c
  4175  00101E  D801               	call	u16728
  4176  001020  D020               	goto	l9866
  4177  001022                     u16728:
  4178  001022  0005               	push	
  4179  001024  6EFA               	movwf	pclath,c
  4180  001026  50DE               	movf	postinc2,w,c
  4181  001028  6EFD               	movwf	tosl,c
  4182  00102A  50DE               	movf	postinc2,w,c
  4183  00102C  6EFE               	movwf	tosh,c
  4184  00102E  50F8               	movf	tblptru,w,c
  4185  001030  6EFF               	movwf	tosu,c
  4186  001032  50FA               	movf	pclath,w,c
  4187  001034  0E2D               	movlw	45
  4188  001036  0012               	return		;indir
  4189  001038                     l9862:
  4190  001038  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4191  00103C  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4192  001040  CFDE F11F          	movff	postinc2,??__doprnt
  4193  001044  CFDD F120          	movff	postdec2,??__doprnt+1
  4194  001048  C11F  FFD9         	movff	??__doprnt,fsr2l
  4195  00104C  C120  FFDA         	movff	??__doprnt+1,fsr2h
  4196  001050  0E2D               	movlw	45
  4197  001052  6EDF               	movwf	indf2,c
  4198  001054  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4199  001058  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4200  00105C  2ADE               	incf	postinc2,f,c
  4201  00105E  0E00               	movlw	0
  4202  001060  22DD               	addwfc	postdec2,f,c
  4203  001062                     l9866:
  4204                           
  4205                           ;doprnt.c: 1415: if(width)
  4206  001062  0101               	movlb	1	; () banked
  4207  001064  5132               	movf	__doprnt@width& (0+255),w,b
  4208  001066  0101               	movlb	1	; () banked
  4209  001068  1133               	iorwf	(__doprnt@width+1)& (0+255),w,b
  4210  00106A  B4D8               	btfsc	status,2,c
  4211  00106C  D131               	goto	l9910
  4212                           
  4213                           ; BSR set to: 1
  4214                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  4215                           
  4216                           ; BSR set to: 1
  4217                           
  4218                           ;doprnt.c: 1416: do
  4219  00106E  0101               	movlb	1	; () banked
  4220  001070  EE20 F002          	lfsr	2,2
  4221  001074  5119               	movf	__doprnt@pb& (0+255),w,b
  4222  001076  26D9               	addwf	fsr2l,f,c
  4223  001078  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4224  00107A  22DA               	addwfc	fsr2h,f,c
  4225  00107C  50DE               	movf	postinc2,w,c
  4226  00107E  10DE               	iorwf	postinc2,w,c
  4227  001080  B4D8               	btfsc	status,2,c
  4228  001082  D014               	goto	l9872
  4229                           
  4230                           ; BSR set to: 1
  4231  001084  0101               	movlb	1	; () banked
  4232  001086  EE20 F002          	lfsr	2,2
  4233  00108A  5119               	movf	__doprnt@pb& (0+255),w,b
  4234  00108C  26D9               	addwf	fsr2l,f,c
  4235  00108E  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4236  001090  22DA               	addwfc	fsr2h,f,c
  4237  001092  D801               	call	u16758
  4238  001094  D020               	goto	l9876
  4239  001096                     u16758:
  4240  001096  0005               	push	
  4241  001098  6EFA               	movwf	pclath,c
  4242  00109A  50DE               	movf	postinc2,w,c
  4243  00109C  6EFD               	movwf	tosl,c
  4244  00109E  50DE               	movf	postinc2,w,c
  4245  0010A0  6EFE               	movwf	tosh,c
  4246  0010A2  50F8               	movf	tblptru,w,c
  4247  0010A4  6EFF               	movwf	tosu,c
  4248  0010A6  50FA               	movf	pclath,w,c
  4249  0010A8  0E30               	movlw	48
  4250  0010AA  0012               	return		;indir
  4251  0010AC                     l9872:
  4252  0010AC  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4253  0010B0  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4254  0010B4  CFDE F11F          	movff	postinc2,??__doprnt
  4255  0010B8  CFDD F120          	movff	postdec2,??__doprnt+1
  4256  0010BC  C11F  FFD9         	movff	??__doprnt,fsr2l
  4257  0010C0  C120  FFDA         	movff	??__doprnt+1,fsr2h
  4258  0010C4  0E30               	movlw	48
  4259  0010C6  6EDF               	movwf	indf2,c
  4260  0010C8  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4261  0010CC  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4262  0010D0  2ADE               	incf	postinc2,f,c
  4263  0010D2  0E00               	movlw	0
  4264  0010D4  22DD               	addwfc	postdec2,f,c
  4265  0010D6                     l9876:
  4266                           
  4267                           ;doprnt.c: 1418: while(--width);
  4268  0010D6  0101               	movlb	1	; () banked
  4269  0010D8  0732               	decf	__doprnt@width& (0+255),f,b
  4270  0010DA  A0D8               	btfss	status,0,c
  4271  0010DC  0733               	decf	(__doprnt@width+1)& (0+255),f,b
  4272  0010DE  D7C1               	goto	l9866
  4273  0010E0                     l9878:
  4274                           
  4275                           ; BSR set to: 1
  4276                           ;doprnt.c: 1422: {
  4277                           ;doprnt.c: 1424: if(width
  4278                           ;doprnt.c: 1428: )
  4279  0010E0  0101               	movlb	1	; () banked
  4280  0010E2  5132               	movf	__doprnt@width& (0+255),w,b
  4281  0010E4  0101               	movlb	1	; () banked
  4282  0010E6  1133               	iorwf	(__doprnt@width+1)& (0+255),w,b
  4283  0010E8  B4D8               	btfsc	status,2,c
  4284  0010EA  D03E               	goto	l9890
  4285  0010EC                     l9880:
  4286                           
  4287                           ; BSR set to: 1
  4288                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  4289  0010EC  0101               	movlb	1	; () banked
  4290  0010EE  EE20 F002          	lfsr	2,2
  4291  0010F2  5119               	movf	__doprnt@pb& (0+255),w,b
  4292  0010F4  26D9               	addwf	fsr2l,f,c
  4293  0010F6  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4294  0010F8  22DA               	addwfc	fsr2h,f,c
  4295  0010FA  50DE               	movf	postinc2,w,c
  4296  0010FC  10DE               	iorwf	postinc2,w,c
  4297  0010FE  B4D8               	btfsc	status,2,c
  4298  001100  D014               	goto	l9884
  4299                           
  4300                           ; BSR set to: 1
  4301  001102  0101               	movlb	1	; () banked
  4302  001104  EE20 F002          	lfsr	2,2
  4303  001108  5119               	movf	__doprnt@pb& (0+255),w,b
  4304  00110A  26D9               	addwf	fsr2l,f,c
  4305  00110C  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4306  00110E  22DA               	addwfc	fsr2h,f,c
  4307  001110  D801               	call	u16798
  4308  001112  D020               	goto	l9888
  4309  001114                     u16798:
  4310  001114  0005               	push	
  4311  001116  6EFA               	movwf	pclath,c
  4312  001118  50DE               	movf	postinc2,w,c
  4313  00111A  6EFD               	movwf	tosl,c
  4314  00111C  50DE               	movf	postinc2,w,c
  4315  00111E  6EFE               	movwf	tosh,c
  4316  001120  50F8               	movf	tblptru,w,c
  4317  001122  6EFF               	movwf	tosu,c
  4318  001124  50FA               	movf	pclath,w,c
  4319  001126  0E20               	movlw	32
  4320  001128  0012               	return		;indir
  4321  00112A                     l9884:
  4322  00112A  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4323  00112E  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4324  001132  CFDE F11F          	movff	postinc2,??__doprnt
  4325  001136  CFDD F120          	movff	postdec2,??__doprnt+1
  4326  00113A  C11F  FFD9         	movff	??__doprnt,fsr2l
  4327  00113E  C120  FFDA         	movff	??__doprnt+1,fsr2h
  4328  001142  0E20               	movlw	32
  4329  001144  6EDF               	movwf	indf2,c
  4330  001146  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4331  00114A  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4332  00114E  2ADE               	incf	postinc2,f,c
  4333  001150  0E00               	movlw	0
  4334  001152  22DD               	addwfc	postdec2,f,c
  4335  001154                     l9888:
  4336                           
  4337                           ;doprnt.c: 1431: while(--width);
  4338  001154  0101               	movlb	1	; () banked
  4339  001156  0732               	decf	__doprnt@width& (0+255),f,b
  4340  001158  A0D8               	btfss	status,0,c
  4341  00115A  0733               	decf	(__doprnt@width+1)& (0+255),f,b
  4342  00115C  0101               	movlb	1	; () banked
  4343  00115E  5132               	movf	__doprnt@width& (0+255),w,b
  4344  001160  0101               	movlb	1	; () banked
  4345  001162  1133               	iorwf	(__doprnt@width+1)& (0+255),w,b
  4346  001164  A4D8               	btfss	status,2,c
  4347  001166  D7C2               	goto	l9880
  4348  001168                     l9890:
  4349                           
  4350                           ; BSR set to: 1
  4351                           ;doprnt.c: 1438: if(flag & 0x03)
  4352  001168  0E03               	movlw	3
  4353  00116A  0101               	movlb	1	; () banked
  4354  00116C  1537               	andwf	__doprnt@flag& (0+255),w,b
  4355  00116E  0101               	movlb	1	; () banked
  4356  001170  6F1F               	movwf	??__doprnt& (0+255),b
  4357  001172  0E00               	movlw	0
  4358  001174  0101               	movlb	1	; () banked
  4359  001176  1538               	andwf	(__doprnt@flag+1)& (0+255),w,b
  4360  001178  0101               	movlb	1	; () banked
  4361  00117A  6F20               	movwf	(??__doprnt+1)& (0+255),b
  4362  00117C  0101               	movlb	1	; () banked
  4363  00117E  511F               	movf	??__doprnt& (0+255),w,b
  4364  001180  0101               	movlb	1	; () banked
  4365  001182  1120               	iorwf	(??__doprnt+1)& (0+255),w,b
  4366  001184  B4D8               	btfsc	status,2,c
  4367  001186  D0A4               	goto	l9910
  4368                           
  4369                           ; BSR set to: 1
  4370                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  4371  001188  0101               	movlb	1	; () banked
  4372  00118A  EE20 F002          	lfsr	2,2
  4373  00118E  5119               	movf	__doprnt@pb& (0+255),w,b
  4374  001190  26D9               	addwf	fsr2l,f,c
  4375  001192  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4376  001194  22DA               	addwfc	fsr2h,f,c
  4377  001196  50DE               	movf	postinc2,w,c
  4378  001198  10DE               	iorwf	postinc2,w,c
  4379  00119A  B4D8               	btfsc	status,2,c
  4380  00119C  D014               	goto	l9896
  4381                           
  4382                           ; BSR set to: 1
  4383  00119E  0101               	movlb	1	; () banked
  4384  0011A0  EE20 F002          	lfsr	2,2
  4385  0011A4  5119               	movf	__doprnt@pb& (0+255),w,b
  4386  0011A6  26D9               	addwf	fsr2l,f,c
  4387  0011A8  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4388  0011AA  22DA               	addwfc	fsr2h,f,c
  4389  0011AC  D801               	call	u16838
  4390  0011AE  D090               	goto	l9910
  4391  0011B0                     u16838:
  4392  0011B0  0005               	push	
  4393  0011B2  6EFA               	movwf	pclath,c
  4394  0011B4  50DE               	movf	postinc2,w,c
  4395  0011B6  6EFD               	movwf	tosl,c
  4396  0011B8  50DE               	movf	postinc2,w,c
  4397  0011BA  6EFE               	movwf	tosh,c
  4398  0011BC  50F8               	movf	tblptru,w,c
  4399  0011BE  6EFF               	movwf	tosu,c
  4400  0011C0  50FA               	movf	pclath,w,c
  4401  0011C2  0E2D               	movlw	45
  4402  0011C4  0012               	return		;indir
  4403  0011C6                     l9896:
  4404  0011C6  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4405  0011CA  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4406  0011CE  CFDE F11F          	movff	postinc2,??__doprnt
  4407  0011D2  CFDD F120          	movff	postdec2,??__doprnt+1
  4408  0011D6  C11F  FFD9         	movff	??__doprnt,fsr2l
  4409  0011DA  C120  FFDA         	movff	??__doprnt+1,fsr2h
  4410  0011DE  0E2D               	movlw	45
  4411  0011E0  6EDF               	movwf	indf2,c
  4412  0011E2  D06F               	goto	l9908
  4413  0011E4                     l9900:
  4414                           
  4415                           ;doprnt.c: 1478: {
  4416                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4417  0011E4  C139  F11F         	movff	__doprnt@prec,??__doprnt
  4418  0011E8  C13A  F120         	movff	__doprnt@prec+1,??__doprnt+1
  4419  0011EC  0101               	movlb	1	; () banked
  4420  0011EE  90D8               	bcf	status,0,c
  4421  0011F0  371F               	rlcf	??__doprnt& (0+255),f,b
  4422  0011F2  3720               	rlcf	(??__doprnt+1)& (0+255),f,b
  4423  0011F4  0101               	movlb	1	; () banked
  4424  0011F6  90D8               	bcf	status,0,c
  4425  0011F8  371F               	rlcf	??__doprnt& (0+255),f,b
  4426  0011FA  3720               	rlcf	(??__doprnt+1)& (0+255),f,b
  4427  0011FC  0EEF               	movlw	low _dpowers
  4428  0011FE  0101               	movlb	1	; () banked
  4429  001200  251F               	addwf	??__doprnt& (0+255),w,b
  4430  001202  6EF6               	movwf	tblptrl,c
  4431  001204  0E7E               	movlw	high _dpowers
  4432  001206  2120               	addwfc	(??__doprnt+1)& (0+255),w,b
  4433  001208  6EF7               	movwf	tblptrh,c
  4434  00120A                     	if	0	;There are less than 3 active tblptr bytes
  4435  00120A                     	endif
  4436  00120A  0009               	tblrd		*+
  4437  00120C  CFF5 F094          	movff	tablat,___lldiv@divisor
  4438  001210  0009               	tblrd		*+
  4439  001212  CFF5 F095          	movff	tablat,___lldiv@divisor+1
  4440  001216  0009               	tblrd		*+
  4441  001218  CFF5 F096          	movff	tablat,___lldiv@divisor+2
  4442  00121C  000A               	tblrd		*-
  4443  00121E  CFF5 F097          	movff	tablat,___lldiv@divisor+3
  4444  001222  C12A  F090         	movff	__doprnt@val,___lldiv@dividend
  4445  001226  C12B  F091         	movff	__doprnt@val+1,___lldiv@dividend+1
  4446  00122A  C12C  F092         	movff	__doprnt@val+2,___lldiv@dividend+2
  4447  00122E  C12D  F093         	movff	__doprnt@val+3,___lldiv@dividend+3
  4448  001232  ECA8  F024         	call	___lldiv
  4449  001236  C090  F09D         	movff	?___lldiv,___llmod@dividend
  4450  00123A  C091  F09E         	movff	?___lldiv+1,___llmod@dividend+1
  4451  00123E  C092  F09F         	movff	?___lldiv+2,___llmod@dividend+2
  4452  001242  C093  F0A0         	movff	?___lldiv+3,___llmod@dividend+3
  4453  001246  0E0A               	movlw	10
  4454  001248  0100               	movlb	0	; () banked
  4455  00124A  6FA1               	movwf	___llmod@divisor& (0+255),b
  4456  00124C  0E00               	movlw	0
  4457  00124E  6FA2               	movwf	(___llmod@divisor+1)& (0+255),b
  4458  001250  0E00               	movlw	0
  4459  001252  6FA3               	movwf	(___llmod@divisor+2)& (0+255),b
  4460  001254  0E00               	movlw	0
  4461  001256  6FA4               	movwf	(___llmod@divisor+3)& (0+255),b
  4462  001258  ECAE  F025         	call	___llmod	;wreg free
  4463  00125C  0100               	movlb	0	; () banked
  4464  00125E  519D               	movf	?___llmod& (0+255),w,b
  4465  001260  0F30               	addlw	48
  4466  001262  0101               	movlb	1	; () banked
  4467  001264  6F3B               	movwf	__doprnt@c& (0+255),b
  4468                           
  4469                           ; BSR set to: 1
  4470                           ;doprnt.c: 1523: }
  4471                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  4472  001266  0101               	movlb	1	; () banked
  4473  001268  EE20 F002          	lfsr	2,2
  4474  00126C  5119               	movf	__doprnt@pb& (0+255),w,b
  4475  00126E  26D9               	addwf	fsr2l,f,c
  4476  001270  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4477  001272  22DA               	addwfc	fsr2h,f,c
  4478  001274  50DE               	movf	postinc2,w,c
  4479  001276  10DE               	iorwf	postinc2,w,c
  4480  001278  B4D8               	btfsc	status,2,c
  4481  00127A  D015               	goto	l9906
  4482                           
  4483                           ; BSR set to: 1
  4484  00127C  0101               	movlb	1	; () banked
  4485  00127E  EE20 F002          	lfsr	2,2
  4486  001282  5119               	movf	__doprnt@pb& (0+255),w,b
  4487  001284  26D9               	addwf	fsr2l,f,c
  4488  001286  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4489  001288  22DA               	addwfc	fsr2h,f,c
  4490  00128A  D801               	call	u16858
  4491  00128C  D021               	goto	l9910
  4492  00128E                     u16858:
  4493  00128E  0005               	push	
  4494  001290  6EFA               	movwf	pclath,c
  4495  001292  50DE               	movf	postinc2,w,c
  4496  001294  6EFD               	movwf	tosl,c
  4497  001296  50DE               	movf	postinc2,w,c
  4498  001298  6EFE               	movwf	tosh,c
  4499  00129A  50F8               	movf	tblptru,w,c
  4500  00129C  6EFF               	movwf	tosu,c
  4501  00129E  50FA               	movf	pclath,w,c
  4502  0012A0  0101               	movlb	1	; () banked
  4503  0012A2  513B               	movf	__doprnt@c& (0+255),w,b
  4504  0012A4  0012               	return		;indir
  4505  0012A6                     l9906:
  4506  0012A6  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4507  0012AA  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4508  0012AE  CFDE F11F          	movff	postinc2,??__doprnt
  4509  0012B2  CFDD F120          	movff	postdec2,??__doprnt+1
  4510  0012B6  C11F  FFD9         	movff	??__doprnt,fsr2l
  4511  0012BA  C120  FFDA         	movff	??__doprnt+1,fsr2h
  4512  0012BE  C13B  FFDF         	movff	__doprnt@c,indf2
  4513  0012C2                     l9908:
  4514  0012C2  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4515  0012C6  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4516  0012CA  2ADE               	incf	postinc2,f,c
  4517  0012CC  0E00               	movlw	0
  4518  0012CE  22DD               	addwfc	postdec2,f,c
  4519  0012D0                     l9910:
  4520  0012D0  0101               	movlb	1	; () banked
  4521  0012D2  0739               	decf	__doprnt@prec& (0+255),f,b
  4522  0012D4  A0D8               	btfss	status,0,c
  4523  0012D6  073A               	decf	(__doprnt@prec+1)& (0+255),f,b
  4524  0012D8  0101               	movlb	1	; () banked
  4525  0012DA  2939               	incf	__doprnt@prec& (0+255),w,b
  4526  0012DC  E183               	bnz	l9900
  4527  0012DE  0101               	movlb	1	; () banked
  4528  0012E0  293A               	incf	(__doprnt@prec+1)& (0+255),w,b
  4529  0012E2  A4D8               	btfss	status,2,c
  4530  0012E4  D77F               	goto	l9900
  4531  0012E6                     l9912:
  4532  0012E6  C11B  FFF6         	movff	__doprnt@f,tblptrl
  4533  0012EA  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  4534  0012EE  0101               	movlb	1	; () banked
  4535  0012F0  4B1B               	infsnz	__doprnt@f& (0+255),f,b
  4536  0012F2  2B1C               	incf	(__doprnt@f+1)& (0+255),f,b
  4537  0012F4                     	if	0	;tblptru may be non-zero
  4538  0012F4                     	endif
  4539  0012F4                     	if	0	;tblptru may be non-zero
  4540  0012F4                     	endif
  4541  0012F4  0008               	tblrd		*
  4542  0012F6  CFF5 F13B          	movff	tablat,__doprnt@c
  4543  0012FA  0101               	movlb	1	; () banked
  4544  0012FC  513B               	movf	__doprnt@c& (0+255),w,b
  4545  0012FE  A4D8               	btfss	status,2,c
  4546  001300  EF54  F000         	goto	l9524
  4547  001304                     l9914:
  4548                           
  4549                           ; BSR set to: 1
  4550                           ;doprnt.c: 1540: return 0;
  4551  001304  0E00               	movlw	0
  4552  001306  0101               	movlb	1	; () banked
  4553  001308  6F1A               	movwf	(?__doprnt+1)& (0+255),b
  4554  00130A  0E00               	movlw	0
  4555  00130C  6F19               	movwf	?__doprnt& (0+255),b
  4556  00130E  0012               	return	
  4557  001310                     __end_of__doprnt:
  4558                           	opt stack 0
  4559                           tosu	equ	0xFFF
  4560                           tosh	equ	0xFFE
  4561                           tosl	equ	0xFFD
  4562                           pclath	equ	0xFFA
  4563                           tblptru	equ	0xFF8
  4564                           tblptrh	equ	0xFF7
  4565                           tblptrl	equ	0xFF6
  4566                           tablat	equ	0xFF5
  4567                           prodh	equ	0xFF4
  4568                           prodl	equ	0xFF3
  4569                           intcon	equ	0xFF2
  4570                           postinc0	equ	0xFEE
  4571                           wreg	equ	0xFE8
  4572                           postdec1	equ	0xFE5
  4573                           fsr1l	equ	0xFE1
  4574                           indf2	equ	0xFDF
  4575                           postinc2	equ	0xFDE
  4576                           postdec2	equ	0xFDD
  4577                           fsr2h	equ	0xFDA
  4578                           fsr2l	equ	0xFD9
  4579                           status	equ	0xFD8
  4580                           
  4581 ;; *************** function _scale *****************
  4582 ;; Defined at:
  4583 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;  scl             1    wreg     char 
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;  scl             1    3[BANK1 ] char 
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  3   83[BANK0 ] char 
  4590 ;; Registers used:
  4591 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4597 ;;      Params:         0       3       0       0       0       0       0
  4598 ;;      Locals:         0       0       4       0       0       0       0
  4599 ;;      Temps:          0       0       0       0       0       0       0
  4600 ;;      Totals:         0       3       4       0       0       0       0
  4601 ;;Total ram usage:        7 bytes
  4602 ;; Hardware stack levels used:    1
  4603 ;; Hardware stack levels required when called:    9
  4604 ;; This function calls:
  4605 ;;		___awdiv
  4606 ;;		___awmod
  4607 ;;		___ftmul
  4608 ;;		___wmul
  4609 ;; This function is called by:
  4610 ;;		__doprnt
  4611 ;; This function uses a non-reentrant model
  4612 ;;
  4613                           
  4614                           	psect	text3
  4615  002488                     __ptext3:
  4616                           	opt stack 0
  4617  002488                     _scale:
  4618                           	opt stack 19
  4619                           
  4620                           ; BSR set to: 1
  4621                           ;incstack = 0
  4622                           ;scale@scl stored from wreg
  4623  002488  0101               	movlb	1	; () banked
  4624  00248A  6F03               	movwf	scale@scl& (0+255),b
  4625                           
  4626                           ;doprnt.c: 428: if(scl < 0) {
  4627  00248C  0101               	movlb	1	; () banked
  4628  00248E  AF03               	btfss	scale@scl& (0+255),7,b
  4629  002490  D12A               	goto	l6238
  4630                           
  4631                           ; BSR set to: 1
  4632                           ;doprnt.c: 429: scl = -scl;
  4633  002492  0101               	movlb	1	; () banked
  4634  002494  6D03               	negf	scale@scl& (0+255),b
  4635                           
  4636                           ;doprnt.c: 430: if(scl>=110)
  4637  002496  0101               	movlb	1	; () banked
  4638  002498  5103               	movf	scale@scl& (0+255),w,b
  4639  00249A  0A80               	xorlw	128
  4640  00249C  0F12               	addlw	-238
  4641  00249E  A0D8               	btfss	status,0,c
  4642  0024A0  D0AC               	goto	l6228
  4643                           
  4644                           ; BSR set to: 1
  4645                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4646  0024A2  0E00               	movlw	0
  4647  0024A4  0100               	movlb	0	; () banked
  4648  0024A6  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4649  0024A8  0E03               	movlw	3
  4650  0024AA  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  4651  0024AC  0E00               	movlw	0
  4652  0024AE  0100               	movlb	0	; () banked
  4653  0024B0  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  4654  0024B2  0E0A               	movlw	10
  4655  0024B4  6F98               	movwf	___awdiv@divisor& (0+255),b
  4656  0024B6  0E00               	movlw	0
  4657  0024B8  0100               	movlb	0	; () banked
  4658  0024BA  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  4659  0024BC  0E64               	movlw	100
  4660  0024BE  6F92               	movwf	___awmod@divisor& (0+255),b
  4661  0024C0  0101               	movlb	1	; () banked
  4662  0024C2  5103               	movf	scale@scl& (0+255),w,b
  4663  0024C4  0100               	movlb	0	; () banked
  4664  0024C6  6F90               	movwf	___awmod@dividend& (0+255),b
  4665  0024C8  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  4666  0024CA  BF90               	btfsc	___awmod@dividend& (0+255),7,b
  4667  0024CC  0791               	decf	(___awmod@dividend+1)& (0+255),f,b
  4668  0024CE  EC5D  F025         	call	___awmod
  4669  0024D2  C090  F096         	movff	?___awmod,___awdiv@dividend
  4670  0024D6  C091  F097         	movff	?___awmod+1,___awdiv@dividend+1
  4671  0024DA  EC49  F024         	call	___awdiv	;wreg free
  4672  0024DE  0E09               	movlw	9
  4673  0024E0  0100               	movlb	0	; () banked
  4674  0024E2  2596               	addwf	?___awdiv& (0+255),w,b
  4675  0024E4  0100               	movlb	0	; () banked
  4676  0024E6  6F9E               	movwf	___wmul@multiplier& (0+255),b
  4677  0024E8  0E00               	movlw	0
  4678  0024EA  0100               	movlb	0	; () banked
  4679  0024EC  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  4680  0024EE  0100               	movlb	0	; () banked
  4681  0024F0  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  4682  0024F2  EC82  F029         	call	___wmul	;wreg free
  4683  0024F6  0E17               	movlw	low __npowers_
  4684  0024F8  0100               	movlb	0	; () banked
  4685  0024FA  259E               	addwf	?___wmul& (0+255),w,b
  4686  0024FC  6EF6               	movwf	tblptrl,c
  4687  0024FE  0E7F               	movlw	high __npowers_
  4688  002500  0100               	movlb	0	; () banked
  4689  002502  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  4690  002504  6EF7               	movwf	tblptrh,c
  4691  002506                     	if	0	;There are less than 3 active tblptr bytes
  4692  002506                     	endif
  4693  002506  0009               	tblrd		*+
  4694  002508  CFF5 F0A7          	movff	tablat,___ftmul@f2
  4695  00250C  0009               	tblrd		*+
  4696  00250E  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  4697  002512  000A               	tblrd		*-
  4698  002514  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  4699  002518  0E00               	movlw	0
  4700  00251A  0100               	movlb	0	; () banked
  4701  00251C  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  4702  00251E  0E64               	movlw	100
  4703  002520  6F98               	movwf	___awdiv@divisor& (0+255),b
  4704  002522  0101               	movlb	1	; () banked
  4705  002524  5103               	movf	scale@scl& (0+255),w,b
  4706  002526  0100               	movlb	0	; () banked
  4707  002528  6F96               	movwf	___awdiv@dividend& (0+255),b
  4708  00252A  6B97               	clrf	(___awdiv@dividend+1)& (0+255),b
  4709  00252C  BF96               	btfsc	___awdiv@dividend& (0+255),7,b
  4710  00252E  0797               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4711  002530  EC49  F024         	call	___awdiv	;wreg free
  4712  002534  0E12               	movlw	18
  4713  002536  0100               	movlb	0	; () banked
  4714  002538  2596               	addwf	?___awdiv& (0+255),w,b
  4715  00253A  0100               	movlb	0	; () banked
  4716  00253C  6F9E               	movwf	___wmul@multiplier& (0+255),b
  4717  00253E  0E00               	movlw	0
  4718  002540  0100               	movlb	0	; () banked
  4719  002542  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  4720  002544  0100               	movlb	0	; () banked
  4721  002546  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  4722  002548  0E00               	movlw	0
  4723  00254A  0100               	movlb	0	; () banked
  4724  00254C  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4725  00254E  0E03               	movlw	3
  4726  002550  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  4727  002552  EC82  F029         	call	___wmul	;wreg free
  4728  002556  0E17               	movlw	low __npowers_
  4729  002558  0100               	movlb	0	; () banked
  4730  00255A  259E               	addwf	?___wmul& (0+255),w,b
  4731  00255C  6EF6               	movwf	tblptrl,c
  4732  00255E  0E7F               	movlw	high __npowers_
  4733  002560  0100               	movlb	0	; () banked
  4734  002562  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  4735  002564  6EF7               	movwf	tblptrh,c
  4736  002566                     	if	0	;There are less than 3 active tblptr bytes
  4737  002566                     	endif
  4738  002566  0009               	tblrd		*+
  4739  002568  CFF5 F0A4          	movff	tablat,___ftmul@f1
  4740  00256C  0009               	tblrd		*+
  4741  00256E  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  4742  002572  000A               	tblrd		*-
  4743  002574  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  4744  002578  EC43  F01E         	call	___ftmul	;wreg free
  4745  00257C  C0A4  F100         	movff	?___ftmul,_scale$1650
  4746  002580  C0A5  F101         	movff	?___ftmul+1,_scale$1650+1
  4747  002584  C0A6  F102         	movff	?___ftmul+2,_scale$1650+2
  4748                           
  4749                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4750  002588  C100  F0A4         	movff	_scale$1650,___ftmul@f1
  4751  00258C  C101  F0A5         	movff	_scale$1650+1,___ftmul@f1+1
  4752  002590  C102  F0A6         	movff	_scale$1650+2,___ftmul@f1+2
  4753  002594  0E00               	movlw	0
  4754  002596  0100               	movlb	0	; () banked
  4755  002598  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4756  00259A  0E03               	movlw	3
  4757  00259C  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  4758  00259E  0E00               	movlw	0
  4759  0025A0  0100               	movlb	0	; () banked
  4760  0025A2  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  4761  0025A4  0E0A               	movlw	10
  4762  0025A6  6F92               	movwf	___awmod@divisor& (0+255),b
  4763  0025A8  0101               	movlb	1	; () banked
  4764  0025AA  5103               	movf	scale@scl& (0+255),w,b
  4765  0025AC  0100               	movlb	0	; () banked
  4766  0025AE  6F90               	movwf	___awmod@dividend& (0+255),b
  4767  0025B0  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  4768  0025B2  BF90               	btfsc	___awmod@dividend& (0+255),7,b
  4769  0025B4  0791               	decf	(___awmod@dividend+1)& (0+255),f,b
  4770  0025B6  EC5D  F025         	call	___awmod	;wreg free
  4771  0025BA  C090  F09E         	movff	?___awmod,___wmul@multiplier
  4772  0025BE  C091  F09F         	movff	?___awmod+1,___wmul@multiplier+1
  4773  0025C2  EC82  F029         	call	___wmul	;wreg free
  4774  0025C6  0E17               	movlw	low __npowers_
  4775  0025C8  0100               	movlb	0	; () banked
  4776  0025CA  259E               	addwf	?___wmul& (0+255),w,b
  4777  0025CC  6EF6               	movwf	tblptrl,c
  4778  0025CE  0E7F               	movlw	high __npowers_
  4779  0025D0  0100               	movlb	0	; () banked
  4780  0025D2  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  4781  0025D4  6EF7               	movwf	tblptrh,c
  4782  0025D6                     	if	0	;There are less than 3 active tblptr bytes
  4783  0025D6                     	endif
  4784  0025D6  0009               	tblrd		*+
  4785  0025D8  CFF5 F0A7          	movff	tablat,___ftmul@f2
  4786  0025DC  0009               	tblrd		*+
  4787  0025DE  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  4788  0025E2  000A               	tblrd		*-
  4789  0025E4  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  4790  0025E8  EC43  F01E         	call	___ftmul	;wreg free
  4791  0025EC  C0A4  F0B3         	movff	?___ftmul,?_scale
  4792  0025F0  C0A5  F0B4         	movff	?___ftmul+1,?_scale+1
  4793  0025F4  C0A6  F0B5         	movff	?___ftmul+2,?_scale+2
  4794  0025F8  0012               	return	
  4795  0025FA                     l6228:
  4796                           
  4797                           ;doprnt.c: 432: else if(scl > 10)
  4798  0025FA  0101               	movlb	1	; () banked
  4799  0025FC  5103               	movf	scale@scl& (0+255),w,b
  4800  0025FE  0A80               	xorlw	128
  4801  002600  0F75               	addlw	-139
  4802  002602  A0D8               	btfss	status,0,c
  4803  002604  D05D               	goto	l6234
  4804                           
  4805                           ; BSR set to: 1
  4806                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4807  002606  0E00               	movlw	0
  4808  002608  0100               	movlb	0	; () banked
  4809  00260A  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  4810  00260C  0E0A               	movlw	10
  4811  00260E  6F98               	movwf	___awdiv@divisor& (0+255),b
  4812  002610  0101               	movlb	1	; () banked
  4813  002612  5103               	movf	scale@scl& (0+255),w,b
  4814  002614  0100               	movlb	0	; () banked
  4815  002616  6F96               	movwf	___awdiv@dividend& (0+255),b
  4816  002618  6B97               	clrf	(___awdiv@dividend+1)& (0+255),b
  4817  00261A  BF96               	btfsc	___awdiv@dividend& (0+255),7,b
  4818  00261C  0797               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4819  00261E  EC49  F024         	call	___awdiv	;wreg free
  4820  002622  0E09               	movlw	9
  4821  002624  0100               	movlb	0	; () banked
  4822  002626  2596               	addwf	?___awdiv& (0+255),w,b
  4823  002628  0100               	movlb	0	; () banked
  4824  00262A  6F9E               	movwf	___wmul@multiplier& (0+255),b
  4825  00262C  0E00               	movlw	0
  4826  00262E  0100               	movlb	0	; () banked
  4827  002630  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  4828  002632  0100               	movlb	0	; () banked
  4829  002634  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  4830  002636  0E00               	movlw	0
  4831  002638  0100               	movlb	0	; () banked
  4832  00263A  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4833  00263C  0E03               	movlw	3
  4834  00263E  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  4835  002640  EC82  F029         	call	___wmul	;wreg free
  4836  002644  0E17               	movlw	low __npowers_
  4837  002646  0100               	movlb	0	; () banked
  4838  002648  259E               	addwf	?___wmul& (0+255),w,b
  4839  00264A  6EF6               	movwf	tblptrl,c
  4840  00264C  0E7F               	movlw	high __npowers_
  4841  00264E  0100               	movlb	0	; () banked
  4842  002650  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  4843  002652  6EF7               	movwf	tblptrh,c
  4844  002654                     	if	0	;There are less than 3 active tblptr bytes
  4845  002654                     	endif
  4846  002654  0009               	tblrd		*+
  4847  002656  CFF5 F0A4          	movff	tablat,___ftmul@f1
  4848  00265A  0009               	tblrd		*+
  4849  00265C  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  4850  002660  000A               	tblrd		*-
  4851  002662  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  4852  002666  0E00               	movlw	0
  4853  002668  0100               	movlb	0	; () banked
  4854  00266A  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4855  00266C  0E03               	movlw	3
  4856  00266E  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  4857  002670  0E00               	movlw	0
  4858  002672  0100               	movlb	0	; () banked
  4859  002674  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  4860  002676  0E0A               	movlw	10
  4861  002678  6F92               	movwf	___awmod@divisor& (0+255),b
  4862  00267A  0101               	movlb	1	; () banked
  4863  00267C  5103               	movf	scale@scl& (0+255),w,b
  4864  00267E  0100               	movlb	0	; () banked
  4865  002680  6F90               	movwf	___awmod@dividend& (0+255),b
  4866  002682  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  4867  002684  BF90               	btfsc	___awmod@dividend& (0+255),7,b
  4868  002686  0791               	decf	(___awmod@dividend+1)& (0+255),f,b
  4869  002688  EC5D  F025         	call	___awmod	;wreg free
  4870  00268C  C090  F09E         	movff	?___awmod,___wmul@multiplier
  4871  002690  C091  F09F         	movff	?___awmod+1,___wmul@multiplier+1
  4872  002694  EC82  F029         	call	___wmul	;wreg free
  4873  002698  0E17               	movlw	low __npowers_
  4874  00269A  0100               	movlb	0	; () banked
  4875  00269C  259E               	addwf	?___wmul& (0+255),w,b
  4876  00269E  6EF6               	movwf	tblptrl,c
  4877  0026A0  0E7F               	movlw	high __npowers_
  4878  0026A2  0100               	movlb	0	; () banked
  4879  0026A4  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  4880  0026A6  6EF7               	movwf	tblptrh,c
  4881  0026A8                     	if	0	;There are less than 3 active tblptr bytes
  4882  0026A8                     	endif
  4883  0026A8  0009               	tblrd		*+
  4884  0026AA  CFF5 F0A7          	movff	tablat,___ftmul@f2
  4885  0026AE  0009               	tblrd		*+
  4886  0026B0  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  4887  0026B4  000A               	tblrd		*-
  4888  0026B6  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  4889  0026BA  EC43  F01E         	call	___ftmul	;wreg free
  4890  0026BE  D796               	goto	L3
  4891  0026C0                     l6234:
  4892                           
  4893                           ;doprnt.c: 434: return _npowers_[scl];
  4894  0026C0  0101               	movlb	1	; () banked
  4895  0026C2  5103               	movf	scale@scl& (0+255),w,b
  4896  0026C4  0D03               	mullw	3
  4897  0026C6  0E17               	movlw	low __npowers_
  4898  0026C8  24F3               	addwf	prodl,w,c
  4899  0026CA  6EF6               	movwf	tblptrl,c
  4900  0026CC  0E7F               	movlw	high __npowers_
  4901  0026CE  20F4               	addwfc	prodh,w,c
  4902  0026D0  6EF7               	movwf	tblptrh,c
  4903  0026D2                     	if	0	;There are less than 3 active tblptr bytes
  4904  0026D2                     	endif
  4905  0026D2  0009               	tblrd		*+
  4906  0026D4  CFF5 F0B3          	movff	tablat,?_scale
  4907  0026D8  0009               	tblrd		*+
  4908  0026DA  CFF5 F0B4          	movff	tablat,?_scale+1
  4909  0026DE  000A               	tblrd		*-
  4910  0026E0  CFF5 F0B5          	movff	tablat,?_scale+2
  4911                           
  4912                           ; BSR set to: 1
  4913  0026E4  0012               	return	
  4914  0026E6                     l6238:
  4915                           
  4916                           ; BSR set to: 1
  4917                           ;doprnt.c: 435: }
  4918                           ;doprnt.c: 436: if(scl>=110)
  4919  0026E6  0101               	movlb	1	; () banked
  4920  0026E8  5103               	movf	scale@scl& (0+255),w,b
  4921  0026EA  0A80               	xorlw	128
  4922  0026EC  0F12               	addlw	-238
  4923  0026EE  A0D8               	btfss	status,0,c
  4924  0026F0  D0AC               	goto	l6246
  4925                           
  4926                           ; BSR set to: 1
  4927                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4928  0026F2  0E00               	movlw	0
  4929  0026F4  0100               	movlb	0	; () banked
  4930  0026F6  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4931  0026F8  0E03               	movlw	3
  4932  0026FA  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  4933  0026FC  0E00               	movlw	0
  4934  0026FE  0100               	movlb	0	; () banked
  4935  002700  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  4936  002702  0E0A               	movlw	10
  4937  002704  6F98               	movwf	___awdiv@divisor& (0+255),b
  4938  002706  0E00               	movlw	0
  4939  002708  0100               	movlb	0	; () banked
  4940  00270A  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  4941  00270C  0E64               	movlw	100
  4942  00270E  6F92               	movwf	___awmod@divisor& (0+255),b
  4943  002710  0101               	movlb	1	; () banked
  4944  002712  5103               	movf	scale@scl& (0+255),w,b
  4945  002714  0100               	movlb	0	; () banked
  4946  002716  6F90               	movwf	___awmod@dividend& (0+255),b
  4947  002718  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  4948  00271A  BF90               	btfsc	___awmod@dividend& (0+255),7,b
  4949  00271C  0791               	decf	(___awmod@dividend+1)& (0+255),f,b
  4950  00271E  EC5D  F025         	call	___awmod	;wreg free
  4951  002722  C090  F096         	movff	?___awmod,___awdiv@dividend
  4952  002726  C091  F097         	movff	?___awmod+1,___awdiv@dividend+1
  4953  00272A  EC49  F024         	call	___awdiv	;wreg free
  4954  00272E  0E09               	movlw	9
  4955  002730  0100               	movlb	0	; () banked
  4956  002732  2596               	addwf	?___awdiv& (0+255),w,b
  4957  002734  0100               	movlb	0	; () banked
  4958  002736  6F9E               	movwf	___wmul@multiplier& (0+255),b
  4959  002738  0E00               	movlw	0
  4960  00273A  0100               	movlb	0	; () banked
  4961  00273C  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  4962  00273E  0100               	movlb	0	; () banked
  4963  002740  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  4964  002742  EC82  F029         	call	___wmul	;wreg free
  4965  002746  0E3E               	movlw	low __powers_
  4966  002748  0100               	movlb	0	; () banked
  4967  00274A  259E               	addwf	?___wmul& (0+255),w,b
  4968  00274C  6EF6               	movwf	tblptrl,c
  4969  00274E  0E7F               	movlw	high __powers_
  4970  002750  0100               	movlb	0	; () banked
  4971  002752  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  4972  002754  6EF7               	movwf	tblptrh,c
  4973  002756                     	if	0	;There are less than 3 active tblptr bytes
  4974  002756                     	endif
  4975  002756  0009               	tblrd		*+
  4976  002758  CFF5 F0A7          	movff	tablat,___ftmul@f2
  4977  00275C  0009               	tblrd		*+
  4978  00275E  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  4979  002762  000A               	tblrd		*-
  4980  002764  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  4981  002768  0E00               	movlw	0
  4982  00276A  0100               	movlb	0	; () banked
  4983  00276C  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  4984  00276E  0E64               	movlw	100
  4985  002770  6F98               	movwf	___awdiv@divisor& (0+255),b
  4986  002772  0101               	movlb	1	; () banked
  4987  002774  5103               	movf	scale@scl& (0+255),w,b
  4988  002776  0100               	movlb	0	; () banked
  4989  002778  6F96               	movwf	___awdiv@dividend& (0+255),b
  4990  00277A  6B97               	clrf	(___awdiv@dividend+1)& (0+255),b
  4991  00277C  BF96               	btfsc	___awdiv@dividend& (0+255),7,b
  4992  00277E  0797               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4993  002780  EC49  F024         	call	___awdiv	;wreg free
  4994  002784  0E12               	movlw	18
  4995  002786  0100               	movlb	0	; () banked
  4996  002788  2596               	addwf	?___awdiv& (0+255),w,b
  4997  00278A  0100               	movlb	0	; () banked
  4998  00278C  6F9E               	movwf	___wmul@multiplier& (0+255),b
  4999  00278E  0E00               	movlw	0
  5000  002790  0100               	movlb	0	; () banked
  5001  002792  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  5002  002794  0100               	movlb	0	; () banked
  5003  002796  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  5004  002798  0E00               	movlw	0
  5005  00279A  0100               	movlb	0	; () banked
  5006  00279C  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5007  00279E  0E03               	movlw	3
  5008  0027A0  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  5009  0027A2  EC82  F029         	call	___wmul	;wreg free
  5010  0027A6  0E3E               	movlw	low __powers_
  5011  0027A8  0100               	movlb	0	; () banked
  5012  0027AA  259E               	addwf	?___wmul& (0+255),w,b
  5013  0027AC  6EF6               	movwf	tblptrl,c
  5014  0027AE  0E7F               	movlw	high __powers_
  5015  0027B0  0100               	movlb	0	; () banked
  5016  0027B2  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  5017  0027B4  6EF7               	movwf	tblptrh,c
  5018  0027B6                     	if	0	;There are less than 3 active tblptr bytes
  5019  0027B6                     	endif
  5020  0027B6  0009               	tblrd		*+
  5021  0027B8  CFF5 F0A4          	movff	tablat,___ftmul@f1
  5022  0027BC  0009               	tblrd		*+
  5023  0027BE  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  5024  0027C2  000A               	tblrd		*-
  5025  0027C4  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  5026  0027C8  EC43  F01E         	call	___ftmul	;wreg free
  5027  0027CC  C0A4  F100         	movff	?___ftmul,_scale$1650
  5028  0027D0  C0A5  F101         	movff	?___ftmul+1,_scale$1650+1
  5029  0027D4  C0A6  F102         	movff	?___ftmul+2,_scale$1650+2
  5030                           
  5031                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  5032  0027D8  C100  F0A4         	movff	_scale$1650,___ftmul@f1
  5033  0027DC  C101  F0A5         	movff	_scale$1650+1,___ftmul@f1+1
  5034  0027E0  C102  F0A6         	movff	_scale$1650+2,___ftmul@f1+2
  5035  0027E4  0E00               	movlw	0
  5036  0027E6  0100               	movlb	0	; () banked
  5037  0027E8  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5038  0027EA  0E03               	movlw	3
  5039  0027EC  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  5040  0027EE  0E00               	movlw	0
  5041  0027F0  0100               	movlb	0	; () banked
  5042  0027F2  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  5043  0027F4  0E0A               	movlw	10
  5044  0027F6  6F92               	movwf	___awmod@divisor& (0+255),b
  5045  0027F8  0101               	movlb	1	; () banked
  5046  0027FA  5103               	movf	scale@scl& (0+255),w,b
  5047  0027FC  0100               	movlb	0	; () banked
  5048  0027FE  6F90               	movwf	___awmod@dividend& (0+255),b
  5049  002800  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  5050  002802  BF90               	btfsc	___awmod@dividend& (0+255),7,b
  5051  002804  0791               	decf	(___awmod@dividend+1)& (0+255),f,b
  5052  002806  EC5D  F025         	call	___awmod	;wreg free
  5053  00280A  C090  F09E         	movff	?___awmod,___wmul@multiplier
  5054  00280E  C091  F09F         	movff	?___awmod+1,___wmul@multiplier+1
  5055  002812  EC82  F029         	call	___wmul	;wreg free
  5056  002816  0E3E               	movlw	low __powers_
  5057  002818  0100               	movlb	0	; () banked
  5058  00281A  259E               	addwf	?___wmul& (0+255),w,b
  5059  00281C  6EF6               	movwf	tblptrl,c
  5060  00281E  0E7F               	movlw	high __powers_
  5061  002820  0100               	movlb	0	; () banked
  5062  002822  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  5063  002824  6EF7               	movwf	tblptrh,c
  5064  002826                     	if	0	;There are less than 3 active tblptr bytes
  5065  002826                     	endif
  5066  002826  0009               	tblrd		*+
  5067  002828  CFF5 F0A7          	movff	tablat,___ftmul@f2
  5068  00282C  0009               	tblrd		*+
  5069  00282E  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  5070  002832  000A               	tblrd		*-
  5071  002834  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  5072  002838  EC43  F01E         	call	___ftmul	;wreg free
  5073  00283C  C0A4  F0B3         	movff	?___ftmul,?_scale
  5074  002840  C0A5  F0B4         	movff	?___ftmul+1,?_scale+1
  5075  002844  C0A6  F0B5         	movff	?___ftmul+2,?_scale+2
  5076  002848  0012               	return	
  5077  00284A                     l6246:
  5078                           
  5079                           ;doprnt.c: 438: else if(scl > 10)
  5080  00284A  0101               	movlb	1	; () banked
  5081  00284C  5103               	movf	scale@scl& (0+255),w,b
  5082  00284E  0A80               	xorlw	128
  5083  002850  0F75               	addlw	-139
  5084  002852  A0D8               	btfss	status,0,c
  5085  002854  D05D               	goto	l6252
  5086                           
  5087                           ; BSR set to: 1
  5088                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  5089  002856  0E00               	movlw	0
  5090  002858  0100               	movlb	0	; () banked
  5091  00285A  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  5092  00285C  0E0A               	movlw	10
  5093  00285E  6F98               	movwf	___awdiv@divisor& (0+255),b
  5094  002860  0101               	movlb	1	; () banked
  5095  002862  5103               	movf	scale@scl& (0+255),w,b
  5096  002864  0100               	movlb	0	; () banked
  5097  002866  6F96               	movwf	___awdiv@dividend& (0+255),b
  5098  002868  6B97               	clrf	(___awdiv@dividend+1)& (0+255),b
  5099  00286A  BF96               	btfsc	___awdiv@dividend& (0+255),7,b
  5100  00286C  0797               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5101  00286E  EC49  F024         	call	___awdiv	;wreg free
  5102  002872  0E09               	movlw	9
  5103  002874  0100               	movlb	0	; () banked
  5104  002876  2596               	addwf	?___awdiv& (0+255),w,b
  5105  002878  0100               	movlb	0	; () banked
  5106  00287A  6F9E               	movwf	___wmul@multiplier& (0+255),b
  5107  00287C  0E00               	movlw	0
  5108  00287E  0100               	movlb	0	; () banked
  5109  002880  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  5110  002882  0100               	movlb	0	; () banked
  5111  002884  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  5112  002886  0E00               	movlw	0
  5113  002888  0100               	movlb	0	; () banked
  5114  00288A  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5115  00288C  0E03               	movlw	3
  5116  00288E  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  5117  002890  EC82  F029         	call	___wmul	;wreg free
  5118  002894  0E3E               	movlw	low __powers_
  5119  002896  0100               	movlb	0	; () banked
  5120  002898  259E               	addwf	?___wmul& (0+255),w,b
  5121  00289A  6EF6               	movwf	tblptrl,c
  5122  00289C  0E7F               	movlw	high __powers_
  5123  00289E  0100               	movlb	0	; () banked
  5124  0028A0  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  5125  0028A2  6EF7               	movwf	tblptrh,c
  5126  0028A4                     	if	0	;There are less than 3 active tblptr bytes
  5127  0028A4                     	endif
  5128  0028A4  0009               	tblrd		*+
  5129  0028A6  CFF5 F0A4          	movff	tablat,___ftmul@f1
  5130  0028AA  0009               	tblrd		*+
  5131  0028AC  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  5132  0028B0  000A               	tblrd		*-
  5133  0028B2  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  5134  0028B6  0E00               	movlw	0
  5135  0028B8  0100               	movlb	0	; () banked
  5136  0028BA  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5137  0028BC  0E03               	movlw	3
  5138  0028BE  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  5139  0028C0  0E00               	movlw	0
  5140  0028C2  0100               	movlb	0	; () banked
  5141  0028C4  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  5142  0028C6  0E0A               	movlw	10
  5143  0028C8  6F92               	movwf	___awmod@divisor& (0+255),b
  5144  0028CA  0101               	movlb	1	; () banked
  5145  0028CC  5103               	movf	scale@scl& (0+255),w,b
  5146  0028CE  0100               	movlb	0	; () banked
  5147  0028D0  6F90               	movwf	___awmod@dividend& (0+255),b
  5148  0028D2  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  5149  0028D4  BF90               	btfsc	___awmod@dividend& (0+255),7,b
  5150  0028D6  0791               	decf	(___awmod@dividend+1)& (0+255),f,b
  5151  0028D8  EC5D  F025         	call	___awmod	;wreg free
  5152  0028DC  C090  F09E         	movff	?___awmod,___wmul@multiplier
  5153  0028E0  C091  F09F         	movff	?___awmod+1,___wmul@multiplier+1
  5154  0028E4  EC82  F029         	call	___wmul	;wreg free
  5155  0028E8  0E3E               	movlw	low __powers_
  5156  0028EA  0100               	movlb	0	; () banked
  5157  0028EC  259E               	addwf	?___wmul& (0+255),w,b
  5158  0028EE  6EF6               	movwf	tblptrl,c
  5159  0028F0  0E7F               	movlw	high __powers_
  5160  0028F2  0100               	movlb	0	; () banked
  5161  0028F4  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  5162  0028F6  6EF7               	movwf	tblptrh,c
  5163  0028F8                     	if	0	;There are less than 3 active tblptr bytes
  5164  0028F8                     	endif
  5165  0028F8  0009               	tblrd		*+
  5166  0028FA  CFF5 F0A7          	movff	tablat,___ftmul@f2
  5167  0028FE  0009               	tblrd		*+
  5168  002900  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  5169  002904  000A               	tblrd		*-
  5170  002906  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  5171  00290A  EC43  F01E         	call	___ftmul	;wreg free
  5172  00290E  D796               	goto	L4
  5173  002910                     l6252:
  5174                           
  5175                           ;doprnt.c: 440: return _powers_[scl];
  5176  002910  0101               	movlb	1	; () banked
  5177  002912  5103               	movf	scale@scl& (0+255),w,b
  5178  002914  0D03               	mullw	3
  5179  002916  0E3E               	movlw	low __powers_
  5180  002918  24F3               	addwf	prodl,w,c
  5181  00291A  6EF6               	movwf	tblptrl,c
  5182  00291C  0E7F               	movlw	high __powers_
  5183  00291E  20F4               	addwfc	prodh,w,c
  5184  002920  6EF7               	movwf	tblptrh,c
  5185  002922                     	if	0	;There are less than 3 active tblptr bytes
  5186  002922                     	endif
  5187  002922  0009               	tblrd		*+
  5188  002924  CFF5 F0B3          	movff	tablat,?_scale
  5189  002928  0009               	tblrd		*+
  5190  00292A  CFF5 F0B4          	movff	tablat,?_scale+1
  5191  00292E  000A               	tblrd		*-
  5192  002930  CFF5 F0B5          	movff	tablat,?_scale+2
  5193  002934  0012               	return	
  5194  002936                     __end_of_scale:
  5195                           	opt stack 0
  5196                           tosu	equ	0xFFF
  5197                           tosh	equ	0xFFE
  5198                           tosl	equ	0xFFD
  5199                           pclath	equ	0xFFA
  5200                           tblptru	equ	0xFF8
  5201                           tblptrh	equ	0xFF7
  5202                           tblptrl	equ	0xFF6
  5203                           tablat	equ	0xFF5
  5204                           prodh	equ	0xFF4
  5205                           prodl	equ	0xFF3
  5206                           intcon	equ	0xFF2
  5207                           postinc0	equ	0xFEE
  5208                           wreg	equ	0xFE8
  5209                           postdec1	equ	0xFE5
  5210                           fsr1l	equ	0xFE1
  5211                           indf2	equ	0xFDF
  5212                           postinc2	equ	0xFDE
  5213                           postdec2	equ	0xFDD
  5214                           fsr2h	equ	0xFDA
  5215                           fsr2l	equ	0xFD9
  5216                           status	equ	0xFD8
  5217                           
  5218 ;; *************** function _putch *****************
  5219 ;; Defined at:
  5220 ;;		line 111 in file "mcc_generated_files/eusart1.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;  txData          1    wreg     unsigned char 
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;  txData          1   49[BANK0 ] unsigned char 
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  1    wreg      void 
  5227 ;; Registers used:
  5228 ;;		wreg, status,2, cstack
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5234 ;;      Params:         0       0       0       0       0       0       0
  5235 ;;      Locals:         0       1       0       0       0       0       0
  5236 ;;      Temps:          0       0       0       0       0       0       0
  5237 ;;      Totals:         0       1       0       0       0       0       0
  5238 ;;Total ram usage:        1 bytes
  5239 ;; Hardware stack levels used:    1
  5240 ;; Hardware stack levels required when called:    8
  5241 ;; This function calls:
  5242 ;;		_EUSART1_Write
  5243 ;; This function is called by:
  5244 ;;		i2__doprnt
  5245 ;;		__doprnt
  5246 ;; This function uses a non-reentrant model
  5247 ;;
  5248                           
  5249                           	psect	text4
  5250  005560                     __ptext4:
  5251                           	opt stack 0
  5252  005560                     _putch:
  5253                           	opt stack 0
  5254                           
  5255                           ;Skip over the trampoline to the duplicate function for level 2
  5256  005560  B25E               	btfsc	btemp,1,c
  5257  005562  EFE1  F02A         	goto	i2_putch
  5258  005566                     _putch$intlevel0:
  5259                           	opt stack 20
  5260                           
  5261                           ;incstack = 0
  5262                           ;putch@txData stored from wreg
  5263  005566  0100               	movlb	0	; () banked
  5264  005568  6F91               	movwf	putch@txData& (0+255),b
  5265                           
  5266                           ;eusart1.c: 113: EUSART1_Write(txData);
  5267  00556A  0100               	movlb	0	; () banked
  5268  00556C  5191               	movf	putch@txData& (0+255),w,b
  5269  00556E  ECBA  F02A         	call	_EUSART1_Write
  5270  005572  0012               	return		;funcret
  5271  005574                     __end_of_putch:
  5272                           	opt stack 0
  5273                           tosu	equ	0xFFF
  5274                           tosh	equ	0xFFE
  5275                           tosl	equ	0xFFD
  5276                           pclath	equ	0xFFA
  5277                           tblptru	equ	0xFF8
  5278                           tblptrh	equ	0xFF7
  5279                           tblptrl	equ	0xFF6
  5280                           tablat	equ	0xFF5
  5281                           prodh	equ	0xFF4
  5282                           prodl	equ	0xFF3
  5283                           intcon	equ	0xFF2
  5284                           postinc0	equ	0xFEE
  5285                           wreg	equ	0xFE8
  5286                           postdec1	equ	0xFE5
  5287                           fsr1l	equ	0xFE1
  5288                           indf2	equ	0xFDF
  5289                           postinc2	equ	0xFDE
  5290                           postdec2	equ	0xFDD
  5291                           fsr2h	equ	0xFDA
  5292                           fsr2l	equ	0xFD9
  5293                           status	equ	0xFD8
  5294                           
  5295 ;; *************** function _EUSART1_Write *****************
  5296 ;; Defined at:
  5297 ;;		line 97 in file "mcc_generated_files/eusart1.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;  txData          1    wreg     unsigned char 
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;  txData          1   48[BANK0 ] unsigned char 
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  1    wreg      void 
  5304 ;; Registers used:
  5305 ;;		wreg
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5311 ;;      Params:         0       0       0       0       0       0       0
  5312 ;;      Locals:         0       1       0       0       0       0       0
  5313 ;;      Temps:          0       0       0       0       0       0       0
  5314 ;;      Totals:         0       1       0       0       0       0       0
  5315 ;;Total ram usage:        1 bytes
  5316 ;; Hardware stack levels used:    1
  5317 ;; Hardware stack levels required when called:    7
  5318 ;; This function calls:
  5319 ;;		Nothing
  5320 ;; This function is called by:
  5321 ;;		_putch
  5322 ;; This function uses a non-reentrant model
  5323 ;;
  5324                           
  5325                           	psect	text5
  5326  005574                     __ptext5:
  5327                           	opt stack 0
  5328  005574                     _EUSART1_Write:
  5329                           	opt stack 20
  5330                           
  5331                           ;incstack = 0
  5332                           ;EUSART1_Write@txData stored from wreg
  5333  005574  0100               	movlb	0	; () banked
  5334  005576  6F90               	movwf	EUSART1_Write@txData& (0+255),b
  5335  005578                     l238:
  5336  005578  A89E               	btfss	3998,4,c	;volatile
  5337  00557A  D7FE               	goto	l238
  5338                           
  5339                           ;eusart1.c: 101: }
  5340                           ;eusart1.c: 103: TXREG1 = txData;
  5341  00557C  C090  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  5342  005580  0012               	return		;funcret
  5343  005582                     __end_of_EUSART1_Write:
  5344                           	opt stack 0
  5345                           tosu	equ	0xFFF
  5346                           tosh	equ	0xFFE
  5347                           tosl	equ	0xFFD
  5348                           pclath	equ	0xFFA
  5349                           tblptru	equ	0xFF8
  5350                           tblptrh	equ	0xFF7
  5351                           tblptrl	equ	0xFF6
  5352                           tablat	equ	0xFF5
  5353                           prodh	equ	0xFF4
  5354                           prodl	equ	0xFF3
  5355                           intcon	equ	0xFF2
  5356                           postinc0	equ	0xFEE
  5357                           wreg	equ	0xFE8
  5358                           postdec1	equ	0xFE5
  5359                           fsr1l	equ	0xFE1
  5360                           indf2	equ	0xFDF
  5361                           postinc2	equ	0xFDE
  5362                           postdec2	equ	0xFDD
  5363                           fsr2h	equ	0xFDA
  5364                           fsr2l	equ	0xFD9
  5365                           status	equ	0xFD8
  5366                           
  5367 ;; *************** function _isdigit *****************
  5368 ;; Defined at:
  5369 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\isdigit.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;  c               1    wreg     unsigned char 
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;  c               1   50[BANK0 ] unsigned char 
  5374 ;; Return value:  Size  Location     Type
  5375 ;;		None               void
  5376 ;; Registers used:
  5377 ;;		wreg, status,2, status,0
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5383 ;;      Params:         0       0       0       0       0       0       0
  5384 ;;      Locals:         0       2       0       0       0       0       0
  5385 ;;      Temps:          0       1       0       0       0       0       0
  5386 ;;      Totals:         0       3       0       0       0       0       0
  5387 ;;Total ram usage:        3 bytes
  5388 ;; Hardware stack levels used:    1
  5389 ;; Hardware stack levels required when called:    7
  5390 ;; This function calls:
  5391 ;;		Nothing
  5392 ;; This function is called by:
  5393 ;;		__doprnt
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           	psect	text6
  5398  005436                     __ptext6:
  5399                           	opt stack 0
  5400  005436                     _isdigit:
  5401                           	opt stack 21
  5402                           
  5403                           ;incstack = 0
  5404                           ;isdigit@c stored from wreg
  5405  005436  0100               	movlb	0	; () banked
  5406  005438  6F92               	movwf	isdigit@c& (0+255),b
  5407  00543A  0E00               	movlw	0
  5408  00543C  0100               	movlb	0	; () banked
  5409  00543E  6F91               	movwf	_isdigit$1198& (0+255),b
  5410                           
  5411                           ; BSR set to: 0
  5412  005440  0E3A               	movlw	58
  5413  005442  0100               	movlb	0	; () banked
  5414  005444  6192               	cpfslt	isdigit@c& (0+255),b
  5415  005446  D007               	goto	l4548
  5416                           
  5417                           ; BSR set to: 0
  5418  005448  0E2F               	movlw	47
  5419  00544A  0100               	movlb	0	; () banked
  5420  00544C  6592               	cpfsgt	isdigit@c& (0+255),b
  5421  00544E  D003               	goto	l4548
  5422                           
  5423                           ; BSR set to: 0
  5424  005450  0E01               	movlw	1
  5425  005452  0100               	movlb	0	; () banked
  5426  005454  6F91               	movwf	_isdigit$1198& (0+255),b
  5427  005456                     l4548:
  5428                           
  5429                           ; BSR set to: 0
  5430  005456  C091  F090         	movff	_isdigit$1198,??_isdigit
  5431  00545A  0100               	movlb	0	; () banked
  5432  00545C  3190               	rrcf	??_isdigit& (0+255),w,b
  5433  00545E  0012               	return	
  5434  005460                     __end_of_isdigit:
  5435                           	opt stack 0
  5436                           tosu	equ	0xFFF
  5437                           tosh	equ	0xFFE
  5438                           tosl	equ	0xFFD
  5439                           pclath	equ	0xFFA
  5440                           tblptru	equ	0xFF8
  5441                           tblptrh	equ	0xFF7
  5442                           tblptrl	equ	0xFF6
  5443                           tablat	equ	0xFF5
  5444                           prodh	equ	0xFF4
  5445                           prodl	equ	0xFF3
  5446                           intcon	equ	0xFF2
  5447                           postinc0	equ	0xFEE
  5448                           wreg	equ	0xFE8
  5449                           postdec1	equ	0xFE5
  5450                           fsr1l	equ	0xFE1
  5451                           indf2	equ	0xFDF
  5452                           postinc2	equ	0xFDE
  5453                           postdec2	equ	0xFDD
  5454                           fsr2h	equ	0xFDA
  5455                           fsr2l	equ	0xFD9
  5456                           status	equ	0xFD8
  5457                           
  5458 ;; *************** function _fround *****************
  5459 ;; Defined at:
  5460 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
  5461 ;; Parameters:    Size  Location     Type
  5462 ;;  prec            1    wreg     unsigned char 
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;  prec            1    6[BANK1 ] unsigned char 
  5465 ;; Return value:  Size  Location     Type
  5466 ;;                  3   83[BANK0 ] unsigned char 
  5467 ;; Registers used:
  5468 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5474 ;;      Params:         0       3       0       0       0       0       0
  5475 ;;      Locals:         0       0       7       0       0       0       0
  5476 ;;      Temps:          0       0       0       0       0       0       0
  5477 ;;      Totals:         0       3       7       0       0       0       0
  5478 ;;Total ram usage:       10 bytes
  5479 ;; Hardware stack levels used:    1
  5480 ;; Hardware stack levels required when called:    9
  5481 ;; This function calls:
  5482 ;;		___awdiv
  5483 ;;		___awmod
  5484 ;;		___ftmul
  5485 ;;		___wmul
  5486 ;; This function is called by:
  5487 ;;		__doprnt
  5488 ;; This function uses a non-reentrant model
  5489 ;;
  5490                           
  5491                           	psect	text7
  5492  002D26                     __ptext7:
  5493                           	opt stack 0
  5494  002D26                     _fround:
  5495                           	opt stack 19
  5496                           
  5497                           ; BSR set to: 0
  5498                           ;incstack = 0
  5499                           ;fround@prec stored from wreg
  5500  002D26  0101               	movlb	1	; () banked
  5501  002D28  6F06               	movwf	fround@prec& (0+255),b
  5502                           
  5503                           ;doprnt.c: 413: if(prec>=110)
  5504  002D2A  0E6D               	movlw	109
  5505  002D2C  0101               	movlb	1	; () banked
  5506  002D2E  6506               	cpfsgt	fround@prec& (0+255),b
  5507  002D30  D0BA               	goto	l6206
  5508                           
  5509                           ; BSR set to: 1
  5510                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5511  002D32  0E00               	movlw	0
  5512  002D34  0100               	movlb	0	; () banked
  5513  002D36  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5514  002D38  0E03               	movlw	3
  5515  002D3A  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  5516  002D3C  0E00               	movlw	0
  5517  002D3E  0100               	movlb	0	; () banked
  5518  002D40  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  5519  002D42  0E0A               	movlw	10
  5520  002D44  6F98               	movwf	___awdiv@divisor& (0+255),b
  5521  002D46  0E00               	movlw	0
  5522  002D48  0100               	movlb	0	; () banked
  5523  002D4A  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  5524  002D4C  0E64               	movlw	100
  5525  002D4E  6F92               	movwf	___awmod@divisor& (0+255),b
  5526  002D50  C106  F090         	movff	fround@prec,___awmod@dividend
  5527  002D54  0100               	movlb	0	; () banked
  5528  002D56  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  5529  002D58  EC5D  F025         	call	___awmod	;wreg free
  5530  002D5C  C090  F096         	movff	?___awmod,___awdiv@dividend
  5531  002D60  C091  F097         	movff	?___awmod+1,___awdiv@dividend+1
  5532  002D64  EC49  F024         	call	___awdiv	;wreg free
  5533  002D68  0E09               	movlw	9
  5534  002D6A  0100               	movlb	0	; () banked
  5535  002D6C  2596               	addwf	?___awdiv& (0+255),w,b
  5536  002D6E  0100               	movlb	0	; () banked
  5537  002D70  6F9E               	movwf	___wmul@multiplier& (0+255),b
  5538  002D72  0E00               	movlw	0
  5539  002D74  0100               	movlb	0	; () banked
  5540  002D76  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  5541  002D78  0100               	movlb	0	; () banked
  5542  002D7A  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  5543  002D7C  EC82  F029         	call	___wmul	;wreg free
  5544  002D80  0E17               	movlw	low __npowers_
  5545  002D82  0100               	movlb	0	; () banked
  5546  002D84  259E               	addwf	?___wmul& (0+255),w,b
  5547  002D86  6EF6               	movwf	tblptrl,c
  5548  002D88  0E7F               	movlw	high __npowers_
  5549  002D8A  0100               	movlb	0	; () banked
  5550  002D8C  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  5551  002D8E  6EF7               	movwf	tblptrh,c
  5552  002D90                     	if	0	;There are less than 3 active tblptr bytes
  5553  002D90                     	endif
  5554  002D90  0009               	tblrd		*+
  5555  002D92  CFF5 F0A7          	movff	tablat,___ftmul@f2
  5556  002D96  0009               	tblrd		*+
  5557  002D98  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  5558  002D9C  000A               	tblrd		*-
  5559  002D9E  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  5560  002DA2  0E00               	movlw	0
  5561  002DA4  0100               	movlb	0	; () banked
  5562  002DA6  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  5563  002DA8  0E64               	movlw	100
  5564  002DAA  6F98               	movwf	___awdiv@divisor& (0+255),b
  5565  002DAC  C106  F096         	movff	fround@prec,___awdiv@dividend
  5566  002DB0  0100               	movlb	0	; () banked
  5567  002DB2  6B97               	clrf	(___awdiv@dividend+1)& (0+255),b
  5568  002DB4  EC49  F024         	call	___awdiv	;wreg free
  5569  002DB8  0E12               	movlw	18
  5570  002DBA  0100               	movlb	0	; () banked
  5571  002DBC  2596               	addwf	?___awdiv& (0+255),w,b
  5572  002DBE  0100               	movlb	0	; () banked
  5573  002DC0  6F9E               	movwf	___wmul@multiplier& (0+255),b
  5574  002DC2  0E00               	movlw	0
  5575  002DC4  0100               	movlb	0	; () banked
  5576  002DC6  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  5577  002DC8  0100               	movlb	0	; () banked
  5578  002DCA  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  5579  002DCC  0E00               	movlw	0
  5580  002DCE  0100               	movlb	0	; () banked
  5581  002DD0  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5582  002DD2  0E03               	movlw	3
  5583  002DD4  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  5584  002DD6  EC82  F029         	call	___wmul	;wreg free
  5585  002DDA  0E17               	movlw	low __npowers_
  5586  002DDC  0100               	movlb	0	; () banked
  5587  002DDE  259E               	addwf	?___wmul& (0+255),w,b
  5588  002DE0  6EF6               	movwf	tblptrl,c
  5589  002DE2  0E7F               	movlw	high __npowers_
  5590  002DE4  0100               	movlb	0	; () banked
  5591  002DE6  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  5592  002DE8  6EF7               	movwf	tblptrh,c
  5593  002DEA                     	if	0	;There are less than 3 active tblptr bytes
  5594  002DEA                     	endif
  5595  002DEA  0009               	tblrd		*+
  5596  002DEC  CFF5 F0A4          	movff	tablat,___ftmul@f1
  5597  002DF0  0009               	tblrd		*+
  5598  002DF2  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  5599  002DF6  000A               	tblrd		*-
  5600  002DF8  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  5601  002DFC  EC43  F01E         	call	___ftmul	;wreg free
  5602  002E00  C0A4  F103         	movff	?___ftmul,_fround$1648
  5603  002E04  C0A5  F104         	movff	?___ftmul+1,_fround$1648+1
  5604  002E08  C0A6  F105         	movff	?___ftmul+2,_fround$1648+2
  5605                           
  5606                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5607  002E0C  0E00               	movlw	0
  5608  002E0E  0100               	movlb	0	; () banked
  5609  002E10  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5610  002E12  0E03               	movlw	3
  5611  002E14  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  5612  002E16  0E00               	movlw	0
  5613  002E18  0100               	movlb	0	; () banked
  5614  002E1A  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  5615  002E1C  0E0A               	movlw	10
  5616  002E1E  6F92               	movwf	___awmod@divisor& (0+255),b
  5617  002E20  C106  F090         	movff	fround@prec,___awmod@dividend
  5618  002E24  0100               	movlb	0	; () banked
  5619  002E26  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  5620  002E28  EC5D  F025         	call	___awmod	;wreg free
  5621  002E2C  C090  F09E         	movff	?___awmod,___wmul@multiplier
  5622  002E30  C091  F09F         	movff	?___awmod+1,___wmul@multiplier+1
  5623  002E34  EC82  F029         	call	___wmul	;wreg free
  5624  002E38  0E17               	movlw	low __npowers_
  5625  002E3A  0100               	movlb	0	; () banked
  5626  002E3C  259E               	addwf	?___wmul& (0+255),w,b
  5627  002E3E  6EF6               	movwf	tblptrl,c
  5628  002E40  0E7F               	movlw	high __npowers_
  5629  002E42  0100               	movlb	0	; () banked
  5630  002E44  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  5631  002E46  6EF7               	movwf	tblptrh,c
  5632  002E48                     	if	0	;There are less than 3 active tblptr bytes
  5633  002E48                     	endif
  5634  002E48  0009               	tblrd		*+
  5635  002E4A  CFF5 F0A7          	movff	tablat,___ftmul@f2
  5636  002E4E  0009               	tblrd		*+
  5637  002E50  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  5638  002E54  000A               	tblrd		*-
  5639  002E56  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  5640  002E5A  C103  F0A4         	movff	_fround$1648,___ftmul@f1
  5641  002E5E  C104  F0A5         	movff	_fround$1648+1,___ftmul@f1+1
  5642  002E62  C105  F0A6         	movff	_fround$1648+2,___ftmul@f1+2
  5643  002E66  EC43  F01E         	call	___ftmul	;wreg free
  5644  002E6A  C0A4  F100         	movff	?___ftmul,_fround$1649
  5645  002E6E  C0A5  F101         	movff	?___ftmul+1,_fround$1649+1
  5646  002E72  C0A6  F102         	movff	?___ftmul+2,_fround$1649+2
  5647                           
  5648                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5649  002E76  C100  F0A4         	movff	_fround$1649,___ftmul@f1
  5650  002E7A  C101  F0A5         	movff	_fround$1649+1,___ftmul@f1+1
  5651  002E7E  C102  F0A6         	movff	_fround$1649+2,___ftmul@f1+2
  5652  002E82  0E00               	movlw	0
  5653  002E84  0100               	movlb	0	; () banked
  5654  002E86  6FA7               	movwf	___ftmul@f2& (0+255),b
  5655  002E88  0E00               	movlw	0
  5656  002E8A  0100               	movlb	0	; () banked
  5657  002E8C  6FA8               	movwf	(___ftmul@f2+1)& (0+255),b
  5658  002E8E  0E3F               	movlw	63
  5659  002E90  0100               	movlb	0	; () banked
  5660  002E92  6FA9               	movwf	(___ftmul@f2+2)& (0+255),b
  5661  002E94  EC43  F01E         	call	___ftmul	;wreg free
  5662  002E98  C0A4  F0B3         	movff	?___ftmul,?_fround
  5663  002E9C  C0A5  F0B4         	movff	?___ftmul+1,?_fround+1
  5664  002EA0  C0A6  F0B5         	movff	?___ftmul+2,?_fround+2
  5665  002EA4  0012               	return	
  5666  002EA6                     l6206:
  5667                           
  5668                           ;doprnt.c: 415: else if(prec > 10)
  5669  002EA6  0E0A               	movlw	10
  5670  002EA8  0101               	movlb	1	; () banked
  5671  002EAA  6506               	cpfsgt	fround@prec& (0+255),b
  5672  002EAC  D06E               	goto	l6214
  5673                           
  5674                           ; BSR set to: 1
  5675                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5676  002EAE  0E00               	movlw	0
  5677  002EB0  0100               	movlb	0	; () banked
  5678  002EB2  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5679  002EB4  0E03               	movlw	3
  5680  002EB6  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  5681  002EB8  0E00               	movlw	0
  5682  002EBA  0100               	movlb	0	; () banked
  5683  002EBC  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  5684  002EBE  0E0A               	movlw	10
  5685  002EC0  6F92               	movwf	___awmod@divisor& (0+255),b
  5686  002EC2  C106  F090         	movff	fround@prec,___awmod@dividend
  5687  002EC6  0100               	movlb	0	; () banked
  5688  002EC8  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  5689  002ECA  EC5D  F025         	call	___awmod	;wreg free
  5690  002ECE  C090  F09E         	movff	?___awmod,___wmul@multiplier
  5691  002ED2  C091  F09F         	movff	?___awmod+1,___wmul@multiplier+1
  5692  002ED6  EC82  F029         	call	___wmul	;wreg free
  5693  002EDA  0E17               	movlw	low __npowers_
  5694  002EDC  0100               	movlb	0	; () banked
  5695  002EDE  259E               	addwf	?___wmul& (0+255),w,b
  5696  002EE0  6EF6               	movwf	tblptrl,c
  5697  002EE2  0E7F               	movlw	high __npowers_
  5698  002EE4  0100               	movlb	0	; () banked
  5699  002EE6  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  5700  002EE8  6EF7               	movwf	tblptrh,c
  5701  002EEA                     	if	0	;There are less than 3 active tblptr bytes
  5702  002EEA                     	endif
  5703  002EEA  0009               	tblrd		*+
  5704  002EEC  CFF5 F0A7          	movff	tablat,___ftmul@f2
  5705  002EF0  0009               	tblrd		*+
  5706  002EF2  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  5707  002EF6  000A               	tblrd		*-
  5708  002EF8  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  5709  002EFC  0E00               	movlw	0
  5710  002EFE  0100               	movlb	0	; () banked
  5711  002F00  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  5712  002F02  0E0A               	movlw	10
  5713  002F04  6F98               	movwf	___awdiv@divisor& (0+255),b
  5714  002F06  C106  F096         	movff	fround@prec,___awdiv@dividend
  5715  002F0A  0100               	movlb	0	; () banked
  5716  002F0C  6B97               	clrf	(___awdiv@dividend+1)& (0+255),b
  5717  002F0E  EC49  F024         	call	___awdiv	;wreg free
  5718  002F12  0E09               	movlw	9
  5719  002F14  0100               	movlb	0	; () banked
  5720  002F16  2596               	addwf	?___awdiv& (0+255),w,b
  5721  002F18  0100               	movlb	0	; () banked
  5722  002F1A  6F9E               	movwf	___wmul@multiplier& (0+255),b
  5723  002F1C  0E00               	movlw	0
  5724  002F1E  0100               	movlb	0	; () banked
  5725  002F20  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  5726  002F22  0100               	movlb	0	; () banked
  5727  002F24  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  5728  002F26  0E00               	movlw	0
  5729  002F28  0100               	movlb	0	; () banked
  5730  002F2A  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5731  002F2C  0E03               	movlw	3
  5732  002F2E  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  5733  002F30  EC82  F029         	call	___wmul	;wreg free
  5734  002F34  0E17               	movlw	low __npowers_
  5735  002F36  0100               	movlb	0	; () banked
  5736  002F38  259E               	addwf	?___wmul& (0+255),w,b
  5737  002F3A  6EF6               	movwf	tblptrl,c
  5738  002F3C  0E7F               	movlw	high __npowers_
  5739  002F3E  0100               	movlb	0	; () banked
  5740  002F40  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  5741  002F42  6EF7               	movwf	tblptrh,c
  5742  002F44                     	if	0	;There are less than 3 active tblptr bytes
  5743  002F44                     	endif
  5744  002F44  0009               	tblrd		*+
  5745  002F46  CFF5 F0A4          	movff	tablat,___ftmul@f1
  5746  002F4A  0009               	tblrd		*+
  5747  002F4C  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  5748  002F50  000A               	tblrd		*-
  5749  002F52  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  5750  002F56  EC43  F01E         	call	___ftmul	;wreg free
  5751  002F5A  C0A4  F103         	movff	?___ftmul,_fround$1648
  5752  002F5E  C0A5  F104         	movff	?___ftmul+1,_fround$1648+1
  5753  002F62  C0A6  F105         	movff	?___ftmul+2,_fround$1648+2
  5754                           
  5755                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5756  002F66  C103  F0A4         	movff	_fround$1648,___ftmul@f1
  5757  002F6A  C104  F0A5         	movff	_fround$1648+1,___ftmul@f1+1
  5758  002F6E  C105  F0A6         	movff	_fround$1648+2,___ftmul@f1+2
  5759  002F72  0E00               	movlw	0
  5760  002F74  0100               	movlb	0	; () banked
  5761  002F76  6FA7               	movwf	___ftmul@f2& (0+255),b
  5762  002F78  0E00               	movlw	0
  5763  002F7A  0100               	movlb	0	; () banked
  5764  002F7C  6FA8               	movwf	(___ftmul@f2+1)& (0+255),b
  5765  002F7E  0E3F               	movlw	63
  5766  002F80  0100               	movlb	0	; () banked
  5767  002F82  6FA9               	movwf	(___ftmul@f2+2)& (0+255),b
  5768  002F84  EC43  F01E         	call	___ftmul	;wreg free
  5769  002F88  D787               	goto	L5
  5770  002F8A                     l6214:
  5771                           
  5772                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5773  002F8A  0101               	movlb	1	; () banked
  5774  002F8C  5106               	movf	fround@prec& (0+255),w,b
  5775  002F8E  0D03               	mullw	3
  5776  002F90  0E17               	movlw	low __npowers_
  5777  002F92  24F3               	addwf	prodl,w,c
  5778  002F94  6EF6               	movwf	tblptrl,c
  5779  002F96  0E7F               	movlw	high __npowers_
  5780  002F98  20F4               	addwfc	prodh,w,c
  5781  002F9A  6EF7               	movwf	tblptrh,c
  5782  002F9C                     	if	0	;There are less than 3 active tblptr bytes
  5783  002F9C                     	endif
  5784  002F9C  0009               	tblrd		*+
  5785  002F9E  CFF5 F0A4          	movff	tablat,___ftmul@f1
  5786  002FA2  0009               	tblrd		*+
  5787  002FA4  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  5788  002FA8  000A               	tblrd		*-
  5789  002FAA  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  5790  002FAE  0E00               	movlw	0
  5791  002FB0  0100               	movlb	0	; () banked
  5792  002FB2  6FA7               	movwf	___ftmul@f2& (0+255),b
  5793  002FB4  0E00               	movlw	0
  5794  002FB6  0100               	movlb	0	; () banked
  5795  002FB8  6FA8               	movwf	(___ftmul@f2+1)& (0+255),b
  5796  002FBA  0E3F               	movlw	63
  5797  002FBC  0100               	movlb	0	; () banked
  5798  002FBE  6FA9               	movwf	(___ftmul@f2+2)& (0+255),b
  5799  002FC0  EC43  F01E         	call	___ftmul	;wreg free
  5800  002FC4  C0A4  F0B3         	movff	?___ftmul,?_fround
  5801  002FC8  C0A5  F0B4         	movff	?___ftmul+1,?_fround+1
  5802  002FCC  C0A6  F0B5         	movff	?___ftmul+2,?_fround+2
  5803  002FD0  0012               	return	
  5804  002FD2                     __end_of_fround:
  5805                           	opt stack 0
  5806                           tosu	equ	0xFFF
  5807                           tosh	equ	0xFFE
  5808                           tosl	equ	0xFFD
  5809                           pclath	equ	0xFFA
  5810                           tblptru	equ	0xFF8
  5811                           tblptrh	equ	0xFF7
  5812                           tblptrl	equ	0xFF6
  5813                           tablat	equ	0xFF5
  5814                           prodh	equ	0xFF4
  5815                           prodl	equ	0xFF3
  5816                           intcon	equ	0xFF2
  5817                           postinc0	equ	0xFEE
  5818                           wreg	equ	0xFE8
  5819                           postdec1	equ	0xFE5
  5820                           fsr1l	equ	0xFE1
  5821                           indf2	equ	0xFDF
  5822                           postinc2	equ	0xFDE
  5823                           postdec2	equ	0xFDD
  5824                           fsr2h	equ	0xFDA
  5825                           fsr2l	equ	0xFD9
  5826                           status	equ	0xFD8
  5827                           
  5828 ;; *************** function ___wmul *****************
  5829 ;; Defined at:
  5830 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul16.c"
  5831 ;; Parameters:    Size  Location     Type
  5832 ;;  multiplier      2   62[BANK0 ] unsigned int 
  5833 ;;  multiplicand    2   64[BANK0 ] unsigned int 
  5834 ;; Auto vars:     Size  Location     Type
  5835 ;;  product         2   66[BANK0 ] unsigned int 
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  2   62[BANK0 ] unsigned int 
  5838 ;; Registers used:
  5839 ;;		wreg, status,2, status,0, prodl, prodh
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5845 ;;      Params:         0       4       0       0       0       0       0
  5846 ;;      Locals:         0       2       0       0       0       0       0
  5847 ;;      Temps:          0       0       0       0       0       0       0
  5848 ;;      Totals:         0       6       0       0       0       0       0
  5849 ;;Total ram usage:        6 bytes
  5850 ;; Hardware stack levels used:    1
  5851 ;; Hardware stack levels required when called:    7
  5852 ;; This function calls:
  5853 ;;		Nothing
  5854 ;; This function is called by:
  5855 ;;		_fround
  5856 ;;		_scale
  5857 ;;		__doprnt
  5858 ;; This function uses a non-reentrant model
  5859 ;;
  5860                           
  5861                           	psect	text8
  5862  005304                     __ptext8:
  5863                           	opt stack 0
  5864  005304                     ___wmul:
  5865                           	opt stack 20
  5866                           
  5867                           ;incstack = 0
  5868  005304  0100               	movlb	0	; () banked
  5869  005306  519E               	movf	___wmul@multiplier& (0+255),w,b
  5870  005308  0100               	movlb	0	; () banked
  5871  00530A  03A0               	mulwf	___wmul@multiplicand& (0+255),b
  5872  00530C  CFF3 F0A2          	movff	prodl,___wmul@product
  5873  005310  CFF4 F0A3          	movff	prodh,___wmul@product+1
  5874  005314  0100               	movlb	0	; () banked
  5875  005316  519E               	movf	___wmul@multiplier& (0+255),w,b
  5876  005318  0100               	movlb	0	; () banked
  5877  00531A  03A1               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5878  00531C  50F3               	movf	prodl,w,c
  5879  00531E  0100               	movlb	0	; () banked
  5880  005320  27A3               	addwf	(___wmul@product+1)& (0+255),f,b
  5881  005322  0100               	movlb	0	; () banked
  5882  005324  519F               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5883  005326  0100               	movlb	0	; () banked
  5884  005328  03A0               	mulwf	___wmul@multiplicand& (0+255),b
  5885  00532A  50F3               	movf	prodl,w,c
  5886  00532C  0100               	movlb	0	; () banked
  5887  00532E  27A3               	addwf	(___wmul@product+1)& (0+255),f,b
  5888                           
  5889                           ; BSR set to: 0
  5890  005330  C0A2  F09E         	movff	___wmul@product,?___wmul
  5891  005334  C0A3  F09F         	movff	___wmul@product+1,?___wmul+1
  5892  005338  0012               	return	
  5893  00533A                     __end_of___wmul:
  5894                           	opt stack 0
  5895                           tosu	equ	0xFFF
  5896                           tosh	equ	0xFFE
  5897                           tosl	equ	0xFFD
  5898                           pclath	equ	0xFFA
  5899                           tblptru	equ	0xFF8
  5900                           tblptrh	equ	0xFF7
  5901                           tblptrl	equ	0xFF6
  5902                           tablat	equ	0xFF5
  5903                           prodh	equ	0xFF4
  5904                           prodl	equ	0xFF3
  5905                           intcon	equ	0xFF2
  5906                           postinc0	equ	0xFEE
  5907                           wreg	equ	0xFE8
  5908                           postdec1	equ	0xFE5
  5909                           fsr1l	equ	0xFE1
  5910                           indf2	equ	0xFDF
  5911                           postinc2	equ	0xFDE
  5912                           postdec2	equ	0xFDD
  5913                           fsr2h	equ	0xFDA
  5914                           fsr2l	equ	0xFD9
  5915                           status	equ	0xFD8
  5916                           
  5917 ;; *************** function ___ftmul *****************
  5918 ;; Defined at:
  5919 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftmul.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;  f1              3   68[BANK0 ] float 
  5922 ;;  f2              3   71[BANK0 ] float 
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;  f3_as_produc    3   78[BANK0 ] unsigned um
  5925 ;;  sign            1   82[BANK0 ] unsigned char 
  5926 ;;  cntr            1   81[BANK0 ] unsigned char 
  5927 ;;  exp             1   77[BANK0 ] unsigned char 
  5928 ;; Return value:  Size  Location     Type
  5929 ;;                  3   68[BANK0 ] float 
  5930 ;; Registers used:
  5931 ;;		wreg, status,2, status,0, cstack
  5932 ;; Tracked objects:
  5933 ;;		On entry : 0/0
  5934 ;;		On exit  : 0/0
  5935 ;;		Unchanged: 0/0
  5936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5937 ;;      Params:         0       6       0       0       0       0       0
  5938 ;;      Locals:         0       6       0       0       0       0       0
  5939 ;;      Temps:          0       3       0       0       0       0       0
  5940 ;;      Totals:         0      15       0       0       0       0       0
  5941 ;;Total ram usage:       15 bytes
  5942 ;; Hardware stack levels used:    1
  5943 ;; Hardware stack levels required when called:    8
  5944 ;; This function calls:
  5945 ;;		___ftpack
  5946 ;; This function is called by:
  5947 ;;		_fround
  5948 ;;		_scale
  5949 ;;		__doprnt
  5950 ;; This function uses a non-reentrant model
  5951 ;;
  5952                           
  5953                           	psect	text9
  5954  003C86                     __ptext9:
  5955                           	opt stack 0
  5956  003C86                     ___ftmul:
  5957                           	opt stack 19
  5958                           
  5959                           ; BSR set to: 0
  5960                           ;incstack = 0
  5961  003C86  C0A6  F0AA         	movff	___ftmul@f1+2,??___ftmul
  5962  003C8A  0100               	movlb	0	; () banked
  5963  003C8C  6BAB               	clrf	(??___ftmul+1)& (0+255),b
  5964  003C8E  6BAC               	clrf	(??___ftmul+2)& (0+255),b
  5965  003C90  0100               	movlb	0	; () banked
  5966  003C92  35A5               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  5967  003C94  0100               	movlb	0	; () banked
  5968  003C96  37AA               	rlcf	??___ftmul& (0+255),f,b
  5969  003C98  E301               	bnc	u8681
  5970  003C9A  81AB               	bsf	(??___ftmul+1)& (0+255),0,b
  5971  003C9C                     u8681:
  5972  003C9C  0100               	movlb	0	; () banked
  5973  003C9E  51AA               	movf	??___ftmul& (0+255),w,b
  5974  003CA0  0100               	movlb	0	; () banked
  5975  003CA2  6FAD               	movwf	___ftmul@exp& (0+255),b
  5976  003CA4  0100               	movlb	0	; () banked
  5977  003CA6  51AD               	movf	___ftmul@exp& (0+255),w,b
  5978  003CA8  A4D8               	btfss	status,2,c
  5979  003CAA  D00A               	goto	l6074
  5980                           
  5981                           ; BSR set to: 0
  5982  003CAC  0E00               	movlw	0
  5983  003CAE  0100               	movlb	0	; () banked
  5984  003CB0  6FA4               	movwf	?___ftmul& (0+255),b
  5985  003CB2  0E00               	movlw	0
  5986  003CB4  0100               	movlb	0	; () banked
  5987  003CB6  6FA5               	movwf	(?___ftmul+1)& (0+255),b
  5988  003CB8  0E00               	movlw	0
  5989  003CBA  0100               	movlb	0	; () banked
  5990  003CBC  6FA6               	movwf	(?___ftmul+2)& (0+255),b
  5991                           
  5992                           ; BSR set to: 0
  5993  003CBE  0012               	return	
  5994  003CC0                     l6074:
  5995                           
  5996                           ; BSR set to: 0
  5997  003CC0  C0A9  F0AA         	movff	___ftmul@f2+2,??___ftmul
  5998  003CC4  0100               	movlb	0	; () banked
  5999  003CC6  6BAB               	clrf	(??___ftmul+1)& (0+255),b
  6000  003CC8  6BAC               	clrf	(??___ftmul+2)& (0+255),b
  6001  003CCA  0100               	movlb	0	; () banked
  6002  003CCC  35A8               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  6003  003CCE  0100               	movlb	0	; () banked
  6004  003CD0  37AA               	rlcf	??___ftmul& (0+255),f,b
  6005  003CD2  E301               	bnc	u8701
  6006  003CD4  81AB               	bsf	(??___ftmul+1)& (0+255),0,b
  6007  003CD6                     u8701:
  6008  003CD6  0100               	movlb	0	; () banked
  6009  003CD8  51AA               	movf	??___ftmul& (0+255),w,b
  6010  003CDA  0100               	movlb	0	; () banked
  6011  003CDC  6FB2               	movwf	___ftmul@sign& (0+255),b
  6012  003CDE  0100               	movlb	0	; () banked
  6013  003CE0  51B2               	movf	___ftmul@sign& (0+255),w,b
  6014  003CE2  A4D8               	btfss	status,2,c
  6015  003CE4  D00A               	goto	l6080
  6016                           
  6017                           ; BSR set to: 0
  6018  003CE6  0E00               	movlw	0
  6019  003CE8  0100               	movlb	0	; () banked
  6020  003CEA  6FA4               	movwf	?___ftmul& (0+255),b
  6021  003CEC  0E00               	movlw	0
  6022  003CEE  0100               	movlb	0	; () banked
  6023  003CF0  6FA5               	movwf	(?___ftmul+1)& (0+255),b
  6024  003CF2  0E00               	movlw	0
  6025  003CF4  0100               	movlb	0	; () banked
  6026  003CF6  6FA6               	movwf	(?___ftmul+2)& (0+255),b
  6027                           
  6028                           ; BSR set to: 0
  6029  003CF8  0012               	return	
  6030  003CFA                     l6080:
  6031                           
  6032                           ; BSR set to: 0
  6033  003CFA  0100               	movlb	0	; () banked
  6034  003CFC  51B2               	movf	___ftmul@sign& (0+255),w,b
  6035  003CFE  0F7B               	addlw	123
  6036  003D00  0100               	movlb	0	; () banked
  6037  003D02  27AD               	addwf	___ftmul@exp& (0+255),f,b
  6038                           
  6039                           ; BSR set to: 0
  6040  003D04  C0A6  F0B2         	movff	___ftmul@f1+2,___ftmul@sign
  6041  003D08  0100               	movlb	0	; () banked
  6042  003D0A  51A9               	movf	(___ftmul@f2+2)& (0+255),w,b
  6043  003D0C  0100               	movlb	0	; () banked
  6044  003D0E  1BB2               	xorwf	___ftmul@sign& (0+255),f,b
  6045  003D10  0E80               	movlw	128
  6046  003D12  0100               	movlb	0	; () banked
  6047  003D14  17B2               	andwf	___ftmul@sign& (0+255),f,b
  6048                           
  6049                           ; BSR set to: 0
  6050  003D16  0100               	movlb	0	; () banked
  6051  003D18  8FA5               	bsf	(___ftmul@f1+1)& (0+255),7,b
  6052                           
  6053                           ; BSR set to: 0
  6054  003D1A  0100               	movlb	0	; () banked
  6055  003D1C  8FA8               	bsf	(___ftmul@f2+1)& (0+255),7,b
  6056                           
  6057                           ; BSR set to: 0
  6058  003D1E  0EFF               	movlw	255
  6059  003D20  0100               	movlb	0	; () banked
  6060  003D22  17A7               	andwf	___ftmul@f2& (0+255),f,b
  6061  003D24  0EFF               	movlw	255
  6062  003D26  0100               	movlb	0	; () banked
  6063  003D28  17A8               	andwf	(___ftmul@f2+1)& (0+255),f,b
  6064  003D2A  0E00               	movlw	0
  6065  003D2C  0100               	movlb	0	; () banked
  6066  003D2E  17A9               	andwf	(___ftmul@f2+2)& (0+255),f,b
  6067                           
  6068                           ; BSR set to: 0
  6069  003D30  0E00               	movlw	0
  6070  003D32  0100               	movlb	0	; () banked
  6071  003D34  6FAE               	movwf	___ftmul@f3_as_product& (0+255),b
  6072  003D36  0E00               	movlw	0
  6073  003D38  0100               	movlb	0	; () banked
  6074  003D3A  6FAF               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  6075  003D3C  0E00               	movlw	0
  6076  003D3E  0100               	movlb	0	; () banked
  6077  003D40  6FB0               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  6078                           
  6079                           ; BSR set to: 0
  6080  003D42  0E07               	movlw	7
  6081  003D44  0100               	movlb	0	; () banked
  6082  003D46  6FB1               	movwf	___ftmul@cntr& (0+255),b
  6083  003D48                     l6094:
  6084                           
  6085                           ; BSR set to: 0
  6086  003D48  0100               	movlb	0	; () banked
  6087  003D4A  A1A4               	btfss	___ftmul@f1& (0+255),0,b
  6088  003D4C  D00C               	goto	l6098
  6089                           
  6090                           ; BSR set to: 0
  6091  003D4E  0100               	movlb	0	; () banked
  6092  003D50  51A7               	movf	___ftmul@f2& (0+255),w,b
  6093  003D52  0100               	movlb	0	; () banked
  6094  003D54  27AE               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6095  003D56  0100               	movlb	0	; () banked
  6096  003D58  51A8               	movf	(___ftmul@f2+1)& (0+255),w,b
  6097  003D5A  0100               	movlb	0	; () banked
  6098  003D5C  23AF               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6099  003D5E  0100               	movlb	0	; () banked
  6100  003D60  51A9               	movf	(___ftmul@f2+2)& (0+255),w,b
  6101  003D62  0100               	movlb	0	; () banked
  6102  003D64  23B0               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6103  003D66                     l6098:
  6104                           
  6105                           ; BSR set to: 0
  6106  003D66  0100               	movlb	0	; () banked
  6107  003D68  90D8               	bcf	status,0,c
  6108  003D6A  33A6               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6109  003D6C  33A5               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6110  003D6E  33A4               	rrcf	___ftmul@f1& (0+255),f,b
  6111  003D70  0100               	movlb	0	; () banked
  6112  003D72  90D8               	bcf	status,0,c
  6113  003D74  37A7               	rlcf	___ftmul@f2& (0+255),f,b
  6114  003D76  37A8               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  6115  003D78  37A9               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  6116                           
  6117                           ; BSR set to: 0
  6118  003D7A  0100               	movlb	0	; () banked
  6119  003D7C  2FB1               	decfsz	___ftmul@cntr& (0+255),f,b
  6120  003D7E  D7E4               	goto	l6094
  6121                           
  6122                           ; BSR set to: 0
  6123                           
  6124                           ; BSR set to: 0
  6125  003D80  0E09               	movlw	9
  6126  003D82  0100               	movlb	0	; () banked
  6127  003D84  6FB1               	movwf	___ftmul@cntr& (0+255),b
  6128  003D86                     l6104:
  6129                           
  6130                           ; BSR set to: 0
  6131  003D86  0100               	movlb	0	; () banked
  6132  003D88  A1A4               	btfss	___ftmul@f1& (0+255),0,b
  6133  003D8A  D00C               	goto	l6108
  6134                           
  6135                           ; BSR set to: 0
  6136  003D8C  0100               	movlb	0	; () banked
  6137  003D8E  51A7               	movf	___ftmul@f2& (0+255),w,b
  6138  003D90  0100               	movlb	0	; () banked
  6139  003D92  27AE               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6140  003D94  0100               	movlb	0	; () banked
  6141  003D96  51A8               	movf	(___ftmul@f2+1)& (0+255),w,b
  6142  003D98  0100               	movlb	0	; () banked
  6143  003D9A  23AF               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6144  003D9C  0100               	movlb	0	; () banked
  6145  003D9E  51A9               	movf	(___ftmul@f2+2)& (0+255),w,b
  6146  003DA0  0100               	movlb	0	; () banked
  6147  003DA2  23B0               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6148  003DA4                     l6108:
  6149                           
  6150                           ; BSR set to: 0
  6151  003DA4  0100               	movlb	0	; () banked
  6152  003DA6  90D8               	bcf	status,0,c
  6153  003DA8  33A6               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6154  003DAA  33A5               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6155  003DAC  33A4               	rrcf	___ftmul@f1& (0+255),f,b
  6156  003DAE  0100               	movlb	0	; () banked
  6157  003DB0  90D8               	bcf	status,0,c
  6158  003DB2  33B0               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  6159  003DB4  33AF               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  6160  003DB6  33AE               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  6161                           
  6162                           ; BSR set to: 0
  6163  003DB8  0100               	movlb	0	; () banked
  6164  003DBA  2FB1               	decfsz	___ftmul@cntr& (0+255),f,b
  6165  003DBC  D7E4               	goto	l6104
  6166                           
  6167                           ; BSR set to: 0
  6168                           
  6169                           ; BSR set to: 0
  6170  003DBE  C0AE  F090         	movff	___ftmul@f3_as_product,___ftpack@arg
  6171  003DC2  C0AF  F091         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6172  003DC6  C0B0  F092         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6173  003DCA  C0AD  F093         	movff	___ftmul@exp,___ftpack@exp
  6174  003DCE  C0B2  F094         	movff	___ftmul@sign,___ftpack@sign
  6175  003DD2  ECF8  F021         	call	___ftpack	;wreg free
  6176  003DD6  C090  F0A4         	movff	?___ftpack,?___ftmul
  6177  003DDA  C091  F0A5         	movff	?___ftpack+1,?___ftmul+1
  6178  003DDE  C092  F0A6         	movff	?___ftpack+2,?___ftmul+2
  6179  003DE2  0012               	return	
  6180  003DE4                     __end_of___ftmul:
  6181                           	opt stack 0
  6182                           tosu	equ	0xFFF
  6183                           tosh	equ	0xFFE
  6184                           tosl	equ	0xFFD
  6185                           pclath	equ	0xFFA
  6186                           tblptru	equ	0xFF8
  6187                           tblptrh	equ	0xFF7
  6188                           tblptrl	equ	0xFF6
  6189                           tablat	equ	0xFF5
  6190                           prodh	equ	0xFF4
  6191                           prodl	equ	0xFF3
  6192                           intcon	equ	0xFF2
  6193                           postinc0	equ	0xFEE
  6194                           wreg	equ	0xFE8
  6195                           postdec1	equ	0xFE5
  6196                           fsr1l	equ	0xFE1
  6197                           indf2	equ	0xFDF
  6198                           postinc2	equ	0xFDE
  6199                           postdec2	equ	0xFDD
  6200                           fsr2h	equ	0xFDA
  6201                           fsr2l	equ	0xFD9
  6202                           status	equ	0xFD8
  6203                           
  6204 ;; *************** function ___awmod *****************
  6205 ;; Defined at:
  6206 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awmod.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;  dividend        2   48[BANK0 ] int 
  6209 ;;  divisor         2   50[BANK0 ] int 
  6210 ;; Auto vars:     Size  Location     Type
  6211 ;;  sign            1   53[BANK0 ] unsigned char 
  6212 ;;  counter         1   52[BANK0 ] unsigned char 
  6213 ;; Return value:  Size  Location     Type
  6214 ;;                  2   48[BANK0 ] int 
  6215 ;; Registers used:
  6216 ;;		wreg, status,2, status,0
  6217 ;; Tracked objects:
  6218 ;;		On entry : 0/0
  6219 ;;		On exit  : 0/0
  6220 ;;		Unchanged: 0/0
  6221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6222 ;;      Params:         0       4       0       0       0       0       0
  6223 ;;      Locals:         0       2       0       0       0       0       0
  6224 ;;      Temps:          0       0       0       0       0       0       0
  6225 ;;      Totals:         0       6       0       0       0       0       0
  6226 ;;Total ram usage:        6 bytes
  6227 ;; Hardware stack levels used:    1
  6228 ;; Hardware stack levels required when called:    7
  6229 ;; This function calls:
  6230 ;;		Nothing
  6231 ;; This function is called by:
  6232 ;;		_fround
  6233 ;;		_scale
  6234 ;; This function uses a non-reentrant model
  6235 ;;
  6236                           
  6237                           	psect	text10
  6238  004ABA                     __ptext10:
  6239                           	opt stack 0
  6240  004ABA                     ___awmod:
  6241                           	opt stack 20
  6242                           
  6243                           ;incstack = 0
  6244  004ABA  0E00               	movlw	0
  6245  004ABC  0100               	movlb	0	; () banked
  6246  004ABE  6F95               	movwf	___awmod@sign& (0+255),b
  6247                           
  6248                           ; BSR set to: 0
  6249  004AC0  0100               	movlb	0	; () banked
  6250  004AC2  AF91               	btfss	(___awmod@dividend+1)& (0+255),7,b
  6251  004AC4  D008               	goto	l6168
  6252                           
  6253                           ; BSR set to: 0
  6254  004AC6  0100               	movlb	0	; () banked
  6255  004AC8  6D90               	negf	___awmod@dividend& (0+255),b
  6256  004ACA  1F91               	comf	(___awmod@dividend+1)& (0+255),f,b
  6257  004ACC  B0D8               	btfsc	status,0,c
  6258  004ACE  2B91               	incf	(___awmod@dividend+1)& (0+255),f,b
  6259                           
  6260                           ; BSR set to: 0
  6261  004AD0  0E01               	movlw	1
  6262  004AD2  0100               	movlb	0	; () banked
  6263  004AD4  6F95               	movwf	___awmod@sign& (0+255),b
  6264  004AD6                     l6168:
  6265                           
  6266                           ; BSR set to: 0
  6267  004AD6  0100               	movlb	0	; () banked
  6268  004AD8  AF93               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6269  004ADA  D005               	goto	l6172
  6270                           
  6271                           ; BSR set to: 0
  6272  004ADC  0100               	movlb	0	; () banked
  6273  004ADE  6D92               	negf	___awmod@divisor& (0+255),b
  6274  004AE0  1F93               	comf	(___awmod@divisor+1)& (0+255),f,b
  6275  004AE2  B0D8               	btfsc	status,0,c
  6276  004AE4  2B93               	incf	(___awmod@divisor+1)& (0+255),f,b
  6277  004AE6                     l6172:
  6278                           
  6279                           ; BSR set to: 0
  6280  004AE6  0100               	movlb	0	; () banked
  6281  004AE8  5192               	movf	___awmod@divisor& (0+255),w,b
  6282  004AEA  0100               	movlb	0	; () banked
  6283  004AEC  1193               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6284  004AEE  B4D8               	btfsc	status,2,c
  6285  004AF0  D026               	goto	l6188
  6286                           
  6287                           ; BSR set to: 0
  6288  004AF2  0E01               	movlw	1
  6289  004AF4  0100               	movlb	0	; () banked
  6290  004AF6  6F94               	movwf	___awmod@counter& (0+255),b
  6291  004AF8  D006               	goto	l6178
  6292  004AFA                     l6176:
  6293                           
  6294                           ; BSR set to: 0
  6295  004AFA  0100               	movlb	0	; () banked
  6296  004AFC  90D8               	bcf	status,0,c
  6297  004AFE  3792               	rlcf	___awmod@divisor& (0+255),f,b
  6298  004B00  3793               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6299  004B02  0100               	movlb	0	; () banked
  6300  004B04  2B94               	incf	___awmod@counter& (0+255),f,b
  6301  004B06                     l6178:
  6302                           
  6303                           ; BSR set to: 0
  6304  004B06  0100               	movlb	0	; () banked
  6305  004B08  AF93               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6306  004B0A  D7F7               	goto	l6176
  6307  004B0C                     l6180:
  6308                           
  6309                           ; BSR set to: 0
  6310  004B0C  0100               	movlb	0	; () banked
  6311  004B0E  5192               	movf	___awmod@divisor& (0+255),w,b
  6312  004B10  0100               	movlb	0	; () banked
  6313  004B12  5D90               	subwf	___awmod@dividend& (0+255),w,b
  6314  004B14  0100               	movlb	0	; () banked
  6315  004B16  5193               	movf	(___awmod@divisor+1)& (0+255),w,b
  6316  004B18  0100               	movlb	0	; () banked
  6317  004B1A  5991               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6318  004B1C  A0D8               	btfss	status,0,c
  6319  004B1E  D008               	goto	l6184
  6320                           
  6321                           ; BSR set to: 0
  6322  004B20  0100               	movlb	0	; () banked
  6323  004B22  5192               	movf	___awmod@divisor& (0+255),w,b
  6324  004B24  0100               	movlb	0	; () banked
  6325  004B26  5F90               	subwf	___awmod@dividend& (0+255),f,b
  6326  004B28  0100               	movlb	0	; () banked
  6327  004B2A  5193               	movf	(___awmod@divisor+1)& (0+255),w,b
  6328  004B2C  0100               	movlb	0	; () banked
  6329  004B2E  5B91               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6330  004B30                     l6184:
  6331                           
  6332                           ; BSR set to: 0
  6333  004B30  0100               	movlb	0	; () banked
  6334  004B32  90D8               	bcf	status,0,c
  6335  004B34  3393               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6336  004B36  3392               	rrcf	___awmod@divisor& (0+255),f,b
  6337                           
  6338                           ; BSR set to: 0
  6339  004B38  0100               	movlb	0	; () banked
  6340  004B3A  2F94               	decfsz	___awmod@counter& (0+255),f,b
  6341  004B3C  D7E7               	goto	l6180
  6342  004B3E                     l6188:
  6343                           
  6344                           ; BSR set to: 0
  6345  004B3E  0100               	movlb	0	; () banked
  6346  004B40  5195               	movf	___awmod@sign& (0+255),w,b
  6347  004B42  0100               	movlb	0	; () banked
  6348  004B44  B4D8               	btfsc	status,2,c
  6349  004B46  D005               	goto	l6192
  6350                           
  6351                           ; BSR set to: 0
  6352  004B48  0100               	movlb	0	; () banked
  6353  004B4A  6D90               	negf	___awmod@dividend& (0+255),b
  6354  004B4C  1F91               	comf	(___awmod@dividend+1)& (0+255),f,b
  6355  004B4E  B0D8               	btfsc	status,0,c
  6356  004B50  2B91               	incf	(___awmod@dividend+1)& (0+255),f,b
  6357  004B52                     l6192:
  6358                           
  6359                           ; BSR set to: 0
  6360  004B52  C090  F090         	movff	___awmod@dividend,?___awmod
  6361  004B56  C091  F091         	movff	___awmod@dividend+1,?___awmod+1
  6362  004B5A  0012               	return	
  6363  004B5C                     __end_of___awmod:
  6364                           	opt stack 0
  6365                           tosu	equ	0xFFF
  6366                           tosh	equ	0xFFE
  6367                           tosl	equ	0xFFD
  6368                           pclath	equ	0xFFA
  6369                           tblptru	equ	0xFF8
  6370                           tblptrh	equ	0xFF7
  6371                           tblptrl	equ	0xFF6
  6372                           tablat	equ	0xFF5
  6373                           prodh	equ	0xFF4
  6374                           prodl	equ	0xFF3
  6375                           intcon	equ	0xFF2
  6376                           postinc0	equ	0xFEE
  6377                           wreg	equ	0xFE8
  6378                           postdec1	equ	0xFE5
  6379                           fsr1l	equ	0xFE1
  6380                           indf2	equ	0xFDF
  6381                           postinc2	equ	0xFDE
  6382                           postdec2	equ	0xFDD
  6383                           fsr2h	equ	0xFDA
  6384                           fsr2l	equ	0xFD9
  6385                           status	equ	0xFD8
  6386                           
  6387 ;; *************** function ___awdiv *****************
  6388 ;; Defined at:
  6389 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awdiv.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;  dividend        2   54[BANK0 ] int 
  6392 ;;  divisor         2   56[BANK0 ] int 
  6393 ;; Auto vars:     Size  Location     Type
  6394 ;;  quotient        2   60[BANK0 ] int 
  6395 ;;  sign            1   59[BANK0 ] unsigned char 
  6396 ;;  counter         1   58[BANK0 ] unsigned char 
  6397 ;; Return value:  Size  Location     Type
  6398 ;;                  2   54[BANK0 ] int 
  6399 ;; Registers used:
  6400 ;;		wreg, status,2, status,0
  6401 ;; Tracked objects:
  6402 ;;		On entry : 0/0
  6403 ;;		On exit  : 0/0
  6404 ;;		Unchanged: 0/0
  6405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6406 ;;      Params:         0       4       0       0       0       0       0
  6407 ;;      Locals:         0       4       0       0       0       0       0
  6408 ;;      Temps:          0       0       0       0       0       0       0
  6409 ;;      Totals:         0       8       0       0       0       0       0
  6410 ;;Total ram usage:        8 bytes
  6411 ;; Hardware stack levels used:    1
  6412 ;; Hardware stack levels required when called:    7
  6413 ;; This function calls:
  6414 ;;		Nothing
  6415 ;; This function is called by:
  6416 ;;		_fround
  6417 ;;		_scale
  6418 ;;		__doprnt
  6419 ;; This function uses a non-reentrant model
  6420 ;;
  6421                           
  6422                           	psect	text11
  6423  004892                     __ptext11:
  6424                           	opt stack 0
  6425  004892                     ___awdiv:
  6426                           	opt stack 20
  6427                           
  6428                           ; BSR set to: 0
  6429                           ;incstack = 0
  6430  004892  0E00               	movlw	0
  6431  004894  0100               	movlb	0	; () banked
  6432  004896  6F9B               	movwf	___awdiv@sign& (0+255),b
  6433                           
  6434                           ; BSR set to: 0
  6435  004898  0100               	movlb	0	; () banked
  6436  00489A  AF99               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6437  00489C  D008               	goto	l6124
  6438                           
  6439                           ; BSR set to: 0
  6440  00489E  0100               	movlb	0	; () banked
  6441  0048A0  6D98               	negf	___awdiv@divisor& (0+255),b
  6442  0048A2  1F99               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6443  0048A4  B0D8               	btfsc	status,0,c
  6444  0048A6  2B99               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6445                           
  6446                           ; BSR set to: 0
  6447  0048A8  0E01               	movlw	1
  6448  0048AA  0100               	movlb	0	; () banked
  6449  0048AC  6F9B               	movwf	___awdiv@sign& (0+255),b
  6450  0048AE                     l6124:
  6451                           
  6452                           ; BSR set to: 0
  6453  0048AE  0100               	movlb	0	; () banked
  6454  0048B0  AF97               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6455  0048B2  D008               	goto	l6130
  6456                           
  6457                           ; BSR set to: 0
  6458  0048B4  0100               	movlb	0	; () banked
  6459  0048B6  6D96               	negf	___awdiv@dividend& (0+255),b
  6460  0048B8  1F97               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6461  0048BA  B0D8               	btfsc	status,0,c
  6462  0048BC  2B97               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6463                           
  6464                           ; BSR set to: 0
  6465  0048BE  0E01               	movlw	1
  6466  0048C0  0100               	movlb	0	; () banked
  6467  0048C2  1B9B               	xorwf	___awdiv@sign& (0+255),f,b
  6468  0048C4                     l6130:
  6469                           
  6470                           ; BSR set to: 0
  6471  0048C4  0E00               	movlw	0
  6472  0048C6  0100               	movlb	0	; () banked
  6473  0048C8  6F9D               	movwf	(___awdiv@quotient+1)& (0+255),b
  6474  0048CA  0E00               	movlw	0
  6475  0048CC  6F9C               	movwf	___awdiv@quotient& (0+255),b
  6476                           
  6477                           ; BSR set to: 0
  6478  0048CE  0100               	movlb	0	; () banked
  6479  0048D0  5198               	movf	___awdiv@divisor& (0+255),w,b
  6480  0048D2  0100               	movlb	0	; () banked
  6481  0048D4  1199               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6482  0048D6  B4D8               	btfsc	status,2,c
  6483  0048D8  D02C               	goto	l6152
  6484                           
  6485                           ; BSR set to: 0
  6486  0048DA  0E01               	movlw	1
  6487  0048DC  0100               	movlb	0	; () banked
  6488  0048DE  6F9A               	movwf	___awdiv@counter& (0+255),b
  6489  0048E0  D006               	goto	l6138
  6490  0048E2                     l6136:
  6491                           
  6492                           ; BSR set to: 0
  6493  0048E2  0100               	movlb	0	; () banked
  6494  0048E4  90D8               	bcf	status,0,c
  6495  0048E6  3798               	rlcf	___awdiv@divisor& (0+255),f,b
  6496  0048E8  3799               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6497  0048EA  0100               	movlb	0	; () banked
  6498  0048EC  2B9A               	incf	___awdiv@counter& (0+255),f,b
  6499  0048EE                     l6138:
  6500                           
  6501                           ; BSR set to: 0
  6502  0048EE  0100               	movlb	0	; () banked
  6503  0048F0  AF99               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6504  0048F2  D7F7               	goto	l6136
  6505  0048F4                     l6140:
  6506                           
  6507                           ; BSR set to: 0
  6508  0048F4  0100               	movlb	0	; () banked
  6509  0048F6  90D8               	bcf	status,0,c
  6510  0048F8  379C               	rlcf	___awdiv@quotient& (0+255),f,b
  6511  0048FA  379D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6512                           
  6513                           ; BSR set to: 0
  6514  0048FC  0100               	movlb	0	; () banked
  6515  0048FE  5198               	movf	___awdiv@divisor& (0+255),w,b
  6516  004900  0100               	movlb	0	; () banked
  6517  004902  5D96               	subwf	___awdiv@dividend& (0+255),w,b
  6518  004904  0100               	movlb	0	; () banked
  6519  004906  5199               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6520  004908  0100               	movlb	0	; () banked
  6521  00490A  5997               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6522  00490C  A0D8               	btfss	status,0,c
  6523  00490E  D00A               	goto	l6148
  6524                           
  6525                           ; BSR set to: 0
  6526  004910  0100               	movlb	0	; () banked
  6527  004912  5198               	movf	___awdiv@divisor& (0+255),w,b
  6528  004914  0100               	movlb	0	; () banked
  6529  004916  5F96               	subwf	___awdiv@dividend& (0+255),f,b
  6530  004918  0100               	movlb	0	; () banked
  6531  00491A  5199               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6532  00491C  0100               	movlb	0	; () banked
  6533  00491E  5B97               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6534                           
  6535                           ; BSR set to: 0
  6536  004920  0100               	movlb	0	; () banked
  6537  004922  819C               	bsf	___awdiv@quotient& (0+255),0,b
  6538  004924                     l6148:
  6539                           
  6540                           ; BSR set to: 0
  6541  004924  0100               	movlb	0	; () banked
  6542  004926  90D8               	bcf	status,0,c
  6543  004928  3399               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6544  00492A  3398               	rrcf	___awdiv@divisor& (0+255),f,b
  6545                           
  6546                           ; BSR set to: 0
  6547  00492C  0100               	movlb	0	; () banked
  6548  00492E  2F9A               	decfsz	___awdiv@counter& (0+255),f,b
  6549  004930  D7E1               	goto	l6140
  6550  004932                     l6152:
  6551                           
  6552                           ; BSR set to: 0
  6553  004932  0100               	movlb	0	; () banked
  6554  004934  519B               	movf	___awdiv@sign& (0+255),w,b
  6555  004936  0100               	movlb	0	; () banked
  6556  004938  B4D8               	btfsc	status,2,c
  6557  00493A  D005               	goto	l6156
  6558                           
  6559                           ; BSR set to: 0
  6560  00493C  0100               	movlb	0	; () banked
  6561  00493E  6D9C               	negf	___awdiv@quotient& (0+255),b
  6562  004940  1F9D               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6563  004942  B0D8               	btfsc	status,0,c
  6564  004944  2B9D               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6565  004946                     l6156:
  6566                           
  6567                           ; BSR set to: 0
  6568  004946  C09C  F096         	movff	___awdiv@quotient,?___awdiv
  6569  00494A  C09D  F097         	movff	___awdiv@quotient+1,?___awdiv+1
  6570  00494E  0012               	return	
  6571  004950                     __end_of___awdiv:
  6572                           	opt stack 0
  6573                           tosu	equ	0xFFF
  6574                           tosh	equ	0xFFE
  6575                           tosl	equ	0xFFD
  6576                           pclath	equ	0xFFA
  6577                           tblptru	equ	0xFF8
  6578                           tblptrh	equ	0xFF7
  6579                           tblptrl	equ	0xFF6
  6580                           tablat	equ	0xFF5
  6581                           prodh	equ	0xFF4
  6582                           prodl	equ	0xFF3
  6583                           intcon	equ	0xFF2
  6584                           postinc0	equ	0xFEE
  6585                           wreg	equ	0xFE8
  6586                           postdec1	equ	0xFE5
  6587                           fsr1l	equ	0xFE1
  6588                           indf2	equ	0xFDF
  6589                           postinc2	equ	0xFDE
  6590                           postdec2	equ	0xFDD
  6591                           fsr2h	equ	0xFDA
  6592                           fsr2l	equ	0xFD9
  6593                           status	equ	0xFD8
  6594                           
  6595 ;; *************** function __tdiv_to_l_ *****************
  6596 ;; Defined at:
  6597 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftdivl.c"
  6598 ;; Parameters:    Size  Location     Type
  6599 ;;  f1              3   48[BANK0 ] float 
  6600 ;;  f2              3   51[BANK0 ] float 
  6601 ;; Auto vars:     Size  Location     Type
  6602 ;;  quot            4   57[BANK0 ] unsigned long 
  6603 ;;  exp1            1   62[BANK0 ] unsigned char 
  6604 ;;  cntr            1   61[BANK0 ] unsigned char 
  6605 ;; Return value:  Size  Location     Type
  6606 ;;                  4   48[BANK0 ] unsigned long 
  6607 ;; Registers used:
  6608 ;;		wreg, status,2, status,0
  6609 ;; Tracked objects:
  6610 ;;		On entry : 0/0
  6611 ;;		On exit  : 0/0
  6612 ;;		Unchanged: 0/0
  6613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6614 ;;      Params:         0       6       0       0       0       0       0
  6615 ;;      Locals:         0       6       0       0       0       0       0
  6616 ;;      Temps:          0       3       0       0       0       0       0
  6617 ;;      Totals:         0      15       0       0       0       0       0
  6618 ;;Total ram usage:       15 bytes
  6619 ;; Hardware stack levels used:    1
  6620 ;; Hardware stack levels required when called:    7
  6621 ;; This function calls:
  6622 ;;		Nothing
  6623 ;; This function is called by:
  6624 ;;		__doprnt
  6625 ;; This function uses a non-reentrant model
  6626 ;;
  6627                           
  6628                           	psect	text12
  6629  0037D0                     __ptext12:
  6630                           	opt stack 0
  6631  0037D0                     __tdiv_to_l_:
  6632                           	opt stack 21
  6633                           
  6634                           ; BSR set to: 0
  6635                           ;incstack = 0
  6636  0037D0  C092  F096         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  6637  0037D4  0100               	movlb	0	; () banked
  6638  0037D6  6B97               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  6639  0037D8  6B98               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  6640  0037DA  0100               	movlb	0	; () banked
  6641  0037DC  3591               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6642  0037DE  0100               	movlb	0	; () banked
  6643  0037E0  3796               	rlcf	??__tdiv_to_l_& (0+255),f,b
  6644  0037E2  E301               	bnc	u5861
  6645  0037E4  8197               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  6646  0037E6                     u5861:
  6647  0037E6  0100               	movlb	0	; () banked
  6648  0037E8  5196               	movf	??__tdiv_to_l_& (0+255),w,b
  6649  0037EA  0100               	movlb	0	; () banked
  6650  0037EC  6F9E               	movwf	__tdiv_to_l_@exp1& (0+255),b
  6651  0037EE  0100               	movlb	0	; () banked
  6652  0037F0  519E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6653  0037F2  A4D8               	btfss	status,2,c
  6654  0037F4  D00A               	goto	l4558
  6655                           
  6656                           ; BSR set to: 0
  6657  0037F6  0E00               	movlw	0
  6658  0037F8  0100               	movlb	0	; () banked
  6659  0037FA  6F90               	movwf	?__tdiv_to_l_& (0+255),b
  6660  0037FC  0E00               	movlw	0
  6661  0037FE  6F91               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6662  003800  0E00               	movlw	0
  6663  003802  6F92               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6664  003804  0E00               	movlw	0
  6665  003806  6F93               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6666                           
  6667                           ; BSR set to: 0
  6668  003808  0012               	return	
  6669  00380A                     l4558:
  6670                           
  6671                           ; BSR set to: 0
  6672  00380A  C095  F096         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  6673  00380E  0100               	movlb	0	; () banked
  6674  003810  6B97               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  6675  003812  6B98               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  6676  003814  0100               	movlb	0	; () banked
  6677  003816  3594               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6678  003818  0100               	movlb	0	; () banked
  6679  00381A  3796               	rlcf	??__tdiv_to_l_& (0+255),f,b
  6680  00381C  E301               	bnc	u5881
  6681  00381E  8197               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  6682  003820                     u5881:
  6683  003820  0100               	movlb	0	; () banked
  6684  003822  5196               	movf	??__tdiv_to_l_& (0+255),w,b
  6685  003824  0100               	movlb	0	; () banked
  6686  003826  6F9D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6687  003828  0100               	movlb	0	; () banked
  6688  00382A  519D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6689  00382C  A4D8               	btfss	status,2,c
  6690  00382E  D00A               	goto	l4564
  6691                           
  6692                           ; BSR set to: 0
  6693  003830  0E00               	movlw	0
  6694  003832  0100               	movlb	0	; () banked
  6695  003834  6F90               	movwf	?__tdiv_to_l_& (0+255),b
  6696  003836  0E00               	movlw	0
  6697  003838  6F91               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6698  00383A  0E00               	movlw	0
  6699  00383C  6F92               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6700  00383E  0E00               	movlw	0
  6701  003840  6F93               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6702                           
  6703                           ; BSR set to: 0
  6704  003842  0012               	return	
  6705  003844                     l4564:
  6706                           
  6707                           ; BSR set to: 0
  6708  003844  0100               	movlb	0	; () banked
  6709  003846  8F91               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  6710                           
  6711                           ; BSR set to: 0
  6712  003848  0EFF               	movlw	255
  6713  00384A  0100               	movlb	0	; () banked
  6714  00384C  1790               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  6715  00384E  0EFF               	movlw	255
  6716  003850  0100               	movlb	0	; () banked
  6717  003852  1791               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6718  003854  0E00               	movlw	0
  6719  003856  0100               	movlb	0	; () banked
  6720  003858  1792               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6721  00385A  0100               	movlb	0	; () banked
  6722  00385C  8F94               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  6723                           
  6724                           ; BSR set to: 0
  6725  00385E  0EFF               	movlw	255
  6726  003860  0100               	movlb	0	; () banked
  6727  003862  1793               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  6728  003864  0EFF               	movlw	255
  6729  003866  0100               	movlb	0	; () banked
  6730  003868  1794               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  6731  00386A  0E00               	movlw	0
  6732  00386C  0100               	movlb	0	; () banked
  6733  00386E  1795               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  6734                           
  6735                           ; BSR set to: 0
  6736  003870  0E00               	movlw	0
  6737  003872  0100               	movlb	0	; () banked
  6738  003874  6F99               	movwf	__tdiv_to_l_@quot& (0+255),b
  6739  003876  0E00               	movlw	0
  6740  003878  6F9A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  6741  00387A  0E00               	movlw	0
  6742  00387C  6F9B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  6743  00387E  0E00               	movlw	0
  6744  003880  6F9C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  6745                           
  6746                           ; BSR set to: 0
  6747  003882  0E7F               	movlw	127
  6748  003884  0100               	movlb	0	; () banked
  6749  003886  5F9E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6750                           
  6751                           ; BSR set to: 0
  6752  003888  0100               	movlb	0	; () banked
  6753  00388A  519D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6754  00388C  0F98               	addlw	152
  6755  00388E  0100               	movlb	0	; () banked
  6756  003890  5F9E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6757                           
  6758                           ; BSR set to: 0
  6759  003892  0E18               	movlw	24
  6760  003894  0100               	movlb	0	; () banked
  6761  003896  6F9D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6762  003898                     l834:
  6763                           
  6764                           ; BSR set to: 0
  6765  003898  0100               	movlb	0	; () banked
  6766  00389A  90D8               	bcf	status,0,c
  6767  00389C  3799               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6768  00389E  379A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6769  0038A0  379B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6770  0038A2  379C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6771                           
  6772                           ; BSR set to: 0
  6773  0038A4  0100               	movlb	0	; () banked
  6774  0038A6  5193               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6775  0038A8  0100               	movlb	0	; () banked
  6776  0038AA  5D90               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  6777  0038AC  0100               	movlb	0	; () banked
  6778  0038AE  5194               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6779  0038B0  0100               	movlb	0	; () banked
  6780  0038B2  5991               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6781  0038B4  0100               	movlb	0	; () banked
  6782  0038B6  5195               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6783  0038B8  0100               	movlb	0	; () banked
  6784  0038BA  5992               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  6785  0038BC  A0D8               	btfss	status,0,c
  6786  0038BE  D00E               	goto	l835
  6787                           
  6788                           ; BSR set to: 0
  6789  0038C0  0100               	movlb	0	; () banked
  6790  0038C2  5193               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6791  0038C4  0100               	movlb	0	; () banked
  6792  0038C6  5F90               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  6793  0038C8  0100               	movlb	0	; () banked
  6794  0038CA  5194               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6795  0038CC  0100               	movlb	0	; () banked
  6796  0038CE  5B91               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6797  0038D0  0100               	movlb	0	; () banked
  6798  0038D2  5195               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6799  0038D4  0100               	movlb	0	; () banked
  6800  0038D6  5B92               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6801                           
  6802                           ; BSR set to: 0
  6803  0038D8  0100               	movlb	0	; () banked
  6804  0038DA  8199               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  6805  0038DC                     l835:
  6806                           
  6807                           ; BSR set to: 0
  6808  0038DC  0100               	movlb	0	; () banked
  6809  0038DE  90D8               	bcf	status,0,c
  6810  0038E0  3790               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  6811  0038E2  3791               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6812  0038E4  3792               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6813                           
  6814                           ; BSR set to: 0
  6815  0038E6  0100               	movlb	0	; () banked
  6816  0038E8  2F9D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  6817  0038EA  D7D6               	goto	l834
  6818                           
  6819                           ; BSR set to: 0
  6820                           
  6821                           ; BSR set to: 0
  6822  0038EC  0100               	movlb	0	; () banked
  6823  0038EE  AF9E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  6824  0038F0  D01A               	goto	l4598
  6825                           
  6826                           ; BSR set to: 0
  6827  0038F2  0100               	movlb	0	; () banked
  6828  0038F4  519E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6829  0038F6  0A80               	xorlw	128
  6830  0038F8  0F97               	addlw	151
  6831  0038FA  B0D8               	btfsc	status,0,c
  6832  0038FC  D00A               	goto	l4594
  6833                           
  6834                           ; BSR set to: 0
  6835  0038FE  0E00               	movlw	0
  6836  003900  0100               	movlb	0	; () banked
  6837  003902  6F90               	movwf	?__tdiv_to_l_& (0+255),b
  6838  003904  0E00               	movlw	0
  6839  003906  6F91               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6840  003908  0E00               	movlw	0
  6841  00390A  6F92               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6842  00390C  0E00               	movlw	0
  6843  00390E  6F93               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6844                           
  6845                           ; BSR set to: 0
  6846  003910  0012               	return	
  6847  003912                     l4594:
  6848                           
  6849                           ; BSR set to: 0
  6850  003912  0100               	movlb	0	; () banked
  6851  003914  90D8               	bcf	status,0,c
  6852  003916  339C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6853  003918  339B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6854  00391A  339A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6855  00391C  3399               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  6856                           
  6857                           ; BSR set to: 0
  6858  00391E  0100               	movlb	0	; () banked
  6859  003920  3F9E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  6860  003922  D7F7               	goto	l4594
  6861                           
  6862                           ; BSR set to: 0
  6863  003924  D01B               	goto	l841
  6864  003926                     l4598:
  6865                           
  6866                           ; BSR set to: 0
  6867  003926  0E17               	movlw	23
  6868  003928  0100               	movlb	0	; () banked
  6869  00392A  659E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  6870  00392C  D012               	goto	l4606
  6871                           
  6872                           ; BSR set to: 0
  6873  00392E  0E00               	movlw	0
  6874  003930  0100               	movlb	0	; () banked
  6875  003932  6F90               	movwf	?__tdiv_to_l_& (0+255),b
  6876  003934  0E00               	movlw	0
  6877  003936  6F91               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6878  003938  0E00               	movlw	0
  6879  00393A  6F92               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6880  00393C  0E00               	movlw	0
  6881  00393E  6F93               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6882                           
  6883                           ; BSR set to: 0
  6884  003940  0012               	return	
  6885  003942                     l4604:
  6886                           
  6887                           ; BSR set to: 0
  6888  003942  0100               	movlb	0	; () banked
  6889  003944  90D8               	bcf	status,0,c
  6890  003946  3799               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6891  003948  379A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6892  00394A  379B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6893  00394C  379C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6894  00394E  0100               	movlb	0	; () banked
  6895  003950  079E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  6896  003952                     l4606:
  6897                           
  6898                           ; BSR set to: 0
  6899  003952  0100               	movlb	0	; () banked
  6900  003954  519E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6901  003956  0100               	movlb	0	; () banked
  6902  003958  A4D8               	btfss	status,2,c
  6903  00395A  D7F3               	goto	l4604
  6904  00395C                     l841:
  6905                           
  6906                           ; BSR set to: 0
  6907  00395C  C099  F090         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  6908  003960  C09A  F091         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  6909  003964  C09B  F092         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  6910  003968  C09C  F093         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  6911                           
  6912                           ; BSR set to: 0
  6913  00396C  0012               	return		;funcret
  6914  00396E                     __end_of__tdiv_to_l_:
  6915                           	opt stack 0
  6916                           tosu	equ	0xFFF
  6917                           tosh	equ	0xFFE
  6918                           tosl	equ	0xFFD
  6919                           pclath	equ	0xFFA
  6920                           tblptru	equ	0xFF8
  6921                           tblptrh	equ	0xFF7
  6922                           tblptrl	equ	0xFF6
  6923                           tablat	equ	0xFF5
  6924                           prodh	equ	0xFF4
  6925                           prodl	equ	0xFF3
  6926                           intcon	equ	0xFF2
  6927                           postinc0	equ	0xFEE
  6928                           wreg	equ	0xFE8
  6929                           postdec1	equ	0xFE5
  6930                           fsr1l	equ	0xFE1
  6931                           indf2	equ	0xFDF
  6932                           postinc2	equ	0xFDE
  6933                           postdec2	equ	0xFDD
  6934                           fsr2h	equ	0xFDA
  6935                           fsr2l	equ	0xFD9
  6936                           status	equ	0xFD8
  6937                           
  6938 ;; *************** function __div_to_l_ *****************
  6939 ;; Defined at:
  6940 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\fldivl.c"
  6941 ;; Parameters:    Size  Location     Type
  6942 ;;  f1              3   48[BANK0 ] unsigned long 
  6943 ;;  f2              3   51[BANK0 ] unsigned long 
  6944 ;; Auto vars:     Size  Location     Type
  6945 ;;  quot            4   54[BANK0 ] unsigned long 
  6946 ;;  exp1            1   59[BANK0 ] unsigned char 
  6947 ;;  cntr            1   58[BANK0 ] unsigned char 
  6948 ;; Return value:  Size  Location     Type
  6949 ;;                  4   48[BANK0 ] unsigned long 
  6950 ;; Registers used:
  6951 ;;		wreg, status,2, status,0
  6952 ;; Tracked objects:
  6953 ;;		On entry : 0/0
  6954 ;;		On exit  : 0/0
  6955 ;;		Unchanged: 0/0
  6956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6957 ;;      Params:         0       6       0       0       0       0       0
  6958 ;;      Locals:         0       6       0       0       0       0       0
  6959 ;;      Temps:          0       0       0       0       0       0       0
  6960 ;;      Totals:         0      12       0       0       0       0       0
  6961 ;;Total ram usage:       12 bytes
  6962 ;; Hardware stack levels used:    1
  6963 ;; Hardware stack levels required when called:    7
  6964 ;; This function calls:
  6965 ;;		Nothing
  6966 ;; This function is called by:
  6967 ;;		__doprnt
  6968 ;; This function uses a non-reentrant model
  6969 ;;
  6970                           
  6971                           	psect	text13
  6972  003AFE                     __ptext13:
  6973                           	opt stack 0
  6974  003AFE                     __div_to_l_:
  6975                           	opt stack 21
  6976                           
  6977                           ; BSR set to: 0
  6978                           ;incstack = 0
  6979  003AFE  0100               	movlb	0	; () banked
  6980  003B00  3592               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  6981  003B02  3593               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  6982  003B04  0100               	movlb	0	; () banked
  6983  003B06  6F9B               	movwf	__div_to_l_@exp1& (0+255),b
  6984  003B08  0100               	movlb	0	; () banked
  6985  003B0A  519B               	movf	__div_to_l_@exp1& (0+255),w,b
  6986  003B0C  A4D8               	btfss	status,2,c
  6987  003B0E  D00A               	goto	l4614
  6988                           
  6989                           ; BSR set to: 0
  6990  003B10  0E00               	movlw	0
  6991  003B12  0100               	movlb	0	; () banked
  6992  003B14  6F90               	movwf	?__div_to_l_& (0+255),b
  6993  003B16  0E00               	movlw	0
  6994  003B18  6F91               	movwf	(?__div_to_l_+1)& (0+255),b
  6995  003B1A  0E00               	movlw	0
  6996  003B1C  6F92               	movwf	(?__div_to_l_+2)& (0+255),b
  6997  003B1E  0E00               	movlw	0
  6998  003B20  6F93               	movwf	(?__div_to_l_+3)& (0+255),b
  6999                           
  7000                           ; BSR set to: 0
  7001  003B22  0012               	return	
  7002  003B24                     l4614:
  7003                           
  7004                           ; BSR set to: 0
  7005  003B24  0100               	movlb	0	; () banked
  7006  003B26  3595               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  7007  003B28  3596               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  7008  003B2A  0100               	movlb	0	; () banked
  7009  003B2C  6F9A               	movwf	__div_to_l_@cntr& (0+255),b
  7010  003B2E  0100               	movlb	0	; () banked
  7011  003B30  519A               	movf	__div_to_l_@cntr& (0+255),w,b
  7012  003B32  A4D8               	btfss	status,2,c
  7013  003B34  D00A               	goto	l4620
  7014                           
  7015                           ; BSR set to: 0
  7016  003B36  0E00               	movlw	0
  7017  003B38  0100               	movlb	0	; () banked
  7018  003B3A  6F90               	movwf	?__div_to_l_& (0+255),b
  7019  003B3C  0E00               	movlw	0
  7020  003B3E  6F91               	movwf	(?__div_to_l_+1)& (0+255),b
  7021  003B40  0E00               	movlw	0
  7022  003B42  6F92               	movwf	(?__div_to_l_+2)& (0+255),b
  7023  003B44  0E00               	movlw	0
  7024  003B46  6F93               	movwf	(?__div_to_l_+3)& (0+255),b
  7025                           
  7026                           ; BSR set to: 0
  7027  003B48  0012               	return	
  7028  003B4A                     l4620:
  7029                           
  7030                           ; BSR set to: 0
  7031  003B4A  0100               	movlb	0	; () banked
  7032  003B4C  8F92               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  7033                           
  7034                           ; BSR set to: 0
  7035  003B4E  0EFF               	movlw	255
  7036  003B50  0100               	movlb	0	; () banked
  7037  003B52  1790               	andwf	__div_to_l_@f1& (0+255),f,b
  7038  003B54  0EFF               	movlw	255
  7039  003B56  1791               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  7040  003B58  0EFF               	movlw	255
  7041  003B5A  1792               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  7042  003B5C  0E00               	movlw	0
  7043  003B5E  1793               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  7044                           
  7045                           ; BSR set to: 0
  7046  003B60  0100               	movlb	0	; () banked
  7047  003B62  8F95               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  7048  003B64  0EFF               	movlw	255
  7049  003B66  0100               	movlb	0	; () banked
  7050  003B68  1793               	andwf	__div_to_l_@f2& (0+255),f,b
  7051  003B6A  0EFF               	movlw	255
  7052  003B6C  1794               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  7053  003B6E  0EFF               	movlw	255
  7054  003B70  1795               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  7055  003B72  0E00               	movlw	0
  7056  003B74  1796               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  7057                           
  7058                           ; BSR set to: 0
  7059  003B76  0E00               	movlw	0
  7060  003B78  0100               	movlb	0	; () banked
  7061  003B7A  6F96               	movwf	__div_to_l_@quot& (0+255),b
  7062  003B7C  0E00               	movlw	0
  7063  003B7E  6F97               	movwf	(__div_to_l_@quot+1)& (0+255),b
  7064  003B80  0E00               	movlw	0
  7065  003B82  6F98               	movwf	(__div_to_l_@quot+2)& (0+255),b
  7066  003B84  0E00               	movlw	0
  7067  003B86  6F99               	movwf	(__div_to_l_@quot+3)& (0+255),b
  7068                           
  7069                           ; BSR set to: 0
  7070  003B88  0E7F               	movlw	127
  7071  003B8A  0100               	movlb	0	; () banked
  7072  003B8C  5F9B               	subwf	__div_to_l_@exp1& (0+255),f,b
  7073                           
  7074                           ; BSR set to: 0
  7075  003B8E  0100               	movlb	0	; () banked
  7076  003B90  519A               	movf	__div_to_l_@cntr& (0+255),w,b
  7077  003B92  0FA0               	addlw	160
  7078  003B94  0100               	movlb	0	; () banked
  7079  003B96  5F9B               	subwf	__div_to_l_@exp1& (0+255),f,b
  7080                           
  7081                           ; BSR set to: 0
  7082  003B98  0E20               	movlw	32
  7083  003B9A  0100               	movlb	0	; () banked
  7084  003B9C  6F9A               	movwf	__div_to_l_@cntr& (0+255),b
  7085  003B9E                     l4634:
  7086                           
  7087                           ; BSR set to: 0
  7088  003B9E  0100               	movlb	0	; () banked
  7089  003BA0  90D8               	bcf	status,0,c
  7090  003BA2  3796               	rlcf	__div_to_l_@quot& (0+255),f,b
  7091  003BA4  3797               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7092  003BA6  3798               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7093  003BA8  3799               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7094                           
  7095                           ; BSR set to: 0
  7096  003BAA  0100               	movlb	0	; () banked
  7097  003BAC  5193               	movf	__div_to_l_@f2& (0+255),w,b
  7098  003BAE  0100               	movlb	0	; () banked
  7099  003BB0  5D90               	subwf	__div_to_l_@f1& (0+255),w,b
  7100  003BB2  0100               	movlb	0	; () banked
  7101  003BB4  5194               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7102  003BB6  0100               	movlb	0	; () banked
  7103  003BB8  5991               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  7104  003BBA  0100               	movlb	0	; () banked
  7105  003BBC  5195               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7106  003BBE  0100               	movlb	0	; () banked
  7107  003BC0  5992               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  7108  003BC2  0100               	movlb	0	; () banked
  7109  003BC4  5196               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7110  003BC6  0100               	movlb	0	; () banked
  7111  003BC8  5993               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  7112  003BCA  A0D8               	btfss	status,0,c
  7113  003BCC  D012               	goto	l4642
  7114                           
  7115                           ; BSR set to: 0
  7116  003BCE  0100               	movlb	0	; () banked
  7117  003BD0  5193               	movf	__div_to_l_@f2& (0+255),w,b
  7118  003BD2  0100               	movlb	0	; () banked
  7119  003BD4  5F90               	subwf	__div_to_l_@f1& (0+255),f,b
  7120  003BD6  0100               	movlb	0	; () banked
  7121  003BD8  5194               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7122  003BDA  0100               	movlb	0	; () banked
  7123  003BDC  5B91               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  7124  003BDE  0100               	movlb	0	; () banked
  7125  003BE0  5195               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7126  003BE2  0100               	movlb	0	; () banked
  7127  003BE4  5B92               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  7128  003BE6  0100               	movlb	0	; () banked
  7129  003BE8  5196               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7130  003BEA  0100               	movlb	0	; () banked
  7131  003BEC  5B93               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  7132                           
  7133                           ; BSR set to: 0
  7134  003BEE  0100               	movlb	0	; () banked
  7135  003BF0  8196               	bsf	__div_to_l_@quot& (0+255),0,b
  7136  003BF2                     l4642:
  7137                           
  7138                           ; BSR set to: 0
  7139  003BF2  0100               	movlb	0	; () banked
  7140  003BF4  90D8               	bcf	status,0,c
  7141  003BF6  3790               	rlcf	__div_to_l_@f1& (0+255),f,b
  7142  003BF8  3791               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  7143  003BFA  3792               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  7144  003BFC  3793               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  7145                           
  7146                           ; BSR set to: 0
  7147  003BFE  0100               	movlb	0	; () banked
  7148  003C00  2F9A               	decfsz	__div_to_l_@cntr& (0+255),f,b
  7149  003C02  D7CD               	goto	l4634
  7150                           
  7151                           ; BSR set to: 0
  7152                           
  7153                           ; BSR set to: 0
  7154  003C04  0100               	movlb	0	; () banked
  7155  003C06  AF9B               	btfss	__div_to_l_@exp1& (0+255),7,b
  7156  003C08  D01A               	goto	l4658
  7157                           
  7158                           ; BSR set to: 0
  7159  003C0A  0100               	movlb	0	; () banked
  7160  003C0C  519B               	movf	__div_to_l_@exp1& (0+255),w,b
  7161  003C0E  0A80               	xorlw	128
  7162  003C10  0F9F               	addlw	159
  7163  003C12  B0D8               	btfsc	status,0,c
  7164  003C14  D00A               	goto	l4654
  7165                           
  7166                           ; BSR set to: 0
  7167  003C16  0E00               	movlw	0
  7168  003C18  0100               	movlb	0	; () banked
  7169  003C1A  6F90               	movwf	?__div_to_l_& (0+255),b
  7170  003C1C  0E00               	movlw	0
  7171  003C1E  6F91               	movwf	(?__div_to_l_+1)& (0+255),b
  7172  003C20  0E00               	movlw	0
  7173  003C22  6F92               	movwf	(?__div_to_l_+2)& (0+255),b
  7174  003C24  0E00               	movlw	0
  7175  003C26  6F93               	movwf	(?__div_to_l_+3)& (0+255),b
  7176                           
  7177                           ; BSR set to: 0
  7178  003C28  0012               	return	
  7179  003C2A                     l4654:
  7180                           
  7181                           ; BSR set to: 0
  7182  003C2A  0100               	movlb	0	; () banked
  7183  003C2C  90D8               	bcf	status,0,c
  7184  003C2E  3399               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  7185  003C30  3398               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  7186  003C32  3397               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  7187  003C34  3396               	rrcf	__div_to_l_@quot& (0+255),f,b
  7188                           
  7189                           ; BSR set to: 0
  7190  003C36  0100               	movlb	0	; () banked
  7191  003C38  3F9B               	incfsz	__div_to_l_@exp1& (0+255),f,b
  7192  003C3A  D7F7               	goto	l4654
  7193                           
  7194                           ; BSR set to: 0
  7195  003C3C  D01B               	goto	l737
  7196  003C3E                     l4658:
  7197                           
  7198                           ; BSR set to: 0
  7199  003C3E  0E1F               	movlw	31
  7200  003C40  0100               	movlb	0	; () banked
  7201  003C42  659B               	cpfsgt	__div_to_l_@exp1& (0+255),b
  7202  003C44  D012               	goto	l4666
  7203                           
  7204                           ; BSR set to: 0
  7205  003C46  0E00               	movlw	0
  7206  003C48  0100               	movlb	0	; () banked
  7207  003C4A  6F90               	movwf	?__div_to_l_& (0+255),b
  7208  003C4C  0E00               	movlw	0
  7209  003C4E  6F91               	movwf	(?__div_to_l_+1)& (0+255),b
  7210  003C50  0E00               	movlw	0
  7211  003C52  6F92               	movwf	(?__div_to_l_+2)& (0+255),b
  7212  003C54  0E00               	movlw	0
  7213  003C56  6F93               	movwf	(?__div_to_l_+3)& (0+255),b
  7214                           
  7215                           ; BSR set to: 0
  7216  003C58  0012               	return	
  7217  003C5A                     l4664:
  7218                           
  7219                           ; BSR set to: 0
  7220  003C5A  0100               	movlb	0	; () banked
  7221  003C5C  90D8               	bcf	status,0,c
  7222  003C5E  3796               	rlcf	__div_to_l_@quot& (0+255),f,b
  7223  003C60  3797               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7224  003C62  3798               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7225  003C64  3799               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7226  003C66  0100               	movlb	0	; () banked
  7227  003C68  079B               	decf	__div_to_l_@exp1& (0+255),f,b
  7228  003C6A                     l4666:
  7229                           
  7230                           ; BSR set to: 0
  7231  003C6A  0100               	movlb	0	; () banked
  7232  003C6C  519B               	movf	__div_to_l_@exp1& (0+255),w,b
  7233  003C6E  0100               	movlb	0	; () banked
  7234  003C70  A4D8               	btfss	status,2,c
  7235  003C72  D7F3               	goto	l4664
  7236  003C74                     l737:
  7237                           
  7238                           ; BSR set to: 0
  7239  003C74  C096  F090         	movff	__div_to_l_@quot,?__div_to_l_
  7240  003C78  C097  F091         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  7241  003C7C  C098  F092         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  7242  003C80  C099  F093         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  7243                           
  7244                           ; BSR set to: 0
  7245  003C84  0012               	return		;funcret
  7246  003C86                     __end_of__div_to_l_:
  7247                           	opt stack 0
  7248                           tosu	equ	0xFFF
  7249                           tosh	equ	0xFFE
  7250                           tosl	equ	0xFFD
  7251                           pclath	equ	0xFFA
  7252                           tblptru	equ	0xFF8
  7253                           tblptrh	equ	0xFF7
  7254                           tblptrl	equ	0xFF6
  7255                           tablat	equ	0xFF5
  7256                           prodh	equ	0xFF4
  7257                           prodl	equ	0xFF3
  7258                           intcon	equ	0xFF2
  7259                           postinc0	equ	0xFEE
  7260                           wreg	equ	0xFE8
  7261                           postdec1	equ	0xFE5
  7262                           fsr1l	equ	0xFE1
  7263                           indf2	equ	0xFDF
  7264                           postinc2	equ	0xFDE
  7265                           postdec2	equ	0xFDD
  7266                           fsr2h	equ	0xFDA
  7267                           fsr2l	equ	0xFD9
  7268                           status	equ	0xFD8
  7269                           
  7270 ;; *************** function ___lltoft *****************
  7271 ;; Defined at:
  7272 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lltoft.c"
  7273 ;; Parameters:    Size  Location     Type
  7274 ;;  c               4   56[BANK0 ] unsigned long 
  7275 ;; Auto vars:     Size  Location     Type
  7276 ;;  exp             1   64[BANK0 ] unsigned char 
  7277 ;; Return value:  Size  Location     Type
  7278 ;;                  3   56[BANK0 ] float 
  7279 ;; Registers used:
  7280 ;;		wreg, status,2, status,0, cstack
  7281 ;; Tracked objects:
  7282 ;;		On entry : 0/0
  7283 ;;		On exit  : 0/0
  7284 ;;		Unchanged: 0/0
  7285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7286 ;;      Params:         0       4       0       0       0       0       0
  7287 ;;      Locals:         0       1       0       0       0       0       0
  7288 ;;      Temps:          0       4       0       0       0       0       0
  7289 ;;      Totals:         0       9       0       0       0       0       0
  7290 ;;Total ram usage:        9 bytes
  7291 ;; Hardware stack levels used:    1
  7292 ;; Hardware stack levels required when called:    8
  7293 ;; This function calls:
  7294 ;;		___ftpack
  7295 ;; This function is called by:
  7296 ;;		__doprnt
  7297 ;; This function uses a non-reentrant model
  7298 ;;
  7299                           
  7300                           	psect	text14
  7301  004D8C                     __ptext14:
  7302                           	opt stack 0
  7303  004D8C                     ___lltoft:
  7304                           	opt stack 20
  7305                           
  7306                           ; BSR set to: 0
  7307                           ;incstack = 0
  7308  004D8C  0E8E               	movlw	142
  7309  004D8E  0100               	movlb	0	; () banked
  7310  004D90  6FA0               	movwf	___lltoft@exp& (0+255),b
  7311  004D92  D008               	goto	l6314
  7312  004D94                     l6312:
  7313                           
  7314                           ; BSR set to: 0
  7315  004D94  0100               	movlb	0	; () banked
  7316  004D96  90D8               	bcf	status,0,c
  7317  004D98  339B               	rrcf	(___lltoft@c+3)& (0+255),f,b
  7318  004D9A  339A               	rrcf	(___lltoft@c+2)& (0+255),f,b
  7319  004D9C  3399               	rrcf	(___lltoft@c+1)& (0+255),f,b
  7320  004D9E  3398               	rrcf	___lltoft@c& (0+255),f,b
  7321  004DA0  0100               	movlb	0	; () banked
  7322  004DA2  2BA0               	incf	___lltoft@exp& (0+255),f,b
  7323  004DA4                     l6314:
  7324                           
  7325                           ; BSR set to: 0
  7326  004DA4  0E00               	movlw	0
  7327  004DA6  0100               	movlb	0	; () banked
  7328  004DA8  1598               	andwf	___lltoft@c& (0+255),w,b
  7329  004DAA  0100               	movlb	0	; () banked
  7330  004DAC  6F9C               	movwf	??___lltoft& (0+255),b
  7331  004DAE  0E00               	movlw	0
  7332  004DB0  0100               	movlb	0	; () banked
  7333  004DB2  1599               	andwf	(___lltoft@c+1)& (0+255),w,b
  7334  004DB4  0100               	movlb	0	; () banked
  7335  004DB6  6F9D               	movwf	(??___lltoft+1)& (0+255),b
  7336  004DB8  0E00               	movlw	0
  7337  004DBA  0100               	movlb	0	; () banked
  7338  004DBC  159A               	andwf	(___lltoft@c+2)& (0+255),w,b
  7339  004DBE  0100               	movlb	0	; () banked
  7340  004DC0  6F9E               	movwf	(??___lltoft+2)& (0+255),b
  7341  004DC2  0EFF               	movlw	255
  7342  004DC4  0100               	movlb	0	; () banked
  7343  004DC6  159B               	andwf	(___lltoft@c+3)& (0+255),w,b
  7344  004DC8  0100               	movlb	0	; () banked
  7345  004DCA  6F9F               	movwf	(??___lltoft+3)& (0+255),b
  7346  004DCC  0100               	movlb	0	; () banked
  7347  004DCE  519C               	movf	??___lltoft& (0+255),w,b
  7348  004DD0  0100               	movlb	0	; () banked
  7349  004DD2  119D               	iorwf	(??___lltoft+1)& (0+255),w,b
  7350  004DD4  0100               	movlb	0	; () banked
  7351  004DD6  119E               	iorwf	(??___lltoft+2)& (0+255),w,b
  7352  004DD8  0100               	movlb	0	; () banked
  7353  004DDA  119F               	iorwf	(??___lltoft+3)& (0+255),w,b
  7354  004DDC  A4D8               	btfss	status,2,c
  7355  004DDE  D7DA               	goto	l6312
  7356                           
  7357                           ; BSR set to: 0
  7358                           
  7359                           ; BSR set to: 0
  7360  004DE0  C098  F090         	movff	___lltoft@c,___ftpack@arg
  7361  004DE4  C099  F091         	movff	___lltoft@c+1,___ftpack@arg+1
  7362  004DE8  C09A  F092         	movff	___lltoft@c+2,___ftpack@arg+2
  7363  004DEC  C0A0  F093         	movff	___lltoft@exp,___ftpack@exp
  7364  004DF0  0E00               	movlw	0
  7365  004DF2  0100               	movlb	0	; () banked
  7366  004DF4  6F94               	movwf	___ftpack@sign& (0+255),b
  7367  004DF6  ECF8  F021         	call	___ftpack	;wreg free
  7368  004DFA  C090  F098         	movff	?___ftpack,?___lltoft
  7369  004DFE  C091  F099         	movff	?___ftpack+1,?___lltoft+1
  7370  004E02  C092  F09A         	movff	?___ftpack+2,?___lltoft+2
  7371  004E06  0012               	return	
  7372  004E08                     __end_of___lltoft:
  7373                           	opt stack 0
  7374                           tosu	equ	0xFFF
  7375                           tosh	equ	0xFFE
  7376                           tosl	equ	0xFFD
  7377                           pclath	equ	0xFFA
  7378                           tblptru	equ	0xFF8
  7379                           tblptrh	equ	0xFF7
  7380                           tblptrl	equ	0xFF6
  7381                           tablat	equ	0xFF5
  7382                           prodh	equ	0xFF4
  7383                           prodl	equ	0xFF3
  7384                           intcon	equ	0xFF2
  7385                           postinc0	equ	0xFEE
  7386                           wreg	equ	0xFE8
  7387                           postdec1	equ	0xFE5
  7388                           fsr1l	equ	0xFE1
  7389                           indf2	equ	0xFDF
  7390                           postinc2	equ	0xFDE
  7391                           postdec2	equ	0xFDD
  7392                           fsr2h	equ	0xFDA
  7393                           fsr2l	equ	0xFD9
  7394                           status	equ	0xFD8
  7395                           
  7396 ;; *************** function ___llmod *****************
  7397 ;; Defined at:
  7398 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\llmod.c"
  7399 ;; Parameters:    Size  Location     Type
  7400 ;;  dividend        4   61[BANK0 ] unsigned long 
  7401 ;;  divisor         4   65[BANK0 ] unsigned long 
  7402 ;; Auto vars:     Size  Location     Type
  7403 ;;  counter         1   69[BANK0 ] unsigned char 
  7404 ;; Return value:  Size  Location     Type
  7405 ;;                  4   61[BANK0 ] unsigned long 
  7406 ;; Registers used:
  7407 ;;		wreg, status,2, status,0
  7408 ;; Tracked objects:
  7409 ;;		On entry : 0/0
  7410 ;;		On exit  : 0/0
  7411 ;;		Unchanged: 0/0
  7412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7413 ;;      Params:         0       8       0       0       0       0       0
  7414 ;;      Locals:         0       1       0       0       0       0       0
  7415 ;;      Temps:          0       0       0       0       0       0       0
  7416 ;;      Totals:         0       9       0       0       0       0       0
  7417 ;;Total ram usage:        9 bytes
  7418 ;; Hardware stack levels used:    1
  7419 ;; Hardware stack levels required when called:    7
  7420 ;; This function calls:
  7421 ;;		Nothing
  7422 ;; This function is called by:
  7423 ;;		__doprnt
  7424 ;; This function uses a non-reentrant model
  7425 ;;
  7426                           
  7427                           	psect	text15
  7428  004B5C                     __ptext15:
  7429                           	opt stack 0
  7430  004B5C                     ___llmod:
  7431                           	opt stack 21
  7432                           
  7433                           ;incstack = 0
  7434  004B5C  0100               	movlb	0	; () banked
  7435  004B5E  51A1               	movf	___llmod@divisor& (0+255),w,b
  7436  004B60  0100               	movlb	0	; () banked
  7437  004B62  11A2               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  7438  004B64  0100               	movlb	0	; () banked
  7439  004B66  11A3               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  7440  004B68  0100               	movlb	0	; () banked
  7441  004B6A  11A4               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  7442  004B6C  B4D8               	btfsc	status,2,c
  7443  004B6E  D03A               	goto	l948
  7444                           
  7445                           ; BSR set to: 0
  7446  004B70  0E01               	movlw	1
  7447  004B72  0100               	movlb	0	; () banked
  7448  004B74  6FA5               	movwf	___llmod@counter& (0+255),b
  7449  004B76  D008               	goto	l4772
  7450  004B78                     l4770:
  7451                           
  7452                           ; BSR set to: 0
  7453  004B78  0100               	movlb	0	; () banked
  7454  004B7A  90D8               	bcf	status,0,c
  7455  004B7C  37A1               	rlcf	___llmod@divisor& (0+255),f,b
  7456  004B7E  37A2               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  7457  004B80  37A3               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  7458  004B82  37A4               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  7459  004B84  0100               	movlb	0	; () banked
  7460  004B86  2BA5               	incf	___llmod@counter& (0+255),f,b
  7461  004B88                     l4772:
  7462                           
  7463                           ; BSR set to: 0
  7464  004B88  0100               	movlb	0	; () banked
  7465  004B8A  AFA4               	btfss	(___llmod@divisor+3)& (0+255),7,b
  7466  004B8C  D7F5               	goto	l4770
  7467  004B8E                     l4774:
  7468                           
  7469                           ; BSR set to: 0
  7470  004B8E  0100               	movlb	0	; () banked
  7471  004B90  51A1               	movf	___llmod@divisor& (0+255),w,b
  7472  004B92  0100               	movlb	0	; () banked
  7473  004B94  5D9D               	subwf	___llmod@dividend& (0+255),w,b
  7474  004B96  0100               	movlb	0	; () banked
  7475  004B98  51A2               	movf	(___llmod@divisor+1)& (0+255),w,b
  7476  004B9A  0100               	movlb	0	; () banked
  7477  004B9C  599E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  7478  004B9E  0100               	movlb	0	; () banked
  7479  004BA0  51A3               	movf	(___llmod@divisor+2)& (0+255),w,b
  7480  004BA2  0100               	movlb	0	; () banked
  7481  004BA4  599F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  7482  004BA6  0100               	movlb	0	; () banked
  7483  004BA8  51A4               	movf	(___llmod@divisor+3)& (0+255),w,b
  7484  004BAA  0100               	movlb	0	; () banked
  7485  004BAC  59A0               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  7486  004BAE  A0D8               	btfss	status,0,c
  7487  004BB0  D010               	goto	l4778
  7488                           
  7489                           ; BSR set to: 0
  7490  004BB2  0100               	movlb	0	; () banked
  7491  004BB4  51A1               	movf	___llmod@divisor& (0+255),w,b
  7492  004BB6  0100               	movlb	0	; () banked
  7493  004BB8  5F9D               	subwf	___llmod@dividend& (0+255),f,b
  7494  004BBA  0100               	movlb	0	; () banked
  7495  004BBC  51A2               	movf	(___llmod@divisor+1)& (0+255),w,b
  7496  004BBE  0100               	movlb	0	; () banked
  7497  004BC0  5B9E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  7498  004BC2  0100               	movlb	0	; () banked
  7499  004BC4  51A3               	movf	(___llmod@divisor+2)& (0+255),w,b
  7500  004BC6  0100               	movlb	0	; () banked
  7501  004BC8  5B9F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  7502  004BCA  0100               	movlb	0	; () banked
  7503  004BCC  51A4               	movf	(___llmod@divisor+3)& (0+255),w,b
  7504  004BCE  0100               	movlb	0	; () banked
  7505  004BD0  5BA0               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  7506  004BD2                     l4778:
  7507                           
  7508                           ; BSR set to: 0
  7509  004BD2  0100               	movlb	0	; () banked
  7510  004BD4  90D8               	bcf	status,0,c
  7511  004BD6  33A4               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  7512  004BD8  33A3               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  7513  004BDA  33A2               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  7514  004BDC  33A1               	rrcf	___llmod@divisor& (0+255),f,b
  7515                           
  7516                           ; BSR set to: 0
  7517  004BDE  0100               	movlb	0	; () banked
  7518  004BE0  2FA5               	decfsz	___llmod@counter& (0+255),f,b
  7519  004BE2  D7D5               	goto	l4774
  7520  004BE4                     l948:
  7521                           
  7522                           ; BSR set to: 0
  7523  004BE4  C09D  F09D         	movff	___llmod@dividend,?___llmod
  7524  004BE8  C09E  F09E         	movff	___llmod@dividend+1,?___llmod+1
  7525  004BEC  C09F  F09F         	movff	___llmod@dividend+2,?___llmod+2
  7526  004BF0  C0A0  F0A0         	movff	___llmod@dividend+3,?___llmod+3
  7527                           
  7528                           ; BSR set to: 0
  7529  004BF4  0012               	return		;funcret
  7530  004BF6                     __end_of___llmod:
  7531                           	opt stack 0
  7532                           tosu	equ	0xFFF
  7533                           tosh	equ	0xFFE
  7534                           tosl	equ	0xFFD
  7535                           pclath	equ	0xFFA
  7536                           tblptru	equ	0xFF8
  7537                           tblptrh	equ	0xFF7
  7538                           tblptrl	equ	0xFF6
  7539                           tablat	equ	0xFF5
  7540                           prodh	equ	0xFF4
  7541                           prodl	equ	0xFF3
  7542                           intcon	equ	0xFF2
  7543                           postinc0	equ	0xFEE
  7544                           wreg	equ	0xFE8
  7545                           postdec1	equ	0xFE5
  7546                           fsr1l	equ	0xFE1
  7547                           indf2	equ	0xFDF
  7548                           postinc2	equ	0xFDE
  7549                           postdec2	equ	0xFDD
  7550                           fsr2h	equ	0xFDA
  7551                           fsr2l	equ	0xFD9
  7552                           status	equ	0xFD8
  7553                           
  7554 ;; *************** function ___lldiv *****************
  7555 ;; Defined at:
  7556 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lldiv.c"
  7557 ;; Parameters:    Size  Location     Type
  7558 ;;  dividend        4   48[BANK0 ] unsigned long 
  7559 ;;  divisor         4   52[BANK0 ] unsigned long 
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;  quotient        4   56[BANK0 ] unsigned long 
  7562 ;;  counter         1   60[BANK0 ] unsigned char 
  7563 ;; Return value:  Size  Location     Type
  7564 ;;                  4   48[BANK0 ] unsigned long 
  7565 ;; Registers used:
  7566 ;;		wreg, status,2, status,0
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/0
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7572 ;;      Params:         0       8       0       0       0       0       0
  7573 ;;      Locals:         0       5       0       0       0       0       0
  7574 ;;      Temps:          0       0       0       0       0       0       0
  7575 ;;      Totals:         0      13       0       0       0       0       0
  7576 ;;Total ram usage:       13 bytes
  7577 ;; Hardware stack levels used:    1
  7578 ;; Hardware stack levels required when called:    7
  7579 ;; This function calls:
  7580 ;;		Nothing
  7581 ;; This function is called by:
  7582 ;;		__doprnt
  7583 ;; This function uses a non-reentrant model
  7584 ;;
  7585                           
  7586                           	psect	text16
  7587  004950                     __ptext16:
  7588                           	opt stack 0
  7589  004950                     ___lldiv:
  7590                           	opt stack 21
  7591                           
  7592                           ; BSR set to: 0
  7593                           ;incstack = 0
  7594  004950  0E00               	movlw	0
  7595  004952  0100               	movlb	0	; () banked
  7596  004954  6F98               	movwf	___lldiv@quotient& (0+255),b
  7597  004956  0E00               	movlw	0
  7598  004958  6F99               	movwf	(___lldiv@quotient+1)& (0+255),b
  7599  00495A  0E00               	movlw	0
  7600  00495C  6F9A               	movwf	(___lldiv@quotient+2)& (0+255),b
  7601  00495E  0E00               	movlw	0
  7602  004960  6F9B               	movwf	(___lldiv@quotient+3)& (0+255),b
  7603                           
  7604                           ; BSR set to: 0
  7605  004962  0100               	movlb	0	; () banked
  7606  004964  5194               	movf	___lldiv@divisor& (0+255),w,b
  7607  004966  0100               	movlb	0	; () banked
  7608  004968  1195               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7609  00496A  0100               	movlb	0	; () banked
  7610  00496C  1196               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7611  00496E  0100               	movlb	0	; () banked
  7612  004970  1197               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  7613  004972  B4D8               	btfsc	status,2,c
  7614  004974  D042               	goto	l938
  7615                           
  7616                           ; BSR set to: 0
  7617  004976  0E01               	movlw	1
  7618  004978  0100               	movlb	0	; () banked
  7619  00497A  6F9C               	movwf	___lldiv@counter& (0+255),b
  7620  00497C  D008               	goto	l4752
  7621  00497E                     l4750:
  7622                           
  7623                           ; BSR set to: 0
  7624  00497E  0100               	movlb	0	; () banked
  7625  004980  90D8               	bcf	status,0,c
  7626  004982  3794               	rlcf	___lldiv@divisor& (0+255),f,b
  7627  004984  3795               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7628  004986  3796               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7629  004988  3797               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7630  00498A  0100               	movlb	0	; () banked
  7631  00498C  2B9C               	incf	___lldiv@counter& (0+255),f,b
  7632  00498E                     l4752:
  7633                           
  7634                           ; BSR set to: 0
  7635  00498E  0100               	movlb	0	; () banked
  7636  004990  AF97               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  7637  004992  D7F5               	goto	l4750
  7638  004994                     l4754:
  7639                           
  7640                           ; BSR set to: 0
  7641  004994  0100               	movlb	0	; () banked
  7642  004996  90D8               	bcf	status,0,c
  7643  004998  3798               	rlcf	___lldiv@quotient& (0+255),f,b
  7644  00499A  3799               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  7645  00499C  379A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  7646  00499E  379B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  7647                           
  7648                           ; BSR set to: 0
  7649  0049A0  0100               	movlb	0	; () banked
  7650  0049A2  5194               	movf	___lldiv@divisor& (0+255),w,b
  7651  0049A4  0100               	movlb	0	; () banked
  7652  0049A6  5D90               	subwf	___lldiv@dividend& (0+255),w,b
  7653  0049A8  0100               	movlb	0	; () banked
  7654  0049AA  5195               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7655  0049AC  0100               	movlb	0	; () banked
  7656  0049AE  5991               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7657  0049B0  0100               	movlb	0	; () banked
  7658  0049B2  5196               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7659  0049B4  0100               	movlb	0	; () banked
  7660  0049B6  5992               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7661  0049B8  0100               	movlb	0	; () banked
  7662  0049BA  5197               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7663  0049BC  0100               	movlb	0	; () banked
  7664  0049BE  5993               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7665  0049C0  A0D8               	btfss	status,0,c
  7666  0049C2  D012               	goto	l4762
  7667                           
  7668                           ; BSR set to: 0
  7669  0049C4  0100               	movlb	0	; () banked
  7670  0049C6  5194               	movf	___lldiv@divisor& (0+255),w,b
  7671  0049C8  0100               	movlb	0	; () banked
  7672  0049CA  5F90               	subwf	___lldiv@dividend& (0+255),f,b
  7673  0049CC  0100               	movlb	0	; () banked
  7674  0049CE  5195               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7675  0049D0  0100               	movlb	0	; () banked
  7676  0049D2  5B91               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7677  0049D4  0100               	movlb	0	; () banked
  7678  0049D6  5196               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7679  0049D8  0100               	movlb	0	; () banked
  7680  0049DA  5B92               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7681  0049DC  0100               	movlb	0	; () banked
  7682  0049DE  5197               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7683  0049E0  0100               	movlb	0	; () banked
  7684  0049E2  5B93               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7685                           
  7686                           ; BSR set to: 0
  7687  0049E4  0100               	movlb	0	; () banked
  7688  0049E6  8198               	bsf	___lldiv@quotient& (0+255),0,b
  7689  0049E8                     l4762:
  7690                           
  7691                           ; BSR set to: 0
  7692  0049E8  0100               	movlb	0	; () banked
  7693  0049EA  90D8               	bcf	status,0,c
  7694  0049EC  3397               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7695  0049EE  3396               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7696  0049F0  3395               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7697  0049F2  3394               	rrcf	___lldiv@divisor& (0+255),f,b
  7698                           
  7699                           ; BSR set to: 0
  7700  0049F4  0100               	movlb	0	; () banked
  7701  0049F6  2F9C               	decfsz	___lldiv@counter& (0+255),f,b
  7702  0049F8  D7CD               	goto	l4754
  7703  0049FA                     l938:
  7704                           
  7705                           ; BSR set to: 0
  7706  0049FA  C098  F090         	movff	___lldiv@quotient,?___lldiv
  7707  0049FE  C099  F091         	movff	___lldiv@quotient+1,?___lldiv+1
  7708  004A02  C09A  F092         	movff	___lldiv@quotient+2,?___lldiv+2
  7709  004A06  C09B  F093         	movff	___lldiv@quotient+3,?___lldiv+3
  7710                           
  7711                           ; BSR set to: 0
  7712  004A0A  0012               	return		;funcret
  7713  004A0C                     __end_of___lldiv:
  7714                           	opt stack 0
  7715                           tosu	equ	0xFFF
  7716                           tosh	equ	0xFFE
  7717                           tosl	equ	0xFFD
  7718                           pclath	equ	0xFFA
  7719                           tblptru	equ	0xFF8
  7720                           tblptrh	equ	0xFF7
  7721                           tblptrl	equ	0xFF6
  7722                           tablat	equ	0xFF5
  7723                           prodh	equ	0xFF4
  7724                           prodl	equ	0xFF3
  7725                           intcon	equ	0xFF2
  7726                           postinc0	equ	0xFEE
  7727                           wreg	equ	0xFE8
  7728                           postdec1	equ	0xFE5
  7729                           fsr1l	equ	0xFE1
  7730                           indf2	equ	0xFDF
  7731                           postinc2	equ	0xFDE
  7732                           postdec2	equ	0xFDD
  7733                           fsr2h	equ	0xFDA
  7734                           fsr2l	equ	0xFD9
  7735                           status	equ	0xFD8
  7736                           
  7737 ;; *************** function ___fttol *****************
  7738 ;; Defined at:
  7739 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\fttol.c"
  7740 ;; Parameters:    Size  Location     Type
  7741 ;;  f1              3    4[BANK1 ] float 
  7742 ;; Auto vars:     Size  Location     Type
  7743 ;;  lval            4   14[BANK1 ] unsigned long 
  7744 ;;  exp1            1   18[BANK1 ] unsigned char 
  7745 ;;  sign1           1   13[BANK1 ] unsigned char 
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  4    4[BANK1 ] long 
  7748 ;; Registers used:
  7749 ;;		wreg, status,2, status,0
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7755 ;;      Params:         0       0       4       0       0       0       0
  7756 ;;      Locals:         0       0       6       0       0       0       0
  7757 ;;      Temps:          0       0       5       0       0       0       0
  7758 ;;      Totals:         0       0      15       0       0       0       0
  7759 ;;Total ram usage:       15 bytes
  7760 ;; Hardware stack levels used:    1
  7761 ;; Hardware stack levels required when called:    7
  7762 ;; This function calls:
  7763 ;;		Nothing
  7764 ;; This function is called by:
  7765 ;;		__doprnt
  7766 ;; This function uses a non-reentrant model
  7767 ;;
  7768                           
  7769                           	psect	text17
  7770  003F30                     __ptext17:
  7771                           	opt stack 0
  7772  003F30                     ___fttol:
  7773                           	opt stack 21
  7774                           
  7775                           ; BSR set to: 0
  7776                           ;incstack = 0
  7777  003F30  C106  F108         	movff	___fttol@f1+2,??___fttol
  7778  003F34  0101               	movlb	1	; () banked
  7779  003F36  6B09               	clrf	(??___fttol+1)& (0+255),b
  7780  003F38  6B0A               	clrf	(??___fttol+2)& (0+255),b
  7781  003F3A  0101               	movlb	1	; () banked
  7782  003F3C  3505               	rlcf	(___fttol@f1+1)& (0+255),w,b
  7783  003F3E  0101               	movlb	1	; () banked
  7784  003F40  3708               	rlcf	??___fttol& (0+255),f,b
  7785  003F42  E301               	bnc	u8941
  7786  003F44  8109               	bsf	(??___fttol+1)& (0+255),0,b
  7787  003F46                     u8941:
  7788  003F46  0101               	movlb	1	; () banked
  7789  003F48  5108               	movf	??___fttol& (0+255),w,b
  7790  003F4A  0101               	movlb	1	; () banked
  7791  003F4C  6F12               	movwf	___fttol@exp1& (0+255),b
  7792  003F4E  0101               	movlb	1	; () banked
  7793  003F50  5112               	movf	___fttol@exp1& (0+255),w,b
  7794  003F52  A4D8               	btfss	status,2,c
  7795  003F54  D00A               	goto	l6270
  7796                           
  7797                           ; BSR set to: 1
  7798  003F56  0E00               	movlw	0
  7799  003F58  0101               	movlb	1	; () banked
  7800  003F5A  6F04               	movwf	?___fttol& (0+255),b
  7801  003F5C  0E00               	movlw	0
  7802  003F5E  6F05               	movwf	(?___fttol+1)& (0+255),b
  7803  003F60  0E00               	movlw	0
  7804  003F62  6F06               	movwf	(?___fttol+2)& (0+255),b
  7805  003F64  0E00               	movlw	0
  7806  003F66  6F07               	movwf	(?___fttol+3)& (0+255),b
  7807                           
  7808                           ; BSR set to: 1
  7809  003F68  0012               	return	
  7810  003F6A                     l6270:
  7811                           
  7812                           ; BSR set to: 1
  7813  003F6A  0E17               	movlw	23
  7814  003F6C  0101               	movlb	1	; () banked
  7815  003F6E  6F08               	movwf	??___fttol& (0+255),b
  7816  003F70  C104  F109         	movff	___fttol@f1,??___fttol+1
  7817  003F74  C105  F10A         	movff	___fttol@f1+1,??___fttol+2
  7818  003F78  C106  F10B         	movff	___fttol@f1+2,??___fttol+3
  7819  003F7C  0101               	movlb	1	; () banked
  7820  003F7E  2908               	incf	??___fttol& (0+255),w,b
  7821  003F80  0101               	movlb	1	; () banked
  7822  003F82  6F0C               	movwf	(??___fttol+4)& (0+255),b
  7823  003F84  D005               	goto	u8960
  7824  003F86                     u8965:
  7825  003F86  0101               	movlb	1	; () banked
  7826  003F88  90D8               	bcf	status,0,c
  7827  003F8A  330B               	rrcf	(??___fttol+3)& (0+255),f,b
  7828  003F8C  330A               	rrcf	(??___fttol+2)& (0+255),f,b
  7829  003F8E  3309               	rrcf	(??___fttol+1)& (0+255),f,b
  7830  003F90                     u8960:
  7831  003F90  0101               	movlb	1	; () banked
  7832  003F92  2F0C               	decfsz	(??___fttol+4)& (0+255),f,b
  7833  003F94  D7F8               	goto	u8965
  7834  003F96  0101               	movlb	1	; () banked
  7835  003F98  5109               	movf	(??___fttol+1)& (0+255),w,b
  7836  003F9A  0101               	movlb	1	; () banked
  7837  003F9C  6F0D               	movwf	___fttol@sign1& (0+255),b
  7838                           
  7839                           ; BSR set to: 1
  7840  003F9E  0101               	movlb	1	; () banked
  7841  003FA0  8F05               	bsf	(___fttol@f1+1)& (0+255),7,b
  7842                           
  7843                           ; BSR set to: 1
  7844  003FA2  0EFF               	movlw	255
  7845  003FA4  0101               	movlb	1	; () banked
  7846  003FA6  1704               	andwf	___fttol@f1& (0+255),f,b
  7847  003FA8  0EFF               	movlw	255
  7848  003FAA  0101               	movlb	1	; () banked
  7849  003FAC  1705               	andwf	(___fttol@f1+1)& (0+255),f,b
  7850  003FAE  0E00               	movlw	0
  7851  003FB0  0101               	movlb	1	; () banked
  7852  003FB2  1706               	andwf	(___fttol@f1+2)& (0+255),f,b
  7853                           
  7854                           ; BSR set to: 1
  7855  003FB4  0101               	movlb	1	; () banked
  7856  003FB6  5104               	movf	___fttol@f1& (0+255),w,b
  7857  003FB8  0101               	movlb	1	; () banked
  7858  003FBA  6F0E               	movwf	___fttol@lval& (0+255),b
  7859  003FBC  0101               	movlb	1	; () banked
  7860  003FBE  5105               	movf	(___fttol@f1+1)& (0+255),w,b
  7861  003FC0  0101               	movlb	1	; () banked
  7862  003FC2  6F0F               	movwf	(___fttol@lval+1)& (0+255),b
  7863  003FC4  0101               	movlb	1	; () banked
  7864  003FC6  5106               	movf	(___fttol@f1+2)& (0+255),w,b
  7865  003FC8  0101               	movlb	1	; () banked
  7866  003FCA  6F10               	movwf	(___fttol@lval+2)& (0+255),b
  7867  003FCC  0101               	movlb	1	; () banked
  7868  003FCE  6B11               	clrf	(___fttol@lval+3)& (0+255),b
  7869                           
  7870                           ; BSR set to: 1
  7871  003FD0  0E8E               	movlw	142
  7872  003FD2  0101               	movlb	1	; () banked
  7873  003FD4  5F12               	subwf	___fttol@exp1& (0+255),f,b
  7874                           
  7875                           ; BSR set to: 1
  7876  003FD6  0101               	movlb	1	; () banked
  7877  003FD8  AF12               	btfss	___fttol@exp1& (0+255),7,b
  7878  003FDA  D01A               	goto	l6292
  7879                           
  7880                           ; BSR set to: 1
  7881  003FDC  0101               	movlb	1	; () banked
  7882  003FDE  5112               	movf	___fttol@exp1& (0+255),w,b
  7883  003FE0  0A80               	xorlw	128
  7884  003FE2  0F8F               	addlw	143
  7885  003FE4  B0D8               	btfsc	status,0,c
  7886  003FE6  D00A               	goto	l6288
  7887                           
  7888                           ; BSR set to: 1
  7889  003FE8  0E00               	movlw	0
  7890  003FEA  0101               	movlb	1	; () banked
  7891  003FEC  6F04               	movwf	?___fttol& (0+255),b
  7892  003FEE  0E00               	movlw	0
  7893  003FF0  6F05               	movwf	(?___fttol+1)& (0+255),b
  7894  003FF2  0E00               	movlw	0
  7895  003FF4  6F06               	movwf	(?___fttol+2)& (0+255),b
  7896  003FF6  0E00               	movlw	0
  7897  003FF8  6F07               	movwf	(?___fttol+3)& (0+255),b
  7898                           
  7899                           ; BSR set to: 1
  7900  003FFA  0012               	return	
  7901  003FFC                     l6288:
  7902                           
  7903                           ; BSR set to: 1
  7904  003FFC  0101               	movlb	1	; () banked
  7905  003FFE  90D8               	bcf	status,0,c
  7906  004000  3311               	rrcf	(___fttol@lval+3)& (0+255),f,b
  7907  004002  3310               	rrcf	(___fttol@lval+2)& (0+255),f,b
  7908  004004  330F               	rrcf	(___fttol@lval+1)& (0+255),f,b
  7909  004006  330E               	rrcf	___fttol@lval& (0+255),f,b
  7910                           
  7911                           ; BSR set to: 1
  7912  004008  0101               	movlb	1	; () banked
  7913  00400A  3F12               	incfsz	___fttol@exp1& (0+255),f,b
  7914  00400C  D7F7               	goto	l6288
  7915                           
  7916                           ; BSR set to: 1
  7917  00400E  D01B               	goto	l6302
  7918  004010                     l6292:
  7919                           
  7920                           ; BSR set to: 1
  7921  004010  0E17               	movlw	23
  7922  004012  0101               	movlb	1	; () banked
  7923  004014  6512               	cpfsgt	___fttol@exp1& (0+255),b
  7924  004016  D012               	goto	l6300
  7925                           
  7926                           ; BSR set to: 1
  7927  004018  0E00               	movlw	0
  7928  00401A  0101               	movlb	1	; () banked
  7929  00401C  6F04               	movwf	?___fttol& (0+255),b
  7930  00401E  0E00               	movlw	0
  7931  004020  6F05               	movwf	(?___fttol+1)& (0+255),b
  7932  004022  0E00               	movlw	0
  7933  004024  6F06               	movwf	(?___fttol+2)& (0+255),b
  7934  004026  0E00               	movlw	0
  7935  004028  6F07               	movwf	(?___fttol+3)& (0+255),b
  7936                           
  7937                           ; BSR set to: 1
  7938  00402A  0012               	return	
  7939  00402C                     l6298:
  7940                           
  7941                           ; BSR set to: 1
  7942  00402C  0101               	movlb	1	; () banked
  7943  00402E  90D8               	bcf	status,0,c
  7944  004030  370E               	rlcf	___fttol@lval& (0+255),f,b
  7945  004032  370F               	rlcf	(___fttol@lval+1)& (0+255),f,b
  7946  004034  3710               	rlcf	(___fttol@lval+2)& (0+255),f,b
  7947  004036  3711               	rlcf	(___fttol@lval+3)& (0+255),f,b
  7948  004038  0101               	movlb	1	; () banked
  7949  00403A  0712               	decf	___fttol@exp1& (0+255),f,b
  7950  00403C                     l6300:
  7951                           
  7952                           ; BSR set to: 1
  7953  00403C  0101               	movlb	1	; () banked
  7954  00403E  5112               	movf	___fttol@exp1& (0+255),w,b
  7955  004040  0101               	movlb	1	; () banked
  7956  004042  A4D8               	btfss	status,2,c
  7957  004044  D7F3               	goto	l6298
  7958  004046                     l6302:
  7959                           
  7960                           ; BSR set to: 1
  7961  004046  0101               	movlb	1	; () banked
  7962  004048  510D               	movf	___fttol@sign1& (0+255),w,b
  7963  00404A  0101               	movlb	1	; () banked
  7964  00404C  B4D8               	btfsc	status,2,c
  7965  00404E  D009               	goto	l6306
  7966                           
  7967                           ; BSR set to: 1
  7968  004050  0101               	movlb	1	; () banked
  7969  004052  1F11               	comf	(___fttol@lval+3)& (0+255),f,b
  7970  004054  1F10               	comf	(___fttol@lval+2)& (0+255),f,b
  7971  004056  1F0F               	comf	(___fttol@lval+1)& (0+255),f,b
  7972  004058  6D0E               	negf	___fttol@lval& (0+255),b
  7973  00405A  0E00               	movlw	0
  7974  00405C  230F               	addwfc	(___fttol@lval+1)& (0+255),f,b
  7975  00405E  2310               	addwfc	(___fttol@lval+2)& (0+255),f,b
  7976  004060  2311               	addwfc	(___fttol@lval+3)& (0+255),f,b
  7977  004062                     l6306:
  7978                           
  7979                           ; BSR set to: 1
  7980  004062  C10E  F104         	movff	___fttol@lval,?___fttol
  7981  004066  C10F  F105         	movff	___fttol@lval+1,?___fttol+1
  7982  00406A  C110  F106         	movff	___fttol@lval+2,?___fttol+2
  7983  00406E  C111  F107         	movff	___fttol@lval+3,?___fttol+3
  7984  004072  0012               	return	
  7985  004074                     __end_of___fttol:
  7986                           	opt stack 0
  7987                           tosu	equ	0xFFF
  7988                           tosh	equ	0xFFE
  7989                           tosl	equ	0xFFD
  7990                           pclath	equ	0xFFA
  7991                           tblptru	equ	0xFF8
  7992                           tblptrh	equ	0xFF7
  7993                           tblptrl	equ	0xFF6
  7994                           tablat	equ	0xFF5
  7995                           prodh	equ	0xFF4
  7996                           prodl	equ	0xFF3
  7997                           intcon	equ	0xFF2
  7998                           postinc0	equ	0xFEE
  7999                           wreg	equ	0xFE8
  8000                           postdec1	equ	0xFE5
  8001                           fsr1l	equ	0xFE1
  8002                           indf2	equ	0xFDF
  8003                           postinc2	equ	0xFDE
  8004                           postdec2	equ	0xFDD
  8005                           fsr2h	equ	0xFDA
  8006                           fsr2l	equ	0xFD9
  8007                           status	equ	0xFD8
  8008                           
  8009 ;; *************** function ___ftsub *****************
  8010 ;; Defined at:
  8011 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftsub.c"
  8012 ;; Parameters:    Size  Location     Type
  8013 ;;  f1              3   19[BANK1 ] float 
  8014 ;;  f2              3   22[BANK1 ] float 
  8015 ;; Auto vars:     Size  Location     Type
  8016 ;;		None
  8017 ;; Return value:  Size  Location     Type
  8018 ;;                  3   19[BANK1 ] float 
  8019 ;; Registers used:
  8020 ;;		wreg, status,2, status,0, cstack
  8021 ;; Tracked objects:
  8022 ;;		On entry : 0/0
  8023 ;;		On exit  : 0/0
  8024 ;;		Unchanged: 0/0
  8025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8026 ;;      Params:         0       0       6       0       0       0       0
  8027 ;;      Locals:         0       0       0       0       0       0       0
  8028 ;;      Temps:          0       0       0       0       0       0       0
  8029 ;;      Totals:         0       0       6       0       0       0       0
  8030 ;;Total ram usage:        6 bytes
  8031 ;; Hardware stack levels used:    1
  8032 ;; Hardware stack levels required when called:    9
  8033 ;; This function calls:
  8034 ;;		___ftadd
  8035 ;; This function is called by:
  8036 ;;		__doprnt
  8037 ;; This function uses a non-reentrant model
  8038 ;;
  8039                           
  8040                           	psect	text18
  8041  0050DE                     __ptext18:
  8042                           	opt stack 0
  8043  0050DE                     ___ftsub:
  8044                           	opt stack 19
  8045                           
  8046                           ; BSR set to: 1
  8047                           ;incstack = 0
  8048  0050DE  0101               	movlb	1	; () banked
  8049  0050E0  5116               	movf	___ftsub@f2& (0+255),w,b
  8050  0050E2  0101               	movlb	1	; () banked
  8051  0050E4  1117               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  8052  0050E6  0101               	movlb	1	; () banked
  8053  0050E8  1118               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  8054  0050EA  B4D8               	btfsc	status,2,c
  8055  0050EC  D009               	goto	l6260
  8056                           
  8057                           ; BSR set to: 1
  8058  0050EE  0E00               	movlw	0
  8059  0050F0  0101               	movlb	1	; () banked
  8060  0050F2  1B16               	xorwf	___ftsub@f2& (0+255),f,b
  8061  0050F4  0E00               	movlw	0
  8062  0050F6  0101               	movlb	1	; () banked
  8063  0050F8  1B17               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  8064  0050FA  0E80               	movlw	128
  8065  0050FC  0101               	movlb	1	; () banked
  8066  0050FE  1B18               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  8067  005100                     l6260:
  8068                           
  8069                           ; BSR set to: 1
  8070  005100  C113  F107         	movff	___ftsub@f1,___ftadd@f1
  8071  005104  C114  F108         	movff	___ftsub@f1+1,___ftadd@f1+1
  8072  005108  C115  F109         	movff	___ftsub@f1+2,___ftadd@f1+2
  8073  00510C  C116  F10A         	movff	___ftsub@f2,___ftadd@f2
  8074  005110  C117  F10B         	movff	___ftsub@f2+1,___ftadd@f2+1
  8075  005114  C118  F10C         	movff	___ftsub@f2+2,___ftadd@f2+2
  8076  005118  ECE9  F017         	call	___ftadd	;wreg free
  8077  00511C  C107  F113         	movff	?___ftadd,?___ftsub
  8078  005120  C108  F114         	movff	?___ftadd+1,?___ftsub+1
  8079  005124  C109  F115         	movff	?___ftadd+2,?___ftsub+2
  8080  005128  0012               	return	
  8081  00512A                     __end_of___ftsub:
  8082                           	opt stack 0
  8083                           tosu	equ	0xFFF
  8084                           tosh	equ	0xFFE
  8085                           tosl	equ	0xFFD
  8086                           pclath	equ	0xFFA
  8087                           tblptru	equ	0xFF8
  8088                           tblptrh	equ	0xFF7
  8089                           tblptrl	equ	0xFF6
  8090                           tablat	equ	0xFF5
  8091                           prodh	equ	0xFF4
  8092                           prodl	equ	0xFF3
  8093                           intcon	equ	0xFF2
  8094                           postinc0	equ	0xFEE
  8095                           wreg	equ	0xFE8
  8096                           postdec1	equ	0xFE5
  8097                           fsr1l	equ	0xFE1
  8098                           indf2	equ	0xFDF
  8099                           postinc2	equ	0xFDE
  8100                           postdec2	equ	0xFDD
  8101                           fsr2h	equ	0xFDA
  8102                           fsr2l	equ	0xFD9
  8103                           status	equ	0xFD8
  8104                           
  8105 ;; *************** function ___ftadd *****************
  8106 ;; Defined at:
  8107 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftadd.c"
  8108 ;; Parameters:    Size  Location     Type
  8109 ;;  f1              3    7[BANK1 ] float 
  8110 ;;  f2              3   10[BANK1 ] float 
  8111 ;; Auto vars:     Size  Location     Type
  8112 ;;  exp1            1   18[BANK1 ] unsigned char 
  8113 ;;  exp2            1   17[BANK1 ] unsigned char 
  8114 ;;  sign            1   16[BANK1 ] unsigned char 
  8115 ;; Return value:  Size  Location     Type
  8116 ;;                  3    7[BANK1 ] float 
  8117 ;; Registers used:
  8118 ;;		wreg, status,2, status,0, cstack
  8119 ;; Tracked objects:
  8120 ;;		On entry : 0/0
  8121 ;;		On exit  : 0/0
  8122 ;;		Unchanged: 0/0
  8123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8124 ;;      Params:         0       0       6       0       0       0       0
  8125 ;;      Locals:         0       0       3       0       0       0       0
  8126 ;;      Temps:          0       0       3       0       0       0       0
  8127 ;;      Totals:         0       0      12       0       0       0       0
  8128 ;;Total ram usage:       12 bytes
  8129 ;; Hardware stack levels used:    1
  8130 ;; Hardware stack levels required when called:    8
  8131 ;; This function calls:
  8132 ;;		___ftpack
  8133 ;; This function is called by:
  8134 ;;		__doprnt
  8135 ;;		___ftsub
  8136 ;; This function uses a non-reentrant model
  8137 ;;
  8138                           
  8139                           	psect	text19
  8140  002FD2                     __ptext19:
  8141                           	opt stack 0
  8142  002FD2                     ___ftadd:
  8143                           	opt stack 19
  8144                           
  8145                           ;incstack = 0
  8146  002FD2  C109  F10D         	movff	___ftadd@f1+2,??___ftadd
  8147  002FD6  0101               	movlb	1	; () banked
  8148  002FD8  6B0E               	clrf	(??___ftadd+1)& (0+255),b
  8149  002FDA  6B0F               	clrf	(??___ftadd+2)& (0+255),b
  8150  002FDC  0101               	movlb	1	; () banked
  8151  002FDE  3508               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  8152  002FE0  0101               	movlb	1	; () banked
  8153  002FE2  370D               	rlcf	??___ftadd& (0+255),f,b
  8154  002FE4  E301               	bnc	u8471
  8155  002FE6  810E               	bsf	(??___ftadd+1)& (0+255),0,b
  8156  002FE8                     u8471:
  8157  002FE8  0101               	movlb	1	; () banked
  8158  002FEA  510D               	movf	??___ftadd& (0+255),w,b
  8159  002FEC  0101               	movlb	1	; () banked
  8160  002FEE  6F12               	movwf	___ftadd@exp1& (0+255),b
  8161  002FF0  C10C  F10D         	movff	___ftadd@f2+2,??___ftadd
  8162  002FF4  0101               	movlb	1	; () banked
  8163  002FF6  6B0E               	clrf	(??___ftadd+1)& (0+255),b
  8164  002FF8  6B0F               	clrf	(??___ftadd+2)& (0+255),b
  8165  002FFA  0101               	movlb	1	; () banked
  8166  002FFC  350B               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  8167  002FFE  0101               	movlb	1	; () banked
  8168  003000  370D               	rlcf	??___ftadd& (0+255),f,b
  8169  003002  E301               	bnc	u8481
  8170  003004  810E               	bsf	(??___ftadd+1)& (0+255),0,b
  8171  003006                     u8481:
  8172  003006  0101               	movlb	1	; () banked
  8173  003008  510D               	movf	??___ftadd& (0+255),w,b
  8174  00300A  0101               	movlb	1	; () banked
  8175  00300C  6F11               	movwf	___ftadd@exp2& (0+255),b
  8176                           
  8177                           ; BSR set to: 1
  8178  00300E  0101               	movlb	1	; () banked
  8179  003010  5112               	movf	___ftadd@exp1& (0+255),w,b
  8180  003012  0101               	movlb	1	; () banked
  8181  003014  B4D8               	btfsc	status,2,c
  8182  003016  D011               	goto	l792
  8183                           
  8184                           ; BSR set to: 1
  8185  003018  0101               	movlb	1	; () banked
  8186  00301A  5111               	movf	___ftadd@exp2& (0+255),w,b
  8187  00301C  0101               	movlb	1	; () banked
  8188  00301E  5D12               	subwf	___ftadd@exp1& (0+255),w,b
  8189  003020  B0D8               	btfsc	status,0,c
  8190  003022  D012               	goto	l6006
  8191                           
  8192                           ; BSR set to: 1
  8193  003024  0101               	movlb	1	; () banked
  8194  003026  5112               	movf	___ftadd@exp1& (0+255),w,b
  8195  003028  0800               	sublw	0
  8196  00302A  0101               	movlb	1	; () banked
  8197  00302C  2511               	addwf	___ftadd@exp2& (0+255),w,b
  8198  00302E  0101               	movlb	1	; () banked
  8199  003030  6F0D               	movwf	??___ftadd& (0+255),b
  8200  003032  0E18               	movlw	24
  8201  003034  0101               	movlb	1	; () banked
  8202  003036  650D               	cpfsgt	??___ftadd& (0+255),b
  8203  003038  D007               	goto	l6006
  8204  00303A                     l792:
  8205                           
  8206                           ; BSR set to: 1
  8207  00303A  C10A  F107         	movff	___ftadd@f2,?___ftadd
  8208  00303E  C10B  F108         	movff	___ftadd@f2+1,?___ftadd+1
  8209  003042  C10C  F109         	movff	___ftadd@f2+2,?___ftadd+2
  8210  003046  0012               	return	
  8211  003048                     l6006:
  8212                           
  8213                           ; BSR set to: 1
  8214  003048  0101               	movlb	1	; () banked
  8215  00304A  5111               	movf	___ftadd@exp2& (0+255),w,b
  8216  00304C  0101               	movlb	1	; () banked
  8217  00304E  B4D8               	btfsc	status,2,c
  8218  003050  D011               	goto	l796
  8219                           
  8220                           ; BSR set to: 1
  8221  003052  0101               	movlb	1	; () banked
  8222  003054  5112               	movf	___ftadd@exp1& (0+255),w,b
  8223  003056  0101               	movlb	1	; () banked
  8224  003058  5D11               	subwf	___ftadd@exp2& (0+255),w,b
  8225  00305A  B0D8               	btfsc	status,0,c
  8226  00305C  D012               	goto	l6012
  8227                           
  8228                           ; BSR set to: 1
  8229  00305E  0101               	movlb	1	; () banked
  8230  003060  5111               	movf	___ftadd@exp2& (0+255),w,b
  8231  003062  0800               	sublw	0
  8232  003064  0101               	movlb	1	; () banked
  8233  003066  2512               	addwf	___ftadd@exp1& (0+255),w,b
  8234  003068  0101               	movlb	1	; () banked
  8235  00306A  6F0D               	movwf	??___ftadd& (0+255),b
  8236  00306C  0E18               	movlw	24
  8237  00306E  0101               	movlb	1	; () banked
  8238  003070  650D               	cpfsgt	??___ftadd& (0+255),b
  8239  003072  D007               	goto	l6012
  8240  003074                     l796:
  8241                           
  8242                           ; BSR set to: 1
  8243  003074  C107  F107         	movff	___ftadd@f1,?___ftadd
  8244  003078  C108  F108         	movff	___ftadd@f1+1,?___ftadd+1
  8245  00307C  C109  F109         	movff	___ftadd@f1+2,?___ftadd+2
  8246  003080  0012               	return	
  8247  003082                     l6012:
  8248                           
  8249                           ; BSR set to: 1
  8250  003082  0E06               	movlw	6
  8251  003084  0101               	movlb	1	; () banked
  8252  003086  6F10               	movwf	___ftadd@sign& (0+255),b
  8253                           
  8254                           ; BSR set to: 1
  8255  003088  0101               	movlb	1	; () banked
  8256  00308A  AF09               	btfss	(___ftadd@f1+2)& (0+255),7,b
  8257  00308C  D002               	goto	l6018
  8258                           
  8259                           ; BSR set to: 1
  8260  00308E  0101               	movlb	1	; () banked
  8261  003090  8F10               	bsf	___ftadd@sign& (0+255),7,b
  8262  003092                     l6018:
  8263                           
  8264                           ; BSR set to: 1
  8265  003092  0101               	movlb	1	; () banked
  8266  003094  AF0C               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8267  003096  D002               	goto	l798
  8268                           
  8269                           ; BSR set to: 1
  8270  003098  0101               	movlb	1	; () banked
  8271  00309A  8D10               	bsf	___ftadd@sign& (0+255),6,b
  8272  00309C                     l798:
  8273                           
  8274                           ; BSR set to: 1
  8275  00309C  0101               	movlb	1	; () banked
  8276  00309E  8F08               	bsf	(___ftadd@f1+1)& (0+255),7,b
  8277                           
  8278                           ; BSR set to: 1
  8279  0030A0  0EFF               	movlw	255
  8280  0030A2  0101               	movlb	1	; () banked
  8281  0030A4  1707               	andwf	___ftadd@f1& (0+255),f,b
  8282  0030A6  0EFF               	movlw	255
  8283  0030A8  0101               	movlb	1	; () banked
  8284  0030AA  1708               	andwf	(___ftadd@f1+1)& (0+255),f,b
  8285  0030AC  0E00               	movlw	0
  8286  0030AE  0101               	movlb	1	; () banked
  8287  0030B0  1709               	andwf	(___ftadd@f1+2)& (0+255),f,b
  8288  0030B2  0101               	movlb	1	; () banked
  8289  0030B4  8F0B               	bsf	(___ftadd@f2+1)& (0+255),7,b
  8290                           
  8291                           ; BSR set to: 1
  8292  0030B6  0EFF               	movlw	255
  8293  0030B8  0101               	movlb	1	; () banked
  8294  0030BA  170A               	andwf	___ftadd@f2& (0+255),f,b
  8295  0030BC  0EFF               	movlw	255
  8296  0030BE  0101               	movlb	1	; () banked
  8297  0030C0  170B               	andwf	(___ftadd@f2+1)& (0+255),f,b
  8298  0030C2  0E00               	movlw	0
  8299  0030C4  0101               	movlb	1	; () banked
  8300  0030C6  170C               	andwf	(___ftadd@f2+2)& (0+255),f,b
  8301                           
  8302                           ; BSR set to: 1
  8303  0030C8  0101               	movlb	1	; () banked
  8304  0030CA  5111               	movf	___ftadd@exp2& (0+255),w,b
  8305  0030CC  0101               	movlb	1	; () banked
  8306  0030CE  5D12               	subwf	___ftadd@exp1& (0+255),w,b
  8307  0030D0  B0D8               	btfsc	status,0,c
  8308  0030D2  D025               	goto	l6038
  8309  0030D4                     l6028:
  8310                           
  8311                           ; BSR set to: 1
  8312  0030D4  0101               	movlb	1	; () banked
  8313  0030D6  90D8               	bcf	status,0,c
  8314  0030D8  370A               	rlcf	___ftadd@f2& (0+255),f,b
  8315  0030DA  370B               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  8316  0030DC  370C               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  8317  0030DE  0101               	movlb	1	; () banked
  8318  0030E0  0711               	decf	___ftadd@exp2& (0+255),f,b
  8319                           
  8320                           ; BSR set to: 1
  8321  0030E2  0101               	movlb	1	; () banked
  8322  0030E4  5112               	movf	___ftadd@exp1& (0+255),w,b
  8323  0030E6  0101               	movlb	1	; () banked
  8324  0030E8  1911               	xorwf	___ftadd@exp2& (0+255),w,b
  8325  0030EA  B4D8               	btfsc	status,2,c
  8326  0030EC  D011               	goto	l6036
  8327                           
  8328                           ; BSR set to: 1
  8329  0030EE  0101               	movlb	1	; () banked
  8330  0030F0  0710               	decf	___ftadd@sign& (0+255),f,b
  8331  0030F2  C110  F10D         	movff	___ftadd@sign,??___ftadd
  8332  0030F6  0E07               	movlw	7
  8333  0030F8  0101               	movlb	1	; () banked
  8334  0030FA  170D               	andwf	??___ftadd& (0+255),f,b
  8335  0030FC  B4D8               	btfsc	status,2,c
  8336  0030FE  D008               	goto	l6036
  8337  003100  D7E9               	goto	l6028
  8338  003102                     l6034:
  8339                           
  8340                           ; BSR set to: 1
  8341  003102  0101               	movlb	1	; () banked
  8342  003104  90D8               	bcf	status,0,c
  8343  003106  3309               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  8344  003108  3308               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  8345  00310A  3307               	rrcf	___ftadd@f1& (0+255),f,b
  8346  00310C  0101               	movlb	1	; () banked
  8347  00310E  2B12               	incf	___ftadd@exp1& (0+255),f,b
  8348  003110                     l6036:
  8349                           
  8350                           ; BSR set to: 1
  8351  003110  0101               	movlb	1	; () banked
  8352  003112  5111               	movf	___ftadd@exp2& (0+255),w,b
  8353  003114  0101               	movlb	1	; () banked
  8354  003116  1912               	xorwf	___ftadd@exp1& (0+255),w,b
  8355  003118  B4D8               	btfsc	status,2,c
  8356  00311A  D02B               	goto	l807
  8357  00311C  D7F2               	goto	l6034
  8358  00311E                     l6038:
  8359                           
  8360                           ; BSR set to: 1
  8361  00311E  0101               	movlb	1	; () banked
  8362  003120  5112               	movf	___ftadd@exp1& (0+255),w,b
  8363  003122  0101               	movlb	1	; () banked
  8364  003124  5D11               	subwf	___ftadd@exp2& (0+255),w,b
  8365  003126  B0D8               	btfsc	status,0,c
  8366  003128  D024               	goto	l807
  8367  00312A                     l6040:
  8368                           
  8369                           ; BSR set to: 1
  8370  00312A  0101               	movlb	1	; () banked
  8371  00312C  90D8               	bcf	status,0,c
  8372  00312E  3707               	rlcf	___ftadd@f1& (0+255),f,b
  8373  003130  3708               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  8374  003132  3709               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  8375  003134  0101               	movlb	1	; () banked
  8376  003136  0712               	decf	___ftadd@exp1& (0+255),f,b
  8377                           
  8378                           ; BSR set to: 1
  8379  003138  0101               	movlb	1	; () banked
  8380  00313A  5112               	movf	___ftadd@exp1& (0+255),w,b
  8381  00313C  0101               	movlb	1	; () banked
  8382  00313E  1911               	xorwf	___ftadd@exp2& (0+255),w,b
  8383  003140  B4D8               	btfsc	status,2,c
  8384  003142  D011               	goto	l6048
  8385                           
  8386                           ; BSR set to: 1
  8387  003144  0101               	movlb	1	; () banked
  8388  003146  0710               	decf	___ftadd@sign& (0+255),f,b
  8389  003148  C110  F10D         	movff	___ftadd@sign,??___ftadd
  8390  00314C  0E07               	movlw	7
  8391  00314E  0101               	movlb	1	; () banked
  8392  003150  170D               	andwf	??___ftadd& (0+255),f,b
  8393  003152  B4D8               	btfsc	status,2,c
  8394  003154  D008               	goto	l6048
  8395  003156  D7E9               	goto	l6040
  8396  003158                     l6046:
  8397                           
  8398                           ; BSR set to: 1
  8399  003158  0101               	movlb	1	; () banked
  8400  00315A  90D8               	bcf	status,0,c
  8401  00315C  330C               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  8402  00315E  330B               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  8403  003160  330A               	rrcf	___ftadd@f2& (0+255),f,b
  8404  003162  0101               	movlb	1	; () banked
  8405  003164  2B11               	incf	___ftadd@exp2& (0+255),f,b
  8406  003166                     l6048:
  8407                           
  8408                           ; BSR set to: 1
  8409  003166  0101               	movlb	1	; () banked
  8410  003168  5111               	movf	___ftadd@exp2& (0+255),w,b
  8411  00316A  0101               	movlb	1	; () banked
  8412  00316C  1912               	xorwf	___ftadd@exp1& (0+255),w,b
  8413  00316E  A4D8               	btfss	status,2,c
  8414  003170  D7F3               	goto	l6046
  8415  003172                     l807:
  8416                           
  8417                           ; BSR set to: 1
  8418  003172  0101               	movlb	1	; () banked
  8419  003174  AF10               	btfss	___ftadd@sign& (0+255),7,b
  8420  003176  D012               	goto	l816
  8421                           
  8422                           ; BSR set to: 1
  8423  003178  0EFF               	movlw	255
  8424  00317A  0101               	movlb	1	; () banked
  8425  00317C  1B07               	xorwf	___ftadd@f1& (0+255),f,b
  8426  00317E  0EFF               	movlw	255
  8427  003180  0101               	movlb	1	; () banked
  8428  003182  1B08               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  8429  003184  0EFF               	movlw	255
  8430  003186  0101               	movlb	1	; () banked
  8431  003188  1B09               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  8432  00318A  0E01               	movlw	1
  8433  00318C  0101               	movlb	1	; () banked
  8434  00318E  2707               	addwf	___ftadd@f1& (0+255),f,b
  8435  003190  0E00               	movlw	0
  8436  003192  0101               	movlb	1	; () banked
  8437  003194  2308               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  8438  003196  0E00               	movlw	0
  8439  003198  0101               	movlb	1	; () banked
  8440  00319A  2309               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  8441  00319C                     l816:
  8442                           
  8443                           ; BSR set to: 1
  8444  00319C  0101               	movlb	1	; () banked
  8445  00319E  AD10               	btfss	___ftadd@sign& (0+255),6,b
  8446  0031A0  D012               	goto	l6054
  8447                           
  8448                           ; BSR set to: 1
  8449  0031A2  0EFF               	movlw	255
  8450  0031A4  0101               	movlb	1	; () banked
  8451  0031A6  1B0A               	xorwf	___ftadd@f2& (0+255),f,b
  8452  0031A8  0EFF               	movlw	255
  8453  0031AA  0101               	movlb	1	; () banked
  8454  0031AC  1B0B               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8455  0031AE  0EFF               	movlw	255
  8456  0031B0  0101               	movlb	1	; () banked
  8457  0031B2  1B0C               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8458  0031B4  0E01               	movlw	1
  8459  0031B6  0101               	movlb	1	; () banked
  8460  0031B8  270A               	addwf	___ftadd@f2& (0+255),f,b
  8461  0031BA  0E00               	movlw	0
  8462  0031BC  0101               	movlb	1	; () banked
  8463  0031BE  230B               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8464  0031C0  0E00               	movlw	0
  8465  0031C2  0101               	movlb	1	; () banked
  8466  0031C4  230C               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8467  0031C6                     l6054:
  8468                           
  8469                           ; BSR set to: 1
  8470  0031C6  0E00               	movlw	0
  8471  0031C8  0101               	movlb	1	; () banked
  8472  0031CA  6F10               	movwf	___ftadd@sign& (0+255),b
  8473                           
  8474                           ; BSR set to: 1
  8475  0031CC  0101               	movlb	1	; () banked
  8476  0031CE  5107               	movf	___ftadd@f1& (0+255),w,b
  8477  0031D0  0101               	movlb	1	; () banked
  8478  0031D2  270A               	addwf	___ftadd@f2& (0+255),f,b
  8479  0031D4  0101               	movlb	1	; () banked
  8480  0031D6  5108               	movf	(___ftadd@f1+1)& (0+255),w,b
  8481  0031D8  0101               	movlb	1	; () banked
  8482  0031DA  230B               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8483  0031DC  0101               	movlb	1	; () banked
  8484  0031DE  5109               	movf	(___ftadd@f1+2)& (0+255),w,b
  8485  0031E0  0101               	movlb	1	; () banked
  8486  0031E2  230C               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8487                           
  8488                           ; BSR set to: 1
  8489  0031E4  0101               	movlb	1	; () banked
  8490  0031E6  AF0C               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8491  0031E8  D015               	goto	l6064
  8492                           
  8493                           ; BSR set to: 1
  8494  0031EA  0EFF               	movlw	255
  8495  0031EC  0101               	movlb	1	; () banked
  8496  0031EE  1B0A               	xorwf	___ftadd@f2& (0+255),f,b
  8497  0031F0  0EFF               	movlw	255
  8498  0031F2  0101               	movlb	1	; () banked
  8499  0031F4  1B0B               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8500  0031F6  0EFF               	movlw	255
  8501  0031F8  0101               	movlb	1	; () banked
  8502  0031FA  1B0C               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8503  0031FC  0E01               	movlw	1
  8504  0031FE  0101               	movlb	1	; () banked
  8505  003200  270A               	addwf	___ftadd@f2& (0+255),f,b
  8506  003202  0E00               	movlw	0
  8507  003204  0101               	movlb	1	; () banked
  8508  003206  230B               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8509  003208  0E00               	movlw	0
  8510  00320A  0101               	movlb	1	; () banked
  8511  00320C  230C               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8512                           
  8513                           ; BSR set to: 1
  8514  00320E  0E01               	movlw	1
  8515  003210  0101               	movlb	1	; () banked
  8516  003212  6F10               	movwf	___ftadd@sign& (0+255),b
  8517  003214                     l6064:
  8518                           
  8519                           ; BSR set to: 1
  8520  003214  C10A  F090         	movff	___ftadd@f2,___ftpack@arg
  8521  003218  C10B  F091         	movff	___ftadd@f2+1,___ftpack@arg+1
  8522  00321C  C10C  F092         	movff	___ftadd@f2+2,___ftpack@arg+2
  8523  003220  C112  F093         	movff	___ftadd@exp1,___ftpack@exp
  8524  003224  C110  F094         	movff	___ftadd@sign,___ftpack@sign
  8525  003228  ECF8  F021         	call	___ftpack	;wreg free
  8526  00322C  C090  F107         	movff	?___ftpack,?___ftadd
  8527  003230  C091  F108         	movff	?___ftpack+1,?___ftadd+1
  8528  003234  C092  F109         	movff	?___ftpack+2,?___ftadd+2
  8529  003238  0012               	return	
  8530  00323A                     __end_of___ftadd:
  8531                           	opt stack 0
  8532                           tosu	equ	0xFFF
  8533                           tosh	equ	0xFFE
  8534                           tosl	equ	0xFFD
  8535                           pclath	equ	0xFFA
  8536                           tblptru	equ	0xFF8
  8537                           tblptrh	equ	0xFF7
  8538                           tblptrl	equ	0xFF6
  8539                           tablat	equ	0xFF5
  8540                           prodh	equ	0xFF4
  8541                           prodl	equ	0xFF3
  8542                           intcon	equ	0xFF2
  8543                           postinc0	equ	0xFEE
  8544                           wreg	equ	0xFE8
  8545                           postdec1	equ	0xFE5
  8546                           fsr1l	equ	0xFE1
  8547                           indf2	equ	0xFDF
  8548                           postinc2	equ	0xFDE
  8549                           postdec2	equ	0xFDD
  8550                           fsr2h	equ	0xFDA
  8551                           fsr2l	equ	0xFD9
  8552                           status	equ	0xFD8
  8553                           
  8554 ;; *************** function ___ftneg *****************
  8555 ;; Defined at:
  8556 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftneg.c"
  8557 ;; Parameters:    Size  Location     Type
  8558 ;;  f1              3   48[BANK0 ] float 
  8559 ;; Auto vars:     Size  Location     Type
  8560 ;;		None
  8561 ;; Return value:  Size  Location     Type
  8562 ;;                  3   48[BANK0 ] float 
  8563 ;; Registers used:
  8564 ;;		wreg, status,2, status,0
  8565 ;; Tracked objects:
  8566 ;;		On entry : 0/0
  8567 ;;		On exit  : 0/0
  8568 ;;		Unchanged: 0/0
  8569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8570 ;;      Params:         0       3       0       0       0       0       0
  8571 ;;      Locals:         0       0       0       0       0       0       0
  8572 ;;      Temps:          0       0       0       0       0       0       0
  8573 ;;      Totals:         0       3       0       0       0       0       0
  8574 ;;Total ram usage:        3 bytes
  8575 ;; Hardware stack levels used:    1
  8576 ;; Hardware stack levels required when called:    7
  8577 ;; This function calls:
  8578 ;;		Nothing
  8579 ;; This function is called by:
  8580 ;;		__doprnt
  8581 ;; This function uses a non-reentrant model
  8582 ;;
  8583                           
  8584                           	psect	text20
  8585  0053A6                     __ptext20:
  8586                           	opt stack 0
  8587  0053A6                     ___ftneg:
  8588                           	opt stack 21
  8589                           
  8590                           ;incstack = 0
  8591  0053A6  0100               	movlb	0	; () banked
  8592  0053A8  5190               	movf	___ftneg@f1& (0+255),w,b
  8593  0053AA  0100               	movlb	0	; () banked
  8594  0053AC  1191               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  8595  0053AE  0100               	movlb	0	; () banked
  8596  0053B0  1192               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  8597  0053B2  B4D8               	btfsc	status,2,c
  8598  0053B4  D009               	goto	l866
  8599                           
  8600                           ; BSR set to: 0
  8601  0053B6  0E00               	movlw	0
  8602  0053B8  0100               	movlb	0	; () banked
  8603  0053BA  1B90               	xorwf	___ftneg@f1& (0+255),f,b
  8604  0053BC  0E00               	movlw	0
  8605  0053BE  0100               	movlb	0	; () banked
  8606  0053C0  1B91               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  8607  0053C2  0E80               	movlw	128
  8608  0053C4  0100               	movlb	0	; () banked
  8609  0053C6  1B92               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  8610  0053C8                     l866:
  8611                           
  8612                           ; BSR set to: 0
  8613  0053C8  C090  F090         	movff	___ftneg@f1,?___ftneg
  8614  0053CC  C091  F091         	movff	___ftneg@f1+1,?___ftneg+1
  8615  0053D0  C092  F092         	movff	___ftneg@f1+2,?___ftneg+2
  8616                           
  8617                           ; BSR set to: 0
  8618  0053D4  0012               	return		;funcret
  8619  0053D6                     __end_of___ftneg:
  8620                           	opt stack 0
  8621                           tosu	equ	0xFFF
  8622                           tosh	equ	0xFFE
  8623                           tosl	equ	0xFFD
  8624                           pclath	equ	0xFFA
  8625                           tblptru	equ	0xFF8
  8626                           tblptrh	equ	0xFF7
  8627                           tblptrl	equ	0xFF6
  8628                           tablat	equ	0xFF5
  8629                           prodh	equ	0xFF4
  8630                           prodl	equ	0xFF3
  8631                           intcon	equ	0xFF2
  8632                           postinc0	equ	0xFEE
  8633                           wreg	equ	0xFE8
  8634                           postdec1	equ	0xFE5
  8635                           fsr1l	equ	0xFE1
  8636                           indf2	equ	0xFDF
  8637                           postinc2	equ	0xFDE
  8638                           postdec2	equ	0xFDD
  8639                           fsr2h	equ	0xFDA
  8640                           fsr2l	equ	0xFD9
  8641                           status	equ	0xFD8
  8642                           
  8643 ;; *************** function ___ftge *****************
  8644 ;; Defined at:
  8645 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftge.c"
  8646 ;; Parameters:    Size  Location     Type
  8647 ;;  ff1             3   48[BANK0 ] float 
  8648 ;;  ff2             3   51[BANK0 ] float 
  8649 ;; Auto vars:     Size  Location     Type
  8650 ;;		None
  8651 ;; Return value:  Size  Location     Type
  8652 ;;		None               void
  8653 ;; Registers used:
  8654 ;;		wreg, status,2, status,0
  8655 ;; Tracked objects:
  8656 ;;		On entry : 0/0
  8657 ;;		On exit  : 0/0
  8658 ;;		Unchanged: 0/0
  8659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8660 ;;      Params:         0       6       0       0       0       0       0
  8661 ;;      Locals:         0       0       0       0       0       0       0
  8662 ;;      Temps:          0       3       0       0       0       0       0
  8663 ;;      Totals:         0       9       0       0       0       0       0
  8664 ;;Total ram usage:        9 bytes
  8665 ;; Hardware stack levels used:    1
  8666 ;; Hardware stack levels required when called:    7
  8667 ;; This function calls:
  8668 ;;		Nothing
  8669 ;; This function is called by:
  8670 ;;		_main
  8671 ;;		__doprnt
  8672 ;; This function uses a non-reentrant model
  8673 ;;
  8674                           
  8675                           	psect	text21
  8676  0047CA                     __ptext21:
  8677                           	opt stack 0
  8678  0047CA                     ___ftge:
  8679                           	opt stack 21
  8680                           
  8681                           ; BSR set to: 0
  8682                           ;incstack = 0
  8683  0047CA  0100               	movlb	0	; () banked
  8684  0047CC  AF92               	btfss	(___ftge@ff1+2)& (0+255),7,b
  8685  0047CE  D01D               	goto	l4680
  8686                           
  8687                           ; BSR set to: 0
  8688  0047D0  C090  F096         	movff	___ftge@ff1,??___ftge
  8689  0047D4  C091  F097         	movff	___ftge@ff1+1,??___ftge+1
  8690  0047D8  C092  F098         	movff	___ftge@ff1+2,??___ftge+2
  8691  0047DC  0100               	movlb	0	; () banked
  8692  0047DE  1F96               	comf	??___ftge& (0+255),f,b
  8693  0047E0  1F97               	comf	(??___ftge+1)& (0+255),f,b
  8694  0047E2  1F98               	comf	(??___ftge+2)& (0+255),f,b
  8695  0047E4  2B96               	incf	??___ftge& (0+255),f,b
  8696  0047E6  0E00               	movlw	0
  8697  0047E8  2397               	addwfc	(??___ftge+1)& (0+255),f,b
  8698  0047EA  2398               	addwfc	(??___ftge+2)& (0+255),f,b
  8699  0047EC  0E00               	movlw	0
  8700  0047EE  0100               	movlb	0	; () banked
  8701  0047F0  2596               	addwf	??___ftge& (0+255),w,b
  8702  0047F2  0100               	movlb	0	; () banked
  8703  0047F4  6F90               	movwf	___ftge@ff1& (0+255),b
  8704  0047F6  0E00               	movlw	0
  8705  0047F8  0100               	movlb	0	; () banked
  8706  0047FA  2197               	addwfc	(??___ftge+1)& (0+255),w,b
  8707  0047FC  0100               	movlb	0	; () banked
  8708  0047FE  6F91               	movwf	(___ftge@ff1+1)& (0+255),b
  8709  004800  0E80               	movlw	128
  8710  004802  0100               	movlb	0	; () banked
  8711  004804  2198               	addwfc	(??___ftge+2)& (0+255),w,b
  8712  004806  0100               	movlb	0	; () banked
  8713  004808  6F92               	movwf	(___ftge@ff1+2)& (0+255),b
  8714  00480A                     l4680:
  8715                           
  8716                           ; BSR set to: 0
  8717  00480A  0100               	movlb	0	; () banked
  8718  00480C  AF95               	btfss	(___ftge@ff2+2)& (0+255),7,b
  8719  00480E  D01D               	goto	l4684
  8720                           
  8721                           ; BSR set to: 0
  8722  004810  C093  F096         	movff	___ftge@ff2,??___ftge
  8723  004814  C094  F097         	movff	___ftge@ff2+1,??___ftge+1
  8724  004818  C095  F098         	movff	___ftge@ff2+2,??___ftge+2
  8725  00481C  0100               	movlb	0	; () banked
  8726  00481E  1F96               	comf	??___ftge& (0+255),f,b
  8727  004820  1F97               	comf	(??___ftge+1)& (0+255),f,b
  8728  004822  1F98               	comf	(??___ftge+2)& (0+255),f,b
  8729  004824  2B96               	incf	??___ftge& (0+255),f,b
  8730  004826  0E00               	movlw	0
  8731  004828  2397               	addwfc	(??___ftge+1)& (0+255),f,b
  8732  00482A  2398               	addwfc	(??___ftge+2)& (0+255),f,b
  8733  00482C  0E00               	movlw	0
  8734  00482E  0100               	movlb	0	; () banked
  8735  004830  2596               	addwf	??___ftge& (0+255),w,b
  8736  004832  0100               	movlb	0	; () banked
  8737  004834  6F93               	movwf	___ftge@ff2& (0+255),b
  8738  004836  0E00               	movlw	0
  8739  004838  0100               	movlb	0	; () banked
  8740  00483A  2197               	addwfc	(??___ftge+1)& (0+255),w,b
  8741  00483C  0100               	movlb	0	; () banked
  8742  00483E  6F94               	movwf	(___ftge@ff2+1)& (0+255),b
  8743  004840  0E80               	movlw	128
  8744  004842  0100               	movlb	0	; () banked
  8745  004844  2198               	addwfc	(??___ftge+2)& (0+255),w,b
  8746  004846  0100               	movlb	0	; () banked
  8747  004848  6F95               	movwf	(___ftge@ff2+2)& (0+255),b
  8748  00484A                     l4684:
  8749                           
  8750                           ; BSR set to: 0
  8751  00484A  0E00               	movlw	0
  8752  00484C  0100               	movlb	0	; () banked
  8753  00484E  1B90               	xorwf	___ftge@ff1& (0+255),f,b
  8754  004850  0E00               	movlw	0
  8755  004852  0100               	movlb	0	; () banked
  8756  004854  1B91               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  8757  004856  0E80               	movlw	128
  8758  004858  0100               	movlb	0	; () banked
  8759  00485A  1B92               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  8760                           
  8761                           ; BSR set to: 0
  8762  00485C  0E00               	movlw	0
  8763  00485E  0100               	movlb	0	; () banked
  8764  004860  1B93               	xorwf	___ftge@ff2& (0+255),f,b
  8765  004862  0E00               	movlw	0
  8766  004864  0100               	movlb	0	; () banked
  8767  004866  1B94               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  8768  004868  0E80               	movlw	128
  8769  00486A  0100               	movlb	0	; () banked
  8770  00486C  1B95               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  8771  00486E  0100               	movlb	0	; () banked
  8772  004870  5193               	movf	___ftge@ff2& (0+255),w,b
  8773  004872  0100               	movlb	0	; () banked
  8774  004874  5D90               	subwf	___ftge@ff1& (0+255),w,b
  8775  004876  0100               	movlb	0	; () banked
  8776  004878  5194               	movf	(___ftge@ff2+1)& (0+255),w,b
  8777  00487A  0100               	movlb	0	; () banked
  8778  00487C  5991               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  8779  00487E  0100               	movlb	0	; () banked
  8780  004880  5195               	movf	(___ftge@ff2+2)& (0+255),w,b
  8781  004882  0100               	movlb	0	; () banked
  8782  004884  5992               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  8783  004886  B0D8               	btfsc	status,0,c
  8784  004888  D002               	goto	l4690
  8785                           
  8786                           ; BSR set to: 0
  8787  00488A  90D8               	bcf	status,0,c
  8788  00488C  0012               	return	
  8789  00488E                     l4690:
  8790                           
  8791                           ; BSR set to: 0
  8792  00488E  80D8               	bsf	status,0,c
  8793                           
  8794                           ; BSR set to: 0
  8795  004890  0012               	return	
  8796  004892                     __end_of___ftge:
  8797                           	opt stack 0
  8798                           tosu	equ	0xFFF
  8799                           tosh	equ	0xFFE
  8800                           tosl	equ	0xFFD
  8801                           pclath	equ	0xFFA
  8802                           tblptru	equ	0xFF8
  8803                           tblptrh	equ	0xFF7
  8804                           tblptrl	equ	0xFF6
  8805                           tablat	equ	0xFF5
  8806                           prodh	equ	0xFF4
  8807                           prodl	equ	0xFF3
  8808                           intcon	equ	0xFF2
  8809                           postinc0	equ	0xFEE
  8810                           wreg	equ	0xFE8
  8811                           postdec1	equ	0xFE5
  8812                           fsr1l	equ	0xFE1
  8813                           indf2	equ	0xFDF
  8814                           postinc2	equ	0xFDE
  8815                           postdec2	equ	0xFDD
  8816                           fsr2h	equ	0xFDA
  8817                           fsr2l	equ	0xFD9
  8818                           status	equ	0xFD8
  8819                           
  8820 ;; *************** function _lcd_sendStringToPos *****************
  8821 ;; Defined at:
  8822 ;;		line 81 in file "lcd.c"
  8823 ;; Parameters:    Size  Location     Type
  8824 ;;  x               1    wreg     unsigned char 
  8825 ;;  y               1   56[BANK0 ] unsigned char 
  8826 ;;  charString      2   57[BANK0 ] PTR const unsigned char 
  8827 ;;		 -> main@cap_string(16), 
  8828 ;; Auto vars:     Size  Location     Type
  8829 ;;  x               1   59[BANK0 ] unsigned char 
  8830 ;; Return value:  Size  Location     Type
  8831 ;;                  1    wreg      void 
  8832 ;; Registers used:
  8833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8834 ;; Tracked objects:
  8835 ;;		On entry : 0/0
  8836 ;;		On exit  : 0/0
  8837 ;;		Unchanged: 0/0
  8838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8839 ;;      Params:         0       3       0       0       0       0       0
  8840 ;;      Locals:         0       1       0       0       0       0       0
  8841 ;;      Temps:          0       0       0       0       0       0       0
  8842 ;;      Totals:         0       4       0       0       0       0       0
  8843 ;;Total ram usage:        4 bytes
  8844 ;; Hardware stack levels used:    1
  8845 ;; Hardware stack levels required when called:   10
  8846 ;; This function calls:
  8847 ;;		_lcd_sendString
  8848 ;;		_lcd_setPosition
  8849 ;; This function is called by:
  8850 ;;		_main
  8851 ;; This function uses a non-reentrant model
  8852 ;;
  8853                           
  8854                           	psect	text22
  8855  0054F4                     __ptext22:
  8856                           	opt stack 0
  8857  0054F4                     _lcd_sendStringToPos:
  8858                           	opt stack 20
  8859                           
  8860                           ; BSR set to: 0
  8861                           ;incstack = 0
  8862                           ;lcd_sendStringToPos@x stored from wreg
  8863  0054F4  0100               	movlb	0	; () banked
  8864  0054F6  6F9B               	movwf	lcd_sendStringToPos@x& (0+255),b
  8865                           
  8866                           ;lcd.c: 83: lcd_setPosition(x, y);
  8867  0054F8  C098  F093         	movff	lcd_sendStringToPos@y,lcd_setPosition@y
  8868  0054FC  0100               	movlb	0	; () banked
  8869  0054FE  519B               	movf	lcd_sendStringToPos@x& (0+255),w,b
  8870  005500  EC40  F027         	call	_lcd_setPosition
  8871                           
  8872                           ;lcd.c: 84: lcd_sendString(charString);
  8873  005504  C099  F094         	movff	lcd_sendStringToPos@charString,lcd_sendString@a
  8874  005508  C09A  F095         	movff	lcd_sendStringToPos@charString+1,lcd_sendString@a+1
  8875  00550C  EC95  F028         	call	_lcd_sendString	;wreg free
  8876  005510  0012               	return		;funcret
  8877  005512                     __end_of_lcd_sendStringToPos:
  8878                           	opt stack 0
  8879                           tosu	equ	0xFFF
  8880                           tosh	equ	0xFFE
  8881                           tosl	equ	0xFFD
  8882                           pclath	equ	0xFFA
  8883                           tblptru	equ	0xFF8
  8884                           tblptrh	equ	0xFF7
  8885                           tblptrl	equ	0xFF6
  8886                           tablat	equ	0xFF5
  8887                           prodh	equ	0xFF4
  8888                           prodl	equ	0xFF3
  8889                           intcon	equ	0xFF2
  8890                           postinc0	equ	0xFEE
  8891                           wreg	equ	0xFE8
  8892                           postdec1	equ	0xFE5
  8893                           fsr1l	equ	0xFE1
  8894                           indf2	equ	0xFDF
  8895                           postinc2	equ	0xFDE
  8896                           postdec2	equ	0xFDD
  8897                           fsr2h	equ	0xFDA
  8898                           fsr2l	equ	0xFD9
  8899                           status	equ	0xFD8
  8900                           
  8901 ;; *************** function _lcd_setPosition *****************
  8902 ;; Defined at:
  8903 ;;		line 18 in file "lcd.c"
  8904 ;; Parameters:    Size  Location     Type
  8905 ;;  x               1    wreg     unsigned char 
  8906 ;;  y               1   51[BANK0 ] unsigned char 
  8907 ;; Auto vars:     Size  Location     Type
  8908 ;;  x               1   52[BANK0 ] unsigned char 
  8909 ;;  temp            1   55[BANK0 ] unsigned char 
  8910 ;;  j               1   54[BANK0 ] unsigned char 
  8911 ;;  i               1   53[BANK0 ] unsigned char 
  8912 ;; Return value:  Size  Location     Type
  8913 ;;                  1    wreg      void 
  8914 ;; Registers used:
  8915 ;;		wreg, status,2, status,0, cstack
  8916 ;; Tracked objects:
  8917 ;;		On entry : 0/0
  8918 ;;		On exit  : 0/0
  8919 ;;		Unchanged: 0/0
  8920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8921 ;;      Params:         0       1       0       0       0       0       0
  8922 ;;      Locals:         0       4       0       0       0       0       0
  8923 ;;      Temps:          0       0       0       0       0       0       0
  8924 ;;      Totals:         0       5       0       0       0       0       0
  8925 ;;Total ram usage:        5 bytes
  8926 ;; Hardware stack levels used:    1
  8927 ;; Hardware stack levels required when called:    9
  8928 ;; This function calls:
  8929 ;;		_lcd_sendCommand
  8930 ;; This function is called by:
  8931 ;;		_lcd_sendStringToPos
  8932 ;;		_lcd_sendIntToPos
  8933 ;;		_lcd_sendFloatToPos
  8934 ;;		_lcd_sendUIntToPos
  8935 ;; This function uses a non-reentrant model
  8936 ;;
  8937                           
  8938                           	psect	text23
  8939  004E80                     __ptext23:
  8940                           	opt stack 0
  8941  004E80                     _lcd_setPosition:
  8942                           	opt stack 20
  8943                           
  8944                           ;incstack = 0
  8945                           ;lcd_setPosition@x stored from wreg
  8946  004E80  0100               	movlb	0	; () banked
  8947  004E82  6F94               	movwf	lcd_setPosition@x& (0+255),b
  8948                           
  8949                           ;lcd.c: 20: unsigned char temp, i, j;
  8950                           ;lcd.c: 21: if(y == 1)
  8951  004E84  0100               	movlb	0	; () banked
  8952  004E86  0593               	decf	lcd_setPosition@y& (0+255),w,b
  8953  004E88  A4D8               	btfss	status,2,c
  8954  004E8A  D018               	goto	l5254
  8955                           
  8956                           ; BSR set to: 0
  8957                           ;lcd.c: 22: {
  8958                           ;lcd.c: 23: temp = 0x80 + x - 1;
  8959  004E8C  0100               	movlb	0	; () banked
  8960  004E8E  5194               	movf	lcd_setPosition@x& (0+255),w,b
  8961  004E90  0F7F               	addlw	127
  8962  004E92  0100               	movlb	0	; () banked
  8963  004E94  6F97               	movwf	lcd_setPosition@temp& (0+255),b
  8964                           
  8965                           ;lcd.c: 24: i = temp>>4;
  8966  004E96  0100               	movlb	0	; () banked
  8967  004E98  3997               	swapf	lcd_setPosition@temp& (0+255),w,b
  8968  004E9A  0B0F               	andlw	15
  8969  004E9C  0100               	movlb	0	; () banked
  8970  004E9E  6F95               	movwf	lcd_setPosition@i& (0+255),b
  8971                           
  8972                           ;lcd.c: 25: j = temp & 0x0F;
  8973  004EA0  0100               	movlb	0	; () banked
  8974  004EA2  5197               	movf	lcd_setPosition@temp& (0+255),w,b
  8975  004EA4  0B0F               	andlw	15
  8976  004EA6  0100               	movlb	0	; () banked
  8977  004EA8  6F96               	movwf	lcd_setPosition@j& (0+255),b
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;lcd.c: 26: lcd_sendCommand(i);
  8981  004EAA  0100               	movlb	0	; () banked
  8982  004EAC  5195               	movf	lcd_setPosition@i& (0+255),w,b
  8983  004EAE  EC30  F02A         	call	_lcd_sendCommand
  8984                           
  8985                           ;lcd.c: 27: lcd_sendCommand(j);
  8986  004EB2  0100               	movlb	0	; () banked
  8987  004EB4  5196               	movf	lcd_setPosition@j& (0+255),w,b
  8988  004EB6  EC30  F02A         	call	_lcd_sendCommand
  8989                           
  8990                           ;lcd.c: 28: }
  8991  004EBA  0012               	return	
  8992  004EBC                     l5254:
  8993                           
  8994                           ;lcd.c: 29: else if(y == 2)
  8995  004EBC  0E02               	movlw	2
  8996  004EBE  0100               	movlb	0	; () banked
  8997  004EC0  1993               	xorwf	lcd_setPosition@y& (0+255),w,b
  8998  004EC2  A4D8               	btfss	status,2,c
  8999  004EC4  0012               	return	
  9000                           
  9001                           ; BSR set to: 0
  9002                           ;lcd.c: 30: {
  9003                           ;lcd.c: 31: temp = 0xC0 + x - 1;
  9004  004EC6  0100               	movlb	0	; () banked
  9005  004EC8  5194               	movf	lcd_setPosition@x& (0+255),w,b
  9006  004ECA  0FBF               	addlw	191
  9007  004ECC  0100               	movlb	0	; () banked
  9008  004ECE  6F97               	movwf	lcd_setPosition@temp& (0+255),b
  9009                           
  9010                           ;lcd.c: 32: i = temp>>4;
  9011  004ED0  0100               	movlb	0	; () banked
  9012  004ED2  3997               	swapf	lcd_setPosition@temp& (0+255),w,b
  9013  004ED4  0B0F               	andlw	15
  9014  004ED6  0100               	movlb	0	; () banked
  9015  004ED8  6F95               	movwf	lcd_setPosition@i& (0+255),b
  9016                           
  9017                           ;lcd.c: 33: j = temp & 0x0F;
  9018  004EDA  0100               	movlb	0	; () banked
  9019  004EDC  5197               	movf	lcd_setPosition@temp& (0+255),w,b
  9020  004EDE  0B0F               	andlw	15
  9021  004EE0  0100               	movlb	0	; () banked
  9022  004EE2  6F96               	movwf	lcd_setPosition@j& (0+255),b
  9023                           
  9024                           ; BSR set to: 0
  9025                           ;lcd.c: 34: lcd_sendCommand(i);
  9026  004EE4  0100               	movlb	0	; () banked
  9027  004EE6  5195               	movf	lcd_setPosition@i& (0+255),w,b
  9028  004EE8  EC30  F02A         	call	_lcd_sendCommand
  9029                           
  9030                           ;lcd.c: 35: lcd_sendCommand(j);
  9031  004EEC  0100               	movlb	0	; () banked
  9032  004EEE  5196               	movf	lcd_setPosition@j& (0+255),w,b
  9033  004EF0  EC30  F02A         	call	_lcd_sendCommand
  9034  004EF4  0012               	return	
  9035  004EF6                     __end_of_lcd_setPosition:
  9036                           	opt stack 0
  9037                           tosu	equ	0xFFF
  9038                           tosh	equ	0xFFE
  9039                           tosl	equ	0xFFD
  9040                           pclath	equ	0xFFA
  9041                           tblptru	equ	0xFF8
  9042                           tblptrh	equ	0xFF7
  9043                           tblptrl	equ	0xFF6
  9044                           tablat	equ	0xFF5
  9045                           prodh	equ	0xFF4
  9046                           prodl	equ	0xFF3
  9047                           intcon	equ	0xFF2
  9048                           postinc0	equ	0xFEE
  9049                           wreg	equ	0xFE8
  9050                           postdec1	equ	0xFE5
  9051                           fsr1l	equ	0xFE1
  9052                           indf2	equ	0xFDF
  9053                           postinc2	equ	0xFDE
  9054                           postdec2	equ	0xFDD
  9055                           fsr2h	equ	0xFDA
  9056                           fsr2l	equ	0xFD9
  9057                           status	equ	0xFD8
  9058                           
  9059 ;; *************** function _lcd_sendString *****************
  9060 ;; Defined at:
  9061 ;;		line 74 in file "lcd.c"
  9062 ;; Parameters:    Size  Location     Type
  9063 ;;  a               2   52[BANK0 ] PTR const unsigned char 
  9064 ;;		 -> ftoa@buf(17), lcd_sendUInt@displayString(10), lcd_sendInt@displayString(10), main@cap_string(16), 
  9065 ;; Auto vars:     Size  Location     Type
  9066 ;;  i               2   54[BANK0 ] int 
  9067 ;; Return value:  Size  Location     Type
  9068 ;;                  1    wreg      void 
  9069 ;; Registers used:
  9070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9071 ;; Tracked objects:
  9072 ;;		On entry : 0/0
  9073 ;;		On exit  : 0/0
  9074 ;;		Unchanged: 0/0
  9075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9076 ;;      Params:         0       2       0       0       0       0       0
  9077 ;;      Locals:         0       2       0       0       0       0       0
  9078 ;;      Temps:          0       0       0       0       0       0       0
  9079 ;;      Totals:         0       4       0       0       0       0       0
  9080 ;;Total ram usage:        4 bytes
  9081 ;; Hardware stack levels used:    1
  9082 ;; Hardware stack levels required when called:    9
  9083 ;; This function calls:
  9084 ;;		_lcd_sendChar
  9085 ;; This function is called by:
  9086 ;;		_lcd_sendStringToPos
  9087 ;;		_lcd_sendInt
  9088 ;;		_lcd_sendFloat
  9089 ;;		_lcd_sendUInt
  9090 ;; This function uses a non-reentrant model
  9091 ;;
  9092                           
  9093                           	psect	text24
  9094  00512A                     __ptext24:
  9095                           	opt stack 0
  9096  00512A                     _lcd_sendString:
  9097                           	opt stack 20
  9098                           
  9099                           ;lcd.c: 76: int i;
  9100                           ;lcd.c: 77: for(i=0;a[i]!='\0';i++)
  9101                           
  9102                           ;incstack = 0
  9103  00512A  0E00               	movlw	0
  9104  00512C  0100               	movlb	0	; () banked
  9105  00512E  6F97               	movwf	(lcd_sendString@i+1)& (0+255),b
  9106  005130  0E00               	movlw	0
  9107  005132  6F96               	movwf	lcd_sendString@i& (0+255),b
  9108  005134  D010               	goto	l5268
  9109  005136                     l5264:
  9110                           
  9111                           ; BSR set to: 0
  9112                           ;lcd.c: 78: lcd_sendChar(a[i]);
  9113  005136  0100               	movlb	0	; () banked
  9114  005138  5196               	movf	lcd_sendString@i& (0+255),w,b
  9115  00513A  0100               	movlb	0	; () banked
  9116  00513C  2594               	addwf	lcd_sendString@a& (0+255),w,b
  9117  00513E  6ED9               	movwf	fsr2l,c
  9118  005140  0100               	movlb	0	; () banked
  9119  005142  5197               	movf	(lcd_sendString@i+1)& (0+255),w,b
  9120  005144  0100               	movlb	0	; () banked
  9121  005146  2195               	addwfc	(lcd_sendString@a+1)& (0+255),w,b
  9122  005148  6EDA               	movwf	fsr2h,c
  9123  00514A  50DF               	movf	indf2,w,c
  9124  00514C  ECB9  F028         	call	_lcd_sendChar
  9125  005150  0100               	movlb	0	; () banked
  9126  005152  4B96               	infsnz	lcd_sendString@i& (0+255),f,b
  9127  005154  2B97               	incf	(lcd_sendString@i+1)& (0+255),f,b
  9128  005156                     l5268:
  9129                           
  9130                           ; BSR set to: 0
  9131  005156  0100               	movlb	0	; () banked
  9132  005158  5196               	movf	lcd_sendString@i& (0+255),w,b
  9133  00515A  0100               	movlb	0	; () banked
  9134  00515C  2594               	addwf	lcd_sendString@a& (0+255),w,b
  9135  00515E  6ED9               	movwf	fsr2l,c
  9136  005160  0100               	movlb	0	; () banked
  9137  005162  5197               	movf	(lcd_sendString@i+1)& (0+255),w,b
  9138  005164  0100               	movlb	0	; () banked
  9139  005166  2195               	addwfc	(lcd_sendString@a+1)& (0+255),w,b
  9140  005168  6EDA               	movwf	fsr2h,c
  9141  00516A  50DF               	movf	indf2,w,c
  9142  00516C  B4D8               	btfsc	status,2,c
  9143  00516E  0012               	return	
  9144  005170  D7E2               	goto	l5264
  9145  005172                     __end_of_lcd_sendString:
  9146                           	opt stack 0
  9147                           tosu	equ	0xFFF
  9148                           tosh	equ	0xFFE
  9149                           tosl	equ	0xFFD
  9150                           pclath	equ	0xFFA
  9151                           tblptru	equ	0xFF8
  9152                           tblptrh	equ	0xFF7
  9153                           tblptrl	equ	0xFF6
  9154                           tablat	equ	0xFF5
  9155                           prodh	equ	0xFF4
  9156                           prodl	equ	0xFF3
  9157                           intcon	equ	0xFF2
  9158                           postinc0	equ	0xFEE
  9159                           wreg	equ	0xFE8
  9160                           postdec1	equ	0xFE5
  9161                           fsr1l	equ	0xFE1
  9162                           indf2	equ	0xFDF
  9163                           postinc2	equ	0xFDE
  9164                           postdec2	equ	0xFDD
  9165                           fsr2h	equ	0xFDA
  9166                           fsr2l	equ	0xFD9
  9167                           status	equ	0xFD8
  9168                           
  9169 ;; *************** function _lcd_sendChar *****************
  9170 ;; Defined at:
  9171 ;;		line 58 in file "lcd.c"
  9172 ;; Parameters:    Size  Location     Type
  9173 ;;  a               1    wreg     const unsigned char 
  9174 ;; Auto vars:     Size  Location     Type
  9175 ;;  a               1   51[BANK0 ] const unsigned char 
  9176 ;;  y               1   50[BANK0 ] unsigned char 
  9177 ;;  temp            1   49[BANK0 ] unsigned char 
  9178 ;; Return value:  Size  Location     Type
  9179 ;;                  1    wreg      void 
  9180 ;; Registers used:
  9181 ;;		wreg, status,2, status,0, cstack
  9182 ;; Tracked objects:
  9183 ;;		On entry : 0/0
  9184 ;;		On exit  : 0/0
  9185 ;;		Unchanged: 0/0
  9186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9187 ;;      Params:         0       0       0       0       0       0       0
  9188 ;;      Locals:         0       3       0       0       0       0       0
  9189 ;;      Temps:          0       0       0       0       0       0       0
  9190 ;;      Totals:         0       3       0       0       0       0       0
  9191 ;;Total ram usage:        3 bytes
  9192 ;; Hardware stack levels used:    1
  9193 ;; Hardware stack levels required when called:    8
  9194 ;; This function calls:
  9195 ;;		__lcd_Port
  9196 ;; This function is called by:
  9197 ;;		_lcd_sendString
  9198 ;; This function uses a non-reentrant model
  9199 ;;
  9200                           
  9201                           	psect	text25
  9202  005172                     __ptext25:
  9203                           	opt stack 0
  9204  005172                     _lcd_sendChar:
  9205                           	opt stack 20
  9206                           
  9207                           ; BSR set to: 0
  9208                           ;incstack = 0
  9209                           ;lcd_sendChar@a stored from wreg
  9210  005172  0100               	movlb	0	; () banked
  9211  005174  6F93               	movwf	lcd_sendChar@a& (0+255),b
  9212                           
  9213                           ;lcd.c: 60: char temp,y;
  9214                           ;lcd.c: 61: temp = a&0x0F;
  9215  005176  0100               	movlb	0	; () banked
  9216  005178  5193               	movf	lcd_sendChar@a& (0+255),w,b
  9217  00517A  0B0F               	andlw	15
  9218  00517C  0100               	movlb	0	; () banked
  9219  00517E  6F91               	movwf	lcd_sendChar@temp& (0+255),b
  9220                           
  9221                           ;lcd.c: 62: y = a&0xF0;
  9222  005180  0100               	movlb	0	; () banked
  9223  005182  5193               	movf	lcd_sendChar@a& (0+255),w,b
  9224  005184  0BF0               	andlw	240
  9225  005186  0100               	movlb	0	; () banked
  9226  005188  6F92               	movwf	lcd_sendChar@y& (0+255),b
  9227                           
  9228                           ; BSR set to: 0
  9229                           ;lcd.c: 63: LATAbits.LA5 = 1;
  9230  00518A  8A89               	bsf	3977,5,c	;volatile
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;lcd.c: 64: _lcd_Port(y>>4);
  9234  00518C  0100               	movlb	0	; () banked
  9235  00518E  3992               	swapf	lcd_sendChar@y& (0+255),w,b
  9236  005190  0B0F               	andlw	15
  9237  005192  EC9D  F029         	call	__lcd_Port
  9238                           
  9239                           ;lcd.c: 65: LATAbits.LA4 = 1;
  9240  005196  8889               	bsf	3977,4,c	;volatile
  9241                           
  9242                           ;lcd.c: 66: _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  9243  005198  0E35               	movlw	53
  9244  00519A                     u17087:
  9245  00519A  2EE8               	decfsz	wreg,f,c
  9246  00519C  D7FE               	bra	u17087
  9247  00519E  F000               	nop	
  9248                           
  9249                           ;lcd.c: 67: LATAbits.LA4 = 0;
  9250  0051A0  9889               	bcf	3977,4,c	;volatile
  9251                           
  9252                           ;lcd.c: 68: _lcd_Port(temp);
  9253  0051A2  0100               	movlb	0	; () banked
  9254  0051A4  5191               	movf	lcd_sendChar@temp& (0+255),w,b
  9255  0051A6  EC9D  F029         	call	__lcd_Port
  9256                           
  9257                           ;lcd.c: 69: LATAbits.LA4 = 1;
  9258  0051AA  8889               	bsf	3977,4,c	;volatile
  9259                           
  9260                           ;lcd.c: 70: _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  9261  0051AC  0E35               	movlw	53
  9262  0051AE                     u17097:
  9263  0051AE  2EE8               	decfsz	wreg,f,c
  9264  0051B0  D7FE               	bra	u17097
  9265  0051B2  F000               	nop	
  9266                           
  9267                           ;lcd.c: 71: LATAbits.LA4 = 0;
  9268  0051B4  9889               	bcf	3977,4,c	;volatile
  9269  0051B6  0012               	return		;funcret
  9270  0051B8                     __end_of_lcd_sendChar:
  9271                           	opt stack 0
  9272                           tosu	equ	0xFFF
  9273                           tosh	equ	0xFFE
  9274                           tosl	equ	0xFFD
  9275                           pclath	equ	0xFFA
  9276                           tblptru	equ	0xFF8
  9277                           tblptrh	equ	0xFF7
  9278                           tblptrl	equ	0xFF6
  9279                           tablat	equ	0xFF5
  9280                           prodh	equ	0xFF4
  9281                           prodl	equ	0xFF3
  9282                           intcon	equ	0xFF2
  9283                           postinc0	equ	0xFEE
  9284                           wreg	equ	0xFE8
  9285                           postdec1	equ	0xFE5
  9286                           fsr1l	equ	0xFE1
  9287                           indf2	equ	0xFDF
  9288                           postinc2	equ	0xFDE
  9289                           postdec2	equ	0xFDD
  9290                           fsr2h	equ	0xFDA
  9291                           fsr2l	equ	0xFD9
  9292                           status	equ	0xFD8
  9293                           
  9294 ;; *************** function _lcd_init *****************
  9295 ;; Defined at:
  9296 ;;		line 39 in file "lcd.c"
  9297 ;; Parameters:    Size  Location     Type
  9298 ;;		None
  9299 ;; Auto vars:     Size  Location     Type
  9300 ;;		None
  9301 ;; Return value:  Size  Location     Type
  9302 ;;                  1    wreg      void 
  9303 ;; Registers used:
  9304 ;;		wreg, status,2, cstack
  9305 ;; Tracked objects:
  9306 ;;		On entry : 0/0
  9307 ;;		On exit  : 0/0
  9308 ;;		Unchanged: 0/0
  9309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9310 ;;      Params:         0       0       0       0       0       0       0
  9311 ;;      Locals:         0       0       0       0       0       0       0
  9312 ;;      Temps:          0       1       0       0       0       0       0
  9313 ;;      Totals:         0       1       0       0       0       0       0
  9314 ;;Total ram usage:        1 bytes
  9315 ;; Hardware stack levels used:    1
  9316 ;; Hardware stack levels required when called:    9
  9317 ;; This function calls:
  9318 ;;		__lcd_Port
  9319 ;;		_lcd_sendCommand
  9320 ;; This function is called by:
  9321 ;;		_main
  9322 ;; This function uses a non-reentrant model
  9323 ;;
  9324                           
  9325                           	psect	text26
  9326  004E08                     __ptext26:
  9327                           	opt stack 0
  9328  004E08                     _lcd_init:
  9329                           	opt stack 21
  9330                           
  9331                           ;lcd.c: 41: _lcd_Port(0x00);
  9332                           
  9333                           ;incstack = 0
  9334  004E08  0E00               	movlw	0
  9335  004E0A  EC9D  F029         	call	__lcd_Port
  9336                           
  9337                           ;lcd.c: 42: _delay((unsigned long)((20)*(16000000UL/4000.0)));
  9338  004E0E  0E68               	movlw	104
  9339  004E10  0100               	movlb	0	; () banked
  9340  004E12  6F93               	movwf	??_lcd_init& (0+255),b
  9341  004E14  0EE4               	movlw	228
  9342  004E16                     u17107:
  9343  004E16  2EE8               	decfsz	wreg,f,c
  9344  004E18  D7FE               	bra	u17107
  9345  004E1A  2F93               	decfsz	??_lcd_init& (0+255),f,b
  9346  004E1C  D7FC               	bra	u17107
  9347  004E1E  F000               	nop	
  9348                           
  9349                           ;lcd.c: 43: lcd_sendCommand(0x03);
  9350  004E20  0E03               	movlw	3
  9351  004E22  EC30  F02A         	call	_lcd_sendCommand
  9352                           
  9353                           ;lcd.c: 44: _delay((unsigned long)((5)*(16000000UL/4000.0)));
  9354  004E26  0E1A               	movlw	26
  9355  004E28  0100               	movlb	0	; () banked
  9356  004E2A  6F93               	movwf	??_lcd_init& (0+255),b
  9357  004E2C  0EF8               	movlw	248
  9358  004E2E                     u17117:
  9359  004E2E  2EE8               	decfsz	wreg,f,c
  9360  004E30  D7FE               	bra	u17117
  9361  004E32  2F93               	decfsz	??_lcd_init& (0+255),f,b
  9362  004E34  D7FC               	bra	u17117
  9363  004E36  F000               	nop	
  9364                           
  9365                           ;lcd.c: 45: lcd_sendCommand(0x03);
  9366  004E38  0E03               	movlw	3
  9367  004E3A  EC30  F02A         	call	_lcd_sendCommand
  9368                           
  9369                           ;lcd.c: 46: _delay((unsigned long)((11)*(16000000UL/4000.0)));
  9370  004E3E  0E3A               	movlw	58
  9371  004E40  0100               	movlb	0	; () banked
  9372  004E42  6F93               	movwf	??_lcd_init& (0+255),b
  9373  004E44  0E23               	movlw	35
  9374  004E46                     u17127:
  9375  004E46  2EE8               	decfsz	wreg,f,c
  9376  004E48  D7FE               	bra	u17127
  9377  004E4A  2F93               	decfsz	??_lcd_init& (0+255),f,b
  9378  004E4C  D7FC               	bra	u17127
  9379                           
  9380                           ;lcd.c: 47: lcd_sendCommand(0x03);
  9381  004E4E  0E03               	movlw	3
  9382  004E50  EC30  F02A         	call	_lcd_sendCommand
  9383                           
  9384                           ;lcd.c: 49: lcd_sendCommand(0x02);
  9385  004E54  0E02               	movlw	2
  9386  004E56  EC30  F02A         	call	_lcd_sendCommand
  9387                           
  9388                           ;lcd.c: 50: lcd_sendCommand(0x02);
  9389  004E5A  0E02               	movlw	2
  9390  004E5C  EC30  F02A         	call	_lcd_sendCommand
  9391                           
  9392                           ;lcd.c: 51: lcd_sendCommand(0x08);
  9393  004E60  0E08               	movlw	8
  9394  004E62  EC30  F02A         	call	_lcd_sendCommand
  9395                           
  9396                           ;lcd.c: 52: lcd_sendCommand(0x00);
  9397  004E66  0E00               	movlw	0
  9398  004E68  EC30  F02A         	call	_lcd_sendCommand
  9399                           
  9400                           ;lcd.c: 53: lcd_sendCommand(0x0C);
  9401  004E6C  0E0C               	movlw	12
  9402  004E6E  EC30  F02A         	call	_lcd_sendCommand
  9403                           
  9404                           ;lcd.c: 54: lcd_sendCommand(0x00);
  9405  004E72  0E00               	movlw	0
  9406  004E74  EC30  F02A         	call	_lcd_sendCommand
  9407                           
  9408                           ;lcd.c: 55: lcd_sendCommand(0x06);
  9409  004E78  0E06               	movlw	6
  9410  004E7A  EC30  F02A         	call	_lcd_sendCommand
  9411  004E7E  0012               	return		;funcret
  9412  004E80                     __end_of_lcd_init:
  9413                           	opt stack 0
  9414                           tosu	equ	0xFFF
  9415                           tosh	equ	0xFFE
  9416                           tosl	equ	0xFFD
  9417                           pclath	equ	0xFFA
  9418                           tblptru	equ	0xFF8
  9419                           tblptrh	equ	0xFF7
  9420                           tblptrl	equ	0xFF6
  9421                           tablat	equ	0xFF5
  9422                           prodh	equ	0xFF4
  9423                           prodl	equ	0xFF3
  9424                           intcon	equ	0xFF2
  9425                           postinc0	equ	0xFEE
  9426                           wreg	equ	0xFE8
  9427                           postdec1	equ	0xFE5
  9428                           fsr1l	equ	0xFE1
  9429                           indf2	equ	0xFDF
  9430                           postinc2	equ	0xFDE
  9431                           postdec2	equ	0xFDD
  9432                           fsr2h	equ	0xFDA
  9433                           fsr2l	equ	0xFD9
  9434                           status	equ	0xFD8
  9435                           
  9436 ;; *************** function _lcd_clear *****************
  9437 ;; Defined at:
  9438 ;;		line 12 in file "lcd.c"
  9439 ;; Parameters:    Size  Location     Type
  9440 ;;		None
  9441 ;; Auto vars:     Size  Location     Type
  9442 ;;		None
  9443 ;; Return value:  Size  Location     Type
  9444 ;;                  1    wreg      void 
  9445 ;; Registers used:
  9446 ;;		wreg, status,2, cstack
  9447 ;; Tracked objects:
  9448 ;;		On entry : 0/0
  9449 ;;		On exit  : 0/0
  9450 ;;		Unchanged: 0/0
  9451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9452 ;;      Params:         0       0       0       0       0       0       0
  9453 ;;      Locals:         0       0       0       0       0       0       0
  9454 ;;      Temps:          0       0       0       0       0       0       0
  9455 ;;      Totals:         0       0       0       0       0       0       0
  9456 ;;Total ram usage:        0 bytes
  9457 ;; Hardware stack levels used:    1
  9458 ;; Hardware stack levels required when called:    9
  9459 ;; This function calls:
  9460 ;;		_lcd_sendCommand
  9461 ;; This function is called by:
  9462 ;;		_main
  9463 ;; This function uses a non-reentrant model
  9464 ;;
  9465                           
  9466                           	psect	text27
  9467  005582                     __ptext27:
  9468                           	opt stack 0
  9469  005582                     _lcd_clear:
  9470                           	opt stack 21
  9471                           
  9472                           ;lcd.c: 14: lcd_sendCommand(0);
  9473                           
  9474                           ;incstack = 0
  9475  005582  0E00               	movlw	0
  9476  005584  EC30  F02A         	call	_lcd_sendCommand
  9477                           
  9478                           ;lcd.c: 15: lcd_sendCommand(1);
  9479  005588  0E01               	movlw	1
  9480  00558A  EC30  F02A         	call	_lcd_sendCommand
  9481  00558E  0012               	return		;funcret
  9482  005590                     __end_of_lcd_clear:
  9483                           	opt stack 0
  9484                           tosu	equ	0xFFF
  9485                           tosh	equ	0xFFE
  9486                           tosl	equ	0xFFD
  9487                           pclath	equ	0xFFA
  9488                           tblptru	equ	0xFF8
  9489                           tblptrh	equ	0xFF7
  9490                           tblptrl	equ	0xFF6
  9491                           tablat	equ	0xFF5
  9492                           prodh	equ	0xFF4
  9493                           prodl	equ	0xFF3
  9494                           intcon	equ	0xFF2
  9495                           postinc0	equ	0xFEE
  9496                           wreg	equ	0xFE8
  9497                           postdec1	equ	0xFE5
  9498                           fsr1l	equ	0xFE1
  9499                           indf2	equ	0xFDF
  9500                           postinc2	equ	0xFDE
  9501                           postdec2	equ	0xFDD
  9502                           fsr2h	equ	0xFDA
  9503                           fsr2l	equ	0xFD9
  9504                           status	equ	0xFD8
  9505                           
  9506 ;; *************** function _lcd_sendCommand *****************
  9507 ;; Defined at:
  9508 ;;		line 3 in file "lcd.c"
  9509 ;; Parameters:    Size  Location     Type
  9510 ;;  a               1    wreg     unsigned char 
  9511 ;; Auto vars:     Size  Location     Type
  9512 ;;  a               1   50[BANK0 ] unsigned char 
  9513 ;; Return value:  Size  Location     Type
  9514 ;;                  1    wreg      void 
  9515 ;; Registers used:
  9516 ;;		wreg, status,2, cstack
  9517 ;; Tracked objects:
  9518 ;;		On entry : 0/0
  9519 ;;		On exit  : 0/0
  9520 ;;		Unchanged: 0/0
  9521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9522 ;;      Params:         0       0       0       0       0       0       0
  9523 ;;      Locals:         0       1       0       0       0       0       0
  9524 ;;      Temps:          0       1       0       0       0       0       0
  9525 ;;      Totals:         0       2       0       0       0       0       0
  9526 ;;Total ram usage:        2 bytes
  9527 ;; Hardware stack levels used:    1
  9528 ;; Hardware stack levels required when called:    8
  9529 ;; This function calls:
  9530 ;;		__lcd_Port
  9531 ;; This function is called by:
  9532 ;;		_lcd_clear
  9533 ;;		_lcd_setPosition
  9534 ;;		_lcd_init
  9535 ;;		_lcd_shiftRight
  9536 ;;		_lcd_shiftLeft
  9537 ;; This function uses a non-reentrant model
  9538 ;;
  9539                           
  9540                           	psect	text28
  9541  005460                     __ptext28:
  9542                           	opt stack 0
  9543  005460                     _lcd_sendCommand:
  9544                           	opt stack 20
  9545                           
  9546                           ;incstack = 0
  9547                           ;lcd_sendCommand@a stored from wreg
  9548  005460  0100               	movlb	0	; () banked
  9549  005462  6F92               	movwf	lcd_sendCommand@a& (0+255),b
  9550                           
  9551                           ;lcd.c: 5: LATAbits.LA5 = 0;
  9552  005464  9A89               	bcf	3977,5,c	;volatile
  9553                           
  9554                           ;lcd.c: 6: _lcd_Port(a);
  9555  005466  0100               	movlb	0	; () banked
  9556  005468  5192               	movf	lcd_sendCommand@a& (0+255),w,b
  9557  00546A  EC9D  F029         	call	__lcd_Port
  9558                           
  9559                           ;lcd.c: 7: LATAbits.LA4 = 1;
  9560  00546E  8889               	bsf	3977,4,c	;volatile
  9561                           
  9562                           ;lcd.c: 8: _delay((unsigned long)((4)*(16000000UL/4000.0)));
  9563  005470  0E15               	movlw	21
  9564  005472  0100               	movlb	0	; () banked
  9565  005474  6F91               	movwf	??_lcd_sendCommand& (0+255),b
  9566  005476  0EC6               	movlw	198
  9567  005478                     u17137:
  9568  005478  2EE8               	decfsz	wreg,f,c
  9569  00547A  D7FE               	bra	u17137
  9570  00547C  2F91               	decfsz	??_lcd_sendCommand& (0+255),f,b
  9571  00547E  D7FC               	bra	u17137
  9572  005480  F000               	nop	
  9573                           
  9574                           ;lcd.c: 9: LATAbits.LA4 = 0;
  9575  005482  9889               	bcf	3977,4,c	;volatile
  9576  005484  0012               	return		;funcret
  9577  005486                     __end_of_lcd_sendCommand:
  9578                           	opt stack 0
  9579                           tosu	equ	0xFFF
  9580                           tosh	equ	0xFFE
  9581                           tosl	equ	0xFFD
  9582                           pclath	equ	0xFFA
  9583                           tblptru	equ	0xFF8
  9584                           tblptrh	equ	0xFF7
  9585                           tblptrl	equ	0xFF6
  9586                           tablat	equ	0xFF5
  9587                           prodh	equ	0xFF4
  9588                           prodl	equ	0xFF3
  9589                           intcon	equ	0xFF2
  9590                           postinc0	equ	0xFEE
  9591                           wreg	equ	0xFE8
  9592                           postdec1	equ	0xFE5
  9593                           fsr1l	equ	0xFE1
  9594                           indf2	equ	0xFDF
  9595                           postinc2	equ	0xFDE
  9596                           postdec2	equ	0xFDD
  9597                           fsr2h	equ	0xFDA
  9598                           fsr2l	equ	0xFD9
  9599                           status	equ	0xFD8
  9600                           
  9601 ;; *************** function __lcd_Port *****************
  9602 ;; Defined at:
  9603 ;;		line 139 in file "lcd.c"
  9604 ;; Parameters:    Size  Location     Type
  9605 ;;  a               1    wreg     unsigned char 
  9606 ;; Auto vars:     Size  Location     Type
  9607 ;;  a               1   48[BANK0 ] unsigned char 
  9608 ;; Return value:  Size  Location     Type
  9609 ;;                  1    wreg      void 
  9610 ;; Registers used:
  9611 ;;		wreg
  9612 ;; Tracked objects:
  9613 ;;		On entry : 0/0
  9614 ;;		On exit  : 0/0
  9615 ;;		Unchanged: 0/0
  9616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9617 ;;      Params:         0       0       0       0       0       0       0
  9618 ;;      Locals:         0       1       0       0       0       0       0
  9619 ;;      Temps:          0       0       0       0       0       0       0
  9620 ;;      Totals:         0       1       0       0       0       0       0
  9621 ;;Total ram usage:        1 bytes
  9622 ;; Hardware stack levels used:    1
  9623 ;; Hardware stack levels required when called:    7
  9624 ;; This function calls:
  9625 ;;		Nothing
  9626 ;; This function is called by:
  9627 ;;		_lcd_sendCommand
  9628 ;;		_lcd_init
  9629 ;;		_lcd_sendChar
  9630 ;; This function uses a non-reentrant model
  9631 ;;
  9632                           
  9633                           	psect	text29
  9634  00533A                     __ptext29:
  9635                           	opt stack 0
  9636  00533A                     __lcd_Port:
  9637                           	opt stack 20
  9638                           
  9639                           ;incstack = 0
  9640                           ;__lcd_Port@a stored from wreg
  9641  00533A  0100               	movlb	0	; () banked
  9642  00533C  6F90               	movwf	__lcd_Port@a& (0+255),b
  9643                           
  9644                           ;lcd.c: 141: if(a & 1)
  9645  00533E  0100               	movlb	0	; () banked
  9646  005340  A190               	btfss	__lcd_Port@a& (0+255),0,b
  9647  005342  D002               	goto	l345
  9648                           
  9649                           ; BSR set to: 0
  9650                           ;lcd.c: 142: LATAbits.LA3 = 1;
  9651  005344  8689               	bsf	3977,3,c	;volatile
  9652  005346  D001               	goto	l3912
  9653  005348                     l345:
  9654                           
  9655                           ; BSR set to: 0
  9656                           ;lcd.c: 143: else
  9657                           ;lcd.c: 144: LATAbits.LA3 = 0;
  9658  005348  9689               	bcf	3977,3,c	;volatile
  9659  00534A                     l3912:
  9660                           
  9661                           ; BSR set to: 0
  9662                           ;lcd.c: 146: if(a & 2)
  9663  00534A  0100               	movlb	0	; () banked
  9664  00534C  A390               	btfss	__lcd_Port@a& (0+255),1,b
  9665  00534E  D002               	goto	l347
  9666                           
  9667                           ; BSR set to: 0
  9668                           ;lcd.c: 147: LATAbits.LA2 = 1;
  9669  005350  8489               	bsf	3977,2,c	;volatile
  9670  005352  D001               	goto	l3916
  9671  005354                     l347:
  9672                           
  9673                           ; BSR set to: 0
  9674                           ;lcd.c: 148: else
  9675                           ;lcd.c: 149: LATAbits.LA2 = 0;
  9676  005354  9489               	bcf	3977,2,c	;volatile
  9677  005356                     l3916:
  9678                           
  9679                           ; BSR set to: 0
  9680                           ;lcd.c: 151: if(a & 4)
  9681  005356  0100               	movlb	0	; () banked
  9682  005358  A590               	btfss	__lcd_Port@a& (0+255),2,b
  9683  00535A  D002               	goto	l349
  9684                           
  9685                           ; BSR set to: 0
  9686                           ;lcd.c: 152: LATAbits.LA1 = 1;
  9687  00535C  8289               	bsf	3977,1,c	;volatile
  9688  00535E  D001               	goto	l3920
  9689  005360                     l349:
  9690                           
  9691                           ; BSR set to: 0
  9692                           ;lcd.c: 153: else
  9693                           ;lcd.c: 154: LATAbits.LA1 = 0;
  9694  005360  9289               	bcf	3977,1,c	;volatile
  9695  005362                     l3920:
  9696                           
  9697                           ; BSR set to: 0
  9698                           ;lcd.c: 156: if(a & 8)
  9699  005362  0100               	movlb	0	; () banked
  9700  005364  A790               	btfss	__lcd_Port@a& (0+255),3,b
  9701  005366  D002               	goto	l351
  9702                           
  9703                           ; BSR set to: 0
  9704                           ;lcd.c: 157: LATAbits.LA0 = 1;
  9705  005368  8089               	bsf	3977,0,c	;volatile
  9706  00536A  0012               	return	
  9707  00536C                     l351:
  9708                           
  9709                           ; BSR set to: 0
  9710                           ;lcd.c: 158: else
  9711                           ;lcd.c: 159: LATAbits.LA0 = 0;
  9712  00536C  9089               	bcf	3977,0,c	;volatile
  9713  00536E  0012               	return	
  9714  005370                     __end_of__lcd_Port:
  9715                           	opt stack 0
  9716                           tosu	equ	0xFFF
  9717                           tosh	equ	0xFFE
  9718                           tosl	equ	0xFFD
  9719                           pclath	equ	0xFFA
  9720                           tblptru	equ	0xFF8
  9721                           tblptrh	equ	0xFF7
  9722                           tblptrl	equ	0xFF6
  9723                           tablat	equ	0xFF5
  9724                           prodh	equ	0xFF4
  9725                           prodl	equ	0xFF3
  9726                           intcon	equ	0xFF2
  9727                           postinc0	equ	0xFEE
  9728                           wreg	equ	0xFE8
  9729                           postdec1	equ	0xFE5
  9730                           fsr1l	equ	0xFE1
  9731                           indf2	equ	0xFDF
  9732                           postinc2	equ	0xFDE
  9733                           postdec2	equ	0xFDD
  9734                           fsr2h	equ	0xFDA
  9735                           fsr2l	equ	0xFD9
  9736                           status	equ	0xFD8
  9737                           
  9738 ;; *************** function ___ftdiv *****************
  9739 ;; Defined at:
  9740 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftdiv.c"
  9741 ;; Parameters:    Size  Location     Type
  9742 ;;  f1              3   56[BANK0 ] float 
  9743 ;;  f2              3   59[BANK0 ] float 
  9744 ;; Auto vars:     Size  Location     Type
  9745 ;;  f3              3   66[BANK0 ] float 
  9746 ;;  sign            1   70[BANK0 ] unsigned char 
  9747 ;;  exp             1   69[BANK0 ] unsigned char 
  9748 ;;  cntr            1   65[BANK0 ] unsigned char 
  9749 ;; Return value:  Size  Location     Type
  9750 ;;                  3   56[BANK0 ] float 
  9751 ;; Registers used:
  9752 ;;		wreg, status,2, status,0, cstack
  9753 ;; Tracked objects:
  9754 ;;		On entry : 0/0
  9755 ;;		On exit  : 0/0
  9756 ;;		Unchanged: 0/0
  9757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9758 ;;      Params:         0       6       0       0       0       0       0
  9759 ;;      Locals:         0       6       0       0       0       0       0
  9760 ;;      Temps:          0       3       0       0       0       0       0
  9761 ;;      Totals:         0      15       0       0       0       0       0
  9762 ;;Total ram usage:       15 bytes
  9763 ;; Hardware stack levels used:    1
  9764 ;; Hardware stack levels required when called:    8
  9765 ;; This function calls:
  9766 ;;		___ftpack
  9767 ;; This function is called by:
  9768 ;;		_main
  9769 ;; This function uses a non-reentrant model
  9770 ;;
  9771                           
  9772                           	psect	text30
  9773  003DE4                     __ptext30:
  9774                           	opt stack 0
  9775  003DE4                     ___ftdiv:
  9776                           	opt stack 22
  9777                           
  9778                           ; BSR set to: 0
  9779                           ;incstack = 0
  9780  003DE4  C09A  F09E         	movff	___ftdiv@f1+2,??___ftdiv
  9781  003DE8  0100               	movlb	0	; () banked
  9782  003DEA  6B9F               	clrf	(??___ftdiv+1)& (0+255),b
  9783  003DEC  6BA0               	clrf	(??___ftdiv+2)& (0+255),b
  9784  003DEE  0100               	movlb	0	; () banked
  9785  003DF0  3599               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  9786  003DF2  0100               	movlb	0	; () banked
  9787  003DF4  379E               	rlcf	??___ftdiv& (0+255),f,b
  9788  003DF6  E301               	bnc	u10931
  9789  003DF8  819F               	bsf	(??___ftdiv+1)& (0+255),0,b
  9790  003DFA                     u10931:
  9791  003DFA  0100               	movlb	0	; () banked
  9792  003DFC  519E               	movf	??___ftdiv& (0+255),w,b
  9793  003DFE  0100               	movlb	0	; () banked
  9794  003E00  6FA5               	movwf	___ftdiv@exp& (0+255),b
  9795  003E02  0100               	movlb	0	; () banked
  9796  003E04  51A5               	movf	___ftdiv@exp& (0+255),w,b
  9797  003E06  A4D8               	btfss	status,2,c
  9798  003E08  D00A               	goto	l7196
  9799                           
  9800                           ; BSR set to: 0
  9801  003E0A  0E00               	movlw	0
  9802  003E0C  0100               	movlb	0	; () banked
  9803  003E0E  6F98               	movwf	?___ftdiv& (0+255),b
  9804  003E10  0E00               	movlw	0
  9805  003E12  0100               	movlb	0	; () banked
  9806  003E14  6F99               	movwf	(?___ftdiv+1)& (0+255),b
  9807  003E16  0E00               	movlw	0
  9808  003E18  0100               	movlb	0	; () banked
  9809  003E1A  6F9A               	movwf	(?___ftdiv+2)& (0+255),b
  9810                           
  9811                           ; BSR set to: 0
  9812  003E1C  0012               	return	
  9813  003E1E                     l7196:
  9814                           
  9815                           ; BSR set to: 0
  9816  003E1E  C09D  F09E         	movff	___ftdiv@f2+2,??___ftdiv
  9817  003E22  0100               	movlb	0	; () banked
  9818  003E24  6B9F               	clrf	(??___ftdiv+1)& (0+255),b
  9819  003E26  6BA0               	clrf	(??___ftdiv+2)& (0+255),b
  9820  003E28  0100               	movlb	0	; () banked
  9821  003E2A  359C               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  9822  003E2C  0100               	movlb	0	; () banked
  9823  003E2E  379E               	rlcf	??___ftdiv& (0+255),f,b
  9824  003E30  E301               	bnc	u10951
  9825  003E32  819F               	bsf	(??___ftdiv+1)& (0+255),0,b
  9826  003E34                     u10951:
  9827  003E34  0100               	movlb	0	; () banked
  9828  003E36  519E               	movf	??___ftdiv& (0+255),w,b
  9829  003E38  0100               	movlb	0	; () banked
  9830  003E3A  6FA6               	movwf	___ftdiv@sign& (0+255),b
  9831  003E3C  0100               	movlb	0	; () banked
  9832  003E3E  51A6               	movf	___ftdiv@sign& (0+255),w,b
  9833  003E40  A4D8               	btfss	status,2,c
  9834  003E42  D00A               	goto	l7202
  9835                           
  9836                           ; BSR set to: 0
  9837  003E44  0E00               	movlw	0
  9838  003E46  0100               	movlb	0	; () banked
  9839  003E48  6F98               	movwf	?___ftdiv& (0+255),b
  9840  003E4A  0E00               	movlw	0
  9841  003E4C  0100               	movlb	0	; () banked
  9842  003E4E  6F99               	movwf	(?___ftdiv+1)& (0+255),b
  9843  003E50  0E00               	movlw	0
  9844  003E52  0100               	movlb	0	; () banked
  9845  003E54  6F9A               	movwf	(?___ftdiv+2)& (0+255),b
  9846                           
  9847                           ; BSR set to: 0
  9848  003E56  0012               	return	
  9849  003E58                     l7202:
  9850                           
  9851                           ; BSR set to: 0
  9852  003E58  0E00               	movlw	0
  9853  003E5A  0100               	movlb	0	; () banked
  9854  003E5C  6FA2               	movwf	___ftdiv@f3& (0+255),b
  9855  003E5E  0E00               	movlw	0
  9856  003E60  0100               	movlb	0	; () banked
  9857  003E62  6FA3               	movwf	(___ftdiv@f3+1)& (0+255),b
  9858  003E64  0E00               	movlw	0
  9859  003E66  0100               	movlb	0	; () banked
  9860  003E68  6FA4               	movwf	(___ftdiv@f3+2)& (0+255),b
  9861                           
  9862                           ; BSR set to: 0
  9863  003E6A  0100               	movlb	0	; () banked
  9864  003E6C  51A6               	movf	___ftdiv@sign& (0+255),w,b
  9865  003E6E  0F89               	addlw	137
  9866  003E70  0100               	movlb	0	; () banked
  9867  003E72  5FA5               	subwf	___ftdiv@exp& (0+255),f,b
  9868                           
  9869                           ; BSR set to: 0
  9870  003E74  C09A  F0A6         	movff	___ftdiv@f1+2,___ftdiv@sign
  9871                           
  9872                           ; BSR set to: 0
  9873  003E78  0100               	movlb	0	; () banked
  9874  003E7A  519D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9875  003E7C  0100               	movlb	0	; () banked
  9876  003E7E  1BA6               	xorwf	___ftdiv@sign& (0+255),f,b
  9877                           
  9878                           ; BSR set to: 0
  9879  003E80  0E80               	movlw	128
  9880  003E82  0100               	movlb	0	; () banked
  9881  003E84  17A6               	andwf	___ftdiv@sign& (0+255),f,b
  9882                           
  9883                           ; BSR set to: 0
  9884  003E86  0100               	movlb	0	; () banked
  9885  003E88  8F99               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  9886                           
  9887                           ; BSR set to: 0
  9888  003E8A  0EFF               	movlw	255
  9889  003E8C  0100               	movlb	0	; () banked
  9890  003E8E  1798               	andwf	___ftdiv@f1& (0+255),f,b
  9891  003E90  0EFF               	movlw	255
  9892  003E92  0100               	movlb	0	; () banked
  9893  003E94  1799               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  9894  003E96  0E00               	movlw	0
  9895  003E98  0100               	movlb	0	; () banked
  9896  003E9A  179A               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  9897                           
  9898                           ; BSR set to: 0
  9899  003E9C  0100               	movlb	0	; () banked
  9900  003E9E  8F9C               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  9901                           
  9902                           ; BSR set to: 0
  9903  003EA0  0EFF               	movlw	255
  9904  003EA2  0100               	movlb	0	; () banked
  9905  003EA4  179B               	andwf	___ftdiv@f2& (0+255),f,b
  9906  003EA6  0EFF               	movlw	255
  9907  003EA8  0100               	movlb	0	; () banked
  9908  003EAA  179C               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  9909  003EAC  0E00               	movlw	0
  9910  003EAE  0100               	movlb	0	; () banked
  9911  003EB0  179D               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  9912                           
  9913                           ; BSR set to: 0
  9914  003EB2  0E18               	movlw	24
  9915  003EB4  0100               	movlb	0	; () banked
  9916  003EB6  6FA1               	movwf	___ftdiv@cntr& (0+255),b
  9917  003EB8                     l7222:
  9918                           
  9919                           ; BSR set to: 0
  9920  003EB8  0100               	movlb	0	; () banked
  9921  003EBA  90D8               	bcf	status,0,c
  9922  003EBC  37A2               	rlcf	___ftdiv@f3& (0+255),f,b
  9923  003EBE  37A3               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  9924  003EC0  37A4               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  9925                           
  9926                           ; BSR set to: 0
  9927  003EC2  0100               	movlb	0	; () banked
  9928  003EC4  519B               	movf	___ftdiv@f2& (0+255),w,b
  9929  003EC6  0100               	movlb	0	; () banked
  9930  003EC8  5D98               	subwf	___ftdiv@f1& (0+255),w,b
  9931  003ECA  0100               	movlb	0	; () banked
  9932  003ECC  519C               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9933  003ECE  0100               	movlb	0	; () banked
  9934  003ED0  5999               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  9935  003ED2  0100               	movlb	0	; () banked
  9936  003ED4  519D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9937  003ED6  0100               	movlb	0	; () banked
  9938  003ED8  599A               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  9939  003EDA  A0D8               	btfss	status,0,c
  9940  003EDC  D00E               	goto	l827
  9941                           
  9942                           ; BSR set to: 0
  9943  003EDE  0100               	movlb	0	; () banked
  9944  003EE0  519B               	movf	___ftdiv@f2& (0+255),w,b
  9945  003EE2  0100               	movlb	0	; () banked
  9946  003EE4  5F98               	subwf	___ftdiv@f1& (0+255),f,b
  9947  003EE6  0100               	movlb	0	; () banked
  9948  003EE8  519C               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9949  003EEA  0100               	movlb	0	; () banked
  9950  003EEC  5B99               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  9951  003EEE  0100               	movlb	0	; () banked
  9952  003EF0  519D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9953  003EF2  0100               	movlb	0	; () banked
  9954  003EF4  5B9A               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  9955                           
  9956                           ; BSR set to: 0
  9957  003EF6  0100               	movlb	0	; () banked
  9958  003EF8  81A2               	bsf	___ftdiv@f3& (0+255),0,b
  9959  003EFA                     l827:
  9960                           
  9961                           ; BSR set to: 0
  9962  003EFA  0100               	movlb	0	; () banked
  9963  003EFC  90D8               	bcf	status,0,c
  9964  003EFE  3798               	rlcf	___ftdiv@f1& (0+255),f,b
  9965  003F00  3799               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  9966  003F02  379A               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  9967                           
  9968                           ; BSR set to: 0
  9969  003F04  0100               	movlb	0	; () banked
  9970  003F06  2FA1               	decfsz	___ftdiv@cntr& (0+255),f,b
  9971  003F08  D7D7               	goto	l7222
  9972                           
  9973                           ; BSR set to: 0
  9974                           
  9975                           ; BSR set to: 0
  9976  003F0A  C0A2  F090         	movff	___ftdiv@f3,___ftpack@arg
  9977  003F0E  C0A3  F091         	movff	___ftdiv@f3+1,___ftpack@arg+1
  9978  003F12  C0A4  F092         	movff	___ftdiv@f3+2,___ftpack@arg+2
  9979  003F16  C0A5  F093         	movff	___ftdiv@exp,___ftpack@exp
  9980  003F1A  C0A6  F094         	movff	___ftdiv@sign,___ftpack@sign
  9981  003F1E  ECF8  F021         	call	___ftpack	;wreg free
  9982  003F22  C090  F098         	movff	?___ftpack,?___ftdiv
  9983  003F26  C091  F099         	movff	?___ftpack+1,?___ftdiv+1
  9984  003F2A  C092  F09A         	movff	?___ftpack+2,?___ftdiv+2
  9985  003F2E  0012               	return	
  9986  003F30                     __end_of___ftdiv:
  9987                           	opt stack 0
  9988                           tosu	equ	0xFFF
  9989                           tosh	equ	0xFFE
  9990                           tosl	equ	0xFFD
  9991                           pclath	equ	0xFFA
  9992                           tblptru	equ	0xFF8
  9993                           tblptrh	equ	0xFF7
  9994                           tblptrl	equ	0xFF6
  9995                           tablat	equ	0xFF5
  9996                           prodh	equ	0xFF4
  9997                           prodl	equ	0xFF3
  9998                           intcon	equ	0xFF2
  9999                           postinc0	equ	0xFEE
 10000                           wreg	equ	0xFE8
 10001                           postdec1	equ	0xFE5
 10002                           fsr1l	equ	0xFE1
 10003                           indf2	equ	0xFDF
 10004                           postinc2	equ	0xFDE
 10005                           postdec2	equ	0xFDD
 10006                           fsr2h	equ	0xFDA
 10007                           fsr2l	equ	0xFD9
 10008                           status	equ	0xFD8
 10009                           
 10010 ;; *************** function ___ftpack *****************
 10011 ;; Defined at:
 10012 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\float.c"
 10013 ;; Parameters:    Size  Location     Type
 10014 ;;  arg             3   48[BANK0 ] unsigned um
 10015 ;;  exp             1   51[BANK0 ] unsigned char 
 10016 ;;  sign            1   52[BANK0 ] unsigned char 
 10017 ;; Auto vars:     Size  Location     Type
 10018 ;;		None
 10019 ;; Return value:  Size  Location     Type
 10020 ;;                  3   48[BANK0 ] float 
 10021 ;; Registers used:
 10022 ;;		wreg, status,2, status,0
 10023 ;; Tracked objects:
 10024 ;;		On entry : 0/0
 10025 ;;		On exit  : 0/0
 10026 ;;		Unchanged: 0/0
 10027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10028 ;;      Params:         0       5       0       0       0       0       0
 10029 ;;      Locals:         0       0       0       0       0       0       0
 10030 ;;      Temps:          0       3       0       0       0       0       0
 10031 ;;      Totals:         0       8       0       0       0       0       0
 10032 ;;Total ram usage:        8 bytes
 10033 ;; Hardware stack levels used:    1
 10034 ;; Hardware stack levels required when called:    7
 10035 ;; This function calls:
 10036 ;;		Nothing
 10037 ;; This function is called by:
 10038 ;;		___ftadd
 10039 ;;		___ftdiv
 10040 ;;		___ftmul
 10041 ;;		___lltoft
 10042 ;; This function uses a non-reentrant model
 10043 ;;
 10044                           
 10045                           	psect	text31
 10046  0043F0                     __ptext31:
 10047                           	opt stack 0
 10048  0043F0                     ___ftpack:
 10049                           	opt stack 19
 10050                           
 10051                           ;incstack = 0
 10052  0043F0  0100               	movlb	0	; () banked
 10053  0043F2  5193               	movf	___ftpack@exp& (0+255),w,b
 10054  0043F4  0100               	movlb	0	; () banked
 10055  0043F6  B4D8               	btfsc	status,2,c
 10056  0043F8  D008               	goto	l5960
 10057                           
 10058                           ; BSR set to: 0
 10059  0043FA  0100               	movlb	0	; () banked
 10060  0043FC  5190               	movf	___ftpack@arg& (0+255),w,b
 10061  0043FE  0100               	movlb	0	; () banked
 10062  004400  1191               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 10063  004402  0100               	movlb	0	; () banked
 10064  004404  1192               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 10065  004406  A4D8               	btfss	status,2,c
 10066  004408  D011               	goto	l5966
 10067  00440A                     l5960:
 10068                           
 10069                           ; BSR set to: 0
 10070  00440A  0E00               	movlw	0
 10071  00440C  0100               	movlb	0	; () banked
 10072  00440E  6F90               	movwf	?___ftpack& (0+255),b
 10073  004410  0E00               	movlw	0
 10074  004412  0100               	movlb	0	; () banked
 10075  004414  6F91               	movwf	(?___ftpack+1)& (0+255),b
 10076  004416  0E00               	movlw	0
 10077  004418  0100               	movlb	0	; () banked
 10078  00441A  6F92               	movwf	(?___ftpack+2)& (0+255),b
 10079                           
 10080                           ; BSR set to: 0
 10081  00441C  0012               	return	
 10082  00441E                     l5964:
 10083                           
 10084                           ; BSR set to: 0
 10085  00441E  0100               	movlb	0	; () banked
 10086  004420  2B93               	incf	___ftpack@exp& (0+255),f,b
 10087  004422  0100               	movlb	0	; () banked
 10088  004424  90D8               	bcf	status,0,c
 10089  004426  3392               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10090  004428  3391               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10091  00442A  3390               	rrcf	___ftpack@arg& (0+255),f,b
 10092  00442C                     l5966:
 10093                           
 10094                           ; BSR set to: 0
 10095  00442C  0E00               	movlw	0
 10096  00442E  0100               	movlb	0	; () banked
 10097  004430  1590               	andwf	___ftpack@arg& (0+255),w,b
 10098  004432  0100               	movlb	0	; () banked
 10099  004434  6F95               	movwf	??___ftpack& (0+255),b
 10100  004436  0E00               	movlw	0
 10101  004438  0100               	movlb	0	; () banked
 10102  00443A  1591               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10103  00443C  0100               	movlb	0	; () banked
 10104  00443E  6F96               	movwf	(??___ftpack+1)& (0+255),b
 10105  004440  0EFE               	movlw	254
 10106  004442  0100               	movlb	0	; () banked
 10107  004444  1592               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10108  004446  0100               	movlb	0	; () banked
 10109  004448  6F97               	movwf	(??___ftpack+2)& (0+255),b
 10110  00444A  0100               	movlb	0	; () banked
 10111  00444C  5195               	movf	??___ftpack& (0+255),w,b
 10112  00444E  0100               	movlb	0	; () banked
 10113  004450  1196               	iorwf	(??___ftpack+1)& (0+255),w,b
 10114  004452  0100               	movlb	0	; () banked
 10115  004454  1197               	iorwf	(??___ftpack+2)& (0+255),w,b
 10116  004456  B4D8               	btfsc	status,2,c
 10117  004458  D011               	goto	l5972
 10118  00445A  D7E1               	goto	l5964
 10119  00445C                     l5968:
 10120                           
 10121                           ; BSR set to: 0
 10122  00445C  0100               	movlb	0	; () banked
 10123  00445E  2B93               	incf	___ftpack@exp& (0+255),f,b
 10124                           
 10125                           ; BSR set to: 0
 10126  004460  0E01               	movlw	1
 10127  004462  0100               	movlb	0	; () banked
 10128  004464  2790               	addwf	___ftpack@arg& (0+255),f,b
 10129  004466  0E00               	movlw	0
 10130  004468  0100               	movlb	0	; () banked
 10131  00446A  2391               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 10132  00446C  0E00               	movlw	0
 10133  00446E  0100               	movlb	0	; () banked
 10134  004470  2392               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 10135  004472  0100               	movlb	0	; () banked
 10136  004474  90D8               	bcf	status,0,c
 10137  004476  3392               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10138  004478  3391               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10139  00447A  3390               	rrcf	___ftpack@arg& (0+255),f,b
 10140  00447C                     l5972:
 10141                           
 10142                           ; BSR set to: 0
 10143  00447C  0E00               	movlw	0
 10144  00447E  0100               	movlb	0	; () banked
 10145  004480  1590               	andwf	___ftpack@arg& (0+255),w,b
 10146  004482  0100               	movlb	0	; () banked
 10147  004484  6F95               	movwf	??___ftpack& (0+255),b
 10148  004486  0E00               	movlw	0
 10149  004488  0100               	movlb	0	; () banked
 10150  00448A  1591               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10151  00448C  0100               	movlb	0	; () banked
 10152  00448E  6F96               	movwf	(??___ftpack+1)& (0+255),b
 10153  004490  0EFF               	movlw	255
 10154  004492  0100               	movlb	0	; () banked
 10155  004494  1592               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10156  004496  0100               	movlb	0	; () banked
 10157  004498  6F97               	movwf	(??___ftpack+2)& (0+255),b
 10158  00449A  0100               	movlb	0	; () banked
 10159  00449C  5195               	movf	??___ftpack& (0+255),w,b
 10160  00449E  0100               	movlb	0	; () banked
 10161  0044A0  1196               	iorwf	(??___ftpack+1)& (0+255),w,b
 10162  0044A2  0100               	movlb	0	; () banked
 10163  0044A4  1197               	iorwf	(??___ftpack+2)& (0+255),w,b
 10164  0044A6  B4D8               	btfsc	status,2,c
 10165  0044A8  D008               	goto	l5976
 10166  0044AA  D7D8               	goto	l5968
 10167  0044AC                     l5974:
 10168                           
 10169                           ; BSR set to: 0
 10170  0044AC  0100               	movlb	0	; () banked
 10171  0044AE  0793               	decf	___ftpack@exp& (0+255),f,b
 10172  0044B0  0100               	movlb	0	; () banked
 10173  0044B2  90D8               	bcf	status,0,c
 10174  0044B4  3790               	rlcf	___ftpack@arg& (0+255),f,b
 10175  0044B6  3791               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 10176  0044B8  3792               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 10177  0044BA                     l5976:
 10178                           
 10179                           ; BSR set to: 0
 10180  0044BA  0100               	movlb	0	; () banked
 10181  0044BC  BF91               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 10182  0044BE  D004               	goto	l769
 10183                           
 10184                           ; BSR set to: 0
 10185  0044C0  0E02               	movlw	2
 10186  0044C2  0100               	movlb	0	; () banked
 10187  0044C4  6193               	cpfslt	___ftpack@exp& (0+255),b
 10188  0044C6  D7F2               	goto	l5974
 10189  0044C8                     l769:
 10190                           
 10191                           ; BSR set to: 0
 10192  0044C8  0100               	movlb	0	; () banked
 10193  0044CA  B193               	btfsc	___ftpack@exp& (0+255),0,b
 10194  0044CC  D002               	goto	l5982
 10195                           
 10196                           ; BSR set to: 0
 10197  0044CE  0100               	movlb	0	; () banked
 10198  0044D0  9F91               	bcf	(___ftpack@arg+1)& (0+255),7,b
 10199  0044D2                     l5982:
 10200                           
 10201                           ; BSR set to: 0
 10202  0044D2  0100               	movlb	0	; () banked
 10203  0044D4  90D8               	bcf	status,0,c
 10204  0044D6  3393               	rrcf	___ftpack@exp& (0+255),f,b
 10205  0044D8  0100               	movlb	0	; () banked
 10206  0044DA  5193               	movf	___ftpack@exp& (0+255),w,b
 10207  0044DC  0100               	movlb	0	; () banked
 10208  0044DE  1392               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 10209                           
 10210                           ; BSR set to: 0
 10211  0044E0  0100               	movlb	0	; () banked
 10212  0044E2  5194               	movf	___ftpack@sign& (0+255),w,b
 10213  0044E4  0100               	movlb	0	; () banked
 10214  0044E6  B4D8               	btfsc	status,2,c
 10215  0044E8  D002               	goto	l5988
 10216                           
 10217                           ; BSR set to: 0
 10218  0044EA  0100               	movlb	0	; () banked
 10219  0044EC  8F92               	bsf	(___ftpack@arg+2)& (0+255),7,b
 10220  0044EE                     l5988:
 10221                           
 10222                           ; BSR set to: 0
 10223  0044EE  C090  F090         	movff	___ftpack@arg,?___ftpack
 10224  0044F2  C091  F091         	movff	___ftpack@arg+1,?___ftpack+1
 10225  0044F6  C092  F092         	movff	___ftpack@arg+2,?___ftpack+2
 10226  0044FA  0012               	return	
 10227  0044FC                     __end_of___ftpack:
 10228                           	opt stack 0
 10229                           tosu	equ	0xFFF
 10230                           tosh	equ	0xFFE
 10231                           tosl	equ	0xFFD
 10232                           pclath	equ	0xFFA
 10233                           tblptru	equ	0xFF8
 10234                           tblptrh	equ	0xFF7
 10235                           tblptrl	equ	0xFF6
 10236                           tablat	equ	0xFF5
 10237                           prodh	equ	0xFF4
 10238                           prodl	equ	0xFF3
 10239                           intcon	equ	0xFF2
 10240                           postinc0	equ	0xFEE
 10241                           wreg	equ	0xFE8
 10242                           postdec1	equ	0xFE5
 10243                           fsr1l	equ	0xFE1
 10244                           indf2	equ	0xFDF
 10245                           postinc2	equ	0xFDE
 10246                           postdec2	equ	0xFDD
 10247                           fsr2h	equ	0xFDA
 10248                           fsr2l	equ	0xFD9
 10249                           status	equ	0xFD8
 10250                           
 10251 ;; *************** function _SYSTEM_Initialize *****************
 10252 ;; Defined at:
 10253 ;;		line 111 in file "mcc_generated_files/mcc.c"
 10254 ;; Parameters:    Size  Location     Type
 10255 ;;		None
 10256 ;; Auto vars:     Size  Location     Type
 10257 ;;		None
 10258 ;; Return value:  Size  Location     Type
 10259 ;;                  1    wreg      void 
 10260 ;; Registers used:
 10261 ;;		wreg, status,2, status,0, cstack
 10262 ;; Tracked objects:
 10263 ;;		On entry : 0/0
 10264 ;;		On exit  : 0/0
 10265 ;;		Unchanged: 0/0
 10266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10267 ;;      Params:         0       0       0       0       0       0       0
 10268 ;;      Locals:         0       0       0       0       0       0       0
 10269 ;;      Temps:          0       0       0       0       0       0       0
 10270 ;;      Totals:         0       0       0       0       0       0       0
 10271 ;;Total ram usage:        0 bytes
 10272 ;; Hardware stack levels used:    1
 10273 ;; Hardware stack levels required when called:    9
 10274 ;; This function calls:
 10275 ;;		_EUSART1_Initialize
 10276 ;;		_EXT_INT_Initialize
 10277 ;;		_INTERRUPT_Initialize
 10278 ;;		_OSCILLATOR_Initialize
 10279 ;;		_PIN_MANAGER_Initialize
 10280 ;;		_TMR0_Initialize
 10281 ;; This function is called by:
 10282 ;;		_main
 10283 ;; This function uses a non-reentrant model
 10284 ;;
 10285                           
 10286                           	psect	text32
 10287  005530                     __ptext32:
 10288                           	opt stack 0
 10289  005530                     _SYSTEM_Initialize:
 10290                           	opt stack 21
 10291                           
 10292                           ;mcc.c: 114: INTERRUPT_Initialize();
 10293                           
 10294                           ; BSR set to: 0
 10295                           ;incstack = 0
 10296  005530  ECEF  F02A         	call	_INTERRUPT_Initialize	;wreg free
 10297                           
 10298                           ;mcc.c: 115: PIN_MANAGER_Initialize();
 10299  005534  ECEB  F029         	call	_PIN_MANAGER_Initialize	;wreg free
 10300                           
 10301                           ;mcc.c: 116: OSCILLATOR_Initialize();
 10302  005538  ECC8  F02A         	call	_OSCILLATOR_Initialize	;wreg free
 10303                           
 10304                           ;mcc.c: 117: EXT_INT_Initialize();
 10305  00553C  ECCF  F02A         	call	_EXT_INT_Initialize	;wreg free
 10306                           
 10307                           ;mcc.c: 118: TMR0_Initialize();
 10308  005540  ECDC  F028         	call	_TMR0_Initialize	;wreg free
 10309                           
 10310                           ;mcc.c: 119: EUSART1_Initialize();
 10311  005544  ECA5  F02A         	call	_EUSART1_Initialize	;wreg free
 10312  005548  0012               	return		;funcret
 10313  00554A                     __end_of_SYSTEM_Initialize:
 10314                           	opt stack 0
 10315                           tosu	equ	0xFFF
 10316                           tosh	equ	0xFFE
 10317                           tosl	equ	0xFFD
 10318                           pclath	equ	0xFFA
 10319                           tblptru	equ	0xFF8
 10320                           tblptrh	equ	0xFF7
 10321                           tblptrl	equ	0xFF6
 10322                           tablat	equ	0xFF5
 10323                           prodh	equ	0xFF4
 10324                           prodl	equ	0xFF3
 10325                           intcon	equ	0xFF2
 10326                           postinc0	equ	0xFEE
 10327                           wreg	equ	0xFE8
 10328                           postdec1	equ	0xFE5
 10329                           fsr1l	equ	0xFE1
 10330                           indf2	equ	0xFDF
 10331                           postinc2	equ	0xFDE
 10332                           postdec2	equ	0xFDD
 10333                           fsr2h	equ	0xFDA
 10334                           fsr2l	equ	0xFD9
 10335                           status	equ	0xFD8
 10336                           
 10337 ;; *************** function _TMR0_Initialize *****************
 10338 ;; Defined at:
 10339 ;;		line 22 in file "mcc_generated_files/tmr0.c"
 10340 ;; Parameters:    Size  Location     Type
 10341 ;;		None
 10342 ;; Auto vars:     Size  Location     Type
 10343 ;;		None
 10344 ;; Return value:  Size  Location     Type
 10345 ;;                  1    wreg      void 
 10346 ;; Registers used:
 10347 ;;		wreg, status,2, status,0, cstack
 10348 ;; Tracked objects:
 10349 ;;		On entry : 0/0
 10350 ;;		On exit  : 0/0
 10351 ;;		Unchanged: 0/0
 10352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10353 ;;      Params:         0       0       0       0       0       0       0
 10354 ;;      Locals:         0       0       0       0       0       0       0
 10355 ;;      Temps:          0       2       0       0       0       0       0
 10356 ;;      Totals:         0       2       0       0       0       0       0
 10357 ;;Total ram usage:        2 bytes
 10358 ;; Hardware stack levels used:    1
 10359 ;; Hardware stack levels required when called:    8
 10360 ;; This function calls:
 10361 ;;		_TMR0_SetInterruptHandler
 10362 ;;		_TMR0_StartTimer
 10363 ;; This function is called by:
 10364 ;;		_SYSTEM_Initialize
 10365 ;; This function uses a non-reentrant model
 10366 ;;
 10367                           
 10368                           	psect	text33
 10369  0051B8                     __ptext33:
 10370                           	opt stack 0
 10371  0051B8                     _TMR0_Initialize:
 10372                           	opt stack 21
 10373                           
 10374                           ;tmr0.c: 27: T0CON = 0x11;
 10375                           
 10376                           ;incstack = 0
 10377  0051B8  0E11               	movlw	17
 10378  0051BA  6ED5               	movwf	4053,c	;volatile
 10379                           
 10380                           ;tmr0.c: 30: TMR0H = 0x15;
 10381  0051BC  0E15               	movlw	21
 10382  0051BE  6ED7               	movwf	4055,c	;volatile
 10383                           
 10384                           ;tmr0.c: 33: TMR0L = 0x9F;
 10385  0051C0  0E9F               	movlw	159
 10386  0051C2  6ED6               	movwf	4054,c	;volatile
 10387                           
 10388                           ;tmr0.c: 36: timer0ReloadVal = (TMR0H << 8) | TMR0L;
 10389  0051C4  50D6               	movf	4054,w,c	;volatile
 10390  0051C6  CFD7 F092          	movff	4055,??_TMR0_Initialize	;volatile
 10391  0051CA  0100               	movlb	0	; () banked
 10392  0051CC  6B93               	clrf	(??_TMR0_Initialize+1)& (0+255),b
 10393  0051CE  C092  F093         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 10394  0051D2  0100               	movlb	0	; () banked
 10395  0051D4  6B92               	clrf	??_TMR0_Initialize& (0+255),b
 10396  0051D6  0100               	movlb	0	; () banked
 10397  0051D8  1192               	iorwf	??_TMR0_Initialize& (0+255),w,b
 10398  0051DA  6E5C               	movwf	_timer0ReloadVal,c	;volatile
 10399  0051DC  0100               	movlb	0	; () banked
 10400  0051DE  5193               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
 10401  0051E0  6E5D               	movwf	_timer0ReloadVal+1,c	;volatile
 10402                           
 10403                           ; BSR set to: 0
 10404                           ;tmr0.c: 39: INTCONbits.TMR0IF = 0;
 10405  0051E2  94F2               	bcf	intcon,2,c	;volatile
 10406                           
 10407                           ; BSR set to: 0
 10408                           ;tmr0.c: 42: INTCONbits.TMR0IE = 1;
 10409  0051E4  8AF2               	bsf	intcon,5,c	;volatile
 10410                           
 10411                           ; BSR set to: 0
 10412                           ;tmr0.c: 45: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 10413  0051E6  0EFC               	movlw	low _TMR0_DefaultInterruptHandler
 10414  0051E8  0100               	movlb	0	; () banked
 10415  0051EA  6F90               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
 10416  0051EC  0E51               	movlw	high _TMR0_DefaultInterruptHandler
 10417  0051EE  0100               	movlb	0	; () banked
 10418  0051F0  6F91               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 10419  0051F2  ECDC  F02A         	call	_TMR0_SetInterruptHandler	;wreg free
 10420                           
 10421                           ;tmr0.c: 48: TMR0_StartTimer();
 10422  0051F6  ECED  F02A         	call	_TMR0_StartTimer	;wreg free
 10423  0051FA  0012               	return		;funcret
 10424  0051FC                     __end_of_TMR0_Initialize:
 10425                           	opt stack 0
 10426                           tosu	equ	0xFFF
 10427                           tosh	equ	0xFFE
 10428                           tosl	equ	0xFFD
 10429                           pclath	equ	0xFFA
 10430                           tblptru	equ	0xFF8
 10431                           tblptrh	equ	0xFF7
 10432                           tblptrl	equ	0xFF6
 10433                           tablat	equ	0xFF5
 10434                           prodh	equ	0xFF4
 10435                           prodl	equ	0xFF3
 10436                           intcon	equ	0xFF2
 10437                           postinc0	equ	0xFEE
 10438                           wreg	equ	0xFE8
 10439                           postdec1	equ	0xFE5
 10440                           fsr1l	equ	0xFE1
 10441                           indf2	equ	0xFDF
 10442                           postinc2	equ	0xFDE
 10443                           postdec2	equ	0xFDD
 10444                           fsr2h	equ	0xFDA
 10445                           fsr2l	equ	0xFD9
 10446                           status	equ	0xFD8
 10447                           
 10448 ;; *************** function _TMR0_StartTimer *****************
 10449 ;; Defined at:
 10450 ;;		line 51 in file "mcc_generated_files/tmr0.c"
 10451 ;; Parameters:    Size  Location     Type
 10452 ;;		None
 10453 ;; Auto vars:     Size  Location     Type
 10454 ;;		None
 10455 ;; Return value:  Size  Location     Type
 10456 ;;                  1    wreg      void 
 10457 ;; Registers used:
 10458 ;;		None
 10459 ;; Tracked objects:
 10460 ;;		On entry : 0/0
 10461 ;;		On exit  : 0/0
 10462 ;;		Unchanged: 0/0
 10463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10464 ;;      Params:         0       0       0       0       0       0       0
 10465 ;;      Locals:         0       0       0       0       0       0       0
 10466 ;;      Temps:          0       0       0       0       0       0       0
 10467 ;;      Totals:         0       0       0       0       0       0       0
 10468 ;;Total ram usage:        0 bytes
 10469 ;; Hardware stack levels used:    1
 10470 ;; Hardware stack levels required when called:    7
 10471 ;; This function calls:
 10472 ;;		Nothing
 10473 ;; This function is called by:
 10474 ;;		_TMR0_Initialize
 10475 ;; This function uses a non-reentrant model
 10476 ;;
 10477                           
 10478                           	psect	text34
 10479  0055DA                     __ptext34:
 10480                           	opt stack 0
 10481  0055DA                     _TMR0_StartTimer:
 10482                           	opt stack 21
 10483                           
 10484                           ;tmr0.c: 54: T0CONbits.TMR0ON = 1;
 10485                           
 10486                           ;incstack = 0
 10487  0055DA  8ED5               	bsf	4053,7,c	;volatile
 10488  0055DC  0012               	return		;funcret
 10489  0055DE                     __end_of_TMR0_StartTimer:
 10490                           	opt stack 0
 10491                           tosu	equ	0xFFF
 10492                           tosh	equ	0xFFE
 10493                           tosl	equ	0xFFD
 10494                           pclath	equ	0xFFA
 10495                           tblptru	equ	0xFF8
 10496                           tblptrh	equ	0xFF7
 10497                           tblptrl	equ	0xFF6
 10498                           tablat	equ	0xFF5
 10499                           prodh	equ	0xFF4
 10500                           prodl	equ	0xFF3
 10501                           intcon	equ	0xFF2
 10502                           postinc0	equ	0xFEE
 10503                           wreg	equ	0xFE8
 10504                           postdec1	equ	0xFE5
 10505                           fsr1l	equ	0xFE1
 10506                           indf2	equ	0xFDF
 10507                           postinc2	equ	0xFDE
 10508                           postdec2	equ	0xFDD
 10509                           fsr2h	equ	0xFDA
 10510                           fsr2l	equ	0xFD9
 10511                           status	equ	0xFD8
 10512                           
 10513 ;; *************** function _TMR0_SetInterruptHandler *****************
 10514 ;; Defined at:
 10515 ;;		line 109 in file "mcc_generated_files/tmr0.c"
 10516 ;; Parameters:    Size  Location     Type
 10517 ;;  InterruptHan    2   48[BANK0 ] PTR void 
 10518 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 10519 ;; Auto vars:     Size  Location     Type
 10520 ;;		None
 10521 ;; Return value:  Size  Location     Type
 10522 ;;                  1    wreg      void 
 10523 ;; Registers used:
 10524 ;;		wreg, status,2, status,0
 10525 ;; Tracked objects:
 10526 ;;		On entry : 0/0
 10527 ;;		On exit  : 0/0
 10528 ;;		Unchanged: 0/0
 10529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10530 ;;      Params:         0       2       0       0       0       0       0
 10531 ;;      Locals:         0       0       0       0       0       0       0
 10532 ;;      Temps:          0       0       0       0       0       0       0
 10533 ;;      Totals:         0       2       0       0       0       0       0
 10534 ;;Total ram usage:        2 bytes
 10535 ;; Hardware stack levels used:    1
 10536 ;; Hardware stack levels required when called:    7
 10537 ;; This function calls:
 10538 ;;		Nothing
 10539 ;; This function is called by:
 10540 ;;		_TMR0_Initialize
 10541 ;; This function uses a non-reentrant model
 10542 ;;
 10543                           
 10544                           	psect	text35
 10545  0055B8                     __ptext35:
 10546                           	opt stack 0
 10547  0055B8                     _TMR0_SetInterruptHandler:
 10548                           	opt stack 21
 10549                           
 10550                           ;tmr0.c: 110: TMR0_InterruptHandler = InterruptHandler;
 10551                           
 10552                           ;incstack = 0
 10553  0055B8  C090  F0CE         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 10554  0055BC  C091  F0CF         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 10555  0055C0  0012               	return		;funcret
 10556  0055C2                     __end_of_TMR0_SetInterruptHandler:
 10557                           	opt stack 0
 10558                           tosu	equ	0xFFF
 10559                           tosh	equ	0xFFE
 10560                           tosl	equ	0xFFD
 10561                           pclath	equ	0xFFA
 10562                           tblptru	equ	0xFF8
 10563                           tblptrh	equ	0xFF7
 10564                           tblptrl	equ	0xFF6
 10565                           tablat	equ	0xFF5
 10566                           prodh	equ	0xFF4
 10567                           prodl	equ	0xFF3
 10568                           intcon	equ	0xFF2
 10569                           postinc0	equ	0xFEE
 10570                           wreg	equ	0xFE8
 10571                           postdec1	equ	0xFE5
 10572                           fsr1l	equ	0xFE1
 10573                           indf2	equ	0xFDF
 10574                           postinc2	equ	0xFDE
 10575                           postdec2	equ	0xFDD
 10576                           fsr2h	equ	0xFDA
 10577                           fsr2l	equ	0xFD9
 10578                           status	equ	0xFD8
 10579                           
 10580 ;; *************** function _PIN_MANAGER_Initialize *****************
 10581 ;; Defined at:
 10582 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
 10583 ;; Parameters:    Size  Location     Type
 10584 ;;		None
 10585 ;; Auto vars:     Size  Location     Type
 10586 ;;		None
 10587 ;; Return value:  Size  Location     Type
 10588 ;;                  1    wreg      void 
 10589 ;; Registers used:
 10590 ;;		wreg, status,2
 10591 ;; Tracked objects:
 10592 ;;		On entry : 0/0
 10593 ;;		On exit  : 0/0
 10594 ;;		Unchanged: 0/0
 10595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10596 ;;      Params:         0       0       0       0       0       0       0
 10597 ;;      Locals:         0       0       0       0       0       0       0
 10598 ;;      Temps:          0       0       0       0       0       0       0
 10599 ;;      Totals:         0       0       0       0       0       0       0
 10600 ;;Total ram usage:        0 bytes
 10601 ;; Hardware stack levels used:    1
 10602 ;; Hardware stack levels required when called:    7
 10603 ;; This function calls:
 10604 ;;		Nothing
 10605 ;; This function is called by:
 10606 ;;		_SYSTEM_Initialize
 10607 ;; This function uses a non-reentrant model
 10608 ;;
 10609                           
 10610                           	psect	text36
 10611  0053D6                     __ptext36:
 10612                           	opt stack 0
 10613  0053D6                     _PIN_MANAGER_Initialize:
 10614                           	opt stack 22
 10615                           
 10616                           ;pin_manager.c: 56: LATA = 0x00;
 10617                           
 10618                           ;incstack = 0
 10619  0053D6  0E00               	movlw	0
 10620  0053D8  6E89               	movwf	3977,c	;volatile
 10621                           
 10622                           ;pin_manager.c: 57: LATB = 0x3C;
 10623  0053DA  0E3C               	movlw	60
 10624  0053DC  6E8A               	movwf	3978,c	;volatile
 10625                           
 10626                           ;pin_manager.c: 58: LATC = 0x1F;
 10627  0053DE  0E1F               	movlw	31
 10628  0053E0  6E8B               	movwf	3979,c	;volatile
 10629                           
 10630                           ;pin_manager.c: 63: TRISA = 0xC0;
 10631  0053E2  0EC0               	movlw	192
 10632  0053E4  6E92               	movwf	3986,c	;volatile
 10633                           
 10634                           ;pin_manager.c: 64: TRISB = 0xC3;
 10635  0053E6  0EC3               	movlw	195
 10636  0053E8  6E93               	movwf	3987,c	;volatile
 10637                           
 10638                           ;pin_manager.c: 65: TRISC = 0x20;
 10639  0053EA  0E20               	movlw	32
 10640  0053EC  6E94               	movwf	3988,c	;volatile
 10641                           
 10642                           ;pin_manager.c: 70: ANSELC = 0x20;
 10643  0053EE  0E20               	movlw	32
 10644  0053F0  010F               	movlb	15	; () banked
 10645  0053F2  6F3A               	movwf	58,b	;volatile
 10646                           
 10647                           ;pin_manager.c: 71: ANSELB = 0x00;
 10648  0053F4  0E00               	movlw	0
 10649  0053F6  010F               	movlb	15	; () banked
 10650  0053F8  6F39               	movwf	57,b	;volatile
 10651                           
 10652                           ;pin_manager.c: 72: ANSELA = 0x00;
 10653  0053FA  0E00               	movlw	0
 10654  0053FC  010F               	movlb	15	; () banked
 10655  0053FE  6F38               	movwf	56,b	;volatile
 10656                           
 10657                           ; BSR set to: 15
 10658                           ;pin_manager.c: 77: WPUB = 0xFF;
 10659  005400  6861               	setf	3937,c	;volatile
 10660                           
 10661                           ; BSR set to: 15
 10662                           ;pin_manager.c: 78: INTCON2bits.nRBPU = 0;
 10663  005402  9EF1               	bcf	intcon2,7,c	;volatile
 10664                           
 10665                           ; BSR set to: 15
 10666  005404  0012               	return		;funcret
 10667  005406                     __end_of_PIN_MANAGER_Initialize:
 10668                           	opt stack 0
 10669                           tosu	equ	0xFFF
 10670                           tosh	equ	0xFFE
 10671                           tosl	equ	0xFFD
 10672                           pclath	equ	0xFFA
 10673                           tblptru	equ	0xFF8
 10674                           tblptrh	equ	0xFF7
 10675                           tblptrl	equ	0xFF6
 10676                           tablat	equ	0xFF5
 10677                           prodh	equ	0xFF4
 10678                           prodl	equ	0xFF3
 10679                           intcon	equ	0xFF2
 10680                           intcon2	equ	0xFF1
 10681                           postinc0	equ	0xFEE
 10682                           wreg	equ	0xFE8
 10683                           postdec1	equ	0xFE5
 10684                           fsr1l	equ	0xFE1
 10685                           indf2	equ	0xFDF
 10686                           postinc2	equ	0xFDE
 10687                           postdec2	equ	0xFDD
 10688                           fsr2h	equ	0xFDA
 10689                           fsr2l	equ	0xFD9
 10690                           status	equ	0xFD8
 10691                           
 10692 ;; *************** function _OSCILLATOR_Initialize *****************
 10693 ;; Defined at:
 10694 ;;		line 122 in file "mcc_generated_files/mcc.c"
 10695 ;; Parameters:    Size  Location     Type
 10696 ;;		None
 10697 ;; Auto vars:     Size  Location     Type
 10698 ;;		None
 10699 ;; Return value:  Size  Location     Type
 10700 ;;                  1    wreg      void 
 10701 ;; Registers used:
 10702 ;;		wreg, status,2
 10703 ;; Tracked objects:
 10704 ;;		On entry : 0/0
 10705 ;;		On exit  : 0/0
 10706 ;;		Unchanged: 0/0
 10707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10708 ;;      Params:         0       0       0       0       0       0       0
 10709 ;;      Locals:         0       0       0       0       0       0       0
 10710 ;;      Temps:          0       0       0       0       0       0       0
 10711 ;;      Totals:         0       0       0       0       0       0       0
 10712 ;;Total ram usage:        0 bytes
 10713 ;; Hardware stack levels used:    1
 10714 ;; Hardware stack levels required when called:    7
 10715 ;; This function calls:
 10716 ;;		Nothing
 10717 ;; This function is called by:
 10718 ;;		_SYSTEM_Initialize
 10719 ;; This function uses a non-reentrant model
 10720 ;;
 10721                           
 10722                           	psect	text37
 10723  005590                     __ptext37:
 10724                           	opt stack 0
 10725  005590                     _OSCILLATOR_Initialize:
 10726                           	opt stack 22
 10727                           
 10728                           ;mcc.c: 125: OSCCON = 0x70;
 10729                           
 10730                           ; BSR set to: 15
 10731                           ;incstack = 0
 10732  005590  0E70               	movlw	112
 10733  005592  6ED3               	movwf	4051,c	;volatile
 10734                           
 10735                           ;mcc.c: 127: OSCCON2 = 0x04;
 10736  005594  0E04               	movlw	4
 10737  005596  6ED2               	movwf	4050,c	;volatile
 10738                           
 10739                           ;mcc.c: 129: OSCTUNE = 0x00;
 10740  005598  0E00               	movlw	0
 10741  00559A  6E9B               	movwf	3995,c	;volatile
 10742  00559C  0012               	return		;funcret
 10743  00559E                     __end_of_OSCILLATOR_Initialize:
 10744                           	opt stack 0
 10745                           tosu	equ	0xFFF
 10746                           tosh	equ	0xFFE
 10747                           tosl	equ	0xFFD
 10748                           pclath	equ	0xFFA
 10749                           tblptru	equ	0xFF8
 10750                           tblptrh	equ	0xFF7
 10751                           tblptrl	equ	0xFF6
 10752                           tablat	equ	0xFF5
 10753                           prodh	equ	0xFF4
 10754                           prodl	equ	0xFF3
 10755                           intcon	equ	0xFF2
 10756                           intcon2	equ	0xFF1
 10757                           postinc0	equ	0xFEE
 10758                           wreg	equ	0xFE8
 10759                           postdec1	equ	0xFE5
 10760                           fsr1l	equ	0xFE1
 10761                           indf2	equ	0xFDF
 10762                           postinc2	equ	0xFDE
 10763                           postdec2	equ	0xFDD
 10764                           fsr2h	equ	0xFDA
 10765                           fsr2l	equ	0xFD9
 10766                           status	equ	0xFD8
 10767                           
 10768 ;; *************** function _INTERRUPT_Initialize *****************
 10769 ;; Defined at:
 10770 ;;		line 4 in file "mcc_generated_files/interrupt_manager.c"
 10771 ;; Parameters:    Size  Location     Type
 10772 ;;		None
 10773 ;; Auto vars:     Size  Location     Type
 10774 ;;		None
 10775 ;; Return value:  Size  Location     Type
 10776 ;;                  1    wreg      void 
 10777 ;; Registers used:
 10778 ;;		None
 10779 ;; Tracked objects:
 10780 ;;		On entry : 0/0
 10781 ;;		On exit  : 0/0
 10782 ;;		Unchanged: 0/0
 10783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10784 ;;      Params:         0       0       0       0       0       0       0
 10785 ;;      Locals:         0       0       0       0       0       0       0
 10786 ;;      Temps:          0       0       0       0       0       0       0
 10787 ;;      Totals:         0       0       0       0       0       0       0
 10788 ;;Total ram usage:        0 bytes
 10789 ;; Hardware stack levels used:    1
 10790 ;; Hardware stack levels required when called:    7
 10791 ;; This function calls:
 10792 ;;		Nothing
 10793 ;; This function is called by:
 10794 ;;		_SYSTEM_Initialize
 10795 ;; This function uses a non-reentrant model
 10796 ;;
 10797                           
 10798                           	psect	text38
 10799  0055DE                     __ptext38:
 10800                           	opt stack 0
 10801  0055DE                     _INTERRUPT_Initialize:
 10802                           	opt stack 22
 10803                           
 10804                           ;interrupt_manager.c: 7: RCONbits.IPEN = 0;
 10805                           
 10806                           ;incstack = 0
 10807  0055DE  9ED0               	bcf	4048,7,c	;volatile
 10808  0055E0  0012               	return		;funcret
 10809  0055E2                     __end_of_INTERRUPT_Initialize:
 10810                           	opt stack 0
 10811                           tosu	equ	0xFFF
 10812                           tosh	equ	0xFFE
 10813                           tosl	equ	0xFFD
 10814                           pclath	equ	0xFFA
 10815                           tblptru	equ	0xFF8
 10816                           tblptrh	equ	0xFF7
 10817                           tblptrl	equ	0xFF6
 10818                           tablat	equ	0xFF5
 10819                           prodh	equ	0xFF4
 10820                           prodl	equ	0xFF3
 10821                           intcon	equ	0xFF2
 10822                           intcon2	equ	0xFF1
 10823                           postinc0	equ	0xFEE
 10824                           wreg	equ	0xFE8
 10825                           postdec1	equ	0xFE5
 10826                           fsr1l	equ	0xFE1
 10827                           indf2	equ	0xFDF
 10828                           postinc2	equ	0xFDE
 10829                           postdec2	equ	0xFDD
 10830                           fsr2h	equ	0xFDA
 10831                           fsr2l	equ	0xFD9
 10832                           status	equ	0xFD8
 10833                           
 10834 ;; *************** function _EXT_INT_Initialize *****************
 10835 ;; Defined at:
 10836 ;;		line 152 in file "mcc_generated_files/ext_int.c"
 10837 ;; Parameters:    Size  Location     Type
 10838 ;;		None
 10839 ;; Auto vars:     Size  Location     Type
 10840 ;;		None
 10841 ;; Return value:  Size  Location     Type
 10842 ;;                  1    wreg      void 
 10843 ;; Registers used:
 10844 ;;		None
 10845 ;; Tracked objects:
 10846 ;;		On entry : 0/0
 10847 ;;		On exit  : 0/0
 10848 ;;		Unchanged: 0/0
 10849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10850 ;;      Params:         0       0       0       0       0       0       0
 10851 ;;      Locals:         0       0       0       0       0       0       0
 10852 ;;      Temps:          0       0       0       0       0       0       0
 10853 ;;      Totals:         0       0       0       0       0       0       0
 10854 ;;Total ram usage:        0 bytes
 10855 ;; Hardware stack levels used:    1
 10856 ;; Hardware stack levels required when called:    7
 10857 ;; This function calls:
 10858 ;;		Nothing
 10859 ;; This function is called by:
 10860 ;;		_SYSTEM_Initialize
 10861 ;; This function uses a non-reentrant model
 10862 ;;
 10863                           
 10864                           	psect	text39
 10865  00559E                     __ptext39:
 10866                           	opt stack 0
 10867  00559E                     _EXT_INT_Initialize:
 10868                           	opt stack 22
 10869                           
 10870                           ;ext_int.c: 160: (INTCON3bits.INT1IF = 0);
 10871                           
 10872                           ;incstack = 0
 10873  00559E  90F0               	bcf	intcon3,0,c	;volatile
 10874                           
 10875                           ;ext_int.c: 161: (INTCON2bits.INTEDG1 = 0);
 10876  0055A0  9AF1               	bcf	intcon2,5,c	;volatile
 10877                           
 10878                           ;ext_int.c: 162: (INTCON3bits.INT1IE = 1);
 10879  0055A2  86F0               	bsf	intcon3,3,c	;volatile
 10880                           
 10881                           ;ext_int.c: 170: (INTCONbits.INT0IF = 0);
 10882  0055A4  92F2               	bcf	intcon,1,c	;volatile
 10883                           
 10884                           ;ext_int.c: 171: (INTCON2bits.INTEDG0 = 0);
 10885  0055A6  9CF1               	bcf	intcon2,6,c	;volatile
 10886                           
 10887                           ;ext_int.c: 172: (INTCONbits.INT0IE = 1);
 10888  0055A8  88F2               	bsf	intcon,4,c	;volatile
 10889  0055AA  0012               	return		;funcret
 10890  0055AC                     __end_of_EXT_INT_Initialize:
 10891                           	opt stack 0
 10892                           tosu	equ	0xFFF
 10893                           tosh	equ	0xFFE
 10894                           tosl	equ	0xFFD
 10895                           pclath	equ	0xFFA
 10896                           tblptru	equ	0xFF8
 10897                           tblptrh	equ	0xFF7
 10898                           tblptrl	equ	0xFF6
 10899                           tablat	equ	0xFF5
 10900                           prodh	equ	0xFF4
 10901                           prodl	equ	0xFF3
 10902                           intcon	equ	0xFF2
 10903                           intcon2	equ	0xFF1
 10904                           intcon3	equ	0xFF0
 10905                           postinc0	equ	0xFEE
 10906                           wreg	equ	0xFE8
 10907                           postdec1	equ	0xFE5
 10908                           fsr1l	equ	0xFE1
 10909                           indf2	equ	0xFDF
 10910                           postinc2	equ	0xFDE
 10911                           postdec2	equ	0xFDD
 10912                           fsr2h	equ	0xFDA
 10913                           fsr2l	equ	0xFD9
 10914                           status	equ	0xFD8
 10915                           
 10916 ;; *************** function _EUSART1_Initialize *****************
 10917 ;; Defined at:
 10918 ;;		line 55 in file "mcc_generated_files/eusart1.c"
 10919 ;; Parameters:    Size  Location     Type
 10920 ;;		None
 10921 ;; Auto vars:     Size  Location     Type
 10922 ;;		None
 10923 ;; Return value:  Size  Location     Type
 10924 ;;                  1    wreg      void 
 10925 ;; Registers used:
 10926 ;;		wreg, status,2
 10927 ;; Tracked objects:
 10928 ;;		On entry : 0/0
 10929 ;;		On exit  : 0/0
 10930 ;;		Unchanged: 0/0
 10931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10932 ;;      Params:         0       0       0       0       0       0       0
 10933 ;;      Locals:         0       0       0       0       0       0       0
 10934 ;;      Temps:          0       0       0       0       0       0       0
 10935 ;;      Totals:         0       0       0       0       0       0       0
 10936 ;;Total ram usage:        0 bytes
 10937 ;; Hardware stack levels used:    1
 10938 ;; Hardware stack levels required when called:    7
 10939 ;; This function calls:
 10940 ;;		Nothing
 10941 ;; This function is called by:
 10942 ;;		_SYSTEM_Initialize
 10943 ;; This function uses a non-reentrant model
 10944 ;;
 10945                           
 10946                           	psect	text40
 10947  00554A                     __ptext40:
 10948                           	opt stack 0
 10949  00554A                     _EUSART1_Initialize:
 10950                           	opt stack 22
 10951                           
 10952                           ;eusart1.c: 60: BAUDCON1 = 0x08;
 10953                           
 10954                           ;incstack = 0
 10955  00554A  0E08               	movlw	8
 10956  00554C  6EB8               	movwf	4024,c	;volatile
 10957                           
 10958                           ;eusart1.c: 63: RCSTA1 = 0x80;
 10959  00554E  0E80               	movlw	128
 10960  005550  6EAB               	movwf	4011,c	;volatile
 10961                           
 10962                           ;eusart1.c: 66: TXSTA1 = 0x24;
 10963  005552  0E24               	movlw	36
 10964  005554  6EAC               	movwf	4012,c	;volatile
 10965                           
 10966                           ;eusart1.c: 69: SPBRG1 = 0xA0;
 10967  005556  0EA0               	movlw	160
 10968  005558  6EAF               	movwf	4015,c	;volatile
 10969                           
 10970                           ;eusart1.c: 72: SPBRGH1 = 0x01;
 10971  00555A  0E01               	movlw	1
 10972  00555C  6EB0               	movwf	4016,c	;volatile
 10973  00555E  0012               	return		;funcret
 10974  005560                     __end_of_EUSART1_Initialize:
 10975                           	opt stack 0
 10976                           tosu	equ	0xFFF
 10977                           tosh	equ	0xFFE
 10978                           tosl	equ	0xFFD
 10979                           pclath	equ	0xFFA
 10980                           tblptru	equ	0xFF8
 10981                           tblptrh	equ	0xFF7
 10982                           tblptrl	equ	0xFF6
 10983                           tablat	equ	0xFF5
 10984                           prodh	equ	0xFF4
 10985                           prodl	equ	0xFF3
 10986                           intcon	equ	0xFF2
 10987                           intcon2	equ	0xFF1
 10988                           intcon3	equ	0xFF0
 10989                           postinc0	equ	0xFEE
 10990                           wreg	equ	0xFE8
 10991                           postdec1	equ	0xFE5
 10992                           fsr1l	equ	0xFE1
 10993                           indf2	equ	0xFDF
 10994                           postinc2	equ	0xFDE
 10995                           postdec2	equ	0xFDD
 10996                           fsr2h	equ	0xFDA
 10997                           fsr2l	equ	0xFD9
 10998                           status	equ	0xFD8
 10999                           
 11000 ;; *************** function _INTERRUPT_InterruptManager *****************
 11001 ;; Defined at:
 11002 ;;		line 10 in file "mcc_generated_files/interrupt_manager.c"
 11003 ;; Parameters:    Size  Location     Type
 11004 ;;		None
 11005 ;; Auto vars:     Size  Location     Type
 11006 ;;		None
 11007 ;; Return value:  Size  Location     Type
 11008 ;;                  1    wreg      void 
 11009 ;; Registers used:
 11010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11011 ;; Tracked objects:
 11012 ;;		On entry : 0/0
 11013 ;;		On exit  : 0/0
 11014 ;;		Unchanged: 0/0
 11015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11016 ;;      Params:         0       0       0       0       0       0       0
 11017 ;;      Locals:         0       0       0       0       0       0       0
 11018 ;;      Temps:          0      14       0       0       0       0       0
 11019 ;;      Totals:         0      14       0       0       0       0       0
 11020 ;;Total ram usage:       14 bytes
 11021 ;; Hardware stack levels used:    1
 11022 ;; Hardware stack levels required when called:    6
 11023 ;; This function calls:
 11024 ;;		_INT0_ISR
 11025 ;;		_INT1_ISR
 11026 ;;		_TMR0_ISR
 11027 ;; This function is called by:
 11028 ;;		Interrupt level 2
 11029 ;; This function uses a non-reentrant model
 11030 ;;
 11031                           
 11032                           	psect	intcode
 11033  000008                     __pintcode:
 11034                           	opt stack 0
 11035  000008                     _INTERRUPT_InterruptManager:
 11036                           	opt stack 19
 11037                           
 11038                           ;incstack = 0
 11039  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11040  00000A  CFFA F082          	movff	pclath,??_INTERRUPT_InterruptManager
 11041  00000E  CFFB F083          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 11042  000012  CFE9 F084          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 11043  000016  CFEA F085          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 11044  00001A  CFE1 F086          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 11045  00001E  CFE2 F087          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 11046  000022  CFD9 F088          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 11047  000026  CFDA F089          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 11048  00002A  CFF3 F08A          	movff	prodl,??_INTERRUPT_InterruptManager+8
 11049  00002E  CFF4 F08B          	movff	prodh,??_INTERRUPT_InterruptManager+9
 11050  000032  CFF6 F08C          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 11051  000036  CFF7 F08D          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 11052  00003A  CFF8 F08E          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 11053  00003E  CFF5 F08F          	movff	tablat,??_INTERRUPT_InterruptManager+13
 11054                           
 11055                           ;interrupt_manager.c: 13: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 11056  000042  B6F0               	btfsc	intcon3,3,c	;volatile
 11057  000044  A0F0               	btfss	intcon3,0,c	;volatile
 11058  000046  D003               	goto	i2l107
 11059                           
 11060                           ;interrupt_manager.c: 14: {
 11061                           ;interrupt_manager.c: 15: INT1_ISR();
 11062  000048  ECE6  F027         	call	_INT1_ISR	;wreg free
 11063                           
 11064                           ;interrupt_manager.c: 16: }
 11065  00004C  D00B               	goto	i2l113
 11066  00004E                     i2l107:
 11067                           
 11068                           ;interrupt_manager.c: 17: else if(INTCONbits.INT0IE == 1 && INTCONbits.INT0IF == 1)
 11069  00004E  B8F2               	btfsc	intcon,4,c	;volatile
 11070  000050  A2F2               	btfss	intcon,1,c	;volatile
 11071  000052  D003               	goto	i2l109
 11072                           
 11073                           ;interrupt_manager.c: 18: {
 11074                           ;interrupt_manager.c: 19: INT0_ISR();
 11075  000054  EC67  F021         	call	_INT0_ISR	;wreg free
 11076                           
 11077                           ;interrupt_manager.c: 20: }
 11078  000058  D005               	goto	i2l113
 11079  00005A                     i2l109:
 11080                           
 11081                           ;interrupt_manager.c: 21: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 11082  00005A  BAF2               	btfsc	intcon,5,c	;volatile
 11083  00005C  A4F2               	btfss	intcon,2,c	;volatile
 11084  00005E  D002               	goto	i2l113
 11085                           
 11086                           ;interrupt_manager.c: 22: {
 11087                           ;interrupt_manager.c: 23: TMR0_ISR();
 11088  000060  EC03  F02A         	call	_TMR0_ISR	;wreg free
 11089  000064                     i2l113:
 11090  000064  C08F  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 11091  000068  C08E  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 11092  00006C  C08D  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 11093  000070  C08C  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 11094  000074  C08B  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 11095  000078  C08A  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 11096  00007C  C089  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 11097  000080  C088  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 11098  000084  C087  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 11099  000088  C086  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 11100  00008C  C085  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 11101  000090  C084  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 11102  000094  C083  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 11103  000098  C082  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 11104  00009C  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11105  00009E  0011               	retfie		f
 11106  0000A0                     __end_of_INTERRUPT_InterruptManager:
 11107                           	opt stack 0
 11108                           tosu	equ	0xFFF
 11109                           tosh	equ	0xFFE
 11110                           tosl	equ	0xFFD
 11111                           pclatu	equ	0xFFB
 11112                           pclath	equ	0xFFA
 11113                           tblptru	equ	0xFF8
 11114                           tblptrh	equ	0xFF7
 11115                           tblptrl	equ	0xFF6
 11116                           tablat	equ	0xFF5
 11117                           prodh	equ	0xFF4
 11118                           prodl	equ	0xFF3
 11119                           intcon	equ	0xFF2
 11120                           intcon2	equ	0xFF1
 11121                           intcon3	equ	0xFF0
 11122                           postinc0	equ	0xFEE
 11123                           fsr0h	equ	0xFEA
 11124                           fsr0l	equ	0xFE9
 11125                           wreg	equ	0xFE8
 11126                           postdec1	equ	0xFE5
 11127                           fsr1h	equ	0xFE2
 11128                           fsr1l	equ	0xFE1
 11129                           indf2	equ	0xFDF
 11130                           postinc2	equ	0xFDE
 11131                           postdec2	equ	0xFDD
 11132                           fsr2h	equ	0xFDA
 11133                           fsr2l	equ	0xFD9
 11134                           status	equ	0xFD8
 11135                           
 11136 ;; *************** function _TMR0_ISR *****************
 11137 ;; Defined at:
 11138 ;;		line 92 in file "mcc_generated_files/tmr0.c"
 11139 ;; Parameters:    Size  Location     Type
 11140 ;;		None
 11141 ;; Auto vars:     Size  Location     Type
 11142 ;;		None
 11143 ;; Return value:  Size  Location     Type
 11144 ;;                  1    wreg      void 
 11145 ;; Registers used:
 11146 ;;		wreg, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 11147 ;; Tracked objects:
 11148 ;;		On entry : 0/0
 11149 ;;		On exit  : 0/0
 11150 ;;		Unchanged: 0/0
 11151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11152 ;;      Params:         0       0       0       0       0       0       0
 11153 ;;      Locals:         0       0       0       0       0       0       0
 11154 ;;      Temps:          0       0       0       0       0       0       0
 11155 ;;      Totals:         0       0       0       0       0       0       0
 11156 ;;Total ram usage:        0 bytes
 11157 ;; Hardware stack levels used:    1
 11158 ;; Hardware stack levels required when called:    2
 11159 ;; This function calls:
 11160 ;;		Absolute function
 11161 ;;		_TMR0_DefaultInterruptHandler
 11162 ;; This function is called by:
 11163 ;;		_INTERRUPT_InterruptManager
 11164 ;; This function uses a non-reentrant model
 11165 ;;
 11166                           
 11167                           	psect	text42
 11168  005406                     __ptext42:
 11169                           	opt stack 0
 11170  005406                     _TMR0_ISR:
 11171                           	opt stack 22
 11172                           
 11173                           ;tmr0.c: 95: INTCONbits.TMR0IF = 0;
 11174                           
 11175                           ;incstack = 0
 11176  005406  94F2               	bcf	intcon,2,c	;volatile
 11177                           
 11178                           ;tmr0.c: 99: TMR0H = timer0ReloadVal >> 8;
 11179  005408  505D               	movf	_timer0ReloadVal+1,w,c	;volatile
 11180  00540A  6ED7               	movwf	4055,c	;volatile
 11181                           
 11182                           ;tmr0.c: 100: TMR0L = (uint8_t) timer0ReloadVal;
 11183  00540C  C05C  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 11184                           
 11185                           ;tmr0.c: 102: if(TMR0_InterruptHandler)
 11186  005410  0100               	movlb	0	; () banked
 11187  005412  51CE               	movf	_TMR0_InterruptHandler& (0+255),w,b
 11188  005414  0100               	movlb	0	; () banked
 11189  005416  11CF               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 11190  005418  B4D8               	btfsc	status,2,c
 11191  00541A  0012               	return	
 11192                           
 11193                           ; BSR set to: 0
 11194                           ;tmr0.c: 103: {
 11195                           ;tmr0.c: 104: TMR0_InterruptHandler();
 11196  00541C  D801               	call	i2u1697_48
 11197  00541E  0012               	return	
 11198  005420                     i2u1697_48:
 11199  005420  0005               	push	
 11200  005422  0100               	movlb	0	; () banked
 11201  005424  6EFA               	movwf	pclath,c
 11202  005426  51CE               	movf	_TMR0_InterruptHandler& (0+255),w,b
 11203  005428  6EFD               	movwf	tosl,c
 11204  00542A  51CF               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 11205  00542C  6EFE               	movwf	tosh,c
 11206  00542E  50F8               	movf	tblptru,w,c
 11207  005430  6EFF               	movwf	tosu,c
 11208  005432  50FA               	movf	pclath,w,c
 11209  005434  0012               	return		;indir
 11210  005436                     __end_of_TMR0_ISR:
 11211                           	opt stack 0
 11212                           tosu	equ	0xFFF
 11213                           tosh	equ	0xFFE
 11214                           tosl	equ	0xFFD
 11215                           pclatu	equ	0xFFB
 11216                           pclath	equ	0xFFA
 11217                           tblptru	equ	0xFF8
 11218                           tblptrh	equ	0xFF7
 11219                           tblptrl	equ	0xFF6
 11220                           tablat	equ	0xFF5
 11221                           prodh	equ	0xFF4
 11222                           prodl	equ	0xFF3
 11223                           intcon	equ	0xFF2
 11224                           intcon2	equ	0xFF1
 11225                           intcon3	equ	0xFF0
 11226                           postinc0	equ	0xFEE
 11227                           fsr0h	equ	0xFEA
 11228                           fsr0l	equ	0xFE9
 11229                           wreg	equ	0xFE8
 11230                           postdec1	equ	0xFE5
 11231                           fsr1h	equ	0xFE2
 11232                           fsr1l	equ	0xFE1
 11233                           indf2	equ	0xFDF
 11234                           postinc2	equ	0xFDE
 11235                           postdec2	equ	0xFDD
 11236                           fsr2h	equ	0xFDA
 11237                           fsr2l	equ	0xFD9
 11238                           status	equ	0xFD8
 11239                           
 11240 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 11241 ;; Defined at:
 11242 ;;		line 113 in file "mcc_generated_files/tmr0.c"
 11243 ;; Parameters:    Size  Location     Type
 11244 ;;		None
 11245 ;; Auto vars:     Size  Location     Type
 11246 ;;		None
 11247 ;; Return value:  Size  Location     Type
 11248 ;;                  1    wreg      void 
 11249 ;; Registers used:
 11250 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11251 ;; Tracked objects:
 11252 ;;		On entry : 0/0
 11253 ;;		On exit  : 0/0
 11254 ;;		Unchanged: 0/0
 11255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11256 ;;      Params:         0       0       0       0       0       0       0
 11257 ;;      Locals:         0       0       0       0       0       0       0
 11258 ;;      Temps:          1       0       0       0       0       0       0
 11259 ;;      Totals:         1       0       0       0       0       0       0
 11260 ;;Total ram usage:        1 bytes
 11261 ;; Hardware stack levels used:    1
 11262 ;; Hardware stack levels required when called:    1
 11263 ;; This function calls:
 11264 ;;		_SetRange
 11265 ;; This function is called by:
 11266 ;;		_TMR0_Initialize
 11267 ;;		_TMR0_ISR
 11268 ;; This function uses a non-reentrant model
 11269 ;;
 11270                           
 11271                           	psect	text43
 11272  0051FC                     __ptext43:
 11273                           	opt stack 0
 11274  0051FC                     _TMR0_DefaultInterruptHandler:
 11275                           	opt stack 22
 11276                           
 11277                           ;tmr0.c: 116: if (cal_mode == 0)
 11278                           
 11279                           ;incstack = 0
 11280  0051FC  505B               	movf	_cal_mode,w,c
 11281  0051FE  A4D8               	btfss	status,2,c
 11282  005200  D00F               	goto	i2l175
 11283                           
 11284                           ;tmr0.c: 117: {
 11285                           ;tmr0.c: 119: do { LATCbits.LATC7 = ~LATCbits.LATC7; } while(0);
 11286  005202  AE8B               	btfss	3979,7,c	;volatile
 11287  005204  D002               	goto	i2u713_40
 11288  005206  0E01               	movlw	1
 11289  005208  D001               	goto	i2u713_46
 11290  00520A                     i2u713_40:
 11291  00520A  0E00               	movlw	0
 11292  00520C                     i2u713_46:
 11293  00520C  0AFF               	xorlw	255
 11294  00520E  6E0C               	movwf	??_TMR0_DefaultInterruptHandler& (0+255),c
 11295  005210  320C               	rrcf	??_TMR0_DefaultInterruptHandler,f,c
 11296  005212  320C               	rrcf	??_TMR0_DefaultInterruptHandler,f,c
 11297  005214  508B               	movf	3979,w,c	;volatile
 11298  005216  180C               	xorwf	??_TMR0_DefaultInterruptHandler,w,c
 11299  005218  0B7F               	andlw	-129
 11300  00521A  180C               	xorwf	??_TMR0_DefaultInterruptHandler,w,c
 11301  00521C  6E8B               	movwf	3979,c	;volatile
 11302                           
 11303                           ;tmr0.c: 120: }
 11304  00521E  D001               	goto	i2l5238
 11305  005220                     i2l175:
 11306  005220  9E8B               	bcf	3979,7,c	;volatile
 11307  005222                     i2l5238:
 11308                           
 11309                           ;tmr0.c: 125: }
 11310                           ;tmr0.c: 128: if (auto_range == 1)
 11311  005222  0100               	movlb	0	; () banked
 11312  005224  05CC               	decf	_auto_range& (0+255),w,b
 11313  005226  A4D8               	btfss	status,2,c
 11314  005228  0012               	return	
 11315                           
 11316                           ; BSR set to: 0
 11317                           ;tmr0.c: 129: {
 11318                           ;tmr0.c: 130: if (range < 5)
 11319  00522A  0E05               	movlw	5
 11320  00522C  0100               	movlb	0	; () banked
 11321  00522E  61CD               	cpfslt	_range& (0+255),b
 11322  005230  0012               	return	
 11323                           
 11324                           ; BSR set to: 0
 11325                           ;tmr0.c: 131: {
 11326                           ;tmr0.c: 132: range += 1;
 11327  005232  0100               	movlb	0	; () banked
 11328  005234  2BCD               	incf	_range& (0+255),f,b
 11329                           
 11330                           ; BSR set to: 0
 11331                           ;tmr0.c: 133: SetRange(range);
 11332  005236  0100               	movlb	0	; () banked
 11333  005238  51CD               	movf	_range& (0+255),w,b
 11334  00523A  EC16  F01B         	call	_SetRange
 11335  00523E  0012               	return	
 11336  005240                     __end_of_TMR0_DefaultInterruptHandler:
 11337                           	opt stack 0
 11338                           tosu	equ	0xFFF
 11339                           tosh	equ	0xFFE
 11340                           tosl	equ	0xFFD
 11341                           pclatu	equ	0xFFB
 11342                           pclath	equ	0xFFA
 11343                           tblptru	equ	0xFF8
 11344                           tblptrh	equ	0xFF7
 11345                           tblptrl	equ	0xFF6
 11346                           tablat	equ	0xFF5
 11347                           prodh	equ	0xFF4
 11348                           prodl	equ	0xFF3
 11349                           intcon	equ	0xFF2
 11350                           intcon2	equ	0xFF1
 11351                           intcon3	equ	0xFF0
 11352                           postinc0	equ	0xFEE
 11353                           fsr0h	equ	0xFEA
 11354                           fsr0l	equ	0xFE9
 11355                           wreg	equ	0xFE8
 11356                           postdec1	equ	0xFE5
 11357                           fsr1h	equ	0xFE2
 11358                           fsr1l	equ	0xFE1
 11359                           indf2	equ	0xFDF
 11360                           postinc2	equ	0xFDE
 11361                           postdec2	equ	0xFDD
 11362                           fsr2h	equ	0xFDA
 11363                           fsr2l	equ	0xFD9
 11364                           status	equ	0xFD8
 11365                           
 11366 ;; *************** function _INT1_ISR *****************
 11367 ;; Defined at:
 11368 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 11369 ;; Parameters:    Size  Location     Type
 11370 ;;		None
 11371 ;; Auto vars:     Size  Location     Type
 11372 ;;		None
 11373 ;; Return value:  Size  Location     Type
 11374 ;;                  1    wreg      void 
 11375 ;; Registers used:
 11376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11377 ;; Tracked objects:
 11378 ;;		On entry : 0/0
 11379 ;;		On exit  : 0/0
 11380 ;;		Unchanged: 0/0
 11381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11382 ;;      Params:         0       0       0       0       0       0       0
 11383 ;;      Locals:         0       0       0       0       0       0       0
 11384 ;;      Temps:          0       0       0       0       0       0       0
 11385 ;;      Totals:         0       0       0       0       0       0       0
 11386 ;;Total ram usage:        0 bytes
 11387 ;; Hardware stack levels used:    1
 11388 ;; Hardware stack levels required when called:    5
 11389 ;; This function calls:
 11390 ;;		_SetRange
 11391 ;;		_printf
 11392 ;; This function is called by:
 11393 ;;		_INTERRUPT_InterruptManager
 11394 ;; This function uses a non-reentrant model
 11395 ;;
 11396                           
 11397                           	psect	text44
 11398  004FCC                     __ptext44:
 11399                           	opt stack 0
 11400  004FCC                     _INT1_ISR:
 11401                           	opt stack 19
 11402                           
 11403                           ;ext_int.c: 61: if (auto_range == 1)
 11404                           
 11405                           ;incstack = 0
 11406  004FCC  0100               	movlb	0	; () banked
 11407  004FCE  05CC               	decf	_auto_range& (0+255),w,b
 11408  004FD0  A4D8               	btfss	status,2,c
 11409  004FD2  D005               	goto	i2l9924
 11410                           
 11411                           ; BSR set to: 0
 11412                           ;ext_int.c: 62: {
 11413                           ;ext_int.c: 63: stored_range = range;
 11414  004FD4  C0CD  F0B8         	movff	_range,_stored_range
 11415                           
 11416                           ; BSR set to: 0
 11417                           ;ext_int.c: 64: auto_range = 0;
 11418  004FD8  0E00               	movlw	0
 11419  004FDA  0100               	movlb	0	; () banked
 11420  004FDC  6FCC               	movwf	_auto_range& (0+255),b
 11421  004FDE                     i2l9924:
 11422                           
 11423                           ; BSR set to: 0
 11424                           ;ext_int.c: 65: }
 11425                           ;ext_int.c: 68: if (range < 5)
 11426  004FDE  0E05               	movlw	5
 11427  004FE0  0100               	movlb	0	; () banked
 11428  004FE2  61CD               	cpfslt	_range& (0+255),b
 11429  004FE4  D003               	goto	i2l9928
 11430                           
 11431                           ; BSR set to: 0
 11432                           ;ext_int.c: 69: {
 11433                           ;ext_int.c: 70: range += 1;
 11434  004FE6  0100               	movlb	0	; () banked
 11435  004FE8  2BCD               	incf	_range& (0+255),f,b
 11436                           
 11437                           ;ext_int.c: 71: }
 11438  004FEA  D003               	goto	i2l9930
 11439  004FEC                     i2l9928:
 11440                           
 11441                           ; BSR set to: 0
 11442                           ;ext_int.c: 72: else
 11443                           ;ext_int.c: 74: {
 11444                           ;ext_int.c: 75: range -= (5 - 2);
 11445  004FEC  0E03               	movlw	3
 11446  004FEE  0100               	movlb	0	; () banked
 11447  004FF0  5FCD               	subwf	_range& (0+255),f,b
 11448  004FF2                     i2l9930:
 11449                           
 11450                           ; BSR set to: 0
 11451                           ;ext_int.c: 76: }
 11452                           ;ext_int.c: 80: if (auto_range == 0 && range == stored_range)
 11453  004FF2  0100               	movlb	0	; () banked
 11454  004FF4  51CC               	movf	_auto_range& (0+255),w,b
 11455  004FF6  A4D8               	btfss	status,2,c
 11456  004FF8  D009               	goto	i2l9936
 11457                           
 11458                           ; BSR set to: 0
 11459  004FFA  0100               	movlb	0	; () banked
 11460  004FFC  51B8               	movf	_stored_range& (0+255),w,b
 11461  004FFE  0100               	movlb	0	; () banked
 11462  005000  19CD               	xorwf	_range& (0+255),w,b
 11463  005002  A4D8               	btfss	status,2,c
 11464  005004  D003               	goto	i2l9936
 11465                           
 11466                           ; BSR set to: 0
 11467                           ;ext_int.c: 81: {
 11468                           ;ext_int.c: 82: auto_range = 1;
 11469  005006  0E01               	movlw	1
 11470  005008  0100               	movlb	0	; () banked
 11471  00500A  6FCC               	movwf	_auto_range& (0+255),b
 11472  00500C                     i2l9936:
 11473                           
 11474                           ; BSR set to: 0
 11475                           ;ext_int.c: 83: }
 11476                           ;ext_int.c: 86: printf("\r\nSetting range = %d\r\n", range);
 11477  00500C  0EB3               	movlw	low STR_1
 11478  00500E  0100               	movlb	0	; () banked
 11479  005010  6F77               	movwf	printf@f& (0+255),b
 11480  005012  0E7F               	movlw	high STR_1
 11481  005014  0100               	movlb	0	; () banked
 11482  005016  6F78               	movwf	(printf@f+1)& (0+255),b
 11483  005018  C0CD  F079         	movff	_range,?_printf+2
 11484  00501C  0100               	movlb	0	; () banked
 11485  00501E  6B7A               	clrf	(?_printf+3)& (0+255),b
 11486  005020  ECB8  F029         	call	_printf	;wreg free
 11487                           
 11488                           ;ext_int.c: 88: SetRange(range);
 11489  005024  0100               	movlb	0	; () banked
 11490  005026  51CD               	movf	_range& (0+255),w,b
 11491  005028  EC16  F01B         	call	_SetRange
 11492                           
 11493                           ;ext_int.c: 92: (INTCON3bits.INT1IF = 0);
 11494  00502C  90F0               	bcf	intcon3,0,c	;volatile
 11495  00502E  0012               	return		;funcret
 11496  005030                     __end_of_INT1_ISR:
 11497                           	opt stack 0
 11498                           tosu	equ	0xFFF
 11499                           tosh	equ	0xFFE
 11500                           tosl	equ	0xFFD
 11501                           pclatu	equ	0xFFB
 11502                           pclath	equ	0xFFA
 11503                           tblptru	equ	0xFF8
 11504                           tblptrh	equ	0xFF7
 11505                           tblptrl	equ	0xFF6
 11506                           tablat	equ	0xFF5
 11507                           prodh	equ	0xFF4
 11508                           prodl	equ	0xFF3
 11509                           intcon	equ	0xFF2
 11510                           intcon2	equ	0xFF1
 11511                           intcon3	equ	0xFF0
 11512                           postinc0	equ	0xFEE
 11513                           fsr0h	equ	0xFEA
 11514                           fsr0l	equ	0xFE9
 11515                           wreg	equ	0xFE8
 11516                           postdec1	equ	0xFE5
 11517                           fsr1h	equ	0xFE2
 11518                           fsr1l	equ	0xFE1
 11519                           indf2	equ	0xFDF
 11520                           postinc2	equ	0xFDE
 11521                           postdec2	equ	0xFDD
 11522                           fsr2h	equ	0xFDA
 11523                           fsr2l	equ	0xFD9
 11524                           status	equ	0xFD8
 11525                           
 11526 ;; *************** function _INT0_ISR *****************
 11527 ;; Defined at:
 11528 ;;		line 98 in file "mcc_generated_files/ext_int.c"
 11529 ;; Parameters:    Size  Location     Type
 11530 ;;		None
 11531 ;; Auto vars:     Size  Location     Type
 11532 ;;		None
 11533 ;; Return value:  Size  Location     Type
 11534 ;;                  1    wreg      void 
 11535 ;; Registers used:
 11536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11537 ;; Tracked objects:
 11538 ;;		On entry : 0/0
 11539 ;;		On exit  : 0/0
 11540 ;;		Unchanged: 0/0
 11541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11542 ;;      Params:         0       0       0       0       0       0       0
 11543 ;;      Locals:         0       0       0       0       0       0       0
 11544 ;;      Temps:          0       0       0       0       0       0       0
 11545 ;;      Totals:         0       0       0       0       0       0       0
 11546 ;;Total ram usage:        0 bytes
 11547 ;; Hardware stack levels used:    1
 11548 ;; Hardware stack levels required when called:    5
 11549 ;; This function calls:
 11550 ;;		_SetRange
 11551 ;;		_TMR0_ReadTimer
 11552 ;;		_TMR0_Reload
 11553 ;;		_TMR0_StopTimer
 11554 ;;		___lwtoft
 11555 ;;		_printf
 11556 ;;		i2_TMR0_StartTimer
 11557 ;;		i2___ftadd
 11558 ;;		i2___ftdiv
 11559 ;;		i2___ftmul
 11560 ;;		i2___wmul
 11561 ;; This function is called by:
 11562 ;;		_INTERRUPT_InterruptManager
 11563 ;; This function uses a non-reentrant model
 11564 ;;
 11565                           
 11566                           	psect	text45
 11567  0042CE                     __ptext45:
 11568                           	opt stack 0
 11569  0042CE                     _INT0_ISR:
 11570                           	opt stack 19
 11571                           
 11572                           ;ext_int.c: 101: if (cal_mode == 1)
 11573                           
 11574                           ;incstack = 0
 11575  0042CE  045B               	decf	_cal_mode,w,c
 11576  0042D0  A4D8               	btfss	status,2,c
 11577  0042D2  D002               	goto	i2l9944
 11578                           
 11579                           ;ext_int.c: 102: {
 11580                           ;ext_int.c: 103: do { LATCbits.LATC7 = 0; } while(0);
 11581  0042D4  9E8B               	bcf	3979,7,c	;volatile
 11582                           
 11583                           ;ext_int.c: 104: return;
 11584  0042D6  0012               	return	
 11585  0042D8                     i2l9944:
 11586                           
 11587                           ;ext_int.c: 105: }
 11588                           ;ext_int.c: 108: TMR0_StopTimer();
 11589  0042D8  ECF3  F02A         	call	_TMR0_StopTimer	;wreg free
 11590                           
 11591                           ;ext_int.c: 109: reading = TMR0_ReadTimer();
 11592  0042DC  EC41  F029         	call	_TMR0_ReadTimer	;wreg free
 11593  0042E0  C001  F0B6         	movff	?_TMR0_ReadTimer,_reading
 11594  0042E4  C002  F0B7         	movff	?_TMR0_ReadTimer+1,_reading+1
 11595                           
 11596                           ;ext_int.c: 112: do { LATCbits.LATC7 = 1; } while(0);
 11597  0042E8  8E8B               	bsf	3979,7,c	;volatile
 11598                           
 11599                           ;ext_int.c: 116: result = cal_current[range - 1] * ((float)reading - 27) / 3.01004;
 11600  0042EA  0E00               	movlw	0
 11601  0042EC  6E12               	movwf	i2___wmul@multiplicand+1,c
 11602  0042EE  0E03               	movlw	3
 11603  0042F0  6E11               	movwf	i2___wmul@multiplicand,c
 11604  0042F2  0EFF               	movlw	255
 11605  0042F4  0100               	movlb	0	; () banked
 11606  0042F6  25CD               	addwf	_range& (0+255),w,b
 11607  0042F8  6E0F               	movwf	i2___wmul@multiplier,c
 11608  0042FA  6A10               	clrf	i2___wmul@multiplier+1,c
 11609  0042FC  0EFF               	movlw	255
 11610  0042FE  2210               	addwfc	i2___wmul@multiplier+1,f,c
 11611  004300  EC43  F02A         	call	i2___wmul	;wreg free
 11612  004304  0E65               	movlw	low _cal_current
 11613  004306  240F               	addwf	?i2___wmul,w,c
 11614  004308  6EF6               	movwf	tblptrl,c
 11615  00430A  0E7F               	movlw	high _cal_current
 11616  00430C  2010               	addwfc	?i2___wmul+1,w,c
 11617  00430E  6EF7               	movwf	tblptrh,c
 11618  004310                     	if	0	;There are less than 3 active tblptr bytes
 11619  004310                     	endif
 11620  004310  0009               	tblrd		*+
 11621  004312  CFF5 F024          	movff	tablat,i2___ftmul@f2
 11622  004316  0009               	tblrd		*+
 11623  004318  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 11624  00431C  000A               	tblrd		*-
 11625  00431E  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 11626  004322  0E00               	movlw	0
 11627  004324  6E18               	movwf	i2___ftadd@f2,c
 11628  004326  0ED8               	movlw	216
 11629  004328  6E19               	movwf	i2___ftadd@f2+1,c
 11630  00432A  0EC1               	movlw	193
 11631  00432C  6E1A               	movwf	i2___ftadd@f2+2,c
 11632  00432E  C0B6  F009         	movff	_reading,___lwtoft@c
 11633  004332  C0B7  F00A         	movff	_reading+1,___lwtoft@c+1
 11634  004336  EC68  F02A         	call	___lwtoft	;wreg free
 11635  00433A  C009  F015         	movff	?___lwtoft,i2___ftadd@f1
 11636  00433E  C00A  F016         	movff	?___lwtoft+1,i2___ftadd@f1+1
 11637  004342  C00B  F017         	movff	?___lwtoft+2,i2___ftadd@f1+2
 11638  004346  EC40  F01A         	call	i2___ftadd	;wreg free
 11639  00434A  C015  F021         	movff	?i2___ftadd,i2___ftmul@f1
 11640  00434E  C016  F022         	movff	?i2___ftadd+1,i2___ftmul@f1+1
 11641  004352  C017  F023         	movff	?i2___ftadd+2,i2___ftmul@f1+2
 11642  004356  EC7E  F022         	call	i2___ftmul	;wreg free
 11643  00435A  C021  F030         	movff	?i2___ftmul,i2___ftdiv@f1
 11644  00435E  C022  F031         	movff	?i2___ftmul+1,i2___ftdiv@f1+1
 11645  004362  C023  F032         	movff	?i2___ftmul+2,i2___ftdiv@f1+2
 11646  004366  0EA4               	movlw	164
 11647  004368  6E33               	movwf	i2___ftdiv@f2,c
 11648  00436A  0E40               	movlw	64
 11649  00436C  6E34               	movwf	i2___ftdiv@f2+1,c
 11650  00436E  0E40               	movlw	64
 11651  004370  6E35               	movwf	i2___ftdiv@f2+2,c
 11652  004372  EC72  F023         	call	i2___ftdiv	;wreg free
 11653  004376  C030  F058         	movff	?i2___ftdiv,_result
 11654  00437A  C031  F059         	movff	?i2___ftdiv+1,_result+1
 11655  00437E  C032  F05A         	movff	?i2___ftdiv+2,_result+2
 11656                           
 11657                           ;ext_int.c: 119: printf("Capacitance: %0.2f pF (Count: %u) - Range: %d (%d)\r\n", result
      +                          , reading, range, auto_range);
 11658  004382  0E7E               	movlw	low STR_2
 11659  004384  0100               	movlb	0	; () banked
 11660  004386  6F77               	movwf	printf@f& (0+255),b
 11661  004388  0E7F               	movlw	high STR_2
 11662  00438A  0100               	movlb	0	; () banked
 11663  00438C  6F78               	movwf	(printf@f+1)& (0+255),b
 11664  00438E  C058  F079         	movff	_result,?_printf+2
 11665  004392  C059  F07A         	movff	_result+1,?_printf+3
 11666  004396  C05A  F07B         	movff	_result+2,?_printf+4
 11667  00439A  C0B6  F07C         	movff	_reading,?_printf+5
 11668  00439E  C0B7  F07D         	movff	_reading+1,?_printf+6
 11669  0043A2  C0CD  F07E         	movff	_range,?_printf+7
 11670  0043A6  0100               	movlb	0	; () banked
 11671  0043A8  6B7F               	clrf	(?_printf+8)& (0+255),b
 11672  0043AA  C0CC  F080         	movff	_auto_range,?_printf+9
 11673  0043AE  0100               	movlb	0	; () banked
 11674  0043B0  6B81               	clrf	(?_printf+10)& (0+255),b
 11675  0043B2  ECB8  F029         	call	_printf	;wreg free
 11676                           
 11677                           ;ext_int.c: 122: if (auto_range == 1)
 11678  0043B6  0100               	movlb	0	; () banked
 11679  0043B8  05CC               	decf	_auto_range& (0+255),w,b
 11680  0043BA  A4D8               	btfss	status,2,c
 11681  0043BC  D012               	goto	i2l9964
 11682                           
 11683                           ; BSR set to: 0
 11684                           ;ext_int.c: 123: {
 11685                           ;ext_int.c: 124: if (reading < 1000 && range > 2)
 11686  0043BE  0EE8               	movlw	232
 11687  0043C0  0100               	movlb	0	; () banked
 11688  0043C2  5DB6               	subwf	_reading& (0+255),w,b
 11689  0043C4  0E03               	movlw	3
 11690  0043C6  0100               	movlb	0	; () banked
 11691  0043C8  59B7               	subwfb	(_reading+1)& (0+255),w,b
 11692  0043CA  B0D8               	btfsc	status,0,c
 11693  0043CC  D00A               	goto	i2l9964
 11694                           
 11695                           ; BSR set to: 0
 11696  0043CE  0E02               	movlw	2
 11697  0043D0  0100               	movlb	0	; () banked
 11698  0043D2  65CD               	cpfsgt	_range& (0+255),b
 11699  0043D4  D006               	goto	i2l9964
 11700                           
 11701                           ; BSR set to: 0
 11702                           ;ext_int.c: 125: {
 11703                           ;ext_int.c: 126: range -= 1;
 11704  0043D6  0100               	movlb	0	; () banked
 11705  0043D8  07CD               	decf	_range& (0+255),f,b
 11706                           
 11707                           ; BSR set to: 0
 11708                           ;ext_int.c: 127: SetRange(range);
 11709  0043DA  0100               	movlb	0	; () banked
 11710  0043DC  51CD               	movf	_range& (0+255),w,b
 11711  0043DE  EC16  F01B         	call	_SetRange
 11712  0043E2                     i2l9964:
 11713                           
 11714                           ;ext_int.c: 128: }
 11715                           ;ext_int.c: 129: }
 11716                           ;ext_int.c: 132: TMR0_Reload();
 11717  0043E2  ECE6  F02A         	call	_TMR0_Reload	;wreg free
 11718                           
 11719                           ;ext_int.c: 135: do { LATCbits.LATC7 = 0; } while(0);
 11720  0043E6  9E8B               	bcf	3979,7,c	;volatile
 11721                           
 11722                           ;ext_int.c: 136: TMR0_StartTimer();
 11723  0043E8  ECF1  F02A         	call	i2_TMR0_StartTimer	;wreg free
 11724                           
 11725                           ;ext_int.c: 139: (INTCONbits.INT0IF = 0);
 11726  0043EC  92F2               	bcf	intcon,1,c	;volatile
 11727  0043EE  0012               	return		;funcret
 11728  0043F0                     __end_of_INT0_ISR:
 11729                           	opt stack 0
 11730                           tosu	equ	0xFFF
 11731                           tosh	equ	0xFFE
 11732                           tosl	equ	0xFFD
 11733                           pclatu	equ	0xFFB
 11734                           pclath	equ	0xFFA
 11735                           tblptru	equ	0xFF8
 11736                           tblptrh	equ	0xFF7
 11737                           tblptrl	equ	0xFF6
 11738                           tablat	equ	0xFF5
 11739                           prodh	equ	0xFF4
 11740                           prodl	equ	0xFF3
 11741                           intcon	equ	0xFF2
 11742                           intcon2	equ	0xFF1
 11743                           intcon3	equ	0xFF0
 11744                           postinc0	equ	0xFEE
 11745                           fsr0h	equ	0xFEA
 11746                           fsr0l	equ	0xFE9
 11747                           wreg	equ	0xFE8
 11748                           postdec1	equ	0xFE5
 11749                           fsr1h	equ	0xFE2
 11750                           fsr1l	equ	0xFE1
 11751                           indf2	equ	0xFDF
 11752                           postinc2	equ	0xFDE
 11753                           postdec2	equ	0xFDD
 11754                           fsr2h	equ	0xFDA
 11755                           fsr2l	equ	0xFD9
 11756                           status	equ	0xFD8
 11757                           
 11758 ;; *************** function i2___ftdiv *****************
 11759 ;; Defined at:
 11760 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftdiv.c"
 11761 ;; Parameters:    Size  Location     Type
 11762 ;;  f1              3   47[COMRAM] float 
 11763 ;;  f2              3   50[COMRAM] float 
 11764 ;; Auto vars:     Size  Location     Type
 11765 ;;  __ftdiv         3   57[COMRAM] float 
 11766 ;;  __ftdiv         1   61[COMRAM] unsigned char 
 11767 ;;  __ftdiv         1   60[COMRAM] unsigned char 
 11768 ;;  __ftdiv         1   56[COMRAM] unsigned char 
 11769 ;; Return value:  Size  Location     Type
 11770 ;;                  3   47[COMRAM] float 
 11771 ;; Registers used:
 11772 ;;		wreg, status,2, status,0, cstack
 11773 ;; Tracked objects:
 11774 ;;		On entry : 0/0
 11775 ;;		On exit  : 0/0
 11776 ;;		Unchanged: 0/0
 11777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11778 ;;      Params:         6       0       0       0       0       0       0
 11779 ;;      Locals:         6       0       0       0       0       0       0
 11780 ;;      Temps:          3       0       0       0       0       0       0
 11781 ;;      Totals:        15       0       0       0       0       0       0
 11782 ;;Total ram usage:       15 bytes
 11783 ;; Hardware stack levels used:    1
 11784 ;; Hardware stack levels required when called:    1
 11785 ;; This function calls:
 11786 ;;		i2___ftpack
 11787 ;; This function is called by:
 11788 ;;		_INT0_ISR
 11789 ;; This function uses a non-reentrant model
 11790 ;;
 11791                           
 11792                           	psect	text46
 11793  0046E4                     __ptext46:
 11794                           	opt stack 0
 11795  0046E4                     i2___ftdiv:
 11796                           	opt stack 22
 11797                           
 11798                           ;incstack = 0
 11799  0046E4  C032  F036         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 11800  0046E8  6A37               	clrf	(??i2___ftdiv+1)& (0+255),c
 11801  0046EA  6A38               	clrf	(??i2___ftdiv+2)& (0+255),c
 11802  0046EC  3431               	rlcf	i2___ftdiv@f1+1,w,c
 11803  0046EE  3636               	rlcf	??i2___ftdiv& (0+255),f,c
 11804  0046F0  E301               	bnc	u809_41
 11805  0046F2  8037               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 11806  0046F4                     u809_41:
 11807  0046F4  5036               	movf	??i2___ftdiv,w,c
 11808  0046F6  6E3D               	movwf	i2___ftdiv@exp,c
 11809  0046F8  503D               	movf	i2___ftdiv@exp,w,c
 11810  0046FA  A4D8               	btfss	status,2,c
 11811  0046FC  D007               	goto	i2l5678
 11812  0046FE  0E00               	movlw	0
 11813  004700  6E30               	movwf	?i2___ftdiv,c
 11814  004702  0E00               	movlw	0
 11815  004704  6E31               	movwf	?i2___ftdiv+1,c
 11816  004706  0E00               	movlw	0
 11817  004708  6E32               	movwf	?i2___ftdiv+2,c
 11818  00470A  0012               	return	
 11819  00470C                     i2l5678:
 11820  00470C  C035  F036         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 11821  004710  6A37               	clrf	(??i2___ftdiv+1)& (0+255),c
 11822  004712  6A38               	clrf	(??i2___ftdiv+2)& (0+255),c
 11823  004714  3434               	rlcf	i2___ftdiv@f2+1,w,c
 11824  004716  3636               	rlcf	??i2___ftdiv& (0+255),f,c
 11825  004718  E301               	bnc	u811_41
 11826  00471A  8037               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 11827  00471C                     u811_41:
 11828  00471C  5036               	movf	??i2___ftdiv,w,c
 11829  00471E  6E3E               	movwf	i2___ftdiv@sign,c
 11830  004720  503E               	movf	i2___ftdiv@sign,w,c
 11831  004722  A4D8               	btfss	status,2,c
 11832  004724  D007               	goto	i2l5684
 11833  004726  0E00               	movlw	0
 11834  004728  6E30               	movwf	?i2___ftdiv,c
 11835  00472A  0E00               	movlw	0
 11836  00472C  6E31               	movwf	?i2___ftdiv+1,c
 11837  00472E  0E00               	movlw	0
 11838  004730  6E32               	movwf	?i2___ftdiv+2,c
 11839  004732  0012               	return	
 11840  004734                     i2l5684:
 11841  004734  0E00               	movlw	0
 11842  004736  6E3A               	movwf	i2___ftdiv@f3,c
 11843  004738  0E00               	movlw	0
 11844  00473A  6E3B               	movwf	i2___ftdiv@f3+1,c
 11845  00473C  0E00               	movlw	0
 11846  00473E  6E3C               	movwf	i2___ftdiv@f3+2,c
 11847  004740  503E               	movf	i2___ftdiv@sign,w,c
 11848  004742  0F89               	addlw	137
 11849  004744  5E3D               	subwf	i2___ftdiv@exp,f,c
 11850  004746  C032  F03E         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 11851  00474A  5035               	movf	i2___ftdiv@f2+2,w,c
 11852  00474C  1A3E               	xorwf	i2___ftdiv@sign,f,c
 11853  00474E  0E80               	movlw	128
 11854  004750  163E               	andwf	i2___ftdiv@sign,f,c
 11855  004752  8E31               	bsf	i2___ftdiv@f1+1,7,c
 11856  004754  0EFF               	movlw	255
 11857  004756  1630               	andwf	i2___ftdiv@f1,f,c
 11858  004758  0EFF               	movlw	255
 11859  00475A  1631               	andwf	i2___ftdiv@f1+1,f,c
 11860  00475C  0E00               	movlw	0
 11861  00475E  1632               	andwf	i2___ftdiv@f1+2,f,c
 11862  004760  8E34               	bsf	i2___ftdiv@f2+1,7,c
 11863  004762  0EFF               	movlw	255
 11864  004764  1633               	andwf	i2___ftdiv@f2,f,c
 11865  004766  0EFF               	movlw	255
 11866  004768  1634               	andwf	i2___ftdiv@f2+1,f,c
 11867  00476A  0E00               	movlw	0
 11868  00476C  1635               	andwf	i2___ftdiv@f2+2,f,c
 11869  00476E  0E18               	movlw	24
 11870  004770  6E39               	movwf	i2___ftdiv@cntr,c
 11871  004772                     i2l5704:
 11872  004772  90D8               	bcf	status,0,c
 11873  004774  363A               	rlcf	i2___ftdiv@f3,f,c
 11874  004776  363B               	rlcf	i2___ftdiv@f3+1,f,c
 11875  004778  363C               	rlcf	i2___ftdiv@f3+2,f,c
 11876  00477A  5033               	movf	i2___ftdiv@f2,w,c
 11877  00477C  5C30               	subwf	i2___ftdiv@f1,w,c
 11878  00477E  5034               	movf	i2___ftdiv@f2+1,w,c
 11879  004780  5831               	subwfb	i2___ftdiv@f1+1,w,c
 11880  004782  5035               	movf	i2___ftdiv@f2+2,w,c
 11881  004784  5832               	subwfb	i2___ftdiv@f1+2,w,c
 11882  004786  A0D8               	btfss	status,0,c
 11883  004788  D007               	goto	i2l827
 11884  00478A  5033               	movf	i2___ftdiv@f2,w,c
 11885  00478C  5E30               	subwf	i2___ftdiv@f1,f,c
 11886  00478E  5034               	movf	i2___ftdiv@f2+1,w,c
 11887  004790  5A31               	subwfb	i2___ftdiv@f1+1,f,c
 11888  004792  5035               	movf	i2___ftdiv@f2+2,w,c
 11889  004794  5A32               	subwfb	i2___ftdiv@f1+2,f,c
 11890  004796  803A               	bsf	i2___ftdiv@f3,0,c
 11891  004798                     i2l827:
 11892  004798  90D8               	bcf	status,0,c
 11893  00479A  3630               	rlcf	i2___ftdiv@f1,f,c
 11894  00479C  3631               	rlcf	i2___ftdiv@f1+1,f,c
 11895  00479E  3632               	rlcf	i2___ftdiv@f1+2,f,c
 11896  0047A0  2E39               	decfsz	i2___ftdiv@cntr,f,c
 11897  0047A2  D7E7               	goto	i2l5704
 11898  0047A4  C03A  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 11899  0047A8  C03B  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 11900  0047AC  C03C  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 11901  0047B0  C03D  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 11902  0047B4  C03E  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 11903  0047B8  EC06  F025         	call	i2___ftpack	;wreg free
 11904  0047BC  C001  F030         	movff	?i2___ftpack,?i2___ftdiv
 11905  0047C0  C002  F031         	movff	?i2___ftpack+1,?i2___ftdiv+1
 11906  0047C4  C003  F032         	movff	?i2___ftpack+2,?i2___ftdiv+2
 11907  0047C8  0012               	return	
 11908  0047CA                     __end_ofi2___ftdiv:
 11909                           	opt stack 0
 11910                           tosu	equ	0xFFF
 11911                           tosh	equ	0xFFE
 11912                           tosl	equ	0xFFD
 11913                           pclatu	equ	0xFFB
 11914                           pclath	equ	0xFFA
 11915                           tblptru	equ	0xFF8
 11916                           tblptrh	equ	0xFF7
 11917                           tblptrl	equ	0xFF6
 11918                           tablat	equ	0xFF5
 11919                           prodh	equ	0xFF4
 11920                           prodl	equ	0xFF3
 11921                           intcon	equ	0xFF2
 11922                           intcon2	equ	0xFF1
 11923                           intcon3	equ	0xFF0
 11924                           postinc0	equ	0xFEE
 11925                           fsr0h	equ	0xFEA
 11926                           fsr0l	equ	0xFE9
 11927                           wreg	equ	0xFE8
 11928                           postdec1	equ	0xFE5
 11929                           fsr1h	equ	0xFE2
 11930                           fsr1l	equ	0xFE1
 11931                           indf2	equ	0xFDF
 11932                           postinc2	equ	0xFDE
 11933                           postdec2	equ	0xFDD
 11934                           fsr2h	equ	0xFDA
 11935                           fsr2l	equ	0xFD9
 11936                           status	equ	0xFD8
 11937                           
 11938 ;; *************** function i2_TMR0_StartTimer *****************
 11939 ;; Defined at:
 11940 ;;		line 51 in file "mcc_generated_files/tmr0.c"
 11941 ;; Parameters:    Size  Location     Type
 11942 ;;		None
 11943 ;; Auto vars:     Size  Location     Type
 11944 ;;		None
 11945 ;; Return value:  Size  Location     Type
 11946 ;;                  1    wreg      void 
 11947 ;; Registers used:
 11948 ;;		None
 11949 ;; Tracked objects:
 11950 ;;		On entry : 0/0
 11951 ;;		On exit  : 0/0
 11952 ;;		Unchanged: 0/0
 11953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11954 ;;      Params:         0       0       0       0       0       0       0
 11955 ;;      Locals:         0       0       0       0       0       0       0
 11956 ;;      Temps:          0       0       0       0       0       0       0
 11957 ;;      Totals:         0       0       0       0       0       0       0
 11958 ;;Total ram usage:        0 bytes
 11959 ;; Hardware stack levels used:    1
 11960 ;; This function calls:
 11961 ;;		Nothing
 11962 ;; This function is called by:
 11963 ;;		_INT0_ISR
 11964 ;; This function uses a non-reentrant model
 11965 ;;
 11966                           
 11967                           	psect	text47
 11968  0055E2                     __ptext47:
 11969                           	opt stack 0
 11970  0055E2                     i2_TMR0_StartTimer:
 11971                           	opt stack 23
 11972                           
 11973                           ;tmr0.c: 54: T0CONbits.TMR0ON = 1;
 11974                           
 11975                           ;incstack = 0
 11976  0055E2  8ED5               	bsf	4053,7,c	;volatile
 11977  0055E4  0012               	return		;funcret
 11978  0055E6                     __end_ofi2_TMR0_StartTimer:
 11979                           	opt stack 0
 11980                           tosu	equ	0xFFF
 11981                           tosh	equ	0xFFE
 11982                           tosl	equ	0xFFD
 11983                           pclatu	equ	0xFFB
 11984                           pclath	equ	0xFFA
 11985                           tblptru	equ	0xFF8
 11986                           tblptrh	equ	0xFF7
 11987                           tblptrl	equ	0xFF6
 11988                           tablat	equ	0xFF5
 11989                           prodh	equ	0xFF4
 11990                           prodl	equ	0xFF3
 11991                           intcon	equ	0xFF2
 11992                           intcon2	equ	0xFF1
 11993                           intcon3	equ	0xFF0
 11994                           postinc0	equ	0xFEE
 11995                           fsr0h	equ	0xFEA
 11996                           fsr0l	equ	0xFE9
 11997                           wreg	equ	0xFE8
 11998                           postdec1	equ	0xFE5
 11999                           fsr1h	equ	0xFE2
 12000                           fsr1l	equ	0xFE1
 12001                           indf2	equ	0xFDF
 12002                           postinc2	equ	0xFDE
 12003                           postdec2	equ	0xFDD
 12004                           fsr2h	equ	0xFDA
 12005                           fsr2l	equ	0xFD9
 12006                           status	equ	0xFD8
 12007                           
 12008 ;; *************** function _printf *****************
 12009 ;; Defined at:
 12010 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\printf.c"
 12011 ;; Parameters:    Size  Location     Type
 12012 ;;  f               2   23[BANK0 ] PTR const unsigned char 
 12013 ;;		 -> STR_2(53), STR_1(23), 
 12014 ;; Auto vars:     Size  Location     Type
 12015 ;;  pb              4   83[COMRAM] struct __prbuf
 12016 ;;  ap              2   81[COMRAM] PTR void [1]
 12017 ;;		 -> ?_sprintf(2), ?_printf(2), 
 12018 ;; Return value:  Size  Location     Type
 12019 ;;                  2   23[BANK0 ] int 
 12020 ;; Registers used:
 12021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12022 ;; Tracked objects:
 12023 ;;		On entry : 0/0
 12024 ;;		On exit  : 0/0
 12025 ;;		Unchanged: 0/0
 12026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12027 ;;      Params:         0      11       0       0       0       0       0
 12028 ;;      Locals:         6       0       0       0       0       0       0
 12029 ;;      Temps:          0       0       0       0       0       0       0
 12030 ;;      Totals:         6      11       0       0       0       0       0
 12031 ;;Total ram usage:       17 bytes
 12032 ;; Hardware stack levels used:    1
 12033 ;; Hardware stack levels required when called:    4
 12034 ;; This function calls:
 12035 ;;		i2__doprnt
 12036 ;; This function is called by:
 12037 ;;		_INT1_ISR
 12038 ;;		_INT0_ISR
 12039 ;; This function uses a non-reentrant model
 12040 ;;
 12041                           
 12042                           	psect	text48
 12043  005370                     __ptext48:
 12044                           	opt stack 0
 12045  005370                     _printf:
 12046                           	opt stack 19
 12047                           
 12048                           ;incstack = 0
 12049  005370  0E00               	movlw	0
 12050  005372  6E54               	movwf	printf@pb,c
 12051  005374  0E00               	movlw	0
 12052  005376  6E55               	movwf	printf@pb+1,c
 12053  005378  0EC2               	movlw	low i2_putch
 12054  00537A  6E56               	movwf	printf@pb+2,c
 12055  00537C  0E55               	movlw	high i2_putch
 12056  00537E  6E57               	movwf	printf@pb+3,c
 12057  005380  0E79               	movlw	low (?_printf+2)
 12058  005382  6E52               	movwf	printf@ap,c
 12059  005384  0E00               	movlw	high (?_printf+2)
 12060  005386  6E53               	movwf	printf@ap+1,c
 12061                           
 12062                           ;	Return value of _printf is never used
 12063  005388  0E54               	movlw	low printf@pb
 12064  00538A  6E46               	movwf	i2__doprnt@pb,c
 12065  00538C  0E00               	movlw	high printf@pb
 12066  00538E  6E47               	movwf	i2__doprnt@pb+1,c
 12067  005390  C077  F048         	movff	printf@f,i2__doprnt@f
 12068  005394  C078  F049         	movff	printf@f+1,i2__doprnt@f+1
 12069  005398  0E52               	movlw	low printf@ap
 12070  00539A  6E4A               	movwf	i2__doprnt@ap,c
 12071  00539C  0E00               	movlw	high printf@ap
 12072  00539E  6E4B               	movwf	i2__doprnt@ap+1,c
 12073  0053A0  EC88  F009         	call	i2__doprnt	;wreg free
 12074  0053A4  0012               	return	
 12075  0053A6                     __end_of_printf:
 12076                           	opt stack 0
 12077                           tosu	equ	0xFFF
 12078                           tosh	equ	0xFFE
 12079                           tosl	equ	0xFFD
 12080                           pclatu	equ	0xFFB
 12081                           pclath	equ	0xFFA
 12082                           tblptru	equ	0xFF8
 12083                           tblptrh	equ	0xFF7
 12084                           tblptrl	equ	0xFF6
 12085                           tablat	equ	0xFF5
 12086                           prodh	equ	0xFF4
 12087                           prodl	equ	0xFF3
 12088                           intcon	equ	0xFF2
 12089                           intcon2	equ	0xFF1
 12090                           intcon3	equ	0xFF0
 12091                           postinc0	equ	0xFEE
 12092                           fsr0h	equ	0xFEA
 12093                           fsr0l	equ	0xFE9
 12094                           wreg	equ	0xFE8
 12095                           postdec1	equ	0xFE5
 12096                           fsr1h	equ	0xFE2
 12097                           fsr1l	equ	0xFE1
 12098                           indf2	equ	0xFDF
 12099                           postinc2	equ	0xFDE
 12100                           postdec2	equ	0xFDD
 12101                           fsr2h	equ	0xFDA
 12102                           fsr2l	equ	0xFD9
 12103                           status	equ	0xFD8
 12104                           
 12105 ;; *************** function i2__doprnt *****************
 12106 ;; Defined at:
 12107 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
 12108 ;; Parameters:    Size  Location     Type
 12109 ;;  pb              2   69[COMRAM] PTR struct __prbuf
 12110 ;;		 -> sprintf@pb(4), printf@pb(4), 
 12111 ;;  f               2   71[COMRAM] PTR const unsigned char 
 12112 ;;		 -> STR_7(11), STR_6(11), STR_5(8), STR_4(11), 
 12113 ;;		 -> STR_3(11), STR_2(53), STR_1(23), 
 12114 ;;  ap              2   73[COMRAM] PTR PTR void 
 12115 ;;		 -> sprintf@ap(2), printf@ap(2), 
 12116 ;; Auto vars:     Size  Location     Type
 12117 ;;  _doprnt         4    9[BANK0 ] struct .
 12118 ;;  _doprnt         4    5[BANK0 ] unsigned long 
 12119 ;;  _doprnt         3   13[BANK0 ] unsigned long 
 12120 ;;  _doprnt         3    0        PTR const unsigned char 
 12121 ;;  _doprnt         2   20[BANK0 ] int 
 12122 ;;  _doprnt         2   18[BANK0 ] unsigned short 
 12123 ;;  _doprnt         2   16[BANK0 ] int 
 12124 ;;  _doprnt         2    3[BANK0 ] int 
 12125 ;;  _doprnt         2    0        unsigned int 
 12126 ;;  _doprnt         1   22[BANK0 ] char 
 12127 ;;  _doprnt         1    0        unsigned char 
 12128 ;; Return value:  Size  Location     Type
 12129 ;;                  2   69[COMRAM] int 
 12130 ;; Registers used:
 12131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12132 ;; Tracked objects:
 12133 ;;		On entry : 0/0
 12134 ;;		On exit  : 0/0
 12135 ;;		Unchanged: 0/0
 12136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12137 ;;      Params:         6       0       0       0       0       0       0
 12138 ;;      Locals:         0      23       0       0       0       0       0
 12139 ;;      Temps:          6       0       0       0       0       0       0
 12140 ;;      Totals:        12      23       0       0       0       0       0
 12141 ;;Total ram usage:       35 bytes
 12142 ;; Hardware stack levels used:    1
 12143 ;; Hardware stack levels required when called:    3
 12144 ;; This function calls:
 12145 ;;		Absolute function
 12146 ;;		i2___awdiv
 12147 ;;		i2___ftadd
 12148 ;;		i2___ftge
 12149 ;;		i2___ftmul
 12150 ;;		i2___ftneg
 12151 ;;		i2___ftsub
 12152 ;;		i2___fttol
 12153 ;;		i2___lldiv
 12154 ;;		i2___llmod
 12155 ;;		i2___lltoft
 12156 ;;		i2___wmul
 12157 ;;		i2__div_to_l_
 12158 ;;		i2__tdiv_to_l_
 12159 ;;		i2_fround
 12160 ;;		i2_isdigit
 12161 ;;		i2_putch
 12162 ;;		i2_scale
 12163 ;; This function is called by:
 12164 ;;		_printf
 12165 ;; This function uses a non-reentrant model
 12166 ;;
 12167                           
 12168                           	psect	text49
 12169  001310                     __ptext49:
 12170                           	opt stack 0
 12171  001310                     i2__doprnt:
 12172                           	opt stack 19
 12173                           
 12174                           ;doprnt.c: 499: signed char c;
 12175                           ;doprnt.c: 501: int width;
 12176                           ;doprnt.c: 504: int prec;
 12177                           ;doprnt.c: 508: unsigned short flag;
 12178                           ;doprnt.c: 515: char d;
 12179                           ;doprnt.c: 516: double fval;
 12180                           ;doprnt.c: 517: int exp;
 12181                           ;doprnt.c: 523: union {
 12182                           ;doprnt.c: 524: unsigned long vd;
 12183                           ;doprnt.c: 525: double integ;
 12184                           ;doprnt.c: 526: } tmpval;
 12185                           ;doprnt.c: 528: unsigned long val;
 12186                           ;doprnt.c: 529: unsigned len;
 12187                           ;doprnt.c: 530: const char * cp;
 12188                           ;doprnt.c: 536: while(c = *f++) {
 12189                           
 12190                           ;incstack = 0
 12191  001310  EF31  F012         	goto	i2l9510
 12192  001314                     i2l9122:
 12193                           
 12194                           ;doprnt.c: 538: if(c != '%')
 12195  001314  0E25               	movlw	37
 12196  001316  0100               	movlb	0	; () banked
 12197  001318  1976               	xorwf	i2__doprnt@c& (0+255),w,b
 12198  00131A  B4D8               	btfsc	status,2,c
 12199  00131C  D036               	goto	i2l9132
 12200                           
 12201                           ; BSR set to: 0
 12202                           ;doprnt.c: 540: {
 12203                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 12204  00131E  EE20 F002          	lfsr	2,2
 12205  001322  5046               	movf	i2__doprnt@pb,w,c
 12206  001324  26D9               	addwf	fsr2l,f,c
 12207  001326  5047               	movf	i2__doprnt@pb+1,w,c
 12208  001328  22DA               	addwfc	fsr2h,f,c
 12209  00132A  50DE               	movf	postinc2,w,c
 12210  00132C  10DE               	iorwf	postinc2,w,c
 12211  00132E  B4D8               	btfsc	status,2,c
 12212  001330  D015               	goto	i2l9128
 12213                           
 12214                           ; BSR set to: 0
 12215  001332  EE20 F002          	lfsr	2,2
 12216  001336  5046               	movf	i2__doprnt@pb,w,c
 12217  001338  26D9               	addwf	fsr2l,f,c
 12218  00133A  5047               	movf	i2__doprnt@pb+1,w,c
 12219  00133C  22DA               	addwfc	fsr2h,f,c
 12220  00133E  D802               	call	i2u1510_48
 12221  001340  EF31  F012         	goto	i2l9510
 12222  001344                     i2u1510_48:
 12223  001344  0005               	push	
 12224  001346  6EFA               	movwf	pclath,c
 12225  001348  50DE               	movf	postinc2,w,c
 12226  00134A  6EFD               	movwf	tosl,c
 12227  00134C  50DE               	movf	postinc2,w,c
 12228  00134E  6EFE               	movwf	tosh,c
 12229  001350  50F8               	movf	tblptru,w,c
 12230  001352  6EFF               	movwf	tosu,c
 12231  001354  50FA               	movf	pclath,w,c
 12232  001356  0100               	movlb	0	; () banked
 12233  001358  5176               	movf	i2__doprnt@c& (0+255),w,b
 12234  00135A  0012               	return		;indir
 12235  00135C                     i2l9128:
 12236  00135C  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12237  001360  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12238  001364  CFDE F04C          	movff	postinc2,??i2__doprnt
 12239  001368  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12240  00136C  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12241  001370  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12242  001374  C076  FFDF         	movff	i2__doprnt@c,indf2
 12243  001378  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12244  00137C  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12245  001380  2ADE               	incf	postinc2,f,c
 12246  001382  0E00               	movlw	0
 12247  001384  22DD               	addwfc	postdec2,f,c
 12248                           
 12249                           ;doprnt.c: 542: continue;
 12250  001386  EF31  F012         	goto	i2l9510
 12251  00138A                     i2l9132:
 12252                           
 12253                           ;doprnt.c: 543: }
 12254                           ;doprnt.c: 546: width = 0;
 12255  00138A  0E00               	movlw	0
 12256  00138C  0100               	movlb	0	; () banked
 12257  00138E  6F71               	movwf	(i2__doprnt@width+1)& (0+255),b
 12258  001390  0E00               	movlw	0
 12259  001392  6F70               	movwf	i2__doprnt@width& (0+255),b
 12260                           
 12261                           ;doprnt.c: 548: flag = 0;
 12262  001394  0E00               	movlw	0
 12263  001396  0100               	movlb	0	; () banked
 12264  001398  6F73               	movwf	(i2__doprnt@flag+1)& (0+255),b
 12265  00139A  0E00               	movlw	0
 12266  00139C  6F72               	movwf	i2__doprnt@flag& (0+255),b
 12267                           
 12268                           ; BSR set to: 0
 12269                           ;doprnt.c: 551: switch(*f) {
 12270                           
 12271                           ;doprnt.c: 550: for(;;) {
 12272  00139E  D004               	goto	i2l9138
 12273  0013A0                     i2l9134:
 12274                           
 12275                           ;doprnt.c: 580: flag |= 0x04;
 12276  0013A0  0100               	movlb	0	; () banked
 12277  0013A2  8572               	bsf	i2__doprnt@flag& (0+255),2,b
 12278                           
 12279                           ;doprnt.c: 581: f++;
 12280  0013A4  4A48               	infsnz	i2__doprnt@f,f,c
 12281  0013A6  2A49               	incf	i2__doprnt@f+1,f,c
 12282  0013A8                     i2l9138:
 12283  0013A8  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12284  0013AC  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12285  0013B0                     	if	0	;tblptru may be non-zero
 12286  0013B0                     	endif
 12287  0013B0                     	if	0	;tblptru may be non-zero
 12288  0013B0                     	endif
 12289  0013B0  0008               	tblrd		*
 12290  0013B2  50F5               	movf	tablat,w,c
 12291                           
 12292                           ; Switch size 1, requested type "space"
 12293                           ; Number of cases is 1, Range of values is 48 to 48
 12294                           ; switch strategies available:
 12295                           ; Name         Instructions Cycles
 12296                           ; simple_byte            4     3 (average)
 12297                           ;	Chosen strategy is simple_byte
 12298  0013B4  0A30               	xorlw	48	; case 48
 12299  0013B6  B4D8               	btfsc	status,2,c
 12300  0013B8  D7F3               	goto	i2l9134
 12301                           
 12302                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 12303                           
 12304                           ;doprnt.c: 586: }
 12305                           
 12306                           ;doprnt.c: 585: break;
 12307  0013BA  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12308  0013BE  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12309  0013C2                     	if	0	;tblptru may be non-zero
 12310  0013C2                     	endif
 12311  0013C2                     	if	0	;tblptru may be non-zero
 12312  0013C2                     	endif
 12313  0013C2  0008               	tblrd		*
 12314  0013C4  50F5               	movf	tablat,w,c
 12315  0013C6  EC89  F02A         	call	i2_isdigit
 12316  0013CA  A0D8               	btfss	status,0,c
 12317  0013CC  D035               	goto	i2l9152
 12318                           
 12319                           ;doprnt.c: 598: width = 0;
 12320  0013CE  0E00               	movlw	0
 12321  0013D0  0100               	movlb	0	; () banked
 12322  0013D2  6F71               	movwf	(i2__doprnt@width+1)& (0+255),b
 12323  0013D4  0E00               	movlw	0
 12324  0013D6  6F70               	movwf	i2__doprnt@width& (0+255),b
 12325  0013D8                     i2l9144:
 12326                           
 12327                           ;doprnt.c: 600: width *= 10;
 12328  0013D8  C070  F00F         	movff	i2__doprnt@width,i2___wmul@multiplier
 12329  0013DC  C071  F010         	movff	i2__doprnt@width+1,i2___wmul@multiplier+1
 12330  0013E0  0E00               	movlw	0
 12331  0013E2  6E12               	movwf	i2___wmul@multiplicand+1,c
 12332  0013E4  0E0A               	movlw	10
 12333  0013E6  6E11               	movwf	i2___wmul@multiplicand,c
 12334  0013E8  EC43  F02A         	call	i2___wmul	;wreg free
 12335  0013EC  C00F  F070         	movff	?i2___wmul,i2__doprnt@width
 12336  0013F0  C010  F071         	movff	?i2___wmul+1,i2__doprnt@width+1
 12337                           
 12338                           ;doprnt.c: 601: width += *f++ - '0';
 12339  0013F4  0ED0               	movlw	208
 12340  0013F6  6E4C               	movwf	??i2__doprnt& (0+255),c
 12341  0013F8  0EFF               	movlw	255
 12342  0013FA  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 12343  0013FC  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12344  001400  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12345  001404                     	if	0	;tblptru may be non-zero
 12346  001404                     	endif
 12347  001404                     	if	0	;tblptru may be non-zero
 12348  001404                     	endif
 12349  001404  0008               	tblrd		*
 12350  001406  50F5               	movf	tablat,w,c
 12351  001408  6E4E               	movwf	(??i2__doprnt+2)& (0+255),c
 12352  00140A  6A4F               	clrf	(??i2__doprnt+3)& (0+255),c
 12353  00140C  504C               	movf	??i2__doprnt,w,c
 12354  00140E  264E               	addwf	??i2__doprnt+2,f,c
 12355  001410  504D               	movf	??i2__doprnt+1,w,c
 12356  001412  224F               	addwfc	??i2__doprnt+3,f,c
 12357  001414  504E               	movf	??i2__doprnt+2,w,c
 12358  001416  0100               	movlb	0	; () banked
 12359  001418  2770               	addwf	i2__doprnt@width& (0+255),f,b
 12360  00141A  504F               	movf	??i2__doprnt+3,w,c
 12361  00141C  0100               	movlb	0	; () banked
 12362  00141E  2371               	addwfc	(i2__doprnt@width+1)& (0+255),f,b
 12363                           
 12364                           ; BSR set to: 0
 12365  001420  4A48               	infsnz	i2__doprnt@f,f,c
 12366  001422  2A49               	incf	i2__doprnt@f+1,f,c
 12367                           
 12368                           ; BSR set to: 0
 12369                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 12370  001424  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12371  001428  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12372  00142C                     	if	0	;tblptru may be non-zero
 12373  00142C                     	endif
 12374  00142C                     	if	0	;tblptru may be non-zero
 12375  00142C                     	endif
 12376  00142C  0008               	tblrd		*
 12377  00142E  50F5               	movf	tablat,w,c
 12378  001430  EC89  F02A         	call	i2_isdigit
 12379  001434  B0D8               	btfsc	status,0,c
 12380  001436  D7D0               	goto	i2l9144
 12381  001438                     i2l9152:
 12382                           
 12383                           ;doprnt.c: 608: }
 12384                           ;doprnt.c: 611: if(*f == '.') {
 12385  001438  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12386  00143C  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12387  001440                     	if	0	;tblptru may be non-zero
 12388  001440                     	endif
 12389  001440                     	if	0	;tblptru may be non-zero
 12390  001440                     	endif
 12391  001440  0008               	tblrd		*
 12392  001442  50F5               	movf	tablat,w,c
 12393  001444  0A2E               	xorlw	46
 12394  001446  A4D8               	btfss	status,2,c
 12395  001448  D032               	goto	i2l9164
 12396                           
 12397                           ;doprnt.c: 612: flag |= 0x4000;
 12398  00144A  0100               	movlb	0	; () banked
 12399  00144C  8D73               	bsf	(i2__doprnt@flag+1)& (0+255),6,b
 12400                           
 12401                           ;doprnt.c: 613: f++;
 12402  00144E  4A48               	infsnz	i2__doprnt@f,f,c
 12403  001450  2A49               	incf	i2__doprnt@f+1,f,c
 12404                           
 12405                           ; BSR set to: 0
 12406                           ;doprnt.c: 620: {
 12407                           ;doprnt.c: 621: prec = 0;
 12408  001452  0E00               	movlw	0
 12409  001454  0100               	movlb	0	; () banked
 12410  001456  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 12411  001458  0E00               	movlw	0
 12412  00145A  6F74               	movwf	i2__doprnt@prec& (0+255),b
 12413                           
 12414                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 12415  00145C  D01D               	goto	i2l9162
 12416  00145E                     i2l9158:
 12417                           
 12418                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 12419  00145E  C074  F00F         	movff	i2__doprnt@prec,i2___wmul@multiplier
 12420  001462  C075  F010         	movff	i2__doprnt@prec+1,i2___wmul@multiplier+1
 12421  001466  0E00               	movlw	0
 12422  001468  6E12               	movwf	i2___wmul@multiplicand+1,c
 12423  00146A  0E0A               	movlw	10
 12424  00146C  6E11               	movwf	i2___wmul@multiplicand,c
 12425  00146E  EC43  F02A         	call	i2___wmul	;wreg free
 12426  001472  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12427  001476  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12428  00147A                     	if	0	;tblptru may be non-zero
 12429  00147A                     	endif
 12430  00147A                     	if	0	;tblptru may be non-zero
 12431  00147A                     	endif
 12432  00147A  0008               	tblrd		*
 12433  00147C  50F5               	movf	tablat,w,c
 12434  00147E  260F               	addwf	?i2___wmul,f,c
 12435  001480  0E00               	movlw	0
 12436  001482  2210               	addwfc	?i2___wmul+1,f,c
 12437  001484  0ED0               	movlw	208
 12438  001486  240F               	addwf	?i2___wmul,w,c
 12439  001488  0100               	movlb	0	; () banked
 12440  00148A  6F74               	movwf	i2__doprnt@prec& (0+255),b
 12441  00148C  0EFF               	movlw	255
 12442  00148E  2010               	addwfc	?i2___wmul+1,w,c
 12443  001490  0100               	movlb	0	; () banked
 12444  001492  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 12445                           
 12446                           ; BSR set to: 0
 12447  001494  4A48               	infsnz	i2__doprnt@f,f,c
 12448  001496  2A49               	incf	i2__doprnt@f+1,f,c
 12449  001498                     i2l9162:
 12450                           
 12451                           ; BSR set to: 0
 12452  001498  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12453  00149C  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12454  0014A0                     	if	0	;tblptru may be non-zero
 12455  0014A0                     	endif
 12456  0014A0                     	if	0	;tblptru may be non-zero
 12457  0014A0                     	endif
 12458  0014A0  0008               	tblrd		*
 12459  0014A2  50F5               	movf	tablat,w,c
 12460  0014A4  EC89  F02A         	call	i2_isdigit
 12461  0014A8  A0D8               	btfss	status,0,c
 12462  0014AA  D012               	goto	i2l9176
 12463  0014AC  D7D8               	goto	i2l9158
 12464  0014AE                     i2l9164:
 12465                           
 12466                           ;doprnt.c: 626: prec = 0;
 12467  0014AE  0E00               	movlw	0
 12468  0014B0  0100               	movlb	0	; () banked
 12469  0014B2  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 12470  0014B4  0E00               	movlw	0
 12471  0014B6  6F74               	movwf	i2__doprnt@prec& (0+255),b
 12472                           
 12473                           ; BSR set to: 0
 12474                           ;doprnt.c: 628: flag |= 0x1000;
 12475  0014B8  0100               	movlb	0	; () banked
 12476  0014BA  8973               	bsf	(i2__doprnt@flag+1)& (0+255),4,b
 12477                           
 12478                           ; BSR set to: 0
 12479                           ;doprnt.c: 635: switch(c = *f++) {
 12480                           
 12481                           ;doprnt.c: 630: }
 12482                           ;doprnt.c: 633: loop:
 12483                           
 12484                           ; BSR set to: 0
 12485  0014BC  D009               	goto	i2l9176
 12486  0014BE                     i2l9168:
 12487                           
 12488                           ; BSR set to: 0
 12489                           ;doprnt.c: 643: flag |= 0x10;
 12490  0014BE  0100               	movlb	0	; () banked
 12491  0014C0  8972               	bsf	i2__doprnt@flag& (0+255),4,b
 12492                           
 12493                           ;doprnt.c: 644: goto loop;
 12494  0014C2  D006               	goto	i2l9176
 12495  0014C4                     i2l9170:
 12496                           
 12497                           ; BSR set to: 0
 12498                           ;doprnt.c: 663: flag |= 0x400;
 12499  0014C4  0100               	movlb	0	; () banked
 12500  0014C6  8573               	bsf	(i2__doprnt@flag+1)& (0+255),2,b
 12501                           
 12502                           ; BSR set to: 0
 12503                           ;doprnt.c: 698: case 'i':
 12504                           ;doprnt.c: 699: break;
 12505                           
 12506                           ; BSR set to: 0
 12507                           
 12508                           ;doprnt.c: 697: case 'd':
 12509                           
 12510                           ;doprnt.c: 664: break;
 12511  0014C8  D023               	goto	i2l9178
 12512  0014CA                     i2l9172:
 12513                           
 12514                           ; BSR set to: 0
 12515                           ;doprnt.c: 818: flag |= 0x40;
 12516  0014CA  0100               	movlb	0	; () banked
 12517  0014CC  8D72               	bsf	i2__doprnt@flag& (0+255),6,b
 12518                           
 12519                           ; BSR set to: 0
 12520                           ;doprnt.c: 822: }
 12521                           
 12522                           ;doprnt.c: 819: break;
 12523  0014CE  D020               	goto	i2l9178
 12524  0014D0                     i2l9176:
 12525  0014D0  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12526  0014D4  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12527  0014D8  4A48               	infsnz	i2__doprnt@f,f,c
 12528  0014DA  2A49               	incf	i2__doprnt@f+1,f,c
 12529  0014DC                     	if	0	;tblptru may be non-zero
 12530  0014DC                     	endif
 12531  0014DC                     	if	0	;tblptru may be non-zero
 12532  0014DC                     	endif
 12533  0014DC  0008               	tblrd		*
 12534  0014DE  CFF5 F076          	movff	tablat,i2__doprnt@c
 12535  0014E2  0100               	movlb	0	; () banked
 12536  0014E4  5176               	movf	i2__doprnt@c& (0+255),w,b
 12537                           
 12538                           ; Switch size 1, requested type "space"
 12539                           ; Number of cases is 6, Range of values is 0 to 117
 12540                           ; switch strategies available:
 12541                           ; Name         Instructions Cycles
 12542                           ; simple_byte           19    10 (average)
 12543                           ;	Chosen strategy is simple_byte
 12544  0014E6  0A00               	xorlw	0	; case 0
 12545  0014E8  B4D8               	btfsc	status,2,c
 12546  0014EA  EF3F  F012         	goto	i2l9512
 12547  0014EE  0A64               	xorlw	100	; case 100
 12548  0014F0  B4D8               	btfsc	status,2,c
 12549  0014F2  D00E               	goto	i2l9178
 12550  0014F4  0A02               	xorlw	2	; case 102
 12551  0014F6  B4D8               	btfsc	status,2,c
 12552  0014F8  D7E5               	goto	i2l9170
 12553  0014FA  0A0F               	xorlw	15	; case 105
 12554  0014FC  B4D8               	btfsc	status,2,c
 12555  0014FE  D008               	goto	i2l9178
 12556  001500  0A05               	xorlw	5	; case 108
 12557  001502  B4D8               	btfsc	status,2,c
 12558  001504  D7DC               	goto	i2l9168
 12559  001506  0A19               	xorlw	25	; case 117
 12560  001508  B4D8               	btfsc	status,2,c
 12561  00150A  D7DF               	goto	i2l9172
 12562  00150C  EF31  F012         	goto	i2l9510
 12563  001510                     i2l9178:
 12564                           
 12565                           ; BSR set to: 0
 12566                           ;doprnt.c: 825: if(flag & (0x700)) {
 12567  001510  0E07               	movlw	7
 12568  001512  0100               	movlb	0	; () banked
 12569  001514  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 12570  001516  B4D8               	btfsc	status,2,c
 12571  001518  EF8A  F00F         	goto	i2l416
 12572                           
 12573                           ; BSR set to: 0
 12574                           ;doprnt.c: 827: if(flag & 0x1000)
 12575  00151C  0100               	movlb	0	; () banked
 12576  00151E  A973               	btfss	(i2__doprnt@flag+1)& (0+255),4,b
 12577  001520  D005               	goto	i2l9184
 12578                           
 12579                           ; BSR set to: 0
 12580                           ;doprnt.c: 829: prec = 6;
 12581  001522  0E00               	movlw	0
 12582  001524  0100               	movlb	0	; () banked
 12583  001526  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 12584  001528  0E06               	movlw	6
 12585  00152A  6F74               	movwf	i2__doprnt@prec& (0+255),b
 12586  00152C                     i2l9184:
 12587                           
 12588                           ; BSR set to: 0
 12589                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 12590  00152C  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 12591  001530  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 12592  001534  CFDF F04C          	movff	indf2,??i2__doprnt
 12593  001538  0E03               	movlw	3
 12594  00153A  26DE               	addwf	postinc2,f,c
 12595  00153C  CFDF F04D          	movff	indf2,??i2__doprnt+1
 12596  001540  0E00               	movlw	0
 12597  001542  22DD               	addwfc	postdec2,f,c
 12598  001544  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12599  001548  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12600  00154C  CFDE F06D          	movff	postinc2,i2__doprnt@fval
 12601  001550  CFDE F06E          	movff	postinc2,i2__doprnt@fval+1
 12602  001554  CFDD F06F          	movff	postdec2,i2__doprnt@fval+2
 12603                           
 12604                           ; BSR set to: 0
 12605                           ;doprnt.c: 831: if(fval < 0.0) {
 12606  001558  0100               	movlb	0	; () banked
 12607  00155A  AF6F               	btfss	(i2__doprnt@fval+2)& (0+255),7,b
 12608  00155C  D011               	goto	i2l9192
 12609                           
 12610                           ; BSR set to: 0
 12611                           ;doprnt.c: 832: fval = -fval;
 12612  00155E  C06D  F001         	movff	i2__doprnt@fval,i2___ftneg@f1
 12613  001562  C06E  F002         	movff	i2__doprnt@fval+1,i2___ftneg@f1+1
 12614  001566  C06F  F003         	movff	i2__doprnt@fval+2,i2___ftneg@f1+2
 12615  00156A  EC56  F02A         	call	i2___ftneg	;wreg free
 12616  00156E  C001  F06D         	movff	?i2___ftneg,i2__doprnt@fval
 12617  001572  C002  F06E         	movff	?i2___ftneg+1,i2__doprnt@fval+1
 12618  001576  C003  F06F         	movff	?i2___ftneg+2,i2__doprnt@fval+2
 12619                           
 12620                           ;doprnt.c: 833: flag |= 0x03;
 12621  00157A  0E03               	movlw	3
 12622  00157C  0100               	movlb	0	; () banked
 12623  00157E  1372               	iorwf	i2__doprnt@flag& (0+255),f,b
 12624  001580                     i2l9192:
 12625                           
 12626                           ; BSR set to: 0
 12627                           ;doprnt.c: 834: }
 12628                           ;doprnt.c: 835: exp = 0;
 12629  001580  0E00               	movlw	0
 12630  001582  0100               	movlb	0	; () banked
 12631  001584  6F64               	movwf	(i2__doprnt@exp+1)& (0+255),b
 12632  001586  0E00               	movlw	0
 12633  001588  6F63               	movwf	i2__doprnt@exp& (0+255),b
 12634                           
 12635                           ; BSR set to: 0
 12636                           ;doprnt.c: 836: if( fval!=0) {
 12637  00158A  0100               	movlb	0	; () banked
 12638  00158C  516D               	movf	i2__doprnt@fval& (0+255),w,b
 12639  00158E  0100               	movlb	0	; () banked
 12640  001590  116E               	iorwf	(i2__doprnt@fval+1)& (0+255),w,b
 12641  001592  0100               	movlb	0	; () banked
 12642  001594  116F               	iorwf	(i2__doprnt@fval+2)& (0+255),w,b
 12643  001596  B4D8               	btfsc	status,2,c
 12644  001598  D08B               	goto	i2l9220
 12645                           
 12646                           ; BSR set to: 0
 12647                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 12648  00159A  0E82               	movlw	130
 12649  00159C  6E4C               	movwf	??i2__doprnt& (0+255),c
 12650  00159E  0EFF               	movlw	255
 12651  0015A0  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 12652  0015A2  C06D  F04E         	movff	i2__doprnt@fval,??i2__doprnt+2
 12653  0015A6  C06E  F04F         	movff	i2__doprnt@fval+1,??i2__doprnt+3
 12654  0015AA  C06F  F050         	movff	i2__doprnt@fval+2,??i2__doprnt+4
 12655  0015AE  C070  F051         	movff	i2__doprnt@fval+3,??i2__doprnt+5
 12656  0015B2  0E10               	movlw	16
 12657  0015B4  D005               	goto	i2u1519_40
 12658  0015B6                     i2u1519_45:
 12659  0015B6  90D8               	bcf	status,0,c
 12660  0015B8  3251               	rrcf	??i2__doprnt+5,f,c
 12661  0015BA  3250               	rrcf	??i2__doprnt+4,f,c
 12662  0015BC  324F               	rrcf	??i2__doprnt+3,f,c
 12663  0015BE  324E               	rrcf	??i2__doprnt+2,f,c
 12664  0015C0                     i2u1519_40:
 12665  0015C0  2EE8               	decfsz	wreg,f,c
 12666  0015C2  D7F9               	goto	i2u1519_45
 12667  0015C4  504E               	movf	??i2__doprnt+2,w,c
 12668  0015C6  244C               	addwf	??i2__doprnt,w,c
 12669  0015C8  0100               	movlb	0	; () banked
 12670  0015CA  6F63               	movwf	i2__doprnt@exp& (0+255),b
 12671  0015CC  0E00               	movlw	0
 12672  0015CE  204D               	addwfc	??i2__doprnt+1,w,c
 12673  0015D0  0100               	movlb	0	; () banked
 12674  0015D2  6F64               	movwf	(i2__doprnt@exp+1)& (0+255),b
 12675                           
 12676                           ; BSR set to: 0
 12677                           ;doprnt.c: 838: exp--;
 12678  0015D4  0100               	movlb	0	; () banked
 12679  0015D6  0763               	decf	i2__doprnt@exp& (0+255),f,b
 12680  0015D8  A0D8               	btfss	status,0,c
 12681  0015DA  0764               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 12682                           
 12683                           ; BSR set to: 0
 12684                           ;doprnt.c: 839: exp *= 3;
 12685  0015DC  C063  F00F         	movff	i2__doprnt@exp,i2___wmul@multiplier
 12686  0015E0  C064  F010         	movff	i2__doprnt@exp+1,i2___wmul@multiplier+1
 12687  0015E4  0E00               	movlw	0
 12688  0015E6  6E12               	movwf	i2___wmul@multiplicand+1,c
 12689  0015E8  0E03               	movlw	3
 12690  0015EA  6E11               	movwf	i2___wmul@multiplicand,c
 12691  0015EC  EC43  F02A         	call	i2___wmul	;wreg free
 12692  0015F0  C00F  F063         	movff	?i2___wmul,i2__doprnt@exp
 12693  0015F4  C010  F064         	movff	?i2___wmul+1,i2__doprnt@exp+1
 12694                           
 12695                           ;doprnt.c: 840: exp /= 10;
 12696  0015F8  C063  F007         	movff	i2__doprnt@exp,i2___awdiv@dividend
 12697  0015FC  C064  F008         	movff	i2__doprnt@exp+1,i2___awdiv@dividend+1
 12698  001600  0E00               	movlw	0
 12699  001602  6E0A               	movwf	i2___awdiv@divisor+1,c
 12700  001604  0E0A               	movlw	10
 12701  001606  6E09               	movwf	i2___awdiv@divisor,c
 12702  001608  EC43  F026         	call	i2___awdiv	;wreg free
 12703  00160C  C007  F063         	movff	?i2___awdiv,i2__doprnt@exp
 12704  001610  C008  F064         	movff	?i2___awdiv+1,i2__doprnt@exp+1
 12705                           
 12706                           ;doprnt.c: 841: if(exp < 0)
 12707  001614  0100               	movlb	0	; () banked
 12708  001616  AF64               	btfss	(i2__doprnt@exp+1)& (0+255),7,b
 12709  001618  D004               	goto	i2l9208
 12710                           
 12711                           ; BSR set to: 0
 12712                           ;doprnt.c: 842: exp--;
 12713  00161A  0100               	movlb	0	; () banked
 12714  00161C  0763               	decf	i2__doprnt@exp& (0+255),f,b
 12715  00161E  A0D8               	btfss	status,0,c
 12716  001620  0764               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 12717  001622                     i2l9208:
 12718                           
 12719                           ; BSR set to: 0
 12720                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 12721  001622  0100               	movlb	0	; () banked
 12722  001624  5163               	movf	i2__doprnt@exp& (0+255),w,b
 12723  001626  0800               	sublw	0
 12724  001628  EC9B  F014         	call	i2_scale
 12725  00162C  C030  F069         	movff	?i2_scale,i2__doprnt@tmpval
 12726  001630  C031  F06A         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 12727  001634  C032  F06B         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 12728                           
 12729                           ;doprnt.c: 847: tmpval.integ *= fval;
 12730  001638  C069  F021         	movff	i2__doprnt@tmpval,i2___ftmul@f1
 12731  00163C  C06A  F022         	movff	i2__doprnt@tmpval+1,i2___ftmul@f1+1
 12732  001640  C06B  F023         	movff	i2__doprnt@tmpval+2,i2___ftmul@f1+2
 12733  001644  C06D  F024         	movff	i2__doprnt@fval,i2___ftmul@f2
 12734  001648  C06E  F025         	movff	i2__doprnt@fval+1,i2___ftmul@f2+1
 12735  00164C  C06F  F026         	movff	i2__doprnt@fval+2,i2___ftmul@f2+2
 12736  001650  EC7E  F022         	call	i2___ftmul	;wreg free
 12737  001654  C021  F069         	movff	?i2___ftmul,i2__doprnt@tmpval
 12738  001658  C022  F06A         	movff	?i2___ftmul+1,i2__doprnt@tmpval+1
 12739  00165C  C023  F06B         	movff	?i2___ftmul+2,i2__doprnt@tmpval+2
 12740                           
 12741                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 12742  001660  C069  F001         	movff	i2__doprnt@tmpval,i2___ftge@ff1
 12743  001664  C06A  F002         	movff	i2__doprnt@tmpval+1,i2___ftge@ff1+1
 12744  001668  C06B  F003         	movff	i2__doprnt@tmpval+2,i2___ftge@ff1+2
 12745  00166C  0E00               	movlw	0
 12746  00166E  6E04               	movwf	i2___ftge@ff2,c
 12747  001670  0E80               	movlw	128
 12748  001672  6E05               	movwf	i2___ftge@ff2+1,c
 12749  001674  0E3F               	movlw	63
 12750  001676  6E06               	movwf	i2___ftge@ff2+2,c
 12751  001678  ECFB  F025         	call	i2___ftge	;wreg free
 12752  00167C  B0D8               	btfsc	status,0,c
 12753  00167E  D005               	goto	i2l9216
 12754                           
 12755                           ;doprnt.c: 849: exp--;
 12756  001680  0100               	movlb	0	; () banked
 12757  001682  0763               	decf	i2__doprnt@exp& (0+255),f,b
 12758  001684  A0D8               	btfss	status,0,c
 12759  001686  0764               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 12760  001688  D013               	goto	i2l9220
 12761  00168A                     i2l9216:
 12762                           
 12763                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 12764  00168A  C069  F001         	movff	i2__doprnt@tmpval,i2___ftge@ff1
 12765  00168E  C06A  F002         	movff	i2__doprnt@tmpval+1,i2___ftge@ff1+1
 12766  001692  C06B  F003         	movff	i2__doprnt@tmpval+2,i2___ftge@ff1+2
 12767  001696  0E00               	movlw	0
 12768  001698  6E04               	movwf	i2___ftge@ff2,c
 12769  00169A  0E20               	movlw	32
 12770  00169C  6E05               	movwf	i2___ftge@ff2+1,c
 12771  00169E  0E41               	movlw	65
 12772  0016A0  6E06               	movwf	i2___ftge@ff2+2,c
 12773  0016A2  ECFB  F025         	call	i2___ftge	;wreg free
 12774  0016A6  A0D8               	btfss	status,0,c
 12775  0016A8  D003               	goto	i2l9220
 12776                           
 12777                           ;doprnt.c: 851: exp++;
 12778  0016AA  0100               	movlb	0	; () banked
 12779  0016AC  4B63               	infsnz	i2__doprnt@exp& (0+255),f,b
 12780  0016AE  2B64               	incf	(i2__doprnt@exp+1)& (0+255),f,b
 12781  0016B0                     i2l9220:
 12782                           
 12783                           ;doprnt.c: 852: }
 12784                           ;doprnt.c: 1112: if(prec <= 12)
 12785  0016B0  0100               	movlb	0	; () banked
 12786  0016B2  BF75               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 12787  0016B4  D008               	goto	i2l9222
 12788  0016B6  0100               	movlb	0	; () banked
 12789  0016B8  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 12790  0016BA  E11D               	bnz	i2l9224
 12791  0016BC  0E0D               	movlw	13
 12792  0016BE  0100               	movlb	0	; () banked
 12793  0016C0  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 12794  0016C2  B0D8               	btfsc	status,0,c
 12795  0016C4  D018               	goto	i2l9224
 12796  0016C6                     i2l9222:
 12797                           
 12798                           ; BSR set to: 0
 12799                           ;doprnt.c: 1113: fval += fround(prec);
 12800  0016C6  C06D  F015         	movff	i2__doprnt@fval,i2___ftadd@f1
 12801  0016CA  C06E  F016         	movff	i2__doprnt@fval+1,i2___ftadd@f1+1
 12802  0016CE  C06F  F017         	movff	i2__doprnt@fval+2,i2___ftadd@f1+2
 12803  0016D2  0100               	movlb	0	; () banked
 12804  0016D4  5174               	movf	i2__doprnt@prec& (0+255),w,b
 12805  0016D6  EC1D  F019         	call	i2_fround
 12806  0016DA  C030  F018         	movff	?i2_fround,i2___ftadd@f2
 12807  0016DE  C031  F019         	movff	?i2_fround+1,i2___ftadd@f2+1
 12808  0016E2  C032  F01A         	movff	?i2_fround+2,i2___ftadd@f2+2
 12809  0016E6  EC40  F01A         	call	i2___ftadd	;wreg free
 12810  0016EA  C015  F06D         	movff	?i2___ftadd,i2__doprnt@fval
 12811  0016EE  C016  F06E         	movff	?i2___ftadd+1,i2__doprnt@fval+1
 12812  0016F2  C017  F06F         	movff	?i2___ftadd+2,i2__doprnt@fval+2
 12813  0016F6                     i2l9224:
 12814                           
 12815                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 12816  0016F6  0100               	movlb	0	; () banked
 12817  0016F8  BF64               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 12818  0016FA  D008               	goto	i2l9226
 12819  0016FC  0100               	movlb	0	; () banked
 12820  0016FE  5164               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 12821  001700  E126               	bnz	i2l9232
 12822  001702  0E0A               	movlw	10
 12823  001704  0100               	movlb	0	; () banked
 12824  001706  5D63               	subwf	i2__doprnt@exp& (0+255),w,b
 12825  001708  B0D8               	btfsc	status,0,c
 12826  00170A  D021               	goto	i2l9232
 12827  00170C                     i2l9226:
 12828                           
 12829                           ; BSR set to: 0
 12830  00170C  0100               	movlb	0	; () banked
 12831  00170E  516D               	movf	i2__doprnt@fval& (0+255),w,b
 12832  001710  0100               	movlb	0	; () banked
 12833  001712  116E               	iorwf	(i2__doprnt@fval+1)& (0+255),w,b
 12834  001714  0100               	movlb	0	; () banked
 12835  001716  116F               	iorwf	(i2__doprnt@fval+2)& (0+255),w,b
 12836  001718  B4D8               	btfsc	status,2,c
 12837  00171A  D05B               	goto	i2l9246
 12838                           
 12839                           ; BSR set to: 0
 12840  00171C  C06D  F037         	movff	i2__doprnt@fval,i2___fttol@f1
 12841  001720  C06E  F038         	movff	i2__doprnt@fval+1,i2___fttol@f1+1
 12842  001724  C06F  F039         	movff	i2__doprnt@fval+2,i2___fttol@f1+2
 12843  001728  ECF8  F022         	call	i2___fttol	;wreg free
 12844  00172C  5037               	movf	?i2___fttol,w,c
 12845  00172E  1038               	iorwf	?i2___fttol+1,w,c
 12846  001730  1039               	iorwf	?i2___fttol+2,w,c
 12847  001732  103A               	iorwf	?i2___fttol+3,w,c
 12848  001734  A4D8               	btfss	status,2,c
 12849  001736  D04D               	goto	i2l9246
 12850  001738  0100               	movlb	0	; () banked
 12851  00173A  BF64               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 12852  00173C  D04A               	goto	i2l9246
 12853  00173E  0100               	movlb	0	; () banked
 12854  001740  5164               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 12855  001742  E105               	bnz	i2l9232
 12856  001744  0E02               	movlw	2
 12857  001746  0100               	movlb	0	; () banked
 12858  001748  5D63               	subwf	i2__doprnt@exp& (0+255),w,b
 12859  00174A  A0D8               	btfss	status,0,c
 12860  00174C  D042               	goto	i2l9246
 12861  00174E                     i2l9232:
 12862                           
 12863                           ; BSR set to: 0
 12864                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 12865  00174E  C069  F001         	movff	i2__doprnt@tmpval,i2___ftge@ff1
 12866  001752  C06A  F002         	movff	i2__doprnt@tmpval+1,i2___ftge@ff1+1
 12867  001756  C06B  F003         	movff	i2__doprnt@tmpval+2,i2___ftge@ff1+2
 12868  00175A  0E70               	movlw	112
 12869  00175C  6E04               	movwf	i2___ftge@ff2,c
 12870  00175E  0E89               	movlw	137
 12871  001760  6E05               	movwf	i2___ftge@ff2+1,c
 12872  001762  0E40               	movlw	64
 12873  001764  6E06               	movwf	i2___ftge@ff2+2,c
 12874  001766  ECFB  F025         	call	i2___ftge	;wreg free
 12875  00176A  B0D8               	btfsc	status,0,c
 12876  00176C  D003               	goto	i2l9236
 12877                           
 12878                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 12879  00176E  0100               	movlb	0	; () banked
 12880  001770  0EF7               	movlw	247
 12881  001772  D002               	goto	L6
 12882  001774                     i2l9236:
 12883                           
 12884                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 12885  001774  0100               	movlb	0	; () banked
 12886  001776  0EF8               	movlw	248
 12887  001778                     L6:
 12888  001778  2763               	addwf	i2__doprnt@exp& (0+255),f,b
 12889  00177A  0EFF               	movlw	255
 12890  00177C  2364               	addwfc	(i2__doprnt@exp+1)& (0+255),f,b
 12891                           
 12892                           ; BSR set to: 0
 12893                           ;doprnt.c: 1124: }
 12894                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 12895                           
 12896                           ; BSR set to: 0
 12897  00177E  0100               	movlb	0	; () banked
 12898  001780  5163               	movf	i2__doprnt@exp& (0+255),w,b
 12899  001782  EC9B  F014         	call	i2_scale
 12900  001786  C030  F069         	movff	?i2_scale,i2__doprnt@tmpval
 12901  00178A  C031  F06A         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 12902  00178E  C032  F06B         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 12903                           
 12904                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 12905  001792  C06D  F001         	movff	i2__doprnt@fval,i2__tdiv_to_l_@f1
 12906  001796  C06E  F002         	movff	i2__doprnt@fval+1,i2__tdiv_to_l_@f1+1
 12907  00179A  C06F  F003         	movff	i2__doprnt@fval+2,i2__tdiv_to_l_@f1+2
 12908  00179E  C069  F004         	movff	i2__doprnt@tmpval,i2__tdiv_to_l_@f2
 12909  0017A2  C06A  F005         	movff	i2__doprnt@tmpval+1,i2__tdiv_to_l_@f2+1
 12910  0017A6  C06B  F006         	movff	i2__doprnt@tmpval+2,i2__tdiv_to_l_@f2+2
 12911  0017AA  EC3A  F020         	call	i2__tdiv_to_l_	;wreg free
 12912  0017AE  C001  F065         	movff	?i2__tdiv_to_l_,i2__doprnt@val
 12913  0017B2  C002  F066         	movff	?i2__tdiv_to_l_+1,i2__doprnt@val+1
 12914  0017B6  C003  F067         	movff	?i2__tdiv_to_l_+2,i2__doprnt@val+2
 12915  0017BA  C004  F068         	movff	?i2__tdiv_to_l_+3,i2__doprnt@val+3
 12916                           
 12917                           ;doprnt.c: 1129: fval = 0.0;
 12918  0017BE  0E00               	movlw	0
 12919  0017C0  0100               	movlb	0	; () banked
 12920  0017C2  6F6D               	movwf	i2__doprnt@fval& (0+255),b
 12921  0017C4  0E00               	movlw	0
 12922  0017C6  0100               	movlb	0	; () banked
 12923  0017C8  6F6E               	movwf	(i2__doprnt@fval+1)& (0+255),b
 12924  0017CA  0E00               	movlw	0
 12925  0017CC  0100               	movlb	0	; () banked
 12926  0017CE  6F6F               	movwf	(i2__doprnt@fval+2)& (0+255),b
 12927                           
 12928                           ;doprnt.c: 1130: } else {
 12929  0017D0  D033               	goto	i2l9250
 12930  0017D2                     i2l9246:
 12931                           
 12932                           ;doprnt.c: 1131: val = (unsigned long)fval;
 12933  0017D2  C06D  F037         	movff	i2__doprnt@fval,i2___fttol@f1
 12934  0017D6  C06E  F038         	movff	i2__doprnt@fval+1,i2___fttol@f1+1
 12935  0017DA  C06F  F039         	movff	i2__doprnt@fval+2,i2___fttol@f1+2
 12936  0017DE  ECF8  F022         	call	i2___fttol	;wreg free
 12937  0017E2  C037  F065         	movff	?i2___fttol,i2__doprnt@val
 12938  0017E6  C038  F066         	movff	?i2___fttol+1,i2__doprnt@val+1
 12939  0017EA  C039  F067         	movff	?i2___fttol+2,i2__doprnt@val+2
 12940  0017EE  C03A  F068         	movff	?i2___fttol+3,i2__doprnt@val+3
 12941                           
 12942                           ;doprnt.c: 1132: fval -= (double)val;
 12943  0017F2  C06D  F021         	movff	i2__doprnt@fval,i2___ftsub@f1
 12944  0017F6  C06E  F022         	movff	i2__doprnt@fval+1,i2___ftsub@f1+1
 12945  0017FA  C06F  F023         	movff	i2__doprnt@fval+2,i2___ftsub@f1+2
 12946  0017FE  C065  F009         	movff	i2__doprnt@val,i2___lltoft@c
 12947  001802  C066  F00A         	movff	i2__doprnt@val+1,i2___lltoft@c+1
 12948  001806  C067  F00B         	movff	i2__doprnt@val+2,i2___lltoft@c+2
 12949  00180A  C068  F00C         	movff	i2__doprnt@val+3,i2___lltoft@c+3
 12950  00180E  EC18  F028         	call	i2___lltoft	;wreg free
 12951  001812  C009  F024         	movff	?i2___lltoft,i2___ftsub@f2
 12952  001816  C00A  F025         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 12953  00181A  C00B  F026         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 12954  00181E  EC62  F029         	call	i2___ftsub	;wreg free
 12955  001822  C021  F06D         	movff	?i2___ftsub,i2__doprnt@fval
 12956  001826  C022  F06E         	movff	?i2___ftsub+1,i2__doprnt@fval+1
 12957  00182A  C023  F06F         	movff	?i2___ftsub+2,i2__doprnt@fval+2
 12958                           
 12959                           ;doprnt.c: 1133: exp = 0;
 12960  00182E  0E00               	movlw	0
 12961  001830  0100               	movlb	0	; () banked
 12962  001832  6F64               	movwf	(i2__doprnt@exp+1)& (0+255),b
 12963  001834  0E00               	movlw	0
 12964  001836  6F63               	movwf	i2__doprnt@exp& (0+255),b
 12965  001838                     i2l9250:
 12966                           
 12967                           ; BSR set to: 0
 12968                           ;doprnt.c: 1134: }
 12969                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 12970  001838  0E01               	movlw	1
 12971  00183A  0100               	movlb	0	; () banked
 12972  00183C  6F76               	movwf	i2__doprnt@c& (0+255),b
 12973  00183E                     i2l9252:
 12974                           
 12975                           ; BSR set to: 0
 12976  00183E  0E0A               	movlw	10
 12977  001840  0100               	movlb	0	; () banked
 12978  001842  1976               	xorwf	i2__doprnt@c& (0+255),w,b
 12979  001844  B4D8               	btfsc	status,2,c
 12980  001846  D01E               	goto	i2l9264
 12981                           
 12982                           ; BSR set to: 0
 12983                           ;doprnt.c: 1137: if(val < dpowers[c])
 12984                           
 12985                           ; BSR set to: 0
 12986                           
 12987                           ; BSR set to: 0
 12988  001848  0100               	movlb	0	; () banked
 12989  00184A  5176               	movf	i2__doprnt@c& (0+255),w,b
 12990  00184C  0D04               	mullw	4
 12991  00184E  0EEF               	movlw	low _dpowers
 12992  001850  24F3               	addwf	prodl,w,c
 12993  001852  6EF6               	movwf	tblptrl,c
 12994  001854  0E7E               	movlw	high _dpowers
 12995  001856  20F4               	addwfc	prodh,w,c
 12996  001858  6EF7               	movwf	tblptrh,c
 12997  00185A                     	if	0	;There are less than 3 active tblptr bytes
 12998  00185A                     	endif
 12999  00185A  0009               	tblrd		*+
 13000  00185C  50F5               	movf	tablat,w,c
 13001  00185E  0100               	movlb	0	; () banked
 13002  001860  5D65               	subwf	i2__doprnt@val& (0+255),w,b
 13003  001862  0009               	tblrd		*+
 13004  001864  50F5               	movf	tablat,w,c
 13005  001866  0100               	movlb	0	; () banked
 13006  001868  5966               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 13007  00186A  0009               	tblrd		*+
 13008  00186C  50F5               	movf	tablat,w,c
 13009  00186E  0100               	movlb	0	; () banked
 13010  001870  5967               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 13011  001872  0009               	tblrd		*+
 13012  001874  50F5               	movf	tablat,w,c
 13013  001876  0100               	movlb	0	; () banked
 13014  001878  5968               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 13015  00187A  A0D8               	btfss	status,0,c
 13016  00187C  D003               	goto	i2l9264
 13017                           
 13018                           ; BSR set to: 0
 13019                           
 13020                           ; BSR set to: 0
 13021                           
 13022                           ; BSR set to: 0
 13023                           ;doprnt.c: 1138: break;
 13024  00187E  0100               	movlb	0	; () banked
 13025  001880  2B76               	incf	i2__doprnt@c& (0+255),f,b
 13026  001882  D7DD               	goto	i2l9252
 13027  001884                     i2l9264:
 13028                           
 13029                           ; BSR set to: 0
 13030                           ;doprnt.c: 1142: width -= prec + c + exp;
 13031  001884  C076  F04C         	movff	i2__doprnt@c,??i2__doprnt
 13032  001888  6A4D               	clrf	(??i2__doprnt+1)& (0+255),c
 13033  00188A  BE4C               	btfsc	??i2__doprnt& (0+255),7,c
 13034  00188C  064D               	decf	(??i2__doprnt+1)& (0+255),f,c
 13035  00188E  0100               	movlb	0	; () banked
 13036  001890  5174               	movf	i2__doprnt@prec& (0+255),w,b
 13037  001892  264C               	addwf	??i2__doprnt,f,c
 13038  001894  0100               	movlb	0	; () banked
 13039  001896  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 13040  001898  224D               	addwfc	??i2__doprnt+1,f,c
 13041  00189A  0100               	movlb	0	; () banked
 13042  00189C  5163               	movf	i2__doprnt@exp& (0+255),w,b
 13043  00189E  264C               	addwf	??i2__doprnt,f,c
 13044  0018A0  0100               	movlb	0	; () banked
 13045  0018A2  5164               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 13046  0018A4  224D               	addwfc	??i2__doprnt+1,f,c
 13047  0018A6  504C               	movf	??i2__doprnt,w,c
 13048  0018A8  0100               	movlb	0	; () banked
 13049  0018AA  5F70               	subwf	i2__doprnt@width& (0+255),f,b
 13050  0018AC  504D               	movf	??i2__doprnt+1,w,c
 13051  0018AE  0100               	movlb	0	; () banked
 13052  0018B0  5B71               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 13053                           
 13054                           ;doprnt.c: 1143: if(
 13055                           ;doprnt.c: 1147: prec)
 13056  0018B2  0100               	movlb	0	; () banked
 13057  0018B4  5174               	movf	i2__doprnt@prec& (0+255),w,b
 13058  0018B6  0100               	movlb	0	; () banked
 13059  0018B8  1175               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 13060  0018BA  B4D8               	btfsc	status,2,c
 13061  0018BC  D004               	goto	i2l9268
 13062                           
 13063                           ; BSR set to: 0
 13064                           ;doprnt.c: 1148: width--;
 13065  0018BE  0100               	movlb	0	; () banked
 13066  0018C0  0770               	decf	i2__doprnt@width& (0+255),f,b
 13067  0018C2  A0D8               	btfss	status,0,c
 13068  0018C4  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 13069  0018C6                     i2l9268:
 13070                           
 13071                           ; BSR set to: 0
 13072                           ;doprnt.c: 1149: if(flag & 0x03)
 13073  0018C6  0E03               	movlw	3
 13074  0018C8  0100               	movlb	0	; () banked
 13075  0018CA  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 13076  0018CC  6E4C               	movwf	??i2__doprnt& (0+255),c
 13077  0018CE  0E00               	movlw	0
 13078  0018D0  0100               	movlb	0	; () banked
 13079  0018D2  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 13080  0018D4  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 13081  0018D6  504C               	movf	??i2__doprnt,w,c
 13082  0018D8  104D               	iorwf	??i2__doprnt+1,w,c
 13083  0018DA  B4D8               	btfsc	status,2,c
 13084  0018DC  D004               	goto	i2l9272
 13085                           
 13086                           ; BSR set to: 0
 13087                           ;doprnt.c: 1150: width--;
 13088  0018DE  0100               	movlb	0	; () banked
 13089  0018E0  0770               	decf	i2__doprnt@width& (0+255),f,b
 13090  0018E2  A0D8               	btfss	status,0,c
 13091  0018E4  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 13092  0018E6                     i2l9272:
 13093                           
 13094                           ; BSR set to: 0
 13095                           ;doprnt.c: 1153: if(flag & 0x04) {
 13096  0018E6  0100               	movlb	0	; () banked
 13097  0018E8  A572               	btfss	i2__doprnt@flag& (0+255),2,b
 13098  0018EA  D0B6               	goto	i2l9306
 13099                           
 13100                           ; BSR set to: 0
 13101                           ;doprnt.c: 1157: if(flag & 0x03)
 13102  0018EC  0E03               	movlw	3
 13103  0018EE  0100               	movlb	0	; () banked
 13104  0018F0  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 13105  0018F2  6E4C               	movwf	??i2__doprnt& (0+255),c
 13106  0018F4  0E00               	movlw	0
 13107  0018F6  0100               	movlb	0	; () banked
 13108  0018F8  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 13109  0018FA  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 13110  0018FC  504C               	movf	??i2__doprnt,w,c
 13111  0018FE  104D               	iorwf	??i2__doprnt+1,w,c
 13112  001900  B4D8               	btfsc	status,2,c
 13113  001902  D069               	goto	i2l9294
 13114                           
 13115                           ; BSR set to: 0
 13116                           ;doprnt.c: 1159: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 13117  001904  EE20 F002          	lfsr	2,2
 13118  001908  5046               	movf	i2__doprnt@pb,w,c
 13119  00190A  26D9               	addwf	fsr2l,f,c
 13120  00190C  5047               	movf	i2__doprnt@pb+1,w,c
 13121  00190E  22DA               	addwfc	fsr2h,f,c
 13122  001910  50DE               	movf	postinc2,w,c
 13123  001912  10DE               	iorwf	postinc2,w,c
 13124  001914  B4D8               	btfsc	status,2,c
 13125  001916  D013               	goto	i2l9280
 13126                           
 13127                           ; BSR set to: 0
 13128  001918  EE20 F002          	lfsr	2,2
 13129  00191C  5046               	movf	i2__doprnt@pb,w,c
 13130  00191E  26D9               	addwf	fsr2l,f,c
 13131  001920  5047               	movf	i2__doprnt@pb+1,w,c
 13132  001922  22DA               	addwfc	fsr2h,f,c
 13133  001924  D801               	call	i2u1537_48
 13134  001926  D057               	goto	i2l9294
 13135  001928                     i2u1537_48:
 13136  001928  0005               	push	
 13137  00192A  6EFA               	movwf	pclath,c
 13138  00192C  50DE               	movf	postinc2,w,c
 13139  00192E  6EFD               	movwf	tosl,c
 13140  001930  50DE               	movf	postinc2,w,c
 13141  001932  6EFE               	movwf	tosh,c
 13142  001934  50F8               	movf	tblptru,w,c
 13143  001936  6EFF               	movwf	tosu,c
 13144  001938  50FA               	movf	pclath,w,c
 13145  00193A  0E2D               	movlw	45
 13146  00193C  0012               	return		;indir
 13147  00193E                     i2l9280:
 13148  00193E  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13149  001942  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13150  001946  CFDE F04C          	movff	postinc2,??i2__doprnt
 13151  00194A  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13152  00194E  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13153  001952  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13154  001956  0E2D               	movlw	45
 13155  001958  6EDF               	movwf	indf2,c
 13156  00195A  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13157  00195E  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13158  001962  2ADE               	incf	postinc2,f,c
 13159  001964  0E00               	movlw	0
 13160  001966  22DD               	addwfc	postdec2,f,c
 13161                           
 13162                           ;doprnt.c: 1168: while(width > 0) {
 13163  001968  D036               	goto	i2l9294
 13164  00196A                     i2l9284:
 13165                           
 13166                           ;doprnt.c: 1169: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 13167  00196A  EE20 F002          	lfsr	2,2
 13168  00196E  5046               	movf	i2__doprnt@pb,w,c
 13169  001970  26D9               	addwf	fsr2l,f,c
 13170  001972  5047               	movf	i2__doprnt@pb+1,w,c
 13171  001974  22DA               	addwfc	fsr2h,f,c
 13172  001976  50DE               	movf	postinc2,w,c
 13173  001978  10DE               	iorwf	postinc2,w,c
 13174  00197A  B4D8               	btfsc	status,2,c
 13175  00197C  D013               	goto	i2l9288
 13176  00197E  EE20 F002          	lfsr	2,2
 13177  001982  5046               	movf	i2__doprnt@pb,w,c
 13178  001984  26D9               	addwf	fsr2l,f,c
 13179  001986  5047               	movf	i2__doprnt@pb+1,w,c
 13180  001988  22DA               	addwfc	fsr2h,f,c
 13181  00198A  D801               	call	i2u1539_48
 13182  00198C  D020               	goto	i2l9292
 13183  00198E                     i2u1539_48:
 13184  00198E  0005               	push	
 13185  001990  6EFA               	movwf	pclath,c
 13186  001992  50DE               	movf	postinc2,w,c
 13187  001994  6EFD               	movwf	tosl,c
 13188  001996  50DE               	movf	postinc2,w,c
 13189  001998  6EFE               	movwf	tosh,c
 13190  00199A  50F8               	movf	tblptru,w,c
 13191  00199C  6EFF               	movwf	tosu,c
 13192  00199E  50FA               	movf	pclath,w,c
 13193  0019A0  0E30               	movlw	48
 13194  0019A2  0012               	return		;indir
 13195  0019A4                     i2l9288:
 13196  0019A4  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13197  0019A8  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13198  0019AC  CFDE F04C          	movff	postinc2,??i2__doprnt
 13199  0019B0  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13200  0019B4  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13201  0019B8  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13202  0019BC  0E30               	movlw	48
 13203  0019BE  6EDF               	movwf	indf2,c
 13204  0019C0  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13205  0019C4  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13206  0019C8  2ADE               	incf	postinc2,f,c
 13207  0019CA  0E00               	movlw	0
 13208  0019CC  22DD               	addwfc	postdec2,f,c
 13209  0019CE                     i2l9292:
 13210                           
 13211                           ;doprnt.c: 1170: width--;
 13212  0019CE  0100               	movlb	0	; () banked
 13213  0019D0  0770               	decf	i2__doprnt@width& (0+255),f,b
 13214  0019D2  A0D8               	btfss	status,0,c
 13215  0019D4  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 13216  0019D6                     i2l9294:
 13217  0019D6  0100               	movlb	0	; () banked
 13218  0019D8  BF71               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 13219  0019DA  D0F8               	goto	i2l9328
 13220  0019DC  0100               	movlb	0	; () banked
 13221  0019DE  5171               	movf	(i2__doprnt@width+1)& (0+255),w,b
 13222  0019E0  E1C4               	bnz	i2l9284
 13223  0019E2  0100               	movlb	0	; () banked
 13224  0019E4  0570               	decf	i2__doprnt@width& (0+255),w,b
 13225  0019E6  A0D8               	btfss	status,0,c
 13226  0019E8  D0F1               	goto	i2l9328
 13227  0019EA  D7BF               	goto	i2l9284
 13228  0019EC                     i2l9296:
 13229                           
 13230                           ; BSR set to: 0
 13231                           ;doprnt.c: 1181: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 13232  0019EC  EE20 F002          	lfsr	2,2
 13233  0019F0  5046               	movf	i2__doprnt@pb,w,c
 13234  0019F2  26D9               	addwf	fsr2l,f,c
 13235  0019F4  5047               	movf	i2__doprnt@pb+1,w,c
 13236  0019F6  22DA               	addwfc	fsr2h,f,c
 13237  0019F8  50DE               	movf	postinc2,w,c
 13238  0019FA  10DE               	iorwf	postinc2,w,c
 13239  0019FC  B4D8               	btfsc	status,2,c
 13240  0019FE  D013               	goto	i2l9300
 13241                           
 13242                           ; BSR set to: 0
 13243  001A00  EE20 F002          	lfsr	2,2
 13244  001A04  5046               	movf	i2__doprnt@pb,w,c
 13245  001A06  26D9               	addwf	fsr2l,f,c
 13246  001A08  5047               	movf	i2__doprnt@pb+1,w,c
 13247  001A0A  22DA               	addwfc	fsr2h,f,c
 13248  001A0C  D801               	call	i2u1542_48
 13249  001A0E  D020               	goto	i2l9304
 13250  001A10                     i2u1542_48:
 13251  001A10  0005               	push	
 13252  001A12  6EFA               	movwf	pclath,c
 13253  001A14  50DE               	movf	postinc2,w,c
 13254  001A16  6EFD               	movwf	tosl,c
 13255  001A18  50DE               	movf	postinc2,w,c
 13256  001A1A  6EFE               	movwf	tosh,c
 13257  001A1C  50F8               	movf	tblptru,w,c
 13258  001A1E  6EFF               	movwf	tosu,c
 13259  001A20  50FA               	movf	pclath,w,c
 13260  001A22  0E20               	movlw	32
 13261  001A24  0012               	return		;indir
 13262  001A26                     i2l9300:
 13263  001A26  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13264  001A2A  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13265  001A2E  CFDE F04C          	movff	postinc2,??i2__doprnt
 13266  001A32  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13267  001A36  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13268  001A3A  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13269  001A3E  0E20               	movlw	32
 13270  001A40  6EDF               	movwf	indf2,c
 13271  001A42  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13272  001A46  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13273  001A4A  2ADE               	incf	postinc2,f,c
 13274  001A4C  0E00               	movlw	0
 13275  001A4E  22DD               	addwfc	postdec2,f,c
 13276  001A50                     i2l9304:
 13277                           
 13278                           ;doprnt.c: 1182: width--;
 13279  001A50  0100               	movlb	0	; () banked
 13280  001A52  0770               	decf	i2__doprnt@width& (0+255),f,b
 13281  001A54  A0D8               	btfss	status,0,c
 13282  001A56  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 13283  001A58                     i2l9306:
 13284                           
 13285                           ; BSR set to: 0
 13286  001A58  0100               	movlb	0	; () banked
 13287  001A5A  BF71               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 13288  001A5C  D007               	goto	i2l9308
 13289  001A5E  0100               	movlb	0	; () banked
 13290  001A60  5171               	movf	(i2__doprnt@width+1)& (0+255),w,b
 13291  001A62  E1C4               	bnz	i2l9296
 13292  001A64  0100               	movlb	0	; () banked
 13293  001A66  0570               	decf	i2__doprnt@width& (0+255),w,b
 13294  001A68  B0D8               	btfsc	status,0,c
 13295  001A6A  D7C0               	goto	i2l9296
 13296  001A6C                     i2l9308:
 13297                           
 13298                           ; BSR set to: 0
 13299                           ;doprnt.c: 1183: }
 13300                           ;doprnt.c: 1188: if(flag & 0x03)
 13301  001A6C  0E03               	movlw	3
 13302  001A6E  0100               	movlb	0	; () banked
 13303  001A70  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 13304  001A72  6E4C               	movwf	??i2__doprnt& (0+255),c
 13305  001A74  0E00               	movlw	0
 13306  001A76  0100               	movlb	0	; () banked
 13307  001A78  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 13308  001A7A  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 13309  001A7C  504C               	movf	??i2__doprnt,w,c
 13310  001A7E  104D               	iorwf	??i2__doprnt+1,w,c
 13311  001A80  B4D8               	btfsc	status,2,c
 13312  001A82  D0A4               	goto	i2l9328
 13313                           
 13314                           ; BSR set to: 0
 13315                           ;doprnt.c: 1190: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 13316  001A84  EE20 F002          	lfsr	2,2
 13317  001A88  5046               	movf	i2__doprnt@pb,w,c
 13318  001A8A  26D9               	addwf	fsr2l,f,c
 13319  001A8C  5047               	movf	i2__doprnt@pb+1,w,c
 13320  001A8E  22DA               	addwfc	fsr2h,f,c
 13321  001A90  50DE               	movf	postinc2,w,c
 13322  001A92  10DE               	iorwf	postinc2,w,c
 13323  001A94  B4D8               	btfsc	status,2,c
 13324  001A96  D013               	goto	i2l9314
 13325                           
 13326                           ; BSR set to: 0
 13327  001A98  EE20 F002          	lfsr	2,2
 13328  001A9C  5046               	movf	i2__doprnt@pb,w,c
 13329  001A9E  26D9               	addwf	fsr2l,f,c
 13330  001AA0  5047               	movf	i2__doprnt@pb+1,w,c
 13331  001AA2  22DA               	addwfc	fsr2h,f,c
 13332  001AA4  D801               	call	i2u1546_48
 13333  001AA6  D092               	goto	i2l9328
 13334  001AA8                     i2u1546_48:
 13335  001AA8  0005               	push	
 13336  001AAA  6EFA               	movwf	pclath,c
 13337  001AAC  50DE               	movf	postinc2,w,c
 13338  001AAE  6EFD               	movwf	tosl,c
 13339  001AB0  50DE               	movf	postinc2,w,c
 13340  001AB2  6EFE               	movwf	tosh,c
 13341  001AB4  50F8               	movf	tblptru,w,c
 13342  001AB6  6EFF               	movwf	tosu,c
 13343  001AB8  50FA               	movf	pclath,w,c
 13344  001ABA  0E2D               	movlw	45
 13345  001ABC  0012               	return		;indir
 13346  001ABE                     i2l9314:
 13347  001ABE  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13348  001AC2  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13349  001AC6  CFDE F04C          	movff	postinc2,??i2__doprnt
 13350  001ACA  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13351  001ACE  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13352  001AD2  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13353  001AD6  0E2D               	movlw	45
 13354  001AD8  D077               	goto	L7
 13355  001ADA                     i2l9316:
 13356  001ADA  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13357  001ADE  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13358  001AE2  2ADE               	incf	postinc2,f,c
 13359  001AE4  0E00               	movlw	0
 13360  001AE6  22DD               	addwfc	postdec2,f,c
 13361                           
 13362                           ;doprnt.c: 1195: }
 13363                           ;doprnt.c: 1196: while(c--) {
 13364  001AE8  D071               	goto	i2l9328
 13365  001AEA                     i2l9318:
 13366                           
 13367                           ;doprnt.c: 1200: {
 13368                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 13369  001AEA  C065  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 13370  001AEE  C066  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 13371  001AF2  C067  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 13372  001AF6  C068  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 13373  001AFA  0100               	movlb	0	; () banked
 13374  001AFC  5176               	movf	i2__doprnt@c& (0+255),w,b
 13375  001AFE  0D04               	mullw	4
 13376  001B00  0EEF               	movlw	low _dpowers
 13377  001B02  24F3               	addwf	prodl,w,c
 13378  001B04  6EF6               	movwf	tblptrl,c
 13379  001B06  0E7E               	movlw	high _dpowers
 13380  001B08  20F4               	addwfc	prodh,w,c
 13381  001B0A  6EF7               	movwf	tblptrh,c
 13382  001B0C                     	if	0	;There are less than 3 active tblptr bytes
 13383  001B0C                     	endif
 13384  001B0C  0009               	tblrd		*+
 13385  001B0E  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 13386  001B12  0009               	tblrd		*+
 13387  001B14  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 13388  001B18  0009               	tblrd		*+
 13389  001B1A  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 13390  001B1E  000A               	tblrd		*-
 13391  001B20  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 13392  001B24  EC85  F026         	call	i2___lldiv
 13393  001B28  C001  F069         	movff	?i2___lldiv,i2__doprnt@tmpval
 13394  001B2C  C002  F06A         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 13395  001B30  C003  F06B         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 13396  001B34  C004  F06C         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 13397                           
 13398                           ;doprnt.c: 1202: tmpval.vd %= 10;
 13399  001B38  C069  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 13400  001B3C  C06A  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 13401  001B40  C06B  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 13402  001B44  C06C  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 13403  001B48  0E0A               	movlw	10
 13404  001B4A  6E12               	movwf	i2___llmod@divisor,c
 13405  001B4C  0E00               	movlw	0
 13406  001B4E  6E13               	movwf	i2___llmod@divisor+1,c
 13407  001B50  0E00               	movlw	0
 13408  001B52  6E14               	movwf	i2___llmod@divisor+2,c
 13409  001B54  0E00               	movlw	0
 13410  001B56  6E15               	movwf	i2___llmod@divisor+3,c
 13411  001B58  ECB3  F027         	call	i2___llmod	;wreg free
 13412  001B5C  C00E  F069         	movff	?i2___llmod,i2__doprnt@tmpval
 13413  001B60  C00F  F06A         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 13414  001B64  C010  F06B         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 13415  001B68  C011  F06C         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 13416                           
 13417                           ;doprnt.c: 1203: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 13418  001B6C  EE20 F002          	lfsr	2,2
 13419  001B70  5046               	movf	i2__doprnt@pb,w,c
 13420  001B72  26D9               	addwf	fsr2l,f,c
 13421  001B74  5047               	movf	i2__doprnt@pb+1,w,c
 13422  001B76  22DA               	addwfc	fsr2h,f,c
 13423  001B78  50DE               	movf	postinc2,w,c
 13424  001B7A  10DE               	iorwf	postinc2,w,c
 13425  001B7C  B4D8               	btfsc	status,2,c
 13426  001B7E  D015               	goto	i2l9326
 13427  001B80  EE20 F002          	lfsr	2,2
 13428  001B84  5046               	movf	i2__doprnt@pb,w,c
 13429  001B86  26D9               	addwf	fsr2l,f,c
 13430  001B88  5047               	movf	i2__doprnt@pb+1,w,c
 13431  001B8A  22DA               	addwfc	fsr2h,f,c
 13432  001B8C  D801               	call	i2u1548_48
 13433  001B8E  D01E               	goto	i2l9328
 13434  001B90                     i2u1548_48:
 13435  001B90  0005               	push	
 13436  001B92  6EFA               	movwf	pclath,c
 13437  001B94  50DE               	movf	postinc2,w,c
 13438  001B96  6EFD               	movwf	tosl,c
 13439  001B98  50DE               	movf	postinc2,w,c
 13440  001B9A  6EFE               	movwf	tosh,c
 13441  001B9C  50F8               	movf	tblptru,w,c
 13442  001B9E  6EFF               	movwf	tosu,c
 13443  001BA0  50FA               	movf	pclath,w,c
 13444  001BA2  0100               	movlb	0	; () banked
 13445  001BA4  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 13446  001BA6  0F30               	addlw	48
 13447  001BA8  0012               	return		;indir
 13448  001BAA                     i2l9326:
 13449  001BAA  0100               	movlb	0	; () banked
 13450  001BAC  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 13451  001BAE  0F30               	addlw	48
 13452  001BB0  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13453  001BB4  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13454  001BB8  CFDE F04C          	movff	postinc2,??i2__doprnt
 13455  001BBC  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13456  001BC0  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13457  001BC4  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13458  001BC8                     L7:
 13459  001BC8  6EDF               	movwf	indf2,c
 13460  001BCA  D787               	goto	i2l9316
 13461  001BCC                     i2l9328:
 13462  001BCC  0100               	movlb	0	; () banked
 13463  001BCE  0776               	decf	i2__doprnt@c& (0+255),f,b
 13464  001BD0  0100               	movlb	0	; () banked
 13465  001BD2  2976               	incf	i2__doprnt@c& (0+255),w,b
 13466  001BD4  B4D8               	btfsc	status,2,c
 13467  001BD6  D037               	goto	i2l9340
 13468  001BD8  D788               	goto	i2l9318
 13469  001BDA                     i2l9330:
 13470                           
 13471                           ; BSR set to: 0
 13472                           ;doprnt.c: 1208: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 13473  001BDA  EE20 F002          	lfsr	2,2
 13474  001BDE  5046               	movf	i2__doprnt@pb,w,c
 13475  001BE0  26D9               	addwf	fsr2l,f,c
 13476  001BE2  5047               	movf	i2__doprnt@pb+1,w,c
 13477  001BE4  22DA               	addwfc	fsr2h,f,c
 13478  001BE6  50DE               	movf	postinc2,w,c
 13479  001BE8  10DE               	iorwf	postinc2,w,c
 13480  001BEA  B4D8               	btfsc	status,2,c
 13481  001BEC  D013               	goto	i2l9334
 13482                           
 13483                           ; BSR set to: 0
 13484  001BEE  EE20 F002          	lfsr	2,2
 13485  001BF2  5046               	movf	i2__doprnt@pb,w,c
 13486  001BF4  26D9               	addwf	fsr2l,f,c
 13487  001BF6  5047               	movf	i2__doprnt@pb+1,w,c
 13488  001BF8  22DA               	addwfc	fsr2h,f,c
 13489  001BFA  D801               	call	i2u1551_48
 13490  001BFC  D020               	goto	i2l9338
 13491  001BFE                     i2u1551_48:
 13492  001BFE  0005               	push	
 13493  001C00  6EFA               	movwf	pclath,c
 13494  001C02  50DE               	movf	postinc2,w,c
 13495  001C04  6EFD               	movwf	tosl,c
 13496  001C06  50DE               	movf	postinc2,w,c
 13497  001C08  6EFE               	movwf	tosh,c
 13498  001C0A  50F8               	movf	tblptru,w,c
 13499  001C0C  6EFF               	movwf	tosu,c
 13500  001C0E  50FA               	movf	pclath,w,c
 13501  001C10  0E30               	movlw	48
 13502  001C12  0012               	return		;indir
 13503  001C14                     i2l9334:
 13504  001C14  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13505  001C18  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13506  001C1C  CFDE F04C          	movff	postinc2,??i2__doprnt
 13507  001C20  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13508  001C24  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13509  001C28  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13510  001C2C  0E30               	movlw	48
 13511  001C2E  6EDF               	movwf	indf2,c
 13512  001C30  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13513  001C34  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13514  001C38  2ADE               	incf	postinc2,f,c
 13515  001C3A  0E00               	movlw	0
 13516  001C3C  22DD               	addwfc	postdec2,f,c
 13517  001C3E                     i2l9338:
 13518                           
 13519                           ;doprnt.c: 1209: exp--;
 13520  001C3E  0100               	movlb	0	; () banked
 13521  001C40  0763               	decf	i2__doprnt@exp& (0+255),f,b
 13522  001C42  A0D8               	btfss	status,0,c
 13523  001C44  0764               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 13524  001C46                     i2l9340:
 13525                           
 13526                           ; BSR set to: 0
 13527  001C46  0100               	movlb	0	; () banked
 13528  001C48  BF64               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 13529  001C4A  D007               	goto	i2l9342
 13530  001C4C  0100               	movlb	0	; () banked
 13531  001C4E  5164               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 13532  001C50  E1C4               	bnz	i2l9330
 13533  001C52  0100               	movlb	0	; () banked
 13534  001C54  0563               	decf	i2__doprnt@exp& (0+255),w,b
 13535  001C56  B0D8               	btfsc	status,0,c
 13536  001C58  D7C0               	goto	i2l9330
 13537  001C5A                     i2l9342:
 13538                           
 13539                           ; BSR set to: 0
 13540                           ;doprnt.c: 1210: }
 13541                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 13542  001C5A  0100               	movlb	0	; () banked
 13543  001C5C  BF75               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 13544  001C5E  D00C               	goto	i2l468
 13545  001C60  0100               	movlb	0	; () banked
 13546  001C62  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 13547  001C64  E105               	bnz	i2u1553_40
 13548  001C66  0E09               	movlw	9
 13549  001C68  0100               	movlb	0	; () banked
 13550  001C6A  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 13551  001C6C  A0D8               	btfss	status,0,c
 13552  001C6E  D004               	goto	i2l468
 13553  001C70                     i2u1553_40:
 13554                           
 13555                           ; BSR set to: 0
 13556                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 13557  001C70  0E08               	movlw	8
 13558  001C72  0100               	movlb	0	; () banked
 13559  001C74  6F76               	movwf	i2__doprnt@c& (0+255),b
 13560  001C76  D002               	goto	i2l9346
 13561  001C78                     i2l468:
 13562                           
 13563                           ; BSR set to: 0
 13564                           ;doprnt.c: 1213: else
 13565                           ;doprnt.c: 1214: c = prec;
 13566  001C78  C074  F076         	movff	i2__doprnt@prec,i2__doprnt@c
 13567  001C7C                     i2l9346:
 13568                           
 13569                           ; BSR set to: 0
 13570                           ;doprnt.c: 1215: prec -= c;
 13571  001C7C  0100               	movlb	0	; () banked
 13572  001C7E  5176               	movf	i2__doprnt@c& (0+255),w,b
 13573  001C80  0100               	movlb	0	; () banked
 13574  001C82  5F74               	subwf	i2__doprnt@prec& (0+255),f,b
 13575  001C84  0E00               	movlw	0
 13576  001C86  0100               	movlb	0	; () banked
 13577  001C88  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 13578  001C8A  0EFF               	movlw	255
 13579  001C8C  0100               	movlb	0	; () banked
 13580  001C8E  5B75               	subwfb	(i2__doprnt@prec+1)& (0+255),f,b
 13581                           
 13582                           ; BSR set to: 0
 13583                           ;doprnt.c: 1219: if(c)
 13584  001C90  0100               	movlb	0	; () banked
 13585  001C92  5176               	movf	i2__doprnt@c& (0+255),w,b
 13586  001C94  0100               	movlb	0	; () banked
 13587  001C96  B4D8               	btfsc	status,2,c
 13588  001C98  D032               	goto	i2l9358
 13589                           
 13590                           ; BSR set to: 0
 13591                           ;doprnt.c: 1221: if(pb->func) (pb->func('.')); else ((*pb->ptr++ = '.'));
 13592  001C9A  EE20 F002          	lfsr	2,2
 13593  001C9E  5046               	movf	i2__doprnt@pb,w,c
 13594  001CA0  26D9               	addwf	fsr2l,f,c
 13595  001CA2  5047               	movf	i2__doprnt@pb+1,w,c
 13596  001CA4  22DA               	addwfc	fsr2h,f,c
 13597  001CA6  50DE               	movf	postinc2,w,c
 13598  001CA8  10DE               	iorwf	postinc2,w,c
 13599  001CAA  B4D8               	btfsc	status,2,c
 13600  001CAC  D013               	goto	i2l9354
 13601                           
 13602                           ; BSR set to: 0
 13603  001CAE  EE20 F002          	lfsr	2,2
 13604  001CB2  5046               	movf	i2__doprnt@pb,w,c
 13605  001CB4  26D9               	addwf	fsr2l,f,c
 13606  001CB6  5047               	movf	i2__doprnt@pb+1,w,c
 13607  001CB8  22DA               	addwfc	fsr2h,f,c
 13608  001CBA  D801               	call	i2u1556_48
 13609  001CBC  D020               	goto	i2l9358
 13610  001CBE                     i2u1556_48:
 13611  001CBE  0005               	push	
 13612  001CC0  6EFA               	movwf	pclath,c
 13613  001CC2  50DE               	movf	postinc2,w,c
 13614  001CC4  6EFD               	movwf	tosl,c
 13615  001CC6  50DE               	movf	postinc2,w,c
 13616  001CC8  6EFE               	movwf	tosh,c
 13617  001CCA  50F8               	movf	tblptru,w,c
 13618  001CCC  6EFF               	movwf	tosu,c
 13619  001CCE  50FA               	movf	pclath,w,c
 13620  001CD0  0E2E               	movlw	46
 13621  001CD2  0012               	return		;indir
 13622  001CD4                     i2l9354:
 13623  001CD4  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13624  001CD8  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13625  001CDC  CFDE F04C          	movff	postinc2,??i2__doprnt
 13626  001CE0  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13627  001CE4  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13628  001CE8  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13629  001CEC  0E2E               	movlw	46
 13630  001CEE  6EDF               	movwf	indf2,c
 13631  001CF0  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13632  001CF4  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13633  001CF8  2ADE               	incf	postinc2,f,c
 13634  001CFA  0E00               	movlw	0
 13635  001CFC  22DD               	addwfc	postdec2,f,c
 13636  001CFE                     i2l9358:
 13637                           
 13638                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 13639  001CFE  0100               	movlb	0	; () banked
 13640  001D00  5176               	movf	i2__doprnt@c& (0+255),w,b
 13641  001D02  EC9B  F014         	call	i2_scale
 13642  001D06  C030  F060         	movff	?i2_scale,i2__doprnt$1833
 13643  001D0A  C031  F061         	movff	?i2_scale+1,i2__doprnt$1833+1
 13644  001D0E  C032  F062         	movff	?i2_scale+2,i2__doprnt$1833+2
 13645                           
 13646                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 13647  001D12  C06D  F024         	movff	i2__doprnt@fval,i2___ftmul@f2
 13648  001D16  C06E  F025         	movff	i2__doprnt@fval+1,i2___ftmul@f2+1
 13649  001D1A  C06F  F026         	movff	i2__doprnt@fval+2,i2___ftmul@f2+2
 13650  001D1E  C060  F021         	movff	i2__doprnt$1833,i2___ftmul@f1
 13651  001D22  C061  F022         	movff	i2__doprnt$1833+1,i2___ftmul@f1+1
 13652  001D26  C062  F023         	movff	i2__doprnt$1833+2,i2___ftmul@f1+2
 13653  001D2A  EC7E  F022         	call	i2___ftmul	;wreg free
 13654  001D2E  C021  F037         	movff	?i2___ftmul,i2___fttol@f1
 13655  001D32  C022  F038         	movff	?i2___ftmul+1,i2___fttol@f1+1
 13656  001D36  C023  F039         	movff	?i2___ftmul+2,i2___fttol@f1+2
 13657  001D3A  ECF8  F022         	call	i2___fttol	;wreg free
 13658  001D3E  C037  F065         	movff	?i2___fttol,i2__doprnt@val
 13659  001D42  C038  F066         	movff	?i2___fttol+1,i2__doprnt@val+1
 13660  001D46  C039  F067         	movff	?i2___fttol+2,i2__doprnt@val+2
 13661  001D4A  C03A  F068         	movff	?i2___fttol+3,i2__doprnt@val+3
 13662                           
 13663                           ;doprnt.c: 1228: while(c--) {
 13664  001D4E  D09E               	goto	i2l9374
 13665  001D50                     i2l9362:
 13666                           
 13667                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 13668  001D50  C065  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 13669  001D54  C066  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 13670  001D58  C067  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 13671  001D5C  C068  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 13672  001D60  0100               	movlb	0	; () banked
 13673  001D62  5176               	movf	i2__doprnt@c& (0+255),w,b
 13674  001D64  0D04               	mullw	4
 13675  001D66  0EEF               	movlw	low _dpowers
 13676  001D68  24F3               	addwf	prodl,w,c
 13677  001D6A  6EF6               	movwf	tblptrl,c
 13678  001D6C  0E7E               	movlw	high _dpowers
 13679  001D6E  20F4               	addwfc	prodh,w,c
 13680  001D70  6EF7               	movwf	tblptrh,c
 13681  001D72                     	if	0	;There are less than 3 active tblptr bytes
 13682  001D72                     	endif
 13683  001D72  0009               	tblrd		*+
 13684  001D74  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 13685  001D78  0009               	tblrd		*+
 13686  001D7A  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 13687  001D7E  0009               	tblrd		*+
 13688  001D80  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 13689  001D84  000A               	tblrd		*-
 13690  001D86  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 13691  001D8A  EC85  F026         	call	i2___lldiv	;wreg free
 13692  001D8E  C001  F069         	movff	?i2___lldiv,i2__doprnt@tmpval
 13693  001D92  C002  F06A         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 13694  001D96  C003  F06B         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 13695  001D9A  C004  F06C         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 13696                           
 13697                           ;doprnt.c: 1230: tmpval.vd %= 10;
 13698  001D9E  C069  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 13699  001DA2  C06A  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 13700  001DA6  C06B  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 13701  001DAA  C06C  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 13702  001DAE  0E0A               	movlw	10
 13703  001DB0  6E12               	movwf	i2___llmod@divisor,c
 13704  001DB2  0E00               	movlw	0
 13705  001DB4  6E13               	movwf	i2___llmod@divisor+1,c
 13706  001DB6  0E00               	movlw	0
 13707  001DB8  6E14               	movwf	i2___llmod@divisor+2,c
 13708  001DBA  0E00               	movlw	0
 13709  001DBC  6E15               	movwf	i2___llmod@divisor+3,c
 13710  001DBE  ECB3  F027         	call	i2___llmod	;wreg free
 13711  001DC2  C00E  F069         	movff	?i2___llmod,i2__doprnt@tmpval
 13712  001DC6  C00F  F06A         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 13713  001DCA  C010  F06B         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 13714  001DCE  C011  F06C         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 13715                           
 13716                           ;doprnt.c: 1231: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 13717  001DD2  EE20 F002          	lfsr	2,2
 13718  001DD6  5046               	movf	i2__doprnt@pb,w,c
 13719  001DD8  26D9               	addwf	fsr2l,f,c
 13720  001DDA  5047               	movf	i2__doprnt@pb+1,w,c
 13721  001DDC  22DA               	addwfc	fsr2h,f,c
 13722  001DDE  50DE               	movf	postinc2,w,c
 13723  001DE0  10DE               	iorwf	postinc2,w,c
 13724  001DE2  B4D8               	btfsc	status,2,c
 13725  001DE4  D015               	goto	i2l9370
 13726  001DE6  EE20 F002          	lfsr	2,2
 13727  001DEA  5046               	movf	i2__doprnt@pb,w,c
 13728  001DEC  26D9               	addwf	fsr2l,f,c
 13729  001DEE  5047               	movf	i2__doprnt@pb+1,w,c
 13730  001DF0  22DA               	addwfc	fsr2h,f,c
 13731  001DF2  D801               	call	i2u1558_48
 13732  001DF4  D024               	goto	i2l9372
 13733  001DF6                     i2u1558_48:
 13734  001DF6  0005               	push	
 13735  001DF8  6EFA               	movwf	pclath,c
 13736  001DFA  50DE               	movf	postinc2,w,c
 13737  001DFC  6EFD               	movwf	tosl,c
 13738  001DFE  50DE               	movf	postinc2,w,c
 13739  001E00  6EFE               	movwf	tosh,c
 13740  001E02  50F8               	movf	tblptru,w,c
 13741  001E04  6EFF               	movwf	tosu,c
 13742  001E06  50FA               	movf	pclath,w,c
 13743  001E08  0100               	movlb	0	; () banked
 13744  001E0A  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 13745  001E0C  0F30               	addlw	48
 13746  001E0E  0012               	return		;indir
 13747  001E10                     i2l9370:
 13748  001E10  0100               	movlb	0	; () banked
 13749  001E12  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 13750  001E14  0F30               	addlw	48
 13751  001E16  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13752  001E1A  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13753  001E1E  CFDE F04C          	movff	postinc2,??i2__doprnt
 13754  001E22  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13755  001E26  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13756  001E2A  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13757  001E2E  6EDF               	movwf	indf2,c
 13758  001E30  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13759  001E34  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13760  001E38  2ADE               	incf	postinc2,f,c
 13761  001E3A  0E00               	movlw	0
 13762  001E3C  22DD               	addwfc	postdec2,f,c
 13763  001E3E                     i2l9372:
 13764                           
 13765                           ;doprnt.c: 1232: val %= dpowers[c];
 13766  001E3E  C065  F00E         	movff	i2__doprnt@val,i2___llmod@dividend
 13767  001E42  C066  F00F         	movff	i2__doprnt@val+1,i2___llmod@dividend+1
 13768  001E46  C067  F010         	movff	i2__doprnt@val+2,i2___llmod@dividend+2
 13769  001E4A  C068  F011         	movff	i2__doprnt@val+3,i2___llmod@dividend+3
 13770  001E4E  0100               	movlb	0	; () banked
 13771  001E50  5176               	movf	i2__doprnt@c& (0+255),w,b
 13772  001E52  0D04               	mullw	4
 13773  001E54  0EEF               	movlw	low _dpowers
 13774  001E56  24F3               	addwf	prodl,w,c
 13775  001E58  6EF6               	movwf	tblptrl,c
 13776  001E5A  0E7E               	movlw	high _dpowers
 13777  001E5C  20F4               	addwfc	prodh,w,c
 13778  001E5E  6EF7               	movwf	tblptrh,c
 13779  001E60                     	if	0	;There are less than 3 active tblptr bytes
 13780  001E60                     	endif
 13781  001E60  0009               	tblrd		*+
 13782  001E62  CFF5 F012          	movff	tablat,i2___llmod@divisor
 13783  001E66  0009               	tblrd		*+
 13784  001E68  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 13785  001E6C  0009               	tblrd		*+
 13786  001E6E  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 13787  001E72  000A               	tblrd		*-
 13788  001E74  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 13789  001E78  ECB3  F027         	call	i2___llmod
 13790  001E7C  C00E  F065         	movff	?i2___llmod,i2__doprnt@val
 13791  001E80  C00F  F066         	movff	?i2___llmod+1,i2__doprnt@val+1
 13792  001E84  C010  F067         	movff	?i2___llmod+2,i2__doprnt@val+2
 13793  001E88  C011  F068         	movff	?i2___llmod+3,i2__doprnt@val+3
 13794  001E8C                     i2l9374:
 13795  001E8C  0100               	movlb	0	; () banked
 13796  001E8E  0776               	decf	i2__doprnt@c& (0+255),f,b
 13797  001E90  0100               	movlb	0	; () banked
 13798  001E92  2976               	incf	i2__doprnt@c& (0+255),w,b
 13799  001E94  B4D8               	btfsc	status,2,c
 13800  001E96  D037               	goto	i2l9386
 13801  001E98  D75B               	goto	i2l9362
 13802  001E9A                     i2l9376:
 13803                           
 13804                           ; BSR set to: 0
 13805                           ;doprnt.c: 1236: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 13806  001E9A  EE20 F002          	lfsr	2,2
 13807  001E9E  5046               	movf	i2__doprnt@pb,w,c
 13808  001EA0  26D9               	addwf	fsr2l,f,c
 13809  001EA2  5047               	movf	i2__doprnt@pb+1,w,c
 13810  001EA4  22DA               	addwfc	fsr2h,f,c
 13811  001EA6  50DE               	movf	postinc2,w,c
 13812  001EA8  10DE               	iorwf	postinc2,w,c
 13813  001EAA  B4D8               	btfsc	status,2,c
 13814  001EAC  D013               	goto	i2l9380
 13815                           
 13816                           ; BSR set to: 0
 13817  001EAE  EE20 F002          	lfsr	2,2
 13818  001EB2  5046               	movf	i2__doprnt@pb,w,c
 13819  001EB4  26D9               	addwf	fsr2l,f,c
 13820  001EB6  5047               	movf	i2__doprnt@pb+1,w,c
 13821  001EB8  22DA               	addwfc	fsr2h,f,c
 13822  001EBA  D801               	call	i2u1561_48
 13823  001EBC  D020               	goto	i2l9384
 13824  001EBE                     i2u1561_48:
 13825  001EBE  0005               	push	
 13826  001EC0  6EFA               	movwf	pclath,c
 13827  001EC2  50DE               	movf	postinc2,w,c
 13828  001EC4  6EFD               	movwf	tosl,c
 13829  001EC6  50DE               	movf	postinc2,w,c
 13830  001EC8  6EFE               	movwf	tosh,c
 13831  001ECA  50F8               	movf	tblptru,w,c
 13832  001ECC  6EFF               	movwf	tosu,c
 13833  001ECE  50FA               	movf	pclath,w,c
 13834  001ED0  0E30               	movlw	48
 13835  001ED2  0012               	return		;indir
 13836  001ED4                     i2l9380:
 13837  001ED4  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13838  001ED8  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13839  001EDC  CFDE F04C          	movff	postinc2,??i2__doprnt
 13840  001EE0  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13841  001EE4  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13842  001EE8  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13843  001EEC  0E30               	movlw	48
 13844  001EEE  6EDF               	movwf	indf2,c
 13845  001EF0  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13846  001EF4  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13847  001EF8  2ADE               	incf	postinc2,f,c
 13848  001EFA  0E00               	movlw	0
 13849  001EFC  22DD               	addwfc	postdec2,f,c
 13850  001EFE                     i2l9384:
 13851                           
 13852                           ;doprnt.c: 1237: prec--;
 13853  001EFE  0100               	movlb	0	; () banked
 13854  001F00  0774               	decf	i2__doprnt@prec& (0+255),f,b
 13855  001F02  A0D8               	btfss	status,0,c
 13856  001F04  0775               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 13857  001F06                     i2l9386:
 13858                           
 13859                           ; BSR set to: 0
 13860  001F06  0100               	movlb	0	; () banked
 13861  001F08  5174               	movf	i2__doprnt@prec& (0+255),w,b
 13862  001F0A  0100               	movlb	0	; () banked
 13863  001F0C  1175               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 13864  001F0E  B4D8               	btfsc	status,2,c
 13865  001F10  D2A8               	goto	i2l9510
 13866  001F12  D7C3               	goto	i2l9376
 13867  001F14                     i2l416:
 13868                           
 13869                           ; BSR set to: 0
 13870                           ;doprnt.c: 1246: }
 13871                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
 13872  001F14  0100               	movlb	0	; () banked
 13873  001F16  BD72               	btfsc	i2__doprnt@flag& (0+255),6,b
 13874  001F18  D046               	goto	i2l483
 13875                           
 13876                           ; BSR set to: 0
 13877                           ;doprnt.c: 1253: {
 13878                           ;doprnt.c: 1255: if(flag & 0x10)
 13879  001F1A  0100               	movlb	0	; () banked
 13880  001F1C  A972               	btfss	i2__doprnt@flag& (0+255),4,b
 13881  001F1E  D019               	goto	i2l9392
 13882                           
 13883                           ; BSR set to: 0
 13884                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 13885  001F20  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 13886  001F24  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 13887  001F28  CFDF F04C          	movff	indf2,??i2__doprnt
 13888  001F2C  0E04               	movlw	4
 13889  001F2E  26DE               	addwf	postinc2,f,c
 13890  001F30  CFDF F04D          	movff	indf2,??i2__doprnt+1
 13891  001F34  0E00               	movlw	0
 13892  001F36  22DD               	addwfc	postdec2,f,c
 13893  001F38  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13894  001F3C  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13895  001F40  CFDE F065          	movff	postinc2,i2__doprnt@val
 13896  001F44  CFDE F066          	movff	postinc2,i2__doprnt@val+1
 13897  001F48  CFDE F067          	movff	postinc2,i2__doprnt@val+2
 13898  001F4C  CFDE F068          	movff	postinc2,i2__doprnt@val+3
 13899  001F50  D01A               	goto	i2l9394
 13900  001F52                     i2l9392:
 13901                           
 13902                           ; BSR set to: 0
 13903                           ;doprnt.c: 1257: else
 13904                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 13905  001F52  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 13906  001F56  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 13907  001F5A  CFDF F04C          	movff	indf2,??i2__doprnt
 13908  001F5E  0E02               	movlw	2
 13909  001F60  26DE               	addwf	postinc2,f,c
 13910  001F62  CFDF F04D          	movff	indf2,??i2__doprnt+1
 13911  001F66  0E00               	movlw	0
 13912  001F68  22DD               	addwfc	postdec2,f,c
 13913  001F6A  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13914  001F6E  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13915  001F72  CFDE F065          	movff	postinc2,i2__doprnt@val
 13916  001F76  CFDD F066          	movff	postdec2,i2__doprnt@val+1
 13917  001F7A  0100               	movlb	0	; () banked
 13918  001F7C  0E00               	movlw	0
 13919  001F7E  BF66               	btfsc	(i2__doprnt@val+1)& (0+255),7,b
 13920  001F80  0EFF               	movlw	-1
 13921  001F82  6F67               	movwf	(i2__doprnt@val+2)& (0+255),b
 13922  001F84  6F68               	movwf	(i2__doprnt@val+3)& (0+255),b
 13923  001F86                     i2l9394:
 13924                           
 13925                           ; BSR set to: 0
 13926                           ;doprnt.c: 1261: if((long)val < 0) {
 13927  001F86  0100               	movlb	0	; () banked
 13928  001F88  AF68               	btfss	(i2__doprnt@val+3)& (0+255),7,b
 13929  001F8A  D044               	goto	i2l9404
 13930                           
 13931                           ; BSR set to: 0
 13932                           ;doprnt.c: 1262: flag |= 0x03;
 13933  001F8C  0E03               	movlw	3
 13934  001F8E  0100               	movlb	0	; () banked
 13935  001F90  1372               	iorwf	i2__doprnt@flag& (0+255),f,b
 13936                           
 13937                           ; BSR set to: 0
 13938                           ;doprnt.c: 1263: val = -val;
 13939  001F92  0100               	movlb	0	; () banked
 13940  001F94  1F68               	comf	(i2__doprnt@val+3)& (0+255),f,b
 13941  001F96  1F67               	comf	(i2__doprnt@val+2)& (0+255),f,b
 13942  001F98  1F66               	comf	(i2__doprnt@val+1)& (0+255),f,b
 13943  001F9A  6D65               	negf	i2__doprnt@val& (0+255),b
 13944  001F9C  0E00               	movlw	0
 13945  001F9E  2366               	addwfc	(i2__doprnt@val+1)& (0+255),f,b
 13946  001FA0  2367               	addwfc	(i2__doprnt@val+2)& (0+255),f,b
 13947  001FA2  2368               	addwfc	(i2__doprnt@val+3)& (0+255),f,b
 13948                           
 13949                           ; BSR set to: 0
 13950                           ;doprnt.c: 1264: }
 13951                           ;doprnt.c: 1266: }
 13952  001FA4  D037               	goto	i2l9404
 13953  001FA6                     i2l483:
 13954                           
 13955                           ; BSR set to: 0
 13956                           ;doprnt.c: 1268: else
 13957                           ;doprnt.c: 1273: {
 13958                           ;doprnt.c: 1281: if(flag & 0x10)
 13959  001FA6  0100               	movlb	0	; () banked
 13960  001FA8  A972               	btfss	i2__doprnt@flag& (0+255),4,b
 13961  001FAA  D019               	goto	i2l9402
 13962                           
 13963                           ; BSR set to: 0
 13964                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 13965  001FAC  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 13966  001FB0  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 13967  001FB4  CFDF F04C          	movff	indf2,??i2__doprnt
 13968  001FB8  0E04               	movlw	4
 13969  001FBA  26DE               	addwf	postinc2,f,c
 13970  001FBC  CFDF F04D          	movff	indf2,??i2__doprnt+1
 13971  001FC0  0E00               	movlw	0
 13972  001FC2  22DD               	addwfc	postdec2,f,c
 13973  001FC4  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13974  001FC8  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13975  001FCC  CFDE F065          	movff	postinc2,i2__doprnt@val
 13976  001FD0  CFDE F066          	movff	postinc2,i2__doprnt@val+1
 13977  001FD4  CFDE F067          	movff	postinc2,i2__doprnt@val+2
 13978  001FD8  CFDE F068          	movff	postinc2,i2__doprnt@val+3
 13979  001FDC  D01B               	goto	i2l9404
 13980  001FDE                     i2l9402:
 13981                           
 13982                           ; BSR set to: 0
 13983                           ;doprnt.c: 1283: else
 13984                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 13985  001FDE  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 13986  001FE2  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 13987  001FE6  CFDF F04C          	movff	indf2,??i2__doprnt
 13988  001FEA  0E02               	movlw	2
 13989  001FEC  26DE               	addwf	postinc2,f,c
 13990  001FEE  CFDF F04D          	movff	indf2,??i2__doprnt+1
 13991  001FF2  0E00               	movlw	0
 13992  001FF4  22DD               	addwfc	postdec2,f,c
 13993  001FF6  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13994  001FFA  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13995  001FFE  CFDE F04E          	movff	postinc2,??i2__doprnt+2
 13996  002002  CFDD F04F          	movff	postdec2,??i2__doprnt+3
 13997  002006  C04E  F065         	movff	??i2__doprnt+2,i2__doprnt@val
 13998  00200A  C04F  F066         	movff	??i2__doprnt+3,i2__doprnt@val+1
 13999  00200E  0100               	movlb	0	; () banked
 14000  002010  6B67               	clrf	(i2__doprnt@val+2)& (0+255),b
 14001  002012  6B68               	clrf	(i2__doprnt@val+3)& (0+255),b
 14002  002014                     i2l9404:
 14003                           
 14004                           ; BSR set to: 0
 14005                           ;doprnt.c: 1287: }
 14006                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 14007  002014  0100               	movlb	0	; () banked
 14008  002016  5174               	movf	i2__doprnt@prec& (0+255),w,b
 14009  002018  0100               	movlb	0	; () banked
 14010  00201A  1175               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 14011  00201C  A4D8               	btfss	status,2,c
 14012  00201E  D00D               	goto	i2l9410
 14013                           
 14014                           ; BSR set to: 0
 14015  002020  0100               	movlb	0	; () banked
 14016  002022  5165               	movf	i2__doprnt@val& (0+255),w,b
 14017  002024  0100               	movlb	0	; () banked
 14018  002026  1166               	iorwf	(i2__doprnt@val+1)& (0+255),w,b
 14019  002028  0100               	movlb	0	; () banked
 14020  00202A  1167               	iorwf	(i2__doprnt@val+2)& (0+255),w,b
 14021  00202C  0100               	movlb	0	; () banked
 14022  00202E  1168               	iorwf	(i2__doprnt@val+3)& (0+255),w,b
 14023  002030  A4D8               	btfss	status,2,c
 14024  002032  D003               	goto	i2l9410
 14025                           
 14026                           ; BSR set to: 0
 14027                           ;doprnt.c: 1291: prec++;
 14028  002034  0100               	movlb	0	; () banked
 14029  002036  4B74               	infsnz	i2__doprnt@prec& (0+255),f,b
 14030  002038  2B75               	incf	(i2__doprnt@prec+1)& (0+255),f,b
 14031  00203A                     i2l9410:
 14032                           
 14033                           ; BSR set to: 0
 14034                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 14035  00203A  0E01               	movlw	1
 14036  00203C  0100               	movlb	0	; () banked
 14037  00203E  6F76               	movwf	i2__doprnt@c& (0+255),b
 14038  002040                     i2l9412:
 14039                           
 14040                           ; BSR set to: 0
 14041  002040  0E0A               	movlw	10
 14042  002042  0100               	movlb	0	; () banked
 14043  002044  1976               	xorwf	i2__doprnt@c& (0+255),w,b
 14044  002046  B4D8               	btfsc	status,2,c
 14045  002048  D01E               	goto	i2l9424
 14046                           
 14047                           ; BSR set to: 0
 14048                           ;doprnt.c: 1306: if(val < dpowers[c])
 14049                           
 14050                           ; BSR set to: 0
 14051                           
 14052                           ; BSR set to: 0
 14053  00204A  0100               	movlb	0	; () banked
 14054  00204C  5176               	movf	i2__doprnt@c& (0+255),w,b
 14055  00204E  0D04               	mullw	4
 14056  002050  0EEF               	movlw	low _dpowers
 14057  002052  24F3               	addwf	prodl,w,c
 14058  002054  6EF6               	movwf	tblptrl,c
 14059  002056  0E7E               	movlw	high _dpowers
 14060  002058  20F4               	addwfc	prodh,w,c
 14061  00205A  6EF7               	movwf	tblptrh,c
 14062  00205C                     	if	0	;There are less than 3 active tblptr bytes
 14063  00205C                     	endif
 14064  00205C  0009               	tblrd		*+
 14065  00205E  50F5               	movf	tablat,w,c
 14066  002060  0100               	movlb	0	; () banked
 14067  002062  5D65               	subwf	i2__doprnt@val& (0+255),w,b
 14068  002064  0009               	tblrd		*+
 14069  002066  50F5               	movf	tablat,w,c
 14070  002068  0100               	movlb	0	; () banked
 14071  00206A  5966               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 14072  00206C  0009               	tblrd		*+
 14073  00206E  50F5               	movf	tablat,w,c
 14074  002070  0100               	movlb	0	; () banked
 14075  002072  5967               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 14076  002074  0009               	tblrd		*+
 14077  002076  50F5               	movf	tablat,w,c
 14078  002078  0100               	movlb	0	; () banked
 14079  00207A  5968               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 14080  00207C  A0D8               	btfss	status,0,c
 14081  00207E  D003               	goto	i2l9424
 14082                           
 14083                           ; BSR set to: 0
 14084                           
 14085                           ; BSR set to: 0
 14086                           
 14087                           ; BSR set to: 0
 14088                           ;doprnt.c: 1307: break;
 14089  002080  0100               	movlb	0	; () banked
 14090  002082  2B76               	incf	i2__doprnt@c& (0+255),f,b
 14091  002084  D7DD               	goto	i2l9412
 14092  002086                     i2l9424:
 14093                           
 14094                           ; BSR set to: 0
 14095                           ;doprnt.c: 1339: if(c < prec)
 14096  002086  0E80               	movlw	128
 14097  002088  0100               	movlb	0	; () banked
 14098  00208A  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 14099  00208C  0E7F               	movlw	127
 14100  00208E  6E4C               	movwf	??i2__doprnt& (0+255),c
 14101  002090  0100               	movlb	0	; () banked
 14102  002092  5174               	movf	i2__doprnt@prec& (0+255),w,b
 14103  002094  0100               	movlb	0	; () banked
 14104  002096  5D76               	subwf	i2__doprnt@c& (0+255),w,b
 14105  002098  0100               	movlb	0	; () banked
 14106  00209A  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 14107  00209C  0A80               	xorlw	128
 14108  00209E  584C               	subwfb	??i2__doprnt& (0+255),w,c
 14109  0020A0  B0D8               	btfsc	status,0,c
 14110  0020A2  D003               	goto	i2l9428
 14111                           
 14112                           ; BSR set to: 0
 14113                           ;doprnt.c: 1340: c = prec;
 14114  0020A4  C074  F076         	movff	i2__doprnt@prec,i2__doprnt@c
 14115  0020A8  D016               	goto	i2l9432
 14116  0020AA                     i2l9428:
 14117                           
 14118                           ; BSR set to: 0
 14119                           ;doprnt.c: 1341: else if(prec < c)
 14120  0020AA  0100               	movlb	0	; () banked
 14121  0020AC  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 14122  0020AE  0A80               	xorlw	128
 14123  0020B0  6E4C               	movwf	??i2__doprnt& (0+255),c
 14124  0020B2  0100               	movlb	0	; () banked
 14125  0020B4  5176               	movf	i2__doprnt@c& (0+255),w,b
 14126  0020B6  0100               	movlb	0	; () banked
 14127  0020B8  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 14128  0020BA  0E80               	movlw	128
 14129  0020BC  0100               	movlb	0	; () banked
 14130  0020BE  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 14131  0020C0  0E7F               	movlw	127
 14132  0020C2  584C               	subwfb	??i2__doprnt& (0+255),w,c
 14133  0020C4  B0D8               	btfsc	status,0,c
 14134  0020C6  D007               	goto	i2l9432
 14135                           
 14136                           ; BSR set to: 0
 14137                           ;doprnt.c: 1342: prec = c;
 14138  0020C8  0100               	movlb	0	; () banked
 14139  0020CA  5176               	movf	i2__doprnt@c& (0+255),w,b
 14140  0020CC  0100               	movlb	0	; () banked
 14141  0020CE  6F74               	movwf	i2__doprnt@prec& (0+255),b
 14142  0020D0  6B75               	clrf	(i2__doprnt@prec+1)& (0+255),b
 14143  0020D2  BF74               	btfsc	i2__doprnt@prec& (0+255),7,b
 14144  0020D4  0775               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 14145  0020D6                     i2l9432:
 14146                           
 14147                           ; BSR set to: 0
 14148                           ;doprnt.c: 1345: if(width && flag & 0x03)
 14149  0020D6  0100               	movlb	0	; () banked
 14150  0020D8  5170               	movf	i2__doprnt@width& (0+255),w,b
 14151  0020DA  0100               	movlb	0	; () banked
 14152  0020DC  1171               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 14153  0020DE  B4D8               	btfsc	status,2,c
 14154  0020E0  D010               	goto	i2l9438
 14155                           
 14156                           ; BSR set to: 0
 14157  0020E2  0E03               	movlw	3
 14158  0020E4  0100               	movlb	0	; () banked
 14159  0020E6  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 14160  0020E8  6E4C               	movwf	??i2__doprnt& (0+255),c
 14161  0020EA  0E00               	movlw	0
 14162  0020EC  0100               	movlb	0	; () banked
 14163  0020EE  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 14164  0020F0  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 14165  0020F2  504C               	movf	??i2__doprnt,w,c
 14166  0020F4  104D               	iorwf	??i2__doprnt+1,w,c
 14167  0020F6  B4D8               	btfsc	status,2,c
 14168  0020F8  D004               	goto	i2l9438
 14169                           
 14170                           ; BSR set to: 0
 14171                           ;doprnt.c: 1346: width--;
 14172  0020FA  0100               	movlb	0	; () banked
 14173  0020FC  0770               	decf	i2__doprnt@width& (0+255),f,b
 14174  0020FE  A0D8               	btfss	status,0,c
 14175  002100  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 14176  002102                     i2l9438:
 14177                           
 14178                           ; BSR set to: 0
 14179                           ;doprnt.c: 1348: if(flag & 0x4000) {
 14180  002102  0100               	movlb	0	; () banked
 14181  002104  AD73               	btfss	(i2__doprnt@flag+1)& (0+255),6,b
 14182  002106  D01C               	goto	i2l9446
 14183                           
 14184                           ; BSR set to: 0
 14185                           ;doprnt.c: 1349: if(width > prec)
 14186  002108  0100               	movlb	0	; () banked
 14187  00210A  5170               	movf	i2__doprnt@width& (0+255),w,b
 14188  00210C  0100               	movlb	0	; () banked
 14189  00210E  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 14190  002110  0100               	movlb	0	; () banked
 14191  002112  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 14192  002114  0A80               	xorlw	128
 14193  002116  6E4C               	movwf	??i2__doprnt& (0+255),c
 14194  002118  0100               	movlb	0	; () banked
 14195  00211A  5171               	movf	(i2__doprnt@width+1)& (0+255),w,b
 14196  00211C  0A80               	xorlw	128
 14197  00211E  584C               	subwfb	??i2__doprnt& (0+255),w,c
 14198  002120  B0D8               	btfsc	status,0,c
 14199  002122  D009               	goto	i2l9444
 14200                           
 14201                           ; BSR set to: 0
 14202                           ;doprnt.c: 1350: width -= prec;
 14203  002124  0100               	movlb	0	; () banked
 14204  002126  5174               	movf	i2__doprnt@prec& (0+255),w,b
 14205  002128  0100               	movlb	0	; () banked
 14206  00212A  5F70               	subwf	i2__doprnt@width& (0+255),f,b
 14207  00212C  0100               	movlb	0	; () banked
 14208  00212E  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 14209  002130  0100               	movlb	0	; () banked
 14210  002132  5B71               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 14211  002134  D005               	goto	i2l9446
 14212  002136                     i2l9444:
 14213                           
 14214                           ; BSR set to: 0
 14215                           ;doprnt.c: 1351: else
 14216                           ;doprnt.c: 1352: width = 0;
 14217  002136  0E00               	movlw	0
 14218  002138  0100               	movlb	0	; () banked
 14219  00213A  6F71               	movwf	(i2__doprnt@width+1)& (0+255),b
 14220  00213C  0E00               	movlw	0
 14221  00213E  6F70               	movwf	i2__doprnt@width& (0+255),b
 14222  002140                     i2l9446:
 14223                           
 14224                           ; BSR set to: 0
 14225                           ;doprnt.c: 1353: }
 14226                           ;doprnt.c: 1381: if(width > c)
 14227  002140  0E80               	movlw	128
 14228  002142  0100               	movlb	0	; () banked
 14229  002144  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 14230  002146  0E7F               	movlw	127
 14231  002148  6E4C               	movwf	??i2__doprnt& (0+255),c
 14232  00214A  0100               	movlb	0	; () banked
 14233  00214C  5170               	movf	i2__doprnt@width& (0+255),w,b
 14234  00214E  0100               	movlb	0	; () banked
 14235  002150  5D76               	subwf	i2__doprnt@c& (0+255),w,b
 14236  002152  0100               	movlb	0	; () banked
 14237  002154  5171               	movf	(i2__doprnt@width+1)& (0+255),w,b
 14238  002156  0A80               	xorlw	128
 14239  002158  584C               	subwfb	??i2__doprnt& (0+255),w,c
 14240  00215A  B0D8               	btfsc	status,0,c
 14241  00215C  D00B               	goto	i2l9450
 14242                           
 14243                           ; BSR set to: 0
 14244                           ;doprnt.c: 1382: width -= c;
 14245  00215E  0100               	movlb	0	; () banked
 14246  002160  5176               	movf	i2__doprnt@c& (0+255),w,b
 14247  002162  0100               	movlb	0	; () banked
 14248  002164  5F70               	subwf	i2__doprnt@width& (0+255),f,b
 14249  002166  0E00               	movlw	0
 14250  002168  0100               	movlb	0	; () banked
 14251  00216A  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 14252  00216C  0EFF               	movlw	255
 14253  00216E  0100               	movlb	0	; () banked
 14254  002170  5B71               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 14255  002172  D005               	goto	i2l9452
 14256  002174                     i2l9450:
 14257                           
 14258                           ; BSR set to: 0
 14259                           ;doprnt.c: 1383: else
 14260                           ;doprnt.c: 1384: width = 0;
 14261  002174  0E00               	movlw	0
 14262  002176  0100               	movlb	0	; () banked
 14263  002178  6F71               	movwf	(i2__doprnt@width+1)& (0+255),b
 14264  00217A  0E00               	movlw	0
 14265  00217C  6F70               	movwf	i2__doprnt@width& (0+255),b
 14266  00217E                     i2l9452:
 14267                           
 14268                           ; BSR set to: 0
 14269                           ;doprnt.c: 1387: if(flag & 0x04) {
 14270  00217E  0100               	movlb	0	; () banked
 14271  002180  A572               	btfss	i2__doprnt@flag& (0+255),2,b
 14272  002182  D07B               	goto	i2l9476
 14273                           
 14274                           ; BSR set to: 0
 14275                           ;doprnt.c: 1392: if(flag & 0x03)
 14276  002184  0E03               	movlw	3
 14277  002186  0100               	movlb	0	; () banked
 14278  002188  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 14279  00218A  6E4C               	movwf	??i2__doprnt& (0+255),c
 14280  00218C  0E00               	movlw	0
 14281  00218E  0100               	movlb	0	; () banked
 14282  002190  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 14283  002192  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 14284  002194  504C               	movf	??i2__doprnt,w,c
 14285  002196  104D               	iorwf	??i2__doprnt+1,w,c
 14286  002198  B4D8               	btfsc	status,2,c
 14287  00219A  D032               	goto	i2l9464
 14288                           
 14289                           ; BSR set to: 0
 14290                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 14291  00219C  EE20 F002          	lfsr	2,2
 14292  0021A0  5046               	movf	i2__doprnt@pb,w,c
 14293  0021A2  26D9               	addwf	fsr2l,f,c
 14294  0021A4  5047               	movf	i2__doprnt@pb+1,w,c
 14295  0021A6  22DA               	addwfc	fsr2h,f,c
 14296  0021A8  50DE               	movf	postinc2,w,c
 14297  0021AA  10DE               	iorwf	postinc2,w,c
 14298  0021AC  B4D8               	btfsc	status,2,c
 14299  0021AE  D013               	goto	i2l9460
 14300                           
 14301                           ; BSR set to: 0
 14302  0021B0  EE20 F002          	lfsr	2,2
 14303  0021B4  5046               	movf	i2__doprnt@pb,w,c
 14304  0021B6  26D9               	addwf	fsr2l,f,c
 14305  0021B8  5047               	movf	i2__doprnt@pb+1,w,c
 14306  0021BA  22DA               	addwfc	fsr2h,f,c
 14307  0021BC  D801               	call	i2u1582_48
 14308  0021BE  D020               	goto	i2l9464
 14309  0021C0                     i2u1582_48:
 14310  0021C0  0005               	push	
 14311  0021C2  6EFA               	movwf	pclath,c
 14312  0021C4  50DE               	movf	postinc2,w,c
 14313  0021C6  6EFD               	movwf	tosl,c
 14314  0021C8  50DE               	movf	postinc2,w,c
 14315  0021CA  6EFE               	movwf	tosh,c
 14316  0021CC  50F8               	movf	tblptru,w,c
 14317  0021CE  6EFF               	movwf	tosu,c
 14318  0021D0  50FA               	movf	pclath,w,c
 14319  0021D2  0E2D               	movlw	45
 14320  0021D4  0012               	return		;indir
 14321  0021D6                     i2l9460:
 14322  0021D6  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14323  0021DA  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14324  0021DE  CFDE F04C          	movff	postinc2,??i2__doprnt
 14325  0021E2  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 14326  0021E6  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 14327  0021EA  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 14328  0021EE  0E2D               	movlw	45
 14329  0021F0  6EDF               	movwf	indf2,c
 14330  0021F2  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14331  0021F6  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14332  0021FA  2ADE               	incf	postinc2,f,c
 14333  0021FC  0E00               	movlw	0
 14334  0021FE  22DD               	addwfc	postdec2,f,c
 14335  002200                     i2l9464:
 14336                           
 14337                           ;doprnt.c: 1415: if(width)
 14338  002200  0100               	movlb	0	; () banked
 14339  002202  5170               	movf	i2__doprnt@width& (0+255),w,b
 14340  002204  0100               	movlb	0	; () banked
 14341  002206  1171               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 14342  002208  B4D8               	btfsc	status,2,c
 14343  00220A  D120               	goto	i2l9508
 14344                           
 14345                           ; BSR set to: 0
 14346                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 14347                           
 14348                           ; BSR set to: 0
 14349                           
 14350                           ;doprnt.c: 1416: do
 14351  00220C  EE20 F002          	lfsr	2,2
 14352  002210  5046               	movf	i2__doprnt@pb,w,c
 14353  002212  26D9               	addwf	fsr2l,f,c
 14354  002214  5047               	movf	i2__doprnt@pb+1,w,c
 14355  002216  22DA               	addwfc	fsr2h,f,c
 14356  002218  50DE               	movf	postinc2,w,c
 14357  00221A  10DE               	iorwf	postinc2,w,c
 14358  00221C  B4D8               	btfsc	status,2,c
 14359  00221E  D013               	goto	i2l9470
 14360                           
 14361                           ; BSR set to: 0
 14362  002220  EE20 F002          	lfsr	2,2
 14363  002224  5046               	movf	i2__doprnt@pb,w,c
 14364  002226  26D9               	addwf	fsr2l,f,c
 14365  002228  5047               	movf	i2__doprnt@pb+1,w,c
 14366  00222A  22DA               	addwfc	fsr2h,f,c
 14367  00222C  D801               	call	i2u1585_48
 14368  00222E  D020               	goto	i2l9474
 14369  002230                     i2u1585_48:
 14370  002230  0005               	push	
 14371  002232  6EFA               	movwf	pclath,c
 14372  002234  50DE               	movf	postinc2,w,c
 14373  002236  6EFD               	movwf	tosl,c
 14374  002238  50DE               	movf	postinc2,w,c
 14375  00223A  6EFE               	movwf	tosh,c
 14376  00223C  50F8               	movf	tblptru,w,c
 14377  00223E  6EFF               	movwf	tosu,c
 14378  002240  50FA               	movf	pclath,w,c
 14379  002242  0E30               	movlw	48
 14380  002244  0012               	return		;indir
 14381  002246                     i2l9470:
 14382  002246  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14383  00224A  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14384  00224E  CFDE F04C          	movff	postinc2,??i2__doprnt
 14385  002252  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 14386  002256  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 14387  00225A  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 14388  00225E  0E30               	movlw	48
 14389  002260  6EDF               	movwf	indf2,c
 14390  002262  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14391  002266  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14392  00226A  2ADE               	incf	postinc2,f,c
 14393  00226C  0E00               	movlw	0
 14394  00226E  22DD               	addwfc	postdec2,f,c
 14395  002270                     i2l9474:
 14396                           
 14397                           ;doprnt.c: 1418: while(--width);
 14398  002270  0100               	movlb	0	; () banked
 14399  002272  0770               	decf	i2__doprnt@width& (0+255),f,b
 14400  002274  A0D8               	btfss	status,0,c
 14401  002276  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 14402  002278  D7C3               	goto	i2l9464
 14403  00227A                     i2l9476:
 14404                           
 14405                           ; BSR set to: 0
 14406                           ;doprnt.c: 1422: {
 14407                           ;doprnt.c: 1424: if(width
 14408                           ;doprnt.c: 1428: )
 14409  00227A  0100               	movlb	0	; () banked
 14410  00227C  5170               	movf	i2__doprnt@width& (0+255),w,b
 14411  00227E  0100               	movlb	0	; () banked
 14412  002280  1171               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 14413  002282  B4D8               	btfsc	status,2,c
 14414  002284  D03C               	goto	i2l9488
 14415  002286                     i2l9478:
 14416                           
 14417                           ; BSR set to: 0
 14418                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 14419  002286  EE20 F002          	lfsr	2,2
 14420  00228A  5046               	movf	i2__doprnt@pb,w,c
 14421  00228C  26D9               	addwf	fsr2l,f,c
 14422  00228E  5047               	movf	i2__doprnt@pb+1,w,c
 14423  002290  22DA               	addwfc	fsr2h,f,c
 14424  002292  50DE               	movf	postinc2,w,c
 14425  002294  10DE               	iorwf	postinc2,w,c
 14426  002296  B4D8               	btfsc	status,2,c
 14427  002298  D013               	goto	i2l9482
 14428                           
 14429                           ; BSR set to: 0
 14430  00229A  EE20 F002          	lfsr	2,2
 14431  00229E  5046               	movf	i2__doprnt@pb,w,c
 14432  0022A0  26D9               	addwf	fsr2l,f,c
 14433  0022A2  5047               	movf	i2__doprnt@pb+1,w,c
 14434  0022A4  22DA               	addwfc	fsr2h,f,c
 14435  0022A6  D801               	call	i2u1589_48
 14436  0022A8  D020               	goto	i2l9486
 14437  0022AA                     i2u1589_48:
 14438  0022AA  0005               	push	
 14439  0022AC  6EFA               	movwf	pclath,c
 14440  0022AE  50DE               	movf	postinc2,w,c
 14441  0022B0  6EFD               	movwf	tosl,c
 14442  0022B2  50DE               	movf	postinc2,w,c
 14443  0022B4  6EFE               	movwf	tosh,c
 14444  0022B6  50F8               	movf	tblptru,w,c
 14445  0022B8  6EFF               	movwf	tosu,c
 14446  0022BA  50FA               	movf	pclath,w,c
 14447  0022BC  0E20               	movlw	32
 14448  0022BE  0012               	return		;indir
 14449  0022C0                     i2l9482:
 14450  0022C0  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14451  0022C4  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14452  0022C8  CFDE F04C          	movff	postinc2,??i2__doprnt
 14453  0022CC  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 14454  0022D0  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 14455  0022D4  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 14456  0022D8  0E20               	movlw	32
 14457  0022DA  6EDF               	movwf	indf2,c
 14458  0022DC  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14459  0022E0  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14460  0022E4  2ADE               	incf	postinc2,f,c
 14461  0022E6  0E00               	movlw	0
 14462  0022E8  22DD               	addwfc	postdec2,f,c
 14463  0022EA                     i2l9486:
 14464                           
 14465                           ;doprnt.c: 1431: while(--width);
 14466  0022EA  0100               	movlb	0	; () banked
 14467  0022EC  0770               	decf	i2__doprnt@width& (0+255),f,b
 14468  0022EE  A0D8               	btfss	status,0,c
 14469  0022F0  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 14470  0022F2  0100               	movlb	0	; () banked
 14471  0022F4  5170               	movf	i2__doprnt@width& (0+255),w,b
 14472  0022F6  0100               	movlb	0	; () banked
 14473  0022F8  1171               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 14474  0022FA  A4D8               	btfss	status,2,c
 14475  0022FC  D7C4               	goto	i2l9478
 14476  0022FE                     i2l9488:
 14477                           
 14478                           ; BSR set to: 0
 14479                           ;doprnt.c: 1438: if(flag & 0x03)
 14480  0022FE  0E03               	movlw	3
 14481  002300  0100               	movlb	0	; () banked
 14482  002302  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 14483  002304  6E4C               	movwf	??i2__doprnt& (0+255),c
 14484  002306  0E00               	movlw	0
 14485  002308  0100               	movlb	0	; () banked
 14486  00230A  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 14487  00230C  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 14488  00230E  504C               	movf	??i2__doprnt,w,c
 14489  002310  104D               	iorwf	??i2__doprnt+1,w,c
 14490  002312  B4D8               	btfsc	status,2,c
 14491  002314  D09B               	goto	i2l9508
 14492                           
 14493                           ; BSR set to: 0
 14494                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 14495  002316  EE20 F002          	lfsr	2,2
 14496  00231A  5046               	movf	i2__doprnt@pb,w,c
 14497  00231C  26D9               	addwf	fsr2l,f,c
 14498  00231E  5047               	movf	i2__doprnt@pb+1,w,c
 14499  002320  22DA               	addwfc	fsr2h,f,c
 14500  002322  50DE               	movf	postinc2,w,c
 14501  002324  10DE               	iorwf	postinc2,w,c
 14502  002326  B4D8               	btfsc	status,2,c
 14503  002328  D013               	goto	i2l9494
 14504                           
 14505                           ; BSR set to: 0
 14506  00232A  EE20 F002          	lfsr	2,2
 14507  00232E  5046               	movf	i2__doprnt@pb,w,c
 14508  002330  26D9               	addwf	fsr2l,f,c
 14509  002332  5047               	movf	i2__doprnt@pb+1,w,c
 14510  002334  22DA               	addwfc	fsr2h,f,c
 14511  002336  D801               	call	i2u1593_48
 14512  002338  D089               	goto	i2l9508
 14513  00233A                     i2u1593_48:
 14514  00233A  0005               	push	
 14515  00233C  6EFA               	movwf	pclath,c
 14516  00233E  50DE               	movf	postinc2,w,c
 14517  002340  6EFD               	movwf	tosl,c
 14518  002342  50DE               	movf	postinc2,w,c
 14519  002344  6EFE               	movwf	tosh,c
 14520  002346  50F8               	movf	tblptru,w,c
 14521  002348  6EFF               	movwf	tosu,c
 14522  00234A  50FA               	movf	pclath,w,c
 14523  00234C  0E2D               	movlw	45
 14524  00234E  0012               	return		;indir
 14525  002350                     i2l9494:
 14526  002350  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14527  002354  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14528  002358  CFDE F04C          	movff	postinc2,??i2__doprnt
 14529  00235C  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 14530  002360  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 14531  002364  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 14532  002368  0E2D               	movlw	45
 14533  00236A  6EDF               	movwf	indf2,c
 14534  00236C  D068               	goto	i2l9506
 14535  00236E                     i2l9498:
 14536                           
 14537                           ;doprnt.c: 1478: {
 14538                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 14539  00236E  C074  F04C         	movff	i2__doprnt@prec,??i2__doprnt
 14540  002372  C075  F04D         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 14541  002376  90D8               	bcf	status,0,c
 14542  002378  364C               	rlcf	??i2__doprnt,f,c
 14543  00237A  364D               	rlcf	??i2__doprnt+1,f,c
 14544  00237C  90D8               	bcf	status,0,c
 14545  00237E  364C               	rlcf	??i2__doprnt,f,c
 14546  002380  364D               	rlcf	??i2__doprnt+1,f,c
 14547  002382  0EEF               	movlw	low _dpowers
 14548  002384  244C               	addwf	??i2__doprnt,w,c
 14549  002386  6EF6               	movwf	tblptrl,c
 14550  002388  0E7E               	movlw	high _dpowers
 14551  00238A  204D               	addwfc	??i2__doprnt+1,w,c
 14552  00238C  6EF7               	movwf	tblptrh,c
 14553  00238E                     	if	0	;There are less than 3 active tblptr bytes
 14554  00238E                     	endif
 14555  00238E  0009               	tblrd		*+
 14556  002390  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 14557  002394  0009               	tblrd		*+
 14558  002396  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 14559  00239A  0009               	tblrd		*+
 14560  00239C  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 14561  0023A0  000A               	tblrd		*-
 14562  0023A2  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 14563  0023A6  C065  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 14564  0023AA  C066  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 14565  0023AE  C067  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 14566  0023B2  C068  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 14567  0023B6  EC85  F026         	call	i2___lldiv
 14568  0023BA  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 14569  0023BE  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 14570  0023C2  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 14571  0023C6  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 14572  0023CA  0E0A               	movlw	10
 14573  0023CC  6E12               	movwf	i2___llmod@divisor,c
 14574  0023CE  0E00               	movlw	0
 14575  0023D0  6E13               	movwf	i2___llmod@divisor+1,c
 14576  0023D2  0E00               	movlw	0
 14577  0023D4  6E14               	movwf	i2___llmod@divisor+2,c
 14578  0023D6  0E00               	movlw	0
 14579  0023D8  6E15               	movwf	i2___llmod@divisor+3,c
 14580  0023DA  ECB3  F027         	call	i2___llmod	;wreg free
 14581  0023DE  500E               	movf	?i2___llmod,w,c
 14582  0023E0  0F30               	addlw	48
 14583  0023E2  0100               	movlb	0	; () banked
 14584  0023E4  6F76               	movwf	i2__doprnt@c& (0+255),b
 14585                           
 14586                           ; BSR set to: 0
 14587                           ;doprnt.c: 1523: }
 14588                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 14589  0023E6  EE20 F002          	lfsr	2,2
 14590  0023EA  5046               	movf	i2__doprnt@pb,w,c
 14591  0023EC  26D9               	addwf	fsr2l,f,c
 14592  0023EE  5047               	movf	i2__doprnt@pb+1,w,c
 14593  0023F0  22DA               	addwfc	fsr2h,f,c
 14594  0023F2  50DE               	movf	postinc2,w,c
 14595  0023F4  10DE               	iorwf	postinc2,w,c
 14596  0023F6  B4D8               	btfsc	status,2,c
 14597  0023F8  D014               	goto	i2l9504
 14598                           
 14599                           ; BSR set to: 0
 14600  0023FA  EE20 F002          	lfsr	2,2
 14601  0023FE  5046               	movf	i2__doprnt@pb,w,c
 14602  002400  26D9               	addwf	fsr2l,f,c
 14603  002402  5047               	movf	i2__doprnt@pb+1,w,c
 14604  002404  22DA               	addwfc	fsr2h,f,c
 14605  002406  D801               	call	i2u1595_48
 14606  002408  D021               	goto	i2l9508
 14607  00240A                     i2u1595_48:
 14608  00240A  0005               	push	
 14609  00240C  6EFA               	movwf	pclath,c
 14610  00240E  50DE               	movf	postinc2,w,c
 14611  002410  6EFD               	movwf	tosl,c
 14612  002412  50DE               	movf	postinc2,w,c
 14613  002414  6EFE               	movwf	tosh,c
 14614  002416  50F8               	movf	tblptru,w,c
 14615  002418  6EFF               	movwf	tosu,c
 14616  00241A  50FA               	movf	pclath,w,c
 14617  00241C  0100               	movlb	0	; () banked
 14618  00241E  5176               	movf	i2__doprnt@c& (0+255),w,b
 14619  002420  0012               	return		;indir
 14620  002422                     i2l9504:
 14621  002422  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14622  002426  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14623  00242A  CFDE F04C          	movff	postinc2,??i2__doprnt
 14624  00242E  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 14625  002432  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 14626  002436  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 14627  00243A  C076  FFDF         	movff	i2__doprnt@c,indf2
 14628  00243E                     i2l9506:
 14629  00243E  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14630  002442  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14631  002446  2ADE               	incf	postinc2,f,c
 14632  002448  0E00               	movlw	0
 14633  00244A  22DD               	addwfc	postdec2,f,c
 14634  00244C                     i2l9508:
 14635  00244C  0100               	movlb	0	; () banked
 14636  00244E  0774               	decf	i2__doprnt@prec& (0+255),f,b
 14637  002450  A0D8               	btfss	status,0,c
 14638  002452  0775               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 14639  002454  0100               	movlb	0	; () banked
 14640  002456  2974               	incf	i2__doprnt@prec& (0+255),w,b
 14641  002458  E18A               	bnz	i2l9498
 14642  00245A  0100               	movlb	0	; () banked
 14643  00245C  2975               	incf	(i2__doprnt@prec+1)& (0+255),w,b
 14644  00245E  A4D8               	btfss	status,2,c
 14645  002460  D786               	goto	i2l9498
 14646  002462                     i2l9510:
 14647  002462  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 14648  002466  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 14649  00246A  4A48               	infsnz	i2__doprnt@f,f,c
 14650  00246C  2A49               	incf	i2__doprnt@f+1,f,c
 14651  00246E                     	if	0	;tblptru may be non-zero
 14652  00246E                     	endif
 14653  00246E                     	if	0	;tblptru may be non-zero
 14654  00246E                     	endif
 14655  00246E  0008               	tblrd		*
 14656  002470  CFF5 F076          	movff	tablat,i2__doprnt@c
 14657  002474  0100               	movlb	0	; () banked
 14658  002476  5176               	movf	i2__doprnt@c& (0+255),w,b
 14659  002478  A4D8               	btfss	status,2,c
 14660  00247A  EF8A  F009         	goto	i2l9122
 14661  00247E                     i2l9512:
 14662                           
 14663                           ; BSR set to: 0
 14664                           ;doprnt.c: 1540: return 0;
 14665  00247E  0E00               	movlw	0
 14666  002480  6E47               	movwf	?i2__doprnt+1,c
 14667  002482  0E00               	movlw	0
 14668  002484  6E46               	movwf	?i2__doprnt,c
 14669  002486  0012               	return	
 14670  002488                     __end_ofi2__doprnt:
 14671                           	opt stack 0
 14672                           tosu	equ	0xFFF
 14673                           tosh	equ	0xFFE
 14674                           tosl	equ	0xFFD
 14675                           pclatu	equ	0xFFB
 14676                           pclath	equ	0xFFA
 14677                           tblptru	equ	0xFF8
 14678                           tblptrh	equ	0xFF7
 14679                           tblptrl	equ	0xFF6
 14680                           tablat	equ	0xFF5
 14681                           prodh	equ	0xFF4
 14682                           prodl	equ	0xFF3
 14683                           intcon	equ	0xFF2
 14684                           intcon2	equ	0xFF1
 14685                           intcon3	equ	0xFF0
 14686                           postinc0	equ	0xFEE
 14687                           fsr0h	equ	0xFEA
 14688                           fsr0l	equ	0xFE9
 14689                           wreg	equ	0xFE8
 14690                           postdec1	equ	0xFE5
 14691                           fsr1h	equ	0xFE2
 14692                           fsr1l	equ	0xFE1
 14693                           indf2	equ	0xFDF
 14694                           postinc2	equ	0xFDE
 14695                           postdec2	equ	0xFDD
 14696                           fsr2h	equ	0xFDA
 14697                           fsr2l	equ	0xFD9
 14698                           status	equ	0xFD8
 14699                           
 14700 ;; *************** function i2_scale *****************
 14701 ;; Defined at:
 14702 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
 14703 ;; Parameters:    Size  Location     Type
 14704 ;;  scl             1    wreg     char 
 14705 ;; Auto vars:     Size  Location     Type
 14706 ;;  scl             1   53[COMRAM] char 
 14707 ;; Return value:  Size  Location     Type
 14708 ;;                  3   47[COMRAM] char 
 14709 ;; Registers used:
 14710 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14711 ;; Tracked objects:
 14712 ;;		On entry : 0/0
 14713 ;;		On exit  : 0/0
 14714 ;;		Unchanged: 0/0
 14715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14716 ;;      Params:         3       0       0       0       0       0       0
 14717 ;;      Locals:         4       0       0       0       0       0       0
 14718 ;;      Temps:          0       0       0       0       0       0       0
 14719 ;;      Totals:         7       0       0       0       0       0       0
 14720 ;;Total ram usage:        7 bytes
 14721 ;; Hardware stack levels used:    1
 14722 ;; Hardware stack levels required when called:    2
 14723 ;; This function calls:
 14724 ;;		i2___awdiv
 14725 ;;		i2___awmod
 14726 ;;		i2___ftmul
 14727 ;;		i2___wmul
 14728 ;; This function is called by:
 14729 ;;		i2__doprnt
 14730 ;; This function uses a non-reentrant model
 14731 ;;
 14732                           
 14733                           	psect	text50
 14734  002936                     __ptext50:
 14735                           	opt stack 0
 14736  002936                     i2_scale:
 14737                           	opt stack 19
 14738                           
 14739                           ; BSR set to: 0
 14740                           ;incstack = 0
 14741                           ;i2scale@scl stored from wreg
 14742  002936  6E36               	movwf	i2scale@scl,c
 14743                           
 14744                           ;doprnt.c: 428: if(scl < 0) {
 14745  002938  AE36               	btfss	i2scale@scl,7,c
 14746  00293A  D0FB               	goto	i2l4172
 14747                           
 14748                           ;doprnt.c: 429: scl = -scl;
 14749  00293C  6C36               	negf	i2scale@scl,c
 14750                           
 14751                           ;doprnt.c: 430: if(scl>=110)
 14752  00293E  5036               	movf	i2scale@scl,w,c
 14753  002940  0A80               	xorlw	128
 14754  002942  0F12               	addlw	-238
 14755  002944  A0D8               	btfss	status,0,c
 14756  002946  D091               	goto	i2l4162
 14757                           
 14758                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 14759  002948  0E00               	movlw	0
 14760  00294A  6E12               	movwf	i2___wmul@multiplicand+1,c
 14761  00294C  0E03               	movlw	3
 14762  00294E  6E11               	movwf	i2___wmul@multiplicand,c
 14763  002950  0E00               	movlw	0
 14764  002952  6E0A               	movwf	i2___awdiv@divisor+1,c
 14765  002954  0E0A               	movlw	10
 14766  002956  6E09               	movwf	i2___awdiv@divisor,c
 14767  002958  0E00               	movlw	0
 14768  00295A  6E04               	movwf	i2___awmod@divisor+1,c
 14769  00295C  0E64               	movlw	100
 14770  00295E  6E03               	movwf	i2___awmod@divisor,c
 14771  002960  5036               	movf	i2scale@scl,w,c
 14772  002962  6E01               	movwf	i2___awmod@dividend,c
 14773  002964  6A02               	clrf	i2___awmod@dividend+1,c
 14774  002966  BE01               	btfsc	i2___awmod@dividend,7,c
 14775  002968  0602               	decf	i2___awmod@dividend+1,f,c
 14776  00296A  EC7B  F027         	call	i2___awmod
 14777  00296E  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 14778  002972  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 14779  002976  EC43  F026         	call	i2___awdiv	;wreg free
 14780  00297A  0E09               	movlw	9
 14781  00297C  2407               	addwf	?i2___awdiv,w,c
 14782  00297E  6E0F               	movwf	i2___wmul@multiplier,c
 14783  002980  0E00               	movlw	0
 14784  002982  2008               	addwfc	?i2___awdiv+1,w,c
 14785  002984  6E10               	movwf	i2___wmul@multiplier+1,c
 14786  002986  EC43  F02A         	call	i2___wmul	;wreg free
 14787  00298A  0E17               	movlw	low __npowers_
 14788  00298C  240F               	addwf	?i2___wmul,w,c
 14789  00298E  6EF6               	movwf	tblptrl,c
 14790  002990  0E7F               	movlw	high __npowers_
 14791  002992  2010               	addwfc	?i2___wmul+1,w,c
 14792  002994  6EF7               	movwf	tblptrh,c
 14793  002996                     	if	0	;There are less than 3 active tblptr bytes
 14794  002996                     	endif
 14795  002996  0009               	tblrd		*+
 14796  002998  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14797  00299C  0009               	tblrd		*+
 14798  00299E  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14799  0029A2  000A               	tblrd		*-
 14800  0029A4  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14801  0029A8  0E00               	movlw	0
 14802  0029AA  6E0A               	movwf	i2___awdiv@divisor+1,c
 14803  0029AC  0E64               	movlw	100
 14804  0029AE  6E09               	movwf	i2___awdiv@divisor,c
 14805  0029B0  5036               	movf	i2scale@scl,w,c
 14806  0029B2  6E07               	movwf	i2___awdiv@dividend,c
 14807  0029B4  6A08               	clrf	i2___awdiv@dividend+1,c
 14808  0029B6  BE07               	btfsc	i2___awdiv@dividend,7,c
 14809  0029B8  0608               	decf	i2___awdiv@dividend+1,f,c
 14810  0029BA  EC43  F026         	call	i2___awdiv	;wreg free
 14811  0029BE  0E12               	movlw	18
 14812  0029C0  2407               	addwf	?i2___awdiv,w,c
 14813  0029C2  6E0F               	movwf	i2___wmul@multiplier,c
 14814  0029C4  0E00               	movlw	0
 14815  0029C6  2008               	addwfc	?i2___awdiv+1,w,c
 14816  0029C8  6E10               	movwf	i2___wmul@multiplier+1,c
 14817  0029CA  0E00               	movlw	0
 14818  0029CC  6E12               	movwf	i2___wmul@multiplicand+1,c
 14819  0029CE  0E03               	movlw	3
 14820  0029D0  6E11               	movwf	i2___wmul@multiplicand,c
 14821  0029D2  EC43  F02A         	call	i2___wmul	;wreg free
 14822  0029D6  0E17               	movlw	low __npowers_
 14823  0029D8  240F               	addwf	?i2___wmul,w,c
 14824  0029DA  6EF6               	movwf	tblptrl,c
 14825  0029DC  0E7F               	movlw	high __npowers_
 14826  0029DE  2010               	addwfc	?i2___wmul+1,w,c
 14827  0029E0  6EF7               	movwf	tblptrh,c
 14828  0029E2                     	if	0	;There are less than 3 active tblptr bytes
 14829  0029E2                     	endif
 14830  0029E2  0009               	tblrd		*+
 14831  0029E4  CFF5 F021          	movff	tablat,i2___ftmul@f1
 14832  0029E8  0009               	tblrd		*+
 14833  0029EA  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 14834  0029EE  000A               	tblrd		*-
 14835  0029F0  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 14836  0029F4  EC7E  F022         	call	i2___ftmul	;wreg free
 14837  0029F8  C021  F033         	movff	?i2___ftmul,i2_scale$1832
 14838  0029FC  C022  F034         	movff	?i2___ftmul+1,i2_scale$1832+1
 14839  002A00  C023  F035         	movff	?i2___ftmul+2,i2_scale$1832+2
 14840                           
 14841                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 14842  002A04  C033  F021         	movff	i2_scale$1832,i2___ftmul@f1
 14843  002A08  C034  F022         	movff	i2_scale$1832+1,i2___ftmul@f1+1
 14844  002A0C  C035  F023         	movff	i2_scale$1832+2,i2___ftmul@f1+2
 14845  002A10  0E00               	movlw	0
 14846  002A12  6E12               	movwf	i2___wmul@multiplicand+1,c
 14847  002A14  0E03               	movlw	3
 14848  002A16  6E11               	movwf	i2___wmul@multiplicand,c
 14849  002A18  0E00               	movlw	0
 14850  002A1A  6E04               	movwf	i2___awmod@divisor+1,c
 14851  002A1C  0E0A               	movlw	10
 14852  002A1E  6E03               	movwf	i2___awmod@divisor,c
 14853  002A20  5036               	movf	i2scale@scl,w,c
 14854  002A22  6E01               	movwf	i2___awmod@dividend,c
 14855  002A24  6A02               	clrf	i2___awmod@dividend+1,c
 14856  002A26  BE01               	btfsc	i2___awmod@dividend,7,c
 14857  002A28  0602               	decf	i2___awmod@dividend+1,f,c
 14858  002A2A  EC7B  F027         	call	i2___awmod	;wreg free
 14859  002A2E  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 14860  002A32  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14861  002A36  EC43  F02A         	call	i2___wmul	;wreg free
 14862  002A3A  0E17               	movlw	low __npowers_
 14863  002A3C  240F               	addwf	?i2___wmul,w,c
 14864  002A3E  6EF6               	movwf	tblptrl,c
 14865  002A40  0E7F               	movlw	high __npowers_
 14866  002A42  2010               	addwfc	?i2___wmul+1,w,c
 14867  002A44  6EF7               	movwf	tblptrh,c
 14868  002A46                     	if	0	;There are less than 3 active tblptr bytes
 14869  002A46                     	endif
 14870  002A46  0009               	tblrd		*+
 14871  002A48  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14872  002A4C  0009               	tblrd		*+
 14873  002A4E  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14874  002A52  000A               	tblrd		*-
 14875  002A54  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14876  002A58  EC7E  F022         	call	i2___ftmul	;wreg free
 14877  002A5C  C021  F030         	movff	?i2___ftmul,?i2_scale
 14878  002A60  C022  F031         	movff	?i2___ftmul+1,?i2_scale+1
 14879  002A64  C023  F032         	movff	?i2___ftmul+2,?i2_scale+2
 14880  002A68  0012               	return	
 14881  002A6A                     i2l4162:
 14882                           
 14883                           ;doprnt.c: 432: else if(scl > 10)
 14884  002A6A  5036               	movf	i2scale@scl,w,c
 14885  002A6C  0A80               	xorlw	128
 14886  002A6E  0F75               	addlw	-139
 14887  002A70  A0D8               	btfss	status,0,c
 14888  002A72  D04D               	goto	i2l4168
 14889                           
 14890                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 14891  002A74  0E00               	movlw	0
 14892  002A76  6E0A               	movwf	i2___awdiv@divisor+1,c
 14893  002A78  0E0A               	movlw	10
 14894  002A7A  6E09               	movwf	i2___awdiv@divisor,c
 14895  002A7C  5036               	movf	i2scale@scl,w,c
 14896  002A7E  6E07               	movwf	i2___awdiv@dividend,c
 14897  002A80  6A08               	clrf	i2___awdiv@dividend+1,c
 14898  002A82  BE07               	btfsc	i2___awdiv@dividend,7,c
 14899  002A84  0608               	decf	i2___awdiv@dividend+1,f,c
 14900  002A86  EC43  F026         	call	i2___awdiv	;wreg free
 14901  002A8A  0E09               	movlw	9
 14902  002A8C  2407               	addwf	?i2___awdiv,w,c
 14903  002A8E  6E0F               	movwf	i2___wmul@multiplier,c
 14904  002A90  0E00               	movlw	0
 14905  002A92  2008               	addwfc	?i2___awdiv+1,w,c
 14906  002A94  6E10               	movwf	i2___wmul@multiplier+1,c
 14907  002A96  0E00               	movlw	0
 14908  002A98  6E12               	movwf	i2___wmul@multiplicand+1,c
 14909  002A9A  0E03               	movlw	3
 14910  002A9C  6E11               	movwf	i2___wmul@multiplicand,c
 14911  002A9E  EC43  F02A         	call	i2___wmul	;wreg free
 14912  002AA2  0E17               	movlw	low __npowers_
 14913  002AA4  240F               	addwf	?i2___wmul,w,c
 14914  002AA6  6EF6               	movwf	tblptrl,c
 14915  002AA8  0E7F               	movlw	high __npowers_
 14916  002AAA  2010               	addwfc	?i2___wmul+1,w,c
 14917  002AAC  6EF7               	movwf	tblptrh,c
 14918  002AAE                     	if	0	;There are less than 3 active tblptr bytes
 14919  002AAE                     	endif
 14920  002AAE  0009               	tblrd		*+
 14921  002AB0  CFF5 F021          	movff	tablat,i2___ftmul@f1
 14922  002AB4  0009               	tblrd		*+
 14923  002AB6  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 14924  002ABA  000A               	tblrd		*-
 14925  002ABC  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 14926  002AC0  0E00               	movlw	0
 14927  002AC2  6E12               	movwf	i2___wmul@multiplicand+1,c
 14928  002AC4  0E03               	movlw	3
 14929  002AC6  6E11               	movwf	i2___wmul@multiplicand,c
 14930  002AC8  0E00               	movlw	0
 14931  002ACA  6E04               	movwf	i2___awmod@divisor+1,c
 14932  002ACC  0E0A               	movlw	10
 14933  002ACE  6E03               	movwf	i2___awmod@divisor,c
 14934  002AD0  5036               	movf	i2scale@scl,w,c
 14935  002AD2  6E01               	movwf	i2___awmod@dividend,c
 14936  002AD4  6A02               	clrf	i2___awmod@dividend+1,c
 14937  002AD6  BE01               	btfsc	i2___awmod@dividend,7,c
 14938  002AD8  0602               	decf	i2___awmod@dividend+1,f,c
 14939  002ADA  EC7B  F027         	call	i2___awmod	;wreg free
 14940  002ADE  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 14941  002AE2  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14942  002AE6  EC43  F02A         	call	i2___wmul	;wreg free
 14943  002AEA  0E17               	movlw	low __npowers_
 14944  002AEC  240F               	addwf	?i2___wmul,w,c
 14945  002AEE  6EF6               	movwf	tblptrl,c
 14946  002AF0  0E7F               	movlw	high __npowers_
 14947  002AF2  2010               	addwfc	?i2___wmul+1,w,c
 14948  002AF4  6EF7               	movwf	tblptrh,c
 14949  002AF6                     	if	0	;There are less than 3 active tblptr bytes
 14950  002AF6                     	endif
 14951  002AF6  0009               	tblrd		*+
 14952  002AF8  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14953  002AFC  0009               	tblrd		*+
 14954  002AFE  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14955  002B02  000A               	tblrd		*-
 14956  002B04  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14957  002B08  EC7E  F022         	call	i2___ftmul	;wreg free
 14958  002B0C  D7A7               	goto	L8
 14959  002B0E                     i2l4168:
 14960                           
 14961                           ;doprnt.c: 434: return _npowers_[scl];
 14962  002B0E  5036               	movf	i2scale@scl,w,c
 14963  002B10  0D03               	mullw	3
 14964  002B12  0E17               	movlw	low __npowers_
 14965  002B14  24F3               	addwf	prodl,w,c
 14966  002B16  6EF6               	movwf	tblptrl,c
 14967  002B18  0E7F               	movlw	high __npowers_
 14968  002B1A  20F4               	addwfc	prodh,w,c
 14969  002B1C  6EF7               	movwf	tblptrh,c
 14970  002B1E                     	if	0	;There are less than 3 active tblptr bytes
 14971  002B1E                     	endif
 14972  002B1E  0009               	tblrd		*+
 14973  002B20  CFF5 F030          	movff	tablat,?i2_scale
 14974  002B24  0009               	tblrd		*+
 14975  002B26  CFF5 F031          	movff	tablat,?i2_scale+1
 14976  002B2A  000A               	tblrd		*-
 14977  002B2C  CFF5 F032          	movff	tablat,?i2_scale+2
 14978  002B30  0012               	return	
 14979  002B32                     i2l4172:
 14980                           
 14981                           ;doprnt.c: 435: }
 14982                           ;doprnt.c: 436: if(scl>=110)
 14983  002B32  5036               	movf	i2scale@scl,w,c
 14984  002B34  0A80               	xorlw	128
 14985  002B36  0F12               	addlw	-238
 14986  002B38  A0D8               	btfss	status,0,c
 14987  002B3A  D091               	goto	i2l4180
 14988                           
 14989                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 14990  002B3C  0E00               	movlw	0
 14991  002B3E  6E12               	movwf	i2___wmul@multiplicand+1,c
 14992  002B40  0E03               	movlw	3
 14993  002B42  6E11               	movwf	i2___wmul@multiplicand,c
 14994  002B44  0E00               	movlw	0
 14995  002B46  6E0A               	movwf	i2___awdiv@divisor+1,c
 14996  002B48  0E0A               	movlw	10
 14997  002B4A  6E09               	movwf	i2___awdiv@divisor,c
 14998  002B4C  0E00               	movlw	0
 14999  002B4E  6E04               	movwf	i2___awmod@divisor+1,c
 15000  002B50  0E64               	movlw	100
 15001  002B52  6E03               	movwf	i2___awmod@divisor,c
 15002  002B54  5036               	movf	i2scale@scl,w,c
 15003  002B56  6E01               	movwf	i2___awmod@dividend,c
 15004  002B58  6A02               	clrf	i2___awmod@dividend+1,c
 15005  002B5A  BE01               	btfsc	i2___awmod@dividend,7,c
 15006  002B5C  0602               	decf	i2___awmod@dividend+1,f,c
 15007  002B5E  EC7B  F027         	call	i2___awmod	;wreg free
 15008  002B62  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 15009  002B66  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 15010  002B6A  EC43  F026         	call	i2___awdiv	;wreg free
 15011  002B6E  0E09               	movlw	9
 15012  002B70  2407               	addwf	?i2___awdiv,w,c
 15013  002B72  6E0F               	movwf	i2___wmul@multiplier,c
 15014  002B74  0E00               	movlw	0
 15015  002B76  2008               	addwfc	?i2___awdiv+1,w,c
 15016  002B78  6E10               	movwf	i2___wmul@multiplier+1,c
 15017  002B7A  EC43  F02A         	call	i2___wmul	;wreg free
 15018  002B7E  0E3E               	movlw	low __powers_
 15019  002B80  240F               	addwf	?i2___wmul,w,c
 15020  002B82  6EF6               	movwf	tblptrl,c
 15021  002B84  0E7F               	movlw	high __powers_
 15022  002B86  2010               	addwfc	?i2___wmul+1,w,c
 15023  002B88  6EF7               	movwf	tblptrh,c
 15024  002B8A                     	if	0	;There are less than 3 active tblptr bytes
 15025  002B8A                     	endif
 15026  002B8A  0009               	tblrd		*+
 15027  002B8C  CFF5 F024          	movff	tablat,i2___ftmul@f2
 15028  002B90  0009               	tblrd		*+
 15029  002B92  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 15030  002B96  000A               	tblrd		*-
 15031  002B98  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 15032  002B9C  0E00               	movlw	0
 15033  002B9E  6E0A               	movwf	i2___awdiv@divisor+1,c
 15034  002BA0  0E64               	movlw	100
 15035  002BA2  6E09               	movwf	i2___awdiv@divisor,c
 15036  002BA4  5036               	movf	i2scale@scl,w,c
 15037  002BA6  6E07               	movwf	i2___awdiv@dividend,c
 15038  002BA8  6A08               	clrf	i2___awdiv@dividend+1,c
 15039  002BAA  BE07               	btfsc	i2___awdiv@dividend,7,c
 15040  002BAC  0608               	decf	i2___awdiv@dividend+1,f,c
 15041  002BAE  EC43  F026         	call	i2___awdiv	;wreg free
 15042  002BB2  0E12               	movlw	18
 15043  002BB4  2407               	addwf	?i2___awdiv,w,c
 15044  002BB6  6E0F               	movwf	i2___wmul@multiplier,c
 15045  002BB8  0E00               	movlw	0
 15046  002BBA  2008               	addwfc	?i2___awdiv+1,w,c
 15047  002BBC  6E10               	movwf	i2___wmul@multiplier+1,c
 15048  002BBE  0E00               	movlw	0
 15049  002BC0  6E12               	movwf	i2___wmul@multiplicand+1,c
 15050  002BC2  0E03               	movlw	3
 15051  002BC4  6E11               	movwf	i2___wmul@multiplicand,c
 15052  002BC6  EC43  F02A         	call	i2___wmul	;wreg free
 15053  002BCA  0E3E               	movlw	low __powers_
 15054  002BCC  240F               	addwf	?i2___wmul,w,c
 15055  002BCE  6EF6               	movwf	tblptrl,c
 15056  002BD0  0E7F               	movlw	high __powers_
 15057  002BD2  2010               	addwfc	?i2___wmul+1,w,c
 15058  002BD4  6EF7               	movwf	tblptrh,c
 15059  002BD6                     	if	0	;There are less than 3 active tblptr bytes
 15060  002BD6                     	endif
 15061  002BD6  0009               	tblrd		*+
 15062  002BD8  CFF5 F021          	movff	tablat,i2___ftmul@f1
 15063  002BDC  0009               	tblrd		*+
 15064  002BDE  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 15065  002BE2  000A               	tblrd		*-
 15066  002BE4  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 15067  002BE8  EC7E  F022         	call	i2___ftmul	;wreg free
 15068  002BEC  C021  F033         	movff	?i2___ftmul,i2_scale$1832
 15069  002BF0  C022  F034         	movff	?i2___ftmul+1,i2_scale$1832+1
 15070  002BF4  C023  F035         	movff	?i2___ftmul+2,i2_scale$1832+2
 15071                           
 15072                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 15073  002BF8  C033  F021         	movff	i2_scale$1832,i2___ftmul@f1
 15074  002BFC  C034  F022         	movff	i2_scale$1832+1,i2___ftmul@f1+1
 15075  002C00  C035  F023         	movff	i2_scale$1832+2,i2___ftmul@f1+2
 15076  002C04  0E00               	movlw	0
 15077  002C06  6E12               	movwf	i2___wmul@multiplicand+1,c
 15078  002C08  0E03               	movlw	3
 15079  002C0A  6E11               	movwf	i2___wmul@multiplicand,c
 15080  002C0C  0E00               	movlw	0
 15081  002C0E  6E04               	movwf	i2___awmod@divisor+1,c
 15082  002C10  0E0A               	movlw	10
 15083  002C12  6E03               	movwf	i2___awmod@divisor,c
 15084  002C14  5036               	movf	i2scale@scl,w,c
 15085  002C16  6E01               	movwf	i2___awmod@dividend,c
 15086  002C18  6A02               	clrf	i2___awmod@dividend+1,c
 15087  002C1A  BE01               	btfsc	i2___awmod@dividend,7,c
 15088  002C1C  0602               	decf	i2___awmod@dividend+1,f,c
 15089  002C1E  EC7B  F027         	call	i2___awmod	;wreg free
 15090  002C22  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 15091  002C26  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15092  002C2A  EC43  F02A         	call	i2___wmul	;wreg free
 15093  002C2E  0E3E               	movlw	low __powers_
 15094  002C30  240F               	addwf	?i2___wmul,w,c
 15095  002C32  6EF6               	movwf	tblptrl,c
 15096  002C34  0E7F               	movlw	high __powers_
 15097  002C36  2010               	addwfc	?i2___wmul+1,w,c
 15098  002C38  6EF7               	movwf	tblptrh,c
 15099  002C3A                     	if	0	;There are less than 3 active tblptr bytes
 15100  002C3A                     	endif
 15101  002C3A  0009               	tblrd		*+
 15102  002C3C  CFF5 F024          	movff	tablat,i2___ftmul@f2
 15103  002C40  0009               	tblrd		*+
 15104  002C42  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 15105  002C46  000A               	tblrd		*-
 15106  002C48  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 15107  002C4C  EC7E  F022         	call	i2___ftmul	;wreg free
 15108  002C50  C021  F030         	movff	?i2___ftmul,?i2_scale
 15109  002C54  C022  F031         	movff	?i2___ftmul+1,?i2_scale+1
 15110  002C58  C023  F032         	movff	?i2___ftmul+2,?i2_scale+2
 15111  002C5C  0012               	return	
 15112  002C5E                     i2l4180:
 15113                           
 15114                           ;doprnt.c: 438: else if(scl > 10)
 15115  002C5E  5036               	movf	i2scale@scl,w,c
 15116  002C60  0A80               	xorlw	128
 15117  002C62  0F75               	addlw	-139
 15118  002C64  A0D8               	btfss	status,0,c
 15119  002C66  D04D               	goto	i2l4186
 15120                           
 15121                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 15122  002C68  0E00               	movlw	0
 15123  002C6A  6E0A               	movwf	i2___awdiv@divisor+1,c
 15124  002C6C  0E0A               	movlw	10
 15125  002C6E  6E09               	movwf	i2___awdiv@divisor,c
 15126  002C70  5036               	movf	i2scale@scl,w,c
 15127  002C72  6E07               	movwf	i2___awdiv@dividend,c
 15128  002C74  6A08               	clrf	i2___awdiv@dividend+1,c
 15129  002C76  BE07               	btfsc	i2___awdiv@dividend,7,c
 15130  002C78  0608               	decf	i2___awdiv@dividend+1,f,c
 15131  002C7A  EC43  F026         	call	i2___awdiv	;wreg free
 15132  002C7E  0E09               	movlw	9
 15133  002C80  2407               	addwf	?i2___awdiv,w,c
 15134  002C82  6E0F               	movwf	i2___wmul@multiplier,c
 15135  002C84  0E00               	movlw	0
 15136  002C86  2008               	addwfc	?i2___awdiv+1,w,c
 15137  002C88  6E10               	movwf	i2___wmul@multiplier+1,c
 15138  002C8A  0E00               	movlw	0
 15139  002C8C  6E12               	movwf	i2___wmul@multiplicand+1,c
 15140  002C8E  0E03               	movlw	3
 15141  002C90  6E11               	movwf	i2___wmul@multiplicand,c
 15142  002C92  EC43  F02A         	call	i2___wmul	;wreg free
 15143  002C96  0E3E               	movlw	low __powers_
 15144  002C98  240F               	addwf	?i2___wmul,w,c
 15145  002C9A  6EF6               	movwf	tblptrl,c
 15146  002C9C  0E7F               	movlw	high __powers_
 15147  002C9E  2010               	addwfc	?i2___wmul+1,w,c
 15148  002CA0  6EF7               	movwf	tblptrh,c
 15149  002CA2                     	if	0	;There are less than 3 active tblptr bytes
 15150  002CA2                     	endif
 15151  002CA2  0009               	tblrd		*+
 15152  002CA4  CFF5 F021          	movff	tablat,i2___ftmul@f1
 15153  002CA8  0009               	tblrd		*+
 15154  002CAA  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 15155  002CAE  000A               	tblrd		*-
 15156  002CB0  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 15157  002CB4  0E00               	movlw	0
 15158  002CB6  6E12               	movwf	i2___wmul@multiplicand+1,c
 15159  002CB8  0E03               	movlw	3
 15160  002CBA  6E11               	movwf	i2___wmul@multiplicand,c
 15161  002CBC  0E00               	movlw	0
 15162  002CBE  6E04               	movwf	i2___awmod@divisor+1,c
 15163  002CC0  0E0A               	movlw	10
 15164  002CC2  6E03               	movwf	i2___awmod@divisor,c
 15165  002CC4  5036               	movf	i2scale@scl,w,c
 15166  002CC6  6E01               	movwf	i2___awmod@dividend,c
 15167  002CC8  6A02               	clrf	i2___awmod@dividend+1,c
 15168  002CCA  BE01               	btfsc	i2___awmod@dividend,7,c
 15169  002CCC  0602               	decf	i2___awmod@dividend+1,f,c
 15170  002CCE  EC7B  F027         	call	i2___awmod	;wreg free
 15171  002CD2  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 15172  002CD6  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15173  002CDA  EC43  F02A         	call	i2___wmul	;wreg free
 15174  002CDE  0E3E               	movlw	low __powers_
 15175  002CE0  240F               	addwf	?i2___wmul,w,c
 15176  002CE2  6EF6               	movwf	tblptrl,c
 15177  002CE4  0E7F               	movlw	high __powers_
 15178  002CE6  2010               	addwfc	?i2___wmul+1,w,c
 15179  002CE8  6EF7               	movwf	tblptrh,c
 15180  002CEA                     	if	0	;There are less than 3 active tblptr bytes
 15181  002CEA                     	endif
 15182  002CEA  0009               	tblrd		*+
 15183  002CEC  CFF5 F024          	movff	tablat,i2___ftmul@f2
 15184  002CF0  0009               	tblrd		*+
 15185  002CF2  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 15186  002CF6  000A               	tblrd		*-
 15187  002CF8  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 15188  002CFC  EC7E  F022         	call	i2___ftmul	;wreg free
 15189  002D00  D7A7               	goto	L9
 15190  002D02                     i2l4186:
 15191                           
 15192                           ;doprnt.c: 440: return _powers_[scl];
 15193  002D02  5036               	movf	i2scale@scl,w,c
 15194  002D04  0D03               	mullw	3
 15195  002D06  0E3E               	movlw	low __powers_
 15196  002D08  24F3               	addwf	prodl,w,c
 15197  002D0A  6EF6               	movwf	tblptrl,c
 15198  002D0C  0E7F               	movlw	high __powers_
 15199  002D0E  20F4               	addwfc	prodh,w,c
 15200  002D10  6EF7               	movwf	tblptrh,c
 15201  002D12                     	if	0	;There are less than 3 active tblptr bytes
 15202  002D12                     	endif
 15203  002D12  0009               	tblrd		*+
 15204  002D14  CFF5 F030          	movff	tablat,?i2_scale
 15205  002D18  0009               	tblrd		*+
 15206  002D1A  CFF5 F031          	movff	tablat,?i2_scale+1
 15207  002D1E  000A               	tblrd		*-
 15208  002D20  CFF5 F032          	movff	tablat,?i2_scale+2
 15209  002D24  0012               	return	
 15210  002D26                     __end_ofi2_scale:
 15211                           	opt stack 0
 15212                           tosu	equ	0xFFF
 15213                           tosh	equ	0xFFE
 15214                           tosl	equ	0xFFD
 15215                           pclatu	equ	0xFFB
 15216                           pclath	equ	0xFFA
 15217                           tblptru	equ	0xFF8
 15218                           tblptrh	equ	0xFF7
 15219                           tblptrl	equ	0xFF6
 15220                           tablat	equ	0xFF5
 15221                           prodh	equ	0xFF4
 15222                           prodl	equ	0xFF3
 15223                           intcon	equ	0xFF2
 15224                           intcon2	equ	0xFF1
 15225                           intcon3	equ	0xFF0
 15226                           postinc0	equ	0xFEE
 15227                           fsr0h	equ	0xFEA
 15228                           fsr0l	equ	0xFE9
 15229                           wreg	equ	0xFE8
 15230                           postdec1	equ	0xFE5
 15231                           fsr1h	equ	0xFE2
 15232                           fsr1l	equ	0xFE1
 15233                           indf2	equ	0xFDF
 15234                           postinc2	equ	0xFDE
 15235                           postdec2	equ	0xFDD
 15236                           fsr2h	equ	0xFDA
 15237                           fsr2l	equ	0xFD9
 15238                           status	equ	0xFD8
 15239                           
 15240 ;; *************** function i2_putch *****************
 15241 ;; Defined at:
 15242 ;;		line 111 in file "mcc_generated_files/eusart1.c"
 15243 ;; Parameters:    Size  Location     Type
 15244 ;;  txData          1    wreg     unsigned char 
 15245 ;; Auto vars:     Size  Location     Type
 15246 ;;  txData          1    1[COMRAM] unsigned char 
 15247 ;; Return value:  Size  Location     Type
 15248 ;;                  1    wreg      void 
 15249 ;; Registers used:
 15250 ;;		wreg, status,2, cstack
 15251 ;; Tracked objects:
 15252 ;;		On entry : 0/0
 15253 ;;		On exit  : 0/0
 15254 ;;		Unchanged: 0/0
 15255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15256 ;;      Params:         0       0       0       0       0       0       0
 15257 ;;      Locals:         1       0       0       0       0       0       0
 15258 ;;      Temps:          0       0       0       0       0       0       0
 15259 ;;      Totals:         1       0       0       0       0       0       0
 15260 ;;Total ram usage:        1 bytes
 15261 ;; Hardware stack levels used:    1
 15262 ;; Hardware stack levels required when called:    1
 15263 ;; This function calls:
 15264 ;;		i2_EUSART1_Write
 15265 ;; This function is called by:
 15266 ;;		_printf
 15267 ;; This function uses a non-reentrant model
 15268 ;;
 15269                           
 15270                           	psect	text51
 15271  0055C2                     __ptext51:
 15272                           	opt stack 0
 15273  0055C2                     i2_putch:
 15274                           	opt stack 20
 15275                           
 15276                           ;incstack = 0
 15277                           ;i2putch@txData stored from wreg
 15278  0055C2  6E02               	movwf	i2putch@txData,c
 15279                           
 15280                           ;eusart1.c: 113: EUSART1_Write(txData);
 15281  0055C4  5002               	movf	i2putch@txData,w,c
 15282  0055C6  ECD6  F02A         	call	i2_EUSART1_Write
 15283  0055CA  0012               	return		;funcret
 15284  0055CC                     __end_ofi2_putch:
 15285                           	opt stack 0
 15286                           tosu	equ	0xFFF
 15287                           tosh	equ	0xFFE
 15288                           tosl	equ	0xFFD
 15289                           pclatu	equ	0xFFB
 15290                           pclath	equ	0xFFA
 15291                           tblptru	equ	0xFF8
 15292                           tblptrh	equ	0xFF7
 15293                           tblptrl	equ	0xFF6
 15294                           tablat	equ	0xFF5
 15295                           prodh	equ	0xFF4
 15296                           prodl	equ	0xFF3
 15297                           intcon	equ	0xFF2
 15298                           intcon2	equ	0xFF1
 15299                           intcon3	equ	0xFF0
 15300                           postinc0	equ	0xFEE
 15301                           fsr0h	equ	0xFEA
 15302                           fsr0l	equ	0xFE9
 15303                           wreg	equ	0xFE8
 15304                           postdec1	equ	0xFE5
 15305                           fsr1h	equ	0xFE2
 15306                           fsr1l	equ	0xFE1
 15307                           indf2	equ	0xFDF
 15308                           postinc2	equ	0xFDE
 15309                           postdec2	equ	0xFDD
 15310                           fsr2h	equ	0xFDA
 15311                           fsr2l	equ	0xFD9
 15312                           status	equ	0xFD8
 15313                           
 15314 ;; *************** function i2_EUSART1_Write *****************
 15315 ;; Defined at:
 15316 ;;		line 97 in file "mcc_generated_files/eusart1.c"
 15317 ;; Parameters:    Size  Location     Type
 15318 ;;  txData          1    wreg     unsigned char 
 15319 ;; Auto vars:     Size  Location     Type
 15320 ;;  txData          1    0[COMRAM] unsigned char 
 15321 ;; Return value:  Size  Location     Type
 15322 ;;                  1    wreg      void 
 15323 ;; Registers used:
 15324 ;;		wreg
 15325 ;; Tracked objects:
 15326 ;;		On entry : 0/0
 15327 ;;		On exit  : 0/0
 15328 ;;		Unchanged: 0/0
 15329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15330 ;;      Params:         0       0       0       0       0       0       0
 15331 ;;      Locals:         1       0       0       0       0       0       0
 15332 ;;      Temps:          0       0       0       0       0       0       0
 15333 ;;      Totals:         1       0       0       0       0       0       0
 15334 ;;Total ram usage:        1 bytes
 15335 ;; Hardware stack levels used:    1
 15336 ;; This function calls:
 15337 ;;		Nothing
 15338 ;; This function is called by:
 15339 ;;		i2_putch
 15340 ;; This function uses a non-reentrant model
 15341 ;;
 15342                           
 15343                           	psect	text52
 15344  0055AC                     __ptext52:
 15345                           	opt stack 0
 15346  0055AC                     i2_EUSART1_Write:
 15347                           	opt stack 20
 15348                           
 15349                           ;incstack = 0
 15350                           ;i2EUSART1_Write@txData stored from wreg
 15351  0055AC  6E01               	movwf	i2EUSART1_Write@txData,c
 15352  0055AE                     i2l238:
 15353  0055AE  A89E               	btfss	3998,4,c	;volatile
 15354  0055B0  D7FE               	goto	i2l238
 15355                           
 15356                           ;eusart1.c: 101: }
 15357                           ;eusart1.c: 103: TXREG1 = txData;
 15358  0055B2  C001  FFAD         	movff	i2EUSART1_Write@txData,4013	;volatile
 15359  0055B6  0012               	return		;funcret
 15360  0055B8                     __end_ofi2_EUSART1_Write:
 15361                           	opt stack 0
 15362                           tosu	equ	0xFFF
 15363                           tosh	equ	0xFFE
 15364                           tosl	equ	0xFFD
 15365                           pclatu	equ	0xFFB
 15366                           pclath	equ	0xFFA
 15367                           tblptru	equ	0xFF8
 15368                           tblptrh	equ	0xFF7
 15369                           tblptrl	equ	0xFF6
 15370                           tablat	equ	0xFF5
 15371                           prodh	equ	0xFF4
 15372                           prodl	equ	0xFF3
 15373                           intcon	equ	0xFF2
 15374                           intcon2	equ	0xFF1
 15375                           intcon3	equ	0xFF0
 15376                           postinc0	equ	0xFEE
 15377                           fsr0h	equ	0xFEA
 15378                           fsr0l	equ	0xFE9
 15379                           wreg	equ	0xFE8
 15380                           postdec1	equ	0xFE5
 15381                           fsr1h	equ	0xFE2
 15382                           fsr1l	equ	0xFE1
 15383                           indf2	equ	0xFDF
 15384                           postinc2	equ	0xFDE
 15385                           postdec2	equ	0xFDD
 15386                           fsr2h	equ	0xFDA
 15387                           fsr2l	equ	0xFD9
 15388                           status	equ	0xFD8
 15389                           
 15390 ;; *************** function i2_isdigit *****************
 15391 ;; Defined at:
 15392 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\isdigit.c"
 15393 ;; Parameters:    Size  Location     Type
 15394 ;;  c               1    wreg     unsigned char 
 15395 ;; Auto vars:     Size  Location     Type
 15396 ;;  c               1    2[COMRAM] unsigned char 
 15397 ;; Return value:  Size  Location     Type
 15398 ;;		None               void
 15399 ;; Registers used:
 15400 ;;		wreg, status,2, status,0
 15401 ;; Tracked objects:
 15402 ;;		On entry : 0/0
 15403 ;;		On exit  : 0/0
 15404 ;;		Unchanged: 0/0
 15405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15406 ;;      Params:         0       0       0       0       0       0       0
 15407 ;;      Locals:         2       0       0       0       0       0       0
 15408 ;;      Temps:          1       0       0       0       0       0       0
 15409 ;;      Totals:         3       0       0       0       0       0       0
 15410 ;;Total ram usage:        3 bytes
 15411 ;; Hardware stack levels used:    1
 15412 ;; This function calls:
 15413 ;;		Nothing
 15414 ;; This function is called by:
 15415 ;;		i2__doprnt
 15416 ;; This function uses a non-reentrant model
 15417 ;;
 15418                           
 15419                           	psect	text53
 15420  005512                     __ptext53:
 15421                           	opt stack 0
 15422  005512                     i2_isdigit:
 15423                           	opt stack 21
 15424                           
 15425                           ;incstack = 0
 15426                           ;i2isdigit@c stored from wreg
 15427  005512  6E03               	movwf	i2isdigit@c,c
 15428  005514  0E00               	movlw	0
 15429  005516  6E02               	movwf	i2_isdigit$1198,c
 15430  005518  0E3A               	movlw	58
 15431  00551A  6003               	cpfslt	i2isdigit@c,c
 15432  00551C  D005               	goto	i2l4390
 15433  00551E  0E2F               	movlw	47
 15434  005520  6403               	cpfsgt	i2isdigit@c,c
 15435  005522  D002               	goto	i2l4390
 15436  005524  0E01               	movlw	1
 15437  005526  6E02               	movwf	i2_isdigit$1198,c
 15438  005528                     i2l4390:
 15439  005528  C002  F001         	movff	i2_isdigit$1198,??i2_isdigit
 15440  00552C  3001               	rrcf	??i2_isdigit,w,c
 15441  00552E  0012               	return	
 15442  005530                     __end_ofi2_isdigit:
 15443                           	opt stack 0
 15444                           tosu	equ	0xFFF
 15445                           tosh	equ	0xFFE
 15446                           tosl	equ	0xFFD
 15447                           pclatu	equ	0xFFB
 15448                           pclath	equ	0xFFA
 15449                           tblptru	equ	0xFF8
 15450                           tblptrh	equ	0xFF7
 15451                           tblptrl	equ	0xFF6
 15452                           tablat	equ	0xFF5
 15453                           prodh	equ	0xFF4
 15454                           prodl	equ	0xFF3
 15455                           intcon	equ	0xFF2
 15456                           intcon2	equ	0xFF1
 15457                           intcon3	equ	0xFF0
 15458                           postinc0	equ	0xFEE
 15459                           fsr0h	equ	0xFEA
 15460                           fsr0l	equ	0xFE9
 15461                           wreg	equ	0xFE8
 15462                           postdec1	equ	0xFE5
 15463                           fsr1h	equ	0xFE2
 15464                           fsr1l	equ	0xFE1
 15465                           indf2	equ	0xFDF
 15466                           postinc2	equ	0xFDE
 15467                           postdec2	equ	0xFDD
 15468                           fsr2h	equ	0xFDA
 15469                           fsr2l	equ	0xFD9
 15470                           status	equ	0xFD8
 15471                           
 15472 ;; *************** function i2_fround *****************
 15473 ;; Defined at:
 15474 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
 15475 ;; Parameters:    Size  Location     Type
 15476 ;;  prec            1    wreg     unsigned char 
 15477 ;; Auto vars:     Size  Location     Type
 15478 ;;  prec            1   56[COMRAM] unsigned char 
 15479 ;; Return value:  Size  Location     Type
 15480 ;;                  3   47[COMRAM] unsigned char 
 15481 ;; Registers used:
 15482 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15483 ;; Tracked objects:
 15484 ;;		On entry : 0/0
 15485 ;;		On exit  : 0/0
 15486 ;;		Unchanged: 0/0
 15487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15488 ;;      Params:         3       0       0       0       0       0       0
 15489 ;;      Locals:         7       0       0       0       0       0       0
 15490 ;;      Temps:          0       0       0       0       0       0       0
 15491 ;;      Totals:        10       0       0       0       0       0       0
 15492 ;;Total ram usage:       10 bytes
 15493 ;; Hardware stack levels used:    1
 15494 ;; Hardware stack levels required when called:    2
 15495 ;; This function calls:
 15496 ;;		i2___awdiv
 15497 ;;		i2___awmod
 15498 ;;		i2___ftmul
 15499 ;;		i2___wmul
 15500 ;; This function is called by:
 15501 ;;		i2__doprnt
 15502 ;; This function uses a non-reentrant model
 15503 ;;
 15504                           
 15505                           	psect	text54
 15506  00323A                     __ptext54:
 15507                           	opt stack 0
 15508  00323A                     i2_fround:
 15509                           	opt stack 19
 15510                           
 15511                           ;incstack = 0
 15512                           ;i2fround@prec stored from wreg
 15513  00323A  6E39               	movwf	i2fround@prec,c
 15514                           
 15515                           ;doprnt.c: 413: if(prec>=110)
 15516  00323C  0E6D               	movlw	109
 15517  00323E  6439               	cpfsgt	i2fround@prec,c
 15518  003240  D09F               	goto	i2l4140
 15519                           
 15520                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15521  003242  0E00               	movlw	0
 15522  003244  6E12               	movwf	i2___wmul@multiplicand+1,c
 15523  003246  0E03               	movlw	3
 15524  003248  6E11               	movwf	i2___wmul@multiplicand,c
 15525  00324A  0E00               	movlw	0
 15526  00324C  6E0A               	movwf	i2___awdiv@divisor+1,c
 15527  00324E  0E0A               	movlw	10
 15528  003250  6E09               	movwf	i2___awdiv@divisor,c
 15529  003252  0E00               	movlw	0
 15530  003254  6E04               	movwf	i2___awmod@divisor+1,c
 15531  003256  0E64               	movlw	100
 15532  003258  6E03               	movwf	i2___awmod@divisor,c
 15533  00325A  C039  F001         	movff	i2fround@prec,i2___awmod@dividend
 15534  00325E  6A02               	clrf	i2___awmod@dividend+1,c
 15535  003260  EC7B  F027         	call	i2___awmod	;wreg free
 15536  003264  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 15537  003268  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 15538  00326C  EC43  F026         	call	i2___awdiv	;wreg free
 15539  003270  0E09               	movlw	9
 15540  003272  2407               	addwf	?i2___awdiv,w,c
 15541  003274  6E0F               	movwf	i2___wmul@multiplier,c
 15542  003276  0E00               	movlw	0
 15543  003278  2008               	addwfc	?i2___awdiv+1,w,c
 15544  00327A  6E10               	movwf	i2___wmul@multiplier+1,c
 15545  00327C  EC43  F02A         	call	i2___wmul	;wreg free
 15546  003280  0E17               	movlw	low __npowers_
 15547  003282  240F               	addwf	?i2___wmul,w,c
 15548  003284  6EF6               	movwf	tblptrl,c
 15549  003286  0E7F               	movlw	high __npowers_
 15550  003288  2010               	addwfc	?i2___wmul+1,w,c
 15551  00328A  6EF7               	movwf	tblptrh,c
 15552  00328C                     	if	0	;There are less than 3 active tblptr bytes
 15553  00328C                     	endif
 15554  00328C  0009               	tblrd		*+
 15555  00328E  CFF5 F024          	movff	tablat,i2___ftmul@f2
 15556  003292  0009               	tblrd		*+
 15557  003294  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 15558  003298  000A               	tblrd		*-
 15559  00329A  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 15560  00329E  0E00               	movlw	0
 15561  0032A0  6E0A               	movwf	i2___awdiv@divisor+1,c
 15562  0032A2  0E64               	movlw	100
 15563  0032A4  6E09               	movwf	i2___awdiv@divisor,c
 15564  0032A6  C039  F007         	movff	i2fround@prec,i2___awdiv@dividend
 15565  0032AA  6A08               	clrf	i2___awdiv@dividend+1,c
 15566  0032AC  EC43  F026         	call	i2___awdiv	;wreg free
 15567  0032B0  0E12               	movlw	18
 15568  0032B2  2407               	addwf	?i2___awdiv,w,c
 15569  0032B4  6E0F               	movwf	i2___wmul@multiplier,c
 15570  0032B6  0E00               	movlw	0
 15571  0032B8  2008               	addwfc	?i2___awdiv+1,w,c
 15572  0032BA  6E10               	movwf	i2___wmul@multiplier+1,c
 15573  0032BC  0E00               	movlw	0
 15574  0032BE  6E12               	movwf	i2___wmul@multiplicand+1,c
 15575  0032C0  0E03               	movlw	3
 15576  0032C2  6E11               	movwf	i2___wmul@multiplicand,c
 15577  0032C4  EC43  F02A         	call	i2___wmul	;wreg free
 15578  0032C8  0E17               	movlw	low __npowers_
 15579  0032CA  240F               	addwf	?i2___wmul,w,c
 15580  0032CC  6EF6               	movwf	tblptrl,c
 15581  0032CE  0E7F               	movlw	high __npowers_
 15582  0032D0  2010               	addwfc	?i2___wmul+1,w,c
 15583  0032D2  6EF7               	movwf	tblptrh,c
 15584  0032D4                     	if	0	;There are less than 3 active tblptr bytes
 15585  0032D4                     	endif
 15586  0032D4  0009               	tblrd		*+
 15587  0032D6  CFF5 F021          	movff	tablat,i2___ftmul@f1
 15588  0032DA  0009               	tblrd		*+
 15589  0032DC  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 15590  0032E0  000A               	tblrd		*-
 15591  0032E2  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 15592  0032E6  EC7E  F022         	call	i2___ftmul	;wreg free
 15593  0032EA  C021  F036         	movff	?i2___ftmul,i2_fround$1830
 15594  0032EE  C022  F037         	movff	?i2___ftmul+1,i2_fround$1830+1
 15595  0032F2  C023  F038         	movff	?i2___ftmul+2,i2_fround$1830+2
 15596                           
 15597                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15598  0032F6  0E00               	movlw	0
 15599  0032F8  6E12               	movwf	i2___wmul@multiplicand+1,c
 15600  0032FA  0E03               	movlw	3
 15601  0032FC  6E11               	movwf	i2___wmul@multiplicand,c
 15602  0032FE  0E00               	movlw	0
 15603  003300  6E04               	movwf	i2___awmod@divisor+1,c
 15604  003302  0E0A               	movlw	10
 15605  003304  6E03               	movwf	i2___awmod@divisor,c
 15606  003306  C039  F001         	movff	i2fround@prec,i2___awmod@dividend
 15607  00330A  6A02               	clrf	i2___awmod@dividend+1,c
 15608  00330C  EC7B  F027         	call	i2___awmod	;wreg free
 15609  003310  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 15610  003314  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15611  003318  EC43  F02A         	call	i2___wmul	;wreg free
 15612  00331C  0E17               	movlw	low __npowers_
 15613  00331E  240F               	addwf	?i2___wmul,w,c
 15614  003320  6EF6               	movwf	tblptrl,c
 15615  003322  0E7F               	movlw	high __npowers_
 15616  003324  2010               	addwfc	?i2___wmul+1,w,c
 15617  003326  6EF7               	movwf	tblptrh,c
 15618  003328                     	if	0	;There are less than 3 active tblptr bytes
 15619  003328                     	endif
 15620  003328  0009               	tblrd		*+
 15621  00332A  CFF5 F024          	movff	tablat,i2___ftmul@f2
 15622  00332E  0009               	tblrd		*+
 15623  003330  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 15624  003334  000A               	tblrd		*-
 15625  003336  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 15626  00333A  C036  F021         	movff	i2_fround$1830,i2___ftmul@f1
 15627  00333E  C037  F022         	movff	i2_fround$1830+1,i2___ftmul@f1+1
 15628  003342  C038  F023         	movff	i2_fround$1830+2,i2___ftmul@f1+2
 15629  003346  EC7E  F022         	call	i2___ftmul	;wreg free
 15630  00334A  C021  F033         	movff	?i2___ftmul,i2_fround$1831
 15631  00334E  C022  F034         	movff	?i2___ftmul+1,i2_fround$1831+1
 15632  003352  C023  F035         	movff	?i2___ftmul+2,i2_fround$1831+2
 15633                           
 15634                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15635  003356  C033  F021         	movff	i2_fround$1831,i2___ftmul@f1
 15636  00335A  C034  F022         	movff	i2_fround$1831+1,i2___ftmul@f1+1
 15637  00335E  C035  F023         	movff	i2_fround$1831+2,i2___ftmul@f1+2
 15638  003362  0E00               	movlw	0
 15639  003364  6E24               	movwf	i2___ftmul@f2,c
 15640  003366  0E00               	movlw	0
 15641  003368  6E25               	movwf	i2___ftmul@f2+1,c
 15642  00336A  0E3F               	movlw	63
 15643  00336C  6E26               	movwf	i2___ftmul@f2+2,c
 15644  00336E  EC7E  F022         	call	i2___ftmul	;wreg free
 15645  003372  C021  F030         	movff	?i2___ftmul,?i2_fround
 15646  003376  C022  F031         	movff	?i2___ftmul+1,?i2_fround+1
 15647  00337A  C023  F032         	movff	?i2___ftmul+2,?i2_fround+2
 15648  00337E  0012               	return	
 15649  003380                     i2l4140:
 15650                           
 15651                           ;doprnt.c: 415: else if(prec > 10)
 15652  003380  0E0A               	movlw	10
 15653  003382  6439               	cpfsgt	i2fround@prec,c
 15654  003384  D05D               	goto	i2l4148
 15655                           
 15656                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 15657  003386  0E00               	movlw	0
 15658  003388  6E12               	movwf	i2___wmul@multiplicand+1,c
 15659  00338A  0E03               	movlw	3
 15660  00338C  6E11               	movwf	i2___wmul@multiplicand,c
 15661  00338E  0E00               	movlw	0
 15662  003390  6E04               	movwf	i2___awmod@divisor+1,c
 15663  003392  0E0A               	movlw	10
 15664  003394  6E03               	movwf	i2___awmod@divisor,c
 15665  003396  C039  F001         	movff	i2fround@prec,i2___awmod@dividend
 15666  00339A  6A02               	clrf	i2___awmod@dividend+1,c
 15667  00339C  EC7B  F027         	call	i2___awmod	;wreg free
 15668  0033A0  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 15669  0033A4  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15670  0033A8  EC43  F02A         	call	i2___wmul	;wreg free
 15671  0033AC  0E17               	movlw	low __npowers_
 15672  0033AE  240F               	addwf	?i2___wmul,w,c
 15673  0033B0  6EF6               	movwf	tblptrl,c
 15674  0033B2  0E7F               	movlw	high __npowers_
 15675  0033B4  2010               	addwfc	?i2___wmul+1,w,c
 15676  0033B6  6EF7               	movwf	tblptrh,c
 15677  0033B8                     	if	0	;There are less than 3 active tblptr bytes
 15678  0033B8                     	endif
 15679  0033B8  0009               	tblrd		*+
 15680  0033BA  CFF5 F024          	movff	tablat,i2___ftmul@f2
 15681  0033BE  0009               	tblrd		*+
 15682  0033C0  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 15683  0033C4  000A               	tblrd		*-
 15684  0033C6  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 15685  0033CA  0E00               	movlw	0
 15686  0033CC  6E0A               	movwf	i2___awdiv@divisor+1,c
 15687  0033CE  0E0A               	movlw	10
 15688  0033D0  6E09               	movwf	i2___awdiv@divisor,c
 15689  0033D2  C039  F007         	movff	i2fround@prec,i2___awdiv@dividend
 15690  0033D6  6A08               	clrf	i2___awdiv@dividend+1,c
 15691  0033D8  EC43  F026         	call	i2___awdiv	;wreg free
 15692  0033DC  0E09               	movlw	9
 15693  0033DE  2407               	addwf	?i2___awdiv,w,c
 15694  0033E0  6E0F               	movwf	i2___wmul@multiplier,c
 15695  0033E2  0E00               	movlw	0
 15696  0033E4  2008               	addwfc	?i2___awdiv+1,w,c
 15697  0033E6  6E10               	movwf	i2___wmul@multiplier+1,c
 15698  0033E8  0E00               	movlw	0
 15699  0033EA  6E12               	movwf	i2___wmul@multiplicand+1,c
 15700  0033EC  0E03               	movlw	3
 15701  0033EE  6E11               	movwf	i2___wmul@multiplicand,c
 15702  0033F0  EC43  F02A         	call	i2___wmul	;wreg free
 15703  0033F4  0E17               	movlw	low __npowers_
 15704  0033F6  240F               	addwf	?i2___wmul,w,c
 15705  0033F8  6EF6               	movwf	tblptrl,c
 15706  0033FA  0E7F               	movlw	high __npowers_
 15707  0033FC  2010               	addwfc	?i2___wmul+1,w,c
 15708  0033FE  6EF7               	movwf	tblptrh,c
 15709  003400                     	if	0	;There are less than 3 active tblptr bytes
 15710  003400                     	endif
 15711  003400  0009               	tblrd		*+
 15712  003402  CFF5 F021          	movff	tablat,i2___ftmul@f1
 15713  003406  0009               	tblrd		*+
 15714  003408  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 15715  00340C  000A               	tblrd		*-
 15716  00340E  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 15717  003412  EC7E  F022         	call	i2___ftmul	;wreg free
 15718  003416  C021  F036         	movff	?i2___ftmul,i2_fround$1830
 15719  00341A  C022  F037         	movff	?i2___ftmul+1,i2_fround$1830+1
 15720  00341E  C023  F038         	movff	?i2___ftmul+2,i2_fround$1830+2
 15721                           
 15722                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 15723  003422  C036  F021         	movff	i2_fround$1830,i2___ftmul@f1
 15724  003426  C037  F022         	movff	i2_fround$1830+1,i2___ftmul@f1+1
 15725  00342A  C038  F023         	movff	i2_fround$1830+2,i2___ftmul@f1+2
 15726  00342E  0E00               	movlw	0
 15727  003430  6E24               	movwf	i2___ftmul@f2,c
 15728  003432  0E00               	movlw	0
 15729  003434  6E25               	movwf	i2___ftmul@f2+1,c
 15730  003436  0E3F               	movlw	63
 15731  003438  6E26               	movwf	i2___ftmul@f2+2,c
 15732  00343A  EC7E  F022         	call	i2___ftmul	;wreg free
 15733  00343E  D799               	goto	L10
 15734  003440                     i2l4148:
 15735                           
 15736                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 15737  003440  5039               	movf	i2fround@prec,w,c
 15738  003442  0D03               	mullw	3
 15739  003444  0E17               	movlw	low __npowers_
 15740  003446  24F3               	addwf	prodl,w,c
 15741  003448  6EF6               	movwf	tblptrl,c
 15742  00344A  0E7F               	movlw	high __npowers_
 15743  00344C  20F4               	addwfc	prodh,w,c
 15744  00344E  6EF7               	movwf	tblptrh,c
 15745  003450                     	if	0	;There are less than 3 active tblptr bytes
 15746  003450                     	endif
 15747  003450  0009               	tblrd		*+
 15748  003452  CFF5 F021          	movff	tablat,i2___ftmul@f1
 15749  003456  0009               	tblrd		*+
 15750  003458  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 15751  00345C  000A               	tblrd		*-
 15752  00345E  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 15753  003462  0E00               	movlw	0
 15754  003464  6E24               	movwf	i2___ftmul@f2,c
 15755  003466  0E00               	movlw	0
 15756  003468  6E25               	movwf	i2___ftmul@f2+1,c
 15757  00346A  0E3F               	movlw	63
 15758  00346C  6E26               	movwf	i2___ftmul@f2+2,c
 15759  00346E  EC7E  F022         	call	i2___ftmul	;wreg free
 15760  003472  C021  F030         	movff	?i2___ftmul,?i2_fround
 15761  003476  C022  F031         	movff	?i2___ftmul+1,?i2_fround+1
 15762  00347A  C023  F032         	movff	?i2___ftmul+2,?i2_fround+2
 15763  00347E  0012               	return	
 15764  003480                     __end_ofi2_fround:
 15765                           	opt stack 0
 15766                           tosu	equ	0xFFF
 15767                           tosh	equ	0xFFE
 15768                           tosl	equ	0xFFD
 15769                           pclatu	equ	0xFFB
 15770                           pclath	equ	0xFFA
 15771                           tblptru	equ	0xFF8
 15772                           tblptrh	equ	0xFF7
 15773                           tblptrl	equ	0xFF6
 15774                           tablat	equ	0xFF5
 15775                           prodh	equ	0xFF4
 15776                           prodl	equ	0xFF3
 15777                           intcon	equ	0xFF2
 15778                           intcon2	equ	0xFF1
 15779                           intcon3	equ	0xFF0
 15780                           postinc0	equ	0xFEE
 15781                           fsr0h	equ	0xFEA
 15782                           fsr0l	equ	0xFE9
 15783                           wreg	equ	0xFE8
 15784                           postdec1	equ	0xFE5
 15785                           fsr1h	equ	0xFE2
 15786                           fsr1l	equ	0xFE1
 15787                           indf2	equ	0xFDF
 15788                           postinc2	equ	0xFDE
 15789                           postdec2	equ	0xFDD
 15790                           fsr2h	equ	0xFDA
 15791                           fsr2l	equ	0xFD9
 15792                           status	equ	0xFD8
 15793                           
 15794 ;; *************** function i2___wmul *****************
 15795 ;; Defined at:
 15796 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul16.c"
 15797 ;; Parameters:    Size  Location     Type
 15798 ;;  multiplier      2   14[COMRAM] unsigned int 
 15799 ;;  multiplicand    2   16[COMRAM] unsigned int 
 15800 ;; Auto vars:     Size  Location     Type
 15801 ;;  __wmul          2   18[COMRAM] unsigned int 
 15802 ;; Return value:  Size  Location     Type
 15803 ;;                  2   14[COMRAM] unsigned int 
 15804 ;; Registers used:
 15805 ;;		wreg, status,2, status,0, prodl, prodh
 15806 ;; Tracked objects:
 15807 ;;		On entry : 0/0
 15808 ;;		On exit  : 0/0
 15809 ;;		Unchanged: 0/0
 15810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15811 ;;      Params:         4       0       0       0       0       0       0
 15812 ;;      Locals:         2       0       0       0       0       0       0
 15813 ;;      Temps:          0       0       0       0       0       0       0
 15814 ;;      Totals:         6       0       0       0       0       0       0
 15815 ;;Total ram usage:        6 bytes
 15816 ;; Hardware stack levels used:    1
 15817 ;; This function calls:
 15818 ;;		Nothing
 15819 ;; This function is called by:
 15820 ;;		_INT0_ISR
 15821 ;;		i2_fround
 15822 ;;		i2_scale
 15823 ;;		i2__doprnt
 15824 ;; This function uses a non-reentrant model
 15825 ;;
 15826                           
 15827                           	psect	text55
 15828  005486                     __ptext55:
 15829                           	opt stack 0
 15830  005486                     i2___wmul:
 15831                           	opt stack 20
 15832                           
 15833                           ;incstack = 0
 15834  005486  500F               	movf	i2___wmul@multiplier,w,c
 15835  005488  0211               	mulwf	i2___wmul@multiplicand,c
 15836  00548A  CFF3 F013          	movff	prodl,i2___wmul@product
 15837  00548E  CFF4 F014          	movff	prodh,i2___wmul@product+1
 15838  005492  500F               	movf	i2___wmul@multiplier,w,c
 15839  005494  0212               	mulwf	i2___wmul@multiplicand+1,c
 15840  005496  50F3               	movf	prodl,w,c
 15841  005498  2614               	addwf	i2___wmul@product+1,f,c
 15842  00549A  5010               	movf	i2___wmul@multiplier+1,w,c
 15843  00549C  0211               	mulwf	i2___wmul@multiplicand,c
 15844  00549E  50F3               	movf	prodl,w,c
 15845  0054A0  2614               	addwf	i2___wmul@product+1,f,c
 15846  0054A2  C013  F00F         	movff	i2___wmul@product,?i2___wmul
 15847  0054A6  C014  F010         	movff	i2___wmul@product+1,?i2___wmul+1
 15848  0054AA  0012               	return	
 15849  0054AC                     __end_ofi2___wmul:
 15850                           	opt stack 0
 15851                           tosu	equ	0xFFF
 15852                           tosh	equ	0xFFE
 15853                           tosl	equ	0xFFD
 15854                           pclatu	equ	0xFFB
 15855                           pclath	equ	0xFFA
 15856                           tblptru	equ	0xFF8
 15857                           tblptrh	equ	0xFF7
 15858                           tblptrl	equ	0xFF6
 15859                           tablat	equ	0xFF5
 15860                           prodh	equ	0xFF4
 15861                           prodl	equ	0xFF3
 15862                           intcon	equ	0xFF2
 15863                           intcon2	equ	0xFF1
 15864                           intcon3	equ	0xFF0
 15865                           postinc0	equ	0xFEE
 15866                           fsr0h	equ	0xFEA
 15867                           fsr0l	equ	0xFE9
 15868                           wreg	equ	0xFE8
 15869                           postdec1	equ	0xFE5
 15870                           fsr1h	equ	0xFE2
 15871                           fsr1l	equ	0xFE1
 15872                           indf2	equ	0xFDF
 15873                           postinc2	equ	0xFDE
 15874                           postdec2	equ	0xFDD
 15875                           fsr2h	equ	0xFDA
 15876                           fsr2l	equ	0xFD9
 15877                           status	equ	0xFD8
 15878                           
 15879 ;; *************** function i2___ftmul *****************
 15880 ;; Defined at:
 15881 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftmul.c"
 15882 ;; Parameters:    Size  Location     Type
 15883 ;;  f1              3   32[COMRAM] float 
 15884 ;;  f2              3   35[COMRAM] float 
 15885 ;; Auto vars:     Size  Location     Type
 15886 ;;  __ftmul         3   42[COMRAM] unsigned um
 15887 ;;  __ftmul         1   46[COMRAM] unsigned char 
 15888 ;;  __ftmul         1   45[COMRAM] unsigned char 
 15889 ;;  __ftmul         1   41[COMRAM] unsigned char 
 15890 ;; Return value:  Size  Location     Type
 15891 ;;                  3   32[COMRAM] float 
 15892 ;; Registers used:
 15893 ;;		wreg, status,2, status,0, cstack
 15894 ;; Tracked objects:
 15895 ;;		On entry : 0/0
 15896 ;;		On exit  : 0/0
 15897 ;;		Unchanged: 0/0
 15898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15899 ;;      Params:         6       0       0       0       0       0       0
 15900 ;;      Locals:         6       0       0       0       0       0       0
 15901 ;;      Temps:          3       0       0       0       0       0       0
 15902 ;;      Totals:        15       0       0       0       0       0       0
 15903 ;;Total ram usage:       15 bytes
 15904 ;; Hardware stack levels used:    1
 15905 ;; Hardware stack levels required when called:    1
 15906 ;; This function calls:
 15907 ;;		i2___ftpack
 15908 ;; This function is called by:
 15909 ;;		_INT0_ISR
 15910 ;;		i2_fround
 15911 ;;		i2_scale
 15912 ;;		i2__doprnt
 15913 ;; This function uses a non-reentrant model
 15914 ;;
 15915                           
 15916                           	psect	text56
 15917  0044FC                     __ptext56:
 15918                           	opt stack 0
 15919  0044FC                     i2___ftmul:
 15920                           	opt stack 19
 15921                           
 15922                           ;incstack = 0
 15923  0044FC  C023  F027         	movff	i2___ftmul@f1+2,??i2___ftmul
 15924  004500  6A28               	clrf	(??i2___ftmul+1)& (0+255),c
 15925  004502  6A29               	clrf	(??i2___ftmul+2)& (0+255),c
 15926  004504  3422               	rlcf	i2___ftmul@f1+1,w,c
 15927  004506  3627               	rlcf	??i2___ftmul& (0+255),f,c
 15928  004508  E301               	bnc	u471_41
 15929  00450A  8028               	bsf	(??i2___ftmul+1)& (0+255),0,c
 15930  00450C                     u471_41:
 15931  00450C  5027               	movf	??i2___ftmul,w,c
 15932  00450E  6E2A               	movwf	i2___ftmul@exp,c
 15933  004510  502A               	movf	i2___ftmul@exp,w,c
 15934  004512  A4D8               	btfss	status,2,c
 15935  004514  D007               	goto	i2l3862
 15936  004516  0E00               	movlw	0
 15937  004518  6E21               	movwf	?i2___ftmul,c
 15938  00451A  0E00               	movlw	0
 15939  00451C  6E22               	movwf	?i2___ftmul+1,c
 15940  00451E  0E00               	movlw	0
 15941  004520  6E23               	movwf	?i2___ftmul+2,c
 15942  004522  0012               	return	
 15943  004524                     i2l3862:
 15944  004524  C026  F027         	movff	i2___ftmul@f2+2,??i2___ftmul
 15945  004528  6A28               	clrf	(??i2___ftmul+1)& (0+255),c
 15946  00452A  6A29               	clrf	(??i2___ftmul+2)& (0+255),c
 15947  00452C  3425               	rlcf	i2___ftmul@f2+1,w,c
 15948  00452E  3627               	rlcf	??i2___ftmul& (0+255),f,c
 15949  004530  E301               	bnc	u473_41
 15950  004532  8028               	bsf	(??i2___ftmul+1)& (0+255),0,c
 15951  004534                     u473_41:
 15952  004534  5027               	movf	??i2___ftmul,w,c
 15953  004536  6E2F               	movwf	i2___ftmul@sign,c
 15954  004538  502F               	movf	i2___ftmul@sign,w,c
 15955  00453A  A4D8               	btfss	status,2,c
 15956  00453C  D007               	goto	i2l3868
 15957  00453E  0E00               	movlw	0
 15958  004540  6E21               	movwf	?i2___ftmul,c
 15959  004542  0E00               	movlw	0
 15960  004544  6E22               	movwf	?i2___ftmul+1,c
 15961  004546  0E00               	movlw	0
 15962  004548  6E23               	movwf	?i2___ftmul+2,c
 15963  00454A  0012               	return	
 15964  00454C                     i2l3868:
 15965  00454C  502F               	movf	i2___ftmul@sign,w,c
 15966  00454E  0F7B               	addlw	123
 15967  004550  262A               	addwf	i2___ftmul@exp,f,c
 15968  004552  C023  F02F         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 15969  004556  5026               	movf	i2___ftmul@f2+2,w,c
 15970  004558  1A2F               	xorwf	i2___ftmul@sign,f,c
 15971  00455A  0E80               	movlw	128
 15972  00455C  162F               	andwf	i2___ftmul@sign,f,c
 15973  00455E  8E22               	bsf	i2___ftmul@f1+1,7,c
 15974  004560  8E25               	bsf	i2___ftmul@f2+1,7,c
 15975  004562  0EFF               	movlw	255
 15976  004564  1624               	andwf	i2___ftmul@f2,f,c
 15977  004566  0EFF               	movlw	255
 15978  004568  1625               	andwf	i2___ftmul@f2+1,f,c
 15979  00456A  0E00               	movlw	0
 15980  00456C  1626               	andwf	i2___ftmul@f2+2,f,c
 15981  00456E  0E00               	movlw	0
 15982  004570  6E2B               	movwf	i2___ftmul@f3_as_product,c
 15983  004572  0E00               	movlw	0
 15984  004574  6E2C               	movwf	i2___ftmul@f3_as_product+1,c
 15985  004576  0E00               	movlw	0
 15986  004578  6E2D               	movwf	i2___ftmul@f3_as_product+2,c
 15987  00457A  0E07               	movlw	7
 15988  00457C  6E2E               	movwf	i2___ftmul@cntr,c
 15989  00457E                     i2l3882:
 15990  00457E  A021               	btfss	i2___ftmul@f1,0,c
 15991  004580  D006               	goto	i2l3886
 15992  004582  5024               	movf	i2___ftmul@f2,w,c
 15993  004584  262B               	addwf	i2___ftmul@f3_as_product,f,c
 15994  004586  5025               	movf	i2___ftmul@f2+1,w,c
 15995  004588  222C               	addwfc	i2___ftmul@f3_as_product+1,f,c
 15996  00458A  5026               	movf	i2___ftmul@f2+2,w,c
 15997  00458C  222D               	addwfc	i2___ftmul@f3_as_product+2,f,c
 15998  00458E                     i2l3886:
 15999  00458E  90D8               	bcf	status,0,c
 16000  004590  3223               	rrcf	i2___ftmul@f1+2,f,c
 16001  004592  3222               	rrcf	i2___ftmul@f1+1,f,c
 16002  004594  3221               	rrcf	i2___ftmul@f1,f,c
 16003  004596  90D8               	bcf	status,0,c
 16004  004598  3624               	rlcf	i2___ftmul@f2,f,c
 16005  00459A  3625               	rlcf	i2___ftmul@f2+1,f,c
 16006  00459C  3626               	rlcf	i2___ftmul@f2+2,f,c
 16007  00459E  2E2E               	decfsz	i2___ftmul@cntr,f,c
 16008  0045A0  D7EE               	goto	i2l3882
 16009  0045A2  0E09               	movlw	9
 16010  0045A4  6E2E               	movwf	i2___ftmul@cntr,c
 16011  0045A6                     i2l3892:
 16012  0045A6  A021               	btfss	i2___ftmul@f1,0,c
 16013  0045A8  D006               	goto	i2l3896
 16014  0045AA  5024               	movf	i2___ftmul@f2,w,c
 16015  0045AC  262B               	addwf	i2___ftmul@f3_as_product,f,c
 16016  0045AE  5025               	movf	i2___ftmul@f2+1,w,c
 16017  0045B0  222C               	addwfc	i2___ftmul@f3_as_product+1,f,c
 16018  0045B2  5026               	movf	i2___ftmul@f2+2,w,c
 16019  0045B4  222D               	addwfc	i2___ftmul@f3_as_product+2,f,c
 16020  0045B6                     i2l3896:
 16021  0045B6  90D8               	bcf	status,0,c
 16022  0045B8  3223               	rrcf	i2___ftmul@f1+2,f,c
 16023  0045BA  3222               	rrcf	i2___ftmul@f1+1,f,c
 16024  0045BC  3221               	rrcf	i2___ftmul@f1,f,c
 16025  0045BE  90D8               	bcf	status,0,c
 16026  0045C0  322D               	rrcf	i2___ftmul@f3_as_product+2,f,c
 16027  0045C2  322C               	rrcf	i2___ftmul@f3_as_product+1,f,c
 16028  0045C4  322B               	rrcf	i2___ftmul@f3_as_product,f,c
 16029  0045C6  2E2E               	decfsz	i2___ftmul@cntr,f,c
 16030  0045C8  D7EE               	goto	i2l3892
 16031  0045CA  C02B  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 16032  0045CE  C02C  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 16033  0045D2  C02D  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 16034  0045D6  C02A  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 16035  0045DA  C02F  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 16036  0045DE  EC06  F025         	call	i2___ftpack	;wreg free
 16037  0045E2  C001  F021         	movff	?i2___ftpack,?i2___ftmul
 16038  0045E6  C002  F022         	movff	?i2___ftpack+1,?i2___ftmul+1
 16039  0045EA  C003  F023         	movff	?i2___ftpack+2,?i2___ftmul+2
 16040  0045EE  0012               	return	
 16041  0045F0                     __end_ofi2___ftmul:
 16042                           	opt stack 0
 16043                           tosu	equ	0xFFF
 16044                           tosh	equ	0xFFE
 16045                           tosl	equ	0xFFD
 16046                           pclatu	equ	0xFFB
 16047                           pclath	equ	0xFFA
 16048                           tblptru	equ	0xFF8
 16049                           tblptrh	equ	0xFF7
 16050                           tblptrl	equ	0xFF6
 16051                           tablat	equ	0xFF5
 16052                           prodh	equ	0xFF4
 16053                           prodl	equ	0xFF3
 16054                           intcon	equ	0xFF2
 16055                           intcon2	equ	0xFF1
 16056                           intcon3	equ	0xFF0
 16057                           postinc0	equ	0xFEE
 16058                           fsr0h	equ	0xFEA
 16059                           fsr0l	equ	0xFE9
 16060                           wreg	equ	0xFE8
 16061                           postdec1	equ	0xFE5
 16062                           fsr1h	equ	0xFE2
 16063                           fsr1l	equ	0xFE1
 16064                           indf2	equ	0xFDF
 16065                           postinc2	equ	0xFDE
 16066                           postdec2	equ	0xFDD
 16067                           fsr2h	equ	0xFDA
 16068                           fsr2l	equ	0xFD9
 16069                           status	equ	0xFD8
 16070                           
 16071 ;; *************** function i2___awmod *****************
 16072 ;; Defined at:
 16073 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awmod.c"
 16074 ;; Parameters:    Size  Location     Type
 16075 ;;  dividend        2    0[COMRAM] int 
 16076 ;;  divisor         2    2[COMRAM] int 
 16077 ;; Auto vars:     Size  Location     Type
 16078 ;;  __awmod         1    5[COMRAM] unsigned char 
 16079 ;;  __awmod         1    4[COMRAM] unsigned char 
 16080 ;; Return value:  Size  Location     Type
 16081 ;;                  2    0[COMRAM] int 
 16082 ;; Registers used:
 16083 ;;		wreg, status,2, status,0
 16084 ;; Tracked objects:
 16085 ;;		On entry : 0/0
 16086 ;;		On exit  : 0/0
 16087 ;;		Unchanged: 0/0
 16088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16089 ;;      Params:         4       0       0       0       0       0       0
 16090 ;;      Locals:         2       0       0       0       0       0       0
 16091 ;;      Temps:          0       0       0       0       0       0       0
 16092 ;;      Totals:         6       0       0       0       0       0       0
 16093 ;;Total ram usage:        6 bytes
 16094 ;; Hardware stack levels used:    1
 16095 ;; This function calls:
 16096 ;;		Nothing
 16097 ;; This function is called by:
 16098 ;;		i2_fround
 16099 ;;		i2_scale
 16100 ;; This function uses a non-reentrant model
 16101 ;;
 16102                           
 16103                           	psect	text57
 16104  004EF6                     __ptext57:
 16105                           	opt stack 0
 16106  004EF6                     i2___awmod:
 16107                           	opt stack 20
 16108                           
 16109                           ;incstack = 0
 16110  004EF6  0E00               	movlw	0
 16111  004EF8  6E06               	movwf	i2___awmod@sign,c
 16112  004EFA  AE02               	btfss	i2___awmod@dividend+1,7,c
 16113  004EFC  D006               	goto	i2l3758
 16114  004EFE  6C01               	negf	i2___awmod@dividend,c
 16115  004F00  1E02               	comf	i2___awmod@dividend+1,f,c
 16116  004F02  B0D8               	btfsc	status,0,c
 16117  004F04  2A02               	incf	i2___awmod@dividend+1,f,c
 16118  004F06  0E01               	movlw	1
 16119  004F08  6E06               	movwf	i2___awmod@sign,c
 16120  004F0A                     i2l3758:
 16121  004F0A  AE04               	btfss	i2___awmod@divisor+1,7,c
 16122  004F0C  D004               	goto	i2l3762
 16123  004F0E  6C03               	negf	i2___awmod@divisor,c
 16124  004F10  1E04               	comf	i2___awmod@divisor+1,f,c
 16125  004F12  B0D8               	btfsc	status,0,c
 16126  004F14  2A04               	incf	i2___awmod@divisor+1,f,c
 16127  004F16                     i2l3762:
 16128  004F16  5003               	movf	i2___awmod@divisor,w,c
 16129  004F18  1004               	iorwf	i2___awmod@divisor+1,w,c
 16130  004F1A  B4D8               	btfsc	status,2,c
 16131  004F1C  D018               	goto	i2l3778
 16132  004F1E  0E01               	movlw	1
 16133  004F20  6E05               	movwf	i2___awmod@counter,c
 16134  004F22  D004               	goto	i2l3768
 16135  004F24                     i2l3766:
 16136  004F24  90D8               	bcf	status,0,c
 16137  004F26  3603               	rlcf	i2___awmod@divisor,f,c
 16138  004F28  3604               	rlcf	i2___awmod@divisor+1,f,c
 16139  004F2A  2A05               	incf	i2___awmod@counter,f,c
 16140  004F2C                     i2l3768:
 16141  004F2C  AE04               	btfss	i2___awmod@divisor+1,7,c
 16142  004F2E  D7FA               	goto	i2l3766
 16143  004F30                     i2l3770:
 16144  004F30  5003               	movf	i2___awmod@divisor,w,c
 16145  004F32  5C01               	subwf	i2___awmod@dividend,w,c
 16146  004F34  5004               	movf	i2___awmod@divisor+1,w,c
 16147  004F36  5802               	subwfb	i2___awmod@dividend+1,w,c
 16148  004F38  A0D8               	btfss	status,0,c
 16149  004F3A  D004               	goto	i2l3774
 16150  004F3C  5003               	movf	i2___awmod@divisor,w,c
 16151  004F3E  5E01               	subwf	i2___awmod@dividend,f,c
 16152  004F40  5004               	movf	i2___awmod@divisor+1,w,c
 16153  004F42  5A02               	subwfb	i2___awmod@dividend+1,f,c
 16154  004F44                     i2l3774:
 16155  004F44  90D8               	bcf	status,0,c
 16156  004F46  3204               	rrcf	i2___awmod@divisor+1,f,c
 16157  004F48  3203               	rrcf	i2___awmod@divisor,f,c
 16158  004F4A  2E05               	decfsz	i2___awmod@counter,f,c
 16159  004F4C  D7F1               	goto	i2l3770
 16160  004F4E                     i2l3778:
 16161  004F4E  5006               	movf	i2___awmod@sign,w,c
 16162  004F50  B4D8               	btfsc	status,2,c
 16163  004F52  D004               	goto	i2l3782
 16164  004F54  6C01               	negf	i2___awmod@dividend,c
 16165  004F56  1E02               	comf	i2___awmod@dividend+1,f,c
 16166  004F58  B0D8               	btfsc	status,0,c
 16167  004F5A  2A02               	incf	i2___awmod@dividend+1,f,c
 16168  004F5C                     i2l3782:
 16169  004F5C  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 16170  004F60  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 16171  004F64  0012               	return	
 16172  004F66                     __end_ofi2___awmod:
 16173                           	opt stack 0
 16174                           tosu	equ	0xFFF
 16175                           tosh	equ	0xFFE
 16176                           tosl	equ	0xFFD
 16177                           pclatu	equ	0xFFB
 16178                           pclath	equ	0xFFA
 16179                           tblptru	equ	0xFF8
 16180                           tblptrh	equ	0xFF7
 16181                           tblptrl	equ	0xFF6
 16182                           tablat	equ	0xFF5
 16183                           prodh	equ	0xFF4
 16184                           prodl	equ	0xFF3
 16185                           intcon	equ	0xFF2
 16186                           intcon2	equ	0xFF1
 16187                           intcon3	equ	0xFF0
 16188                           postinc0	equ	0xFEE
 16189                           fsr0h	equ	0xFEA
 16190                           fsr0l	equ	0xFE9
 16191                           wreg	equ	0xFE8
 16192                           postdec1	equ	0xFE5
 16193                           fsr1h	equ	0xFE2
 16194                           fsr1l	equ	0xFE1
 16195                           indf2	equ	0xFDF
 16196                           postinc2	equ	0xFDE
 16197                           postdec2	equ	0xFDD
 16198                           fsr2h	equ	0xFDA
 16199                           fsr2l	equ	0xFD9
 16200                           status	equ	0xFD8
 16201                           
 16202 ;; *************** function i2___awdiv *****************
 16203 ;; Defined at:
 16204 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awdiv.c"
 16205 ;; Parameters:    Size  Location     Type
 16206 ;;  dividend        2    6[COMRAM] int 
 16207 ;;  divisor         2    8[COMRAM] int 
 16208 ;; Auto vars:     Size  Location     Type
 16209 ;;  __awdiv         2   12[COMRAM] int 
 16210 ;;  __awdiv         1   11[COMRAM] unsigned char 
 16211 ;;  __awdiv         1   10[COMRAM] unsigned char 
 16212 ;; Return value:  Size  Location     Type
 16213 ;;                  2    6[COMRAM] int 
 16214 ;; Registers used:
 16215 ;;		wreg, status,2, status,0
 16216 ;; Tracked objects:
 16217 ;;		On entry : 0/0
 16218 ;;		On exit  : 0/0
 16219 ;;		Unchanged: 0/0
 16220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16221 ;;      Params:         4       0       0       0       0       0       0
 16222 ;;      Locals:         4       0       0       0       0       0       0
 16223 ;;      Temps:          0       0       0       0       0       0       0
 16224 ;;      Totals:         8       0       0       0       0       0       0
 16225 ;;Total ram usage:        8 bytes
 16226 ;; Hardware stack levels used:    1
 16227 ;; This function calls:
 16228 ;;		Nothing
 16229 ;; This function is called by:
 16230 ;;		i2_fround
 16231 ;;		i2_scale
 16232 ;;		i2__doprnt
 16233 ;; This function uses a non-reentrant model
 16234 ;;
 16235                           
 16236                           	psect	text58
 16237  004C86                     __ptext58:
 16238                           	opt stack 0
 16239  004C86                     i2___awdiv:
 16240                           	opt stack 20
 16241                           
 16242                           ;incstack = 0
 16243  004C86  0E00               	movlw	0
 16244  004C88  6E0C               	movwf	i2___awdiv@sign,c
 16245  004C8A  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 16246  004C8C  D006               	goto	i2l3714
 16247  004C8E  6C09               	negf	i2___awdiv@divisor,c
 16248  004C90  1E0A               	comf	i2___awdiv@divisor+1,f,c
 16249  004C92  B0D8               	btfsc	status,0,c
 16250  004C94  2A0A               	incf	i2___awdiv@divisor+1,f,c
 16251  004C96  0E01               	movlw	1
 16252  004C98  6E0C               	movwf	i2___awdiv@sign,c
 16253  004C9A                     i2l3714:
 16254  004C9A  AE08               	btfss	i2___awdiv@dividend+1,7,c
 16255  004C9C  D006               	goto	i2l3720
 16256  004C9E  6C07               	negf	i2___awdiv@dividend,c
 16257  004CA0  1E08               	comf	i2___awdiv@dividend+1,f,c
 16258  004CA2  B0D8               	btfsc	status,0,c
 16259  004CA4  2A08               	incf	i2___awdiv@dividend+1,f,c
 16260  004CA6  0E01               	movlw	1
 16261  004CA8  1A0C               	xorwf	i2___awdiv@sign,f,c
 16262  004CAA                     i2l3720:
 16263  004CAA  0E00               	movlw	0
 16264  004CAC  6E0E               	movwf	i2___awdiv@quotient+1,c
 16265  004CAE  0E00               	movlw	0
 16266  004CB0  6E0D               	movwf	i2___awdiv@quotient,c
 16267  004CB2  5009               	movf	i2___awdiv@divisor,w,c
 16268  004CB4  100A               	iorwf	i2___awdiv@divisor+1,w,c
 16269  004CB6  B4D8               	btfsc	status,2,c
 16270  004CB8  D01C               	goto	i2l3742
 16271  004CBA  0E01               	movlw	1
 16272  004CBC  6E0B               	movwf	i2___awdiv@counter,c
 16273  004CBE  D004               	goto	i2l3728
 16274  004CC0                     i2l3726:
 16275  004CC0  90D8               	bcf	status,0,c
 16276  004CC2  3609               	rlcf	i2___awdiv@divisor,f,c
 16277  004CC4  360A               	rlcf	i2___awdiv@divisor+1,f,c
 16278  004CC6  2A0B               	incf	i2___awdiv@counter,f,c
 16279  004CC8                     i2l3728:
 16280  004CC8  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 16281  004CCA  D7FA               	goto	i2l3726
 16282  004CCC                     i2l3730:
 16283  004CCC  90D8               	bcf	status,0,c
 16284  004CCE  360D               	rlcf	i2___awdiv@quotient,f,c
 16285  004CD0  360E               	rlcf	i2___awdiv@quotient+1,f,c
 16286  004CD2  5009               	movf	i2___awdiv@divisor,w,c
 16287  004CD4  5C07               	subwf	i2___awdiv@dividend,w,c
 16288  004CD6  500A               	movf	i2___awdiv@divisor+1,w,c
 16289  004CD8  5808               	subwfb	i2___awdiv@dividend+1,w,c
 16290  004CDA  A0D8               	btfss	status,0,c
 16291  004CDC  D005               	goto	i2l3738
 16292  004CDE  5009               	movf	i2___awdiv@divisor,w,c
 16293  004CE0  5E07               	subwf	i2___awdiv@dividend,f,c
 16294  004CE2  500A               	movf	i2___awdiv@divisor+1,w,c
 16295  004CE4  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 16296  004CE6  800D               	bsf	i2___awdiv@quotient,0,c
 16297  004CE8                     i2l3738:
 16298  004CE8  90D8               	bcf	status,0,c
 16299  004CEA  320A               	rrcf	i2___awdiv@divisor+1,f,c
 16300  004CEC  3209               	rrcf	i2___awdiv@divisor,f,c
 16301  004CEE  2E0B               	decfsz	i2___awdiv@counter,f,c
 16302  004CF0  D7ED               	goto	i2l3730
 16303  004CF2                     i2l3742:
 16304  004CF2  500C               	movf	i2___awdiv@sign,w,c
 16305  004CF4  B4D8               	btfsc	status,2,c
 16306  004CF6  D004               	goto	i2l3746
 16307  004CF8  6C0D               	negf	i2___awdiv@quotient,c
 16308  004CFA  1E0E               	comf	i2___awdiv@quotient+1,f,c
 16309  004CFC  B0D8               	btfsc	status,0,c
 16310  004CFE  2A0E               	incf	i2___awdiv@quotient+1,f,c
 16311  004D00                     i2l3746:
 16312  004D00  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 16313  004D04  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 16314  004D08  0012               	return	
 16315  004D0A                     __end_ofi2___awdiv:
 16316                           	opt stack 0
 16317                           tosu	equ	0xFFF
 16318                           tosh	equ	0xFFE
 16319                           tosl	equ	0xFFD
 16320                           pclatu	equ	0xFFB
 16321                           pclath	equ	0xFFA
 16322                           tblptru	equ	0xFF8
 16323                           tblptrh	equ	0xFF7
 16324                           tblptrl	equ	0xFF6
 16325                           tablat	equ	0xFF5
 16326                           prodh	equ	0xFF4
 16327                           prodl	equ	0xFF3
 16328                           intcon	equ	0xFF2
 16329                           intcon2	equ	0xFF1
 16330                           intcon3	equ	0xFF0
 16331                           postinc0	equ	0xFEE
 16332                           fsr0h	equ	0xFEA
 16333                           fsr0l	equ	0xFE9
 16334                           wreg	equ	0xFE8
 16335                           postdec1	equ	0xFE5
 16336                           fsr1h	equ	0xFE2
 16337                           fsr1l	equ	0xFE1
 16338                           indf2	equ	0xFDF
 16339                           postinc2	equ	0xFDE
 16340                           postdec2	equ	0xFDD
 16341                           fsr2h	equ	0xFDA
 16342                           fsr2l	equ	0xFD9
 16343                           status	equ	0xFD8
 16344                           
 16345 ;; *************** function i2__tdiv_to_l_ *****************
 16346 ;; Defined at:
 16347 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftdivl.c"
 16348 ;; Parameters:    Size  Location     Type
 16349 ;;  f1              3    0[COMRAM] float 
 16350 ;;  f2              3    3[COMRAM] float 
 16351 ;; Auto vars:     Size  Location     Type
 16352 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 16353 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 16354 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 16355 ;; Return value:  Size  Location     Type
 16356 ;;                  4    0[COMRAM] unsigned long 
 16357 ;; Registers used:
 16358 ;;		wreg, status,2, status,0
 16359 ;; Tracked objects:
 16360 ;;		On entry : 0/0
 16361 ;;		On exit  : 0/0
 16362 ;;		Unchanged: 0/0
 16363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16364 ;;      Params:         6       0       0       0       0       0       0
 16365 ;;      Locals:         6       0       0       0       0       0       0
 16366 ;;      Temps:          3       0       0       0       0       0       0
 16367 ;;      Totals:        15       0       0       0       0       0       0
 16368 ;;Total ram usage:       15 bytes
 16369 ;; Hardware stack levels used:    1
 16370 ;; This function calls:
 16371 ;;		Nothing
 16372 ;; This function is called by:
 16373 ;;		i2__doprnt
 16374 ;; This function uses a non-reentrant model
 16375 ;;
 16376                           
 16377                           	psect	text59
 16378  004074                     __ptext59:
 16379                           	opt stack 0
 16380  004074                     i2__tdiv_to_l_:
 16381                           	opt stack 21
 16382                           
 16383                           ;incstack = 0
 16384  004074  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 16385  004078  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 16386  00407A  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 16387  00407C  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 16388  00407E  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 16389  004080  E301               	bnc	u535_41
 16390  004082  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 16391  004084                     u535_41:
 16392  004084  5007               	movf	??i2__tdiv_to_l_,w,c
 16393  004086  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 16394  004088  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 16395  00408A  A4D8               	btfss	status,2,c
 16396  00408C  D009               	goto	i2l4256
 16397  00408E  0E00               	movlw	0
 16398  004090  6E01               	movwf	?i2__tdiv_to_l_,c
 16399  004092  0E00               	movlw	0
 16400  004094  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16401  004096  0E00               	movlw	0
 16402  004098  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16403  00409A  0E00               	movlw	0
 16404  00409C  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16405  00409E  0012               	return	
 16406  0040A0                     i2l4256:
 16407  0040A0  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 16408  0040A4  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 16409  0040A6  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 16410  0040A8  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 16411  0040AA  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 16412  0040AC  E301               	bnc	u537_41
 16413  0040AE  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 16414  0040B0                     u537_41:
 16415  0040B0  5007               	movf	??i2__tdiv_to_l_,w,c
 16416  0040B2  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 16417  0040B4  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 16418  0040B6  A4D8               	btfss	status,2,c
 16419  0040B8  D009               	goto	i2l4262
 16420  0040BA  0E00               	movlw	0
 16421  0040BC  6E01               	movwf	?i2__tdiv_to_l_,c
 16422  0040BE  0E00               	movlw	0
 16423  0040C0  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16424  0040C2  0E00               	movlw	0
 16425  0040C4  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16426  0040C6  0E00               	movlw	0
 16427  0040C8  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16428  0040CA  0012               	return	
 16429  0040CC                     i2l4262:
 16430  0040CC  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 16431  0040CE  0EFF               	movlw	255
 16432  0040D0  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 16433  0040D2  0EFF               	movlw	255
 16434  0040D4  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 16435  0040D6  0E00               	movlw	0
 16436  0040D8  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 16437  0040DA  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 16438  0040DC  0EFF               	movlw	255
 16439  0040DE  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 16440  0040E0  0EFF               	movlw	255
 16441  0040E2  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 16442  0040E4  0E00               	movlw	0
 16443  0040E6  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 16444  0040E8  0E00               	movlw	0
 16445  0040EA  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 16446  0040EC  0E00               	movlw	0
 16447  0040EE  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 16448  0040F0  0E00               	movlw	0
 16449  0040F2  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 16450  0040F4  0E00               	movlw	0
 16451  0040F6  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 16452  0040F8  0E7F               	movlw	127
 16453  0040FA  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 16454  0040FC  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 16455  0040FE  0F98               	addlw	152
 16456  004100  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 16457  004102  0E18               	movlw	24
 16458  004104  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 16459  004106                     i2l834:
 16460  004106  90D8               	bcf	status,0,c
 16461  004108  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 16462  00410A  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 16463  00410C  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 16464  00410E  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 16465  004110  5004               	movf	i2__tdiv_to_l_@f2,w,c
 16466  004112  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 16467  004114  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 16468  004116  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 16469  004118  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 16470  00411A  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 16471  00411C  A0D8               	btfss	status,0,c
 16472  00411E  D007               	goto	i2l835
 16473  004120  5004               	movf	i2__tdiv_to_l_@f2,w,c
 16474  004122  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 16475  004124  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 16476  004126  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 16477  004128  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 16478  00412A  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 16479  00412C  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 16480  00412E                     i2l835:
 16481  00412E  90D8               	bcf	status,0,c
 16482  004130  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 16483  004132  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 16484  004134  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 16485  004136  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 16486  004138  D7E6               	goto	i2l834
 16487  00413A  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 16488  00413C  D016               	goto	i2l4296
 16489  00413E  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 16490  004140  0A80               	xorlw	128
 16491  004142  0F97               	addlw	151
 16492  004144  B0D8               	btfsc	status,0,c
 16493  004146  D009               	goto	i2l4292
 16494  004148  0E00               	movlw	0
 16495  00414A  6E01               	movwf	?i2__tdiv_to_l_,c
 16496  00414C  0E00               	movlw	0
 16497  00414E  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16498  004150  0E00               	movlw	0
 16499  004152  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16500  004154  0E00               	movlw	0
 16501  004156  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16502  004158  0012               	return	
 16503  00415A                     i2l4292:
 16504  00415A  90D8               	bcf	status,0,c
 16505  00415C  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 16506  00415E  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 16507  004160  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 16508  004162  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 16509  004164  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 16510  004166  D7F9               	goto	i2l4292
 16511  004168  D015               	goto	i2l841
 16512  00416A                     i2l4296:
 16513  00416A  0E17               	movlw	23
 16514  00416C  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 16515  00416E  D00F               	goto	i2l4304
 16516  004170  0E00               	movlw	0
 16517  004172  6E01               	movwf	?i2__tdiv_to_l_,c
 16518  004174  0E00               	movlw	0
 16519  004176  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16520  004178  0E00               	movlw	0
 16521  00417A  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16522  00417C  0E00               	movlw	0
 16523  00417E  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16524  004180  0012               	return	
 16525  004182                     i2l4302:
 16526  004182  90D8               	bcf	status,0,c
 16527  004184  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 16528  004186  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 16529  004188  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 16530  00418A  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 16531  00418C  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 16532  00418E                     i2l4304:
 16533  00418E  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 16534  004190  A4D8               	btfss	status,2,c
 16535  004192  D7F7               	goto	i2l4302
 16536  004194                     i2l841:
 16537  004194  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 16538  004198  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 16539  00419C  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 16540  0041A0  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 16541  0041A4  0012               	return		;funcret
 16542  0041A6                     __end_ofi2__tdiv_to_l_:
 16543                           	opt stack 0
 16544                           tosu	equ	0xFFF
 16545                           tosh	equ	0xFFE
 16546                           tosl	equ	0xFFD
 16547                           pclatu	equ	0xFFB
 16548                           pclath	equ	0xFFA
 16549                           tblptru	equ	0xFF8
 16550                           tblptrh	equ	0xFF7
 16551                           tblptrl	equ	0xFF6
 16552                           tablat	equ	0xFF5
 16553                           prodh	equ	0xFF4
 16554                           prodl	equ	0xFF3
 16555                           intcon	equ	0xFF2
 16556                           intcon2	equ	0xFF1
 16557                           intcon3	equ	0xFF0
 16558                           postinc0	equ	0xFEE
 16559                           fsr0h	equ	0xFEA
 16560                           fsr0l	equ	0xFE9
 16561                           wreg	equ	0xFE8
 16562                           postdec1	equ	0xFE5
 16563                           fsr1h	equ	0xFE2
 16564                           fsr1l	equ	0xFE1
 16565                           indf2	equ	0xFDF
 16566                           postinc2	equ	0xFDE
 16567                           postdec2	equ	0xFDD
 16568                           fsr2h	equ	0xFDA
 16569                           fsr2l	equ	0xFD9
 16570                           status	equ	0xFD8
 16571                           
 16572 ;; *************** function i2__div_to_l_ *****************
 16573 ;; Defined at:
 16574 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\fldivl.c"
 16575 ;; Parameters:    Size  Location     Type
 16576 ;;  f1              3    0[COMRAM] unsigned long 
 16577 ;;  f2              3    3[COMRAM] unsigned long 
 16578 ;; Auto vars:     Size  Location     Type
 16579 ;;  _div_to_l_      4    6[COMRAM] unsigned long 
 16580 ;;  _div_to_l_      1   11[COMRAM] unsigned char 
 16581 ;;  _div_to_l_      1   10[COMRAM] unsigned char 
 16582 ;; Return value:  Size  Location     Type
 16583 ;;                  4    0[COMRAM] unsigned long 
 16584 ;; Registers used:
 16585 ;;		wreg, status,2, status,0
 16586 ;; Tracked objects:
 16587 ;;		On entry : 0/0
 16588 ;;		On exit  : 0/0
 16589 ;;		Unchanged: 0/0
 16590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16591 ;;      Params:         6       0       0       0       0       0       0
 16592 ;;      Locals:         6       0       0       0       0       0       0
 16593 ;;      Temps:          0       0       0       0       0       0       0
 16594 ;;      Totals:        12       0       0       0       0       0       0
 16595 ;;Total ram usage:       12 bytes
 16596 ;; Hardware stack levels used:    1
 16597 ;; This function calls:
 16598 ;;		Nothing
 16599 ;; This function is called by:
 16600 ;;		i2__doprnt
 16601 ;; This function uses a non-reentrant model
 16602 ;;
 16603                           
 16604                           	psect	text60
 16605  0041A6                     __ptext60:
 16606                           	opt stack 0
 16607  0041A6                     i2__div_to_l_:
 16608                           	opt stack 21
 16609                           
 16610                           ;incstack = 0
 16611  0041A6  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 16612  0041A8  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 16613  0041AA  6E0C               	movwf	i2__div_to_l_@exp1,c
 16614  0041AC  500C               	movf	i2__div_to_l_@exp1,w,c
 16615  0041AE  A4D8               	btfss	status,2,c
 16616  0041B0  D009               	goto	i2l4196
 16617  0041B2  0E00               	movlw	0
 16618  0041B4  6E01               	movwf	?i2__div_to_l_,c
 16619  0041B6  0E00               	movlw	0
 16620  0041B8  6E02               	movwf	?i2__div_to_l_+1,c
 16621  0041BA  0E00               	movlw	0
 16622  0041BC  6E03               	movwf	?i2__div_to_l_+2,c
 16623  0041BE  0E00               	movlw	0
 16624  0041C0  6E04               	movwf	?i2__div_to_l_+3,c
 16625  0041C2  0012               	return	
 16626  0041C4                     i2l4196:
 16627  0041C4  3406               	rlcf	i2__div_to_l_@f2+2,w,c
 16628  0041C6  3407               	rlcf	i2__div_to_l_@f2+3,w,c
 16629  0041C8  6E0B               	movwf	i2__div_to_l_@cntr,c
 16630  0041CA  500B               	movf	i2__div_to_l_@cntr,w,c
 16631  0041CC  A4D8               	btfss	status,2,c
 16632  0041CE  D009               	goto	i2l4202
 16633  0041D0  0E00               	movlw	0
 16634  0041D2  6E01               	movwf	?i2__div_to_l_,c
 16635  0041D4  0E00               	movlw	0
 16636  0041D6  6E02               	movwf	?i2__div_to_l_+1,c
 16637  0041D8  0E00               	movlw	0
 16638  0041DA  6E03               	movwf	?i2__div_to_l_+2,c
 16639  0041DC  0E00               	movlw	0
 16640  0041DE  6E04               	movwf	?i2__div_to_l_+3,c
 16641  0041E0  0012               	return	
 16642  0041E2                     i2l4202:
 16643  0041E2  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 16644  0041E4  0EFF               	movlw	255
 16645  0041E6  1601               	andwf	i2__div_to_l_@f1,f,c
 16646  0041E8  0EFF               	movlw	255
 16647  0041EA  1602               	andwf	i2__div_to_l_@f1+1,f,c
 16648  0041EC  0EFF               	movlw	255
 16649  0041EE  1603               	andwf	i2__div_to_l_@f1+2,f,c
 16650  0041F0  0E00               	movlw	0
 16651  0041F2  1604               	andwf	i2__div_to_l_@f1+3,f,c
 16652  0041F4  8E06               	bsf	i2__div_to_l_@f2+2,7,c
 16653  0041F6  0EFF               	movlw	255
 16654  0041F8  1604               	andwf	i2__div_to_l_@f2,f,c
 16655  0041FA  0EFF               	movlw	255
 16656  0041FC  1605               	andwf	i2__div_to_l_@f2+1,f,c
 16657  0041FE  0EFF               	movlw	255
 16658  004200  1606               	andwf	i2__div_to_l_@f2+2,f,c
 16659  004202  0E00               	movlw	0
 16660  004204  1607               	andwf	i2__div_to_l_@f2+3,f,c
 16661  004206  0E00               	movlw	0
 16662  004208  6E07               	movwf	i2__div_to_l_@quot,c
 16663  00420A  0E00               	movlw	0
 16664  00420C  6E08               	movwf	i2__div_to_l_@quot+1,c
 16665  00420E  0E00               	movlw	0
 16666  004210  6E09               	movwf	i2__div_to_l_@quot+2,c
 16667  004212  0E00               	movlw	0
 16668  004214  6E0A               	movwf	i2__div_to_l_@quot+3,c
 16669  004216  0E7F               	movlw	127
 16670  004218  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 16671  00421A  500B               	movf	i2__div_to_l_@cntr,w,c
 16672  00421C  0FA0               	addlw	160
 16673  00421E  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 16674  004220  0E20               	movlw	32
 16675  004222  6E0B               	movwf	i2__div_to_l_@cntr,c
 16676  004224                     i2l4216:
 16677  004224  90D8               	bcf	status,0,c
 16678  004226  3607               	rlcf	i2__div_to_l_@quot,f,c
 16679  004228  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 16680  00422A  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 16681  00422C  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 16682  00422E  5004               	movf	i2__div_to_l_@f2,w,c
 16683  004230  5C01               	subwf	i2__div_to_l_@f1,w,c
 16684  004232  5005               	movf	i2__div_to_l_@f2+1,w,c
 16685  004234  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 16686  004236  5006               	movf	i2__div_to_l_@f2+2,w,c
 16687  004238  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 16688  00423A  5007               	movf	i2__div_to_l_@f2+3,w,c
 16689  00423C  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 16690  00423E  A0D8               	btfss	status,0,c
 16691  004240  D009               	goto	i2l4224
 16692  004242  5004               	movf	i2__div_to_l_@f2,w,c
 16693  004244  5E01               	subwf	i2__div_to_l_@f1,f,c
 16694  004246  5005               	movf	i2__div_to_l_@f2+1,w,c
 16695  004248  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 16696  00424A  5006               	movf	i2__div_to_l_@f2+2,w,c
 16697  00424C  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 16698  00424E  5007               	movf	i2__div_to_l_@f2+3,w,c
 16699  004250  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 16700  004252  8007               	bsf	i2__div_to_l_@quot,0,c
 16701  004254                     i2l4224:
 16702  004254  90D8               	bcf	status,0,c
 16703  004256  3601               	rlcf	i2__div_to_l_@f1,f,c
 16704  004258  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 16705  00425A  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 16706  00425C  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 16707  00425E  2E0B               	decfsz	i2__div_to_l_@cntr,f,c
 16708  004260  D7E1               	goto	i2l4216
 16709  004262  AE0C               	btfss	i2__div_to_l_@exp1,7,c
 16710  004264  D016               	goto	i2l4240
 16711  004266  500C               	movf	i2__div_to_l_@exp1,w,c
 16712  004268  0A80               	xorlw	128
 16713  00426A  0F9F               	addlw	159
 16714  00426C  B0D8               	btfsc	status,0,c
 16715  00426E  D009               	goto	i2l4236
 16716  004270  0E00               	movlw	0
 16717  004272  6E01               	movwf	?i2__div_to_l_,c
 16718  004274  0E00               	movlw	0
 16719  004276  6E02               	movwf	?i2__div_to_l_+1,c
 16720  004278  0E00               	movlw	0
 16721  00427A  6E03               	movwf	?i2__div_to_l_+2,c
 16722  00427C  0E00               	movlw	0
 16723  00427E  6E04               	movwf	?i2__div_to_l_+3,c
 16724  004280  0012               	return	
 16725  004282                     i2l4236:
 16726  004282  90D8               	bcf	status,0,c
 16727  004284  320A               	rrcf	i2__div_to_l_@quot+3,f,c
 16728  004286  3209               	rrcf	i2__div_to_l_@quot+2,f,c
 16729  004288  3208               	rrcf	i2__div_to_l_@quot+1,f,c
 16730  00428A  3207               	rrcf	i2__div_to_l_@quot,f,c
 16731  00428C  3E0C               	incfsz	i2__div_to_l_@exp1,f,c
 16732  00428E  D7F9               	goto	i2l4236
 16733  004290  D015               	goto	i2l737
 16734  004292                     i2l4240:
 16735  004292  0E1F               	movlw	31
 16736  004294  640C               	cpfsgt	i2__div_to_l_@exp1,c
 16737  004296  D00F               	goto	i2l4248
 16738  004298  0E00               	movlw	0
 16739  00429A  6E01               	movwf	?i2__div_to_l_,c
 16740  00429C  0E00               	movlw	0
 16741  00429E  6E02               	movwf	?i2__div_to_l_+1,c
 16742  0042A0  0E00               	movlw	0
 16743  0042A2  6E03               	movwf	?i2__div_to_l_+2,c
 16744  0042A4  0E00               	movlw	0
 16745  0042A6  6E04               	movwf	?i2__div_to_l_+3,c
 16746  0042A8  0012               	return	
 16747  0042AA                     i2l4246:
 16748  0042AA  90D8               	bcf	status,0,c
 16749  0042AC  3607               	rlcf	i2__div_to_l_@quot,f,c
 16750  0042AE  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 16751  0042B0  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 16752  0042B2  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 16753  0042B4  060C               	decf	i2__div_to_l_@exp1,f,c
 16754  0042B6                     i2l4248:
 16755  0042B6  500C               	movf	i2__div_to_l_@exp1,w,c
 16756  0042B8  A4D8               	btfss	status,2,c
 16757  0042BA  D7F7               	goto	i2l4246
 16758  0042BC                     i2l737:
 16759  0042BC  C007  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 16760  0042C0  C008  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 16761  0042C4  C009  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 16762  0042C8  C00A  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 16763  0042CC  0012               	return		;funcret
 16764  0042CE                     __end_ofi2__div_to_l_:
 16765                           	opt stack 0
 16766                           tosu	equ	0xFFF
 16767                           tosh	equ	0xFFE
 16768                           tosl	equ	0xFFD
 16769                           pclatu	equ	0xFFB
 16770                           pclath	equ	0xFFA
 16771                           tblptru	equ	0xFF8
 16772                           tblptrh	equ	0xFF7
 16773                           tblptrl	equ	0xFF6
 16774                           tablat	equ	0xFF5
 16775                           prodh	equ	0xFF4
 16776                           prodl	equ	0xFF3
 16777                           intcon	equ	0xFF2
 16778                           intcon2	equ	0xFF1
 16779                           intcon3	equ	0xFF0
 16780                           postinc0	equ	0xFEE
 16781                           fsr0h	equ	0xFEA
 16782                           fsr0l	equ	0xFE9
 16783                           wreg	equ	0xFE8
 16784                           postdec1	equ	0xFE5
 16785                           fsr1h	equ	0xFE2
 16786                           fsr1l	equ	0xFE1
 16787                           indf2	equ	0xFDF
 16788                           postinc2	equ	0xFDE
 16789                           postdec2	equ	0xFDD
 16790                           fsr2h	equ	0xFDA
 16791                           fsr2l	equ	0xFD9
 16792                           status	equ	0xFD8
 16793                           
 16794 ;; *************** function i2___lltoft *****************
 16795 ;; Defined at:
 16796 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lltoft.c"
 16797 ;; Parameters:    Size  Location     Type
 16798 ;;  c               4    8[COMRAM] unsigned long 
 16799 ;; Auto vars:     Size  Location     Type
 16800 ;;  __lltoft        1   16[COMRAM] unsigned char 
 16801 ;; Return value:  Size  Location     Type
 16802 ;;                  3    8[COMRAM] float 
 16803 ;; Registers used:
 16804 ;;		wreg, status,2, status,0, cstack
 16805 ;; Tracked objects:
 16806 ;;		On entry : 0/0
 16807 ;;		On exit  : 0/0
 16808 ;;		Unchanged: 0/0
 16809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16810 ;;      Params:         4       0       0       0       0       0       0
 16811 ;;      Locals:         1       0       0       0       0       0       0
 16812 ;;      Temps:          4       0       0       0       0       0       0
 16813 ;;      Totals:         9       0       0       0       0       0       0
 16814 ;;Total ram usage:        9 bytes
 16815 ;; Hardware stack levels used:    1
 16816 ;; Hardware stack levels required when called:    1
 16817 ;; This function calls:
 16818 ;;		i2___ftpack
 16819 ;; This function is called by:
 16820 ;;		i2__doprnt
 16821 ;; This function uses a non-reentrant model
 16822 ;;
 16823                           
 16824                           	psect	text61
 16825  005030                     __ptext61:
 16826                           	opt stack 0
 16827  005030                     i2___lltoft:
 16828                           	opt stack 20
 16829                           
 16830                           ;incstack = 0
 16831  005030  0E8E               	movlw	142
 16832  005032  6E11               	movwf	i2___lltoft@exp,c
 16833  005034  D006               	goto	i2l4436
 16834  005036                     i2l4434:
 16835  005036  90D8               	bcf	status,0,c
 16836  005038  320C               	rrcf	i2___lltoft@c+3,f,c
 16837  00503A  320B               	rrcf	i2___lltoft@c+2,f,c
 16838  00503C  320A               	rrcf	i2___lltoft@c+1,f,c
 16839  00503E  3209               	rrcf	i2___lltoft@c,f,c
 16840  005040  2A11               	incf	i2___lltoft@exp,f,c
 16841  005042                     i2l4436:
 16842  005042  0E00               	movlw	0
 16843  005044  1409               	andwf	i2___lltoft@c,w,c
 16844  005046  6E0D               	movwf	??i2___lltoft& (0+255),c
 16845  005048  0E00               	movlw	0
 16846  00504A  140A               	andwf	i2___lltoft@c+1,w,c
 16847  00504C  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 16848  00504E  0E00               	movlw	0
 16849  005050  140B               	andwf	i2___lltoft@c+2,w,c
 16850  005052  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 16851  005054  0EFF               	movlw	255
 16852  005056  140C               	andwf	i2___lltoft@c+3,w,c
 16853  005058  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 16854  00505A  500D               	movf	??i2___lltoft,w,c
 16855  00505C  100E               	iorwf	??i2___lltoft+1,w,c
 16856  00505E  100F               	iorwf	??i2___lltoft+2,w,c
 16857  005060  1010               	iorwf	??i2___lltoft+3,w,c
 16858  005062  A4D8               	btfss	status,2,c
 16859  005064  D7E8               	goto	i2l4434
 16860  005066  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 16861  00506A  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 16862  00506E  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 16863  005072  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 16864  005076  0E00               	movlw	0
 16865  005078  6E05               	movwf	i2___ftpack@sign,c
 16866  00507A  EC06  F025         	call	i2___ftpack	;wreg free
 16867  00507E  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 16868  005082  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 16869  005086  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 16870  00508A  0012               	return	
 16871  00508C                     __end_ofi2___lltoft:
 16872                           	opt stack 0
 16873                           tosu	equ	0xFFF
 16874                           tosh	equ	0xFFE
 16875                           tosl	equ	0xFFD
 16876                           pclatu	equ	0xFFB
 16877                           pclath	equ	0xFFA
 16878                           tblptru	equ	0xFF8
 16879                           tblptrh	equ	0xFF7
 16880                           tblptrl	equ	0xFF6
 16881                           tablat	equ	0xFF5
 16882                           prodh	equ	0xFF4
 16883                           prodl	equ	0xFF3
 16884                           intcon	equ	0xFF2
 16885                           intcon2	equ	0xFF1
 16886                           intcon3	equ	0xFF0
 16887                           postinc0	equ	0xFEE
 16888                           fsr0h	equ	0xFEA
 16889                           fsr0l	equ	0xFE9
 16890                           wreg	equ	0xFE8
 16891                           postdec1	equ	0xFE5
 16892                           fsr1h	equ	0xFE2
 16893                           fsr1l	equ	0xFE1
 16894                           indf2	equ	0xFDF
 16895                           postinc2	equ	0xFDE
 16896                           postdec2	equ	0xFDD
 16897                           fsr2h	equ	0xFDA
 16898                           fsr2l	equ	0xFD9
 16899                           status	equ	0xFD8
 16900                           
 16901 ;; *************** function i2___llmod *****************
 16902 ;; Defined at:
 16903 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\llmod.c"
 16904 ;; Parameters:    Size  Location     Type
 16905 ;;  dividend        4   13[COMRAM] unsigned long 
 16906 ;;  divisor         4   17[COMRAM] unsigned long 
 16907 ;; Auto vars:     Size  Location     Type
 16908 ;;  __llmod         1   21[COMRAM] unsigned char 
 16909 ;; Return value:  Size  Location     Type
 16910 ;;                  4   13[COMRAM] unsigned long 
 16911 ;; Registers used:
 16912 ;;		wreg, status,2, status,0
 16913 ;; Tracked objects:
 16914 ;;		On entry : 0/0
 16915 ;;		On exit  : 0/0
 16916 ;;		Unchanged: 0/0
 16917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16918 ;;      Params:         8       0       0       0       0       0       0
 16919 ;;      Locals:         1       0       0       0       0       0       0
 16920 ;;      Temps:          0       0       0       0       0       0       0
 16921 ;;      Totals:         9       0       0       0       0       0       0
 16922 ;;Total ram usage:        9 bytes
 16923 ;; Hardware stack levels used:    1
 16924 ;; This function calls:
 16925 ;;		Nothing
 16926 ;; This function is called by:
 16927 ;;		i2__doprnt
 16928 ;; This function uses a non-reentrant model
 16929 ;;
 16930                           
 16931                           	psect	text62
 16932  004F66                     __ptext62:
 16933                           	opt stack 0
 16934  004F66                     i2___llmod:
 16935                           	opt stack 21
 16936                           
 16937                           ;incstack = 0
 16938  004F66  5012               	movf	i2___llmod@divisor,w,c
 16939  004F68  1013               	iorwf	i2___llmod@divisor+1,w,c
 16940  004F6A  1014               	iorwf	i2___llmod@divisor+2,w,c
 16941  004F6C  1015               	iorwf	i2___llmod@divisor+3,w,c
 16942  004F6E  B4D8               	btfsc	status,2,c
 16943  004F70  D024               	goto	i2l948
 16944  004F72  0E01               	movlw	1
 16945  004F74  6E16               	movwf	i2___llmod@counter,c
 16946  004F76  D006               	goto	i2l4422
 16947  004F78                     i2l4420:
 16948  004F78  90D8               	bcf	status,0,c
 16949  004F7A  3612               	rlcf	i2___llmod@divisor,f,c
 16950  004F7C  3613               	rlcf	i2___llmod@divisor+1,f,c
 16951  004F7E  3614               	rlcf	i2___llmod@divisor+2,f,c
 16952  004F80  3615               	rlcf	i2___llmod@divisor+3,f,c
 16953  004F82  2A16               	incf	i2___llmod@counter,f,c
 16954  004F84                     i2l4422:
 16955  004F84  AE15               	btfss	i2___llmod@divisor+3,7,c
 16956  004F86  D7F8               	goto	i2l4420
 16957  004F88                     i2l4424:
 16958  004F88  5012               	movf	i2___llmod@divisor,w,c
 16959  004F8A  5C0E               	subwf	i2___llmod@dividend,w,c
 16960  004F8C  5013               	movf	i2___llmod@divisor+1,w,c
 16961  004F8E  580F               	subwfb	i2___llmod@dividend+1,w,c
 16962  004F90  5014               	movf	i2___llmod@divisor+2,w,c
 16963  004F92  5810               	subwfb	i2___llmod@dividend+2,w,c
 16964  004F94  5015               	movf	i2___llmod@divisor+3,w,c
 16965  004F96  5811               	subwfb	i2___llmod@dividend+3,w,c
 16966  004F98  A0D8               	btfss	status,0,c
 16967  004F9A  D008               	goto	i2l4428
 16968  004F9C  5012               	movf	i2___llmod@divisor,w,c
 16969  004F9E  5E0E               	subwf	i2___llmod@dividend,f,c
 16970  004FA0  5013               	movf	i2___llmod@divisor+1,w,c
 16971  004FA2  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 16972  004FA4  5014               	movf	i2___llmod@divisor+2,w,c
 16973  004FA6  5A10               	subwfb	i2___llmod@dividend+2,f,c
 16974  004FA8  5015               	movf	i2___llmod@divisor+3,w,c
 16975  004FAA  5A11               	subwfb	i2___llmod@dividend+3,f,c
 16976  004FAC                     i2l4428:
 16977  004FAC  90D8               	bcf	status,0,c
 16978  004FAE  3215               	rrcf	i2___llmod@divisor+3,f,c
 16979  004FB0  3214               	rrcf	i2___llmod@divisor+2,f,c
 16980  004FB2  3213               	rrcf	i2___llmod@divisor+1,f,c
 16981  004FB4  3212               	rrcf	i2___llmod@divisor,f,c
 16982  004FB6  2E16               	decfsz	i2___llmod@counter,f,c
 16983  004FB8  D7E7               	goto	i2l4424
 16984  004FBA                     i2l948:
 16985  004FBA  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 16986  004FBE  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 16987  004FC2  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 16988  004FC6  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 16989  004FCA  0012               	return		;funcret
 16990  004FCC                     __end_ofi2___llmod:
 16991                           	opt stack 0
 16992                           tosu	equ	0xFFF
 16993                           tosh	equ	0xFFE
 16994                           tosl	equ	0xFFD
 16995                           pclatu	equ	0xFFB
 16996                           pclath	equ	0xFFA
 16997                           tblptru	equ	0xFF8
 16998                           tblptrh	equ	0xFF7
 16999                           tblptrl	equ	0xFF6
 17000                           tablat	equ	0xFF5
 17001                           prodh	equ	0xFF4
 17002                           prodl	equ	0xFF3
 17003                           intcon	equ	0xFF2
 17004                           intcon2	equ	0xFF1
 17005                           intcon3	equ	0xFF0
 17006                           postinc0	equ	0xFEE
 17007                           fsr0h	equ	0xFEA
 17008                           fsr0l	equ	0xFE9
 17009                           wreg	equ	0xFE8
 17010                           postdec1	equ	0xFE5
 17011                           fsr1h	equ	0xFE2
 17012                           fsr1l	equ	0xFE1
 17013                           indf2	equ	0xFDF
 17014                           postinc2	equ	0xFDE
 17015                           postdec2	equ	0xFDD
 17016                           fsr2h	equ	0xFDA
 17017                           fsr2l	equ	0xFD9
 17018                           status	equ	0xFD8
 17019                           
 17020 ;; *************** function i2___lldiv *****************
 17021 ;; Defined at:
 17022 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lldiv.c"
 17023 ;; Parameters:    Size  Location     Type
 17024 ;;  dividend        4    0[COMRAM] unsigned long 
 17025 ;;  divisor         4    4[COMRAM] unsigned long 
 17026 ;; Auto vars:     Size  Location     Type
 17027 ;;  __lldiv         4    8[COMRAM] unsigned long 
 17028 ;;  __lldiv         1   12[COMRAM] unsigned char 
 17029 ;; Return value:  Size  Location     Type
 17030 ;;                  4    0[COMRAM] unsigned long 
 17031 ;; Registers used:
 17032 ;;		wreg, status,2, status,0
 17033 ;; Tracked objects:
 17034 ;;		On entry : 0/0
 17035 ;;		On exit  : 0/0
 17036 ;;		Unchanged: 0/0
 17037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17038 ;;      Params:         8       0       0       0       0       0       0
 17039 ;;      Locals:         5       0       0       0       0       0       0
 17040 ;;      Temps:          0       0       0       0       0       0       0
 17041 ;;      Totals:        13       0       0       0       0       0       0
 17042 ;;Total ram usage:       13 bytes
 17043 ;; Hardware stack levels used:    1
 17044 ;; This function calls:
 17045 ;;		Nothing
 17046 ;; This function is called by:
 17047 ;;		i2__doprnt
 17048 ;; This function uses a non-reentrant model
 17049 ;;
 17050                           
 17051                           	psect	text63
 17052  004D0A                     __ptext63:
 17053                           	opt stack 0
 17054  004D0A                     i2___lldiv:
 17055                           	opt stack 21
 17056                           
 17057                           ;incstack = 0
 17058  004D0A  0E00               	movlw	0
 17059  004D0C  6E09               	movwf	i2___lldiv@quotient,c
 17060  004D0E  0E00               	movlw	0
 17061  004D10  6E0A               	movwf	i2___lldiv@quotient+1,c
 17062  004D12  0E00               	movlw	0
 17063  004D14  6E0B               	movwf	i2___lldiv@quotient+2,c
 17064  004D16  0E00               	movlw	0
 17065  004D18  6E0C               	movwf	i2___lldiv@quotient+3,c
 17066  004D1A  5005               	movf	i2___lldiv@divisor,w,c
 17067  004D1C  1006               	iorwf	i2___lldiv@divisor+1,w,c
 17068  004D1E  1007               	iorwf	i2___lldiv@divisor+2,w,c
 17069  004D20  1008               	iorwf	i2___lldiv@divisor+3,w,c
 17070  004D22  B4D8               	btfsc	status,2,c
 17071  004D24  D02A               	goto	i2l938
 17072  004D26  0E01               	movlw	1
 17073  004D28  6E0D               	movwf	i2___lldiv@counter,c
 17074  004D2A  D006               	goto	i2l4402
 17075  004D2C                     i2l4400:
 17076  004D2C  90D8               	bcf	status,0,c
 17077  004D2E  3605               	rlcf	i2___lldiv@divisor,f,c
 17078  004D30  3606               	rlcf	i2___lldiv@divisor+1,f,c
 17079  004D32  3607               	rlcf	i2___lldiv@divisor+2,f,c
 17080  004D34  3608               	rlcf	i2___lldiv@divisor+3,f,c
 17081  004D36  2A0D               	incf	i2___lldiv@counter,f,c
 17082  004D38                     i2l4402:
 17083  004D38  AE08               	btfss	i2___lldiv@divisor+3,7,c
 17084  004D3A  D7F8               	goto	i2l4400
 17085  004D3C                     i2l4404:
 17086  004D3C  90D8               	bcf	status,0,c
 17087  004D3E  3609               	rlcf	i2___lldiv@quotient,f,c
 17088  004D40  360A               	rlcf	i2___lldiv@quotient+1,f,c
 17089  004D42  360B               	rlcf	i2___lldiv@quotient+2,f,c
 17090  004D44  360C               	rlcf	i2___lldiv@quotient+3,f,c
 17091  004D46  5005               	movf	i2___lldiv@divisor,w,c
 17092  004D48  5C01               	subwf	i2___lldiv@dividend,w,c
 17093  004D4A  5006               	movf	i2___lldiv@divisor+1,w,c
 17094  004D4C  5802               	subwfb	i2___lldiv@dividend+1,w,c
 17095  004D4E  5007               	movf	i2___lldiv@divisor+2,w,c
 17096  004D50  5803               	subwfb	i2___lldiv@dividend+2,w,c
 17097  004D52  5008               	movf	i2___lldiv@divisor+3,w,c
 17098  004D54  5804               	subwfb	i2___lldiv@dividend+3,w,c
 17099  004D56  A0D8               	btfss	status,0,c
 17100  004D58  D009               	goto	i2l4412
 17101  004D5A  5005               	movf	i2___lldiv@divisor,w,c
 17102  004D5C  5E01               	subwf	i2___lldiv@dividend,f,c
 17103  004D5E  5006               	movf	i2___lldiv@divisor+1,w,c
 17104  004D60  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 17105  004D62  5007               	movf	i2___lldiv@divisor+2,w,c
 17106  004D64  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 17107  004D66  5008               	movf	i2___lldiv@divisor+3,w,c
 17108  004D68  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 17109  004D6A  8009               	bsf	i2___lldiv@quotient,0,c
 17110  004D6C                     i2l4412:
 17111  004D6C  90D8               	bcf	status,0,c
 17112  004D6E  3208               	rrcf	i2___lldiv@divisor+3,f,c
 17113  004D70  3207               	rrcf	i2___lldiv@divisor+2,f,c
 17114  004D72  3206               	rrcf	i2___lldiv@divisor+1,f,c
 17115  004D74  3205               	rrcf	i2___lldiv@divisor,f,c
 17116  004D76  2E0D               	decfsz	i2___lldiv@counter,f,c
 17117  004D78  D7E1               	goto	i2l4404
 17118  004D7A                     i2l938:
 17119  004D7A  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 17120  004D7E  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 17121  004D82  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 17122  004D86  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 17123  004D8A  0012               	return		;funcret
 17124  004D8C                     __end_ofi2___lldiv:
 17125                           	opt stack 0
 17126                           tosu	equ	0xFFF
 17127                           tosh	equ	0xFFE
 17128                           tosl	equ	0xFFD
 17129                           pclatu	equ	0xFFB
 17130                           pclath	equ	0xFFA
 17131                           tblptru	equ	0xFF8
 17132                           tblptrh	equ	0xFF7
 17133                           tblptrl	equ	0xFF6
 17134                           tablat	equ	0xFF5
 17135                           prodh	equ	0xFF4
 17136                           prodl	equ	0xFF3
 17137                           intcon	equ	0xFF2
 17138                           intcon2	equ	0xFF1
 17139                           intcon3	equ	0xFF0
 17140                           postinc0	equ	0xFEE
 17141                           fsr0h	equ	0xFEA
 17142                           fsr0l	equ	0xFE9
 17143                           wreg	equ	0xFE8
 17144                           postdec1	equ	0xFE5
 17145                           fsr1h	equ	0xFE2
 17146                           fsr1l	equ	0xFE1
 17147                           indf2	equ	0xFDF
 17148                           postinc2	equ	0xFDE
 17149                           postdec2	equ	0xFDD
 17150                           fsr2h	equ	0xFDA
 17151                           fsr2l	equ	0xFD9
 17152                           status	equ	0xFD8
 17153                           
 17154 ;; *************** function i2___fttol *****************
 17155 ;; Defined at:
 17156 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\fttol.c"
 17157 ;; Parameters:    Size  Location     Type
 17158 ;;  f1              3   54[COMRAM] float 
 17159 ;; Auto vars:     Size  Location     Type
 17160 ;;  __fttol         4   64[COMRAM] unsigned long 
 17161 ;;  __fttol         1   68[COMRAM] unsigned char 
 17162 ;;  __fttol         1   63[COMRAM] unsigned char 
 17163 ;; Return value:  Size  Location     Type
 17164 ;;                  4   54[COMRAM] long 
 17165 ;; Registers used:
 17166 ;;		wreg, status,2, status,0
 17167 ;; Tracked objects:
 17168 ;;		On entry : 0/0
 17169 ;;		On exit  : 0/0
 17170 ;;		Unchanged: 0/0
 17171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17172 ;;      Params:         4       0       0       0       0       0       0
 17173 ;;      Locals:         6       0       0       0       0       0       0
 17174 ;;      Temps:          5       0       0       0       0       0       0
 17175 ;;      Totals:        15       0       0       0       0       0       0
 17176 ;;Total ram usage:       15 bytes
 17177 ;; Hardware stack levels used:    1
 17178 ;; This function calls:
 17179 ;;		Nothing
 17180 ;; This function is called by:
 17181 ;;		i2__doprnt
 17182 ;; This function uses a non-reentrant model
 17183 ;;
 17184                           
 17185                           	psect	text64
 17186  0045F0                     __ptext64:
 17187                           	opt stack 0
 17188  0045F0                     i2___fttol:
 17189                           	opt stack 21
 17190                           
 17191                           ;incstack = 0
 17192  0045F0  C039  F03B         	movff	i2___fttol@f1+2,??i2___fttol
 17193  0045F4  6A3C               	clrf	(??i2___fttol+1)& (0+255),c
 17194  0045F6  6A3D               	clrf	(??i2___fttol+2)& (0+255),c
 17195  0045F8  3438               	rlcf	i2___fttol@f1+1,w,c
 17196  0045FA  363B               	rlcf	??i2___fttol& (0+255),f,c
 17197  0045FC  E301               	bnc	u549_41
 17198  0045FE  803C               	bsf	(??i2___fttol+1)& (0+255),0,c
 17199  004600                     u549_41:
 17200  004600  503B               	movf	??i2___fttol,w,c
 17201  004602  6E45               	movwf	i2___fttol@exp1,c
 17202  004604  5045               	movf	i2___fttol@exp1,w,c
 17203  004606  A4D8               	btfss	status,2,c
 17204  004608  D009               	goto	i2l4342
 17205  00460A  0E00               	movlw	0
 17206  00460C  6E37               	movwf	?i2___fttol,c
 17207  00460E  0E00               	movlw	0
 17208  004610  6E38               	movwf	?i2___fttol+1,c
 17209  004612  0E00               	movlw	0
 17210  004614  6E39               	movwf	?i2___fttol+2,c
 17211  004616  0E00               	movlw	0
 17212  004618  6E3A               	movwf	?i2___fttol+3,c
 17213  00461A  0012               	return	
 17214  00461C                     i2l4342:
 17215  00461C  0E17               	movlw	23
 17216  00461E  6E3B               	movwf	??i2___fttol& (0+255),c
 17217  004620  C037  F03C         	movff	i2___fttol@f1,??i2___fttol+1
 17218  004624  C038  F03D         	movff	i2___fttol@f1+1,??i2___fttol+2
 17219  004628  C039  F03E         	movff	i2___fttol@f1+2,??i2___fttol+3
 17220  00462C  283B               	incf	??i2___fttol,w,c
 17221  00462E  6E3F               	movwf	(??i2___fttol+4)& (0+255),c
 17222  004630  D004               	goto	i2u551_40
 17223  004632                     i2u551_45:
 17224  004632  90D8               	bcf	status,0,c
 17225  004634  323E               	rrcf	??i2___fttol+3,f,c
 17226  004636  323D               	rrcf	??i2___fttol+2,f,c
 17227  004638  323C               	rrcf	??i2___fttol+1,f,c
 17228  00463A                     i2u551_40:
 17229  00463A  2E3F               	decfsz	(??i2___fttol+4)& (0+255),f,c
 17230  00463C  D7FA               	goto	i2u551_45
 17231  00463E  503C               	movf	??i2___fttol+1,w,c
 17232  004640  6E40               	movwf	i2___fttol@sign1,c
 17233  004642  8E38               	bsf	i2___fttol@f1+1,7,c
 17234  004644  0EFF               	movlw	255
 17235  004646  1637               	andwf	i2___fttol@f1,f,c
 17236  004648  0EFF               	movlw	255
 17237  00464A  1638               	andwf	i2___fttol@f1+1,f,c
 17238  00464C  0E00               	movlw	0
 17239  00464E  1639               	andwf	i2___fttol@f1+2,f,c
 17240  004650  5037               	movf	i2___fttol@f1,w,c
 17241  004652  6E41               	movwf	i2___fttol@lval,c
 17242  004654  5038               	movf	i2___fttol@f1+1,w,c
 17243  004656  6E42               	movwf	i2___fttol@lval+1,c
 17244  004658  5039               	movf	i2___fttol@f1+2,w,c
 17245  00465A  6E43               	movwf	i2___fttol@lval+2,c
 17246  00465C  6A44               	clrf	i2___fttol@lval+3,c
 17247  00465E  0E8E               	movlw	142
 17248  004660  5E45               	subwf	i2___fttol@exp1,f,c
 17249  004662  AE45               	btfss	i2___fttol@exp1,7,c
 17250  004664  D016               	goto	i2l4364
 17251  004666  5045               	movf	i2___fttol@exp1,w,c
 17252  004668  0A80               	xorlw	128
 17253  00466A  0F8F               	addlw	143
 17254  00466C  B0D8               	btfsc	status,0,c
 17255  00466E  D009               	goto	i2l4360
 17256  004670  0E00               	movlw	0
 17257  004672  6E37               	movwf	?i2___fttol,c
 17258  004674  0E00               	movlw	0
 17259  004676  6E38               	movwf	?i2___fttol+1,c
 17260  004678  0E00               	movlw	0
 17261  00467A  6E39               	movwf	?i2___fttol+2,c
 17262  00467C  0E00               	movlw	0
 17263  00467E  6E3A               	movwf	?i2___fttol+3,c
 17264  004680  0012               	return	
 17265  004682                     i2l4360:
 17266  004682  90D8               	bcf	status,0,c
 17267  004684  3244               	rrcf	i2___fttol@lval+3,f,c
 17268  004686  3243               	rrcf	i2___fttol@lval+2,f,c
 17269  004688  3242               	rrcf	i2___fttol@lval+1,f,c
 17270  00468A  3241               	rrcf	i2___fttol@lval,f,c
 17271  00468C  3E45               	incfsz	i2___fttol@exp1,f,c
 17272  00468E  D7F9               	goto	i2l4360
 17273  004690  D015               	goto	i2l4374
 17274  004692                     i2l4364:
 17275  004692  0E17               	movlw	23
 17276  004694  6445               	cpfsgt	i2___fttol@exp1,c
 17277  004696  D00F               	goto	i2l4372
 17278  004698  0E00               	movlw	0
 17279  00469A  6E37               	movwf	?i2___fttol,c
 17280  00469C  0E00               	movlw	0
 17281  00469E  6E38               	movwf	?i2___fttol+1,c
 17282  0046A0  0E00               	movlw	0
 17283  0046A2  6E39               	movwf	?i2___fttol+2,c
 17284  0046A4  0E00               	movlw	0
 17285  0046A6  6E3A               	movwf	?i2___fttol+3,c
 17286  0046A8  0012               	return	
 17287  0046AA                     i2l4370:
 17288  0046AA  90D8               	bcf	status,0,c
 17289  0046AC  3641               	rlcf	i2___fttol@lval,f,c
 17290  0046AE  3642               	rlcf	i2___fttol@lval+1,f,c
 17291  0046B0  3643               	rlcf	i2___fttol@lval+2,f,c
 17292  0046B2  3644               	rlcf	i2___fttol@lval+3,f,c
 17293  0046B4  0645               	decf	i2___fttol@exp1,f,c
 17294  0046B6                     i2l4372:
 17295  0046B6  5045               	movf	i2___fttol@exp1,w,c
 17296  0046B8  A4D8               	btfss	status,2,c
 17297  0046BA  D7F7               	goto	i2l4370
 17298  0046BC                     i2l4374:
 17299  0046BC  5040               	movf	i2___fttol@sign1,w,c
 17300  0046BE  B4D8               	btfsc	status,2,c
 17301  0046C0  D008               	goto	i2l4378
 17302  0046C2  1E44               	comf	i2___fttol@lval+3,f,c
 17303  0046C4  1E43               	comf	i2___fttol@lval+2,f,c
 17304  0046C6  1E42               	comf	i2___fttol@lval+1,f,c
 17305  0046C8  6C41               	negf	i2___fttol@lval,c
 17306  0046CA  0E00               	movlw	0
 17307  0046CC  2242               	addwfc	i2___fttol@lval+1,f,c
 17308  0046CE  2243               	addwfc	i2___fttol@lval+2,f,c
 17309  0046D0  2244               	addwfc	i2___fttol@lval+3,f,c
 17310  0046D2                     i2l4378:
 17311  0046D2  C041  F037         	movff	i2___fttol@lval,?i2___fttol
 17312  0046D6  C042  F038         	movff	i2___fttol@lval+1,?i2___fttol+1
 17313  0046DA  C043  F039         	movff	i2___fttol@lval+2,?i2___fttol+2
 17314  0046DE  C044  F03A         	movff	i2___fttol@lval+3,?i2___fttol+3
 17315  0046E2  0012               	return	
 17316  0046E4                     __end_ofi2___fttol:
 17317                           	opt stack 0
 17318                           tosu	equ	0xFFF
 17319                           tosh	equ	0xFFE
 17320                           tosl	equ	0xFFD
 17321                           pclatu	equ	0xFFB
 17322                           pclath	equ	0xFFA
 17323                           tblptru	equ	0xFF8
 17324                           tblptrh	equ	0xFF7
 17325                           tblptrl	equ	0xFF6
 17326                           tablat	equ	0xFF5
 17327                           prodh	equ	0xFF4
 17328                           prodl	equ	0xFF3
 17329                           intcon	equ	0xFF2
 17330                           intcon2	equ	0xFF1
 17331                           intcon3	equ	0xFF0
 17332                           postinc0	equ	0xFEE
 17333                           fsr0h	equ	0xFEA
 17334                           fsr0l	equ	0xFE9
 17335                           wreg	equ	0xFE8
 17336                           postdec1	equ	0xFE5
 17337                           fsr1h	equ	0xFE2
 17338                           fsr1l	equ	0xFE1
 17339                           indf2	equ	0xFDF
 17340                           postinc2	equ	0xFDE
 17341                           postdec2	equ	0xFDD
 17342                           fsr2h	equ	0xFDA
 17343                           fsr2l	equ	0xFD9
 17344                           status	equ	0xFD8
 17345                           
 17346 ;; *************** function i2___ftsub *****************
 17347 ;; Defined at:
 17348 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftsub.c"
 17349 ;; Parameters:    Size  Location     Type
 17350 ;;  f1              3   32[COMRAM] float 
 17351 ;;  f2              3   35[COMRAM] float 
 17352 ;; Auto vars:     Size  Location     Type
 17353 ;;		None
 17354 ;; Return value:  Size  Location     Type
 17355 ;;                  3   32[COMRAM] float 
 17356 ;; Registers used:
 17357 ;;		wreg, status,2, status,0, cstack
 17358 ;; Tracked objects:
 17359 ;;		On entry : 0/0
 17360 ;;		On exit  : 0/0
 17361 ;;		Unchanged: 0/0
 17362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17363 ;;      Params:         6       0       0       0       0       0       0
 17364 ;;      Locals:         0       0       0       0       0       0       0
 17365 ;;      Temps:          0       0       0       0       0       0       0
 17366 ;;      Totals:         6       0       0       0       0       0       0
 17367 ;;Total ram usage:        6 bytes
 17368 ;; Hardware stack levels used:    1
 17369 ;; Hardware stack levels required when called:    2
 17370 ;; This function calls:
 17371 ;;		i2___ftadd
 17372 ;; This function is called by:
 17373 ;;		i2__doprnt
 17374 ;; This function uses a non-reentrant model
 17375 ;;
 17376                           
 17377                           	psect	text65
 17378  0052C4                     __ptext65:
 17379                           	opt stack 0
 17380  0052C4                     i2___ftsub:
 17381                           	opt stack 19
 17382                           
 17383                           ;incstack = 0
 17384  0052C4  5024               	movf	i2___ftsub@f2,w,c
 17385  0052C6  1025               	iorwf	i2___ftsub@f2+1,w,c
 17386  0052C8  1026               	iorwf	i2___ftsub@f2+2,w,c
 17387  0052CA  B4D8               	btfsc	status,2,c
 17388  0052CC  D006               	goto	i2l4332
 17389  0052CE  0E00               	movlw	0
 17390  0052D0  1A24               	xorwf	i2___ftsub@f2,f,c
 17391  0052D2  0E00               	movlw	0
 17392  0052D4  1A25               	xorwf	i2___ftsub@f2+1,f,c
 17393  0052D6  0E80               	movlw	128
 17394  0052D8  1A26               	xorwf	i2___ftsub@f2+2,f,c
 17395  0052DA                     i2l4332:
 17396  0052DA  C021  F015         	movff	i2___ftsub@f1,i2___ftadd@f1
 17397  0052DE  C022  F016         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 17398  0052E2  C023  F017         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 17399  0052E6  C024  F018         	movff	i2___ftsub@f2,i2___ftadd@f2
 17400  0052EA  C025  F019         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 17401  0052EE  C026  F01A         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 17402  0052F2  EC40  F01A         	call	i2___ftadd	;wreg free
 17403  0052F6  C015  F021         	movff	?i2___ftadd,?i2___ftsub
 17404  0052FA  C016  F022         	movff	?i2___ftadd+1,?i2___ftsub+1
 17405  0052FE  C017  F023         	movff	?i2___ftadd+2,?i2___ftsub+2
 17406  005302  0012               	return	
 17407  005304                     __end_ofi2___ftsub:
 17408                           	opt stack 0
 17409                           tosu	equ	0xFFF
 17410                           tosh	equ	0xFFE
 17411                           tosl	equ	0xFFD
 17412                           pclatu	equ	0xFFB
 17413                           pclath	equ	0xFFA
 17414                           tblptru	equ	0xFF8
 17415                           tblptrh	equ	0xFF7
 17416                           tblptrl	equ	0xFF6
 17417                           tablat	equ	0xFF5
 17418                           prodh	equ	0xFF4
 17419                           prodl	equ	0xFF3
 17420                           intcon	equ	0xFF2
 17421                           intcon2	equ	0xFF1
 17422                           intcon3	equ	0xFF0
 17423                           postinc0	equ	0xFEE
 17424                           fsr0h	equ	0xFEA
 17425                           fsr0l	equ	0xFE9
 17426                           wreg	equ	0xFE8
 17427                           postdec1	equ	0xFE5
 17428                           fsr1h	equ	0xFE2
 17429                           fsr1l	equ	0xFE1
 17430                           indf2	equ	0xFDF
 17431                           postinc2	equ	0xFDE
 17432                           postdec2	equ	0xFDD
 17433                           fsr2h	equ	0xFDA
 17434                           fsr2l	equ	0xFD9
 17435                           status	equ	0xFD8
 17436                           
 17437 ;; *************** function i2___ftadd *****************
 17438 ;; Defined at:
 17439 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftadd.c"
 17440 ;; Parameters:    Size  Location     Type
 17441 ;;  f1              3   20[COMRAM] float 
 17442 ;;  f2              3   23[COMRAM] float 
 17443 ;; Auto vars:     Size  Location     Type
 17444 ;;  __ftadd         1   31[COMRAM] unsigned char 
 17445 ;;  __ftadd         1   30[COMRAM] unsigned char 
 17446 ;;  __ftadd         1   29[COMRAM] unsigned char 
 17447 ;; Return value:  Size  Location     Type
 17448 ;;                  3   20[COMRAM] float 
 17449 ;; Registers used:
 17450 ;;		wreg, status,2, status,0, cstack
 17451 ;; Tracked objects:
 17452 ;;		On entry : 0/0
 17453 ;;		On exit  : 0/0
 17454 ;;		Unchanged: 0/0
 17455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17456 ;;      Params:         6       0       0       0       0       0       0
 17457 ;;      Locals:         3       0       0       0       0       0       0
 17458 ;;      Temps:          3       0       0       0       0       0       0
 17459 ;;      Totals:        12       0       0       0       0       0       0
 17460 ;;Total ram usage:       12 bytes
 17461 ;; Hardware stack levels used:    1
 17462 ;; Hardware stack levels required when called:    1
 17463 ;; This function calls:
 17464 ;;		i2___ftpack
 17465 ;; This function is called by:
 17466 ;;		_INT0_ISR
 17467 ;;		i2__doprnt
 17468 ;;		i2___ftsub
 17469 ;; This function uses a non-reentrant model
 17470 ;;
 17471                           
 17472                           	psect	text66
 17473  003480                     __ptext66:
 17474                           	opt stack 0
 17475  003480                     i2___ftadd:
 17476                           	opt stack 19
 17477                           
 17478                           ;incstack = 0
 17479  003480  C017  F01B         	movff	i2___ftadd@f1+2,??i2___ftadd
 17480  003484  6A1C               	clrf	(??i2___ftadd+1)& (0+255),c
 17481  003486  6A1D               	clrf	(??i2___ftadd+2)& (0+255),c
 17482  003488  3416               	rlcf	i2___ftadd@f1+1,w,c
 17483  00348A  361B               	rlcf	??i2___ftadd& (0+255),f,c
 17484  00348C  E301               	bnc	u450_41
 17485  00348E  801C               	bsf	(??i2___ftadd+1)& (0+255),0,c
 17486  003490                     u450_41:
 17487  003490  501B               	movf	??i2___ftadd,w,c
 17488  003492  6E20               	movwf	i2___ftadd@exp1,c
 17489  003494  C01A  F01B         	movff	i2___ftadd@f2+2,??i2___ftadd
 17490  003498  6A1C               	clrf	(??i2___ftadd+1)& (0+255),c
 17491  00349A  6A1D               	clrf	(??i2___ftadd+2)& (0+255),c
 17492  00349C  3419               	rlcf	i2___ftadd@f2+1,w,c
 17493  00349E  361B               	rlcf	??i2___ftadd& (0+255),f,c
 17494  0034A0  E301               	bnc	u451_41
 17495  0034A2  801C               	bsf	(??i2___ftadd+1)& (0+255),0,c
 17496  0034A4                     u451_41:
 17497  0034A4  501B               	movf	??i2___ftadd,w,c
 17498  0034A6  6E1F               	movwf	i2___ftadd@exp2,c
 17499  0034A8  5020               	movf	i2___ftadd@exp1,w,c
 17500  0034AA  B4D8               	btfsc	status,2,c
 17501  0034AC  D00B               	goto	i2l792
 17502  0034AE  501F               	movf	i2___ftadd@exp2,w,c
 17503  0034B0  5C20               	subwf	i2___ftadd@exp1,w,c
 17504  0034B2  B0D8               	btfsc	status,0,c
 17505  0034B4  D00E               	goto	i2l3794
 17506  0034B6  5020               	movf	i2___ftadd@exp1,w,c
 17507  0034B8  0800               	sublw	0
 17508  0034BA  241F               	addwf	i2___ftadd@exp2,w,c
 17509  0034BC  6E1B               	movwf	??i2___ftadd& (0+255),c
 17510  0034BE  0E18               	movlw	24
 17511  0034C0  641B               	cpfsgt	??i2___ftadd,c
 17512  0034C2  D007               	goto	i2l3794
 17513  0034C4                     i2l792:
 17514  0034C4  C018  F015         	movff	i2___ftadd@f2,?i2___ftadd
 17515  0034C8  C019  F016         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 17516  0034CC  C01A  F017         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 17517  0034D0  0012               	return	
 17518  0034D2                     i2l3794:
 17519  0034D2  501F               	movf	i2___ftadd@exp2,w,c
 17520  0034D4  B4D8               	btfsc	status,2,c
 17521  0034D6  D00B               	goto	i2l796
 17522  0034D8  5020               	movf	i2___ftadd@exp1,w,c
 17523  0034DA  5C1F               	subwf	i2___ftadd@exp2,w,c
 17524  0034DC  B0D8               	btfsc	status,0,c
 17525  0034DE  D00E               	goto	i2l3800
 17526  0034E0  501F               	movf	i2___ftadd@exp2,w,c
 17527  0034E2  0800               	sublw	0
 17528  0034E4  2420               	addwf	i2___ftadd@exp1,w,c
 17529  0034E6  6E1B               	movwf	??i2___ftadd& (0+255),c
 17530  0034E8  0E18               	movlw	24
 17531  0034EA  641B               	cpfsgt	??i2___ftadd,c
 17532  0034EC  D007               	goto	i2l3800
 17533  0034EE                     i2l796:
 17534  0034EE  C015  F015         	movff	i2___ftadd@f1,?i2___ftadd
 17535  0034F2  C016  F016         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 17536  0034F6  C017  F017         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 17537  0034FA  0012               	return	
 17538  0034FC                     i2l3800:
 17539  0034FC  0E06               	movlw	6
 17540  0034FE  6E1E               	movwf	i2___ftadd@sign,c
 17541  003500  BE17               	btfsc	i2___ftadd@f1+2,7,c
 17542  003502  8E1E               	bsf	i2___ftadd@sign,7,c
 17543  003504  BE1A               	btfsc	i2___ftadd@f2+2,7,c
 17544  003506  8C1E               	bsf	i2___ftadd@sign,6,c
 17545  003508  8E16               	bsf	i2___ftadd@f1+1,7,c
 17546  00350A  0EFF               	movlw	255
 17547  00350C  1615               	andwf	i2___ftadd@f1,f,c
 17548  00350E  0EFF               	movlw	255
 17549  003510  1616               	andwf	i2___ftadd@f1+1,f,c
 17550  003512  0E00               	movlw	0
 17551  003514  1617               	andwf	i2___ftadd@f1+2,f,c
 17552  003516  8E19               	bsf	i2___ftadd@f2+1,7,c
 17553  003518  0EFF               	movlw	255
 17554  00351A  1618               	andwf	i2___ftadd@f2,f,c
 17555  00351C  0EFF               	movlw	255
 17556  00351E  1619               	andwf	i2___ftadd@f2+1,f,c
 17557  003520  0E00               	movlw	0
 17558  003522  161A               	andwf	i2___ftadd@f2+2,f,c
 17559  003524  501F               	movf	i2___ftadd@exp2,w,c
 17560  003526  5C20               	subwf	i2___ftadd@exp1,w,c
 17561  003528  B0D8               	btfsc	status,0,c
 17562  00352A  D01B               	goto	i2l3826
 17563  00352C                     i2l3816:
 17564  00352C  90D8               	bcf	status,0,c
 17565  00352E  3618               	rlcf	i2___ftadd@f2,f,c
 17566  003530  3619               	rlcf	i2___ftadd@f2+1,f,c
 17567  003532  361A               	rlcf	i2___ftadd@f2+2,f,c
 17568  003534  061F               	decf	i2___ftadd@exp2,f,c
 17569  003536  5020               	movf	i2___ftadd@exp1,w,c
 17570  003538  181F               	xorwf	i2___ftadd@exp2,w,c
 17571  00353A  B4D8               	btfsc	status,2,c
 17572  00353C  D00D               	goto	i2l3824
 17573  00353E  061E               	decf	i2___ftadd@sign,f,c
 17574  003540  C01E  F01B         	movff	i2___ftadd@sign,??i2___ftadd
 17575  003544  0E07               	movlw	7
 17576  003546  161B               	andwf	??i2___ftadd,f,c
 17577  003548  B4D8               	btfsc	status,2,c
 17578  00354A  D006               	goto	i2l3824
 17579  00354C  D7EF               	goto	i2l3816
 17580  00354E                     i2l3822:
 17581  00354E  90D8               	bcf	status,0,c
 17582  003550  3217               	rrcf	i2___ftadd@f1+2,f,c
 17583  003552  3216               	rrcf	i2___ftadd@f1+1,f,c
 17584  003554  3215               	rrcf	i2___ftadd@f1,f,c
 17585  003556  2A20               	incf	i2___ftadd@exp1,f,c
 17586  003558                     i2l3824:
 17587  003558  501F               	movf	i2___ftadd@exp2,w,c
 17588  00355A  1820               	xorwf	i2___ftadd@exp1,w,c
 17589  00355C  B4D8               	btfsc	status,2,c
 17590  00355E  D01F               	goto	i2l807
 17591  003560  D7F6               	goto	i2l3822
 17592  003562                     i2l3826:
 17593  003562  5020               	movf	i2___ftadd@exp1,w,c
 17594  003564  5C1F               	subwf	i2___ftadd@exp2,w,c
 17595  003566  B0D8               	btfsc	status,0,c
 17596  003568  D01A               	goto	i2l807
 17597  00356A                     i2l3828:
 17598  00356A  90D8               	bcf	status,0,c
 17599  00356C  3615               	rlcf	i2___ftadd@f1,f,c
 17600  00356E  3616               	rlcf	i2___ftadd@f1+1,f,c
 17601  003570  3617               	rlcf	i2___ftadd@f1+2,f,c
 17602  003572  0620               	decf	i2___ftadd@exp1,f,c
 17603  003574  5020               	movf	i2___ftadd@exp1,w,c
 17604  003576  181F               	xorwf	i2___ftadd@exp2,w,c
 17605  003578  B4D8               	btfsc	status,2,c
 17606  00357A  D00D               	goto	i2l3836
 17607  00357C  061E               	decf	i2___ftadd@sign,f,c
 17608  00357E  C01E  F01B         	movff	i2___ftadd@sign,??i2___ftadd
 17609  003582  0E07               	movlw	7
 17610  003584  161B               	andwf	??i2___ftadd,f,c
 17611  003586  B4D8               	btfsc	status,2,c
 17612  003588  D006               	goto	i2l3836
 17613  00358A  D7EF               	goto	i2l3828
 17614  00358C                     i2l3834:
 17615  00358C  90D8               	bcf	status,0,c
 17616  00358E  321A               	rrcf	i2___ftadd@f2+2,f,c
 17617  003590  3219               	rrcf	i2___ftadd@f2+1,f,c
 17618  003592  3218               	rrcf	i2___ftadd@f2,f,c
 17619  003594  2A1F               	incf	i2___ftadd@exp2,f,c
 17620  003596                     i2l3836:
 17621  003596  501F               	movf	i2___ftadd@exp2,w,c
 17622  003598  1820               	xorwf	i2___ftadd@exp1,w,c
 17623  00359A  A4D8               	btfss	status,2,c
 17624  00359C  D7F7               	goto	i2l3834
 17625  00359E                     i2l807:
 17626  00359E  AE1E               	btfss	i2___ftadd@sign,7,c
 17627  0035A0  D00C               	goto	i2l816
 17628  0035A2  0EFF               	movlw	255
 17629  0035A4  1A15               	xorwf	i2___ftadd@f1,f,c
 17630  0035A6  0EFF               	movlw	255
 17631  0035A8  1A16               	xorwf	i2___ftadd@f1+1,f,c
 17632  0035AA  0EFF               	movlw	255
 17633  0035AC  1A17               	xorwf	i2___ftadd@f1+2,f,c
 17634  0035AE  0E01               	movlw	1
 17635  0035B0  2615               	addwf	i2___ftadd@f1,f,c
 17636  0035B2  0E00               	movlw	0
 17637  0035B4  2216               	addwfc	i2___ftadd@f1+1,f,c
 17638  0035B6  0E00               	movlw	0
 17639  0035B8  2217               	addwfc	i2___ftadd@f1+2,f,c
 17640  0035BA                     i2l816:
 17641  0035BA  AC1E               	btfss	i2___ftadd@sign,6,c
 17642  0035BC  D00C               	goto	i2l3842
 17643  0035BE  0EFF               	movlw	255
 17644  0035C0  1A18               	xorwf	i2___ftadd@f2,f,c
 17645  0035C2  0EFF               	movlw	255
 17646  0035C4  1A19               	xorwf	i2___ftadd@f2+1,f,c
 17647  0035C6  0EFF               	movlw	255
 17648  0035C8  1A1A               	xorwf	i2___ftadd@f2+2,f,c
 17649  0035CA  0E01               	movlw	1
 17650  0035CC  2618               	addwf	i2___ftadd@f2,f,c
 17651  0035CE  0E00               	movlw	0
 17652  0035D0  2219               	addwfc	i2___ftadd@f2+1,f,c
 17653  0035D2  0E00               	movlw	0
 17654  0035D4  221A               	addwfc	i2___ftadd@f2+2,f,c
 17655  0035D6                     i2l3842:
 17656  0035D6  0E00               	movlw	0
 17657  0035D8  6E1E               	movwf	i2___ftadd@sign,c
 17658  0035DA  5015               	movf	i2___ftadd@f1,w,c
 17659  0035DC  2618               	addwf	i2___ftadd@f2,f,c
 17660  0035DE  5016               	movf	i2___ftadd@f1+1,w,c
 17661  0035E0  2219               	addwfc	i2___ftadd@f2+1,f,c
 17662  0035E2  5017               	movf	i2___ftadd@f1+2,w,c
 17663  0035E4  221A               	addwfc	i2___ftadd@f2+2,f,c
 17664  0035E6  AE1A               	btfss	i2___ftadd@f2+2,7,c
 17665  0035E8  D00E               	goto	i2l3852
 17666  0035EA  0EFF               	movlw	255
 17667  0035EC  1A18               	xorwf	i2___ftadd@f2,f,c
 17668  0035EE  0EFF               	movlw	255
 17669  0035F0  1A19               	xorwf	i2___ftadd@f2+1,f,c
 17670  0035F2  0EFF               	movlw	255
 17671  0035F4  1A1A               	xorwf	i2___ftadd@f2+2,f,c
 17672  0035F6  0E01               	movlw	1
 17673  0035F8  2618               	addwf	i2___ftadd@f2,f,c
 17674  0035FA  0E00               	movlw	0
 17675  0035FC  2219               	addwfc	i2___ftadd@f2+1,f,c
 17676  0035FE  0E00               	movlw	0
 17677  003600  221A               	addwfc	i2___ftadd@f2+2,f,c
 17678  003602  0E01               	movlw	1
 17679  003604  6E1E               	movwf	i2___ftadd@sign,c
 17680  003606                     i2l3852:
 17681  003606  C018  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 17682  00360A  C019  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 17683  00360E  C01A  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 17684  003612  C020  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 17685  003616  C01E  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 17686  00361A  EC06  F025         	call	i2___ftpack	;wreg free
 17687  00361E  C001  F015         	movff	?i2___ftpack,?i2___ftadd
 17688  003622  C002  F016         	movff	?i2___ftpack+1,?i2___ftadd+1
 17689  003626  C003  F017         	movff	?i2___ftpack+2,?i2___ftadd+2
 17690  00362A  0012               	return	
 17691  00362C                     __end_ofi2___ftadd:
 17692                           	opt stack 0
 17693                           tosu	equ	0xFFF
 17694                           tosh	equ	0xFFE
 17695                           tosl	equ	0xFFD
 17696                           pclatu	equ	0xFFB
 17697                           pclath	equ	0xFFA
 17698                           tblptru	equ	0xFF8
 17699                           tblptrh	equ	0xFF7
 17700                           tblptrl	equ	0xFF6
 17701                           tablat	equ	0xFF5
 17702                           prodh	equ	0xFF4
 17703                           prodl	equ	0xFF3
 17704                           intcon	equ	0xFF2
 17705                           intcon2	equ	0xFF1
 17706                           intcon3	equ	0xFF0
 17707                           postinc0	equ	0xFEE
 17708                           fsr0h	equ	0xFEA
 17709                           fsr0l	equ	0xFE9
 17710                           wreg	equ	0xFE8
 17711                           postdec1	equ	0xFE5
 17712                           fsr1h	equ	0xFE2
 17713                           fsr1l	equ	0xFE1
 17714                           indf2	equ	0xFDF
 17715                           postinc2	equ	0xFDE
 17716                           postdec2	equ	0xFDD
 17717                           fsr2h	equ	0xFDA
 17718                           fsr2l	equ	0xFD9
 17719                           status	equ	0xFD8
 17720                           
 17721 ;; *************** function i2___ftneg *****************
 17722 ;; Defined at:
 17723 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftneg.c"
 17724 ;; Parameters:    Size  Location     Type
 17725 ;;  f1              3    0[COMRAM] float 
 17726 ;; Auto vars:     Size  Location     Type
 17727 ;;		None
 17728 ;; Return value:  Size  Location     Type
 17729 ;;                  3    0[COMRAM] float 
 17730 ;; Registers used:
 17731 ;;		wreg, status,2, status,0
 17732 ;; Tracked objects:
 17733 ;;		On entry : 0/0
 17734 ;;		On exit  : 0/0
 17735 ;;		Unchanged: 0/0
 17736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17737 ;;      Params:         3       0       0       0       0       0       0
 17738 ;;      Locals:         0       0       0       0       0       0       0
 17739 ;;      Temps:          0       0       0       0       0       0       0
 17740 ;;      Totals:         3       0       0       0       0       0       0
 17741 ;;Total ram usage:        3 bytes
 17742 ;; Hardware stack levels used:    1
 17743 ;; This function calls:
 17744 ;;		Nothing
 17745 ;; This function is called by:
 17746 ;;		i2__doprnt
 17747 ;; This function uses a non-reentrant model
 17748 ;;
 17749                           
 17750                           	psect	text67
 17751  0054AC                     __ptext67:
 17752                           	opt stack 0
 17753  0054AC                     i2___ftneg:
 17754                           	opt stack 21
 17755                           
 17756                           ;incstack = 0
 17757  0054AC  5001               	movf	i2___ftneg@f1,w,c
 17758  0054AE  1002               	iorwf	i2___ftneg@f1+1,w,c
 17759  0054B0  1003               	iorwf	i2___ftneg@f1+2,w,c
 17760  0054B2  B4D8               	btfsc	status,2,c
 17761  0054B4  D006               	goto	i2l866
 17762  0054B6  0E00               	movlw	0
 17763  0054B8  1A01               	xorwf	i2___ftneg@f1,f,c
 17764  0054BA  0E00               	movlw	0
 17765  0054BC  1A02               	xorwf	i2___ftneg@f1+1,f,c
 17766  0054BE  0E80               	movlw	128
 17767  0054C0  1A03               	xorwf	i2___ftneg@f1+2,f,c
 17768  0054C2                     i2l866:
 17769  0054C2  C001  F001         	movff	i2___ftneg@f1,?i2___ftneg
 17770  0054C6  C002  F002         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 17771  0054CA  C003  F003         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 17772  0054CE  0012               	return		;funcret
 17773  0054D0                     __end_ofi2___ftneg:
 17774                           	opt stack 0
 17775                           tosu	equ	0xFFF
 17776                           tosh	equ	0xFFE
 17777                           tosl	equ	0xFFD
 17778                           pclatu	equ	0xFFB
 17779                           pclath	equ	0xFFA
 17780                           tblptru	equ	0xFF8
 17781                           tblptrh	equ	0xFF7
 17782                           tblptrl	equ	0xFF6
 17783                           tablat	equ	0xFF5
 17784                           prodh	equ	0xFF4
 17785                           prodl	equ	0xFF3
 17786                           intcon	equ	0xFF2
 17787                           intcon2	equ	0xFF1
 17788                           intcon3	equ	0xFF0
 17789                           postinc0	equ	0xFEE
 17790                           fsr0h	equ	0xFEA
 17791                           fsr0l	equ	0xFE9
 17792                           wreg	equ	0xFE8
 17793                           postdec1	equ	0xFE5
 17794                           fsr1h	equ	0xFE2
 17795                           fsr1l	equ	0xFE1
 17796                           indf2	equ	0xFDF
 17797                           postinc2	equ	0xFDE
 17798                           postdec2	equ	0xFDD
 17799                           fsr2h	equ	0xFDA
 17800                           fsr2l	equ	0xFD9
 17801                           status	equ	0xFD8
 17802                           
 17803 ;; *************** function i2___ftge *****************
 17804 ;; Defined at:
 17805 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftge.c"
 17806 ;; Parameters:    Size  Location     Type
 17807 ;;  ff1             3    0[COMRAM] float 
 17808 ;;  ff2             3    3[COMRAM] float 
 17809 ;; Auto vars:     Size  Location     Type
 17810 ;;		None
 17811 ;; Return value:  Size  Location     Type
 17812 ;;		None               void
 17813 ;; Registers used:
 17814 ;;		wreg, status,2, status,0
 17815 ;; Tracked objects:
 17816 ;;		On entry : 0/0
 17817 ;;		On exit  : 0/0
 17818 ;;		Unchanged: 0/0
 17819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17820 ;;      Params:         6       0       0       0       0       0       0
 17821 ;;      Locals:         0       0       0       0       0       0       0
 17822 ;;      Temps:          3       0       0       0       0       0       0
 17823 ;;      Totals:         9       0       0       0       0       0       0
 17824 ;;Total ram usage:        9 bytes
 17825 ;; Hardware stack levels used:    1
 17826 ;; This function calls:
 17827 ;;		Nothing
 17828 ;; This function is called by:
 17829 ;;		i2__doprnt
 17830 ;; This function uses a non-reentrant model
 17831 ;;
 17832                           
 17833                           	psect	text68
 17834  004BF6                     __ptext68:
 17835                           	opt stack 0
 17836  004BF6                     i2___ftge:
 17837                           	opt stack 21
 17838                           
 17839                           ;incstack = 0
 17840  004BF6  AE03               	btfss	i2___ftge@ff1+2,7,c
 17841  004BF8  D016               	goto	i2l4310
 17842  004BFA  C001  F007         	movff	i2___ftge@ff1,??i2___ftge
 17843  004BFE  C002  F008         	movff	i2___ftge@ff1+1,??i2___ftge+1
 17844  004C02  C003  F009         	movff	i2___ftge@ff1+2,??i2___ftge+2
 17845  004C06  1E07               	comf	??i2___ftge,f,c
 17846  004C08  1E08               	comf	??i2___ftge+1,f,c
 17847  004C0A  1E09               	comf	??i2___ftge+2,f,c
 17848  004C0C  2A07               	incf	??i2___ftge,f,c
 17849  004C0E  0E00               	movlw	0
 17850  004C10  2208               	addwfc	??i2___ftge+1,f,c
 17851  004C12  2209               	addwfc	??i2___ftge+2,f,c
 17852  004C14  0E00               	movlw	0
 17853  004C16  2407               	addwf	??i2___ftge,w,c
 17854  004C18  6E01               	movwf	i2___ftge@ff1,c
 17855  004C1A  0E00               	movlw	0
 17856  004C1C  2008               	addwfc	??i2___ftge+1,w,c
 17857  004C1E  6E02               	movwf	i2___ftge@ff1+1,c
 17858  004C20  0E80               	movlw	128
 17859  004C22  2009               	addwfc	??i2___ftge+2,w,c
 17860  004C24  6E03               	movwf	i2___ftge@ff1+2,c
 17861  004C26                     i2l4310:
 17862  004C26  AE06               	btfss	i2___ftge@ff2+2,7,c
 17863  004C28  D016               	goto	i2l4314
 17864  004C2A  C004  F007         	movff	i2___ftge@ff2,??i2___ftge
 17865  004C2E  C005  F008         	movff	i2___ftge@ff2+1,??i2___ftge+1
 17866  004C32  C006  F009         	movff	i2___ftge@ff2+2,??i2___ftge+2
 17867  004C36  1E07               	comf	??i2___ftge,f,c
 17868  004C38  1E08               	comf	??i2___ftge+1,f,c
 17869  004C3A  1E09               	comf	??i2___ftge+2,f,c
 17870  004C3C  2A07               	incf	??i2___ftge,f,c
 17871  004C3E  0E00               	movlw	0
 17872  004C40  2208               	addwfc	??i2___ftge+1,f,c
 17873  004C42  2209               	addwfc	??i2___ftge+2,f,c
 17874  004C44  0E00               	movlw	0
 17875  004C46  2407               	addwf	??i2___ftge,w,c
 17876  004C48  6E04               	movwf	i2___ftge@ff2,c
 17877  004C4A  0E00               	movlw	0
 17878  004C4C  2008               	addwfc	??i2___ftge+1,w,c
 17879  004C4E  6E05               	movwf	i2___ftge@ff2+1,c
 17880  004C50  0E80               	movlw	128
 17881  004C52  2009               	addwfc	??i2___ftge+2,w,c
 17882  004C54  6E06               	movwf	i2___ftge@ff2+2,c
 17883  004C56                     i2l4314:
 17884  004C56  0E00               	movlw	0
 17885  004C58  1A01               	xorwf	i2___ftge@ff1,f,c
 17886  004C5A  0E00               	movlw	0
 17887  004C5C  1A02               	xorwf	i2___ftge@ff1+1,f,c
 17888  004C5E  0E80               	movlw	128
 17889  004C60  1A03               	xorwf	i2___ftge@ff1+2,f,c
 17890  004C62  0E00               	movlw	0
 17891  004C64  1A04               	xorwf	i2___ftge@ff2,f,c
 17892  004C66  0E00               	movlw	0
 17893  004C68  1A05               	xorwf	i2___ftge@ff2+1,f,c
 17894  004C6A  0E80               	movlw	128
 17895  004C6C  1A06               	xorwf	i2___ftge@ff2+2,f,c
 17896  004C6E  5004               	movf	i2___ftge@ff2,w,c
 17897  004C70  5C01               	subwf	i2___ftge@ff1,w,c
 17898  004C72  5005               	movf	i2___ftge@ff2+1,w,c
 17899  004C74  5802               	subwfb	i2___ftge@ff1+1,w,c
 17900  004C76  5006               	movf	i2___ftge@ff2+2,w,c
 17901  004C78  5803               	subwfb	i2___ftge@ff1+2,w,c
 17902  004C7A  B0D8               	btfsc	status,0,c
 17903  004C7C  D002               	goto	i2l4320
 17904  004C7E  90D8               	bcf	status,0,c
 17905  004C80  0012               	return	
 17906  004C82                     i2l4320:
 17907  004C82  80D8               	bsf	status,0,c
 17908  004C84  0012               	return	
 17909  004C86                     __end_ofi2___ftge:
 17910                           	opt stack 0
 17911                           tosu	equ	0xFFF
 17912                           tosh	equ	0xFFE
 17913                           tosl	equ	0xFFD
 17914                           pclatu	equ	0xFFB
 17915                           pclath	equ	0xFFA
 17916                           tblptru	equ	0xFF8
 17917                           tblptrh	equ	0xFF7
 17918                           tblptrl	equ	0xFF6
 17919                           tablat	equ	0xFF5
 17920                           prodh	equ	0xFF4
 17921                           prodl	equ	0xFF3
 17922                           intcon	equ	0xFF2
 17923                           intcon2	equ	0xFF1
 17924                           intcon3	equ	0xFF0
 17925                           postinc0	equ	0xFEE
 17926                           fsr0h	equ	0xFEA
 17927                           fsr0l	equ	0xFE9
 17928                           wreg	equ	0xFE8
 17929                           postdec1	equ	0xFE5
 17930                           fsr1h	equ	0xFE2
 17931                           fsr1l	equ	0xFE1
 17932                           indf2	equ	0xFDF
 17933                           postinc2	equ	0xFDE
 17934                           postdec2	equ	0xFDD
 17935                           fsr2h	equ	0xFDA
 17936                           fsr2l	equ	0xFD9
 17937                           status	equ	0xFD8
 17938                           
 17939 ;; *************** function ___lwtoft *****************
 17940 ;; Defined at:
 17941 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwtoft.c"
 17942 ;; Parameters:    Size  Location     Type
 17943 ;;  c               2    8[COMRAM] unsigned int 
 17944 ;; Auto vars:     Size  Location     Type
 17945 ;;		None
 17946 ;; Return value:  Size  Location     Type
 17947 ;;                  3    8[COMRAM] float 
 17948 ;; Registers used:
 17949 ;;		wreg, status,2, status,0, cstack
 17950 ;; Tracked objects:
 17951 ;;		On entry : 0/0
 17952 ;;		On exit  : 0/0
 17953 ;;		Unchanged: 0/0
 17954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17955 ;;      Params:         3       0       0       0       0       0       0
 17956 ;;      Locals:         0       0       0       0       0       0       0
 17957 ;;      Temps:          0       0       0       0       0       0       0
 17958 ;;      Totals:         3       0       0       0       0       0       0
 17959 ;;Total ram usage:        3 bytes
 17960 ;; Hardware stack levels used:    1
 17961 ;; Hardware stack levels required when called:    1
 17962 ;; This function calls:
 17963 ;;		i2___ftpack
 17964 ;; This function is called by:
 17965 ;;		_INT0_ISR
 17966 ;; This function uses a non-reentrant model
 17967 ;;
 17968                           
 17969                           	psect	text69
 17970  0054D0                     __ptext69:
 17971                           	opt stack 0
 17972  0054D0                     ___lwtoft:
 17973                           	opt stack 22
 17974                           
 17975                           ;incstack = 0
 17976  0054D0  C009  F001         	movff	___lwtoft@c,i2___ftpack@arg
 17977  0054D4  C00A  F002         	movff	___lwtoft@c+1,i2___ftpack@arg+1
 17978  0054D8  6A03               	clrf	i2___ftpack@arg+2,c
 17979  0054DA  0E8E               	movlw	142
 17980  0054DC  6E04               	movwf	i2___ftpack@exp,c
 17981  0054DE  0E00               	movlw	0
 17982  0054E0  6E05               	movwf	i2___ftpack@sign,c
 17983  0054E2  EC06  F025         	call	i2___ftpack	;wreg free
 17984  0054E6  C001  F009         	movff	?i2___ftpack,?___lwtoft
 17985  0054EA  C002  F00A         	movff	?i2___ftpack+1,?___lwtoft+1
 17986  0054EE  C003  F00B         	movff	?i2___ftpack+2,?___lwtoft+2
 17987  0054F2  0012               	return	
 17988  0054F4                     __end_of___lwtoft:
 17989                           	opt stack 0
 17990                           tosu	equ	0xFFF
 17991                           tosh	equ	0xFFE
 17992                           tosl	equ	0xFFD
 17993                           pclatu	equ	0xFFB
 17994                           pclath	equ	0xFFA
 17995                           tblptru	equ	0xFF8
 17996                           tblptrh	equ	0xFF7
 17997                           tblptrl	equ	0xFF6
 17998                           tablat	equ	0xFF5
 17999                           prodh	equ	0xFF4
 18000                           prodl	equ	0xFF3
 18001                           intcon	equ	0xFF2
 18002                           intcon2	equ	0xFF1
 18003                           intcon3	equ	0xFF0
 18004                           postinc0	equ	0xFEE
 18005                           fsr0h	equ	0xFEA
 18006                           fsr0l	equ	0xFE9
 18007                           wreg	equ	0xFE8
 18008                           postdec1	equ	0xFE5
 18009                           fsr1h	equ	0xFE2
 18010                           fsr1l	equ	0xFE1
 18011                           indf2	equ	0xFDF
 18012                           postinc2	equ	0xFDE
 18013                           postdec2	equ	0xFDD
 18014                           fsr2h	equ	0xFDA
 18015                           fsr2l	equ	0xFD9
 18016                           status	equ	0xFD8
 18017                           
 18018 ;; *************** function i2___ftpack *****************
 18019 ;; Defined at:
 18020 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\float.c"
 18021 ;; Parameters:    Size  Location     Type
 18022 ;;  arg             3    0[COMRAM] unsigned um
 18023 ;;  exp             1    3[COMRAM] unsigned char 
 18024 ;;  sign            1    4[COMRAM] unsigned char 
 18025 ;; Auto vars:     Size  Location     Type
 18026 ;;		None
 18027 ;; Return value:  Size  Location     Type
 18028 ;;                  3    0[COMRAM] float 
 18029 ;; Registers used:
 18030 ;;		wreg, status,2, status,0
 18031 ;; Tracked objects:
 18032 ;;		On entry : 0/0
 18033 ;;		On exit  : 0/0
 18034 ;;		Unchanged: 0/0
 18035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18036 ;;      Params:         5       0       0       0       0       0       0
 18037 ;;      Locals:         0       0       0       0       0       0       0
 18038 ;;      Temps:          3       0       0       0       0       0       0
 18039 ;;      Totals:         8       0       0       0       0       0       0
 18040 ;;Total ram usage:        8 bytes
 18041 ;; Hardware stack levels used:    1
 18042 ;; This function calls:
 18043 ;;		Nothing
 18044 ;; This function is called by:
 18045 ;;		___lwtoft
 18046 ;;		i2___ftadd
 18047 ;;		i2___ftdiv
 18048 ;;		i2___ftmul
 18049 ;;		i2___lltoft
 18050 ;; This function uses a non-reentrant model
 18051 ;;
 18052                           
 18053                           	psect	text70
 18054  004A0C                     __ptext70:
 18055                           	opt stack 0
 18056  004A0C                     i2___ftpack:
 18057                           	opt stack 19
 18058                           
 18059                           ;incstack = 0
 18060  004A0C  5004               	movf	i2___ftpack@exp,w,c
 18061  004A0E  B4D8               	btfsc	status,2,c
 18062  004A10  D005               	goto	i2l3628
 18063  004A12  5001               	movf	i2___ftpack@arg,w,c
 18064  004A14  1002               	iorwf	i2___ftpack@arg+1,w,c
 18065  004A16  1003               	iorwf	i2___ftpack@arg+2,w,c
 18066  004A18  A4D8               	btfss	status,2,c
 18067  004A1A  D00C               	goto	i2l3634
 18068  004A1C                     i2l3628:
 18069  004A1C  0E00               	movlw	0
 18070  004A1E  6E01               	movwf	?i2___ftpack,c
 18071  004A20  0E00               	movlw	0
 18072  004A22  6E02               	movwf	?i2___ftpack+1,c
 18073  004A24  0E00               	movlw	0
 18074  004A26  6E03               	movwf	?i2___ftpack+2,c
 18075  004A28  0012               	return	
 18076  004A2A                     i2l3632:
 18077  004A2A  2A04               	incf	i2___ftpack@exp,f,c
 18078  004A2C  90D8               	bcf	status,0,c
 18079  004A2E  3203               	rrcf	i2___ftpack@arg+2,f,c
 18080  004A30  3202               	rrcf	i2___ftpack@arg+1,f,c
 18081  004A32  3201               	rrcf	i2___ftpack@arg,f,c
 18082  004A34                     i2l3634:
 18083  004A34  0E00               	movlw	0
 18084  004A36  1401               	andwf	i2___ftpack@arg,w,c
 18085  004A38  6E06               	movwf	??i2___ftpack& (0+255),c
 18086  004A3A  0E00               	movlw	0
 18087  004A3C  1402               	andwf	i2___ftpack@arg+1,w,c
 18088  004A3E  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 18089  004A40  0EFE               	movlw	254
 18090  004A42  1403               	andwf	i2___ftpack@arg+2,w,c
 18091  004A44  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 18092  004A46  5006               	movf	??i2___ftpack,w,c
 18093  004A48  1007               	iorwf	??i2___ftpack+1,w,c
 18094  004A4A  1008               	iorwf	??i2___ftpack+2,w,c
 18095  004A4C  B4D8               	btfsc	status,2,c
 18096  004A4E  D00C               	goto	i2l3640
 18097  004A50  D7EC               	goto	i2l3632
 18098  004A52                     i2l3636:
 18099  004A52  2A04               	incf	i2___ftpack@exp,f,c
 18100  004A54  0E01               	movlw	1
 18101  004A56  2601               	addwf	i2___ftpack@arg,f,c
 18102  004A58  0E00               	movlw	0
 18103  004A5A  2202               	addwfc	i2___ftpack@arg+1,f,c
 18104  004A5C  0E00               	movlw	0
 18105  004A5E  2203               	addwfc	i2___ftpack@arg+2,f,c
 18106  004A60  90D8               	bcf	status,0,c
 18107  004A62  3203               	rrcf	i2___ftpack@arg+2,f,c
 18108  004A64  3202               	rrcf	i2___ftpack@arg+1,f,c
 18109  004A66  3201               	rrcf	i2___ftpack@arg,f,c
 18110  004A68                     i2l3640:
 18111  004A68  0E00               	movlw	0
 18112  004A6A  1401               	andwf	i2___ftpack@arg,w,c
 18113  004A6C  6E06               	movwf	??i2___ftpack& (0+255),c
 18114  004A6E  0E00               	movlw	0
 18115  004A70  1402               	andwf	i2___ftpack@arg+1,w,c
 18116  004A72  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 18117  004A74  0EFF               	movlw	255
 18118  004A76  1403               	andwf	i2___ftpack@arg+2,w,c
 18119  004A78  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 18120  004A7A  5006               	movf	??i2___ftpack,w,c
 18121  004A7C  1007               	iorwf	??i2___ftpack+1,w,c
 18122  004A7E  1008               	iorwf	??i2___ftpack+2,w,c
 18123  004A80  B4D8               	btfsc	status,2,c
 18124  004A82  D006               	goto	i2l3644
 18125  004A84  D7E6               	goto	i2l3636
 18126  004A86                     i2l3642:
 18127  004A86  0604               	decf	i2___ftpack@exp,f,c
 18128  004A88  90D8               	bcf	status,0,c
 18129  004A8A  3601               	rlcf	i2___ftpack@arg,f,c
 18130  004A8C  3602               	rlcf	i2___ftpack@arg+1,f,c
 18131  004A8E  3603               	rlcf	i2___ftpack@arg+2,f,c
 18132  004A90                     i2l3644:
 18133  004A90  BE02               	btfsc	i2___ftpack@arg+1,7,c
 18134  004A92  D003               	goto	i2l769
 18135  004A94  0E02               	movlw	2
 18136  004A96  6004               	cpfslt	i2___ftpack@exp,c
 18137  004A98  D7F6               	goto	i2l3642
 18138  004A9A                     i2l769:
 18139  004A9A  A004               	btfss	i2___ftpack@exp,0,c
 18140  004A9C  9E02               	bcf	i2___ftpack@arg+1,7,c
 18141  004A9E  90D8               	bcf	status,0,c
 18142  004AA0  3204               	rrcf	i2___ftpack@exp,f,c
 18143  004AA2  5004               	movf	i2___ftpack@exp,w,c
 18144  004AA4  1203               	iorwf	i2___ftpack@arg+2,f,c
 18145  004AA6  5005               	movf	i2___ftpack@sign,w,c
 18146  004AA8  A4D8               	btfss	status,2,c
 18147  004AAA  8E03               	bsf	i2___ftpack@arg+2,7,c
 18148  004AAC  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 18149  004AB0  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 18150  004AB4  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 18151  004AB8  0012               	return	
 18152  004ABA                     __end_ofi2___ftpack:
 18153                           	opt stack 0
 18154                           tosu	equ	0xFFF
 18155                           tosh	equ	0xFFE
 18156                           tosl	equ	0xFFD
 18157                           pclatu	equ	0xFFB
 18158                           pclath	equ	0xFFA
 18159                           tblptru	equ	0xFF8
 18160                           tblptrh	equ	0xFF7
 18161                           tblptrl	equ	0xFF6
 18162                           tablat	equ	0xFF5
 18163                           prodh	equ	0xFF4
 18164                           prodl	equ	0xFF3
 18165                           intcon	equ	0xFF2
 18166                           intcon2	equ	0xFF1
 18167                           intcon3	equ	0xFF0
 18168                           postinc0	equ	0xFEE
 18169                           fsr0h	equ	0xFEA
 18170                           fsr0l	equ	0xFE9
 18171                           wreg	equ	0xFE8
 18172                           postdec1	equ	0xFE5
 18173                           fsr1h	equ	0xFE2
 18174                           fsr1l	equ	0xFE1
 18175                           indf2	equ	0xFDF
 18176                           postinc2	equ	0xFDE
 18177                           postdec2	equ	0xFDD
 18178                           fsr2h	equ	0xFDA
 18179                           fsr2l	equ	0xFD9
 18180                           status	equ	0xFD8
 18181                           
 18182 ;; *************** function _TMR0_StopTimer *****************
 18183 ;; Defined at:
 18184 ;;		line 57 in file "mcc_generated_files/tmr0.c"
 18185 ;; Parameters:    Size  Location     Type
 18186 ;;		None
 18187 ;; Auto vars:     Size  Location     Type
 18188 ;;		None
 18189 ;; Return value:  Size  Location     Type
 18190 ;;                  1    wreg      void 
 18191 ;; Registers used:
 18192 ;;		None
 18193 ;; Tracked objects:
 18194 ;;		On entry : 0/0
 18195 ;;		On exit  : 0/0
 18196 ;;		Unchanged: 0/0
 18197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18198 ;;      Params:         0       0       0       0       0       0       0
 18199 ;;      Locals:         0       0       0       0       0       0       0
 18200 ;;      Temps:          0       0       0       0       0       0       0
 18201 ;;      Totals:         0       0       0       0       0       0       0
 18202 ;;Total ram usage:        0 bytes
 18203 ;; Hardware stack levels used:    1
 18204 ;; This function calls:
 18205 ;;		Nothing
 18206 ;; This function is called by:
 18207 ;;		_INT0_ISR
 18208 ;; This function uses a non-reentrant model
 18209 ;;
 18210                           
 18211                           	psect	text71
 18212  0055E6                     __ptext71:
 18213                           	opt stack 0
 18214  0055E6                     _TMR0_StopTimer:
 18215                           	opt stack 23
 18216                           
 18217                           ;tmr0.c: 60: T0CONbits.TMR0ON = 0;
 18218                           
 18219                           ;incstack = 0
 18220  0055E6  9ED5               	bcf	4053,7,c	;volatile
 18221  0055E8  0012               	return		;funcret
 18222  0055EA                     __end_of_TMR0_StopTimer:
 18223                           	opt stack 0
 18224                           tosu	equ	0xFFF
 18225                           tosh	equ	0xFFE
 18226                           tosl	equ	0xFFD
 18227                           pclatu	equ	0xFFB
 18228                           pclath	equ	0xFFA
 18229                           tblptru	equ	0xFF8
 18230                           tblptrh	equ	0xFF7
 18231                           tblptrl	equ	0xFF6
 18232                           tablat	equ	0xFF5
 18233                           prodh	equ	0xFF4
 18234                           prodl	equ	0xFF3
 18235                           intcon	equ	0xFF2
 18236                           intcon2	equ	0xFF1
 18237                           intcon3	equ	0xFF0
 18238                           postinc0	equ	0xFEE
 18239                           fsr0h	equ	0xFEA
 18240                           fsr0l	equ	0xFE9
 18241                           wreg	equ	0xFE8
 18242                           postdec1	equ	0xFE5
 18243                           fsr1h	equ	0xFE2
 18244                           fsr1l	equ	0xFE1
 18245                           indf2	equ	0xFDF
 18246                           postinc2	equ	0xFDE
 18247                           postdec2	equ	0xFDD
 18248                           fsr2h	equ	0xFDA
 18249                           fsr2l	equ	0xFD9
 18250                           status	equ	0xFD8
 18251                           
 18252 ;; *************** function _TMR0_Reload *****************
 18253 ;; Defined at:
 18254 ;;		line 85 in file "mcc_generated_files/tmr0.c"
 18255 ;; Parameters:    Size  Location     Type
 18256 ;;		None
 18257 ;; Auto vars:     Size  Location     Type
 18258 ;;		None
 18259 ;; Return value:  Size  Location     Type
 18260 ;;                  1    wreg      void 
 18261 ;; Registers used:
 18262 ;;		wreg, status,2
 18263 ;; Tracked objects:
 18264 ;;		On entry : 0/0
 18265 ;;		On exit  : 0/0
 18266 ;;		Unchanged: 0/0
 18267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18268 ;;      Params:         0       0       0       0       0       0       0
 18269 ;;      Locals:         0       0       0       0       0       0       0
 18270 ;;      Temps:          0       0       0       0       0       0       0
 18271 ;;      Totals:         0       0       0       0       0       0       0
 18272 ;;Total ram usage:        0 bytes
 18273 ;; Hardware stack levels used:    1
 18274 ;; This function calls:
 18275 ;;		Nothing
 18276 ;; This function is called by:
 18277 ;;		_INT0_ISR
 18278 ;; This function uses a non-reentrant model
 18279 ;;
 18280                           
 18281                           	psect	text72
 18282  0055CC                     __ptext72:
 18283                           	opt stack 0
 18284  0055CC                     _TMR0_Reload:
 18285                           	opt stack 23
 18286                           
 18287                           ;tmr0.c: 88: TMR0H = timer0ReloadVal >> 8;
 18288                           
 18289                           ;incstack = 0
 18290  0055CC  505D               	movf	_timer0ReloadVal+1,w,c	;volatile
 18291  0055CE  6ED7               	movwf	4055,c	;volatile
 18292                           
 18293                           ;tmr0.c: 89: TMR0L = (uint8_t) timer0ReloadVal;
 18294  0055D0  C05C  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 18295  0055D4  0012               	return		;funcret
 18296  0055D6                     __end_of_TMR0_Reload:
 18297                           	opt stack 0
 18298                           tosu	equ	0xFFF
 18299                           tosh	equ	0xFFE
 18300                           tosl	equ	0xFFD
 18301                           pclatu	equ	0xFFB
 18302                           pclath	equ	0xFFA
 18303                           tblptru	equ	0xFF8
 18304                           tblptrh	equ	0xFF7
 18305                           tblptrl	equ	0xFF6
 18306                           tablat	equ	0xFF5
 18307                           prodh	equ	0xFF4
 18308                           prodl	equ	0xFF3
 18309                           intcon	equ	0xFF2
 18310                           intcon2	equ	0xFF1
 18311                           intcon3	equ	0xFF0
 18312                           postinc0	equ	0xFEE
 18313                           fsr0h	equ	0xFEA
 18314                           fsr0l	equ	0xFE9
 18315                           wreg	equ	0xFE8
 18316                           postdec1	equ	0xFE5
 18317                           fsr1h	equ	0xFE2
 18318                           fsr1l	equ	0xFE1
 18319                           indf2	equ	0xFDF
 18320                           postinc2	equ	0xFDE
 18321                           postdec2	equ	0xFDD
 18322                           fsr2h	equ	0xFDA
 18323                           fsr2l	equ	0xFD9
 18324                           status	equ	0xFD8
 18325                           
 18326 ;; *************** function _TMR0_ReadTimer *****************
 18327 ;; Defined at:
 18328 ;;		line 63 in file "mcc_generated_files/tmr0.c"
 18329 ;; Parameters:    Size  Location     Type
 18330 ;;		None
 18331 ;; Auto vars:     Size  Location     Type
 18332 ;;  readVal         2    6[COMRAM] unsigned int 
 18333 ;;  readValHigh     1    9[COMRAM] unsigned char 
 18334 ;;  readValLow      1    8[COMRAM] unsigned char 
 18335 ;; Return value:  Size  Location     Type
 18336 ;;                  2    0[COMRAM] unsigned int 
 18337 ;; Registers used:
 18338 ;;		wreg, status,2, status,0
 18339 ;; Tracked objects:
 18340 ;;		On entry : 0/0
 18341 ;;		On exit  : 0/0
 18342 ;;		Unchanged: 0/0
 18343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18344 ;;      Params:         2       0       0       0       0       0       0
 18345 ;;      Locals:         4       0       0       0       0       0       0
 18346 ;;      Temps:          4       0       0       0       0       0       0
 18347 ;;      Totals:        10       0       0       0       0       0       0
 18348 ;;Total ram usage:       10 bytes
 18349 ;; Hardware stack levels used:    1
 18350 ;; This function calls:
 18351 ;;		Nothing
 18352 ;; This function is called by:
 18353 ;;		_INT0_ISR
 18354 ;; This function uses a non-reentrant model
 18355 ;;
 18356                           
 18357                           	psect	text73
 18358  005282                     __ptext73:
 18359                           	opt stack 0
 18360  005282                     _TMR0_ReadTimer:
 18361                           	opt stack 23
 18362                           
 18363                           ;tmr0.c: 65: uint16_t readVal;
 18364                           ;tmr0.c: 66: uint8_t readValLow;
 18365                           ;tmr0.c: 67: uint8_t readValHigh;
 18366                           ;tmr0.c: 69: readValLow = TMR0L;
 18367                           
 18368                           ;incstack = 0
 18369  005282  CFD6 F009          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
 18370                           
 18371                           ;tmr0.c: 70: readValHigh = TMR0H;
 18372  005286  CFD7 F00A          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
 18373                           
 18374                           ;tmr0.c: 73: readVal = ((uint16_t)readValHigh << 8) + readValLow - (timer0ReloadVal);
 18375  00528A  C05C  F003         	movff	_timer0ReloadVal,??_TMR0_ReadTimer	;volatile
 18376  00528E  C05D  F004         	movff	_timer0ReloadVal+1,??_TMR0_ReadTimer+1	;volatile
 18377  005292  1E03               	comf	??_TMR0_ReadTimer,f,c
 18378  005294  1E04               	comf	??_TMR0_ReadTimer+1,f,c
 18379  005296  4A03               	infsnz	??_TMR0_ReadTimer,f,c
 18380  005298  2A04               	incf	??_TMR0_ReadTimer+1,f,c
 18381  00529A  5009               	movf	TMR0_ReadTimer@readValLow,w,c
 18382  00529C  C00A  F005         	movff	TMR0_ReadTimer@readValHigh,??_TMR0_ReadTimer+2
 18383  0052A0  6A06               	clrf	(??_TMR0_ReadTimer+3)& (0+255),c
 18384  0052A2  C005  F006         	movff	??_TMR0_ReadTimer+2,??_TMR0_ReadTimer+3
 18385  0052A6  6A05               	clrf	??_TMR0_ReadTimer+2,c
 18386  0052A8  2605               	addwf	??_TMR0_ReadTimer+2,f,c
 18387  0052AA  0E00               	movlw	0
 18388  0052AC  2206               	addwfc	??_TMR0_ReadTimer+3,f,c
 18389  0052AE  5003               	movf	??_TMR0_ReadTimer,w,c
 18390  0052B0  2405               	addwf	??_TMR0_ReadTimer+2,w,c
 18391  0052B2  6E07               	movwf	TMR0_ReadTimer@readVal,c
 18392  0052B4  5004               	movf	??_TMR0_ReadTimer+1,w,c
 18393  0052B6  2006               	addwfc	??_TMR0_ReadTimer+3,w,c
 18394  0052B8  6E08               	movwf	TMR0_ReadTimer@readVal+1,c
 18395                           
 18396                           ;tmr0.c: 75: return readVal;
 18397  0052BA  C007  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
 18398  0052BE  C008  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
 18399  0052C2  0012               	return	
 18400  0052C4                     __end_of_TMR0_ReadTimer:
 18401                           	opt stack 0
 18402                           tosu	equ	0xFFF
 18403                           tosh	equ	0xFFE
 18404                           tosl	equ	0xFFD
 18405                           pclatu	equ	0xFFB
 18406                           pclath	equ	0xFFA
 18407                           tblptru	equ	0xFF8
 18408                           tblptrh	equ	0xFF7
 18409                           tblptrl	equ	0xFF6
 18410                           tablat	equ	0xFF5
 18411                           prodh	equ	0xFF4
 18412                           prodl	equ	0xFF3
 18413                           intcon	equ	0xFF2
 18414                           intcon2	equ	0xFF1
 18415                           intcon3	equ	0xFF0
 18416                           postinc0	equ	0xFEE
 18417                           fsr0h	equ	0xFEA
 18418                           fsr0l	equ	0xFE9
 18419                           wreg	equ	0xFE8
 18420                           postdec1	equ	0xFE5
 18421                           fsr1h	equ	0xFE2
 18422                           fsr1l	equ	0xFE1
 18423                           indf2	equ	0xFDF
 18424                           postinc2	equ	0xFDE
 18425                           postdec2	equ	0xFDD
 18426                           fsr2h	equ	0xFDA
 18427                           fsr2l	equ	0xFD9
 18428                           status	equ	0xFD8
 18429                           
 18430 ;; *************** function _SetRange *****************
 18431 ;; Defined at:
 18432 ;;		line 42 in file "mcc_generated_files/ext_int.c"
 18433 ;; Parameters:    Size  Location     Type
 18434 ;;  new_range       1    wreg     unsigned char 
 18435 ;; Auto vars:     Size  Location     Type
 18436 ;;  new_range       1   10[COMRAM] unsigned char 
 18437 ;; Return value:  Size  Location     Type
 18438 ;;                  1    wreg      void 
 18439 ;; Registers used:
 18440 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 18441 ;; Tracked objects:
 18442 ;;		On entry : 0/0
 18443 ;;		On exit  : 0/0
 18444 ;;		Unchanged: 0/0
 18445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18446 ;;      Params:         0       0       0       0       0       0       0
 18447 ;;      Locals:         1       0       0       0       0       0       0
 18448 ;;      Temps:         10       0       0       0       0       0       0
 18449 ;;      Totals:        11       0       0       0       0       0       0
 18450 ;;Total ram usage:       11 bytes
 18451 ;; Hardware stack levels used:    1
 18452 ;; This function calls:
 18453 ;;		Nothing
 18454 ;; This function is called by:
 18455 ;;		_INT1_ISR
 18456 ;;		_INT0_ISR
 18457 ;;		_TMR0_DefaultInterruptHandler
 18458 ;; This function uses a non-reentrant model
 18459 ;;
 18460                           
 18461                           	psect	text74
 18462  00362C                     __ptext74:
 18463                           	opt stack 0
 18464  00362C                     _SetRange:
 18465                           	opt stack 22
 18466                           
 18467                           ;incstack = 0
 18468                           ;SetRange@new_range stored from wreg
 18469  00362C  6E0B               	movwf	SetRange@new_range,c
 18470                           
 18471                           ;ext_int.c: 45: LATC |= (1 << R1_BIT[0]) | (1 << R1_BIT[1]) | (1 << R1_BIT[2]) | (1 << R
      +                          1_BIT[3]) | (1 << R1_BIT[4]);
 18472  00362E  0E78               	movlw	low (_R1_BIT+4)
 18473  003630  6EF6               	movwf	tblptrl,c
 18474  003632  0E7F               	movlw	high (_R1_BIT+4)
 18475  003634  6EF7               	movwf	tblptrh,c
 18476  003636                     	if	0	;tblptru may be non-zero
 18477  003636                     	endif
 18478  003636                     	if	0	;tblptru may be non-zero
 18479  003636                     	endif
 18480  003636  0008               	tblrd		*
 18481  003638  CFF5 F001          	movff	tablat,??_SetRange
 18482  00363C  0E01               	movlw	1
 18483  00363E  6E02               	movwf	(??_SetRange+1)& (0+255),c
 18484  003640  2A01               	incf	??_SetRange,f,c
 18485  003642  D002               	goto	i2u566_44
 18486  003644                     i2u566_45:
 18487  003644  90D8               	bcf	status,0,c
 18488  003646  3602               	rlcf	??_SetRange+1,f,c
 18489  003648                     i2u566_44:
 18490  003648  2E01               	decfsz	??_SetRange,f,c
 18491  00364A  D7FC               	goto	i2u566_45
 18492  00364C  0E77               	movlw	low (_R1_BIT+3)
 18493  00364E  6EF6               	movwf	tblptrl,c
 18494  003650  0E7F               	movlw	high (_R1_BIT+3)
 18495  003652  6EF7               	movwf	tblptrh,c
 18496  003654                     	if	0	;tblptru may be non-zero
 18497  003654                     	endif
 18498  003654                     	if	0	;tblptru may be non-zero
 18499  003654                     	endif
 18500  003654  0008               	tblrd		*
 18501  003656  CFF5 F003          	movff	tablat,??_SetRange+2
 18502  00365A  0E01               	movlw	1
 18503  00365C  6E04               	movwf	(??_SetRange+3)& (0+255),c
 18504  00365E  2A03               	incf	??_SetRange+2,f,c
 18505  003660  D002               	goto	i2u567_44
 18506  003662                     i2u567_45:
 18507  003662  90D8               	bcf	status,0,c
 18508  003664  3604               	rlcf	??_SetRange+3,f,c
 18509  003666                     i2u567_44:
 18510  003666  2E03               	decfsz	??_SetRange+2,f,c
 18511  003668  D7FC               	goto	i2u567_45
 18512  00366A  0E76               	movlw	low (_R1_BIT+2)
 18513  00366C  6EF6               	movwf	tblptrl,c
 18514  00366E  0E7F               	movlw	high (_R1_BIT+2)
 18515  003670  6EF7               	movwf	tblptrh,c
 18516  003672                     	if	0	;tblptru may be non-zero
 18517  003672                     	endif
 18518  003672                     	if	0	;tblptru may be non-zero
 18519  003672                     	endif
 18520  003672  0008               	tblrd		*
 18521  003674  CFF5 F005          	movff	tablat,??_SetRange+4
 18522  003678  0E01               	movlw	1
 18523  00367A  6E06               	movwf	(??_SetRange+5)& (0+255),c
 18524  00367C  2A05               	incf	??_SetRange+4,f,c
 18525  00367E  D002               	goto	i2u568_44
 18526  003680                     i2u568_45:
 18527  003680  90D8               	bcf	status,0,c
 18528  003682  3606               	rlcf	??_SetRange+5,f,c
 18529  003684                     i2u568_44:
 18530  003684  2E05               	decfsz	??_SetRange+4,f,c
 18531  003686  D7FC               	goto	i2u568_45
 18532  003688  0E75               	movlw	low (_R1_BIT+1)
 18533  00368A  6EF6               	movwf	tblptrl,c
 18534  00368C  0E7F               	movlw	high (_R1_BIT+1)
 18535  00368E  6EF7               	movwf	tblptrh,c
 18536  003690                     	if	0	;tblptru may be non-zero
 18537  003690                     	endif
 18538  003690                     	if	0	;tblptru may be non-zero
 18539  003690                     	endif
 18540  003690  0008               	tblrd		*
 18541  003692  CFF5 F007          	movff	tablat,??_SetRange+6
 18542  003696  0E01               	movlw	1
 18543  003698  6E08               	movwf	(??_SetRange+7)& (0+255),c
 18544  00369A  2A07               	incf	??_SetRange+6,f,c
 18545  00369C  D002               	goto	i2u569_44
 18546  00369E                     i2u569_45:
 18547  00369E  90D8               	bcf	status,0,c
 18548  0036A0  3608               	rlcf	??_SetRange+7,f,c
 18549  0036A2                     i2u569_44:
 18550  0036A2  2E07               	decfsz	??_SetRange+6,f,c
 18551  0036A4  D7FC               	goto	i2u569_45
 18552  0036A6  0E74               	movlw	low _R1_BIT
 18553  0036A8  6EF6               	movwf	tblptrl,c
 18554  0036AA                     	if	1	;There is more than 1 active tblptr byte
 18555  0036AA  0E7F               	movlw	high _R1_BIT
 18556  0036AC  6EF7               	movwf	tblptrh,c
 18557  0036AE                     	endif
 18558  0036AE                     	if	0	;There are less than 3 active tblptr bytes
 18559  0036AE                     	endif
 18560  0036AE  0008               	tblrd		*
 18561  0036B0  CFF5 F009          	movff	tablat,??_SetRange+8
 18562  0036B4  0E01               	movlw	1
 18563  0036B6  6E0A               	movwf	(??_SetRange+9)& (0+255),c
 18564  0036B8  2A09               	incf	??_SetRange+8,f,c
 18565  0036BA  D002               	goto	i2u570_44
 18566  0036BC                     i2u570_45:
 18567  0036BC  90D8               	bcf	status,0,c
 18568  0036BE  360A               	rlcf	??_SetRange+9,f,c
 18569  0036C0                     i2u570_44:
 18570  0036C0  2E09               	decfsz	??_SetRange+8,f,c
 18571  0036C2  D7FC               	goto	i2u570_45
 18572  0036C4  500A               	movf	??_SetRange+9,w,c
 18573  0036C6  1008               	iorwf	??_SetRange+7,w,c
 18574  0036C8  1006               	iorwf	??_SetRange+5,w,c
 18575  0036CA  1004               	iorwf	??_SetRange+3,w,c
 18576  0036CC  1002               	iorwf	??_SetRange+1,w,c
 18577  0036CE  128B               	iorwf	3979,f,c	;volatile
 18578                           
 18579                           ;ext_int.c: 46: LATB |= (1 << RSET_BIT[0]) | (1 << RSET_BIT[1]) | (1 << RSET_BIT[3]) | (
      +                          1 << RSET_BIT[4]);
 18580  0036D0  0E7D               	movlw	low (_RSET_BIT+4)
 18581  0036D2  6EF6               	movwf	tblptrl,c
 18582  0036D4  0E7F               	movlw	high (_RSET_BIT+4)
 18583  0036D6  6EF7               	movwf	tblptrh,c
 18584  0036D8                     	if	0	;tblptru may be non-zero
 18585  0036D8                     	endif
 18586  0036D8                     	if	0	;tblptru may be non-zero
 18587  0036D8                     	endif
 18588  0036D8  0008               	tblrd		*
 18589  0036DA  CFF5 F001          	movff	tablat,??_SetRange
 18590  0036DE  0E01               	movlw	1
 18591  0036E0  6E02               	movwf	(??_SetRange+1)& (0+255),c
 18592  0036E2  2A01               	incf	??_SetRange,f,c
 18593  0036E4  D002               	goto	i2u571_44
 18594  0036E6                     i2u571_45:
 18595  0036E6  90D8               	bcf	status,0,c
 18596  0036E8  3602               	rlcf	??_SetRange+1,f,c
 18597  0036EA                     i2u571_44:
 18598  0036EA  2E01               	decfsz	??_SetRange,f,c
 18599  0036EC  D7FC               	goto	i2u571_45
 18600  0036EE  0E7C               	movlw	low (_RSET_BIT+3)
 18601  0036F0  6EF6               	movwf	tblptrl,c
 18602  0036F2  0E7F               	movlw	high (_RSET_BIT+3)
 18603  0036F4  6EF7               	movwf	tblptrh,c
 18604  0036F6                     	if	0	;tblptru may be non-zero
 18605  0036F6                     	endif
 18606  0036F6                     	if	0	;tblptru may be non-zero
 18607  0036F6                     	endif
 18608  0036F6  0008               	tblrd		*
 18609  0036F8  CFF5 F003          	movff	tablat,??_SetRange+2
 18610  0036FC  0E01               	movlw	1
 18611  0036FE  6E04               	movwf	(??_SetRange+3)& (0+255),c
 18612  003700  2A03               	incf	??_SetRange+2,f,c
 18613  003702  D002               	goto	i2u572_44
 18614  003704                     i2u572_45:
 18615  003704  90D8               	bcf	status,0,c
 18616  003706  3604               	rlcf	??_SetRange+3,f,c
 18617  003708                     i2u572_44:
 18618  003708  2E03               	decfsz	??_SetRange+2,f,c
 18619  00370A  D7FC               	goto	i2u572_45
 18620  00370C  0E7A               	movlw	low (_RSET_BIT+1)
 18621  00370E  6EF6               	movwf	tblptrl,c
 18622  003710  0E7F               	movlw	high (_RSET_BIT+1)
 18623  003712  6EF7               	movwf	tblptrh,c
 18624  003714                     	if	0	;tblptru may be non-zero
 18625  003714                     	endif
 18626  003714                     	if	0	;tblptru may be non-zero
 18627  003714                     	endif
 18628  003714  0008               	tblrd		*
 18629  003716  CFF5 F005          	movff	tablat,??_SetRange+4
 18630  00371A  0E01               	movlw	1
 18631  00371C  6E06               	movwf	(??_SetRange+5)& (0+255),c
 18632  00371E  2A05               	incf	??_SetRange+4,f,c
 18633  003720  D002               	goto	i2u573_44
 18634  003722                     i2u573_45:
 18635  003722  90D8               	bcf	status,0,c
 18636  003724  3606               	rlcf	??_SetRange+5,f,c
 18637  003726                     i2u573_44:
 18638  003726  2E05               	decfsz	??_SetRange+4,f,c
 18639  003728  D7FC               	goto	i2u573_45
 18640  00372A  0E79               	movlw	low _RSET_BIT
 18641  00372C  6EF6               	movwf	tblptrl,c
 18642  00372E                     	if	1	;There is more than 1 active tblptr byte
 18643  00372E  0E7F               	movlw	high _RSET_BIT
 18644  003730  6EF7               	movwf	tblptrh,c
 18645  003732                     	endif
 18646  003732                     	if	0	;There are less than 3 active tblptr bytes
 18647  003732                     	endif
 18648  003732  0008               	tblrd		*
 18649  003734  CFF5 F007          	movff	tablat,??_SetRange+6
 18650  003738  0E01               	movlw	1
 18651  00373A  6E08               	movwf	(??_SetRange+7)& (0+255),c
 18652  00373C  2A07               	incf	??_SetRange+6,f,c
 18653  00373E  D002               	goto	i2u574_44
 18654  003740                     i2u574_45:
 18655  003740  90D8               	bcf	status,0,c
 18656  003742  3608               	rlcf	??_SetRange+7,f,c
 18657  003744                     i2u574_44:
 18658  003744  2E07               	decfsz	??_SetRange+6,f,c
 18659  003746  D7FC               	goto	i2u574_45
 18660  003748  5008               	movf	??_SetRange+7,w,c
 18661  00374A  1006               	iorwf	??_SetRange+5,w,c
 18662  00374C  1004               	iorwf	??_SetRange+3,w,c
 18663  00374E  1002               	iorwf	??_SetRange+1,w,c
 18664  003750  128A               	iorwf	3978,f,c	;volatile
 18665                           
 18666                           ;ext_int.c: 48: LATC &= ~(1 << R1_BIT[new_range - 1]);
 18667  003752  0EFF               	movlw	255
 18668  003754  6E01               	movwf	??_SetRange& (0+255),c
 18669  003756  0EFF               	movlw	255
 18670  003758  6E02               	movwf	(??_SetRange+1)& (0+255),c
 18671  00375A  500B               	movf	SetRange@new_range,w,c
 18672  00375C  6E03               	movwf	(??_SetRange+2)& (0+255),c
 18673  00375E  6A04               	clrf	(??_SetRange+3)& (0+255),c
 18674  003760  5001               	movf	??_SetRange,w,c
 18675  003762  2603               	addwf	??_SetRange+2,f,c
 18676  003764  5002               	movf	??_SetRange+1,w,c
 18677  003766  2204               	addwfc	??_SetRange+3,f,c
 18678  003768  0E74               	movlw	low _R1_BIT
 18679  00376A  2403               	addwf	??_SetRange+2,w,c
 18680  00376C  6EF6               	movwf	tblptrl,c
 18681  00376E  0E7F               	movlw	high _R1_BIT
 18682  003770  2004               	addwfc	??_SetRange+3,w,c
 18683  003772  6EF7               	movwf	tblptrh,c
 18684  003774                     	if	0	;There are less than 3 active tblptr bytes
 18685  003774                     	endif
 18686  003774  0008               	tblrd		*
 18687  003776  CFF5 F005          	movff	tablat,??_SetRange+4
 18688  00377A  0E01               	movlw	1
 18689  00377C  6E06               	movwf	(??_SetRange+5)& (0+255),c
 18690  00377E  2A05               	incf	??_SetRange+4,f,c
 18691  003780  D002               	goto	i2u575_44
 18692  003782                     i2u575_45:
 18693  003782  90D8               	bcf	status,0,c
 18694  003784  3606               	rlcf	??_SetRange+5,f,c
 18695  003786                     i2u575_44:
 18696  003786  2E05               	decfsz	??_SetRange+4,f,c
 18697  003788  D7FC               	goto	i2u575_45
 18698  00378A  5006               	movf	??_SetRange+5,w,c
 18699  00378C  0AFF               	xorlw	255
 18700  00378E  168B               	andwf	3979,f,c	;volatile
 18701                           
 18702                           ;ext_int.c: 49: LATB &= ~(1 << RSET_BIT[new_range - 1]);
 18703  003790  0EFF               	movlw	255
 18704  003792  6E01               	movwf	??_SetRange& (0+255),c
 18705  003794  0EFF               	movlw	255
 18706  003796  6E02               	movwf	(??_SetRange+1)& (0+255),c
 18707  003798  500B               	movf	SetRange@new_range,w,c
 18708  00379A  6E03               	movwf	(??_SetRange+2)& (0+255),c
 18709  00379C  6A04               	clrf	(??_SetRange+3)& (0+255),c
 18710  00379E  5001               	movf	??_SetRange,w,c
 18711  0037A0  2603               	addwf	??_SetRange+2,f,c
 18712  0037A2  5002               	movf	??_SetRange+1,w,c
 18713  0037A4  2204               	addwfc	??_SetRange+3,f,c
 18714  0037A6  0E79               	movlw	low _RSET_BIT
 18715  0037A8  2403               	addwf	??_SetRange+2,w,c
 18716  0037AA  6EF6               	movwf	tblptrl,c
 18717  0037AC  0E7F               	movlw	high _RSET_BIT
 18718  0037AE  2004               	addwfc	??_SetRange+3,w,c
 18719  0037B0  6EF7               	movwf	tblptrh,c
 18720  0037B2                     	if	0	;There are less than 3 active tblptr bytes
 18721  0037B2                     	endif
 18722  0037B2  0008               	tblrd		*
 18723  0037B4  CFF5 F005          	movff	tablat,??_SetRange+4
 18724  0037B8  0E01               	movlw	1
 18725  0037BA  6E06               	movwf	(??_SetRange+5)& (0+255),c
 18726  0037BC  2A05               	incf	??_SetRange+4,f,c
 18727  0037BE  D002               	goto	i2u576_44
 18728  0037C0                     i2u576_45:
 18729  0037C0  90D8               	bcf	status,0,c
 18730  0037C2  3606               	rlcf	??_SetRange+5,f,c
 18731  0037C4                     i2u576_44:
 18732  0037C4  2E05               	decfsz	??_SetRange+4,f,c
 18733  0037C6  D7FC               	goto	i2u576_45
 18734  0037C8  5006               	movf	??_SetRange+5,w,c
 18735  0037CA  0AFF               	xorlw	255
 18736  0037CC  168A               	andwf	3978,f,c	;volatile
 18737  0037CE  0012               	return		;funcret
 18738  0037D0                     __end_of_SetRange:
 18739                           	opt stack 0
 18740                           tosu	equ	0xFFF
 18741                           tosh	equ	0xFFE
 18742                           tosl	equ	0xFFD
 18743                           pclatu	equ	0xFFB
 18744                           pclath	equ	0xFFA
 18745                           tblptru	equ	0xFF8
 18746                           tblptrh	equ	0xFF7
 18747                           tblptrl	equ	0xFF6
 18748                           tablat	equ	0xFF5
 18749                           prodh	equ	0xFF4
 18750                           prodl	equ	0xFF3
 18751                           intcon	equ	0xFF2
 18752                           intcon2	equ	0xFF1
 18753                           intcon3	equ	0xFF0
 18754                           postinc0	equ	0xFEE
 18755                           fsr0h	equ	0xFEA
 18756                           fsr0l	equ	0xFE9
 18757                           wreg	equ	0xFE8
 18758                           postdec1	equ	0xFE5
 18759                           fsr1h	equ	0xFE2
 18760                           fsr1l	equ	0xFE1
 18761                           indf2	equ	0xFDF
 18762                           postinc2	equ	0xFDE
 18763                           postdec2	equ	0xFDD
 18764                           fsr2h	equ	0xFDA
 18765                           fsr2l	equ	0xFD9
 18766                           status	equ	0xFD8
 18767                           tosu	equ	0xFFF
 18768                           tosh	equ	0xFFE
 18769                           tosl	equ	0xFFD
 18770                           pclatu	equ	0xFFB
 18771                           pclath	equ	0xFFA
 18772                           tblptru	equ	0xFF8
 18773                           tblptrh	equ	0xFF7
 18774                           tblptrl	equ	0xFF6
 18775                           tablat	equ	0xFF5
 18776                           prodh	equ	0xFF4
 18777                           prodl	equ	0xFF3
 18778                           intcon	equ	0xFF2
 18779                           intcon2	equ	0xFF1
 18780                           intcon3	equ	0xFF0
 18781                           postinc0	equ	0xFEE
 18782                           fsr0h	equ	0xFEA
 18783                           fsr0l	equ	0xFE9
 18784                           wreg	equ	0xFE8
 18785                           postdec1	equ	0xFE5
 18786                           fsr1h	equ	0xFE2
 18787                           fsr1l	equ	0xFE1
 18788                           indf2	equ	0xFDF
 18789                           postinc2	equ	0xFDE
 18790                           postdec2	equ	0xFDD
 18791                           fsr2h	equ	0xFDA
 18792                           fsr2l	equ	0xFD9
 18793                           status	equ	0xFD8
 18794                           
 18795                           	psect	text75
 18796  000000                     __ptext75:
 18797                           	opt stack 0
 18798                           tosu	equ	0xFFF
 18799                           tosh	equ	0xFFE
 18800                           tosl	equ	0xFFD
 18801                           pclatu	equ	0xFFB
 18802                           pclath	equ	0xFFA
 18803                           tblptru	equ	0xFF8
 18804                           tblptrh	equ	0xFF7
 18805                           tblptrl	equ	0xFF6
 18806                           tablat	equ	0xFF5
 18807                           prodh	equ	0xFF4
 18808                           prodl	equ	0xFF3
 18809                           intcon	equ	0xFF2
 18810                           intcon2	equ	0xFF1
 18811                           intcon3	equ	0xFF0
 18812                           postinc0	equ	0xFEE
 18813                           fsr0h	equ	0xFEA
 18814                           fsr0l	equ	0xFE9
 18815                           wreg	equ	0xFE8
 18816                           postdec1	equ	0xFE5
 18817                           fsr1h	equ	0xFE2
 18818                           fsr1l	equ	0xFE1
 18819                           indf2	equ	0xFDF
 18820                           postinc2	equ	0xFDE
 18821                           postdec2	equ	0xFDD
 18822                           fsr2h	equ	0xFDA
 18823                           fsr2l	equ	0xFD9
 18824                           status	equ	0xFD8
 18825                           
 18826                           	psect	rparam
 18827  0000                     tosu	equ	0xFFF
 18828                           tosh	equ	0xFFE
 18829                           tosl	equ	0xFFD
 18830                           pclatu	equ	0xFFB
 18831                           pclath	equ	0xFFA
 18832                           tblptru	equ	0xFF8
 18833                           tblptrh	equ	0xFF7
 18834                           tblptrl	equ	0xFF6
 18835                           tablat	equ	0xFF5
 18836                           prodh	equ	0xFF4
 18837                           prodl	equ	0xFF3
 18838                           intcon	equ	0xFF2
 18839                           intcon2	equ	0xFF1
 18840                           intcon3	equ	0xFF0
 18841                           postinc0	equ	0xFEE
 18842                           fsr0h	equ	0xFEA
 18843                           fsr0l	equ	0xFE9
 18844                           wreg	equ	0xFE8
 18845                           postdec1	equ	0xFE5
 18846                           fsr1h	equ	0xFE2
 18847                           fsr1l	equ	0xFE1
 18848                           indf2	equ	0xFDF
 18849                           postinc2	equ	0xFDE
 18850                           postdec2	equ	0xFDD
 18851                           fsr2h	equ	0xFDA
 18852                           fsr2l	equ	0xFD9
 18853                           status	equ	0xFD8
 18854                           
 18855                           	psect	temp
 18856  00005E                     btemp:
 18857                           	opt stack 0
 18858  00005E                     	ds	1
 18859  0000                     int$flags	set	btemp
 18860                           tosu	equ	0xFFF
 18861                           tosh	equ	0xFFE
 18862                           tosl	equ	0xFFD
 18863                           pclatu	equ	0xFFB
 18864                           pclath	equ	0xFFA
 18865                           tblptru	equ	0xFF8
 18866                           tblptrh	equ	0xFF7
 18867                           tblptrl	equ	0xFF6
 18868                           tablat	equ	0xFF5
 18869                           prodh	equ	0xFF4
 18870                           prodl	equ	0xFF3
 18871                           intcon	equ	0xFF2
 18872                           intcon2	equ	0xFF1
 18873                           intcon3	equ	0xFF0
 18874                           postinc0	equ	0xFEE
 18875                           fsr0h	equ	0xFEA
 18876                           fsr0l	equ	0xFE9
 18877                           wreg	equ	0xFE8
 18878                           postdec1	equ	0xFE5
 18879                           fsr1h	equ	0xFE2
 18880                           fsr1l	equ	0xFE1
 18881                           indf2	equ	0xFDF
 18882                           postinc2	equ	0xFDE
 18883                           postdec2	equ	0xFDD
 18884                           fsr2h	equ	0xFDA
 18885                           fsr2l	equ	0xFD9
 18886                           status	equ	0xFD8


Data Sizes:
    Strings     128
    Constant    143
    Data        4
    BSS         24
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      93
    BANK0           160     86     112
    BANK1           256     89      89
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[11]), STR_6(CODE[11]), STR_5(CODE[8]), STR_4(CODE[11]), 
		 -> STR_3(CODE[11]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 53
		 -> STR_2(CODE[53]), STR_1(CODE[23]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> i2_putch(), putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> lcd_sendInt@displayString(COMRAM[10]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), printf@ap(COMRAM[2]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 53
		 -> STR_7(CODE[11]), STR_6(CODE[11]), STR_5(CODE[8]), STR_4(CODE[11]), 
		 -> STR_3(CODE[11]), STR_2(CODE[53]), STR_1(CODE[23]), 

    S906__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    S906__prbuf$ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 5
		 -> sprintf@pb(BANK1[4]), printf@pb(COMRAM[4]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 10
		 -> lcd_sendUInt@displayString(COMRAM[10]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> lcd_sendInt@displayString(COMRAM[10]), 

    lcd_sendStringToPos@charString	PTR const unsigned char  size(2) Largest target is 16
		 -> main@cap_string(BANK1[16]), 

    lcd_sendString@a	PTR const unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), lcd_sendUInt@displayString(COMRAM[10]), lcd_sendInt@displayString(COMRAM[10]), main@cap_string(BANK1[16]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_TMR0_DefaultInterruptHandler
    _TMR0_DefaultInterruptHandler->_SetRange
    _INT1_ISR->_printf
    _INT0_ISR->_printf
    i2___ftdiv->i2___ftmul
    _printf->i2__doprnt
    i2__doprnt->i2___fttol
    i2_scale->i2___ftmul
    i2_putch->i2_EUSART1_Write
    i2_fround->i2___ftmul
    i2___wmul->i2___awdiv
    i2___ftmul->i2___ftadd
    i2___awdiv->i2___awmod
    i2___lltoft->i2___ftpack
    i2___llmod->i2___lldiv
    i2___fttol->i2_scale
    i2___ftsub->i2___ftadd
    i2___ftadd->i2___wmul
    ___lwtoft->i2___ftpack

Critical Paths under _main in BANK0

    __doprnt->_fround
    __doprnt->_scale
    _scale->___ftmul
    _putch->_EUSART1_Write
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftadd->_fround
    _lcd_sendStringToPos->_lcd_sendString
    _lcd_sendStringToPos->_lcd_setPosition
    _lcd_setPosition->_lcd_sendCommand
    _lcd_sendString->_lcd_sendChar
    _lcd_sendChar->__lcd_Port
    _lcd_init->_lcd_sendCommand
    _lcd_clear->_lcd_sendCommand
    _lcd_sendCommand->__lcd_Port
    ___ftdiv->___ftpack
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INT1_ISR->_printf
    _INT0_ISR->_printf
    _printf->i2__doprnt

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->__doprnt
    __doprnt->___ftsub
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   78160
                                             73 BANK1     16    16      0
                  _SYSTEM_Initialize
                            ___ftdiv
                             ___ftge
                          _lcd_clear
                           _lcd_init
                _lcd_sendStringToPos
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             13     6      7   70865
                                             60 BANK1     13     6      7
                            ___ftdiv (ARG)
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             41    35      6   66641
                                             25 BANK1     35    29      6
                   Absolute function *
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch *
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               10     7      3   12970
                                             83 BANK0      3     0      3
                                              0 BANK1      4     4      0
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      44
                                             49 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      22
                                             48 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                             48 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              13    10      3   12691
                                             83 BANK0      3     0      3
                                              0 BANK1      7     7      0
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    3094
                                             62 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    5375
                                             68 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             48 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             54 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         15     9      6     431
                                             48 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          12     6      6     591
                                             48 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2655
                                             56 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     773
                                             61 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     750
                                             48 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     716
                                              4 BANK1     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    4628
                                             19 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    4150
                                              7 BANK1     12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     160
                                             48 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     904
                                             48 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_sendStringToPos                                  4     1      3    1354
                                             56 BANK0      4     1      3
                     _lcd_sendString
                    _lcd_setPosition
 ---------------------------------------------------------------------------------
 (2) _lcd_setPosition                                      5     4      1     636
                                             51 BANK0      5     4      1
                    _lcd_sendCommand
 ---------------------------------------------------------------------------------
 (2) _lcd_sendString                                       4     2      2     524
                                             52 BANK0      4     2      2
                       _lcd_sendChar
 ---------------------------------------------------------------------------------
 (3) _lcd_sendChar                                         3     3      0     178
                                             49 BANK0      3     3      0
                          __lcd_Port
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     198
                                             51 BANK0      1     1      0
                          __lcd_Port
                    _lcd_sendCommand
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0     110
                    _lcd_sendCommand
 ---------------------------------------------------------------------------------
 (3) _lcd_sendCommand                                      2     2      0     110
                                             49 BANK0      2     2      0
                          __lcd_Port
 ---------------------------------------------------------------------------------
 (4) __lcd_Port                                            1     1      0      88
                                             48 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    3345
                                             56 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2419
                                             48 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      86
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      86
                                             50 BANK0      2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      86
                                             48 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                          14    14      0   80804
                                             34 BANK0     14    14      0
                           _INT0_ISR
                           _INT1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0      44
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         1     1      0      44
                                             11 COMRAM     1     1      0
                           _SetRange
 ---------------------------------------------------------------------------------
 (7) _INT1_ISR                                             0     0      0   37271
                           _SetRange
                             _printf
 ---------------------------------------------------------------------------------
 (7) _INT0_ISR                                             0     0      0   43489
                           _SetRange
                     _TMR0_ReadTimer
                        _TMR0_Reload
                     _TMR0_StopTimer
                           ___lwtoft
                             _printf
                  i2_TMR0_StartTimer
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (8) i2___ftdiv                                           15     9      6     953
                                             47 COMRAM    15     9      6
                           ___lwtoft (ARG)
                          i2___ftadd (ARG)
                          i2___ftmul (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) i2_TMR0_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _printf                                              17     6     11   37227
                                             81 COMRAM     6     6      0
                                             23 BANK0     11     0     11
                          i2__doprnt
 ---------------------------------------------------------------------------------
 (9) i2__doprnt                                           41    35      6   34081
                                             69 COMRAM    12     6      6
                                              0 BANK0     23    23      0
                   Absolute function *
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch *
                            i2_scale
 ---------------------------------------------------------------------------------
 (10) i2_scale                                            13    10      3    4945
                                             47 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (10) i2_putch                                             1     1      0      44
                                              1 COMRAM     1     1      0
                    i2_EUSART1_Write
 ---------------------------------------------------------------------------------
 (11) i2_EUSART1_Write                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) i2_isdigit                                           3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (10) i2_fround                                           16    13      3    4747
                                             47 COMRAM    10     7      3
                          i2___awdiv
                          i2___awmod
                          i2___ftadd (ARG)
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (11) i2___wmul                                            6     2      4    1145
                                             14 COMRAM     6     2      4
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___ftmul                                          15     9      6    1727
                                             32 COMRAM    15     9      6
                           ___lwtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___ftadd (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___awmod                                           6     2      4     764
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (11) i2___awdiv                                           8     4      4     820
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (10) i2__tdiv_to_l_                                      15     9      6     355
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (10) i2__div_to_l_                                       12     6      6     481
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (10) i2___lltoft                                          9     5      4     716
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (10) i2___llmod                                           9     1      8     367
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___lldiv                                          13     5      8     318
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (10) i2___fttol                                          15    11      4     330
                                             54 COMRAM    15    11      4
                          i2___ftmul (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftsub                                           6     0      6    1736
                                             32 COMRAM     6     0      6
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___ftadd                                          12     6      6    1617
                                             20 COMRAM    12     6      6
                           ___lwtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftneg                                           3     0      3      71
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (10) i2___ftge                                            9     3      6     292
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (8) ___lwtoft                                             3     0      3     707
                                              8 COMRAM     3     0      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (12) i2___ftpack                                          8     3      5     621
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (8) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ReadTimer                                      10     8      2      69
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (9) _SetRange                                            11    11      0      44
                                              0 COMRAM    11    11      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _EXT_INT_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
   ___ftdiv
     ___ftpack
   ___ftge
   _lcd_clear
     _lcd_sendCommand
       __lcd_Port
   _lcd_init
     __lcd_Port
     _lcd_sendCommand
       __lcd_Port
   _lcd_sendStringToPos
     _lcd_sendString
       _lcd_sendChar
         __lcd_Port
     _lcd_setPosition
       _lcd_sendCommand
         __lcd_Port
   _sprintf
     ___ftdiv (ARG)
       ___ftpack
     __doprnt (ARG)
       Absolute function(Fake) *
       ___awdiv *
         ___awmod (ARG)
       ___ftadd *
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge *
       ___ftmul *
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg *
       ___ftsub *
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol *
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv *
       ___llmod *
         ___lldiv (ARG)
       ___lltoft *
         ___ftpack
       ___wmul *
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_ *
       __tdiv_to_l_ *
       _fround *
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit *
       _putch *
         _EUSART1_Write
       _scale *
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _INT0_ISR
     _SetRange
     _TMR0_ReadTimer
     _TMR0_Reload
     _TMR0_StopTimer
     ___lwtoft
       i2___ftpack
     _printf
       i2__doprnt
         Absolute function(Fake) *
         i2___awdiv *
           i2___awmod (ARG)
         i2___ftadd *
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftge *
         i2___ftmul *
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftadd (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg *
         i2___ftsub *
           i2___ftadd
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___lltoft (ARG)
             i2___ftpack
         i2___fttol *
           i2___ftmul (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftadd (ARG)
                 ___lwtoft (ARG)
                   i2___ftpack
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lldiv *
         i2___llmod *
           i2___lldiv (ARG)
         i2___lltoft *
           i2___ftpack
         i2___wmul *
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2__div_to_l_ *
         i2__tdiv_to_l_ *
         i2_fround *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftadd (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2_isdigit *
         i2_putch *
           i2_EUSART1_Write
         i2_scale *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
     i2_TMR0_StartTimer
     i2___ftadd
       ___lwtoft (ARG)
         i2___ftpack
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
       i2___ftpack (ARG)
       i2___ftpack (ARG)
       i2___wmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
     i2___ftdiv
       ___lwtoft (ARG)
         i2___ftpack
       i2___ftadd (ARG)
         ___lwtoft (ARG)
           i2___ftpack
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftmul (ARG)
         ___lwtoft (ARG)
           i2___ftpack
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftadd (ARG)
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftpack (ARG)
       i2___wmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
     i2___ftmul
       ___lwtoft (ARG)
         i2___ftpack
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
       i2___ftadd (ARG)
         ___lwtoft (ARG)
           i2___ftpack
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftpack (ARG)
       i2___wmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
     i2___wmul
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
   _INT1_ISR
     _SetRange
     _printf
       i2__doprnt
         Absolute function(Fake) *
         i2___awdiv *
           i2___awmod (ARG)
         i2___ftadd *
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftge *
         i2___ftmul *
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftadd (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg *
         i2___ftsub *
           i2___ftadd
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___lltoft (ARG)
             i2___ftpack
         i2___fttol *
           i2___ftmul (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftadd (ARG)
                 ___lwtoft (ARG)
                   i2___ftpack
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lldiv *
         i2___llmod *
           i2___lldiv (ARG)
         i2___lltoft *
           i2___ftpack
         i2___wmul *
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2__div_to_l_ *
         i2__tdiv_to_l_ *
         i2_fround *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftadd (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2_isdigit *
         i2_putch *
           i2_EUSART1_Write
         i2_scale *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
       _SetRange

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     59      59       6       34.8%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     56      70       4       70.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      5D       1       98.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     126       9        0.0%
DATA                 0      0     126      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Mon Jan 23 21:39:53 2017

                           ?_lcd_sendChar 0001                              ___awdiv@sign 009B  
                     ___wmul@multiplicand 00A0                                i2___ftpack 4A0C  
                         _timer0ReloadVal 005C                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                              ___ftadd@exp1 0112  
                            ___ftadd@exp2 0111                                i2___lltoft 5030  
                             __CFG_LVP$ON 000000                              ___ftadd@sign 0110  
                         ?_lcd_sendString 0094                          ?_lcd_sendCommand 0001  
                                     l238 5578                                       l270 398A  
                                     l351 536C                                       l416 0D52  
                                     l345 5348                                       l347 5354  
                                     l349 5360                                       l483 0DE4  
                                     l468 0AA8                                       l807 3172  
                                     l816 319C                                       l737 3C74  
                                     l841 395C                                       l834 3898  
                                     l827 3EFA                                       l835 38DC  
                                     l792 303A                                       l769 44C8  
                                     l866 53C8                                       l938 49FA  
                                     l796 3074                                       l948 4BE4  
                                     l798 309C                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                              ___awmod@sign 0095  
                                     tosl 000FFD                                       wreg 000FE8  
                            ___ftdiv@cntr 00A1                              ___ftdiv@sign 00A6  
                                    l6012 3082                                      l6006 3048  
                                    l6040 312A                                      l6104 3D86  
                                    l6034 3102                                      l6018 3092  
                                    l6130 48C4                                      l6036 3110  
                                    l6028 30D4                                      l6300 403C  
                                    l4620 3B4A                                      l4604 3942  
                                    l6140 48F4                                      l6124 48AE  
                                    l6108 3DA4                                      l5254 4EBC  
                                    l6054 31C6                                      l6046 3158  
                                    l6038 311E                                      l6302 4046  
                                    l4614 3B24                                      l4606 3952  
                                    l6214 2F8A                                      l6206 2EA6  
                                    l3920 5362                                      l3912 534A  
                                    l5264 5136                                      l6064 3214  
                                    l6048 3166                                      l6312 4D94  
                                    l6136 48E2                                      l6152 4932  
                                    l6080 3CFA                                      l7202 3E58  
                                    l6306 4062                                      l6314 4DA4  
                                    l4642 3BF2                                      l4634 3B9E  
                                    l6138 48EE                                      l6074 3CC0  
                                    l6234 26C0                                      l3916 5356  
                                    l5268 5156                                      l6260 5100  
                                    l4564 3844                                      l6156 4946  
                                    l6148 4924                                      l6180 4B0C  
                                    l6172 4AE6                                      l4548 5456  
                                    l6252 2910                                      l6228 25FA  
                                    l7222 3EB8                                      l6270 3F6A  
                                    l4750 497E                                      l4654 3C2A  
                                    l4558 380A                                      l6094 3D48  
                                    l6246 284A                                      l6238 26E6  
                                    l4680 480A                                      l4752 498E  
                                    l4664 3C5A                                      l6192 4B52  
                                    l6184 4B30                                      l6176 4AFA  
                                    l6168 4AD6                                      l4690 488E  
                                    l4762 49E8                                      l4754 4994  
                                    l4770 4B78                                      l4666 3C6A  
                                    l4658 3C3E                                      l4594 3912  
                                    l6178 4B06                                      l6098 3D66  
                                    l4684 484A                                      l6292 4010  
                                    l4772 4B88                                      l6188 4B3E  
                                    l4774 4B8E                                      l4598 3926  
                                    l6288 3FFC                                      l6298 402C  
                                    l4778 4BD2                                      l7196 3E1E  
                                    l5960 440A                                      l5972 447C  
                                    l5964 441E                                      l5982 44D2  
                                    l5974 44AC                                      l5966 442C  
                                    l5976 44BA                                      l5968 445C  
                                    l9610 03F2                                      l9530 00F4  
                                    l5988 44EE                                      l9540 0142  
                                    l9524 00A8                                      l9710 0886  
                                    l9702 0840                                      l9622 0490  
                                    l9534 0122                                      l9720 0910  
                                    l9624 04A6                                      l9560 0210  
                                    l9536 0138                                      l9706 086A  
                                    l9730 09F8                                      l9634 0536  
                                    l9626 04D6                                      l9618 0462  
                                    l9570 027C                                      l9546 0172  
                                    l9554 01E8                                      l9900 11E4  
                                    l9812 0E78                                      l9804 0E1C  
                                    l9740 0A6E                                      l9732 0A06  
                                    l9716 08E4                                      l9708 0872  
                                    l9652 0628                                      l9628 04EC  
                                    l9580 02D0                                      l9572 0282  
                                    l9564 0256                                      l9910 12D0  
                                    l9830 0EEC                                      l9814 0E7E  
                                    l9806 0E52                                      l9742 0A76  
                                    l9718 0900                                      l9670 06C4  
                                    l9654 062E                                      l9638 0564  
                                    l9574 0288                                      l9566 026C  
                                    l9840 0F50                                      l9760 0B32  
                                    l9744 0A8A                                      l9736 0A44  
                                    l9728 09D6                                      l9648 05C2  
                                    l9912 12E6                                      l9906 12A6  
                                    l9834 0F1C                                      l9826 0EC4  
                                    l9690 07BA                                      l9682 0750  
                                    l9674 06EC                                      l9666 0674  
                                    l9594 0340                                      l9586 02EC  
                                    l9914 1304                                      l9578 028E  
                                    l9908 12C2                                      l9852 0FCA  
                                    l9772 0C4A                                      l9764 0B84  
                                    l9756 0B08                                      l9748 0AAC  
                   __size_ofi2__div_to_l_ 0128                                      l9862 1038  
                                    l9854 0FD4                                      l9846 0F88  
                                    l9782 0D12                                      l9774 0C78  
                                    l9694 07E4                                      l9686 077C  
                                    STR_1 7FB3                                      l9880 10EC  
                                    l9872 10AC                                      l9848 0F92  
                                    l9776 0CC6                                      l9696 07EC  
                                    STR_2 7F7E                                      STR_3 7FEB  
                                    l9890 1168                                      l9866 1062  
                                    l9794 0D90                                      l9786 0D3C  
                                    l9778 0CD4                                      l9698 0802  
                                    STR_4 7FD5                                      STR_5 7FF6  
                                    l9884 112A                                      l9876 10D6  
                                    l9796 0DC4                                      l9788 0D44  
                                    STR_6 7FE0                                      STR_7 7FCA  
                                    l9878 10E0                                      l9896 11C6  
                                    l9888 1154                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    u5861 37E6                                      u5881 3820  
                                    u8701 3CD6                                      u8471 2FE8  
                                    u8481 3006                                      u8681 3C9C  
                                    u8941 3F46                                      u8960 3F90  
                                    u8965 3F86                                      _WPUB 000F61  
                           _EUSART1_Write 5574                                      _main 396E  
                             i2__doprnt@c 0076                              ___ftpack@arg 0090  
                             i2__doprnt@f 0048                          ?_lcd_setPosition 0093  
                            ___ftpack@exp 0093                           _TMR0_StartTimer 55DA  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 005E  
                           __CFG_BORV$190 000000                              i2___ftadd@f1 0015  
                            i2___ftadd@f2 0018                              i2___ftge@ff1 0001  
                            i2___ftge@ff2 0004               __end_of_lcd_sendStringToPos 5512  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00A0                             __CFG_IESO$OFF 000000  
                            i2___ftdiv@f1 0030                              i2___ftdiv@f2 0033  
                            i2___ftdiv@f3 003A                           __end_ofi2_scale 2D26  
                            i2___ftneg@f1 0001                           __end_ofi2_putch 55CC  
                          ??_lcd_sendChar 0091                              ___ftmul@cntr 00B1  
                            i2___ftmul@f1 0021                              i2___ftmul@f2 0024  
                            ___param_bank 000000                              ___ftmul@sign 00B2  
                            i2___ftsub@f1 0021                              i2___ftsub@f2 0024  
                            i2___fttol@f1 0037                  __size_ofi2_EUSART1_Write 000C  
                            ___fttol@exp1 0112                              i2___lltoft@c 0009  
                            ___fttol@lval 010E                   __end_of_TMR0_Initialize 51FC  
                        __end_of_INT0_ISR 43F0                          __end_of_INT1_ISR 5030  
          ??_TMR0_DefaultInterruptHandler 000C            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 559E                                     l10030 3A9A  
                                   l10024 39FE                                     l10034 3ABC  
                                   l10036 3AE4                                     ?_main 0001  
                         __end_of___awdiv 4950                           __end_of___ftadd 323A  
                         __end_of___awmod 4B5C                 TMR0_ReadTimer@readValHigh 000A  
                         __end_of___ftdiv 3F30                           __end_of___ftneg 53D6  
                         __end_of___lldiv 4A0C                           __end_of___ftmul 3DE4  
                                   _T0CON 000FD5                           ___awdiv@divisor 0098  
                         __end_of___llmod 4BF6                           __end_of___ftsub 512A  
                         __end_of___fttol 4074                                     u10931 3DFA  
                                   u10951 3E34                                     u16008 00DC  
                                   u16090 0386                                     u17107 4E16  
                                   u17117 4E2E                                     u16430 0AA0  
                                   u17127 4E46                                     u16095 037A  
                                   u16328 082A                                     u17137 5478  
                                   u16418 0A2E                                     u16518 0CFC  
                                   u16278 073A                            __CFG_DEBUG$OFF 000000  
                                   u17087 519A                                     u16368 08CE  
                                   u17097 51AE                                     u16298 07A4  
                                   u16468 0AF2                                     u16388 09BC  
                                   u16728 1022                                     u16488 0C30  
                                   u16838 11B0                                     u16758 1096  
                                   u16858 128E                                     u16798 1114  
                                   i2l113 0064                                     i2l107 004E  
                                   i2l109 005A                                     i2l238 55AE  
                                   i2l175 5220                                     i2l416 1F14  
                                   i2l483 1FA6                                     i2l468 1C78  
                                   i2l807 359E                                     i2l816 35BA  
                                   i2l737 42BC                                     i2l841 4194  
                                   i2l834 4106                                     i2l835 412E  
                                   i2l827 4798                                     i2l792 34C4  
                                   i2l769 4A9A                                     i2l866 54C2  
                                   i2l938 4D7A                                     i2l796 34EE  
                                   i2l948 4FBA                           ___awdiv@counter 009A  
                                   _TMR0H 000FD7                                     _TMR0L 000FD6  
                            i2__div_to_l_ 41A6                           __end_of__doprnt 1310  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94         __size_of_TMR0_SetInterruptHandler 000A  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                 ?_TMR0_SetInterruptHandler 0090  
                           __CFG_WRT3$OFF 000000                              ___lltoft@exp 00A0  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                          __end_of_TMR0_ISR 5436  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                              i2isdigit@c 0003                          __end_of_RSET_BIT 7F7E  
                         __end_of_dpowers 7F17                                i2scale@scl 0036  
                            i2__doprnt@ap 004A                              i2__doprnt@pb 0046  
                                   _scale 2488                                     _range 00CD  
                         __end_of_isdigit 5460                        __CFG_MCLRE$EXTMCLR 000000  
                           ___ftpack@sign 0094                                     _putch 5560  
                                   _units 00CA                            ?_EUSART1_Write 0001  
                                   pclath 000FFA                                     tablat 000FF5  
                        __end_ofi2___ftge 4C86                          __end_ofi2___wmul 54AC  
                                   status 000FD8                           __end_of_sprintf 50DE  
                          __CFG_HFOFST$ON 000000                            __CFG_FOSC$HSMP 000000  
                        __end_ofi2_fround 3480                             i2___ftdiv@exp 003D  
                      __size_ofi2___awdiv 0084                        __size_ofi2___ftadd 01AC  
                      __size_ofi2___awmod 0070                            __CFG_PBADEN$ON 000000  
                      __size_ofi2___ftdiv 00E6                        __size_ofi2___ftneg 0024  
                      __size_ofi2___lldiv 0082                        __size_ofi2___ftmul 00F4  
                      __size_ofi2___llmod 0066                        __size_ofi2___ftsub 0040  
                      __size_ofi2___fttol 00F4                        __size_ofi2__doprnt 1178  
                         __initialization 5240                         i2___lldiv@divisor 0005  
              __end_of_EUSART1_Initialize 5560                              __end_of_main 3AFE  
                            _stored_range 00B8                         i2___lldiv@counter 000D  
                           i2___ftmul@exp 002A                      lcd_sendStringToPos@x 009B  
                    lcd_sendStringToPos@y 0098                        __size_ofi2_isdigit 001E  
             ?_INTERRUPT_InterruptManager 0001                               ?i2___ftpack 0001  
                           lcd_sendChar@a 0093                             lcd_sendChar@y 0092  
                             ?i2___lltoft 0009                                    ??_main 00B6  
                           ___fttol@sign1 010D                          __end_of_SetRange 37D0  
                           __activetblptr 000002                      __size_of__tdiv_to_l_ 019E  
                 __end_of_TMR0_StartTimer 55DE                          ___llmod@dividend 009D  
                                  ?_scale 00B3                          ___awdiv@dividend 0096  
                                  _ANSELA 000F38                                    ?_putch 0001  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                        __end_of___ftpack 44FC                          __end_of___lltoft 4E08  
                                  _R1_BIT 7F74                                    i2l4202 41E2  
                                  i2l4140 3380                                    i2l4310 4C26  
                                  i2l4302 4182                            __CFG_WDTEN$OFF 000000  
                                  i2l4320 4C82                                    i2l4400 4D2C  
                                  i2l4240 4292                                    i2l4224 4254  
                                  i2l4216 4224                                    i2l4304 418E  
                                  i2l4314 4C56                                    i2l4402 4D38  
                                  i2l4162 2A6A                                    i2l4332 52DA  
                                  i2l4412 4D6C                                    i2l4404 4D3C  
                                  i2l4420 4F78                                    i2l4236 4282  
                                  i2l4148 3440                                    i2l4180 2C5E  
                                  i2l4172 2B32                                    i2l4342 461C  
                                  i2l4422 4F84                                    i2l4246 42AA  
                                  i2l4262 40CC                                    i2l3640 4A68  
                                  i2l3632 4A2A                                    i2l3800 34FC  
                                  i2l4360 4682                                    i2l4424 4F88  
                                  i2l4248 42B6                                    i2l4256 40A0  
                                  i2l3720 4CAA                                    i2l4168 2B0E  
                                  i2l3642 4A86                                    i2l3634 4A34  
                                  i2l4370 46AA                                    i2l4434 5036  
                                  i2l3730 4CCC                                    i2l3714 4C9A  
                                  i2l4186 2D02                                    i2l3644 4A90  
                                  i2l3636 4A52                                    i2l3628 4A1C  
                                  i2l4372 46B6                                    i2l4364 4692  
                                  i2l4428 4FAC                                    i2l4436 5042  
                                  i2l4196 41C4                                    i2l4292 415A  
                                  i2l3822 354E                                    i2l4374 46BC  
                                  i2l3726 4CC0                                    i2l3742 4CF2  
                                  i2l4390 5528                                    i2l5238 5222  
                                  i2l3824 3558                                    i2l3816 352C  
                                  i2l4296 416A                                    i2l3728 4CC8  
                                  i2l3842 35D6                                    i2l3834 358C  
                                  i2l3826 3562                                    i2l4378 46D2  
                                  i2l3746 4D00                                    i2l3738 4CE8  
                                  i2l3770 4F30                                    i2l3762 4F16  
                                  i2l3852 3606                                    i2l3836 3596  
                                  i2l3828 356A                                    i2l3782 4F5C  
                                  i2l3774 4F44                                    i2l3766 4F24  
                                  i2l3758 4F0A                                    i2l3862 4524  
                                  i2l3768 4F2C                                    i2l5704 4772  
                                  i2l3794 34D2                                    i2l3778 4F4E  
                                  i2l3882 457E                                    i2l3892 45A6  
                                  i2l3868 454C                                    i2l3886 458E  
                                  i2l3896 45B6                                    i2l9122 1314  
                                  i2l9300 1A26                                    i2l9220 16B0  
                                  i2l9132 138A                                    i2l5684 4734  
                                  i2l9222 16C6                                    i2l9134 13A0  
                                  i2l5678 470C                                    i2l9304 1A50  
                                  i2l9232 174E                                    i2l9224 16F6  
                                  i2l9216 168A                                    i2l9208 1622  
                                  i2l9144 13D8                                    i2l9152 1438  
                                  i2l9128 135C                             i2putch@txData 0002  
                                  i2l9410 203A                                    i2l9402 1FDE  
                                  i2l9330 1BDA                                    i2l9314 1ABE  
                                  i2l9306 1A58                                    i2l9250 1838  
                                  i2l9226 170C                                    i2l9170 14C4  
                                  i2l9162 1498                                    i2l9138 13A8  
                                  i2l9412 2040                                    i2l9404 2014  
                                  i2l9340 1C46                                    i2l9316 1ADA  
                                  i2l9308 1A6C                                    i2l9252 183E  
                                  i2l9236 1774                                    i2l9172 14CA  
                                  i2l9164 14AE                                    i2l9342 1C5A  
                                  i2l9334 1C14                                    i2l9326 1BAA  
                                  i2l9318 1AEA                                    i2l9246 17D2  
                                  i2l9158 145E                                    i2l9510 2462  
                                  i2l9504 2422                                    i2l9432 20D6  
                                  i2l9424 2086                                    i2l9328 1BCC  
                                  i2l9280 193E                                    i2l9272 18E6  
                                  i2l9264 1884                                    i2l9192 1580  
                                  i2l9184 152C                                    i2l9168 14BE  
                                  i2l9512 247E                                    i2l9176 14D0  
                                  i2l9506 243E                                    i2l9450 2174  
                                  i2l9370 1E10                                    i2l9362 1D50  
                                  i2l9354 1CD4                                    i2l9346 1C7C  
                                  i2l9338 1C3E                                    i2l9178 1510  
                                  i2l9508 244C                                    i2l9460 21D6  
                                  i2l9452 217E                                    i2l9444 2136  
                                  i2l9428 20AA                                    i2l9380 1ED4  
                                  i2l9372 1E3E                                    i2l9292 19CE  
                                  i2l9284 196A                                    i2l9268 18C6  
                                  i2l9470 2246                                    i2l9446 2140  
                                  i2l9438 2102                                    i2l9374 1E8C  
                                  i2l9358 1CFE                                    i2l9294 19D6  
                                  i2l9464 2200                                    i2l9392 1F52  
                                  i2l9384 1EFE                                    i2l9376 1E9A  
                                  i2l9296 19EC                                    i2l9288 19A4  
                                  i2l9482 22C0                                    i2l9474 2270  
                                  i2l9394 1F86                                    i2l9386 1F06  
                                  i2l9476 227A                                    i2l9494 2350  
                                  i2l9486 22EA                                    i2l9478 2286  
                                  i2l9488 22FE                                    i2l9498 236E  
                                  i2l9930 4FF2                                    i2l9924 4FDE  
                                  i2l9944 42D8                                    i2l9936 500C  
                                  i2l9928 4FEC                                    i2l9964 43E2  
                                  _RCREG1 000FAE                                 ??i2_scale 0033  
                        __end_of___lwtoft 54F4                                    u450_41 3490  
                                  u451_41 34A4                                    _RCSTA1 000FAB  
                                  u535_41 4084                                    u471_41 450C  
                                  u537_41 40B0                                    u473_41 4534  
                                  _OSCCON 000FD3                                    u811_41 471C  
                                  u549_41 4600                                    u809_41 46F4  
                                  _SPBRG1 000FAF                                 ??i2_putch 0002  
                                  _TXREG1 000FAD                                    _TXSTA1 000FAC  
                  __size_ofi2__tdiv_to_l_ 0132                              __doprnt$1651 0125  
                          __CFG_XINST$OFF 000000                              i2_scale$1832 0033  
                        __end_of__powers_ 7F65                          __end_of_lcd_init 4E80  
                            ?_TMR0_Reload 0001                                    ___ftge 47CA  
                        lcd_sendChar@temp 0091                                    ___wmul 5304  
                               ??___awdiv 009A                                 ??___ftadd 010D  
                          __CFG_STVREN$ON 000000                                 ??___awmod 0094  
                               ??___ftdiv 009E                                 ??___ftneg 0093  
                               ??___lldiv 0098                                 ??___ftmul 00AA  
                               ??___llmod 00A5                                 ??___ftsub 00B6  
                               ??___fttol 0108                                 ??__doprnt 011F  
                        ?_TMR0_Initialize 0001                                    _fround 2D26  
                           i2__doprnt@exp 0063                             i2__doprnt@val 0065  
                                  clear_0 5266                          ___awdiv@quotient 009C  
                         ___awmod@divisor 0092                                    _result 0058  
                            __doprnt@flag 0137                           ___awmod@counter 0094  
                                  _printf 5370                              __doprnt@fval 0134  
                            __doprnt@prec 0139                            i2___awdiv@sign 000C  
                   ___ftmul@f3_as_product 00AE                         ??i2_EUSART1_Write 0001  
                               ??_isdigit 0090                         __end_ofi2___awdiv 4D0A  
                       __end_ofi2___ftadd 362C                         __end_ofi2___awmod 4F66  
                       __end_ofi2___ftdiv 47CA                            i2___ftadd@exp1 0020  
                          i2___ftadd@exp2 001F                         __end_ofi2___ftneg 54D0  
                       __end_ofi2___lldiv 4D8C                         __end_ofi2___ftmul 45F0  
                       __end_ofi2___llmod 4FCC                         __end_ofi2___ftsub 5304  
                       __end_ofi2___fttol 46E4                            i2___ftadd@sign 001E  
                            __mediumconst 7EEE                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                       __end_ofi2__doprnt 2488                      __end_of_lcd_sendChar 51B8  
                        lcd_sendCommand@a 0092                            i2___awmod@sign 0006  
                         ??_EUSART1_Write 0090  TMR0_SetInterruptHandler@InterruptHandler 0090  
                               ??_sprintf 00B6             __size_of_INTERRUPT_Initialize 0004  
                       __end_ofi2_isdigit 5530                         _SYSTEM_Initialize 5530  
                          i2___ftdiv@cntr 0039                                __accesstop 0060  
                 __end_of__initialization 5274                            i2___ftdiv@sign 003E  
                               ?_INT0_ISR 0001                                 ?_INT1_ISR 0001  
                              ___ftadd@f1 0107                                ___ftadd@f2 010A  
                     __size_ofi2___ftpack 00AE                                ___ftge@ff1 0090  
                              ___ftge@ff2 0093                        ?_SYSTEM_Initialize 0001  
                     __size_ofi2___lltoft 005C                             ___rparam_used 000001  
                              ___ftdiv@f1 0098                                ___ftdiv@f2 009B  
                              ___ftdiv@f3 00A2                                ___ftneg@f1 0090  
                      __size_of__lcd_Port 0036                            i2___ftpack@arg 0001  
                      i2__tdiv_to_l_@exp1 000F                         i2___llmod@divisor 0012  
                          i2___ftpack@exp 0004                        i2__tdiv_to_l_@cntr 000E  
                       i2___llmod@counter 0016                        i2__tdiv_to_l_@quot 000A  
                              ___ftmul@f1 00A4                                ___ftmul@f2 00A7  
                              ___ftsub@f1 0113                                ___ftsub@f2 0116  
                              ___fttol@f1 0104                            __pcstackCOMRAM 0001  
                      i2___lldiv@dividend 0001                              __pidataBANK0 55D6  
                     ??_SYSTEM_Initialize 0094                          ??_lcd_sendString 0096  
                               ?_TMR0_ISR 0001                                ___lltoft@c 0098  
                          i2___ftmul@cntr 002E                             __end_of_scale 2936  
                          i2___ftmul@sign 002F                             __end_of_putch 5574  
                 __size_of_TMR0_ReadTimer 0042                            main@cap_string 0149  
                          i2___fttol@exp1 0045                                ___lwtoft@c 0009  
                          i2___fttol@lval 0041                                 ?i2___ftge 0001  
                               ?i2___wmul 000F                             i2__tdiv_to_l_ 4074  
             __size_of_EXT_INT_Initialize 000E                                __div_to_l_ 3AFE  
                               ?i2_fround 0030                        __size_of_lcd_clear 000E  
                              __doprnt@ap 011D                                __doprnt@pb 0119  
                   i2EUSART1_Write@txData 0001                           __div_to_l_@exp1 009B  
                        ?_TMR0_StartTimer 0001                           __div_to_l_@cntr 009A  
                                 ??_scale 00B6                 __end_of_SYSTEM_Initialize 554A  
                          i2___lltoft@exp 0011                           __div_to_l_@quot 0096  
                                 ??_putch 0091                        i2___lldiv@quotient 0009  
                              __pbssBANK0 00B6                          i2__tdiv_to_l_@f1 0001  
                        i2__tdiv_to_l_@f2 0004                           __CFG_PLLCFG$OFF 000000  
                              ??_INT0_ISR 0058                                ??_INT1_ISR 0058  
                              __pnvCOMRAM 005C                             __div_to_l_@f1 0090  
                           __div_to_l_@f2 0093                                 ?_SetRange 0001  
                      __CFG_CCP2MX$PORTC1 000000                                   ?___ftge 0090  
        __end_of_TMR0_SetInterruptHandler 55C2                   __size_of_TMR0_StopTimer 0004  
                                 ?___wmul 009E                                ??_TMR0_ISR 000D  
                      __CFG_CCP3MX$PORTB5 000000                                   ?_fround 00B3  
                               ?___ftpack 0090                                   ?_printf 0077  
                               ?___lltoft 0098                            ?i2__tdiv_to_l_ 0001  
                              ??i2___ftge 0007                                 ?___lwtoft 0009  
                              ??i2___wmul 0013                         __end_of__lcd_Port 5370  
                              ??i2_fround 0033                                   _OSCCON2 000FD2  
                        lcd_setPosition@i 0095                          lcd_setPosition@j 0096  
                        lcd_setPosition@x 0094                          lcd_setPosition@y 0093  
                                 _OSCTUNE 000F9B                                   _SPBRGH1 000FB0  
                __size_of_lcd_sendCommand 0026                                 ?_lcd_init 0001  
                                 i2_scale 2936                                   i2_putch 55C2  
                              ??_SetRange 0001                                _auto_range 00CC  
                         __CFG_PWRTEN$OFF 000000                         __end_of__npowers_ 7F3E  
                                 __Hparam 0000                                _scale$1650 0100  
                                 __Lparam 0000                         __end_of_lcd_clear 5590  
                         __size_of___ftge 00C8                                   ___awdiv 4892  
                __size_of_lcd_setPosition 0076                                   ___ftadd 2FD2  
                          i2__doprnt$1833 0060                                   ___awmod 4ABA  
                                 ___ftdiv 3DE4                                   ___ftneg 53A6  
                                 ___lldiv 4950                           __size_of___wmul 0036  
                                 ___ftmul 3C86                                   ___llmod 4B5C  
                                 ___ftsub 50DE                                   ___fttol 3F30  
            __size_of_lcd_sendStringToPos 001E                      __size_of_TMR0_Reload 000A  
                                 __doprnt 00A4                                   __pcinit 5240  
                            ??i2___ftpack 0006                                ??___ftpack 0095  
                         __size_of_fround 02AC                   i2___ftmul@f3_as_product 002B  
                                 __ramtop 0600                              ??i2___lltoft 000D  
                              ??___lltoft 009C                                   __ptext0 396E  
                                 __ptext1 508C                                   __ptext2 00A4  
                                 __ptext3 2488                                   __ptext4 5560  
                                 __ptext5 5574                                   __ptext6 5436  
                                 __ptext7 2D26                                   __ptext8 5304  
                                 __ptext9 3C86                           __size_of_printf 0036  
                   __size_of_lcd_sendChar 0046                                ??___lwtoft 000C  
                               _T0CONbits 000FD5                             i2_fround$1830 0036  
                           i2_fround$1831 0033                               ?__div_to_l_ 0090  
                                 _dpowers 7EEF                     _OSCILLATOR_Initialize 5590  
                            i2fround@prec 0039                                   _isdigit 5436  
                          i2__doprnt@flag 0072                                   _reading 00B6  
                          i2__doprnt@fval 006D                          ___awmod@dividend 0090  
                          i2__doprnt@prec 0074                        _EUSART1_Initialize 554A  
                ??_PIN_MANAGER_Initialize 0090                __size_of_SYSTEM_Initialize 001A  
                                 _sprintf 508C                             __doprnt@width 0132  
                              ??_lcd_init 0093                      end_of_initialization 5274  
                                 ftoa@buf 00B9                       ?_EUSART1_Initialize 0001  
                           __Lmediumconst 7EEE                       i2___wmul@multiplier 000F  
                               i2u1510_48 1344                        __end_ofi2___ftpack 4ABA  
                               i2u1542_48 1A10                                 i2u1519_40 15C0  
                               i2u1519_45 15B6                                 i2u1551_48 1BFE  
                               i2u1553_40 1C70                                 i2u1561_48 1EBE  
                               i2u1537_48 1928                                 i2u1546_48 1AA8  
                               i2u1539_48 198E                                 i2u1556_48 1CBE  
                               i2u1548_48 1B90                                 i2u1582_48 21C0  
                               i2u1558_48 1DF6                                 i2u1593_48 233A  
                               i2u1585_48 2230                                 i2u1595_48 240A  
                      __end_ofi2___lltoft 508C                                 i2u1589_48 22AA  
                               i2u1697_48 5420                           ___lldiv@divisor 0094  
                         ___lldiv@counter 009C                           i2_EUSART1_Write 55AC  
                   TMR0_ReadTimer@readVal 0007                                   printf@f 0077  
                            _lcd_sendChar 5172                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                            __tdiv_to_l_@f1 0090  
                          __tdiv_to_l_@f2 0093                            _TMR0_ReadTimer 5282  
                    ??_EUSART1_Initialize 0090                           ??i2__tdiv_to_l_ 0007  
                     __end_of_cal_current 7F74                             ??__tdiv_to_l_ 0096  
                _TMR0_SetInterruptHandler 55B8                                 i2___awdiv 4C86  
                     EUSART1_Write@txData 0090                                 i2___ftadd 3480  
                               i2___awmod 4EF6                                 i2___ftdiv 46E4  
                               i2___ftneg 54AC                                 i2___lldiv 4D0A  
                               i2___ftmul 44FC                                 i2___llmod 4F66  
                               i2___ftsub 52C4                                 i2___fttol 45F0  
                               i2__doprnt 1310                            __end_of_R1_BIT 7F79  
                             ___ftdiv@exp 00A5                        i2___llmod@dividend 000E  
                      i2___awdiv@dividend 0007                         ??_lcd_sendCommand 0091  
                         i2___ftpack@sign 0005                                 i2_isdigit 5512  
                       __size_of_INT0_ISR 0122                       __size_of__div_to_l_ 0188  
                       __size_of_INT1_ISR 0064                               ___ftmul@exp 00AD  
                          _TMR0_StopTimer 55E6                    __end_of_TMR0_ReadTimer 52C4  
                       SetRange@new_range 000B              __end_of_INTERRUPT_Initialize 55E2  
                          __end_of___ftge 4892                            __end_of___wmul 533A  
                       __size_of_TMR0_ISR 0030                    ?_OSCILLATOR_Initialize 0001  
                          __end_of_fround 2FD2                          i2___wmul@product 0013  
                       ??_lcd_setPosition 0094                            __end_of_printf 53A6  
                     start_initialization 5240                         __size_ofi2___ftge 0090  
                      i2___awdiv@quotient 000D                         __size_ofi2___wmul 0026  
                __size_of_TMR0_Initialize 0044           __size_of_PIN_MANAGER_Initialize 0030  
                     __end_of__tdiv_to_l_ 396E                               __lcd_Port@a 0090  
                         i2___fttol@sign1 0040                         __size_ofi2_fround 0246  
                              ?i2___awdiv 0007                                ?i2___ftadd 0015  
                              ?i2___awmod 0001                                ?i2___ftdiv 0030  
                              ?i2___ftneg 0001                                ?i2___lldiv 0001  
                              ?i2___ftmul 0021                                ?i2___llmod 000E  
                              ?i2___ftsub 0021                                ?i2___fttol 0037  
                             putch@txData 0091                     __end_of_EUSART1_Write 5582  
                              ?i2__doprnt 0046             lcd_sendStringToPos@charString 0099  
                 __end_ofi2_EUSART1_Write 55B8                           ___llmod@divisor 00A1  
                         ___llmod@counter 00A5                    __end_of_TMR0_StopTimer 55EA  
                              ?i2_isdigit 0001                               _cal_current 7F65  
                                ??___ftge 0096                         __size_of_SetRange 01A4  
                         ?_TMR0_ReadTimer 0001                                  ??___wmul 00A2  
                             __doprnt@exp 0128                               __doprnt@val 012A  
                             __pdataBANK0 00CA                                  ??_fround 00B6  
              __end_of_EXT_INT_Initialize 55AC                                  ??_printf 0052  
                              fround@prec 0106                             ?i2__div_to_l_ 0001  
                       __size_of___ftpack 010C                         __size_of___lltoft 007C  
                             __pbssCOMRAM 0058                         __size_of___lwtoft 0024  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                            _isdigit$1198 0091                                 __lcd_Port 533A  
                     _lcd_sendStringToPos 54F4                                  ?i2_scale 0030  
                       __size_of_lcd_init 0078                                  ?i2_putch 0001  
                               __doprnt@c 013B                                 __doprnt@f 011B  
                   _TMR0_InterruptHandler 00CE                                 __pnvBANK0 00CE  
                __size_of_TMR0_StartTimer 0004                           lcd_sendString@a 0094  
                         lcd_sendString@i 0096                           ?_TMR0_StopTimer 0001  
                  _PIN_MANAGER_Initialize 53D6                                 __pintcode 0008  
                           __pmediumconst 7EEE                                  ?___awdiv 0096  
                                ?___ftadd 0107                                  ?___awmod 0090  
                                ?___ftdiv 0098                                  ?___ftneg 0090  
                                ?___lldiv 0090                      ?_lcd_sendStringToPos 0098  
                                ?___ftmul 00A4                                  ?___llmod 009D  
                                ?___ftsub 0113                                 __npowers_ 7F17  
                                ?___fttol 0104                                  ?__doprnt 0119  
                               _lcd_clear 5582              ??_INTERRUPT_InterruptManager 0082  
                        __CFG_PRICLKEN$ON 000000                               __tdiv_to_l_ 37D0  
                          ??i2__div_to_l_ 0007                              ??__div_to_l_ 0096  
                                _BAUDCON1 000FB8                                  ?_isdigit 0001  
                 __size_of_lcd_sendString 0048                               ??i2___awdiv 000B  
                             ??i2___ftadd 001B                               ??i2___awmod 0005  
                                ?_sprintf 013C                               ??i2___ftdiv 0036  
                             ??i2___ftneg 0004                               ??i2___lldiv 0009  
                             ??i2___ftmul 0027                            __size_of_scale 04AE  
                             ??i2___llmod 0016                               ??i2___ftsub 0027  
                             ??i2___fttol 003B                                ?__lcd_Port 0001  
                          __size_of_putch 0014                      _INTERRUPT_Initialize 55DE  
                             ??i2__doprnt 004C                         ??_TMR0_Initialize 0092  
                                _INT0_ISR 42CE                          ?i2_EUSART1_Write 0001  
                                _INT1_ISR 4FCC                            ___wmul@product 00A2  
                        i2__doprnt@tmpval 0069                                  _LATAbits 000F89  
                                _LATCbits 000F8B                               ??i2_isdigit 0001  
                       i2_TMR0_StartTimer 55E2       __size_of_INTERRUPT_InterruptManager 0098  
              ??_TMR0_SetInterruptHandler 0092                                  _PIR1bits 000F9E  
                      __end_of__div_to_l_ 3C86                                  i2u551_40 463A  
                                i2u551_45 4632                                  i2u713_40 520A  
                                i2u713_46 520C                                  i2u570_44 36C0  
                                i2u570_45 36BC                                  i2u571_44 36EA  
                                i2u571_45 36E6                                  i2u572_44 3708  
                                i2u572_45 3704                                  i2u573_44 3726  
                                i2u573_45 3722                                  i2u574_44 3744  
                                i2u566_44 3648                                  i2u574_45 3740  
                                i2u566_45 3644                                  i2u575_44 3786  
                                i2u567_44 3666                                  i2u575_45 3782  
                                i2u567_45 3662                                  i2u576_44 37C4  
                                i2u568_44 3684                                  i2u576_45 37C0  
                                i2u568_45 3680                                  i2u569_44 36A2  
                                i2u569_45 369E                             ??_TMR0_Reload 0001  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                      ?i2_TMR0_StartTimer 0001                     ??_lcd_sendStringToPos 009B  
                                _TMR0_ISR 5406                           i2__div_to_l_@f1 0001  
                         i2__div_to_l_@f2 0004                                  _RSET_BIT 7F79  
                              ?_lcd_clear 0001                  TMR0_ReadTimer@readValLow 0009  
                     ??i2_TMR0_StartTimer 0001                         ___wmul@multiplier 009E  
                                i2___ftge 4BF6                                  i2___wmul 5486  
                       i2___awdiv@divisor 0009                                  i2_fround 323A  
                       i2___awdiv@counter 000B                           _lcd_sendCommand 5460  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                               copy_data0 5254                     ?_INTERRUPT_Initialize 0001  
                      i2___awmod@dividend 0001                          __size_ofi2_scale 03F0  
               __end_ofi2_TMR0_StartTimer 55E6                          __size_ofi2_putch 000A  
                                _SetRange 362C                                  __Hrparam 0000  
                                __Lrparam 0000                           _lcd_setPosition 4E80  
                      __CFG_BOREN$SBORDIS 000000                         __CFG_P2BMX$PORTB5 000000  
                 ??_OSCILLATOR_Initialize 0090                         ??_TMR0_StartTimer 0090  
                        __size_of___awdiv 00BE                          __size_of___ftadd 0268  
                        __size_of___awmod 00A2                          __size_of___ftdiv 014C  
                        __size_of___ftneg 0030                     i2___wmul@multiplicand 0011  
                        __size_of___lldiv 00BC                          __size_of___ftmul 015E  
                        __size_of___llmod 009A                          __size_of___ftsub 004C  
                        __size_of___fttol 0144               __size_of_EUSART1_Initialize 0016  
                                ___ftpack 43F0                          __size_of__doprnt 126C  
                             _fround$1648 0103                               _fround$1649 0100  
                                ___lltoft 4D8C                     __end_ofi2__tdiv_to_l_ 41A6  
                     __end_of_TMR0_Reload 55D6                           _putch$intlevel0 5566  
                                ___lwtoft 54D0                                  _cal_mode 005B  
                        __size_of_isdigit 002A                                  __ptext10 4ABA  
                                __ptext11 4892                                  __ptext20 53A6  
                                __ptext12 37D0                                  __ptext21 47CA  
                                __ptext13 3AFE                                  __ptext30 3DE4  
                                __ptext22 54F4                                  __ptext14 4D8C  
                                __ptext31 43F0                                  __ptext23 4E80  
                                __ptext15 4B5C                                  __ptext40 554A  
                                __ptext32 5530                                  __ptext24 512A  
                                __ptext16 4950                                  __ptext33 51B8  
                                __ptext25 5172                                  __ptext17 3F30  
                                __ptext50 2936                                  __ptext42 5406  
                                __ptext34 55DA                                  __ptext26 4E08  
                                __ptext18 50DE                                  __ptext51 55C2  
                                __ptext43 51FC                                  __ptext35 55B8  
                                __ptext27 5582                                  __ptext19 2FD2  
                                __ptext60 41A6                                  __ptext52 55AC  
                                __ptext44 4FCC                                  __ptext36 53D6  
                                __ptext28 5460                                  __ptext61 5030  
                                __ptext53 5512                                  __ptext45 42CE  
                                __ptext37 5590                                  __ptext29 533A  
                                __ptext70 4A0C                                  __ptext62 4F66  
                                __ptext54 323A                                  __ptext46 46E4  
                                __ptext38 55DE                                  __ptext71 55E6  
                                __ptext63 4D0A                                  __ptext55 5486  
                                __ptext47 55E2                                  __ptext39 559E  
                                __ptext72 55CC                                  __ptext64 45F0  
                                __ptext56 44FC                                  __ptext48 5370  
                                __ptext73 5282                                  __ptext65 52C4  
                                __ptext57 4EF6                                  __ptext49 1310  
                                __ptext74 362C                                  __ptext66 3480  
                                __ptext58 4C86                                  __ptext75 0000  
                                __ptext67 54AC                                  __ptext59 4074  
                                __ptext68 4BF6                                  __ptext69 54D0  
                                __powers_ 7F3E                                  _lcd_init 4E08  
                             ??__lcd_Port 0090                          __size_of_sprintf 0052  
                          i2_isdigit$1198 0002                             __size_of_main 0190  
                        ??_TMR0_ReadTimer 0003                      __end_ofi2__div_to_l_ 42CE  
    __end_of_TMR0_DefaultInterruptHandler 5240     __size_of_TMR0_DefaultInterruptHandler 0044  
            _TMR0_DefaultInterruptHandler 51FC                           i2__doprnt@width 0070  
                                int$flags 005E        __end_of_INTERRUPT_InterruptManager 00A0  
              _INTERRUPT_InterruptManager 0008                               ??_lcd_clear 0093  
                          __doprnt@tmpval 012E                   __end_of_lcd_sendCommand 5486  
                       i2___awmod@divisor 0003                         i2___awmod@counter 0005  
                              _INTCONbits 000FF2                            _lcd_sendString 512A  
                                isdigit@c 0092                    ??_INTERRUPT_Initialize 0090  
                                scale@scl 0103                        _EXT_INT_Initialize 559E  
                                intlevel2 0000                                 sprintf@ap 0143  
                               sprintf@pb 0145                          ??_TMR0_StopTimer 0001  
                        __tdiv_to_l_@exp1 009E                          __tdiv_to_l_@cntr 009D  
                               sprintf@wh 013C                          __tdiv_to_l_@quot 0099  
                 __end_of_lcd_setPosition 4EF6                          ___lldiv@dividend 0090  
                 ?_PIN_MANAGER_Initialize 0001                __size_ofi2_TMR0_StartTimer 0004  
                     ?_EXT_INT_Initialize 0001                                _RCSTA1bits 000FAB  
           ?_TMR0_DefaultInterruptHandler 0001                       lcd_setPosition@temp 0097  
                             _TMR0_Reload 55CC                                  printf@ap 0052  
                                printf@pb 0054                    __size_of_EUSART1_Write 000E  
                            ?__tdiv_to_l_ 0090                    __end_of_lcd_sendString 5172  
                    ??_EXT_INT_Initialize 0090                                  sprintf@f 013E  
                        ___lldiv@quotient 0098                           _TMR0_Initialize 51B8  
                       __CFG_T3CMX$PORTC0 000000            __end_of_PIN_MANAGER_Initialize 5406  
                       i2__div_to_l_@exp1 000C                         i2__div_to_l_@cntr 000B  
                       i2__div_to_l_@quot 0007  
