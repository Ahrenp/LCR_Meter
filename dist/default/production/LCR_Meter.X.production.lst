

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Jan 23 20:40:01 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    92                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    93  0000                     
    94                           	psect	idataBANK0
    95  00551A                     __pidataBANK0:
    96                           	opt stack 0
    97                           
    98                           ;initializer for _units
    99  00551A  70                 	db	112
   100  00551B  46                 	db	70
   101                           
   102                           ;initializer for _auto_range
   103  00551C  01                 	db	1
   104                           
   105                           ;initializer for _range
   106  00551D  02                 	db	2
   107                           
   108                           	psect	mediumconst
   109  007EF6                     __pmediumconst:
   110                           	opt stack 0
   111  007EF6  00                 	db	0
   112  007EF7                     _dpowers:
   113                           	opt stack 0
   114  007EF7  0001               	dw	1
   115  007EF9  0000               	dw	0
   116  007EFB  000A               	dw	10
   117  007EFD  0000               	dw	0
   118  007EFF  0064               	dw	100
   119  007F01  0000               	dw	0
   120  007F03  03E8               	dw	1000
   121  007F05  0000               	dw	0
   122  007F07  2710               	dw	10000
   123  007F09  0000               	dw	0
   124  007F0B  86A0               	dw	34464
   125  007F0D  0001               	dw	1
   126  007F0F  4240               	dw	16960
   127  007F11  000F               	dw	15
   128  007F13  9680               	dw	38528
   129  007F15  0098               	dw	152
   130  007F17  E100               	dw	57600
   131  007F19  05F5               	dw	1525
   132  007F1B  CA00               	dw	51712
   133  007F1D  3B9A               	dw	15258
   134  007F1F                     __end_of_dpowers:
   135                           	opt stack 0
   136  007F1F                     __npowers_:
   137                           	opt stack 0
   138  007F1F  00                 	db	0
   139  007F20  80                 	db	128
   140  007F21  3F                 	db	63
   141  007F22  CD                 	db	205
   142  007F23  CC                 	db	204
   143  007F24  3D                 	db	61
   144  007F25  D7                 	db	215
   145  007F26  23                 	db	35
   146  007F27  3C                 	db	60
   147  007F28  12                 	db	18
   148  007F29  83                 	db	131
   149  007F2A  3A                 	db	58
   150  007F2B  B7                 	db	183
   151  007F2C  D1                 	db	209
   152  007F2D  38                 	db	56
   153  007F2E  C6                 	db	198
   154  007F2F  27                 	db	39
   155  007F30  37                 	db	55
   156  007F31  38                 	db	56
   157  007F32  86                 	db	134
   158  007F33  35                 	db	53
   159  007F34  C0                 	db	192
   160  007F35  D6                 	db	214
   161  007F36  33                 	db	51
   162  007F37  CC                 	db	204
   163  007F38  2B                 	db	43
   164  007F39  32                 	db	50
   165  007F3A  70                 	db	112
   166  007F3B  89                 	db	137
   167  007F3C  30                 	db	48
   168  007F3D  E7                 	db	231
   169  007F3E  DB                 	db	219
   170  007F3F  2E                 	db	46
   171  007F40  E5                 	db	229
   172  007F41  3C                 	db	60
   173  007F42  1E                 	db	30
   174  007F43  42                 	db	66
   175  007F44  A2                 	db	162
   176  007F45  0D                 	db	13
   177  007F46                     __end_of__npowers_:
   178                           	opt stack 0
   179  007F46                     __powers_:
   180                           	opt stack 0
   181  007F46  00                 	db	0
   182  007F47  80                 	db	128
   183  007F48  3F                 	db	63
   184  007F49  00                 	db	0
   185  007F4A  20                 	db	32
   186  007F4B  41                 	db	65
   187  007F4C  00                 	db	0
   188  007F4D  C8                 	db	200
   189  007F4E  42                 	db	66
   190  007F4F  00                 	db	0
   191  007F50  7A                 	db	122
   192  007F51  44                 	db	68
   193  007F52  40                 	db	64
   194  007F53  1C                 	db	28
   195  007F54  46                 	db	70
   196  007F55  50                 	db	80
   197  007F56  C3                 	db	195
   198  007F57  47                 	db	71
   199  007F58  24                 	db	36
   200  007F59  74                 	db	116
   201  007F5A  49                 	db	73
   202  007F5B  97                 	db	151
   203  007F5C  18                 	db	24
   204  007F5D  4B                 	db	75
   205  007F5E  BC                 	db	188
   206  007F5F  BE                 	db	190
   207  007F60  4C                 	db	76
   208  007F61  6B                 	db	107
   209  007F62  6E                 	db	110
   210  007F63  4E                 	db	78
   211  007F64  03                 	db	3
   212  007F65  15                 	db	21
   213  007F66  50                 	db	80
   214  007F67  79                 	db	121
   215  007F68  AD                 	db	173
   216  007F69  60                 	db	96
   217  007F6A  F3                 	db	243
   218  007F6B  49                 	db	73
   219  007F6C  71                 	db	113
   220  007F6D                     __end_of__powers_:
   221                           	opt stack 0
   222  007F6D                     _cal_current:
   223                           	opt stack 0
   224  007F6D  00                 	db	0
   225  007F6E  00                 	db	0
   226  007F6F  3F                 	db	63
   227  007F70  9A                 	db	154
   228  007F71  F9                 	db	249
   229  007F72  40                 	db	64
   230  007F73  DC                 	db	220
   231  007F74  D8                 	db	216
   232  007F75  42                 	db	66
   233  007F76  70                 	db	112
   234  007F77  8A                 	db	138
   235  007F78  45                 	db	69
   236  007F79  C0                 	db	192
   237  007F7A  DA                 	db	218
   238  007F7B  47                 	db	71
   239  007F7C                     __end_of_cal_current:
   240                           	opt stack 0
   241  007F7C                     _R1_BIT:
   242                           	opt stack 0
   243  007F7C  00                 	db	0
   244  007F7D  01                 	db	1
   245  007F7E  02                 	db	2
   246  007F7F  03                 	db	3
   247  007F80  04                 	db	4
   248  007F81                     __end_of_R1_BIT:
   249                           	opt stack 0
   250  007F81                     _RSET_BIT:
   251                           	opt stack 0
   252  007F81  02                 	db	2
   253  007F82  03                 	db	3
   254  007F83  03                 	db	3
   255  007F84  04                 	db	4
   256  007F85  05                 	db	5
   257  007F86                     __end_of_RSET_BIT:
   258                           	opt stack 0
   259  007F86                     STR_2:
   260  007F86  43                 	db	67	;'C'
   261  007F87  61                 	db	97	;'a'
   262  007F88  70                 	db	112	;'p'
   263  007F89  61                 	db	97	;'a'
   264  007F8A  63                 	db	99	;'c'
   265  007F8B  69                 	db	105	;'i'
   266  007F8C  74                 	db	116	;'t'
   267  007F8D  61                 	db	97	;'a'
   268  007F8E  6E                 	db	110	;'n'
   269  007F8F  63                 	db	99	;'c'
   270  007F90  65                 	db	101	;'e'
   271  007F91  3A                 	db	58	;':'
   272  007F92  20                 	db	32
   273  007F93  25                 	db	37
   274  007F94  30                 	db	48	;'0'
   275  007F95  2E                 	db	46
   276  007F96  32                 	db	50	;'2'
   277  007F97  66                 	db	102	;'f'
   278  007F98  20                 	db	32
   279  007F99  70                 	db	112	;'p'
   280  007F9A  46                 	db	70	;'F'
   281  007F9B  20                 	db	32
   282  007F9C  28                 	db	40
   283  007F9D  43                 	db	67	;'C'
   284  007F9E  6F                 	db	111	;'o'
   285  007F9F  75                 	db	117	;'u'
   286  007FA0  6E                 	db	110	;'n'
   287  007FA1  74                 	db	116	;'t'
   288  007FA2  3A                 	db	58	;':'
   289  007FA3  20                 	db	32
   290  007FA4  25                 	db	37
   291  007FA5  75                 	db	117	;'u'
   292  007FA6  29                 	db	41
   293  007FA7  20                 	db	32
   294  007FA8  2D                 	db	45
   295  007FA9  20                 	db	32
   296  007FAA  52                 	db	82	;'R'
   297  007FAB  61                 	db	97	;'a'
   298  007FAC  6E                 	db	110	;'n'
   299  007FAD  67                 	db	103	;'g'
   300  007FAE  65                 	db	101	;'e'
   301  007FAF  3A                 	db	58	;':'
   302  007FB0  20                 	db	32
   303  007FB1  25                 	db	37
   304  007FB2  64                 	db	100	;'d'
   305  007FB3  20                 	db	32
   306  007FB4  28                 	db	40
   307  007FB5  25                 	db	37
   308  007FB6  64                 	db	100	;'d'
   309  007FB7  29                 	db	41
   310  007FB8  0D                 	db	13
   311  007FB9  0A                 	db	10
   312  007FBA  00                 	db	0
   313  007FBB                     STR_1:
   314  007FBB  0D                 	db	13
   315  007FBC  0A                 	db	10
   316  007FBD  53                 	db	83	;'S'
   317  007FBE  65                 	db	101	;'e'
   318  007FBF  74                 	db	116	;'t'
   319  007FC0  74                 	db	116	;'t'
   320  007FC1  69                 	db	105	;'i'
   321  007FC2  6E                 	db	110	;'n'
   322  007FC3  67                 	db	103	;'g'
   323  007FC4  20                 	db	32
   324  007FC5  72                 	db	114	;'r'
   325  007FC6  61                 	db	97	;'a'
   326  007FC7  6E                 	db	110	;'n'
   327  007FC8  67                 	db	103	;'g'
   328  007FC9  65                 	db	101	;'e'
   329  007FCA  20                 	db	32
   330  007FCB  3D                 	db	61	;'='
   331  007FCC  20                 	db	32
   332  007FCD  25                 	db	37
   333  007FCE  64                 	db	100	;'d'
   334  007FCF  0D                 	db	13
   335  007FD0  0A                 	db	10
   336  007FD1  00                 	db	0
   337  007FD2  25                 	db	37
   338  007FD3  6C                 	db	108	;'l'
   339  007FD4  75                 	db	117	;'u'
   340  007FD5  2E                 	db	46
   341  007FD6  25                 	db	37
   342  007FD7  36                 	db	54	;'6'
   343  007FD8  2E                 	db	46
   344  007FD9  36                 	db	54	;'6'
   345  007FDA  6C                 	db	108	;'l'
   346  007FDB  75                 	db	117	;'u'
   347  007FDC  00                 	db	0
   348  007FDD                     STR_4:
   349  007FDD  43                 	db	67	;'C'
   350  007FDE  3D                 	db	61	;'='
   351  007FDF  25                 	db	37
   352  007FE0  31                 	db	49	;'1'
   353  007FE1  32                 	db	50	;'2'
   354  007FE2  2E                 	db	46
   355  007FE3  33                 	db	51	;'3'
   356  007FE4  66                 	db	102	;'f'
   357  007FE5  6E                 	db	110	;'n'
   358  007FE6  46                 	db	70	;'F'
   359  007FE7  00                 	db	0
   360  007FE8                     STR_5:
   361  007FE8  43                 	db	67	;'C'
   362  007FE9  3D                 	db	61	;'='
   363  007FEA  25                 	db	37
   364  007FEB  31                 	db	49	;'1'
   365  007FEC  32                 	db	50	;'2'
   366  007FED  2E                 	db	46
   367  007FEE  30                 	db	48	;'0'
   368  007FEF  66                 	db	102	;'f'
   369  007FF0  70                 	db	112	;'p'
   370  007FF1  46                 	db	70	;'F'
   371  007FF2  00                 	db	0
   372  007FF3                     STR_3:
   373  007FF3  43                 	db	67	;'C'
   374  007FF4  3D                 	db	61	;'='
   375  007FF5  25                 	db	37
   376  007FF6  31                 	db	49	;'1'
   377  007FF7  32                 	db	50	;'2'
   378  007FF8  2E                 	db	46
   379  007FF9  36                 	db	54	;'6'
   380  007FFA  66                 	db	102	;'f'
   381  007FFB  75                 	db	117	;'u'
   382  007FFC  46                 	db	70	;'F'
   383  007FFD  00                 	db	0
   384                           
   385                           ; #config settings
   386  007FFE  00                 	db	0	; dummy byte at the end
   387  0000                     
   388                           	psect	nvCOMRAM
   389  00005C                     __pnvCOMRAM:
   390                           	opt stack 0
   391  00005C                     _timer0ReloadVal:
   392                           	opt stack 0
   393  00005C                     	ds	2
   394                           
   395                           	psect	nvBANK0
   396  0000CE                     __pnvBANK0:
   397                           	opt stack 0
   398  0000CE                     _TMR0_InterruptHandler:
   399                           	opt stack 0
   400  0000CE                     	ds	2
   401  0000                     _ANSELA	set	3896
   402  0000                     _ANSELB	set	3897
   403  0000                     _ANSELC	set	3898
   404  0000                     _BAUDCON1	set	4024
   405  0000                     _INTCON2bits	set	4081
   406  0000                     _INTCON3bits	set	4080
   407  0000                     _INTCONbits	set	4082
   408  0000                     _LATA	set	3977
   409  0000                     _LATAbits	set	3977
   410  0000                     _LATB	set	3978
   411  0000                     _LATC	set	3979
   412  0000                     _LATCbits	set	3979
   413  0000                     _OSCCON	set	4051
   414  0000                     _OSCCON2	set	4050
   415  0000                     _OSCTUNE	set	3995
   416  0000                     _PIR1bits	set	3998
   417  0000                     _RCONbits	set	4048
   418  0000                     _RCREG1	set	4014
   419  0000                     _RCSTA1	set	4011
   420  0000                     _RCSTA1bits	set	4011
   421  0000                     _SPBRG1	set	4015
   422  0000                     _SPBRGH1	set	4016
   423  0000                     _T0CON	set	4053
   424  0000                     _T0CONbits	set	4053
   425  0000                     _TMR0H	set	4055
   426  0000                     _TMR0L	set	4054
   427  0000                     _TRISA	set	3986
   428  0000                     _TRISB	set	3987
   429  0000                     _TRISC	set	3988
   430  0000                     _TXREG1	set	4013
   431  0000                     _TXSTA1	set	4012
   432  0000                     _WPUB	set	3937
   433                           
   434                           	psect	cinit
   435  0051A2                     __pcinit:
   436                           	opt stack 0
   437  0051A2                     start_initialization:
   438                           	opt stack 0
   439  0051A2                     __initialization:
   440                           	opt stack 0
   441                           
   442                           ; Initialize objects allocated to BANK0 (4 bytes)
   443                           ; load TBLPTR registers with __pidataBANK0
   444  0051A2  0E1A               	movlw	low __pidataBANK0
   445  0051A4  6EF6               	movwf	tblptrl,c
   446  0051A6  0E55               	movlw	high __pidataBANK0
   447  0051A8  6EF7               	movwf	tblptrh,c
   448  0051AA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   449  0051AC  6EF8               	movwf	tblptru,c
   450  0051AE  EE00  F0CA         	lfsr	0,__pdataBANK0
   451  0051B2  EE10 F004          	lfsr	1,4
   452  0051B6                     copy_data0:
   453  0051B6  0009               	tblrd		*+
   454  0051B8  CFF5 FFEE          	movff	tablat,postinc0
   455  0051BC  50E5               	movf	postdec1,w,c
   456  0051BE  50E1               	movf	fsr1l,w,c
   457  0051C0  E1FA               	bnz	copy_data0
   458                           
   459                           ; Clear objects allocated to BANK0 (20 bytes)
   460  0051C2  EE00  F0B6         	lfsr	0,__pbssBANK0
   461  0051C6  0E14               	movlw	20
   462  0051C8                     clear_0:
   463  0051C8  6AEE               	clrf	postinc0,c
   464  0051CA  06E8               	decf	wreg,f,c
   465  0051CC  E1FD               	bnz	clear_0
   466                           
   467                           ; Clear objects allocated to COMRAM (4 bytes)
   468  0051CE  6A5B               	clrf	(__pbssCOMRAM+3)& (0+255),c
   469  0051D0  6A5A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   470  0051D2  6A59               	clrf	(__pbssCOMRAM+1)& (0+255),c
   471  0051D4  6A58               	clrf	__pbssCOMRAM& (0+255),c
   472  0051D6                     end_of_initialization:
   473                           	opt stack 0
   474  0051D6                     __end_of__initialization:
   475                           	opt stack 0
   476  0051D6  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   477  0051D8  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   478  0051DA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   479  0051DC  6EF8               	movwf	tblptru,c
   480  0051DE  0100               	movlb	0
   481  0051E0  EF7B  F01D         	goto	_main	;jump to C main() function
   482                           tblptru	equ	0xFF8
   483                           tblptrh	equ	0xFF7
   484                           tblptrl	equ	0xFF6
   485                           tablat	equ	0xFF5
   486                           postinc0	equ	0xFEE
   487                           wreg	equ	0xFE8
   488                           postdec1	equ	0xFE5
   489                           fsr1l	equ	0xFE1
   490                           
   491                           	psect	bssCOMRAM
   492  000058                     __pbssCOMRAM:
   493                           	opt stack 0
   494  000058                     _result:
   495                           	opt stack 0
   496  000058                     	ds	3
   497  00005B                     _cal_mode:
   498                           	opt stack 0
   499  00005B                     	ds	1
   500                           tblptru	equ	0xFF8
   501                           tblptrh	equ	0xFF7
   502                           tblptrl	equ	0xFF6
   503                           tablat	equ	0xFF5
   504                           postinc0	equ	0xFEE
   505                           wreg	equ	0xFE8
   506                           postdec1	equ	0xFE5
   507                           fsr1l	equ	0xFE1
   508                           
   509                           	psect	bssBANK0
   510  0000B6                     __pbssBANK0:
   511                           	opt stack 0
   512  0000B6                     _reading:
   513                           	opt stack 0
   514  0000B6                     	ds	2
   515  0000B8                     _stored_range:
   516                           	opt stack 0
   517  0000B8                     	ds	1
   518  0000B9                     ftoa@buf:
   519                           	opt stack 0
   520  0000B9                     	ds	17
   521                           tblptru	equ	0xFF8
   522                           tblptrh	equ	0xFF7
   523                           tblptrl	equ	0xFF6
   524                           tablat	equ	0xFF5
   525                           postinc0	equ	0xFEE
   526                           wreg	equ	0xFE8
   527                           postdec1	equ	0xFE5
   528                           fsr1l	equ	0xFE1
   529                           
   530                           	psect	dataBANK0
   531  0000CA                     __pdataBANK0:
   532                           	opt stack 0
   533  0000CA                     _units:
   534                           	opt stack 0
   535  0000CA                     	ds	2
   536  0000CC                     _auto_range:
   537                           	opt stack 0
   538  0000CC                     	ds	1
   539  0000CD                     _range:
   540                           	opt stack 0
   541  0000CD                     	ds	1
   542                           tblptru	equ	0xFF8
   543                           tblptrh	equ	0xFF7
   544                           tblptrl	equ	0xFF6
   545                           tablat	equ	0xFF5
   546                           postinc0	equ	0xFEE
   547                           wreg	equ	0xFE8
   548                           postdec1	equ	0xFE5
   549                           fsr1l	equ	0xFE1
   550                           
   551                           	psect	cstackBANK1
   552  000100                     __pcstackBANK1:
   553                           	opt stack 0
   554  000100                     _fround$1743:
   555                           	opt stack 0
   556  000100                     _scale$1744:
   557                           	opt stack 0
   558                           
   559                           ; 3 bytes @ 0x0
   560  000100                     	ds	3
   561  000103                     scale@scl:
   562                           	opt stack 0
   563  000103                     _fround$1742:
   564                           	opt stack 0
   565                           
   566                           ; 3 bytes @ 0x3
   567  000103                     	ds	1
   568  000104                     ?___fttol:
   569                           	opt stack 0
   570  000104                     ___fttol@f1:
   571                           	opt stack 0
   572                           
   573                           ; 3 bytes @ 0x4
   574  000104                     	ds	2
   575  000106                     fround@prec:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x6
   579  000106                     	ds	1
   580  000107                     ?___ftadd:
   581                           	opt stack 0
   582  000107                     ___ftadd@f1:
   583                           	opt stack 0
   584                           
   585                           ; 3 bytes @ 0x7
   586  000107                     	ds	1
   587  000108                     ??___fttol:
   588                           
   589                           ; 1 bytes @ 0x8
   590  000108                     	ds	2
   591  00010A                     ___ftadd@f2:
   592                           	opt stack 0
   593                           
   594                           ; 3 bytes @ 0xA
   595  00010A                     	ds	3
   596  00010D                     ??___ftadd:
   597  00010D                     ___fttol@sign1:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0xD
   601  00010D                     	ds	1
   602  00010E                     ___fttol@lval:
   603                           	opt stack 0
   604                           
   605                           ; 4 bytes @ 0xE
   606  00010E                     	ds	2
   607  000110                     ___ftadd@sign:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0x10
   611  000110                     	ds	1
   612  000111                     ___ftadd@exp2:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0x11
   616  000111                     	ds	1
   617  000112                     ___ftadd@exp1:
   618                           	opt stack 0
   619  000112                     ___fttol@exp1:
   620                           	opt stack 0
   621                           
   622                           ; 1 bytes @ 0x12
   623  000112                     	ds	1
   624  000113                     ?___ftsub:
   625                           	opt stack 0
   626  000113                     ___ftsub@f1:
   627                           	opt stack 0
   628                           
   629                           ; 3 bytes @ 0x13
   630  000113                     	ds	3
   631  000116                     ___ftsub@f2:
   632                           	opt stack 0
   633                           
   634                           ; 3 bytes @ 0x16
   635  000116                     	ds	3
   636  000119                     ?__doprnt:
   637                           	opt stack 0
   638  000119                     __doprnt@pb:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0x19
   642  000119                     	ds	2
   643  00011B                     __doprnt@f:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0x1B
   647  00011B                     	ds	2
   648  00011D                     __doprnt@ap:
   649                           	opt stack 0
   650                           
   651                           ; 2 bytes @ 0x1D
   652  00011D                     	ds	2
   653  00011F                     ??__doprnt:
   654                           
   655                           ; 1 bytes @ 0x1F
   656  00011F                     	ds	6
   657  000125                     __doprnt$1745:
   658                           	opt stack 0
   659                           
   660                           ; 3 bytes @ 0x25
   661  000125                     	ds	3
   662  000128                     __doprnt@exp:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0x28
   666  000128                     	ds	2
   667  00012A                     __doprnt@val:
   668                           	opt stack 0
   669                           
   670                           ; 4 bytes @ 0x2A
   671  00012A                     	ds	4
   672  00012E                     __doprnt@tmpval:
   673                           	opt stack 0
   674                           
   675                           ; 4 bytes @ 0x2E
   676  00012E                     	ds	4
   677  000132                     __doprnt@width:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0x32
   681  000132                     	ds	2
   682  000134                     __doprnt@fval:
   683                           	opt stack 0
   684                           
   685                           ; 3 bytes @ 0x34
   686  000134                     	ds	3
   687  000137                     __doprnt@flag:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0x37
   691  000137                     	ds	2
   692  000139                     __doprnt@prec:
   693                           	opt stack 0
   694                           
   695                           ; 2 bytes @ 0x39
   696  000139                     	ds	2
   697  00013B                     __doprnt@c:
   698                           	opt stack 0
   699                           
   700                           ; 1 bytes @ 0x3B
   701  00013B                     	ds	1
   702  00013C                     ?_sprintf:
   703                           	opt stack 0
   704  00013C                     sprintf@wh:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x3C
   708  00013C                     	ds	2
   709  00013E                     sprintf@f:
   710                           	opt stack 0
   711                           
   712                           ; 2 bytes @ 0x3E
   713  00013E                     	ds	5
   714  000143                     sprintf@ap:
   715                           	opt stack 0
   716                           
   717                           ; 2 bytes @ 0x43
   718  000143                     	ds	2
   719  000145                     sprintf@pb:
   720                           	opt stack 0
   721                           
   722                           ; 4 bytes @ 0x45
   723  000145                     	ds	4
   724  000149                     main@cap_string:
   725                           	opt stack 0
   726                           
   727                           ; 16 bytes @ 0x49
   728  000149                     	ds	16
   729                           tblptru	equ	0xFF8
   730                           tblptrh	equ	0xFF7
   731                           tblptrl	equ	0xFF6
   732                           tablat	equ	0xFF5
   733                           postinc0	equ	0xFEE
   734                           wreg	equ	0xFE8
   735                           postdec1	equ	0xFE5
   736                           fsr1l	equ	0xFE1
   737                           
   738                           	psect	cstackBANK0
   739  000060                     __pcstackBANK0:
   740                           	opt stack 0
   741  000060                     i2__doprnt$1927:
   742                           	opt stack 0
   743                           
   744                           ; 3 bytes @ 0x0
   745  000060                     	ds	3
   746  000063                     i2__doprnt@exp:
   747                           	opt stack 0
   748                           
   749                           ; 2 bytes @ 0x3
   750  000063                     	ds	2
   751  000065                     i2__doprnt@val:
   752                           	opt stack 0
   753                           
   754                           ; 4 bytes @ 0x5
   755  000065                     	ds	4
   756  000069                     i2__doprnt@tmpval:
   757                           	opt stack 0
   758                           
   759                           ; 4 bytes @ 0x9
   760  000069                     	ds	4
   761  00006D                     i2__doprnt@fval:
   762                           	opt stack 0
   763                           
   764                           ; 3 bytes @ 0xD
   765  00006D                     	ds	3
   766  000070                     i2__doprnt@width:
   767                           	opt stack 0
   768                           
   769                           ; 2 bytes @ 0x10
   770  000070                     	ds	2
   771  000072                     i2__doprnt@flag:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0x12
   775  000072                     	ds	2
   776  000074                     i2__doprnt@prec:
   777                           	opt stack 0
   778                           
   779                           ; 2 bytes @ 0x14
   780  000074                     	ds	2
   781  000076                     i2__doprnt@c:
   782                           	opt stack 0
   783                           
   784                           ; 1 bytes @ 0x16
   785  000076                     	ds	1
   786  000077                     ?_printf:
   787                           	opt stack 0
   788  000077                     printf@f:
   789                           	opt stack 0
   790                           
   791                           ; 2 bytes @ 0x17
   792  000077                     	ds	11
   793  000082                     ??_INTERRUPT_InterruptManager:
   794                           
   795                           ; 1 bytes @ 0x22
   796  000082                     	ds	14
   797  000090                     ??_isdigit:
   798  000090                     ?___awmod:
   799                           	opt stack 0
   800  000090                     ?___ftpack:
   801                           	opt stack 0
   802  000090                     ?___ftneg:
   803                           	opt stack 0
   804  000090                     ?__tdiv_to_l_:
   805                           	opt stack 0
   806  000090                     ?__div_to_l_:
   807                           	opt stack 0
   808  000090                     ?___lldiv:
   809                           	opt stack 0
   810  000090                     EUSART1_Write@txData:
   811                           	opt stack 0
   812  000090                     __lcd_Port@a:
   813                           	opt stack 0
   814  000090                     TMR0_SetInterruptHandler@InterruptHandler:
   815                           	opt stack 0
   816  000090                     ___awmod@dividend:
   817                           	opt stack 0
   818  000090                     __div_to_l_@f1:
   819                           	opt stack 0
   820  000090                     ___ftpack@arg:
   821                           	opt stack 0
   822  000090                     __tdiv_to_l_@f1:
   823                           	opt stack 0
   824  000090                     ___ftge@ff1:
   825                           	opt stack 0
   826  000090                     ___ftneg@f1:
   827                           	opt stack 0
   828  000090                     ___lldiv@dividend:
   829                           	opt stack 0
   830                           
   831                           ; 4 bytes @ 0x30
   832  000090                     	ds	1
   833  000091                     ??_lcd_sendCommand:
   834  000091                     putch@txData:
   835                           	opt stack 0
   836  000091                     lcd_sendChar@temp:
   837                           	opt stack 0
   838  000091                     _isdigit$1291:
   839                           	opt stack 0
   840                           
   841                           ; 1 bytes @ 0x31
   842  000091                     	ds	1
   843  000092                     ??_TMR0_Initialize:
   844  000092                     lcd_sendCommand@a:
   845                           	opt stack 0
   846  000092                     lcd_sendChar@y:
   847                           	opt stack 0
   848  000092                     isdigit@c:
   849                           	opt stack 0
   850  000092                     ___awmod@divisor:
   851                           	opt stack 0
   852                           
   853                           ; 2 bytes @ 0x32
   854  000092                     	ds	1
   855  000093                     ??_lcd_init:
   856  000093                     lcd_sendChar@a:
   857                           	opt stack 0
   858  000093                     ___ftpack@exp:
   859                           	opt stack 0
   860  000093                     __div_to_l_@f2:
   861                           	opt stack 0
   862  000093                     __tdiv_to_l_@f2:
   863                           	opt stack 0
   864  000093                     ___ftge@ff2:
   865                           	opt stack 0
   866                           
   867                           ; 3 bytes @ 0x33
   868  000093                     	ds	1
   869  000094                     ___awmod@counter:
   870                           	opt stack 0
   871  000094                     ___ftpack@sign:
   872                           	opt stack 0
   873  000094                     lcd_sendString@a:
   874                           	opt stack 0
   875  000094                     ___lldiv@divisor:
   876                           	opt stack 0
   877                           
   878                           ; 4 bytes @ 0x34
   879  000094                     	ds	1
   880  000095                     ??___ftpack:
   881  000095                     ___awmod@sign:
   882                           	opt stack 0
   883                           
   884                           ; 1 bytes @ 0x35
   885  000095                     	ds	1
   886  000096                     ??__tdiv_to_l_:
   887  000096                     ??___ftge:
   888  000096                     ?___awdiv:
   889                           	opt stack 0
   890  000096                     lcd_sendString@i:
   891                           	opt stack 0
   892  000096                     ___awdiv@dividend:
   893                           	opt stack 0
   894  000096                     __div_to_l_@quot:
   895                           	opt stack 0
   896                           
   897                           ; 4 bytes @ 0x36
   898  000096                     	ds	2
   899  000098                     ?___ftdiv:
   900                           	opt stack 0
   901  000098                     ?___lltoft:
   902                           	opt stack 0
   903  000098                     ___awdiv@divisor:
   904                           	opt stack 0
   905  000098                     ___ftdiv@f1:
   906                           	opt stack 0
   907  000098                     ___lldiv@quotient:
   908                           	opt stack 0
   909  000098                     ___lltoft@c:
   910                           	opt stack 0
   911                           
   912                           ; 4 bytes @ 0x38
   913  000098                     	ds	1
   914  000099                     __tdiv_to_l_@quot:
   915                           	opt stack 0
   916                           
   917                           ; 4 bytes @ 0x39
   918  000099                     	ds	1
   919  00009A                     ___awdiv@counter:
   920                           	opt stack 0
   921  00009A                     __div_to_l_@cntr:
   922                           	opt stack 0
   923                           
   924                           ; 1 bytes @ 0x3A
   925  00009A                     	ds	1
   926  00009B                     ___awdiv@sign:
   927                           	opt stack 0
   928  00009B                     __div_to_l_@exp1:
   929                           	opt stack 0
   930  00009B                     ___ftdiv@f2:
   931                           	opt stack 0
   932                           
   933                           ; 3 bytes @ 0x3B
   934  00009B                     	ds	1
   935  00009C                     ??___lltoft:
   936  00009C                     ___lldiv@counter:
   937                           	opt stack 0
   938  00009C                     ___awdiv@quotient:
   939                           	opt stack 0
   940                           
   941                           ; 2 bytes @ 0x3C
   942  00009C                     	ds	1
   943  00009D                     ?___llmod:
   944                           	opt stack 0
   945  00009D                     __tdiv_to_l_@cntr:
   946                           	opt stack 0
   947  00009D                     ___llmod@dividend:
   948                           	opt stack 0
   949                           
   950                           ; 4 bytes @ 0x3D
   951  00009D                     	ds	1
   952  00009E                     ??___ftdiv:
   953  00009E                     ?___wmul:
   954                           	opt stack 0
   955  00009E                     __tdiv_to_l_@exp1:
   956                           	opt stack 0
   957  00009E                     ___wmul@multiplier:
   958                           	opt stack 0
   959                           
   960                           ; 2 bytes @ 0x3E
   961  00009E                     	ds	2
   962  0000A0                     ___lltoft@exp:
   963                           	opt stack 0
   964  0000A0                     ___wmul@multiplicand:
   965                           	opt stack 0
   966                           
   967                           ; 2 bytes @ 0x40
   968  0000A0                     	ds	1
   969  0000A1                     ___ftdiv@cntr:
   970                           	opt stack 0
   971  0000A1                     ___llmod@divisor:
   972                           	opt stack 0
   973                           
   974                           ; 4 bytes @ 0x41
   975  0000A1                     	ds	1
   976  0000A2                     ___wmul@product:
   977                           	opt stack 0
   978  0000A2                     ___ftdiv@f3:
   979                           	opt stack 0
   980                           
   981                           ; 3 bytes @ 0x42
   982  0000A2                     	ds	2
   983  0000A4                     ?___ftmul:
   984                           	opt stack 0
   985  0000A4                     ___ftmul@f1:
   986                           	opt stack 0
   987                           
   988                           ; 3 bytes @ 0x44
   989  0000A4                     	ds	1
   990  0000A5                     ___ftdiv@exp:
   991                           	opt stack 0
   992  0000A5                     ___llmod@counter:
   993                           	opt stack 0
   994                           
   995                           ; 1 bytes @ 0x45
   996  0000A5                     	ds	1
   997  0000A6                     ___ftdiv@sign:
   998                           	opt stack 0
   999                           
  1000                           ; 1 bytes @ 0x46
  1001  0000A6                     	ds	1
  1002  0000A7                     ___ftmul@f2:
  1003                           	opt stack 0
  1004                           
  1005                           ; 3 bytes @ 0x47
  1006  0000A7                     	ds	3
  1007  0000AA                     ??___ftmul:
  1008                           
  1009                           ; 1 bytes @ 0x4A
  1010  0000AA                     	ds	3
  1011  0000AD                     ___ftmul@exp:
  1012                           	opt stack 0
  1013                           
  1014                           ; 1 bytes @ 0x4D
  1015  0000AD                     	ds	1
  1016  0000AE                     ___ftmul@f3_as_product:
  1017                           	opt stack 0
  1018                           
  1019                           ; 3 bytes @ 0x4E
  1020  0000AE                     	ds	3
  1021  0000B1                     ___ftmul@cntr:
  1022                           	opt stack 0
  1023                           
  1024                           ; 1 bytes @ 0x51
  1025  0000B1                     	ds	1
  1026  0000B2                     ___ftmul@sign:
  1027                           	opt stack 0
  1028                           
  1029                           ; 1 bytes @ 0x52
  1030  0000B2                     	ds	1
  1031  0000B3                     ?_fround:
  1032                           	opt stack 0
  1033  0000B3                     ?_scale:
  1034                           	opt stack 0
  1035                           
  1036                           ; 3 bytes @ 0x53
  1037  0000B3                     	ds	3
  1038  0000B6                     tblptru	equ	0xFF8
  1039                           tblptrh	equ	0xFF7
  1040                           tblptrl	equ	0xFF6
  1041                           tablat	equ	0xFF5
  1042                           postinc0	equ	0xFEE
  1043                           wreg	equ	0xFE8
  1044                           postdec1	equ	0xFE5
  1045                           fsr1l	equ	0xFE1
  1046                           
  1047                           ; 1 bytes @ 0x56
  1048                           
  1049                           	psect	cstackCOMRAM
  1050  000001                     __pcstackCOMRAM:
  1051                           	opt stack 0
  1052  000001                     ??_SetRange:
  1053  000001                     ??i2_isdigit:
  1054  000001                     ?_TMR0_ReadTimer:
  1055                           	opt stack 0
  1056  000001                     ?i2___awmod:
  1057                           	opt stack 0
  1058  000001                     ?i2___ftpack:
  1059                           	opt stack 0
  1060  000001                     ?i2___ftneg:
  1061                           	opt stack 0
  1062  000001                     ?i2__div_to_l_:
  1063                           	opt stack 0
  1064  000001                     ?i2__tdiv_to_l_:
  1065                           	opt stack 0
  1066  000001                     ?i2___lldiv:
  1067                           	opt stack 0
  1068  000001                     i2EUSART1_Write@txData:
  1069                           	opt stack 0
  1070  000001                     i2___awmod@dividend:
  1071                           	opt stack 0
  1072  000001                     i2__div_to_l_@f1:
  1073                           	opt stack 0
  1074  000001                     i2___ftpack@arg:
  1075                           	opt stack 0
  1076  000001                     i2__tdiv_to_l_@f1:
  1077                           	opt stack 0
  1078  000001                     i2___ftge@ff1:
  1079                           	opt stack 0
  1080  000001                     i2___ftneg@f1:
  1081                           	opt stack 0
  1082  000001                     i2___lldiv@dividend:
  1083                           	opt stack 0
  1084                           
  1085                           ; 4 bytes @ 0x0
  1086  000001                     	ds	1
  1087  000002                     i2putch@txData:
  1088                           	opt stack 0
  1089  000002                     i2_isdigit$1291:
  1090                           	opt stack 0
  1091                           
  1092                           ; 1 bytes @ 0x1
  1093  000002                     	ds	1
  1094  000003                     ??_TMR0_ReadTimer:
  1095  000003                     i2isdigit@c:
  1096                           	opt stack 0
  1097  000003                     i2___awmod@divisor:
  1098                           	opt stack 0
  1099                           
  1100                           ; 2 bytes @ 0x2
  1101  000003                     	ds	1
  1102  000004                     i2___ftpack@exp:
  1103                           	opt stack 0
  1104  000004                     i2__div_to_l_@f2:
  1105                           	opt stack 0
  1106  000004                     i2__tdiv_to_l_@f2:
  1107                           	opt stack 0
  1108  000004                     i2___ftge@ff2:
  1109                           	opt stack 0
  1110                           
  1111                           ; 3 bytes @ 0x3
  1112  000004                     	ds	1
  1113  000005                     i2___awmod@counter:
  1114                           	opt stack 0
  1115  000005                     i2___ftpack@sign:
  1116                           	opt stack 0
  1117  000005                     i2___lldiv@divisor:
  1118                           	opt stack 0
  1119                           
  1120                           ; 4 bytes @ 0x4
  1121  000005                     	ds	1
  1122  000006                     ??i2___ftpack:
  1123  000006                     i2___awmod@sign:
  1124                           	opt stack 0
  1125                           
  1126                           ; 1 bytes @ 0x5
  1127  000006                     	ds	1
  1128  000007                     ??i2__tdiv_to_l_:
  1129  000007                     ??i2___ftge:
  1130  000007                     ?i2___awdiv:
  1131                           	opt stack 0
  1132  000007                     TMR0_ReadTimer@readVal:
  1133                           	opt stack 0
  1134  000007                     i2___awdiv@dividend:
  1135                           	opt stack 0
  1136  000007                     i2__div_to_l_@quot:
  1137                           	opt stack 0
  1138                           
  1139                           ; 4 bytes @ 0x6
  1140  000007                     	ds	2
  1141  000009                     ?___lwtoft:
  1142                           	opt stack 0
  1143  000009                     ?i2___lltoft:
  1144                           	opt stack 0
  1145  000009                     TMR0_ReadTimer@readValLow:
  1146                           	opt stack 0
  1147  000009                     ___lwtoft@c:
  1148                           	opt stack 0
  1149  000009                     i2___awdiv@divisor:
  1150                           	opt stack 0
  1151  000009                     i2___lldiv@quotient:
  1152                           	opt stack 0
  1153  000009                     i2___lltoft@c:
  1154                           	opt stack 0
  1155                           
  1156                           ; 4 bytes @ 0x8
  1157  000009                     	ds	1
  1158  00000A                     TMR0_ReadTimer@readValHigh:
  1159                           	opt stack 0
  1160  00000A                     i2__tdiv_to_l_@quot:
  1161                           	opt stack 0
  1162                           
  1163                           ; 4 bytes @ 0x9
  1164  00000A                     	ds	1
  1165  00000B                     SetRange@new_range:
  1166                           	opt stack 0
  1167  00000B                     i2___awdiv@counter:
  1168                           	opt stack 0
  1169  00000B                     i2__div_to_l_@cntr:
  1170                           	opt stack 0
  1171                           
  1172                           ; 1 bytes @ 0xA
  1173  00000B                     	ds	1
  1174  00000C                     ??_TMR0_DefaultInterruptHandler:
  1175  00000C                     i2___awdiv@sign:
  1176                           	opt stack 0
  1177  00000C                     i2__div_to_l_@exp1:
  1178                           	opt stack 0
  1179                           
  1180                           ; 1 bytes @ 0xB
  1181  00000C                     	ds	1
  1182  00000D                     ??i2___lltoft:
  1183  00000D                     i2___lldiv@counter:
  1184                           	opt stack 0
  1185  00000D                     i2___awdiv@quotient:
  1186                           	opt stack 0
  1187                           
  1188                           ; 2 bytes @ 0xC
  1189  00000D                     	ds	1
  1190  00000E                     ?i2___llmod:
  1191                           	opt stack 0
  1192  00000E                     i2__tdiv_to_l_@cntr:
  1193                           	opt stack 0
  1194  00000E                     i2___llmod@dividend:
  1195                           	opt stack 0
  1196                           
  1197                           ; 4 bytes @ 0xD
  1198  00000E                     	ds	1
  1199  00000F                     ?i2___wmul:
  1200                           	opt stack 0
  1201  00000F                     i2__tdiv_to_l_@exp1:
  1202                           	opt stack 0
  1203  00000F                     i2___wmul@multiplier:
  1204                           	opt stack 0
  1205                           
  1206                           ; 2 bytes @ 0xE
  1207  00000F                     	ds	2
  1208  000011                     i2___lltoft@exp:
  1209                           	opt stack 0
  1210  000011                     i2___wmul@multiplicand:
  1211                           	opt stack 0
  1212                           
  1213                           ; 2 bytes @ 0x10
  1214  000011                     	ds	1
  1215  000012                     i2___llmod@divisor:
  1216                           	opt stack 0
  1217                           
  1218                           ; 4 bytes @ 0x11
  1219  000012                     	ds	1
  1220  000013                     i2___wmul@product:
  1221                           	opt stack 0
  1222                           
  1223                           ; 2 bytes @ 0x12
  1224  000013                     	ds	2
  1225  000015                     ?i2___ftadd:
  1226                           	opt stack 0
  1227  000015                     i2___ftadd@f1:
  1228                           	opt stack 0
  1229                           
  1230                           ; 3 bytes @ 0x14
  1231  000015                     	ds	1
  1232  000016                     i2___llmod@counter:
  1233                           	opt stack 0
  1234                           
  1235                           ; 1 bytes @ 0x15
  1236  000016                     	ds	2
  1237  000018                     i2___ftadd@f2:
  1238                           	opt stack 0
  1239                           
  1240                           ; 3 bytes @ 0x17
  1241  000018                     	ds	3
  1242  00001B                     ??i2___ftadd:
  1243                           
  1244                           ; 1 bytes @ 0x1A
  1245  00001B                     	ds	3
  1246  00001E                     i2___ftadd@sign:
  1247                           	opt stack 0
  1248                           
  1249                           ; 1 bytes @ 0x1D
  1250  00001E                     	ds	1
  1251  00001F                     i2___ftadd@exp2:
  1252                           	opt stack 0
  1253                           
  1254                           ; 1 bytes @ 0x1E
  1255  00001F                     	ds	1
  1256  000020                     i2___ftadd@exp1:
  1257                           	opt stack 0
  1258                           
  1259                           ; 1 bytes @ 0x1F
  1260  000020                     	ds	1
  1261  000021                     ?i2___ftmul:
  1262                           	opt stack 0
  1263  000021                     ?i2___ftsub:
  1264                           	opt stack 0
  1265  000021                     i2___ftmul@f1:
  1266                           	opt stack 0
  1267  000021                     i2___ftsub@f1:
  1268                           	opt stack 0
  1269                           
  1270                           ; 3 bytes @ 0x20
  1271  000021                     	ds	3
  1272  000024                     i2___ftmul@f2:
  1273                           	opt stack 0
  1274  000024                     i2___ftsub@f2:
  1275                           	opt stack 0
  1276                           
  1277                           ; 3 bytes @ 0x23
  1278  000024                     	ds	3
  1279  000027                     ??i2___ftmul:
  1280  000027                     
  1281                           ; 1 bytes @ 0x26
  1282  000027                     	ds	3
  1283  00002A                     i2___ftmul@exp:
  1284                           	opt stack 0
  1285                           
  1286                           ; 1 bytes @ 0x29
  1287  00002A                     	ds	1
  1288  00002B                     i2___ftmul@f3_as_product:
  1289                           	opt stack 0
  1290                           
  1291                           ; 3 bytes @ 0x2A
  1292  00002B                     	ds	3
  1293  00002E                     i2___ftmul@cntr:
  1294                           	opt stack 0
  1295                           
  1296                           ; 1 bytes @ 0x2D
  1297  00002E                     	ds	1
  1298  00002F                     i2___ftmul@sign:
  1299                           	opt stack 0
  1300                           
  1301                           ; 1 bytes @ 0x2E
  1302  00002F                     	ds	1
  1303  000030                     ?i2_fround:
  1304                           	opt stack 0
  1305  000030                     ?i2_scale:
  1306                           	opt stack 0
  1307  000030                     ?i2___ftdiv:
  1308                           	opt stack 0
  1309  000030                     i2___ftdiv@f1:
  1310                           	opt stack 0
  1311                           
  1312                           ; 3 bytes @ 0x2F
  1313  000030                     	ds	3
  1314  000033                     i2___ftdiv@f2:
  1315                           	opt stack 0
  1316  000033                     i2_fround$1925:
  1317                           	opt stack 0
  1318  000033                     i2_scale$1926:
  1319                           	opt stack 0
  1320                           
  1321                           ; 3 bytes @ 0x32
  1322  000033                     	ds	3
  1323  000036                     ??i2___ftdiv:
  1324  000036                     i2scale@scl:
  1325                           	opt stack 0
  1326  000036                     i2_fround$1924:
  1327                           	opt stack 0
  1328                           
  1329                           ; 3 bytes @ 0x35
  1330  000036                     	ds	1
  1331  000037                     ?i2___fttol:
  1332                           	opt stack 0
  1333  000037                     i2___fttol@f1:
  1334                           	opt stack 0
  1335                           
  1336                           ; 3 bytes @ 0x36
  1337  000037                     	ds	2
  1338  000039                     i2fround@prec:
  1339                           	opt stack 0
  1340  000039                     i2___ftdiv@cntr:
  1341                           	opt stack 0
  1342                           
  1343                           ; 1 bytes @ 0x38
  1344  000039                     	ds	1
  1345  00003A                     i2___ftdiv@f3:
  1346                           	opt stack 0
  1347                           
  1348                           ; 3 bytes @ 0x39
  1349  00003A                     	ds	1
  1350  00003B                     ??i2___fttol:
  1351                           
  1352                           ; 1 bytes @ 0x3A
  1353  00003B                     	ds	2
  1354  00003D                     i2___ftdiv@exp:
  1355                           	opt stack 0
  1356                           
  1357                           ; 1 bytes @ 0x3C
  1358  00003D                     	ds	1
  1359  00003E                     i2___ftdiv@sign:
  1360                           	opt stack 0
  1361                           
  1362                           ; 1 bytes @ 0x3D
  1363  00003E                     	ds	2
  1364  000040                     i2___fttol@sign1:
  1365                           	opt stack 0
  1366                           
  1367                           ; 1 bytes @ 0x3F
  1368  000040                     	ds	1
  1369  000041                     i2___fttol@lval:
  1370                           	opt stack 0
  1371                           
  1372                           ; 4 bytes @ 0x40
  1373  000041                     	ds	4
  1374  000045                     i2___fttol@exp1:
  1375                           	opt stack 0
  1376                           
  1377                           ; 1 bytes @ 0x44
  1378  000045                     	ds	1
  1379  000046                     ?i2__doprnt:
  1380                           	opt stack 0
  1381  000046                     i2__doprnt@pb:
  1382                           	opt stack 0
  1383                           
  1384                           ; 2 bytes @ 0x45
  1385  000046                     	ds	2
  1386  000048                     i2__doprnt@f:
  1387                           	opt stack 0
  1388                           
  1389                           ; 2 bytes @ 0x47
  1390  000048                     	ds	2
  1391  00004A                     i2__doprnt@ap:
  1392                           	opt stack 0
  1393                           
  1394                           ; 2 bytes @ 0x49
  1395  00004A                     	ds	2
  1396  00004C                     ??i2__doprnt:
  1397                           
  1398                           ; 1 bytes @ 0x4B
  1399  00004C                     	ds	6
  1400  000052                     printf@ap:
  1401                           	opt stack 0
  1402                           
  1403                           ; 2 bytes @ 0x51
  1404  000052                     	ds	2
  1405  000054                     printf@pb:
  1406                           	opt stack 0
  1407                           
  1408                           ; 4 bytes @ 0x53
  1409  000054                     	ds	4
  1410  000058                     tblptru	equ	0xFF8
  1411                           tblptrh	equ	0xFF7
  1412                           tblptrl	equ	0xFF6
  1413                           tablat	equ	0xFF5
  1414                           postinc0	equ	0xFEE
  1415                           wreg	equ	0xFE8
  1416                           postdec1	equ	0xFE5
  1417                           fsr1l	equ	0xFE1
  1418                           
  1419                           ; 1 bytes @ 0x57
  1420 ;;
  1421 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1422 ;;
  1423 ;; *************** function _main *****************
  1424 ;; Defined at:
  1425 ;;		line 8 in file "main.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;		None
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;  cap_string     16   73[BANK1 ] unsigned char [16]
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      void 
  1432 ;; Registers used:
  1433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1439 ;;      Params:         0       0       0       0       0       0       0
  1440 ;;      Locals:         0       0      16       0       0       0       0
  1441 ;;      Temps:          0       0       0       0       0       0       0
  1442 ;;      Totals:         0       0      16       0       0       0       0
  1443 ;;Total ram usage:       16 bytes
  1444 ;; Hardware stack levels required when called:   12
  1445 ;; This function calls:
  1446 ;;		_SYSTEM_Initialize
  1447 ;;		___ftdiv
  1448 ;;		___ftge
  1449 ;;		_lcd_clear
  1450 ;;		_lcd_init
  1451 ;;		_lcd_sendString
  1452 ;;		_sprintf
  1453 ;; This function is called by:
  1454 ;;		Startup code after reset
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text0
  1459  003AF6                     __ptext0:
  1460                           	opt stack 0
  1461  003AF6                     _main:
  1462                           	opt stack 19
  1463                           
  1464                           ;main.c: 11: SYSTEM_Initialize();
  1465                           
  1466                           ;incstack = 0
  1467  003AF6  EC3A  F02A         	call	_SYSTEM_Initialize	;wreg free
  1468                           
  1469                           ;main.c: 30: (INTCONbits.GIE = 1);
  1470  003AFA  8EF2               	bsf	intcon,7,c	;volatile
  1471                           
  1472                           ;main.c: 33: (INTCONbits.PEIE = 1);
  1473  003AFC  8CF2               	bsf	intcon,6,c	;volatile
  1474                           
  1475                           ;main.c: 41: lcd_init();
  1476  003AFE  ECEF  F026         	call	_lcd_init	;wreg free
  1477                           
  1478                           ;main.c: 42: lcd_clear();
  1479  003B02  EC63  F02A         	call	_lcd_clear	;wreg free
  1480                           
  1481                           ;main.c: 46: LATC |= (1 << 0) | (1 << 1) | (1 << 2) | (1 << 3) | (1 << 4);
  1482  003B06  0E1F               	movlw	31
  1483  003B08  128B               	iorwf	3979,f,c	;volatile
  1484                           
  1485                           ;main.c: 47: LATB |= (1 << 2) | (1 << 3) | (1 << 4) | (1 << 5);
  1486  003B0A  0E3C               	movlw	60
  1487  003B0C  128A               	iorwf	3978,f,c	;volatile
  1488                           
  1489                           ;main.c: 50: LATC &= ~(1 << 1);
  1490  003B0E  928B               	bcf	3979,1,c	;volatile
  1491                           
  1492                           ;main.c: 51: LATB &= ~(1 << 3);
  1493  003B10  968A               	bcf	3978,3,c	;volatile
  1494  003B12                     l270:
  1495                           
  1496                           ;main.c: 54: {
  1497                           ;main.c: 56: char cap_string[16];
  1498                           ;main.c: 59: if (result >= 1000000.0)
  1499  003B12  C058  F090         	movff	_result,___ftge@ff1
  1500  003B16  C059  F091         	movff	_result+1,___ftge@ff1+1
  1501  003B1A  C05A  F092         	movff	_result+2,___ftge@ff1+2
  1502  003B1E  0E24               	movlw	36
  1503  003B20  0100               	movlb	0	; () banked
  1504  003B22  6F93               	movwf	___ftge@ff2& (0+255),b
  1505  003B24  0E74               	movlw	116
  1506  003B26  0100               	movlb	0	; () banked
  1507  003B28  6F94               	movwf	(___ftge@ff2+1)& (0+255),b
  1508  003B2A  0E49               	movlw	73
  1509  003B2C  0100               	movlb	0	; () banked
  1510  003B2E  6F95               	movwf	(___ftge@ff2+2)& (0+255),b
  1511  003B30  ECD0  F023         	call	___ftge	;wreg free
  1512  003B34  0100               	movlb	0	; () banked
  1513  003B36  A0D8               	btfss	status,0,c
  1514  003B38  D026               	goto	l10002
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;main.c: 60: {
  1518                           ;main.c: 61: sprintf(cap_string, "C=%12.6fuF", result / 1000000.0);
  1519  003B3A  0E49               	movlw	low main@cap_string
  1520  003B3C  0101               	movlb	1	; () banked
  1521  003B3E  6F3C               	movwf	sprintf@wh& (0+255),b
  1522  003B40  0E01               	movlw	high main@cap_string
  1523  003B42  0101               	movlb	1	; () banked
  1524  003B44  6F3D               	movwf	(sprintf@wh+1)& (0+255),b
  1525  003B46  0EF3               	movlw	low STR_3
  1526  003B48  0101               	movlb	1	; () banked
  1527  003B4A  6F3E               	movwf	sprintf@f& (0+255),b
  1528  003B4C  0E7F               	movlw	high STR_3
  1529  003B4E  0101               	movlb	1	; () banked
  1530  003B50  6F3F               	movwf	(sprintf@f+1)& (0+255),b
  1531  003B52  C058  F098         	movff	_result,___ftdiv@f1
  1532  003B56  C059  F099         	movff	_result+1,___ftdiv@f1+1
  1533  003B5A  C05A  F09A         	movff	_result+2,___ftdiv@f1+2
  1534  003B5E  0E24               	movlw	36
  1535  003B60  0100               	movlb	0	; () banked
  1536  003B62  6F9B               	movwf	___ftdiv@f2& (0+255),b
  1537  003B64  0E74               	movlw	116
  1538  003B66  0100               	movlb	0	; () banked
  1539  003B68  6F9C               	movwf	(___ftdiv@f2+1)& (0+255),b
  1540  003B6A  0E49               	movlw	73
  1541  003B6C  0100               	movlb	0	; () banked
  1542  003B6E  6F9D               	movwf	(___ftdiv@f2+2)& (0+255),b
  1543  003B70  ECDD  F01E         	call	___ftdiv	;wreg free
  1544  003B74  C098  F140         	movff	?___ftdiv,?_sprintf+4
  1545  003B78  C099  F141         	movff	?___ftdiv+1,?_sprintf+5
  1546  003B7C  C09A  F142         	movff	?___ftdiv+2,?_sprintf+6
  1547  003B80  ECF7  F027         	call	_sprintf	;wreg free
  1548                           
  1549                           ;main.c: 62: }
  1550  003B84  D062               	goto	l10010
  1551  003B86                     l10002:
  1552                           
  1553                           ;main.c: 63: else if (result < 1000000 && result >= 1000.0)
  1554  003B86  C058  F090         	movff	_result,___ftge@ff1
  1555  003B8A  C059  F091         	movff	_result+1,___ftge@ff1+1
  1556  003B8E  C05A  F092         	movff	_result+2,___ftge@ff1+2
  1557  003B92  0E24               	movlw	36
  1558  003B94  0100               	movlb	0	; () banked
  1559  003B96  6F93               	movwf	___ftge@ff2& (0+255),b
  1560  003B98  0E74               	movlw	116
  1561  003B9A  0100               	movlb	0	; () banked
  1562  003B9C  6F94               	movwf	(___ftge@ff2+1)& (0+255),b
  1563  003B9E  0E49               	movlw	73
  1564  003BA0  0100               	movlb	0	; () banked
  1565  003BA2  6F95               	movwf	(___ftge@ff2+2)& (0+255),b
  1566  003BA4  ECD0  F023         	call	___ftge	;wreg free
  1567  003BA8  0100               	movlb	0	; () banked
  1568  003BAA  B0D8               	btfsc	status,0,c
  1569  003BAC  D03A               	goto	l10008
  1570                           
  1571                           ; BSR set to: 0
  1572  003BAE  C058  F090         	movff	_result,___ftge@ff1
  1573  003BB2  C059  F091         	movff	_result+1,___ftge@ff1+1
  1574  003BB6  C05A  F092         	movff	_result+2,___ftge@ff1+2
  1575  003BBA  0E00               	movlw	0
  1576  003BBC  0100               	movlb	0	; () banked
  1577  003BBE  6F93               	movwf	___ftge@ff2& (0+255),b
  1578  003BC0  0E7A               	movlw	122
  1579  003BC2  0100               	movlb	0	; () banked
  1580  003BC4  6F94               	movwf	(___ftge@ff2+1)& (0+255),b
  1581  003BC6  0E44               	movlw	68
  1582  003BC8  0100               	movlb	0	; () banked
  1583  003BCA  6F95               	movwf	(___ftge@ff2+2)& (0+255),b
  1584  003BCC  ECD0  F023         	call	___ftge	;wreg free
  1585  003BD0  0100               	movlb	0	; () banked
  1586  003BD2  A0D8               	btfss	status,0,c
  1587  003BD4  D026               	goto	l10008
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;main.c: 64: {
  1591                           ;main.c: 65: sprintf(cap_string, "C=%12.3fnF", result / 1000.0);
  1592  003BD6  0E49               	movlw	low main@cap_string
  1593  003BD8  0101               	movlb	1	; () banked
  1594  003BDA  6F3C               	movwf	sprintf@wh& (0+255),b
  1595  003BDC  0E01               	movlw	high main@cap_string
  1596  003BDE  0101               	movlb	1	; () banked
  1597  003BE0  6F3D               	movwf	(sprintf@wh+1)& (0+255),b
  1598  003BE2  0EDD               	movlw	low STR_4
  1599  003BE4  0101               	movlb	1	; () banked
  1600  003BE6  6F3E               	movwf	sprintf@f& (0+255),b
  1601  003BE8  0E7F               	movlw	high STR_4
  1602  003BEA  0101               	movlb	1	; () banked
  1603  003BEC  6F3F               	movwf	(sprintf@f+1)& (0+255),b
  1604  003BEE  C058  F098         	movff	_result,___ftdiv@f1
  1605  003BF2  C059  F099         	movff	_result+1,___ftdiv@f1+1
  1606  003BF6  C05A  F09A         	movff	_result+2,___ftdiv@f1+2
  1607  003BFA  0E00               	movlw	0
  1608  003BFC  0100               	movlb	0	; () banked
  1609  003BFE  6F9B               	movwf	___ftdiv@f2& (0+255),b
  1610  003C00  0E7A               	movlw	122
  1611  003C02  0100               	movlb	0	; () banked
  1612  003C04  6F9C               	movwf	(___ftdiv@f2+1)& (0+255),b
  1613  003C06  0E44               	movlw	68
  1614  003C08  0100               	movlb	0	; () banked
  1615  003C0A  6F9D               	movwf	(___ftdiv@f2+2)& (0+255),b
  1616  003C0C  ECDD  F01E         	call	___ftdiv	;wreg free
  1617  003C10  C098  F140         	movff	?___ftdiv,?_sprintf+4
  1618  003C14  C099  F141         	movff	?___ftdiv+1,?_sprintf+5
  1619  003C18  C09A  F142         	movff	?___ftdiv+2,?_sprintf+6
  1620  003C1C  ECF7  F027         	call	_sprintf	;wreg free
  1621                           
  1622                           ;main.c: 66: }
  1623  003C20  D014               	goto	l10010
  1624  003C22                     l10008:
  1625                           
  1626                           ;main.c: 67: else
  1627                           ;main.c: 68: {
  1628                           ;main.c: 69: sprintf(cap_string, "C=%12.0fpF", result);
  1629  003C22  0E49               	movlw	low main@cap_string
  1630  003C24  0101               	movlb	1	; () banked
  1631  003C26  6F3C               	movwf	sprintf@wh& (0+255),b
  1632  003C28  0E01               	movlw	high main@cap_string
  1633  003C2A  0101               	movlb	1	; () banked
  1634  003C2C  6F3D               	movwf	(sprintf@wh+1)& (0+255),b
  1635  003C2E  0EE8               	movlw	low STR_5
  1636  003C30  0101               	movlb	1	; () banked
  1637  003C32  6F3E               	movwf	sprintf@f& (0+255),b
  1638  003C34  0E7F               	movlw	high STR_5
  1639  003C36  0101               	movlb	1	; () banked
  1640  003C38  6F3F               	movwf	(sprintf@f+1)& (0+255),b
  1641  003C3A  C058  F140         	movff	_result,?_sprintf+4
  1642  003C3E  C059  F141         	movff	_result+1,?_sprintf+5
  1643  003C42  C05A  F142         	movff	_result+2,?_sprintf+6
  1644  003C46  ECF7  F027         	call	_sprintf	;wreg free
  1645  003C4A                     l10010:
  1646                           
  1647                           ;main.c: 70: }
  1648                           ;main.c: 72: lcd_sendString(cap_string);
  1649  003C4A  0E49               	movlw	low main@cap_string
  1650  003C4C  0100               	movlb	0	; () banked
  1651  003C4E  6F94               	movwf	lcd_sendString@a& (0+255),b
  1652  003C50  0E01               	movlw	high main@cap_string
  1653  003C52  0100               	movlb	0	; () banked
  1654  003C54  6F95               	movwf	(lcd_sendString@a+1)& (0+255),b
  1655  003C56  EC46  F028         	call	_lcd_sendString	;wreg free
  1656  003C5A  D75B               	goto	l270
  1657  003C5C                     __end_of_main:
  1658                           	opt stack 0
  1659                           tblptru	equ	0xFF8
  1660                           tblptrh	equ	0xFF7
  1661                           tblptrl	equ	0xFF6
  1662                           tablat	equ	0xFF5
  1663                           intcon	equ	0xFF2
  1664                           postinc0	equ	0xFEE
  1665                           wreg	equ	0xFE8
  1666                           postdec1	equ	0xFE5
  1667                           fsr1l	equ	0xFE1
  1668                           status	equ	0xFD8
  1669                           
  1670 ;; *************** function _sprintf *****************
  1671 ;; Defined at:
  1672 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprintf.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;  wh              2   60[BANK1 ] PTR unsigned char 
  1675 ;;		 -> ftoa@buf(17), main@cap_string(16), 
  1676 ;;  f               2   62[BANK1 ] PTR const unsigned char 
  1677 ;;		 -> STR_6(11), STR_5(11), STR_4(11), STR_3(11), 
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  pb              4   69[BANK1 ] struct __prbuf
  1680 ;;  ap              2   67[BANK1 ] PTR void [1]
  1681 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  2   60[BANK1 ] int 
  1684 ;; Registers used:
  1685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1691 ;;      Params:         0       0       7       0       0       0       0
  1692 ;;      Locals:         0       0       6       0       0       0       0
  1693 ;;      Temps:          0       0       0       0       0       0       0
  1694 ;;      Totals:         0       0      13       0       0       0       0
  1695 ;;Total ram usage:       13 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:   11
  1698 ;; This function calls:
  1699 ;;		__doprnt
  1700 ;; This function is called by:
  1701 ;;		_main
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	text1
  1706  004FEE                     __ptext1:
  1707                           	opt stack 0
  1708  004FEE                     _sprintf:
  1709                           	opt stack 19
  1710                           
  1711                           ;incstack = 0
  1712  004FEE  C13C  F145         	movff	sprintf@wh,sprintf@pb
  1713  004FF2  C13D  F146         	movff	sprintf@wh+1,sprintf@pb+1
  1714  004FF6  0E00               	movlw	0
  1715  004FF8  0101               	movlb	1	; () banked
  1716  004FFA  6F47               	movwf	(sprintf@pb+2)& (0+255),b
  1717  004FFC  0E00               	movlw	0
  1718  004FFE  0101               	movlb	1	; () banked
  1719  005000  6F48               	movwf	(sprintf@pb+3)& (0+255),b
  1720  005002  0E40               	movlw	low (?_sprintf+4)
  1721  005004  0101               	movlb	1	; () banked
  1722  005006  6F43               	movwf	sprintf@ap& (0+255),b
  1723  005008  0E01               	movlw	high (?_sprintf+4)
  1724  00500A  0101               	movlb	1	; () banked
  1725  00500C  6F44               	movwf	(sprintf@ap+1)& (0+255),b
  1726                           
  1727                           ; BSR set to: 1
  1728  00500E  0E45               	movlw	low sprintf@pb
  1729  005010  0101               	movlb	1	; () banked
  1730  005012  6F19               	movwf	__doprnt@pb& (0+255),b
  1731  005014  0E01               	movlw	high sprintf@pb
  1732  005016  0101               	movlb	1	; () banked
  1733  005018  6F1A               	movwf	(__doprnt@pb+1)& (0+255),b
  1734  00501A  C13E  F11B         	movff	sprintf@f,__doprnt@f
  1735  00501E  C13F  F11C         	movff	sprintf@f+1,__doprnt@f+1
  1736  005022  0E43               	movlw	low sprintf@ap
  1737  005024  0101               	movlb	1	; () banked
  1738  005026  6F1D               	movwf	__doprnt@ap& (0+255),b
  1739  005028  0E01               	movlw	high sprintf@ap
  1740  00502A  0101               	movlb	1	; () banked
  1741  00502C  6F1E               	movwf	(__doprnt@ap+1)& (0+255),b
  1742  00502E  EC52  F000         	call	__doprnt	;wreg free
  1743  005032  C145  FFD9         	movff	sprintf@pb,fsr2l
  1744  005036  C146  FFDA         	movff	sprintf@pb+1,fsr2h
  1745  00503A  0E00               	movlw	0
  1746  00503C  6EDF               	movwf	indf2,c
  1747  00503E  0012               	return	
  1748  005040                     __end_of_sprintf:
  1749                           	opt stack 0
  1750                           tblptru	equ	0xFF8
  1751                           tblptrh	equ	0xFF7
  1752                           tblptrl	equ	0xFF6
  1753                           tablat	equ	0xFF5
  1754                           intcon	equ	0xFF2
  1755                           postinc0	equ	0xFEE
  1756                           wreg	equ	0xFE8
  1757                           postdec1	equ	0xFE5
  1758                           fsr1l	equ	0xFE1
  1759                           indf2	equ	0xFDF
  1760                           fsr2h	equ	0xFDA
  1761                           fsr2l	equ	0xFD9
  1762                           status	equ	0xFD8
  1763                           
  1764 ;; *************** function __doprnt *****************
  1765 ;; Defined at:
  1766 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;  pb              2   25[BANK1 ] PTR struct __prbuf
  1769 ;;		 -> sprintf@pb(4), printf@pb(4), 
  1770 ;;  f               2   27[BANK1 ] PTR const unsigned char 
  1771 ;;		 -> STR_6(11), STR_5(11), STR_4(11), STR_3(11), 
  1772 ;;		 -> STR_2(53), STR_1(23), 
  1773 ;;  ap              2   29[BANK1 ] PTR PTR void 
  1774 ;;		 -> sprintf@ap(2), printf@ap(2), 
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;  tmpval          4   46[BANK1 ] struct .
  1777 ;;  val             4   42[BANK1 ] unsigned long 
  1778 ;;  fval            3   52[BANK1 ] unsigned long 
  1779 ;;  cp              3    0        PTR const unsigned char 
  1780 ;;  prec            2   57[BANK1 ] int 
  1781 ;;  flag            2   55[BANK1 ] unsigned short 
  1782 ;;  width           2   50[BANK1 ] int 
  1783 ;;  exp             2   40[BANK1 ] int 
  1784 ;;  len             2    0        unsigned int 
  1785 ;;  c               1   59[BANK1 ] char 
  1786 ;;  d               1    0        unsigned char 
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  2   25[BANK1 ] int 
  1789 ;; Registers used:
  1790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1796 ;;      Params:         0       0       6       0       0       0       0
  1797 ;;      Locals:         0       0      23       0       0       0       0
  1798 ;;      Temps:          0       0       6       0       0       0       0
  1799 ;;      Totals:         0       0      35       0       0       0       0
  1800 ;;Total ram usage:       35 bytes
  1801 ;; Hardware stack levels used:    1
  1802 ;; Hardware stack levels required when called:   10
  1803 ;; This function calls:
  1804 ;;		Absolute function
  1805 ;;		___awdiv
  1806 ;;		___ftadd
  1807 ;;		___ftge
  1808 ;;		___ftmul
  1809 ;;		___ftneg
  1810 ;;		___ftsub
  1811 ;;		___fttol
  1812 ;;		___lldiv
  1813 ;;		___llmod
  1814 ;;		___lltoft
  1815 ;;		___wmul
  1816 ;;		__div_to_l_
  1817 ;;		__tdiv_to_l_
  1818 ;;		_fround
  1819 ;;		_isdigit
  1820 ;;		_putch
  1821 ;;		_scale
  1822 ;; This function is called by:
  1823 ;;		_sprintf
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827                           	psect	text2
  1828  0000A4                     __ptext2:
  1829                           	opt stack 0
  1830  0000A4                     __doprnt:
  1831                           	opt stack 19
  1832                           
  1833                           ;doprnt.c: 499: signed char c;
  1834                           ;doprnt.c: 501: int width;
  1835                           ;doprnt.c: 504: int prec;
  1836                           ;doprnt.c: 508: unsigned short flag;
  1837                           ;doprnt.c: 515: char d;
  1838                           ;doprnt.c: 516: double fval;
  1839                           ;doprnt.c: 517: int exp;
  1840                           ;doprnt.c: 523: union {
  1841                           ;doprnt.c: 524: unsigned long vd;
  1842                           ;doprnt.c: 525: double integ;
  1843                           ;doprnt.c: 526: } tmpval;
  1844                           ;doprnt.c: 528: unsigned long val;
  1845                           ;doprnt.c: 529: unsigned len;
  1846                           ;doprnt.c: 530: const char * cp;
  1847                           ;doprnt.c: 536: while(c = *f++) {
  1848                           
  1849                           ;incstack = 0
  1850  0000A4  EF73  F009         	goto	l9890
  1851  0000A8                     l9502:
  1852                           
  1853                           ;doprnt.c: 538: if(c != '%')
  1854  0000A8  0E25               	movlw	37
  1855  0000AA  0101               	movlb	1	; () banked
  1856  0000AC  193B               	xorwf	__doprnt@c& (0+255),w,b
  1857  0000AE  B4D8               	btfsc	status,2,c
  1858  0000B0  D038               	goto	l9512
  1859                           
  1860                           ; BSR set to: 1
  1861                           ;doprnt.c: 540: {
  1862                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  1863  0000B2  0101               	movlb	1	; () banked
  1864  0000B4  EE20 F002          	lfsr	2,2
  1865  0000B8  5119               	movf	__doprnt@pb& (0+255),w,b
  1866  0000BA  26D9               	addwf	fsr2l,f,c
  1867  0000BC  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  1868  0000BE  22DA               	addwfc	fsr2h,f,c
  1869  0000C0  50DE               	movf	postinc2,w,c
  1870  0000C2  10DE               	iorwf	postinc2,w,c
  1871  0000C4  B4D8               	btfsc	status,2,c
  1872  0000C6  D016               	goto	l9508
  1873                           
  1874                           ; BSR set to: 1
  1875  0000C8  0101               	movlb	1	; () banked
  1876  0000CA  EE20 F002          	lfsr	2,2
  1877  0000CE  5119               	movf	__doprnt@pb& (0+255),w,b
  1878  0000D0  26D9               	addwf	fsr2l,f,c
  1879  0000D2  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  1880  0000D4  22DA               	addwfc	fsr2h,f,c
  1881  0000D6  D802               	call	u15958
  1882  0000D8  EF73  F009         	goto	l9890
  1883  0000DC                     u15958:
  1884  0000DC  0005               	push	
  1885  0000DE  6EFA               	movwf	pclath,c
  1886  0000E0  50DE               	movf	postinc2,w,c
  1887  0000E2  6EFD               	movwf	tosl,c
  1888  0000E4  50DE               	movf	postinc2,w,c
  1889  0000E6  6EFE               	movwf	tosh,c
  1890  0000E8  50F8               	movf	tblptru,w,c
  1891  0000EA  6EFF               	movwf	tosu,c
  1892  0000EC  50FA               	movf	pclath,w,c
  1893  0000EE  0101               	movlb	1	; () banked
  1894  0000F0  513B               	movf	__doprnt@c& (0+255),w,b
  1895  0000F2  0012               	return		;indir
  1896  0000F4                     l9508:
  1897  0000F4  C119  FFD9         	movff	__doprnt@pb,fsr2l
  1898  0000F8  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  1899  0000FC  CFDE F11F          	movff	postinc2,??__doprnt
  1900  000100  CFDD F120          	movff	postdec2,??__doprnt+1
  1901  000104  C11F  FFD9         	movff	??__doprnt,fsr2l
  1902  000108  C120  FFDA         	movff	??__doprnt+1,fsr2h
  1903  00010C  C13B  FFDF         	movff	__doprnt@c,indf2
  1904  000110  C119  FFD9         	movff	__doprnt@pb,fsr2l
  1905  000114  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  1906  000118  2ADE               	incf	postinc2,f,c
  1907  00011A  0E00               	movlw	0
  1908  00011C  22DD               	addwfc	postdec2,f,c
  1909                           
  1910                           ;doprnt.c: 542: continue;
  1911  00011E  EF73  F009         	goto	l9890
  1912  000122                     l9512:
  1913                           
  1914                           ;doprnt.c: 543: }
  1915                           ;doprnt.c: 546: width = 0;
  1916  000122  0E00               	movlw	0
  1917  000124  0101               	movlb	1	; () banked
  1918  000126  6F33               	movwf	(__doprnt@width+1)& (0+255),b
  1919  000128  0E00               	movlw	0
  1920  00012A  6F32               	movwf	__doprnt@width& (0+255),b
  1921                           
  1922                           ;doprnt.c: 548: flag = 0;
  1923  00012C  0E00               	movlw	0
  1924  00012E  0101               	movlb	1	; () banked
  1925  000130  6F38               	movwf	(__doprnt@flag+1)& (0+255),b
  1926  000132  0E00               	movlw	0
  1927  000134  6F37               	movwf	__doprnt@flag& (0+255),b
  1928                           
  1929                           ; BSR set to: 1
  1930                           ;doprnt.c: 551: switch(*f) {
  1931                           
  1932                           ;doprnt.c: 550: for(;;) {
  1933  000136  D005               	goto	l9518
  1934  000138                     l9514:
  1935                           
  1936                           ;doprnt.c: 580: flag |= 0x04;
  1937  000138  0101               	movlb	1	; () banked
  1938  00013A  8537               	bsf	__doprnt@flag& (0+255),2,b
  1939                           
  1940                           ;doprnt.c: 581: f++;
  1941  00013C  0101               	movlb	1	; () banked
  1942  00013E  4B1B               	infsnz	__doprnt@f& (0+255),f,b
  1943  000140  2B1C               	incf	(__doprnt@f+1)& (0+255),f,b
  1944  000142                     l9518:
  1945  000142  C11B  FFF6         	movff	__doprnt@f,tblptrl
  1946  000146  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  1947  00014A                     	if	0	;tblptru may be non-zero
  1948  00014A                     	endif
  1949  00014A                     	if	0	;tblptru may be non-zero
  1950  00014A                     	endif
  1951  00014A  0008               	tblrd		*
  1952  00014C  50F5               	movf	tablat,w,c
  1953                           
  1954                           ; Switch size 1, requested type "space"
  1955                           ; Number of cases is 1, Range of values is 48 to 48
  1956                           ; switch strategies available:
  1957                           ; Name         Instructions Cycles
  1958                           ; simple_byte            4     3 (average)
  1959                           ;	Chosen strategy is simple_byte
  1960  00014E  0A30               	xorlw	48	; case 48
  1961  000150  B4D8               	btfsc	status,2,c
  1962  000152  D7F2               	goto	l9514
  1963                           
  1964                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1965                           
  1966                           ;doprnt.c: 586: }
  1967                           
  1968                           ;doprnt.c: 585: break;
  1969  000154  C11B  FFF6         	movff	__doprnt@f,tblptrl
  1970  000158  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  1971  00015C                     	if	0	;tblptru may be non-zero
  1972  00015C                     	endif
  1973  00015C                     	if	0	;tblptru may be non-zero
  1974  00015C                     	endif
  1975  00015C  0008               	tblrd		*
  1976  00015E  50F5               	movf	tablat,w,c
  1977  000160  ECCC  F029         	call	_isdigit
  1978  000164  A0D8               	btfss	status,0,c
  1979  000166  D040               	goto	l9532
  1980                           
  1981                           ;doprnt.c: 598: width = 0;
  1982  000168  0E00               	movlw	0
  1983  00016A  0101               	movlb	1	; () banked
  1984  00016C  6F33               	movwf	(__doprnt@width+1)& (0+255),b
  1985  00016E  0E00               	movlw	0
  1986  000170  6F32               	movwf	__doprnt@width& (0+255),b
  1987  000172                     l9524:
  1988                           
  1989                           ;doprnt.c: 600: width *= 10;
  1990  000172  C132  F09E         	movff	__doprnt@width,___wmul@multiplier
  1991  000176  C133  F09F         	movff	__doprnt@width+1,___wmul@multiplier+1
  1992  00017A  0E00               	movlw	0
  1993  00017C  0100               	movlb	0	; () banked
  1994  00017E  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1995  000180  0E0A               	movlw	10
  1996  000182  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  1997  000184  EC33  F029         	call	___wmul	;wreg free
  1998  000188  C09E  F132         	movff	?___wmul,__doprnt@width
  1999  00018C  C09F  F133         	movff	?___wmul+1,__doprnt@width+1
  2000                           
  2001                           ;doprnt.c: 601: width += *f++ - '0';
  2002  000190  0ED0               	movlw	208
  2003  000192  0101               	movlb	1	; () banked
  2004  000194  6F1F               	movwf	??__doprnt& (0+255),b
  2005  000196  0EFF               	movlw	255
  2006  000198  0101               	movlb	1	; () banked
  2007  00019A  6F20               	movwf	(??__doprnt+1)& (0+255),b
  2008  00019C  C11B  FFF6         	movff	__doprnt@f,tblptrl
  2009  0001A0  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  2010  0001A4                     	if	0	;tblptru may be non-zero
  2011  0001A4                     	endif
  2012  0001A4                     	if	0	;tblptru may be non-zero
  2013  0001A4                     	endif
  2014  0001A4  0008               	tblrd		*
  2015  0001A6  50F5               	movf	tablat,w,c
  2016  0001A8  0101               	movlb	1	; () banked
  2017  0001AA  6F21               	movwf	(??__doprnt+2)& (0+255),b
  2018  0001AC  6B22               	clrf	(??__doprnt+3)& (0+255),b
  2019  0001AE  0101               	movlb	1	; () banked
  2020  0001B0  511F               	movf	??__doprnt& (0+255),w,b
  2021  0001B2  0101               	movlb	1	; () banked
  2022  0001B4  2721               	addwf	(??__doprnt+2)& (0+255),f,b
  2023  0001B6  0101               	movlb	1	; () banked
  2024  0001B8  5120               	movf	(??__doprnt+1)& (0+255),w,b
  2025  0001BA  0101               	movlb	1	; () banked
  2026  0001BC  2322               	addwfc	(??__doprnt+3)& (0+255),f,b
  2027  0001BE  0101               	movlb	1	; () banked
  2028  0001C0  5121               	movf	(??__doprnt+2)& (0+255),w,b
  2029  0001C2  0101               	movlb	1	; () banked
  2030  0001C4  2732               	addwf	__doprnt@width& (0+255),f,b
  2031  0001C6  0101               	movlb	1	; () banked
  2032  0001C8  5122               	movf	(??__doprnt+3)& (0+255),w,b
  2033  0001CA  0101               	movlb	1	; () banked
  2034  0001CC  2333               	addwfc	(__doprnt@width+1)& (0+255),f,b
  2035                           
  2036                           ; BSR set to: 1
  2037  0001CE  0101               	movlb	1	; () banked
  2038  0001D0  4B1B               	infsnz	__doprnt@f& (0+255),f,b
  2039  0001D2  2B1C               	incf	(__doprnt@f+1)& (0+255),f,b
  2040                           
  2041                           ; BSR set to: 1
  2042                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2043  0001D4  C11B  FFF6         	movff	__doprnt@f,tblptrl
  2044  0001D8  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  2045  0001DC                     	if	0	;tblptru may be non-zero
  2046  0001DC                     	endif
  2047  0001DC                     	if	0	;tblptru may be non-zero
  2048  0001DC                     	endif
  2049  0001DC  0008               	tblrd		*
  2050  0001DE  50F5               	movf	tablat,w,c
  2051  0001E0  ECCC  F029         	call	_isdigit
  2052  0001E4  B0D8               	btfsc	status,0,c
  2053  0001E6  D7C5               	goto	l9524
  2054  0001E8                     l9532:
  2055                           
  2056                           ;doprnt.c: 608: }
  2057                           ;doprnt.c: 611: if(*f == '.') {
  2058  0001E8  C11B  FFF6         	movff	__doprnt@f,tblptrl
  2059  0001EC  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  2060  0001F0                     	if	0	;tblptru may be non-zero
  2061  0001F0                     	endif
  2062  0001F0                     	if	0	;tblptru may be non-zero
  2063  0001F0                     	endif
  2064  0001F0  0008               	tblrd		*
  2065  0001F2  50F5               	movf	tablat,w,c
  2066  0001F4  0A2E               	xorlw	46
  2067  0001F6  A4D8               	btfss	status,2,c
  2068  0001F8  D039               	goto	l9544
  2069                           
  2070                           ;doprnt.c: 612: flag |= 0x4000;
  2071  0001FA  0101               	movlb	1	; () banked
  2072  0001FC  8D38               	bsf	(__doprnt@flag+1)& (0+255),6,b
  2073                           
  2074                           ;doprnt.c: 613: f++;
  2075  0001FE  0101               	movlb	1	; () banked
  2076  000200  4B1B               	infsnz	__doprnt@f& (0+255),f,b
  2077  000202  2B1C               	incf	(__doprnt@f+1)& (0+255),f,b
  2078                           
  2079                           ; BSR set to: 1
  2080                           ;doprnt.c: 620: {
  2081                           ;doprnt.c: 621: prec = 0;
  2082  000204  0E00               	movlw	0
  2083  000206  0101               	movlb	1	; () banked
  2084  000208  6F3A               	movwf	(__doprnt@prec+1)& (0+255),b
  2085  00020A  0E00               	movlw	0
  2086  00020C  6F39               	movwf	__doprnt@prec& (0+255),b
  2087                           
  2088                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  2089  00020E  D023               	goto	l9542
  2090  000210                     l9538:
  2091                           
  2092                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  2093  000210  C139  F09E         	movff	__doprnt@prec,___wmul@multiplier
  2094  000214  C13A  F09F         	movff	__doprnt@prec+1,___wmul@multiplier+1
  2095  000218  0E00               	movlw	0
  2096  00021A  0100               	movlb	0	; () banked
  2097  00021C  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2098  00021E  0E0A               	movlw	10
  2099  000220  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  2100  000222  EC33  F029         	call	___wmul	;wreg free
  2101  000226  C11B  FFF6         	movff	__doprnt@f,tblptrl
  2102  00022A  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  2103  00022E                     	if	0	;tblptru may be non-zero
  2104  00022E                     	endif
  2105  00022E                     	if	0	;tblptru may be non-zero
  2106  00022E                     	endif
  2107  00022E  0008               	tblrd		*
  2108  000230  50F5               	movf	tablat,w,c
  2109  000232  0100               	movlb	0	; () banked
  2110  000234  279E               	addwf	?___wmul& (0+255),f,b
  2111  000236  0E00               	movlw	0
  2112  000238  0100               	movlb	0	; () banked
  2113  00023A  239F               	addwfc	(?___wmul+1)& (0+255),f,b
  2114  00023C  0ED0               	movlw	208
  2115  00023E  0100               	movlb	0	; () banked
  2116  000240  259E               	addwf	?___wmul& (0+255),w,b
  2117  000242  0101               	movlb	1	; () banked
  2118  000244  6F39               	movwf	__doprnt@prec& (0+255),b
  2119  000246  0EFF               	movlw	255
  2120  000248  0100               	movlb	0	; () banked
  2121  00024A  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  2122  00024C  0101               	movlb	1	; () banked
  2123  00024E  6F3A               	movwf	(__doprnt@prec+1)& (0+255),b
  2124                           
  2125                           ; BSR set to: 1
  2126  000250  0101               	movlb	1	; () banked
  2127  000252  4B1B               	infsnz	__doprnt@f& (0+255),f,b
  2128  000254  2B1C               	incf	(__doprnt@f+1)& (0+255),f,b
  2129  000256                     l9542:
  2130                           
  2131                           ; BSR set to: 1
  2132  000256  C11B  FFF6         	movff	__doprnt@f,tblptrl
  2133  00025A  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  2134  00025E                     	if	0	;tblptru may be non-zero
  2135  00025E                     	endif
  2136  00025E                     	if	0	;tblptru may be non-zero
  2137  00025E                     	endif
  2138  00025E  0008               	tblrd		*
  2139  000260  50F5               	movf	tablat,w,c
  2140  000262  ECCC  F029         	call	_isdigit
  2141  000266  A0D8               	btfss	status,0,c
  2142  000268  D012               	goto	l9556
  2143  00026A  D7D2               	goto	l9538
  2144  00026C                     l9544:
  2145                           
  2146                           ;doprnt.c: 626: prec = 0;
  2147  00026C  0E00               	movlw	0
  2148  00026E  0101               	movlb	1	; () banked
  2149  000270  6F3A               	movwf	(__doprnt@prec+1)& (0+255),b
  2150  000272  0E00               	movlw	0
  2151  000274  6F39               	movwf	__doprnt@prec& (0+255),b
  2152                           
  2153                           ; BSR set to: 1
  2154                           ;doprnt.c: 628: flag |= 0x1000;
  2155  000276  0101               	movlb	1	; () banked
  2156  000278  8938               	bsf	(__doprnt@flag+1)& (0+255),4,b
  2157                           
  2158                           ; BSR set to: 1
  2159                           ;doprnt.c: 635: switch(c = *f++) {
  2160                           
  2161                           ;doprnt.c: 630: }
  2162                           ;doprnt.c: 633: loop:
  2163                           
  2164                           ; BSR set to: 1
  2165  00027A  D009               	goto	l9556
  2166  00027C                     l9548:
  2167                           
  2168                           ; BSR set to: 1
  2169                           ;doprnt.c: 643: flag |= 0x10;
  2170  00027C  0101               	movlb	1	; () banked
  2171  00027E  8937               	bsf	__doprnt@flag& (0+255),4,b
  2172                           
  2173                           ;doprnt.c: 644: goto loop;
  2174  000280  D006               	goto	l9556
  2175  000282                     l9550:
  2176                           
  2177                           ; BSR set to: 1
  2178                           ;doprnt.c: 663: flag |= 0x400;
  2179  000282  0101               	movlb	1	; () banked
  2180  000284  8538               	bsf	(__doprnt@flag+1)& (0+255),2,b
  2181                           
  2182                           ; BSR set to: 1
  2183                           ;doprnt.c: 698: case 'i':
  2184                           ;doprnt.c: 699: break;
  2185                           
  2186                           ; BSR set to: 1
  2187                           
  2188                           ;doprnt.c: 697: case 'd':
  2189                           
  2190                           ;doprnt.c: 664: break;
  2191  000286  D024               	goto	l9558
  2192  000288                     l9552:
  2193                           
  2194                           ; BSR set to: 1
  2195                           ;doprnt.c: 818: flag |= 0x40;
  2196  000288  0101               	movlb	1	; () banked
  2197  00028A  8D37               	bsf	__doprnt@flag& (0+255),6,b
  2198                           
  2199                           ; BSR set to: 1
  2200                           ;doprnt.c: 822: }
  2201                           
  2202                           ;doprnt.c: 819: break;
  2203  00028C  D021               	goto	l9558
  2204  00028E                     l9556:
  2205  00028E  C11B  FFF6         	movff	__doprnt@f,tblptrl
  2206  000292  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  2207  000296  0101               	movlb	1	; () banked
  2208  000298  4B1B               	infsnz	__doprnt@f& (0+255),f,b
  2209  00029A  2B1C               	incf	(__doprnt@f+1)& (0+255),f,b
  2210  00029C                     	if	0	;tblptru may be non-zero
  2211  00029C                     	endif
  2212  00029C                     	if	0	;tblptru may be non-zero
  2213  00029C                     	endif
  2214  00029C  0008               	tblrd		*
  2215  00029E  CFF5 F13B          	movff	tablat,__doprnt@c
  2216  0002A2  0101               	movlb	1	; () banked
  2217  0002A4  513B               	movf	__doprnt@c& (0+255),w,b
  2218                           
  2219                           ; Switch size 1, requested type "space"
  2220                           ; Number of cases is 6, Range of values is 0 to 117
  2221                           ; switch strategies available:
  2222                           ; Name         Instructions Cycles
  2223                           ; simple_byte           19    10 (average)
  2224                           ;	Chosen strategy is simple_byte
  2225  0002A6  0A00               	xorlw	0	; case 0
  2226  0002A8  B4D8               	btfsc	status,2,c
  2227  0002AA  EF82  F009         	goto	l9892
  2228  0002AE  0A64               	xorlw	100	; case 100
  2229  0002B0  B4D8               	btfsc	status,2,c
  2230  0002B2  D00E               	goto	l9558
  2231  0002B4  0A02               	xorlw	2	; case 102
  2232  0002B6  B4D8               	btfsc	status,2,c
  2233  0002B8  D7E4               	goto	l9550
  2234  0002BA  0A0F               	xorlw	15	; case 105
  2235  0002BC  B4D8               	btfsc	status,2,c
  2236  0002BE  D008               	goto	l9558
  2237  0002C0  0A05               	xorlw	5	; case 108
  2238  0002C2  B4D8               	btfsc	status,2,c
  2239  0002C4  D7DB               	goto	l9548
  2240  0002C6  0A19               	xorlw	25	; case 117
  2241  0002C8  B4D8               	btfsc	status,2,c
  2242  0002CA  D7DE               	goto	l9552
  2243  0002CC  EF73  F009         	goto	l9890
  2244  0002D0                     l9558:
  2245                           
  2246                           ; BSR set to: 1
  2247                           ;doprnt.c: 825: if(flag & (0x700)) {
  2248  0002D0  0E07               	movlw	7
  2249  0002D2  0101               	movlb	1	; () banked
  2250  0002D4  1538               	andwf	(__doprnt@flag+1)& (0+255),w,b
  2251  0002D6  B4D8               	btfsc	status,2,c
  2252  0002D8  EFA9  F006         	goto	l414
  2253                           
  2254                           ; BSR set to: 1
  2255                           ;doprnt.c: 827: if(flag & 0x1000)
  2256  0002DC  0101               	movlb	1	; () banked
  2257  0002DE  A938               	btfss	(__doprnt@flag+1)& (0+255),4,b
  2258  0002E0  D005               	goto	l9564
  2259                           
  2260                           ; BSR set to: 1
  2261                           ;doprnt.c: 829: prec = 6;
  2262  0002E2  0E00               	movlw	0
  2263  0002E4  0101               	movlb	1	; () banked
  2264  0002E6  6F3A               	movwf	(__doprnt@prec+1)& (0+255),b
  2265  0002E8  0E06               	movlw	6
  2266  0002EA  6F39               	movwf	__doprnt@prec& (0+255),b
  2267  0002EC                     l9564:
  2268                           
  2269                           ; BSR set to: 1
  2270                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2271  0002EC  C11D  FFD9         	movff	__doprnt@ap,fsr2l
  2272  0002F0  C11E  FFDA         	movff	__doprnt@ap+1,fsr2h
  2273  0002F4  CFDF F11F          	movff	indf2,??__doprnt
  2274  0002F8  0E03               	movlw	3
  2275  0002FA  26DE               	addwf	postinc2,f,c
  2276  0002FC  CFDF F120          	movff	indf2,??__doprnt+1
  2277  000300  0E00               	movlw	0
  2278  000302  22DD               	addwfc	postdec2,f,c
  2279  000304  C11F  FFD9         	movff	??__doprnt,fsr2l
  2280  000308  C120  FFDA         	movff	??__doprnt+1,fsr2h
  2281  00030C  CFDE F134          	movff	postinc2,__doprnt@fval
  2282  000310  CFDE F135          	movff	postinc2,__doprnt@fval+1
  2283  000314  CFDD F136          	movff	postdec2,__doprnt@fval+2
  2284                           
  2285                           ; BSR set to: 1
  2286                           ;doprnt.c: 831: if(fval < 0.0) {
  2287  000318  0101               	movlb	1	; () banked
  2288  00031A  AF36               	btfss	(__doprnt@fval+2)& (0+255),7,b
  2289  00031C  D011               	goto	l9572
  2290                           
  2291                           ; BSR set to: 1
  2292                           ;doprnt.c: 832: fval = -fval;
  2293  00031E  C134  F090         	movff	__doprnt@fval,___ftneg@f1
  2294  000322  C135  F091         	movff	__doprnt@fval+1,___ftneg@f1+1
  2295  000326  C136  F092         	movff	__doprnt@fval+2,___ftneg@f1+2
  2296  00032A  EC84  F029         	call	___ftneg	;wreg free
  2297  00032E  C090  F134         	movff	?___ftneg,__doprnt@fval
  2298  000332  C091  F135         	movff	?___ftneg+1,__doprnt@fval+1
  2299  000336  C092  F136         	movff	?___ftneg+2,__doprnt@fval+2
  2300                           
  2301                           ;doprnt.c: 833: flag |= 0x03;
  2302  00033A  0E03               	movlw	3
  2303  00033C  0101               	movlb	1	; () banked
  2304  00033E  1337               	iorwf	__doprnt@flag& (0+255),f,b
  2305  000340                     l9572:
  2306                           
  2307                           ; BSR set to: 1
  2308                           ;doprnt.c: 834: }
  2309                           ;doprnt.c: 835: exp = 0;
  2310  000340  0E00               	movlw	0
  2311  000342  0101               	movlb	1	; () banked
  2312  000344  6F29               	movwf	(__doprnt@exp+1)& (0+255),b
  2313  000346  0E00               	movlw	0
  2314  000348  6F28               	movwf	__doprnt@exp& (0+255),b
  2315                           
  2316                           ; BSR set to: 1
  2317                           ;doprnt.c: 836: if( fval!=0) {
  2318  00034A  0101               	movlb	1	; () banked
  2319  00034C  5134               	movf	__doprnt@fval& (0+255),w,b
  2320  00034E  0101               	movlb	1	; () banked
  2321  000350  1135               	iorwf	(__doprnt@fval+1)& (0+255),w,b
  2322  000352  0101               	movlb	1	; () banked
  2323  000354  1136               	iorwf	(__doprnt@fval+2)& (0+255),w,b
  2324  000356  B4D8               	btfsc	status,2,c
  2325  000358  D09B               	goto	l9600
  2326                           
  2327                           ; BSR set to: 1
  2328                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2329  00035A  0E82               	movlw	130
  2330  00035C  0101               	movlb	1	; () banked
  2331  00035E  6F1F               	movwf	??__doprnt& (0+255),b
  2332  000360  0EFF               	movlw	255
  2333  000362  0101               	movlb	1	; () banked
  2334  000364  6F20               	movwf	(??__doprnt+1)& (0+255),b
  2335  000366  C134  F121         	movff	__doprnt@fval,??__doprnt+2
  2336  00036A  C135  F122         	movff	__doprnt@fval+1,??__doprnt+3
  2337  00036E  C136  F123         	movff	__doprnt@fval+2,??__doprnt+4
  2338  000372  C137  F124         	movff	__doprnt@fval+3,??__doprnt+5
  2339  000376  0E10               	movlw	16
  2340  000378  D006               	goto	u16040
  2341  00037A                     u16045:
  2342  00037A  0101               	movlb	1	; () banked
  2343  00037C  90D8               	bcf	status,0,c
  2344  00037E  3324               	rrcf	(??__doprnt+5)& (0+255),f,b
  2345  000380  3323               	rrcf	(??__doprnt+4)& (0+255),f,b
  2346  000382  3322               	rrcf	(??__doprnt+3)& (0+255),f,b
  2347  000384  3321               	rrcf	(??__doprnt+2)& (0+255),f,b
  2348  000386                     u16040:
  2349  000386  2EE8               	decfsz	wreg,f,c
  2350  000388  D7F8               	goto	u16045
  2351  00038A  0101               	movlb	1	; () banked
  2352  00038C  5121               	movf	(??__doprnt+2)& (0+255),w,b
  2353  00038E  0101               	movlb	1	; () banked
  2354  000390  251F               	addwf	??__doprnt& (0+255),w,b
  2355  000392  0101               	movlb	1	; () banked
  2356  000394  6F28               	movwf	__doprnt@exp& (0+255),b
  2357  000396  0E00               	movlw	0
  2358  000398  0101               	movlb	1	; () banked
  2359  00039A  2120               	addwfc	(??__doprnt+1)& (0+255),w,b
  2360  00039C  0101               	movlb	1	; () banked
  2361  00039E  6F29               	movwf	(__doprnt@exp+1)& (0+255),b
  2362                           
  2363                           ; BSR set to: 1
  2364                           ;doprnt.c: 838: exp--;
  2365  0003A0  0101               	movlb	1	; () banked
  2366  0003A2  0728               	decf	__doprnt@exp& (0+255),f,b
  2367  0003A4  A0D8               	btfss	status,0,c
  2368  0003A6  0729               	decf	(__doprnt@exp+1)& (0+255),f,b
  2369                           
  2370                           ; BSR set to: 1
  2371                           ;doprnt.c: 839: exp *= 3;
  2372  0003A8  C128  F09E         	movff	__doprnt@exp,___wmul@multiplier
  2373  0003AC  C129  F09F         	movff	__doprnt@exp+1,___wmul@multiplier+1
  2374  0003B0  0E00               	movlw	0
  2375  0003B2  0100               	movlb	0	; () banked
  2376  0003B4  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2377  0003B6  0E03               	movlw	3
  2378  0003B8  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  2379  0003BA  EC33  F029         	call	___wmul	;wreg free
  2380  0003BE  C09E  F128         	movff	?___wmul,__doprnt@exp
  2381  0003C2  C09F  F129         	movff	?___wmul+1,__doprnt@exp+1
  2382                           
  2383                           ;doprnt.c: 840: exp /= 10;
  2384  0003C6  C128  F096         	movff	__doprnt@exp,___awdiv@dividend
  2385  0003CA  C129  F097         	movff	__doprnt@exp+1,___awdiv@dividend+1
  2386  0003CE  0E00               	movlw	0
  2387  0003D0  0100               	movlb	0	; () banked
  2388  0003D2  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  2389  0003D4  0E0A               	movlw	10
  2390  0003D6  6F98               	movwf	___awdiv@divisor& (0+255),b
  2391  0003D8  EC34  F024         	call	___awdiv	;wreg free
  2392  0003DC  C096  F128         	movff	?___awdiv,__doprnt@exp
  2393  0003E0  C097  F129         	movff	?___awdiv+1,__doprnt@exp+1
  2394                           
  2395                           ;doprnt.c: 841: if(exp < 0)
  2396  0003E4  0101               	movlb	1	; () banked
  2397  0003E6  AF29               	btfss	(__doprnt@exp+1)& (0+255),7,b
  2398  0003E8  D004               	goto	l9588
  2399                           
  2400                           ; BSR set to: 1
  2401                           ;doprnt.c: 842: exp--;
  2402  0003EA  0101               	movlb	1	; () banked
  2403  0003EC  0728               	decf	__doprnt@exp& (0+255),f,b
  2404  0003EE  A0D8               	btfss	status,0,c
  2405  0003F0  0729               	decf	(__doprnt@exp+1)& (0+255),f,b
  2406  0003F2                     l9588:
  2407                           
  2408                           ; BSR set to: 1
  2409                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2410  0003F2  0101               	movlb	1	; () banked
  2411  0003F4  5128               	movf	__doprnt@exp& (0+255),w,b
  2412  0003F6  0800               	sublw	0
  2413  0003F8  EC44  F012         	call	_scale
  2414  0003FC  C0B3  F12E         	movff	?_scale,__doprnt@tmpval
  2415  000400  C0B4  F12F         	movff	?_scale+1,__doprnt@tmpval+1
  2416  000404  C0B5  F130         	movff	?_scale+2,__doprnt@tmpval+2
  2417                           
  2418                           ;doprnt.c: 847: tmpval.integ *= fval;
  2419  000408  C12E  F0A4         	movff	__doprnt@tmpval,___ftmul@f1
  2420  00040C  C12F  F0A5         	movff	__doprnt@tmpval+1,___ftmul@f1+1
  2421  000410  C130  F0A6         	movff	__doprnt@tmpval+2,___ftmul@f1+2
  2422  000414  C134  F0A7         	movff	__doprnt@fval,___ftmul@f2
  2423  000418  C135  F0A8         	movff	__doprnt@fval+1,___ftmul@f2+1
  2424  00041C  C136  F0A9         	movff	__doprnt@fval+2,___ftmul@f2+2
  2425  000420  EC2E  F01E         	call	___ftmul	;wreg free
  2426  000424  C0A4  F12E         	movff	?___ftmul,__doprnt@tmpval
  2427  000428  C0A5  F12F         	movff	?___ftmul+1,__doprnt@tmpval+1
  2428  00042C  C0A6  F130         	movff	?___ftmul+2,__doprnt@tmpval+2
  2429                           
  2430                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2431  000430  C12E  F090         	movff	__doprnt@tmpval,___ftge@ff1
  2432  000434  C12F  F091         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  2433  000438  C130  F092         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  2434  00043C  0E00               	movlw	0
  2435  00043E  0100               	movlb	0	; () banked
  2436  000440  6F93               	movwf	___ftge@ff2& (0+255),b
  2437  000442  0E80               	movlw	128
  2438  000444  0100               	movlb	0	; () banked
  2439  000446  6F94               	movwf	(___ftge@ff2+1)& (0+255),b
  2440  000448  0E3F               	movlw	63
  2441  00044A  0100               	movlb	0	; () banked
  2442  00044C  6F95               	movwf	(___ftge@ff2+2)& (0+255),b
  2443  00044E  ECD0  F023         	call	___ftge	;wreg free
  2444  000452  0100               	movlb	0	; () banked
  2445  000454  B0D8               	btfsc	status,0,c
  2446  000456  D005               	goto	l9596
  2447                           
  2448                           ; BSR set to: 0
  2449                           ;doprnt.c: 849: exp--;
  2450  000458  0101               	movlb	1	; () banked
  2451  00045A  0728               	decf	__doprnt@exp& (0+255),f,b
  2452  00045C  A0D8               	btfss	status,0,c
  2453  00045E  0729               	decf	(__doprnt@exp+1)& (0+255),f,b
  2454  000460  D017               	goto	l9600
  2455  000462                     l9596:
  2456                           
  2457                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2458  000462  C12E  F090         	movff	__doprnt@tmpval,___ftge@ff1
  2459  000466  C12F  F091         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  2460  00046A  C130  F092         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  2461  00046E  0E00               	movlw	0
  2462  000470  0100               	movlb	0	; () banked
  2463  000472  6F93               	movwf	___ftge@ff2& (0+255),b
  2464  000474  0E20               	movlw	32
  2465  000476  0100               	movlb	0	; () banked
  2466  000478  6F94               	movwf	(___ftge@ff2+1)& (0+255),b
  2467  00047A  0E41               	movlw	65
  2468  00047C  0100               	movlb	0	; () banked
  2469  00047E  6F95               	movwf	(___ftge@ff2+2)& (0+255),b
  2470  000480  ECD0  F023         	call	___ftge	;wreg free
  2471  000484  0100               	movlb	0	; () banked
  2472  000486  A0D8               	btfss	status,0,c
  2473  000488  D003               	goto	l9600
  2474                           
  2475                           ; BSR set to: 0
  2476                           ;doprnt.c: 851: exp++;
  2477  00048A  0101               	movlb	1	; () banked
  2478  00048C  4B28               	infsnz	__doprnt@exp& (0+255),f,b
  2479  00048E  2B29               	incf	(__doprnt@exp+1)& (0+255),f,b
  2480  000490                     l9600:
  2481                           
  2482                           ;doprnt.c: 852: }
  2483                           ;doprnt.c: 1112: if(prec <= 12)
  2484  000490  0101               	movlb	1	; () banked
  2485  000492  BF3A               	btfsc	(__doprnt@prec+1)& (0+255),7,b
  2486  000494  D008               	goto	l9602
  2487  000496  0101               	movlb	1	; () banked
  2488  000498  513A               	movf	(__doprnt@prec+1)& (0+255),w,b
  2489  00049A  E11D               	bnz	l9604
  2490  00049C  0E0D               	movlw	13
  2491  00049E  0101               	movlb	1	; () banked
  2492  0004A0  5D39               	subwf	__doprnt@prec& (0+255),w,b
  2493  0004A2  B0D8               	btfsc	status,0,c
  2494  0004A4  D018               	goto	l9604
  2495  0004A6                     l9602:
  2496                           
  2497                           ; BSR set to: 1
  2498                           ;doprnt.c: 1113: fval += fround(prec);
  2499  0004A6  C134  F107         	movff	__doprnt@fval,___ftadd@f1
  2500  0004AA  C135  F108         	movff	__doprnt@fval+1,___ftadd@f1+1
  2501  0004AE  C136  F109         	movff	__doprnt@fval+2,___ftadd@f1+2
  2502  0004B2  0101               	movlb	1	; () banked
  2503  0004B4  5139               	movf	__doprnt@prec& (0+255),w,b
  2504  0004B6  EC93  F016         	call	_fround
  2505  0004BA  C0B3  F10A         	movff	?_fround,___ftadd@f2
  2506  0004BE  C0B4  F10B         	movff	?_fround+1,___ftadd@f2+1
  2507  0004C2  C0B5  F10C         	movff	?_fround+2,___ftadd@f2+2
  2508  0004C6  ECE9  F017         	call	___ftadd	;wreg free
  2509  0004CA  C107  F134         	movff	?___ftadd,__doprnt@fval
  2510  0004CE  C108  F135         	movff	?___ftadd+1,__doprnt@fval+1
  2511  0004D2  C109  F136         	movff	?___ftadd+2,__doprnt@fval+2
  2512  0004D6                     l9604:
  2513                           
  2514                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2515  0004D6  0101               	movlb	1	; () banked
  2516  0004D8  BF29               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  2517  0004DA  D008               	goto	l9606
  2518  0004DC  0101               	movlb	1	; () banked
  2519  0004DE  5129               	movf	(__doprnt@exp+1)& (0+255),w,b
  2520  0004E0  E12A               	bnz	l9612
  2521  0004E2  0E0A               	movlw	10
  2522  0004E4  0101               	movlb	1	; () banked
  2523  0004E6  5D28               	subwf	__doprnt@exp& (0+255),w,b
  2524  0004E8  B0D8               	btfsc	status,0,c
  2525  0004EA  D025               	goto	l9612
  2526  0004EC                     l9606:
  2527                           
  2528                           ; BSR set to: 1
  2529  0004EC  0101               	movlb	1	; () banked
  2530  0004EE  5134               	movf	__doprnt@fval& (0+255),w,b
  2531  0004F0  0101               	movlb	1	; () banked
  2532  0004F2  1135               	iorwf	(__doprnt@fval+1)& (0+255),w,b
  2533  0004F4  0101               	movlb	1	; () banked
  2534  0004F6  1136               	iorwf	(__doprnt@fval+2)& (0+255),w,b
  2535  0004F8  B4D8               	btfsc	status,2,c
  2536  0004FA  D063               	goto	l9626
  2537                           
  2538                           ; BSR set to: 1
  2539  0004FC  C134  F104         	movff	__doprnt@fval,___fttol@f1
  2540  000500  C135  F105         	movff	__doprnt@fval+1,___fttol@f1+1
  2541  000504  C136  F106         	movff	__doprnt@fval+2,___fttol@f1+2
  2542  000508  EC83  F01F         	call	___fttol	;wreg free
  2543  00050C  0101               	movlb	1	; () banked
  2544  00050E  5104               	movf	?___fttol& (0+255),w,b
  2545  000510  0101               	movlb	1	; () banked
  2546  000512  1105               	iorwf	(?___fttol+1)& (0+255),w,b
  2547  000514  0101               	movlb	1	; () banked
  2548  000516  1106               	iorwf	(?___fttol+2)& (0+255),w,b
  2549  000518  0101               	movlb	1	; () banked
  2550  00051A  1107               	iorwf	(?___fttol+3)& (0+255),w,b
  2551  00051C  A4D8               	btfss	status,2,c
  2552  00051E  D051               	goto	l9626
  2553                           
  2554                           ; BSR set to: 1
  2555  000520  0101               	movlb	1	; () banked
  2556  000522  BF29               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  2557  000524  D04E               	goto	l9626
  2558  000526  0101               	movlb	1	; () banked
  2559  000528  5129               	movf	(__doprnt@exp+1)& (0+255),w,b
  2560  00052A  E105               	bnz	l9612
  2561  00052C  0E02               	movlw	2
  2562  00052E  0101               	movlb	1	; () banked
  2563  000530  5D28               	subwf	__doprnt@exp& (0+255),w,b
  2564  000532  A0D8               	btfss	status,0,c
  2565  000534  D046               	goto	l9626
  2566  000536                     l9612:
  2567                           
  2568                           ; BSR set to: 1
  2569                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  2570  000536  C12E  F090         	movff	__doprnt@tmpval,___ftge@ff1
  2571  00053A  C12F  F091         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  2572  00053E  C130  F092         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  2573  000542  0E70               	movlw	112
  2574  000544  0100               	movlb	0	; () banked
  2575  000546  6F93               	movwf	___ftge@ff2& (0+255),b
  2576  000548  0E89               	movlw	137
  2577  00054A  0100               	movlb	0	; () banked
  2578  00054C  6F94               	movwf	(___ftge@ff2+1)& (0+255),b
  2579  00054E  0E40               	movlw	64
  2580  000550  0100               	movlb	0	; () banked
  2581  000552  6F95               	movwf	(___ftge@ff2+2)& (0+255),b
  2582  000554  ECD0  F023         	call	___ftge	;wreg free
  2583  000558  0100               	movlb	0	; () banked
  2584  00055A  B0D8               	btfsc	status,0,c
  2585  00055C  D003               	goto	l9616
  2586                           
  2587                           ; BSR set to: 0
  2588                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2589  00055E  0101               	movlb	1	; () banked
  2590  000560  0EF7               	movlw	247
  2591  000562  D002               	goto	L1
  2592  000564                     l9616:
  2593                           
  2594                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2595  000564  0101               	movlb	1	; () banked
  2596  000566  0EF8               	movlw	248
  2597  000568                     L1:
  2598  000568  2728               	addwf	__doprnt@exp& (0+255),f,b
  2599  00056A  0EFF               	movlw	255
  2600  00056C  2329               	addwfc	(__doprnt@exp+1)& (0+255),f,b
  2601                           
  2602                           ; BSR set to: 1
  2603                           ;doprnt.c: 1124: }
  2604                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  2605                           
  2606                           ; BSR set to: 1
  2607  00056E  0101               	movlb	1	; () banked
  2608  000570  5128               	movf	__doprnt@exp& (0+255),w,b
  2609  000572  EC44  F012         	call	_scale
  2610  000576  C0B3  F12E         	movff	?_scale,__doprnt@tmpval
  2611  00057A  C0B4  F12F         	movff	?_scale+1,__doprnt@tmpval+1
  2612  00057E  C0B5  F130         	movff	?_scale+2,__doprnt@tmpval+2
  2613                           
  2614                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2615  000582  C134  F090         	movff	__doprnt@fval,__tdiv_to_l_@f1
  2616  000586  C135  F091         	movff	__doprnt@fval+1,__tdiv_to_l_@f1+1
  2617  00058A  C136  F092         	movff	__doprnt@fval+2,__tdiv_to_l_@f1+2
  2618  00058E  C12E  F093         	movff	__doprnt@tmpval,__tdiv_to_l_@f2
  2619  000592  C12F  F094         	movff	__doprnt@tmpval+1,__tdiv_to_l_@f2+1
  2620  000596  C130  F095         	movff	__doprnt@tmpval+2,__tdiv_to_l_@f2+2
  2621  00059A  ECE8  F01B         	call	__tdiv_to_l_	;wreg free
  2622  00059E  C090  F12A         	movff	?__tdiv_to_l_,__doprnt@val
  2623  0005A2  C091  F12B         	movff	?__tdiv_to_l_+1,__doprnt@val+1
  2624  0005A6  C092  F12C         	movff	?__tdiv_to_l_+2,__doprnt@val+2
  2625  0005AA  C093  F12D         	movff	?__tdiv_to_l_+3,__doprnt@val+3
  2626                           
  2627                           ;doprnt.c: 1129: fval = 0.0;
  2628  0005AE  0E00               	movlw	0
  2629  0005B0  0101               	movlb	1	; () banked
  2630  0005B2  6F34               	movwf	__doprnt@fval& (0+255),b
  2631  0005B4  0E00               	movlw	0
  2632  0005B6  0101               	movlb	1	; () banked
  2633  0005B8  6F35               	movwf	(__doprnt@fval+1)& (0+255),b
  2634  0005BA  0E00               	movlw	0
  2635  0005BC  0101               	movlb	1	; () banked
  2636  0005BE  6F36               	movwf	(__doprnt@fval+2)& (0+255),b
  2637                           
  2638                           ;doprnt.c: 1130: } else {
  2639  0005C0  D033               	goto	l9630
  2640  0005C2                     l9626:
  2641                           
  2642                           ; BSR set to: 1
  2643                           ;doprnt.c: 1131: val = (unsigned long)fval;
  2644  0005C2  C134  F104         	movff	__doprnt@fval,___fttol@f1
  2645  0005C6  C135  F105         	movff	__doprnt@fval+1,___fttol@f1+1
  2646  0005CA  C136  F106         	movff	__doprnt@fval+2,___fttol@f1+2
  2647  0005CE  EC83  F01F         	call	___fttol	;wreg free
  2648  0005D2  C104  F12A         	movff	?___fttol,__doprnt@val
  2649  0005D6  C105  F12B         	movff	?___fttol+1,__doprnt@val+1
  2650  0005DA  C106  F12C         	movff	?___fttol+2,__doprnt@val+2
  2651  0005DE  C107  F12D         	movff	?___fttol+3,__doprnt@val+3
  2652                           
  2653                           ;doprnt.c: 1132: fval -= (double)val;
  2654  0005E2  C134  F113         	movff	__doprnt@fval,___ftsub@f1
  2655  0005E6  C135  F114         	movff	__doprnt@fval+1,___ftsub@f1+1
  2656  0005EA  C136  F115         	movff	__doprnt@fval+2,___ftsub@f1+2
  2657  0005EE  C12A  F098         	movff	__doprnt@val,___lltoft@c
  2658  0005F2  C12B  F099         	movff	__doprnt@val+1,___lltoft@c+1
  2659  0005F6  C12C  F09A         	movff	__doprnt@val+2,___lltoft@c+2
  2660  0005FA  C12D  F09B         	movff	__doprnt@val+3,___lltoft@c+3
  2661  0005FE  ECB1  F026         	call	___lltoft	;wreg free
  2662  000602  C098  F116         	movff	?___lltoft,___ftsub@f2
  2663  000606  C099  F117         	movff	?___lltoft+1,___ftsub@f2+1
  2664  00060A  C09A  F118         	movff	?___lltoft+2,___ftsub@f2+2
  2665  00060E  EC20  F028         	call	___ftsub	;wreg free
  2666  000612  C113  F134         	movff	?___ftsub,__doprnt@fval
  2667  000616  C114  F135         	movff	?___ftsub+1,__doprnt@fval+1
  2668  00061A  C115  F136         	movff	?___ftsub+2,__doprnt@fval+2
  2669                           
  2670                           ;doprnt.c: 1133: exp = 0;
  2671  00061E  0E00               	movlw	0
  2672  000620  0101               	movlb	1	; () banked
  2673  000622  6F29               	movwf	(__doprnt@exp+1)& (0+255),b
  2674  000624  0E00               	movlw	0
  2675  000626  6F28               	movwf	__doprnt@exp& (0+255),b
  2676  000628                     l9630:
  2677                           
  2678                           ; BSR set to: 1
  2679                           ;doprnt.c: 1134: }
  2680                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2681  000628  0E01               	movlw	1
  2682  00062A  0101               	movlb	1	; () banked
  2683  00062C  6F3B               	movwf	__doprnt@c& (0+255),b
  2684  00062E                     l9632:
  2685                           
  2686                           ; BSR set to: 1
  2687  00062E  0E0A               	movlw	10
  2688  000630  0101               	movlb	1	; () banked
  2689  000632  193B               	xorwf	__doprnt@c& (0+255),w,b
  2690  000634  B4D8               	btfsc	status,2,c
  2691  000636  D01E               	goto	l9644
  2692                           
  2693                           ; BSR set to: 1
  2694                           ;doprnt.c: 1137: if(val < dpowers[c])
  2695                           
  2696                           ; BSR set to: 1
  2697                           
  2698                           ; BSR set to: 1
  2699  000638  0101               	movlb	1	; () banked
  2700  00063A  513B               	movf	__doprnt@c& (0+255),w,b
  2701  00063C  0D04               	mullw	4
  2702  00063E  0EF7               	movlw	low _dpowers
  2703  000640  24F3               	addwf	prodl,w,c
  2704  000642  6EF6               	movwf	tblptrl,c
  2705  000644  0E7E               	movlw	high _dpowers
  2706  000646  20F4               	addwfc	prodh,w,c
  2707  000648  6EF7               	movwf	tblptrh,c
  2708  00064A                     	if	0	;There are less than 3 active tblptr bytes
  2709  00064A                     	endif
  2710  00064A  0009               	tblrd		*+
  2711  00064C  50F5               	movf	tablat,w,c
  2712  00064E  0101               	movlb	1	; () banked
  2713  000650  5D2A               	subwf	__doprnt@val& (0+255),w,b
  2714  000652  0009               	tblrd		*+
  2715  000654  50F5               	movf	tablat,w,c
  2716  000656  0101               	movlb	1	; () banked
  2717  000658  592B               	subwfb	(__doprnt@val+1)& (0+255),w,b
  2718  00065A  0009               	tblrd		*+
  2719  00065C  50F5               	movf	tablat,w,c
  2720  00065E  0101               	movlb	1	; () banked
  2721  000660  592C               	subwfb	(__doprnt@val+2)& (0+255),w,b
  2722  000662  0009               	tblrd		*+
  2723  000664  50F5               	movf	tablat,w,c
  2724  000666  0101               	movlb	1	; () banked
  2725  000668  592D               	subwfb	(__doprnt@val+3)& (0+255),w,b
  2726  00066A  A0D8               	btfss	status,0,c
  2727  00066C  D003               	goto	l9644
  2728                           
  2729                           ; BSR set to: 1
  2730                           
  2731                           ; BSR set to: 1
  2732                           
  2733                           ; BSR set to: 1
  2734                           ;doprnt.c: 1138: break;
  2735  00066E  0101               	movlb	1	; () banked
  2736  000670  2B3B               	incf	__doprnt@c& (0+255),f,b
  2737  000672  D7DD               	goto	l9632
  2738  000674                     l9644:
  2739                           
  2740                           ; BSR set to: 1
  2741                           ;doprnt.c: 1142: width -= prec + c + exp;
  2742  000674  C13B  F11F         	movff	__doprnt@c,??__doprnt
  2743  000678  0101               	movlb	1	; () banked
  2744  00067A  6B20               	clrf	(??__doprnt+1)& (0+255),b
  2745  00067C  BF1F               	btfsc	??__doprnt& (0+255),7,b
  2746  00067E  0720               	decf	(??__doprnt+1)& (0+255),f,b
  2747  000680  0101               	movlb	1	; () banked
  2748  000682  5139               	movf	__doprnt@prec& (0+255),w,b
  2749  000684  0101               	movlb	1	; () banked
  2750  000686  271F               	addwf	??__doprnt& (0+255),f,b
  2751  000688  0101               	movlb	1	; () banked
  2752  00068A  513A               	movf	(__doprnt@prec+1)& (0+255),w,b
  2753  00068C  0101               	movlb	1	; () banked
  2754  00068E  2320               	addwfc	(??__doprnt+1)& (0+255),f,b
  2755  000690  0101               	movlb	1	; () banked
  2756  000692  5128               	movf	__doprnt@exp& (0+255),w,b
  2757  000694  0101               	movlb	1	; () banked
  2758  000696  271F               	addwf	??__doprnt& (0+255),f,b
  2759  000698  0101               	movlb	1	; () banked
  2760  00069A  5129               	movf	(__doprnt@exp+1)& (0+255),w,b
  2761  00069C  0101               	movlb	1	; () banked
  2762  00069E  2320               	addwfc	(??__doprnt+1)& (0+255),f,b
  2763  0006A0  0101               	movlb	1	; () banked
  2764  0006A2  511F               	movf	??__doprnt& (0+255),w,b
  2765  0006A4  0101               	movlb	1	; () banked
  2766  0006A6  5F32               	subwf	__doprnt@width& (0+255),f,b
  2767  0006A8  0101               	movlb	1	; () banked
  2768  0006AA  5120               	movf	(??__doprnt+1)& (0+255),w,b
  2769  0006AC  0101               	movlb	1	; () banked
  2770  0006AE  5B33               	subwfb	(__doprnt@width+1)& (0+255),f,b
  2771                           
  2772                           ;doprnt.c: 1143: if(
  2773                           ;doprnt.c: 1147: prec)
  2774  0006B0  0101               	movlb	1	; () banked
  2775  0006B2  5139               	movf	__doprnt@prec& (0+255),w,b
  2776  0006B4  0101               	movlb	1	; () banked
  2777  0006B6  113A               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  2778  0006B8  B4D8               	btfsc	status,2,c
  2779  0006BA  D004               	goto	l9648
  2780                           
  2781                           ; BSR set to: 1
  2782                           ;doprnt.c: 1148: width--;
  2783  0006BC  0101               	movlb	1	; () banked
  2784  0006BE  0732               	decf	__doprnt@width& (0+255),f,b
  2785  0006C0  A0D8               	btfss	status,0,c
  2786  0006C2  0733               	decf	(__doprnt@width+1)& (0+255),f,b
  2787  0006C4                     l9648:
  2788                           
  2789                           ; BSR set to: 1
  2790                           ;doprnt.c: 1149: if(flag & 0x03)
  2791  0006C4  0E03               	movlw	3
  2792  0006C6  0101               	movlb	1	; () banked
  2793  0006C8  1537               	andwf	__doprnt@flag& (0+255),w,b
  2794  0006CA  0101               	movlb	1	; () banked
  2795  0006CC  6F1F               	movwf	??__doprnt& (0+255),b
  2796  0006CE  0E00               	movlw	0
  2797  0006D0  0101               	movlb	1	; () banked
  2798  0006D2  1538               	andwf	(__doprnt@flag+1)& (0+255),w,b
  2799  0006D4  0101               	movlb	1	; () banked
  2800  0006D6  6F20               	movwf	(??__doprnt+1)& (0+255),b
  2801  0006D8  0101               	movlb	1	; () banked
  2802  0006DA  511F               	movf	??__doprnt& (0+255),w,b
  2803  0006DC  0101               	movlb	1	; () banked
  2804  0006DE  1120               	iorwf	(??__doprnt+1)& (0+255),w,b
  2805  0006E0  B4D8               	btfsc	status,2,c
  2806  0006E2  D004               	goto	l9652
  2807                           
  2808                           ; BSR set to: 1
  2809                           ;doprnt.c: 1150: width--;
  2810  0006E4  0101               	movlb	1	; () banked
  2811  0006E6  0732               	decf	__doprnt@width& (0+255),f,b
  2812  0006E8  A0D8               	btfss	status,0,c
  2813  0006EA  0733               	decf	(__doprnt@width+1)& (0+255),f,b
  2814  0006EC                     l9652:
  2815                           
  2816                           ; BSR set to: 1
  2817                           ;doprnt.c: 1153: if(flag & 0x04) {
  2818  0006EC  0101               	movlb	1	; () banked
  2819  0006EE  A537               	btfss	__doprnt@flag& (0+255),2,b
  2820  0006F0  D0C0               	goto	l9686
  2821                           
  2822                           ; BSR set to: 1
  2823                           ;doprnt.c: 1157: if(flag & 0x03)
  2824  0006F2  0E03               	movlw	3
  2825  0006F4  0101               	movlb	1	; () banked
  2826  0006F6  1537               	andwf	__doprnt@flag& (0+255),w,b
  2827  0006F8  0101               	movlb	1	; () banked
  2828  0006FA  6F1F               	movwf	??__doprnt& (0+255),b
  2829  0006FC  0E00               	movlw	0
  2830  0006FE  0101               	movlb	1	; () banked
  2831  000700  1538               	andwf	(__doprnt@flag+1)& (0+255),w,b
  2832  000702  0101               	movlb	1	; () banked
  2833  000704  6F20               	movwf	(??__doprnt+1)& (0+255),b
  2834  000706  0101               	movlb	1	; () banked
  2835  000708  511F               	movf	??__doprnt& (0+255),w,b
  2836  00070A  0101               	movlb	1	; () banked
  2837  00070C  1120               	iorwf	(??__doprnt+1)& (0+255),w,b
  2838  00070E  B4D8               	btfsc	status,2,c
  2839  000710  D06D               	goto	l9674
  2840                           
  2841                           ; BSR set to: 1
  2842                           ;doprnt.c: 1159: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  2843  000712  0101               	movlb	1	; () banked
  2844  000714  EE20 F002          	lfsr	2,2
  2845  000718  5119               	movf	__doprnt@pb& (0+255),w,b
  2846  00071A  26D9               	addwf	fsr2l,f,c
  2847  00071C  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  2848  00071E  22DA               	addwfc	fsr2h,f,c
  2849  000720  50DE               	movf	postinc2,w,c
  2850  000722  10DE               	iorwf	postinc2,w,c
  2851  000724  B4D8               	btfsc	status,2,c
  2852  000726  D014               	goto	l9660
  2853                           
  2854                           ; BSR set to: 1
  2855  000728  0101               	movlb	1	; () banked
  2856  00072A  EE20 F002          	lfsr	2,2
  2857  00072E  5119               	movf	__doprnt@pb& (0+255),w,b
  2858  000730  26D9               	addwf	fsr2l,f,c
  2859  000732  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  2860  000734  22DA               	addwfc	fsr2h,f,c
  2861  000736  D801               	call	u16228
  2862  000738  D059               	goto	l9674
  2863  00073A                     u16228:
  2864  00073A  0005               	push	
  2865  00073C  6EFA               	movwf	pclath,c
  2866  00073E  50DE               	movf	postinc2,w,c
  2867  000740  6EFD               	movwf	tosl,c
  2868  000742  50DE               	movf	postinc2,w,c
  2869  000744  6EFE               	movwf	tosh,c
  2870  000746  50F8               	movf	tblptru,w,c
  2871  000748  6EFF               	movwf	tosu,c
  2872  00074A  50FA               	movf	pclath,w,c
  2873  00074C  0E2D               	movlw	45
  2874  00074E  0012               	return		;indir
  2875  000750                     l9660:
  2876  000750  C119  FFD9         	movff	__doprnt@pb,fsr2l
  2877  000754  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  2878  000758  CFDE F11F          	movff	postinc2,??__doprnt
  2879  00075C  CFDD F120          	movff	postdec2,??__doprnt+1
  2880  000760  C11F  FFD9         	movff	??__doprnt,fsr2l
  2881  000764  C120  FFDA         	movff	??__doprnt+1,fsr2h
  2882  000768  0E2D               	movlw	45
  2883  00076A  6EDF               	movwf	indf2,c
  2884  00076C  C119  FFD9         	movff	__doprnt@pb,fsr2l
  2885  000770  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  2886  000774  2ADE               	incf	postinc2,f,c
  2887  000776  0E00               	movlw	0
  2888  000778  22DD               	addwfc	postdec2,f,c
  2889                           
  2890                           ;doprnt.c: 1168: while(width > 0) {
  2891  00077A  D038               	goto	l9674
  2892  00077C                     l9664:
  2893                           
  2894                           ;doprnt.c: 1169: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  2895  00077C  0101               	movlb	1	; () banked
  2896  00077E  EE20 F002          	lfsr	2,2
  2897  000782  5119               	movf	__doprnt@pb& (0+255),w,b
  2898  000784  26D9               	addwf	fsr2l,f,c
  2899  000786  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  2900  000788  22DA               	addwfc	fsr2h,f,c
  2901  00078A  50DE               	movf	postinc2,w,c
  2902  00078C  10DE               	iorwf	postinc2,w,c
  2903  00078E  B4D8               	btfsc	status,2,c
  2904  000790  D014               	goto	l9668
  2905                           
  2906                           ; BSR set to: 1
  2907  000792  0101               	movlb	1	; () banked
  2908  000794  EE20 F002          	lfsr	2,2
  2909  000798  5119               	movf	__doprnt@pb& (0+255),w,b
  2910  00079A  26D9               	addwf	fsr2l,f,c
  2911  00079C  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  2912  00079E  22DA               	addwfc	fsr2h,f,c
  2913  0007A0  D801               	call	u16248
  2914  0007A2  D020               	goto	l9672
  2915  0007A4                     u16248:
  2916  0007A4  0005               	push	
  2917  0007A6  6EFA               	movwf	pclath,c
  2918  0007A8  50DE               	movf	postinc2,w,c
  2919  0007AA  6EFD               	movwf	tosl,c
  2920  0007AC  50DE               	movf	postinc2,w,c
  2921  0007AE  6EFE               	movwf	tosh,c
  2922  0007B0  50F8               	movf	tblptru,w,c
  2923  0007B2  6EFF               	movwf	tosu,c
  2924  0007B4  50FA               	movf	pclath,w,c
  2925  0007B6  0E30               	movlw	48
  2926  0007B8  0012               	return		;indir
  2927  0007BA                     l9668:
  2928  0007BA  C119  FFD9         	movff	__doprnt@pb,fsr2l
  2929  0007BE  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  2930  0007C2  CFDE F11F          	movff	postinc2,??__doprnt
  2931  0007C6  CFDD F120          	movff	postdec2,??__doprnt+1
  2932  0007CA  C11F  FFD9         	movff	??__doprnt,fsr2l
  2933  0007CE  C120  FFDA         	movff	??__doprnt+1,fsr2h
  2934  0007D2  0E30               	movlw	48
  2935  0007D4  6EDF               	movwf	indf2,c
  2936  0007D6  C119  FFD9         	movff	__doprnt@pb,fsr2l
  2937  0007DA  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  2938  0007DE  2ADE               	incf	postinc2,f,c
  2939  0007E0  0E00               	movlw	0
  2940  0007E2  22DD               	addwfc	postdec2,f,c
  2941  0007E4                     l9672:
  2942                           
  2943                           ;doprnt.c: 1170: width--;
  2944  0007E4  0101               	movlb	1	; () banked
  2945  0007E6  0732               	decf	__doprnt@width& (0+255),f,b
  2946  0007E8  A0D8               	btfss	status,0,c
  2947  0007EA  0733               	decf	(__doprnt@width+1)& (0+255),f,b
  2948  0007EC                     l9674:
  2949  0007EC  0101               	movlb	1	; () banked
  2950  0007EE  BF33               	btfsc	(__doprnt@width+1)& (0+255),7,b
  2951  0007F0  D103               	goto	l9708
  2952  0007F2  0101               	movlb	1	; () banked
  2953  0007F4  5133               	movf	(__doprnt@width+1)& (0+255),w,b
  2954  0007F6  E1C2               	bnz	l9664
  2955  0007F8  0101               	movlb	1	; () banked
  2956  0007FA  0532               	decf	__doprnt@width& (0+255),w,b
  2957  0007FC  A0D8               	btfss	status,0,c
  2958  0007FE  D0FC               	goto	l9708
  2959  000800  D7BD               	goto	l9664
  2960  000802                     l9676:
  2961                           
  2962                           ; BSR set to: 1
  2963                           ;doprnt.c: 1181: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  2964  000802  0101               	movlb	1	; () banked
  2965  000804  EE20 F002          	lfsr	2,2
  2966  000808  5119               	movf	__doprnt@pb& (0+255),w,b
  2967  00080A  26D9               	addwf	fsr2l,f,c
  2968  00080C  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  2969  00080E  22DA               	addwfc	fsr2h,f,c
  2970  000810  50DE               	movf	postinc2,w,c
  2971  000812  10DE               	iorwf	postinc2,w,c
  2972  000814  B4D8               	btfsc	status,2,c
  2973  000816  D014               	goto	l9680
  2974                           
  2975                           ; BSR set to: 1
  2976  000818  0101               	movlb	1	; () banked
  2977  00081A  EE20 F002          	lfsr	2,2
  2978  00081E  5119               	movf	__doprnt@pb& (0+255),w,b
  2979  000820  26D9               	addwf	fsr2l,f,c
  2980  000822  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  2981  000824  22DA               	addwfc	fsr2h,f,c
  2982  000826  D801               	call	u16278
  2983  000828  D020               	goto	l9684
  2984  00082A                     u16278:
  2985  00082A  0005               	push	
  2986  00082C  6EFA               	movwf	pclath,c
  2987  00082E  50DE               	movf	postinc2,w,c
  2988  000830  6EFD               	movwf	tosl,c
  2989  000832  50DE               	movf	postinc2,w,c
  2990  000834  6EFE               	movwf	tosh,c
  2991  000836  50F8               	movf	tblptru,w,c
  2992  000838  6EFF               	movwf	tosu,c
  2993  00083A  50FA               	movf	pclath,w,c
  2994  00083C  0E20               	movlw	32
  2995  00083E  0012               	return		;indir
  2996  000840                     l9680:
  2997  000840  C119  FFD9         	movff	__doprnt@pb,fsr2l
  2998  000844  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  2999  000848  CFDE F11F          	movff	postinc2,??__doprnt
  3000  00084C  CFDD F120          	movff	postdec2,??__doprnt+1
  3001  000850  C11F  FFD9         	movff	??__doprnt,fsr2l
  3002  000854  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3003  000858  0E20               	movlw	32
  3004  00085A  6EDF               	movwf	indf2,c
  3005  00085C  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3006  000860  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3007  000864  2ADE               	incf	postinc2,f,c
  3008  000866  0E00               	movlw	0
  3009  000868  22DD               	addwfc	postdec2,f,c
  3010  00086A                     l9684:
  3011                           
  3012                           ;doprnt.c: 1182: width--;
  3013  00086A  0101               	movlb	1	; () banked
  3014  00086C  0732               	decf	__doprnt@width& (0+255),f,b
  3015  00086E  A0D8               	btfss	status,0,c
  3016  000870  0733               	decf	(__doprnt@width+1)& (0+255),f,b
  3017  000872                     l9686:
  3018                           
  3019                           ; BSR set to: 1
  3020  000872  0101               	movlb	1	; () banked
  3021  000874  BF33               	btfsc	(__doprnt@width+1)& (0+255),7,b
  3022  000876  D007               	goto	l9688
  3023  000878  0101               	movlb	1	; () banked
  3024  00087A  5133               	movf	(__doprnt@width+1)& (0+255),w,b
  3025  00087C  E1C2               	bnz	l9676
  3026  00087E  0101               	movlb	1	; () banked
  3027  000880  0532               	decf	__doprnt@width& (0+255),w,b
  3028  000882  B0D8               	btfsc	status,0,c
  3029  000884  D7BE               	goto	l9676
  3030  000886                     l9688:
  3031                           
  3032                           ; BSR set to: 1
  3033                           ;doprnt.c: 1183: }
  3034                           ;doprnt.c: 1188: if(flag & 0x03)
  3035  000886  0E03               	movlw	3
  3036  000888  0101               	movlb	1	; () banked
  3037  00088A  1537               	andwf	__doprnt@flag& (0+255),w,b
  3038  00088C  0101               	movlb	1	; () banked
  3039  00088E  6F1F               	movwf	??__doprnt& (0+255),b
  3040  000890  0E00               	movlw	0
  3041  000892  0101               	movlb	1	; () banked
  3042  000894  1538               	andwf	(__doprnt@flag+1)& (0+255),w,b
  3043  000896  0101               	movlb	1	; () banked
  3044  000898  6F20               	movwf	(??__doprnt+1)& (0+255),b
  3045  00089A  0101               	movlb	1	; () banked
  3046  00089C  511F               	movf	??__doprnt& (0+255),w,b
  3047  00089E  0101               	movlb	1	; () banked
  3048  0008A0  1120               	iorwf	(??__doprnt+1)& (0+255),w,b
  3049  0008A2  B4D8               	btfsc	status,2,c
  3050  0008A4  D0A9               	goto	l9708
  3051                           
  3052                           ; BSR set to: 1
  3053                           ;doprnt.c: 1190: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  3054  0008A6  0101               	movlb	1	; () banked
  3055  0008A8  EE20 F002          	lfsr	2,2
  3056  0008AC  5119               	movf	__doprnt@pb& (0+255),w,b
  3057  0008AE  26D9               	addwf	fsr2l,f,c
  3058  0008B0  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3059  0008B2  22DA               	addwfc	fsr2h,f,c
  3060  0008B4  50DE               	movf	postinc2,w,c
  3061  0008B6  10DE               	iorwf	postinc2,w,c
  3062  0008B8  B4D8               	btfsc	status,2,c
  3063  0008BA  D014               	goto	l9694
  3064                           
  3065                           ; BSR set to: 1
  3066  0008BC  0101               	movlb	1	; () banked
  3067  0008BE  EE20 F002          	lfsr	2,2
  3068  0008C2  5119               	movf	__doprnt@pb& (0+255),w,b
  3069  0008C4  26D9               	addwf	fsr2l,f,c
  3070  0008C6  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3071  0008C8  22DA               	addwfc	fsr2h,f,c
  3072  0008CA  D801               	call	u16318
  3073  0008CC  D095               	goto	l9708
  3074  0008CE                     u16318:
  3075  0008CE  0005               	push	
  3076  0008D0  6EFA               	movwf	pclath,c
  3077  0008D2  50DE               	movf	postinc2,w,c
  3078  0008D4  6EFD               	movwf	tosl,c
  3079  0008D6  50DE               	movf	postinc2,w,c
  3080  0008D8  6EFE               	movwf	tosh,c
  3081  0008DA  50F8               	movf	tblptru,w,c
  3082  0008DC  6EFF               	movwf	tosu,c
  3083  0008DE  50FA               	movf	pclath,w,c
  3084  0008E0  0E2D               	movlw	45
  3085  0008E2  0012               	return		;indir
  3086  0008E4                     l9694:
  3087  0008E4  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3088  0008E8  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3089  0008EC  CFDE F11F          	movff	postinc2,??__doprnt
  3090  0008F0  CFDD F120          	movff	postdec2,??__doprnt+1
  3091  0008F4  C11F  FFD9         	movff	??__doprnt,fsr2l
  3092  0008F8  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3093  0008FC  0E2D               	movlw	45
  3094  0008FE  D07A               	goto	L2
  3095  000900                     l9696:
  3096  000900  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3097  000904  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3098  000908  2ADE               	incf	postinc2,f,c
  3099  00090A  0E00               	movlw	0
  3100  00090C  22DD               	addwfc	postdec2,f,c
  3101                           
  3102                           ;doprnt.c: 1195: }
  3103                           ;doprnt.c: 1196: while(c--) {
  3104  00090E  D074               	goto	l9708
  3105  000910                     l9698:
  3106                           
  3107                           ;doprnt.c: 1200: {
  3108                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3109  000910  C12A  F090         	movff	__doprnt@val,___lldiv@dividend
  3110  000914  C12B  F091         	movff	__doprnt@val+1,___lldiv@dividend+1
  3111  000918  C12C  F092         	movff	__doprnt@val+2,___lldiv@dividend+2
  3112  00091C  C12D  F093         	movff	__doprnt@val+3,___lldiv@dividend+3
  3113  000920  0101               	movlb	1	; () banked
  3114  000922  513B               	movf	__doprnt@c& (0+255),w,b
  3115  000924  0D04               	mullw	4
  3116  000926  0EF7               	movlw	low _dpowers
  3117  000928  24F3               	addwf	prodl,w,c
  3118  00092A  6EF6               	movwf	tblptrl,c
  3119  00092C  0E7E               	movlw	high _dpowers
  3120  00092E  20F4               	addwfc	prodh,w,c
  3121  000930  6EF7               	movwf	tblptrh,c
  3122  000932                     	if	0	;There are less than 3 active tblptr bytes
  3123  000932                     	endif
  3124  000932  0009               	tblrd		*+
  3125  000934  CFF5 F094          	movff	tablat,___lldiv@divisor
  3126  000938  0009               	tblrd		*+
  3127  00093A  CFF5 F095          	movff	tablat,___lldiv@divisor+1
  3128  00093E  0009               	tblrd		*+
  3129  000940  CFF5 F096          	movff	tablat,___lldiv@divisor+2
  3130  000944  000A               	tblrd		*-
  3131  000946  CFF5 F097          	movff	tablat,___lldiv@divisor+3
  3132  00094A  EC93  F024         	call	___lldiv
  3133  00094E  C090  F12E         	movff	?___lldiv,__doprnt@tmpval
  3134  000952  C091  F12F         	movff	?___lldiv+1,__doprnt@tmpval+1
  3135  000956  C092  F130         	movff	?___lldiv+2,__doprnt@tmpval+2
  3136  00095A  C093  F131         	movff	?___lldiv+3,__doprnt@tmpval+3
  3137                           
  3138                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3139  00095E  C12E  F09D         	movff	__doprnt@tmpval,___llmod@dividend
  3140  000962  C12F  F09E         	movff	__doprnt@tmpval+1,___llmod@dividend+1
  3141  000966  C130  F09F         	movff	__doprnt@tmpval+2,___llmod@dividend+2
  3142  00096A  C131  F0A0         	movff	__doprnt@tmpval+3,___llmod@dividend+3
  3143  00096E  0E0A               	movlw	10
  3144  000970  0100               	movlb	0	; () banked
  3145  000972  6FA1               	movwf	___llmod@divisor& (0+255),b
  3146  000974  0E00               	movlw	0
  3147  000976  6FA2               	movwf	(___llmod@divisor+1)& (0+255),b
  3148  000978  0E00               	movlw	0
  3149  00097A  6FA3               	movwf	(___llmod@divisor+2)& (0+255),b
  3150  00097C  0E00               	movlw	0
  3151  00097E  6FA4               	movwf	(___llmod@divisor+3)& (0+255),b
  3152  000980  EC99  F025         	call	___llmod	;wreg free
  3153  000984  C09D  F12E         	movff	?___llmod,__doprnt@tmpval
  3154  000988  C09E  F12F         	movff	?___llmod+1,__doprnt@tmpval+1
  3155  00098C  C09F  F130         	movff	?___llmod+2,__doprnt@tmpval+2
  3156  000990  C0A0  F131         	movff	?___llmod+3,__doprnt@tmpval+3
  3157                           
  3158                           ;doprnt.c: 1203: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
  3159  000994  0101               	movlb	1	; () banked
  3160  000996  EE20 F002          	lfsr	2,2
  3161  00099A  5119               	movf	__doprnt@pb& (0+255),w,b
  3162  00099C  26D9               	addwf	fsr2l,f,c
  3163  00099E  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3164  0009A0  22DA               	addwfc	fsr2h,f,c
  3165  0009A2  50DE               	movf	postinc2,w,c
  3166  0009A4  10DE               	iorwf	postinc2,w,c
  3167  0009A6  B4D8               	btfsc	status,2,c
  3168  0009A8  D016               	goto	l9706
  3169                           
  3170                           ; BSR set to: 1
  3171  0009AA  0101               	movlb	1	; () banked
  3172  0009AC  EE20 F002          	lfsr	2,2
  3173  0009B0  5119               	movf	__doprnt@pb& (0+255),w,b
  3174  0009B2  26D9               	addwf	fsr2l,f,c
  3175  0009B4  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3176  0009B6  22DA               	addwfc	fsr2h,f,c
  3177  0009B8  D801               	call	u16338
  3178  0009BA  D01E               	goto	l9708
  3179  0009BC                     u16338:
  3180  0009BC  0005               	push	
  3181  0009BE  6EFA               	movwf	pclath,c
  3182  0009C0  50DE               	movf	postinc2,w,c
  3183  0009C2  6EFD               	movwf	tosl,c
  3184  0009C4  50DE               	movf	postinc2,w,c
  3185  0009C6  6EFE               	movwf	tosh,c
  3186  0009C8  50F8               	movf	tblptru,w,c
  3187  0009CA  6EFF               	movwf	tosu,c
  3188  0009CC  50FA               	movf	pclath,w,c
  3189  0009CE  0101               	movlb	1	; () banked
  3190  0009D0  512E               	movf	__doprnt@tmpval& (0+255),w,b
  3191  0009D2  0F30               	addlw	48
  3192  0009D4  0012               	return		;indir
  3193  0009D6                     l9706:
  3194  0009D6  0101               	movlb	1	; () banked
  3195  0009D8  512E               	movf	__doprnt@tmpval& (0+255),w,b
  3196  0009DA  0F30               	addlw	48
  3197  0009DC  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3198  0009E0  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3199  0009E4  CFDE F11F          	movff	postinc2,??__doprnt
  3200  0009E8  CFDD F120          	movff	postdec2,??__doprnt+1
  3201  0009EC  C11F  FFD9         	movff	??__doprnt,fsr2l
  3202  0009F0  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3203  0009F4                     L2:
  3204  0009F4  6EDF               	movwf	indf2,c
  3205  0009F6  D784               	goto	l9696
  3206  0009F8                     l9708:
  3207  0009F8  0101               	movlb	1	; () banked
  3208  0009FA  073B               	decf	__doprnt@c& (0+255),f,b
  3209  0009FC  0101               	movlb	1	; () banked
  3210  0009FE  293B               	incf	__doprnt@c& (0+255),w,b
  3211  000A00  B4D8               	btfsc	status,2,c
  3212  000A02  D039               	goto	l9720
  3213  000A04  D785               	goto	l9698
  3214  000A06                     l9710:
  3215                           
  3216                           ; BSR set to: 1
  3217                           ;doprnt.c: 1208: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  3218  000A06  0101               	movlb	1	; () banked
  3219  000A08  EE20 F002          	lfsr	2,2
  3220  000A0C  5119               	movf	__doprnt@pb& (0+255),w,b
  3221  000A0E  26D9               	addwf	fsr2l,f,c
  3222  000A10  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3223  000A12  22DA               	addwfc	fsr2h,f,c
  3224  000A14  50DE               	movf	postinc2,w,c
  3225  000A16  10DE               	iorwf	postinc2,w,c
  3226  000A18  B4D8               	btfsc	status,2,c
  3227  000A1A  D014               	goto	l9714
  3228                           
  3229                           ; BSR set to: 1
  3230  000A1C  0101               	movlb	1	; () banked
  3231  000A1E  EE20 F002          	lfsr	2,2
  3232  000A22  5119               	movf	__doprnt@pb& (0+255),w,b
  3233  000A24  26D9               	addwf	fsr2l,f,c
  3234  000A26  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3235  000A28  22DA               	addwfc	fsr2h,f,c
  3236  000A2A  D801               	call	u16368
  3237  000A2C  D020               	goto	l9718
  3238  000A2E                     u16368:
  3239  000A2E  0005               	push	
  3240  000A30  6EFA               	movwf	pclath,c
  3241  000A32  50DE               	movf	postinc2,w,c
  3242  000A34  6EFD               	movwf	tosl,c
  3243  000A36  50DE               	movf	postinc2,w,c
  3244  000A38  6EFE               	movwf	tosh,c
  3245  000A3A  50F8               	movf	tblptru,w,c
  3246  000A3C  6EFF               	movwf	tosu,c
  3247  000A3E  50FA               	movf	pclath,w,c
  3248  000A40  0E30               	movlw	48
  3249  000A42  0012               	return		;indir
  3250  000A44                     l9714:
  3251  000A44  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3252  000A48  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3253  000A4C  CFDE F11F          	movff	postinc2,??__doprnt
  3254  000A50  CFDD F120          	movff	postdec2,??__doprnt+1
  3255  000A54  C11F  FFD9         	movff	??__doprnt,fsr2l
  3256  000A58  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3257  000A5C  0E30               	movlw	48
  3258  000A5E  6EDF               	movwf	indf2,c
  3259  000A60  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3260  000A64  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3261  000A68  2ADE               	incf	postinc2,f,c
  3262  000A6A  0E00               	movlw	0
  3263  000A6C  22DD               	addwfc	postdec2,f,c
  3264  000A6E                     l9718:
  3265                           
  3266                           ;doprnt.c: 1209: exp--;
  3267  000A6E  0101               	movlb	1	; () banked
  3268  000A70  0728               	decf	__doprnt@exp& (0+255),f,b
  3269  000A72  A0D8               	btfss	status,0,c
  3270  000A74  0729               	decf	(__doprnt@exp+1)& (0+255),f,b
  3271  000A76                     l9720:
  3272                           
  3273                           ; BSR set to: 1
  3274  000A76  0101               	movlb	1	; () banked
  3275  000A78  BF29               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  3276  000A7A  D007               	goto	l9722
  3277  000A7C  0101               	movlb	1	; () banked
  3278  000A7E  5129               	movf	(__doprnt@exp+1)& (0+255),w,b
  3279  000A80  E1C2               	bnz	l9710
  3280  000A82  0101               	movlb	1	; () banked
  3281  000A84  0528               	decf	__doprnt@exp& (0+255),w,b
  3282  000A86  B0D8               	btfsc	status,0,c
  3283  000A88  D7BE               	goto	l9710
  3284  000A8A                     l9722:
  3285                           
  3286                           ; BSR set to: 1
  3287                           ;doprnt.c: 1210: }
  3288                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3289  000A8A  0101               	movlb	1	; () banked
  3290  000A8C  BF3A               	btfsc	(__doprnt@prec+1)& (0+255),7,b
  3291  000A8E  D00C               	goto	l466
  3292  000A90  0101               	movlb	1	; () banked
  3293  000A92  513A               	movf	(__doprnt@prec+1)& (0+255),w,b
  3294  000A94  E105               	bnz	u16380
  3295  000A96  0E09               	movlw	9
  3296  000A98  0101               	movlb	1	; () banked
  3297  000A9A  5D39               	subwf	__doprnt@prec& (0+255),w,b
  3298  000A9C  A0D8               	btfss	status,0,c
  3299  000A9E  D004               	goto	l466
  3300  000AA0                     u16380:
  3301                           
  3302                           ; BSR set to: 1
  3303                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3304  000AA0  0E08               	movlw	8
  3305  000AA2  0101               	movlb	1	; () banked
  3306  000AA4  6F3B               	movwf	__doprnt@c& (0+255),b
  3307  000AA6  D002               	goto	l9726
  3308  000AA8                     l466:
  3309                           
  3310                           ; BSR set to: 1
  3311                           ;doprnt.c: 1213: else
  3312                           ;doprnt.c: 1214: c = prec;
  3313  000AA8  C139  F13B         	movff	__doprnt@prec,__doprnt@c
  3314  000AAC                     l9726:
  3315                           
  3316                           ; BSR set to: 1
  3317                           ;doprnt.c: 1215: prec -= c;
  3318  000AAC  0101               	movlb	1	; () banked
  3319  000AAE  513B               	movf	__doprnt@c& (0+255),w,b
  3320  000AB0  0101               	movlb	1	; () banked
  3321  000AB2  5F39               	subwf	__doprnt@prec& (0+255),f,b
  3322  000AB4  0E00               	movlw	0
  3323  000AB6  0101               	movlb	1	; () banked
  3324  000AB8  BF3B               	btfsc	__doprnt@c& (0+255),7,b
  3325  000ABA  0EFF               	movlw	255
  3326  000ABC  0101               	movlb	1	; () banked
  3327  000ABE  5B3A               	subwfb	(__doprnt@prec+1)& (0+255),f,b
  3328                           
  3329                           ; BSR set to: 1
  3330                           ;doprnt.c: 1219: if(c)
  3331  000AC0  0101               	movlb	1	; () banked
  3332  000AC2  513B               	movf	__doprnt@c& (0+255),w,b
  3333  000AC4  0101               	movlb	1	; () banked
  3334  000AC6  B4D8               	btfsc	status,2,c
  3335  000AC8  D034               	goto	l9738
  3336                           
  3337                           ; BSR set to: 1
  3338                           ;doprnt.c: 1221: if(pb->func) (pb->func('.')); else ((*pb->ptr++ = '.'));
  3339  000ACA  0101               	movlb	1	; () banked
  3340  000ACC  EE20 F002          	lfsr	2,2
  3341  000AD0  5119               	movf	__doprnt@pb& (0+255),w,b
  3342  000AD2  26D9               	addwf	fsr2l,f,c
  3343  000AD4  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3344  000AD6  22DA               	addwfc	fsr2h,f,c
  3345  000AD8  50DE               	movf	postinc2,w,c
  3346  000ADA  10DE               	iorwf	postinc2,w,c
  3347  000ADC  B4D8               	btfsc	status,2,c
  3348  000ADE  D014               	goto	l9734
  3349                           
  3350                           ; BSR set to: 1
  3351  000AE0  0101               	movlb	1	; () banked
  3352  000AE2  EE20 F002          	lfsr	2,2
  3353  000AE6  5119               	movf	__doprnt@pb& (0+255),w,b
  3354  000AE8  26D9               	addwf	fsr2l,f,c
  3355  000AEA  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3356  000AEC  22DA               	addwfc	fsr2h,f,c
  3357  000AEE  D801               	call	u16418
  3358  000AF0  D020               	goto	l9738
  3359  000AF2                     u16418:
  3360  000AF2  0005               	push	
  3361  000AF4  6EFA               	movwf	pclath,c
  3362  000AF6  50DE               	movf	postinc2,w,c
  3363  000AF8  6EFD               	movwf	tosl,c
  3364  000AFA  50DE               	movf	postinc2,w,c
  3365  000AFC  6EFE               	movwf	tosh,c
  3366  000AFE  50F8               	movf	tblptru,w,c
  3367  000B00  6EFF               	movwf	tosu,c
  3368  000B02  50FA               	movf	pclath,w,c
  3369  000B04  0E2E               	movlw	46
  3370  000B06  0012               	return		;indir
  3371  000B08                     l9734:
  3372  000B08  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3373  000B0C  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3374  000B10  CFDE F11F          	movff	postinc2,??__doprnt
  3375  000B14  CFDD F120          	movff	postdec2,??__doprnt+1
  3376  000B18  C11F  FFD9         	movff	??__doprnt,fsr2l
  3377  000B1C  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3378  000B20  0E2E               	movlw	46
  3379  000B22  6EDF               	movwf	indf2,c
  3380  000B24  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3381  000B28  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3382  000B2C  2ADE               	incf	postinc2,f,c
  3383  000B2E  0E00               	movlw	0
  3384  000B30  22DD               	addwfc	postdec2,f,c
  3385  000B32                     l9738:
  3386                           
  3387                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3388  000B32  0101               	movlb	1	; () banked
  3389  000B34  513B               	movf	__doprnt@c& (0+255),w,b
  3390  000B36  EC44  F012         	call	_scale
  3391  000B3A  C0B3  F125         	movff	?_scale,__doprnt$1745
  3392  000B3E  C0B4  F126         	movff	?_scale+1,__doprnt$1745+1
  3393  000B42  C0B5  F127         	movff	?_scale+2,__doprnt$1745+2
  3394                           
  3395                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3396  000B46  C134  F0A7         	movff	__doprnt@fval,___ftmul@f2
  3397  000B4A  C135  F0A8         	movff	__doprnt@fval+1,___ftmul@f2+1
  3398  000B4E  C136  F0A9         	movff	__doprnt@fval+2,___ftmul@f2+2
  3399  000B52  C125  F0A4         	movff	__doprnt$1745,___ftmul@f1
  3400  000B56  C126  F0A5         	movff	__doprnt$1745+1,___ftmul@f1+1
  3401  000B5A  C127  F0A6         	movff	__doprnt$1745+2,___ftmul@f1+2
  3402  000B5E  EC2E  F01E         	call	___ftmul	;wreg free
  3403  000B62  C0A4  F104         	movff	?___ftmul,___fttol@f1
  3404  000B66  C0A5  F105         	movff	?___ftmul+1,___fttol@f1+1
  3405  000B6A  C0A6  F106         	movff	?___ftmul+2,___fttol@f1+2
  3406  000B6E  EC83  F01F         	call	___fttol	;wreg free
  3407  000B72  C104  F12A         	movff	?___fttol,__doprnt@val
  3408  000B76  C105  F12B         	movff	?___fttol+1,__doprnt@val+1
  3409  000B7A  C106  F12C         	movff	?___fttol+2,__doprnt@val+2
  3410  000B7E  C107  F12D         	movff	?___fttol+3,__doprnt@val+3
  3411                           
  3412                           ;doprnt.c: 1228: while(c--) {
  3413  000B82  D0A1               	goto	l9754
  3414  000B84                     l9742:
  3415                           
  3416                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3417  000B84  C12A  F090         	movff	__doprnt@val,___lldiv@dividend
  3418  000B88  C12B  F091         	movff	__doprnt@val+1,___lldiv@dividend+1
  3419  000B8C  C12C  F092         	movff	__doprnt@val+2,___lldiv@dividend+2
  3420  000B90  C12D  F093         	movff	__doprnt@val+3,___lldiv@dividend+3
  3421  000B94  0101               	movlb	1	; () banked
  3422  000B96  513B               	movf	__doprnt@c& (0+255),w,b
  3423  000B98  0D04               	mullw	4
  3424  000B9A  0EF7               	movlw	low _dpowers
  3425  000B9C  24F3               	addwf	prodl,w,c
  3426  000B9E  6EF6               	movwf	tblptrl,c
  3427  000BA0  0E7E               	movlw	high _dpowers
  3428  000BA2  20F4               	addwfc	prodh,w,c
  3429  000BA4  6EF7               	movwf	tblptrh,c
  3430  000BA6                     	if	0	;There are less than 3 active tblptr bytes
  3431  000BA6                     	endif
  3432  000BA6  0009               	tblrd		*+
  3433  000BA8  CFF5 F094          	movff	tablat,___lldiv@divisor
  3434  000BAC  0009               	tblrd		*+
  3435  000BAE  CFF5 F095          	movff	tablat,___lldiv@divisor+1
  3436  000BB2  0009               	tblrd		*+
  3437  000BB4  CFF5 F096          	movff	tablat,___lldiv@divisor+2
  3438  000BB8  000A               	tblrd		*-
  3439  000BBA  CFF5 F097          	movff	tablat,___lldiv@divisor+3
  3440  000BBE  EC93  F024         	call	___lldiv	;wreg free
  3441  000BC2  C090  F12E         	movff	?___lldiv,__doprnt@tmpval
  3442  000BC6  C091  F12F         	movff	?___lldiv+1,__doprnt@tmpval+1
  3443  000BCA  C092  F130         	movff	?___lldiv+2,__doprnt@tmpval+2
  3444  000BCE  C093  F131         	movff	?___lldiv+3,__doprnt@tmpval+3
  3445                           
  3446                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3447  000BD2  C12E  F09D         	movff	__doprnt@tmpval,___llmod@dividend
  3448  000BD6  C12F  F09E         	movff	__doprnt@tmpval+1,___llmod@dividend+1
  3449  000BDA  C130  F09F         	movff	__doprnt@tmpval+2,___llmod@dividend+2
  3450  000BDE  C131  F0A0         	movff	__doprnt@tmpval+3,___llmod@dividend+3
  3451  000BE2  0E0A               	movlw	10
  3452  000BE4  0100               	movlb	0	; () banked
  3453  000BE6  6FA1               	movwf	___llmod@divisor& (0+255),b
  3454  000BE8  0E00               	movlw	0
  3455  000BEA  6FA2               	movwf	(___llmod@divisor+1)& (0+255),b
  3456  000BEC  0E00               	movlw	0
  3457  000BEE  6FA3               	movwf	(___llmod@divisor+2)& (0+255),b
  3458  000BF0  0E00               	movlw	0
  3459  000BF2  6FA4               	movwf	(___llmod@divisor+3)& (0+255),b
  3460  000BF4  EC99  F025         	call	___llmod	;wreg free
  3461  000BF8  C09D  F12E         	movff	?___llmod,__doprnt@tmpval
  3462  000BFC  C09E  F12F         	movff	?___llmod+1,__doprnt@tmpval+1
  3463  000C00  C09F  F130         	movff	?___llmod+2,__doprnt@tmpval+2
  3464  000C04  C0A0  F131         	movff	?___llmod+3,__doprnt@tmpval+3
  3465                           
  3466                           ;doprnt.c: 1231: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
  3467  000C08  0101               	movlb	1	; () banked
  3468  000C0A  EE20 F002          	lfsr	2,2
  3469  000C0E  5119               	movf	__doprnt@pb& (0+255),w,b
  3470  000C10  26D9               	addwf	fsr2l,f,c
  3471  000C12  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3472  000C14  22DA               	addwfc	fsr2h,f,c
  3473  000C16  50DE               	movf	postinc2,w,c
  3474  000C18  10DE               	iorwf	postinc2,w,c
  3475  000C1A  B4D8               	btfsc	status,2,c
  3476  000C1C  D016               	goto	l9750
  3477                           
  3478                           ; BSR set to: 1
  3479  000C1E  0101               	movlb	1	; () banked
  3480  000C20  EE20 F002          	lfsr	2,2
  3481  000C24  5119               	movf	__doprnt@pb& (0+255),w,b
  3482  000C26  26D9               	addwf	fsr2l,f,c
  3483  000C28  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3484  000C2A  22DA               	addwfc	fsr2h,f,c
  3485  000C2C  D801               	call	u16438
  3486  000C2E  D024               	goto	l9752
  3487  000C30                     u16438:
  3488  000C30  0005               	push	
  3489  000C32  6EFA               	movwf	pclath,c
  3490  000C34  50DE               	movf	postinc2,w,c
  3491  000C36  6EFD               	movwf	tosl,c
  3492  000C38  50DE               	movf	postinc2,w,c
  3493  000C3A  6EFE               	movwf	tosh,c
  3494  000C3C  50F8               	movf	tblptru,w,c
  3495  000C3E  6EFF               	movwf	tosu,c
  3496  000C40  50FA               	movf	pclath,w,c
  3497  000C42  0101               	movlb	1	; () banked
  3498  000C44  512E               	movf	__doprnt@tmpval& (0+255),w,b
  3499  000C46  0F30               	addlw	48
  3500  000C48  0012               	return		;indir
  3501  000C4A                     l9750:
  3502  000C4A  0101               	movlb	1	; () banked
  3503  000C4C  512E               	movf	__doprnt@tmpval& (0+255),w,b
  3504  000C4E  0F30               	addlw	48
  3505  000C50  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3506  000C54  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3507  000C58  CFDE F11F          	movff	postinc2,??__doprnt
  3508  000C5C  CFDD F120          	movff	postdec2,??__doprnt+1
  3509  000C60  C11F  FFD9         	movff	??__doprnt,fsr2l
  3510  000C64  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3511  000C68  6EDF               	movwf	indf2,c
  3512  000C6A  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3513  000C6E  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3514  000C72  2ADE               	incf	postinc2,f,c
  3515  000C74  0E00               	movlw	0
  3516  000C76  22DD               	addwfc	postdec2,f,c
  3517  000C78                     l9752:
  3518                           
  3519                           ;doprnt.c: 1232: val %= dpowers[c];
  3520  000C78  C12A  F09D         	movff	__doprnt@val,___llmod@dividend
  3521  000C7C  C12B  F09E         	movff	__doprnt@val+1,___llmod@dividend+1
  3522  000C80  C12C  F09F         	movff	__doprnt@val+2,___llmod@dividend+2
  3523  000C84  C12D  F0A0         	movff	__doprnt@val+3,___llmod@dividend+3
  3524  000C88  0101               	movlb	1	; () banked
  3525  000C8A  513B               	movf	__doprnt@c& (0+255),w,b
  3526  000C8C  0D04               	mullw	4
  3527  000C8E  0EF7               	movlw	low _dpowers
  3528  000C90  24F3               	addwf	prodl,w,c
  3529  000C92  6EF6               	movwf	tblptrl,c
  3530  000C94  0E7E               	movlw	high _dpowers
  3531  000C96  20F4               	addwfc	prodh,w,c
  3532  000C98  6EF7               	movwf	tblptrh,c
  3533  000C9A                     	if	0	;There are less than 3 active tblptr bytes
  3534  000C9A                     	endif
  3535  000C9A  0009               	tblrd		*+
  3536  000C9C  CFF5 F0A1          	movff	tablat,___llmod@divisor
  3537  000CA0  0009               	tblrd		*+
  3538  000CA2  CFF5 F0A2          	movff	tablat,___llmod@divisor+1
  3539  000CA6  0009               	tblrd		*+
  3540  000CA8  CFF5 F0A3          	movff	tablat,___llmod@divisor+2
  3541  000CAC  000A               	tblrd		*-
  3542  000CAE  CFF5 F0A4          	movff	tablat,___llmod@divisor+3
  3543  000CB2  EC99  F025         	call	___llmod
  3544  000CB6  C09D  F12A         	movff	?___llmod,__doprnt@val
  3545  000CBA  C09E  F12B         	movff	?___llmod+1,__doprnt@val+1
  3546  000CBE  C09F  F12C         	movff	?___llmod+2,__doprnt@val+2
  3547  000CC2  C0A0  F12D         	movff	?___llmod+3,__doprnt@val+3
  3548  000CC6                     l9754:
  3549  000CC6  0101               	movlb	1	; () banked
  3550  000CC8  073B               	decf	__doprnt@c& (0+255),f,b
  3551  000CCA  0101               	movlb	1	; () banked
  3552  000CCC  293B               	incf	__doprnt@c& (0+255),w,b
  3553  000CCE  B4D8               	btfsc	status,2,c
  3554  000CD0  D039               	goto	l9766
  3555  000CD2  D758               	goto	l9742
  3556  000CD4                     l9756:
  3557                           
  3558                           ; BSR set to: 1
  3559                           ;doprnt.c: 1236: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  3560  000CD4  0101               	movlb	1	; () banked
  3561  000CD6  EE20 F002          	lfsr	2,2
  3562  000CDA  5119               	movf	__doprnt@pb& (0+255),w,b
  3563  000CDC  26D9               	addwf	fsr2l,f,c
  3564  000CDE  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3565  000CE0  22DA               	addwfc	fsr2h,f,c
  3566  000CE2  50DE               	movf	postinc2,w,c
  3567  000CE4  10DE               	iorwf	postinc2,w,c
  3568  000CE6  B4D8               	btfsc	status,2,c
  3569  000CE8  D014               	goto	l9760
  3570                           
  3571                           ; BSR set to: 1
  3572  000CEA  0101               	movlb	1	; () banked
  3573  000CEC  EE20 F002          	lfsr	2,2
  3574  000CF0  5119               	movf	__doprnt@pb& (0+255),w,b
  3575  000CF2  26D9               	addwf	fsr2l,f,c
  3576  000CF4  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  3577  000CF6  22DA               	addwfc	fsr2h,f,c
  3578  000CF8  D801               	call	u16468
  3579  000CFA  D020               	goto	l9764
  3580  000CFC                     u16468:
  3581  000CFC  0005               	push	
  3582  000CFE  6EFA               	movwf	pclath,c
  3583  000D00  50DE               	movf	postinc2,w,c
  3584  000D02  6EFD               	movwf	tosl,c
  3585  000D04  50DE               	movf	postinc2,w,c
  3586  000D06  6EFE               	movwf	tosh,c
  3587  000D08  50F8               	movf	tblptru,w,c
  3588  000D0A  6EFF               	movwf	tosu,c
  3589  000D0C  50FA               	movf	pclath,w,c
  3590  000D0E  0E30               	movlw	48
  3591  000D10  0012               	return		;indir
  3592  000D12                     l9760:
  3593  000D12  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3594  000D16  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3595  000D1A  CFDE F11F          	movff	postinc2,??__doprnt
  3596  000D1E  CFDD F120          	movff	postdec2,??__doprnt+1
  3597  000D22  C11F  FFD9         	movff	??__doprnt,fsr2l
  3598  000D26  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3599  000D2A  0E30               	movlw	48
  3600  000D2C  6EDF               	movwf	indf2,c
  3601  000D2E  C119  FFD9         	movff	__doprnt@pb,fsr2l
  3602  000D32  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  3603  000D36  2ADE               	incf	postinc2,f,c
  3604  000D38  0E00               	movlw	0
  3605  000D3A  22DD               	addwfc	postdec2,f,c
  3606  000D3C                     l9764:
  3607                           
  3608                           ;doprnt.c: 1237: prec--;
  3609  000D3C  0101               	movlb	1	; () banked
  3610  000D3E  0739               	decf	__doprnt@prec& (0+255),f,b
  3611  000D40  A0D8               	btfss	status,0,c
  3612  000D42  073A               	decf	(__doprnt@prec+1)& (0+255),f,b
  3613  000D44                     l9766:
  3614                           
  3615                           ; BSR set to: 1
  3616  000D44  0101               	movlb	1	; () banked
  3617  000D46  5139               	movf	__doprnt@prec& (0+255),w,b
  3618  000D48  0101               	movlb	1	; () banked
  3619  000D4A  113A               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  3620  000D4C  B4D8               	btfsc	status,2,c
  3621  000D4E  D2CB               	goto	l9890
  3622  000D50  D7C1               	goto	l9756
  3623  000D52                     l414:
  3624                           
  3625                           ; BSR set to: 1
  3626                           ;doprnt.c: 1246: }
  3627                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
  3628  000D52  0101               	movlb	1	; () banked
  3629  000D54  BD37               	btfsc	__doprnt@flag& (0+255),6,b
  3630  000D56  D046               	goto	l481
  3631                           
  3632                           ; BSR set to: 1
  3633                           ;doprnt.c: 1253: {
  3634                           ;doprnt.c: 1255: if(flag & 0x10)
  3635  000D58  0101               	movlb	1	; () banked
  3636  000D5A  A937               	btfss	__doprnt@flag& (0+255),4,b
  3637  000D5C  D019               	goto	l9772
  3638                           
  3639                           ; BSR set to: 1
  3640                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  3641  000D5E  C11D  FFD9         	movff	__doprnt@ap,fsr2l
  3642  000D62  C11E  FFDA         	movff	__doprnt@ap+1,fsr2h
  3643  000D66  CFDF F11F          	movff	indf2,??__doprnt
  3644  000D6A  0E04               	movlw	4
  3645  000D6C  26DE               	addwf	postinc2,f,c
  3646  000D6E  CFDF F120          	movff	indf2,??__doprnt+1
  3647  000D72  0E00               	movlw	0
  3648  000D74  22DD               	addwfc	postdec2,f,c
  3649  000D76  C11F  FFD9         	movff	??__doprnt,fsr2l
  3650  000D7A  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3651  000D7E  CFDE F12A          	movff	postinc2,__doprnt@val
  3652  000D82  CFDE F12B          	movff	postinc2,__doprnt@val+1
  3653  000D86  CFDE F12C          	movff	postinc2,__doprnt@val+2
  3654  000D8A  CFDE F12D          	movff	postinc2,__doprnt@val+3
  3655  000D8E  D01A               	goto	l9774
  3656  000D90                     l9772:
  3657                           
  3658                           ; BSR set to: 1
  3659                           ;doprnt.c: 1257: else
  3660                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3661  000D90  C11D  FFD9         	movff	__doprnt@ap,fsr2l
  3662  000D94  C11E  FFDA         	movff	__doprnt@ap+1,fsr2h
  3663  000D98  CFDF F11F          	movff	indf2,??__doprnt
  3664  000D9C  0E02               	movlw	2
  3665  000D9E  26DE               	addwf	postinc2,f,c
  3666  000DA0  CFDF F120          	movff	indf2,??__doprnt+1
  3667  000DA4  0E00               	movlw	0
  3668  000DA6  22DD               	addwfc	postdec2,f,c
  3669  000DA8  C11F  FFD9         	movff	??__doprnt,fsr2l
  3670  000DAC  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3671  000DB0  CFDE F12A          	movff	postinc2,__doprnt@val
  3672  000DB4  CFDD F12B          	movff	postdec2,__doprnt@val+1
  3673  000DB8  0101               	movlb	1	; () banked
  3674  000DBA  0E00               	movlw	0
  3675  000DBC  BF2B               	btfsc	(__doprnt@val+1)& (0+255),7,b
  3676  000DBE  0EFF               	movlw	-1
  3677  000DC0  6F2C               	movwf	(__doprnt@val+2)& (0+255),b
  3678  000DC2  6F2D               	movwf	(__doprnt@val+3)& (0+255),b
  3679  000DC4                     l9774:
  3680                           
  3681                           ; BSR set to: 1
  3682                           ;doprnt.c: 1261: if((long)val < 0) {
  3683  000DC4  0101               	movlb	1	; () banked
  3684  000DC6  AF2D               	btfss	(__doprnt@val+3)& (0+255),7,b
  3685  000DC8  D044               	goto	l9784
  3686                           
  3687                           ; BSR set to: 1
  3688                           ;doprnt.c: 1262: flag |= 0x03;
  3689  000DCA  0E03               	movlw	3
  3690  000DCC  0101               	movlb	1	; () banked
  3691  000DCE  1337               	iorwf	__doprnt@flag& (0+255),f,b
  3692                           
  3693                           ; BSR set to: 1
  3694                           ;doprnt.c: 1263: val = -val;
  3695  000DD0  0101               	movlb	1	; () banked
  3696  000DD2  1F2D               	comf	(__doprnt@val+3)& (0+255),f,b
  3697  000DD4  1F2C               	comf	(__doprnt@val+2)& (0+255),f,b
  3698  000DD6  1F2B               	comf	(__doprnt@val+1)& (0+255),f,b
  3699  000DD8  6D2A               	negf	__doprnt@val& (0+255),b
  3700  000DDA  0E00               	movlw	0
  3701  000DDC  232B               	addwfc	(__doprnt@val+1)& (0+255),f,b
  3702  000DDE  232C               	addwfc	(__doprnt@val+2)& (0+255),f,b
  3703  000DE0  232D               	addwfc	(__doprnt@val+3)& (0+255),f,b
  3704                           
  3705                           ; BSR set to: 1
  3706                           ;doprnt.c: 1264: }
  3707                           ;doprnt.c: 1266: }
  3708  000DE2  D037               	goto	l9784
  3709  000DE4                     l481:
  3710                           
  3711                           ; BSR set to: 1
  3712                           ;doprnt.c: 1268: else
  3713                           ;doprnt.c: 1273: {
  3714                           ;doprnt.c: 1281: if(flag & 0x10)
  3715  000DE4  0101               	movlb	1	; () banked
  3716  000DE6  A937               	btfss	__doprnt@flag& (0+255),4,b
  3717  000DE8  D019               	goto	l9782
  3718                           
  3719                           ; BSR set to: 1
  3720                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  3721  000DEA  C11D  FFD9         	movff	__doprnt@ap,fsr2l
  3722  000DEE  C11E  FFDA         	movff	__doprnt@ap+1,fsr2h
  3723  000DF2  CFDF F11F          	movff	indf2,??__doprnt
  3724  000DF6  0E04               	movlw	4
  3725  000DF8  26DE               	addwf	postinc2,f,c
  3726  000DFA  CFDF F120          	movff	indf2,??__doprnt+1
  3727  000DFE  0E00               	movlw	0
  3728  000E00  22DD               	addwfc	postdec2,f,c
  3729  000E02  C11F  FFD9         	movff	??__doprnt,fsr2l
  3730  000E06  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3731  000E0A  CFDE F12A          	movff	postinc2,__doprnt@val
  3732  000E0E  CFDE F12B          	movff	postinc2,__doprnt@val+1
  3733  000E12  CFDE F12C          	movff	postinc2,__doprnt@val+2
  3734  000E16  CFDE F12D          	movff	postinc2,__doprnt@val+3
  3735  000E1A  D01B               	goto	l9784
  3736  000E1C                     l9782:
  3737                           
  3738                           ; BSR set to: 1
  3739                           ;doprnt.c: 1283: else
  3740                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3741  000E1C  C11D  FFD9         	movff	__doprnt@ap,fsr2l
  3742  000E20  C11E  FFDA         	movff	__doprnt@ap+1,fsr2h
  3743  000E24  CFDF F11F          	movff	indf2,??__doprnt
  3744  000E28  0E02               	movlw	2
  3745  000E2A  26DE               	addwf	postinc2,f,c
  3746  000E2C  CFDF F120          	movff	indf2,??__doprnt+1
  3747  000E30  0E00               	movlw	0
  3748  000E32  22DD               	addwfc	postdec2,f,c
  3749  000E34  C11F  FFD9         	movff	??__doprnt,fsr2l
  3750  000E38  C120  FFDA         	movff	??__doprnt+1,fsr2h
  3751  000E3C  CFDE F121          	movff	postinc2,??__doprnt+2
  3752  000E40  CFDD F122          	movff	postdec2,??__doprnt+3
  3753  000E44  C121  F12A         	movff	??__doprnt+2,__doprnt@val
  3754  000E48  C122  F12B         	movff	??__doprnt+3,__doprnt@val+1
  3755  000E4C  0101               	movlb	1	; () banked
  3756  000E4E  6B2C               	clrf	(__doprnt@val+2)& (0+255),b
  3757  000E50  6B2D               	clrf	(__doprnt@val+3)& (0+255),b
  3758  000E52                     l9784:
  3759                           
  3760                           ; BSR set to: 1
  3761                           ;doprnt.c: 1287: }
  3762                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3763  000E52  0101               	movlb	1	; () banked
  3764  000E54  5139               	movf	__doprnt@prec& (0+255),w,b
  3765  000E56  0101               	movlb	1	; () banked
  3766  000E58  113A               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  3767  000E5A  A4D8               	btfss	status,2,c
  3768  000E5C  D00D               	goto	l9790
  3769                           
  3770                           ; BSR set to: 1
  3771  000E5E  0101               	movlb	1	; () banked
  3772  000E60  512A               	movf	__doprnt@val& (0+255),w,b
  3773  000E62  0101               	movlb	1	; () banked
  3774  000E64  112B               	iorwf	(__doprnt@val+1)& (0+255),w,b
  3775  000E66  0101               	movlb	1	; () banked
  3776  000E68  112C               	iorwf	(__doprnt@val+2)& (0+255),w,b
  3777  000E6A  0101               	movlb	1	; () banked
  3778  000E6C  112D               	iorwf	(__doprnt@val+3)& (0+255),w,b
  3779  000E6E  A4D8               	btfss	status,2,c
  3780  000E70  D003               	goto	l9790
  3781                           
  3782                           ; BSR set to: 1
  3783                           ;doprnt.c: 1291: prec++;
  3784  000E72  0101               	movlb	1	; () banked
  3785  000E74  4B39               	infsnz	__doprnt@prec& (0+255),f,b
  3786  000E76  2B3A               	incf	(__doprnt@prec+1)& (0+255),f,b
  3787  000E78                     l9790:
  3788                           
  3789                           ; BSR set to: 1
  3790                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3791  000E78  0E01               	movlw	1
  3792  000E7A  0101               	movlb	1	; () banked
  3793  000E7C  6F3B               	movwf	__doprnt@c& (0+255),b
  3794  000E7E                     l9792:
  3795                           
  3796                           ; BSR set to: 1
  3797  000E7E  0E0A               	movlw	10
  3798  000E80  0101               	movlb	1	; () banked
  3799  000E82  193B               	xorwf	__doprnt@c& (0+255),w,b
  3800  000E84  B4D8               	btfsc	status,2,c
  3801  000E86  D01E               	goto	l9804
  3802                           
  3803                           ; BSR set to: 1
  3804                           ;doprnt.c: 1306: if(val < dpowers[c])
  3805                           
  3806                           ; BSR set to: 1
  3807                           
  3808                           ; BSR set to: 1
  3809  000E88  0101               	movlb	1	; () banked
  3810  000E8A  513B               	movf	__doprnt@c& (0+255),w,b
  3811  000E8C  0D04               	mullw	4
  3812  000E8E  0EF7               	movlw	low _dpowers
  3813  000E90  24F3               	addwf	prodl,w,c
  3814  000E92  6EF6               	movwf	tblptrl,c
  3815  000E94  0E7E               	movlw	high _dpowers
  3816  000E96  20F4               	addwfc	prodh,w,c
  3817  000E98  6EF7               	movwf	tblptrh,c
  3818  000E9A                     	if	0	;There are less than 3 active tblptr bytes
  3819  000E9A                     	endif
  3820  000E9A  0009               	tblrd		*+
  3821  000E9C  50F5               	movf	tablat,w,c
  3822  000E9E  0101               	movlb	1	; () banked
  3823  000EA0  5D2A               	subwf	__doprnt@val& (0+255),w,b
  3824  000EA2  0009               	tblrd		*+
  3825  000EA4  50F5               	movf	tablat,w,c
  3826  000EA6  0101               	movlb	1	; () banked
  3827  000EA8  592B               	subwfb	(__doprnt@val+1)& (0+255),w,b
  3828  000EAA  0009               	tblrd		*+
  3829  000EAC  50F5               	movf	tablat,w,c
  3830  000EAE  0101               	movlb	1	; () banked
  3831  000EB0  592C               	subwfb	(__doprnt@val+2)& (0+255),w,b
  3832  000EB2  0009               	tblrd		*+
  3833  000EB4  50F5               	movf	tablat,w,c
  3834  000EB6  0101               	movlb	1	; () banked
  3835  000EB8  592D               	subwfb	(__doprnt@val+3)& (0+255),w,b
  3836  000EBA  A0D8               	btfss	status,0,c
  3837  000EBC  D003               	goto	l9804
  3838                           
  3839                           ; BSR set to: 1
  3840                           
  3841                           ; BSR set to: 1
  3842                           
  3843                           ; BSR set to: 1
  3844                           ;doprnt.c: 1307: break;
  3845  000EBE  0101               	movlb	1	; () banked
  3846  000EC0  2B3B               	incf	__doprnt@c& (0+255),f,b
  3847  000EC2  D7DD               	goto	l9792
  3848  000EC4                     l9804:
  3849                           
  3850                           ; BSR set to: 1
  3851                           ;doprnt.c: 1339: if(c < prec)
  3852  000EC4  0E80               	movlw	128
  3853  000EC6  0101               	movlb	1	; () banked
  3854  000EC8  BF3B               	btfsc	__doprnt@c& (0+255),7,b
  3855  000ECA  0E7F               	movlw	127
  3856  000ECC  0101               	movlb	1	; () banked
  3857  000ECE  6F1F               	movwf	??__doprnt& (0+255),b
  3858  000ED0  0101               	movlb	1	; () banked
  3859  000ED2  5139               	movf	__doprnt@prec& (0+255),w,b
  3860  000ED4  0101               	movlb	1	; () banked
  3861  000ED6  5D3B               	subwf	__doprnt@c& (0+255),w,b
  3862  000ED8  0101               	movlb	1	; () banked
  3863  000EDA  513A               	movf	(__doprnt@prec+1)& (0+255),w,b
  3864  000EDC  0A80               	xorlw	128
  3865  000EDE  0101               	movlb	1	; () banked
  3866  000EE0  591F               	subwfb	??__doprnt& (0+255),w,b
  3867  000EE2  B0D8               	btfsc	status,0,c
  3868  000EE4  D003               	goto	l9808
  3869                           
  3870                           ; BSR set to: 1
  3871                           ;doprnt.c: 1340: c = prec;
  3872  000EE6  C139  F13B         	movff	__doprnt@prec,__doprnt@c
  3873  000EEA  D018               	goto	l9812
  3874  000EEC                     l9808:
  3875                           
  3876                           ; BSR set to: 1
  3877                           ;doprnt.c: 1341: else if(prec < c)
  3878  000EEC  0101               	movlb	1	; () banked
  3879  000EEE  513A               	movf	(__doprnt@prec+1)& (0+255),w,b
  3880  000EF0  0A80               	xorlw	128
  3881  000EF2  0101               	movlb	1	; () banked
  3882  000EF4  6F1F               	movwf	??__doprnt& (0+255),b
  3883  000EF6  0101               	movlb	1	; () banked
  3884  000EF8  513B               	movf	__doprnt@c& (0+255),w,b
  3885  000EFA  0101               	movlb	1	; () banked
  3886  000EFC  5D39               	subwf	__doprnt@prec& (0+255),w,b
  3887  000EFE  0E80               	movlw	128
  3888  000F00  0101               	movlb	1	; () banked
  3889  000F02  BF3B               	btfsc	__doprnt@c& (0+255),7,b
  3890  000F04  0E7F               	movlw	127
  3891  000F06  0101               	movlb	1	; () banked
  3892  000F08  591F               	subwfb	??__doprnt& (0+255),w,b
  3893  000F0A  B0D8               	btfsc	status,0,c
  3894  000F0C  D007               	goto	l9812
  3895                           
  3896                           ; BSR set to: 1
  3897                           ;doprnt.c: 1342: prec = c;
  3898  000F0E  0101               	movlb	1	; () banked
  3899  000F10  513B               	movf	__doprnt@c& (0+255),w,b
  3900  000F12  0101               	movlb	1	; () banked
  3901  000F14  6F39               	movwf	__doprnt@prec& (0+255),b
  3902  000F16  6B3A               	clrf	(__doprnt@prec+1)& (0+255),b
  3903  000F18  BF39               	btfsc	__doprnt@prec& (0+255),7,b
  3904  000F1A  073A               	decf	(__doprnt@prec+1)& (0+255),f,b
  3905  000F1C                     l9812:
  3906                           
  3907                           ; BSR set to: 1
  3908                           ;doprnt.c: 1345: if(width && flag & 0x03)
  3909  000F1C  0101               	movlb	1	; () banked
  3910  000F1E  5132               	movf	__doprnt@width& (0+255),w,b
  3911  000F20  0101               	movlb	1	; () banked
  3912  000F22  1133               	iorwf	(__doprnt@width+1)& (0+255),w,b
  3913  000F24  B4D8               	btfsc	status,2,c
  3914  000F26  D014               	goto	l9818
  3915                           
  3916                           ; BSR set to: 1
  3917  000F28  0E03               	movlw	3
  3918  000F2A  0101               	movlb	1	; () banked
  3919  000F2C  1537               	andwf	__doprnt@flag& (0+255),w,b
  3920  000F2E  0101               	movlb	1	; () banked
  3921  000F30  6F1F               	movwf	??__doprnt& (0+255),b
  3922  000F32  0E00               	movlw	0
  3923  000F34  0101               	movlb	1	; () banked
  3924  000F36  1538               	andwf	(__doprnt@flag+1)& (0+255),w,b
  3925  000F38  0101               	movlb	1	; () banked
  3926  000F3A  6F20               	movwf	(??__doprnt+1)& (0+255),b
  3927  000F3C  0101               	movlb	1	; () banked
  3928  000F3E  511F               	movf	??__doprnt& (0+255),w,b
  3929  000F40  0101               	movlb	1	; () banked
  3930  000F42  1120               	iorwf	(??__doprnt+1)& (0+255),w,b
  3931  000F44  B4D8               	btfsc	status,2,c
  3932  000F46  D004               	goto	l9818
  3933                           
  3934                           ; BSR set to: 1
  3935                           ;doprnt.c: 1346: width--;
  3936  000F48  0101               	movlb	1	; () banked
  3937  000F4A  0732               	decf	__doprnt@width& (0+255),f,b
  3938  000F4C  A0D8               	btfss	status,0,c
  3939  000F4E  0733               	decf	(__doprnt@width+1)& (0+255),f,b
  3940  000F50                     l9818:
  3941                           
  3942                           ; BSR set to: 1
  3943                           ;doprnt.c: 1348: if(flag & 0x4000) {
  3944  000F50  0101               	movlb	1	; () banked
  3945  000F52  AD38               	btfss	(__doprnt@flag+1)& (0+255),6,b
  3946  000F54  D01E               	goto	l9826
  3947                           
  3948                           ; BSR set to: 1
  3949                           ;doprnt.c: 1349: if(width > prec)
  3950  000F56  0101               	movlb	1	; () banked
  3951  000F58  5132               	movf	__doprnt@width& (0+255),w,b
  3952  000F5A  0101               	movlb	1	; () banked
  3953  000F5C  5D39               	subwf	__doprnt@prec& (0+255),w,b
  3954  000F5E  0101               	movlb	1	; () banked
  3955  000F60  513A               	movf	(__doprnt@prec+1)& (0+255),w,b
  3956  000F62  0A80               	xorlw	128
  3957  000F64  0101               	movlb	1	; () banked
  3958  000F66  6F1F               	movwf	??__doprnt& (0+255),b
  3959  000F68  0101               	movlb	1	; () banked
  3960  000F6A  5133               	movf	(__doprnt@width+1)& (0+255),w,b
  3961  000F6C  0A80               	xorlw	128
  3962  000F6E  0101               	movlb	1	; () banked
  3963  000F70  591F               	subwfb	??__doprnt& (0+255),w,b
  3964  000F72  B0D8               	btfsc	status,0,c
  3965  000F74  D009               	goto	l9824
  3966                           
  3967                           ; BSR set to: 1
  3968                           ;doprnt.c: 1350: width -= prec;
  3969  000F76  0101               	movlb	1	; () banked
  3970  000F78  5139               	movf	__doprnt@prec& (0+255),w,b
  3971  000F7A  0101               	movlb	1	; () banked
  3972  000F7C  5F32               	subwf	__doprnt@width& (0+255),f,b
  3973  000F7E  0101               	movlb	1	; () banked
  3974  000F80  513A               	movf	(__doprnt@prec+1)& (0+255),w,b
  3975  000F82  0101               	movlb	1	; () banked
  3976  000F84  5B33               	subwfb	(__doprnt@width+1)& (0+255),f,b
  3977  000F86  D005               	goto	l9826
  3978  000F88                     l9824:
  3979                           
  3980                           ; BSR set to: 1
  3981                           ;doprnt.c: 1351: else
  3982                           ;doprnt.c: 1352: width = 0;
  3983  000F88  0E00               	movlw	0
  3984  000F8A  0101               	movlb	1	; () banked
  3985  000F8C  6F33               	movwf	(__doprnt@width+1)& (0+255),b
  3986  000F8E  0E00               	movlw	0
  3987  000F90  6F32               	movwf	__doprnt@width& (0+255),b
  3988  000F92                     l9826:
  3989                           
  3990                           ; BSR set to: 1
  3991                           ;doprnt.c: 1353: }
  3992                           ;doprnt.c: 1381: if(width > c)
  3993  000F92  0E80               	movlw	128
  3994  000F94  0101               	movlb	1	; () banked
  3995  000F96  BF3B               	btfsc	__doprnt@c& (0+255),7,b
  3996  000F98  0E7F               	movlw	127
  3997  000F9A  0101               	movlb	1	; () banked
  3998  000F9C  6F1F               	movwf	??__doprnt& (0+255),b
  3999  000F9E  0101               	movlb	1	; () banked
  4000  000FA0  5132               	movf	__doprnt@width& (0+255),w,b
  4001  000FA2  0101               	movlb	1	; () banked
  4002  000FA4  5D3B               	subwf	__doprnt@c& (0+255),w,b
  4003  000FA6  0101               	movlb	1	; () banked
  4004  000FA8  5133               	movf	(__doprnt@width+1)& (0+255),w,b
  4005  000FAA  0A80               	xorlw	128
  4006  000FAC  0101               	movlb	1	; () banked
  4007  000FAE  591F               	subwfb	??__doprnt& (0+255),w,b
  4008  000FB0  B0D8               	btfsc	status,0,c
  4009  000FB2  D00B               	goto	l9830
  4010                           
  4011                           ; BSR set to: 1
  4012                           ;doprnt.c: 1382: width -= c;
  4013  000FB4  0101               	movlb	1	; () banked
  4014  000FB6  513B               	movf	__doprnt@c& (0+255),w,b
  4015  000FB8  0101               	movlb	1	; () banked
  4016  000FBA  5F32               	subwf	__doprnt@width& (0+255),f,b
  4017  000FBC  0E00               	movlw	0
  4018  000FBE  0101               	movlb	1	; () banked
  4019  000FC0  BF3B               	btfsc	__doprnt@c& (0+255),7,b
  4020  000FC2  0EFF               	movlw	255
  4021  000FC4  0101               	movlb	1	; () banked
  4022  000FC6  5B33               	subwfb	(__doprnt@width+1)& (0+255),f,b
  4023  000FC8  D005               	goto	l9832
  4024  000FCA                     l9830:
  4025                           
  4026                           ; BSR set to: 1
  4027                           ;doprnt.c: 1383: else
  4028                           ;doprnt.c: 1384: width = 0;
  4029  000FCA  0E00               	movlw	0
  4030  000FCC  0101               	movlb	1	; () banked
  4031  000FCE  6F33               	movwf	(__doprnt@width+1)& (0+255),b
  4032  000FD0  0E00               	movlw	0
  4033  000FD2  6F32               	movwf	__doprnt@width& (0+255),b
  4034  000FD4                     l9832:
  4035                           
  4036                           ; BSR set to: 1
  4037                           ;doprnt.c: 1387: if(flag & 0x04) {
  4038  000FD4  0101               	movlb	1	; () banked
  4039  000FD6  A537               	btfss	__doprnt@flag& (0+255),2,b
  4040  000FD8  D083               	goto	l9856
  4041                           
  4042                           ; BSR set to: 1
  4043                           ;doprnt.c: 1392: if(flag & 0x03)
  4044  000FDA  0E03               	movlw	3
  4045  000FDC  0101               	movlb	1	; () banked
  4046  000FDE  1537               	andwf	__doprnt@flag& (0+255),w,b
  4047  000FE0  0101               	movlb	1	; () banked
  4048  000FE2  6F1F               	movwf	??__doprnt& (0+255),b
  4049  000FE4  0E00               	movlw	0
  4050  000FE6  0101               	movlb	1	; () banked
  4051  000FE8  1538               	andwf	(__doprnt@flag+1)& (0+255),w,b
  4052  000FEA  0101               	movlb	1	; () banked
  4053  000FEC  6F20               	movwf	(??__doprnt+1)& (0+255),b
  4054  000FEE  0101               	movlb	1	; () banked
  4055  000FF0  511F               	movf	??__doprnt& (0+255),w,b
  4056  000FF2  0101               	movlb	1	; () banked
  4057  000FF4  1120               	iorwf	(??__doprnt+1)& (0+255),w,b
  4058  000FF6  B4D8               	btfsc	status,2,c
  4059  000FF8  D034               	goto	l9844
  4060                           
  4061                           ; BSR set to: 1
  4062                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  4063  000FFA  0101               	movlb	1	; () banked
  4064  000FFC  EE20 F002          	lfsr	2,2
  4065  001000  5119               	movf	__doprnt@pb& (0+255),w,b
  4066  001002  26D9               	addwf	fsr2l,f,c
  4067  001004  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4068  001006  22DA               	addwfc	fsr2h,f,c
  4069  001008  50DE               	movf	postinc2,w,c
  4070  00100A  10DE               	iorwf	postinc2,w,c
  4071  00100C  B4D8               	btfsc	status,2,c
  4072  00100E  D014               	goto	l9840
  4073                           
  4074                           ; BSR set to: 1
  4075  001010  0101               	movlb	1	; () banked
  4076  001012  EE20 F002          	lfsr	2,2
  4077  001016  5119               	movf	__doprnt@pb& (0+255),w,b
  4078  001018  26D9               	addwf	fsr2l,f,c
  4079  00101A  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4080  00101C  22DA               	addwfc	fsr2h,f,c
  4081  00101E  D801               	call	u16678
  4082  001020  D020               	goto	l9844
  4083  001022                     u16678:
  4084  001022  0005               	push	
  4085  001024  6EFA               	movwf	pclath,c
  4086  001026  50DE               	movf	postinc2,w,c
  4087  001028  6EFD               	movwf	tosl,c
  4088  00102A  50DE               	movf	postinc2,w,c
  4089  00102C  6EFE               	movwf	tosh,c
  4090  00102E  50F8               	movf	tblptru,w,c
  4091  001030  6EFF               	movwf	tosu,c
  4092  001032  50FA               	movf	pclath,w,c
  4093  001034  0E2D               	movlw	45
  4094  001036  0012               	return		;indir
  4095  001038                     l9840:
  4096  001038  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4097  00103C  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4098  001040  CFDE F11F          	movff	postinc2,??__doprnt
  4099  001044  CFDD F120          	movff	postdec2,??__doprnt+1
  4100  001048  C11F  FFD9         	movff	??__doprnt,fsr2l
  4101  00104C  C120  FFDA         	movff	??__doprnt+1,fsr2h
  4102  001050  0E2D               	movlw	45
  4103  001052  6EDF               	movwf	indf2,c
  4104  001054  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4105  001058  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4106  00105C  2ADE               	incf	postinc2,f,c
  4107  00105E  0E00               	movlw	0
  4108  001060  22DD               	addwfc	postdec2,f,c
  4109  001062                     l9844:
  4110                           
  4111                           ;doprnt.c: 1415: if(width)
  4112  001062  0101               	movlb	1	; () banked
  4113  001064  5132               	movf	__doprnt@width& (0+255),w,b
  4114  001066  0101               	movlb	1	; () banked
  4115  001068  1133               	iorwf	(__doprnt@width+1)& (0+255),w,b
  4116  00106A  B4D8               	btfsc	status,2,c
  4117  00106C  D131               	goto	l9888
  4118                           
  4119                           ; BSR set to: 1
  4120                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  4121                           
  4122                           ; BSR set to: 1
  4123                           
  4124                           ;doprnt.c: 1416: do
  4125  00106E  0101               	movlb	1	; () banked
  4126  001070  EE20 F002          	lfsr	2,2
  4127  001074  5119               	movf	__doprnt@pb& (0+255),w,b
  4128  001076  26D9               	addwf	fsr2l,f,c
  4129  001078  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4130  00107A  22DA               	addwfc	fsr2h,f,c
  4131  00107C  50DE               	movf	postinc2,w,c
  4132  00107E  10DE               	iorwf	postinc2,w,c
  4133  001080  B4D8               	btfsc	status,2,c
  4134  001082  D014               	goto	l9850
  4135                           
  4136                           ; BSR set to: 1
  4137  001084  0101               	movlb	1	; () banked
  4138  001086  EE20 F002          	lfsr	2,2
  4139  00108A  5119               	movf	__doprnt@pb& (0+255),w,b
  4140  00108C  26D9               	addwf	fsr2l,f,c
  4141  00108E  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4142  001090  22DA               	addwfc	fsr2h,f,c
  4143  001092  D801               	call	u16708
  4144  001094  D020               	goto	l9854
  4145  001096                     u16708:
  4146  001096  0005               	push	
  4147  001098  6EFA               	movwf	pclath,c
  4148  00109A  50DE               	movf	postinc2,w,c
  4149  00109C  6EFD               	movwf	tosl,c
  4150  00109E  50DE               	movf	postinc2,w,c
  4151  0010A0  6EFE               	movwf	tosh,c
  4152  0010A2  50F8               	movf	tblptru,w,c
  4153  0010A4  6EFF               	movwf	tosu,c
  4154  0010A6  50FA               	movf	pclath,w,c
  4155  0010A8  0E30               	movlw	48
  4156  0010AA  0012               	return		;indir
  4157  0010AC                     l9850:
  4158  0010AC  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4159  0010B0  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4160  0010B4  CFDE F11F          	movff	postinc2,??__doprnt
  4161  0010B8  CFDD F120          	movff	postdec2,??__doprnt+1
  4162  0010BC  C11F  FFD9         	movff	??__doprnt,fsr2l
  4163  0010C0  C120  FFDA         	movff	??__doprnt+1,fsr2h
  4164  0010C4  0E30               	movlw	48
  4165  0010C6  6EDF               	movwf	indf2,c
  4166  0010C8  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4167  0010CC  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4168  0010D0  2ADE               	incf	postinc2,f,c
  4169  0010D2  0E00               	movlw	0
  4170  0010D4  22DD               	addwfc	postdec2,f,c
  4171  0010D6                     l9854:
  4172                           
  4173                           ;doprnt.c: 1418: while(--width);
  4174  0010D6  0101               	movlb	1	; () banked
  4175  0010D8  0732               	decf	__doprnt@width& (0+255),f,b
  4176  0010DA  A0D8               	btfss	status,0,c
  4177  0010DC  0733               	decf	(__doprnt@width+1)& (0+255),f,b
  4178  0010DE  D7C1               	goto	l9844
  4179  0010E0                     l9856:
  4180                           
  4181                           ; BSR set to: 1
  4182                           ;doprnt.c: 1422: {
  4183                           ;doprnt.c: 1424: if(width
  4184                           ;doprnt.c: 1428: )
  4185  0010E0  0101               	movlb	1	; () banked
  4186  0010E2  5132               	movf	__doprnt@width& (0+255),w,b
  4187  0010E4  0101               	movlb	1	; () banked
  4188  0010E6  1133               	iorwf	(__doprnt@width+1)& (0+255),w,b
  4189  0010E8  B4D8               	btfsc	status,2,c
  4190  0010EA  D03E               	goto	l9868
  4191  0010EC                     l9858:
  4192                           
  4193                           ; BSR set to: 1
  4194                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  4195  0010EC  0101               	movlb	1	; () banked
  4196  0010EE  EE20 F002          	lfsr	2,2
  4197  0010F2  5119               	movf	__doprnt@pb& (0+255),w,b
  4198  0010F4  26D9               	addwf	fsr2l,f,c
  4199  0010F6  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4200  0010F8  22DA               	addwfc	fsr2h,f,c
  4201  0010FA  50DE               	movf	postinc2,w,c
  4202  0010FC  10DE               	iorwf	postinc2,w,c
  4203  0010FE  B4D8               	btfsc	status,2,c
  4204  001100  D014               	goto	l9862
  4205                           
  4206                           ; BSR set to: 1
  4207  001102  0101               	movlb	1	; () banked
  4208  001104  EE20 F002          	lfsr	2,2
  4209  001108  5119               	movf	__doprnt@pb& (0+255),w,b
  4210  00110A  26D9               	addwf	fsr2l,f,c
  4211  00110C  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4212  00110E  22DA               	addwfc	fsr2h,f,c
  4213  001110  D801               	call	u16748
  4214  001112  D020               	goto	l9866
  4215  001114                     u16748:
  4216  001114  0005               	push	
  4217  001116  6EFA               	movwf	pclath,c
  4218  001118  50DE               	movf	postinc2,w,c
  4219  00111A  6EFD               	movwf	tosl,c
  4220  00111C  50DE               	movf	postinc2,w,c
  4221  00111E  6EFE               	movwf	tosh,c
  4222  001120  50F8               	movf	tblptru,w,c
  4223  001122  6EFF               	movwf	tosu,c
  4224  001124  50FA               	movf	pclath,w,c
  4225  001126  0E20               	movlw	32
  4226  001128  0012               	return		;indir
  4227  00112A                     l9862:
  4228  00112A  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4229  00112E  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4230  001132  CFDE F11F          	movff	postinc2,??__doprnt
  4231  001136  CFDD F120          	movff	postdec2,??__doprnt+1
  4232  00113A  C11F  FFD9         	movff	??__doprnt,fsr2l
  4233  00113E  C120  FFDA         	movff	??__doprnt+1,fsr2h
  4234  001142  0E20               	movlw	32
  4235  001144  6EDF               	movwf	indf2,c
  4236  001146  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4237  00114A  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4238  00114E  2ADE               	incf	postinc2,f,c
  4239  001150  0E00               	movlw	0
  4240  001152  22DD               	addwfc	postdec2,f,c
  4241  001154                     l9866:
  4242                           
  4243                           ;doprnt.c: 1431: while(--width);
  4244  001154  0101               	movlb	1	; () banked
  4245  001156  0732               	decf	__doprnt@width& (0+255),f,b
  4246  001158  A0D8               	btfss	status,0,c
  4247  00115A  0733               	decf	(__doprnt@width+1)& (0+255),f,b
  4248  00115C  0101               	movlb	1	; () banked
  4249  00115E  5132               	movf	__doprnt@width& (0+255),w,b
  4250  001160  0101               	movlb	1	; () banked
  4251  001162  1133               	iorwf	(__doprnt@width+1)& (0+255),w,b
  4252  001164  A4D8               	btfss	status,2,c
  4253  001166  D7C2               	goto	l9858
  4254  001168                     l9868:
  4255                           
  4256                           ; BSR set to: 1
  4257                           ;doprnt.c: 1438: if(flag & 0x03)
  4258  001168  0E03               	movlw	3
  4259  00116A  0101               	movlb	1	; () banked
  4260  00116C  1537               	andwf	__doprnt@flag& (0+255),w,b
  4261  00116E  0101               	movlb	1	; () banked
  4262  001170  6F1F               	movwf	??__doprnt& (0+255),b
  4263  001172  0E00               	movlw	0
  4264  001174  0101               	movlb	1	; () banked
  4265  001176  1538               	andwf	(__doprnt@flag+1)& (0+255),w,b
  4266  001178  0101               	movlb	1	; () banked
  4267  00117A  6F20               	movwf	(??__doprnt+1)& (0+255),b
  4268  00117C  0101               	movlb	1	; () banked
  4269  00117E  511F               	movf	??__doprnt& (0+255),w,b
  4270  001180  0101               	movlb	1	; () banked
  4271  001182  1120               	iorwf	(??__doprnt+1)& (0+255),w,b
  4272  001184  B4D8               	btfsc	status,2,c
  4273  001186  D0A4               	goto	l9888
  4274                           
  4275                           ; BSR set to: 1
  4276                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  4277  001188  0101               	movlb	1	; () banked
  4278  00118A  EE20 F002          	lfsr	2,2
  4279  00118E  5119               	movf	__doprnt@pb& (0+255),w,b
  4280  001190  26D9               	addwf	fsr2l,f,c
  4281  001192  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4282  001194  22DA               	addwfc	fsr2h,f,c
  4283  001196  50DE               	movf	postinc2,w,c
  4284  001198  10DE               	iorwf	postinc2,w,c
  4285  00119A  B4D8               	btfsc	status,2,c
  4286  00119C  D014               	goto	l9874
  4287                           
  4288                           ; BSR set to: 1
  4289  00119E  0101               	movlb	1	; () banked
  4290  0011A0  EE20 F002          	lfsr	2,2
  4291  0011A4  5119               	movf	__doprnt@pb& (0+255),w,b
  4292  0011A6  26D9               	addwf	fsr2l,f,c
  4293  0011A8  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4294  0011AA  22DA               	addwfc	fsr2h,f,c
  4295  0011AC  D801               	call	u16788
  4296  0011AE  D090               	goto	l9888
  4297  0011B0                     u16788:
  4298  0011B0  0005               	push	
  4299  0011B2  6EFA               	movwf	pclath,c
  4300  0011B4  50DE               	movf	postinc2,w,c
  4301  0011B6  6EFD               	movwf	tosl,c
  4302  0011B8  50DE               	movf	postinc2,w,c
  4303  0011BA  6EFE               	movwf	tosh,c
  4304  0011BC  50F8               	movf	tblptru,w,c
  4305  0011BE  6EFF               	movwf	tosu,c
  4306  0011C0  50FA               	movf	pclath,w,c
  4307  0011C2  0E2D               	movlw	45
  4308  0011C4  0012               	return		;indir
  4309  0011C6                     l9874:
  4310  0011C6  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4311  0011CA  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4312  0011CE  CFDE F11F          	movff	postinc2,??__doprnt
  4313  0011D2  CFDD F120          	movff	postdec2,??__doprnt+1
  4314  0011D6  C11F  FFD9         	movff	??__doprnt,fsr2l
  4315  0011DA  C120  FFDA         	movff	??__doprnt+1,fsr2h
  4316  0011DE  0E2D               	movlw	45
  4317  0011E0  6EDF               	movwf	indf2,c
  4318  0011E2  D06F               	goto	l9886
  4319  0011E4                     l9878:
  4320                           
  4321                           ;doprnt.c: 1478: {
  4322                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4323  0011E4  C139  F11F         	movff	__doprnt@prec,??__doprnt
  4324  0011E8  C13A  F120         	movff	__doprnt@prec+1,??__doprnt+1
  4325  0011EC  0101               	movlb	1	; () banked
  4326  0011EE  90D8               	bcf	status,0,c
  4327  0011F0  371F               	rlcf	??__doprnt& (0+255),f,b
  4328  0011F2  3720               	rlcf	(??__doprnt+1)& (0+255),f,b
  4329  0011F4  0101               	movlb	1	; () banked
  4330  0011F6  90D8               	bcf	status,0,c
  4331  0011F8  371F               	rlcf	??__doprnt& (0+255),f,b
  4332  0011FA  3720               	rlcf	(??__doprnt+1)& (0+255),f,b
  4333  0011FC  0EF7               	movlw	low _dpowers
  4334  0011FE  0101               	movlb	1	; () banked
  4335  001200  251F               	addwf	??__doprnt& (0+255),w,b
  4336  001202  6EF6               	movwf	tblptrl,c
  4337  001204  0E7E               	movlw	high _dpowers
  4338  001206  2120               	addwfc	(??__doprnt+1)& (0+255),w,b
  4339  001208  6EF7               	movwf	tblptrh,c
  4340  00120A                     	if	0	;There are less than 3 active tblptr bytes
  4341  00120A                     	endif
  4342  00120A  0009               	tblrd		*+
  4343  00120C  CFF5 F094          	movff	tablat,___lldiv@divisor
  4344  001210  0009               	tblrd		*+
  4345  001212  CFF5 F095          	movff	tablat,___lldiv@divisor+1
  4346  001216  0009               	tblrd		*+
  4347  001218  CFF5 F096          	movff	tablat,___lldiv@divisor+2
  4348  00121C  000A               	tblrd		*-
  4349  00121E  CFF5 F097          	movff	tablat,___lldiv@divisor+3
  4350  001222  C12A  F090         	movff	__doprnt@val,___lldiv@dividend
  4351  001226  C12B  F091         	movff	__doprnt@val+1,___lldiv@dividend+1
  4352  00122A  C12C  F092         	movff	__doprnt@val+2,___lldiv@dividend+2
  4353  00122E  C12D  F093         	movff	__doprnt@val+3,___lldiv@dividend+3
  4354  001232  EC93  F024         	call	___lldiv
  4355  001236  C090  F09D         	movff	?___lldiv,___llmod@dividend
  4356  00123A  C091  F09E         	movff	?___lldiv+1,___llmod@dividend+1
  4357  00123E  C092  F09F         	movff	?___lldiv+2,___llmod@dividend+2
  4358  001242  C093  F0A0         	movff	?___lldiv+3,___llmod@dividend+3
  4359  001246  0E0A               	movlw	10
  4360  001248  0100               	movlb	0	; () banked
  4361  00124A  6FA1               	movwf	___llmod@divisor& (0+255),b
  4362  00124C  0E00               	movlw	0
  4363  00124E  6FA2               	movwf	(___llmod@divisor+1)& (0+255),b
  4364  001250  0E00               	movlw	0
  4365  001252  6FA3               	movwf	(___llmod@divisor+2)& (0+255),b
  4366  001254  0E00               	movlw	0
  4367  001256  6FA4               	movwf	(___llmod@divisor+3)& (0+255),b
  4368  001258  EC99  F025         	call	___llmod	;wreg free
  4369  00125C  0100               	movlb	0	; () banked
  4370  00125E  519D               	movf	?___llmod& (0+255),w,b
  4371  001260  0F30               	addlw	48
  4372  001262  0101               	movlb	1	; () banked
  4373  001264  6F3B               	movwf	__doprnt@c& (0+255),b
  4374                           
  4375                           ; BSR set to: 1
  4376                           ;doprnt.c: 1523: }
  4377                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  4378  001266  0101               	movlb	1	; () banked
  4379  001268  EE20 F002          	lfsr	2,2
  4380  00126C  5119               	movf	__doprnt@pb& (0+255),w,b
  4381  00126E  26D9               	addwf	fsr2l,f,c
  4382  001270  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4383  001272  22DA               	addwfc	fsr2h,f,c
  4384  001274  50DE               	movf	postinc2,w,c
  4385  001276  10DE               	iorwf	postinc2,w,c
  4386  001278  B4D8               	btfsc	status,2,c
  4387  00127A  D015               	goto	l9884
  4388                           
  4389                           ; BSR set to: 1
  4390  00127C  0101               	movlb	1	; () banked
  4391  00127E  EE20 F002          	lfsr	2,2
  4392  001282  5119               	movf	__doprnt@pb& (0+255),w,b
  4393  001284  26D9               	addwf	fsr2l,f,c
  4394  001286  511A               	movf	(__doprnt@pb+1)& (0+255),w,b
  4395  001288  22DA               	addwfc	fsr2h,f,c
  4396  00128A  D801               	call	u16808
  4397  00128C  D021               	goto	l9888
  4398  00128E                     u16808:
  4399  00128E  0005               	push	
  4400  001290  6EFA               	movwf	pclath,c
  4401  001292  50DE               	movf	postinc2,w,c
  4402  001294  6EFD               	movwf	tosl,c
  4403  001296  50DE               	movf	postinc2,w,c
  4404  001298  6EFE               	movwf	tosh,c
  4405  00129A  50F8               	movf	tblptru,w,c
  4406  00129C  6EFF               	movwf	tosu,c
  4407  00129E  50FA               	movf	pclath,w,c
  4408  0012A0  0101               	movlb	1	; () banked
  4409  0012A2  513B               	movf	__doprnt@c& (0+255),w,b
  4410  0012A4  0012               	return		;indir
  4411  0012A6                     l9884:
  4412  0012A6  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4413  0012AA  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4414  0012AE  CFDE F11F          	movff	postinc2,??__doprnt
  4415  0012B2  CFDD F120          	movff	postdec2,??__doprnt+1
  4416  0012B6  C11F  FFD9         	movff	??__doprnt,fsr2l
  4417  0012BA  C120  FFDA         	movff	??__doprnt+1,fsr2h
  4418  0012BE  C13B  FFDF         	movff	__doprnt@c,indf2
  4419  0012C2                     l9886:
  4420  0012C2  C119  FFD9         	movff	__doprnt@pb,fsr2l
  4421  0012C6  C11A  FFDA         	movff	__doprnt@pb+1,fsr2h
  4422  0012CA  2ADE               	incf	postinc2,f,c
  4423  0012CC  0E00               	movlw	0
  4424  0012CE  22DD               	addwfc	postdec2,f,c
  4425  0012D0                     l9888:
  4426  0012D0  0101               	movlb	1	; () banked
  4427  0012D2  0739               	decf	__doprnt@prec& (0+255),f,b
  4428  0012D4  A0D8               	btfss	status,0,c
  4429  0012D6  073A               	decf	(__doprnt@prec+1)& (0+255),f,b
  4430  0012D8  0101               	movlb	1	; () banked
  4431  0012DA  2939               	incf	__doprnt@prec& (0+255),w,b
  4432  0012DC  E183               	bnz	l9878
  4433  0012DE  0101               	movlb	1	; () banked
  4434  0012E0  293A               	incf	(__doprnt@prec+1)& (0+255),w,b
  4435  0012E2  A4D8               	btfss	status,2,c
  4436  0012E4  D77F               	goto	l9878
  4437  0012E6                     l9890:
  4438  0012E6  C11B  FFF6         	movff	__doprnt@f,tblptrl
  4439  0012EA  C11C  FFF7         	movff	__doprnt@f+1,tblptrh
  4440  0012EE  0101               	movlb	1	; () banked
  4441  0012F0  4B1B               	infsnz	__doprnt@f& (0+255),f,b
  4442  0012F2  2B1C               	incf	(__doprnt@f+1)& (0+255),f,b
  4443  0012F4                     	if	0	;tblptru may be non-zero
  4444  0012F4                     	endif
  4445  0012F4                     	if	0	;tblptru may be non-zero
  4446  0012F4                     	endif
  4447  0012F4  0008               	tblrd		*
  4448  0012F6  CFF5 F13B          	movff	tablat,__doprnt@c
  4449  0012FA  0101               	movlb	1	; () banked
  4450  0012FC  513B               	movf	__doprnt@c& (0+255),w,b
  4451  0012FE  A4D8               	btfss	status,2,c
  4452  001300  EF54  F000         	goto	l9502
  4453  001304                     l9892:
  4454                           
  4455                           ; BSR set to: 1
  4456                           ;doprnt.c: 1540: return 0;
  4457  001304  0E00               	movlw	0
  4458  001306  0101               	movlb	1	; () banked
  4459  001308  6F1A               	movwf	(?__doprnt+1)& (0+255),b
  4460  00130A  0E00               	movlw	0
  4461  00130C  6F19               	movwf	?__doprnt& (0+255),b
  4462  00130E  0012               	return	
  4463  001310                     __end_of__doprnt:
  4464                           	opt stack 0
  4465                           tosu	equ	0xFFF
  4466                           tosh	equ	0xFFE
  4467                           tosl	equ	0xFFD
  4468                           pclath	equ	0xFFA
  4469                           tblptru	equ	0xFF8
  4470                           tblptrh	equ	0xFF7
  4471                           tblptrl	equ	0xFF6
  4472                           tablat	equ	0xFF5
  4473                           prodh	equ	0xFF4
  4474                           prodl	equ	0xFF3
  4475                           intcon	equ	0xFF2
  4476                           postinc0	equ	0xFEE
  4477                           wreg	equ	0xFE8
  4478                           postdec1	equ	0xFE5
  4479                           fsr1l	equ	0xFE1
  4480                           indf2	equ	0xFDF
  4481                           postinc2	equ	0xFDE
  4482                           postdec2	equ	0xFDD
  4483                           fsr2h	equ	0xFDA
  4484                           fsr2l	equ	0xFD9
  4485                           status	equ	0xFD8
  4486                           
  4487 ;; *************** function _scale *****************
  4488 ;; Defined at:
  4489 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;  scl             1    wreg     char 
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;  scl             1    3[BANK1 ] char 
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  3   83[BANK0 ] char 
  4496 ;; Registers used:
  4497 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4503 ;;      Params:         0       3       0       0       0       0       0
  4504 ;;      Locals:         0       0       4       0       0       0       0
  4505 ;;      Temps:          0       0       0       0       0       0       0
  4506 ;;      Totals:         0       3       4       0       0       0       0
  4507 ;;Total ram usage:        7 bytes
  4508 ;; Hardware stack levels used:    1
  4509 ;; Hardware stack levels required when called:    9
  4510 ;; This function calls:
  4511 ;;		___awdiv
  4512 ;;		___awmod
  4513 ;;		___ftmul
  4514 ;;		___wmul
  4515 ;; This function is called by:
  4516 ;;		__doprnt
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           	psect	text3
  4521  002488                     __ptext3:
  4522                           	opt stack 0
  4523  002488                     _scale:
  4524                           	opt stack 19
  4525                           
  4526                           ; BSR set to: 1
  4527                           ;incstack = 0
  4528                           ;scale@scl stored from wreg
  4529  002488  0101               	movlb	1	; () banked
  4530  00248A  6F03               	movwf	scale@scl& (0+255),b
  4531                           
  4532                           ;doprnt.c: 428: if(scl < 0) {
  4533  00248C  0101               	movlb	1	; () banked
  4534  00248E  AF03               	btfss	scale@scl& (0+255),7,b
  4535  002490  D12A               	goto	l6228
  4536                           
  4537                           ; BSR set to: 1
  4538                           ;doprnt.c: 429: scl = -scl;
  4539  002492  0101               	movlb	1	; () banked
  4540  002494  6D03               	negf	scale@scl& (0+255),b
  4541                           
  4542                           ;doprnt.c: 430: if(scl>=110)
  4543  002496  0101               	movlb	1	; () banked
  4544  002498  5103               	movf	scale@scl& (0+255),w,b
  4545  00249A  0A80               	xorlw	128
  4546  00249C  0F12               	addlw	-238
  4547  00249E  A0D8               	btfss	status,0,c
  4548  0024A0  D0AC               	goto	l6218
  4549                           
  4550                           ; BSR set to: 1
  4551                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4552  0024A2  0E00               	movlw	0
  4553  0024A4  0100               	movlb	0	; () banked
  4554  0024A6  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4555  0024A8  0E03               	movlw	3
  4556  0024AA  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  4557  0024AC  0E00               	movlw	0
  4558  0024AE  0100               	movlb	0	; () banked
  4559  0024B0  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  4560  0024B2  0E0A               	movlw	10
  4561  0024B4  6F98               	movwf	___awdiv@divisor& (0+255),b
  4562  0024B6  0E00               	movlw	0
  4563  0024B8  0100               	movlb	0	; () banked
  4564  0024BA  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  4565  0024BC  0E64               	movlw	100
  4566  0024BE  6F92               	movwf	___awmod@divisor& (0+255),b
  4567  0024C0  0101               	movlb	1	; () banked
  4568  0024C2  5103               	movf	scale@scl& (0+255),w,b
  4569  0024C4  0100               	movlb	0	; () banked
  4570  0024C6  6F90               	movwf	___awmod@dividend& (0+255),b
  4571  0024C8  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  4572  0024CA  BF90               	btfsc	___awmod@dividend& (0+255),7,b
  4573  0024CC  0791               	decf	(___awmod@dividend+1)& (0+255),f,b
  4574  0024CE  EC48  F025         	call	___awmod
  4575  0024D2  C090  F096         	movff	?___awmod,___awdiv@dividend
  4576  0024D6  C091  F097         	movff	?___awmod+1,___awdiv@dividend+1
  4577  0024DA  EC34  F024         	call	___awdiv	;wreg free
  4578  0024DE  0E09               	movlw	9
  4579  0024E0  0100               	movlb	0	; () banked
  4580  0024E2  2596               	addwf	?___awdiv& (0+255),w,b
  4581  0024E4  0100               	movlb	0	; () banked
  4582  0024E6  6F9E               	movwf	___wmul@multiplier& (0+255),b
  4583  0024E8  0E00               	movlw	0
  4584  0024EA  0100               	movlb	0	; () banked
  4585  0024EC  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  4586  0024EE  0100               	movlb	0	; () banked
  4587  0024F0  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  4588  0024F2  EC33  F029         	call	___wmul	;wreg free
  4589  0024F6  0E1F               	movlw	low __npowers_
  4590  0024F8  0100               	movlb	0	; () banked
  4591  0024FA  259E               	addwf	?___wmul& (0+255),w,b
  4592  0024FC  6EF6               	movwf	tblptrl,c
  4593  0024FE  0E7F               	movlw	high __npowers_
  4594  002500  0100               	movlb	0	; () banked
  4595  002502  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  4596  002504  6EF7               	movwf	tblptrh,c
  4597  002506                     	if	0	;There are less than 3 active tblptr bytes
  4598  002506                     	endif
  4599  002506  0009               	tblrd		*+
  4600  002508  CFF5 F0A7          	movff	tablat,___ftmul@f2
  4601  00250C  0009               	tblrd		*+
  4602  00250E  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  4603  002512  000A               	tblrd		*-
  4604  002514  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  4605  002518  0E00               	movlw	0
  4606  00251A  0100               	movlb	0	; () banked
  4607  00251C  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  4608  00251E  0E64               	movlw	100
  4609  002520  6F98               	movwf	___awdiv@divisor& (0+255),b
  4610  002522  0101               	movlb	1	; () banked
  4611  002524  5103               	movf	scale@scl& (0+255),w,b
  4612  002526  0100               	movlb	0	; () banked
  4613  002528  6F96               	movwf	___awdiv@dividend& (0+255),b
  4614  00252A  6B97               	clrf	(___awdiv@dividend+1)& (0+255),b
  4615  00252C  BF96               	btfsc	___awdiv@dividend& (0+255),7,b
  4616  00252E  0797               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4617  002530  EC34  F024         	call	___awdiv	;wreg free
  4618  002534  0E12               	movlw	18
  4619  002536  0100               	movlb	0	; () banked
  4620  002538  2596               	addwf	?___awdiv& (0+255),w,b
  4621  00253A  0100               	movlb	0	; () banked
  4622  00253C  6F9E               	movwf	___wmul@multiplier& (0+255),b
  4623  00253E  0E00               	movlw	0
  4624  002540  0100               	movlb	0	; () banked
  4625  002542  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  4626  002544  0100               	movlb	0	; () banked
  4627  002546  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  4628  002548  0E00               	movlw	0
  4629  00254A  0100               	movlb	0	; () banked
  4630  00254C  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4631  00254E  0E03               	movlw	3
  4632  002550  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  4633  002552  EC33  F029         	call	___wmul	;wreg free
  4634  002556  0E1F               	movlw	low __npowers_
  4635  002558  0100               	movlb	0	; () banked
  4636  00255A  259E               	addwf	?___wmul& (0+255),w,b
  4637  00255C  6EF6               	movwf	tblptrl,c
  4638  00255E  0E7F               	movlw	high __npowers_
  4639  002560  0100               	movlb	0	; () banked
  4640  002562  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  4641  002564  6EF7               	movwf	tblptrh,c
  4642  002566                     	if	0	;There are less than 3 active tblptr bytes
  4643  002566                     	endif
  4644  002566  0009               	tblrd		*+
  4645  002568  CFF5 F0A4          	movff	tablat,___ftmul@f1
  4646  00256C  0009               	tblrd		*+
  4647  00256E  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  4648  002572  000A               	tblrd		*-
  4649  002574  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  4650  002578  EC2E  F01E         	call	___ftmul	;wreg free
  4651  00257C  C0A4  F100         	movff	?___ftmul,_scale$1744
  4652  002580  C0A5  F101         	movff	?___ftmul+1,_scale$1744+1
  4653  002584  C0A6  F102         	movff	?___ftmul+2,_scale$1744+2
  4654                           
  4655                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4656  002588  C100  F0A4         	movff	_scale$1744,___ftmul@f1
  4657  00258C  C101  F0A5         	movff	_scale$1744+1,___ftmul@f1+1
  4658  002590  C102  F0A6         	movff	_scale$1744+2,___ftmul@f1+2
  4659  002594  0E00               	movlw	0
  4660  002596  0100               	movlb	0	; () banked
  4661  002598  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4662  00259A  0E03               	movlw	3
  4663  00259C  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  4664  00259E  0E00               	movlw	0
  4665  0025A0  0100               	movlb	0	; () banked
  4666  0025A2  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  4667  0025A4  0E0A               	movlw	10
  4668  0025A6  6F92               	movwf	___awmod@divisor& (0+255),b
  4669  0025A8  0101               	movlb	1	; () banked
  4670  0025AA  5103               	movf	scale@scl& (0+255),w,b
  4671  0025AC  0100               	movlb	0	; () banked
  4672  0025AE  6F90               	movwf	___awmod@dividend& (0+255),b
  4673  0025B0  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  4674  0025B2  BF90               	btfsc	___awmod@dividend& (0+255),7,b
  4675  0025B4  0791               	decf	(___awmod@dividend+1)& (0+255),f,b
  4676  0025B6  EC48  F025         	call	___awmod	;wreg free
  4677  0025BA  C090  F09E         	movff	?___awmod,___wmul@multiplier
  4678  0025BE  C091  F09F         	movff	?___awmod+1,___wmul@multiplier+1
  4679  0025C2  EC33  F029         	call	___wmul	;wreg free
  4680  0025C6  0E1F               	movlw	low __npowers_
  4681  0025C8  0100               	movlb	0	; () banked
  4682  0025CA  259E               	addwf	?___wmul& (0+255),w,b
  4683  0025CC  6EF6               	movwf	tblptrl,c
  4684  0025CE  0E7F               	movlw	high __npowers_
  4685  0025D0  0100               	movlb	0	; () banked
  4686  0025D2  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  4687  0025D4  6EF7               	movwf	tblptrh,c
  4688  0025D6                     	if	0	;There are less than 3 active tblptr bytes
  4689  0025D6                     	endif
  4690  0025D6  0009               	tblrd		*+
  4691  0025D8  CFF5 F0A7          	movff	tablat,___ftmul@f2
  4692  0025DC  0009               	tblrd		*+
  4693  0025DE  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  4694  0025E2  000A               	tblrd		*-
  4695  0025E4  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  4696  0025E8  EC2E  F01E         	call	___ftmul	;wreg free
  4697  0025EC  C0A4  F0B3         	movff	?___ftmul,?_scale
  4698  0025F0  C0A5  F0B4         	movff	?___ftmul+1,?_scale+1
  4699  0025F4  C0A6  F0B5         	movff	?___ftmul+2,?_scale+2
  4700  0025F8  0012               	return	
  4701  0025FA                     l6218:
  4702                           
  4703                           ;doprnt.c: 432: else if(scl > 10)
  4704  0025FA  0101               	movlb	1	; () banked
  4705  0025FC  5103               	movf	scale@scl& (0+255),w,b
  4706  0025FE  0A80               	xorlw	128
  4707  002600  0F75               	addlw	-139
  4708  002602  A0D8               	btfss	status,0,c
  4709  002604  D05D               	goto	l6224
  4710                           
  4711                           ; BSR set to: 1
  4712                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4713  002606  0E00               	movlw	0
  4714  002608  0100               	movlb	0	; () banked
  4715  00260A  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  4716  00260C  0E0A               	movlw	10
  4717  00260E  6F98               	movwf	___awdiv@divisor& (0+255),b
  4718  002610  0101               	movlb	1	; () banked
  4719  002612  5103               	movf	scale@scl& (0+255),w,b
  4720  002614  0100               	movlb	0	; () banked
  4721  002616  6F96               	movwf	___awdiv@dividend& (0+255),b
  4722  002618  6B97               	clrf	(___awdiv@dividend+1)& (0+255),b
  4723  00261A  BF96               	btfsc	___awdiv@dividend& (0+255),7,b
  4724  00261C  0797               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4725  00261E  EC34  F024         	call	___awdiv	;wreg free
  4726  002622  0E09               	movlw	9
  4727  002624  0100               	movlb	0	; () banked
  4728  002626  2596               	addwf	?___awdiv& (0+255),w,b
  4729  002628  0100               	movlb	0	; () banked
  4730  00262A  6F9E               	movwf	___wmul@multiplier& (0+255),b
  4731  00262C  0E00               	movlw	0
  4732  00262E  0100               	movlb	0	; () banked
  4733  002630  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  4734  002632  0100               	movlb	0	; () banked
  4735  002634  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  4736  002636  0E00               	movlw	0
  4737  002638  0100               	movlb	0	; () banked
  4738  00263A  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4739  00263C  0E03               	movlw	3
  4740  00263E  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  4741  002640  EC33  F029         	call	___wmul	;wreg free
  4742  002644  0E1F               	movlw	low __npowers_
  4743  002646  0100               	movlb	0	; () banked
  4744  002648  259E               	addwf	?___wmul& (0+255),w,b
  4745  00264A  6EF6               	movwf	tblptrl,c
  4746  00264C  0E7F               	movlw	high __npowers_
  4747  00264E  0100               	movlb	0	; () banked
  4748  002650  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  4749  002652  6EF7               	movwf	tblptrh,c
  4750  002654                     	if	0	;There are less than 3 active tblptr bytes
  4751  002654                     	endif
  4752  002654  0009               	tblrd		*+
  4753  002656  CFF5 F0A4          	movff	tablat,___ftmul@f1
  4754  00265A  0009               	tblrd		*+
  4755  00265C  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  4756  002660  000A               	tblrd		*-
  4757  002662  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  4758  002666  0E00               	movlw	0
  4759  002668  0100               	movlb	0	; () banked
  4760  00266A  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4761  00266C  0E03               	movlw	3
  4762  00266E  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  4763  002670  0E00               	movlw	0
  4764  002672  0100               	movlb	0	; () banked
  4765  002674  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  4766  002676  0E0A               	movlw	10
  4767  002678  6F92               	movwf	___awmod@divisor& (0+255),b
  4768  00267A  0101               	movlb	1	; () banked
  4769  00267C  5103               	movf	scale@scl& (0+255),w,b
  4770  00267E  0100               	movlb	0	; () banked
  4771  002680  6F90               	movwf	___awmod@dividend& (0+255),b
  4772  002682  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  4773  002684  BF90               	btfsc	___awmod@dividend& (0+255),7,b
  4774  002686  0791               	decf	(___awmod@dividend+1)& (0+255),f,b
  4775  002688  EC48  F025         	call	___awmod	;wreg free
  4776  00268C  C090  F09E         	movff	?___awmod,___wmul@multiplier
  4777  002690  C091  F09F         	movff	?___awmod+1,___wmul@multiplier+1
  4778  002694  EC33  F029         	call	___wmul	;wreg free
  4779  002698  0E1F               	movlw	low __npowers_
  4780  00269A  0100               	movlb	0	; () banked
  4781  00269C  259E               	addwf	?___wmul& (0+255),w,b
  4782  00269E  6EF6               	movwf	tblptrl,c
  4783  0026A0  0E7F               	movlw	high __npowers_
  4784  0026A2  0100               	movlb	0	; () banked
  4785  0026A4  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  4786  0026A6  6EF7               	movwf	tblptrh,c
  4787  0026A8                     	if	0	;There are less than 3 active tblptr bytes
  4788  0026A8                     	endif
  4789  0026A8  0009               	tblrd		*+
  4790  0026AA  CFF5 F0A7          	movff	tablat,___ftmul@f2
  4791  0026AE  0009               	tblrd		*+
  4792  0026B0  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  4793  0026B4  000A               	tblrd		*-
  4794  0026B6  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  4795  0026BA  EC2E  F01E         	call	___ftmul	;wreg free
  4796  0026BE  D796               	goto	L3
  4797  0026C0                     l6224:
  4798                           
  4799                           ;doprnt.c: 434: return _npowers_[scl];
  4800  0026C0  0101               	movlb	1	; () banked
  4801  0026C2  5103               	movf	scale@scl& (0+255),w,b
  4802  0026C4  0D03               	mullw	3
  4803  0026C6  0E1F               	movlw	low __npowers_
  4804  0026C8  24F3               	addwf	prodl,w,c
  4805  0026CA  6EF6               	movwf	tblptrl,c
  4806  0026CC  0E7F               	movlw	high __npowers_
  4807  0026CE  20F4               	addwfc	prodh,w,c
  4808  0026D0  6EF7               	movwf	tblptrh,c
  4809  0026D2                     	if	0	;There are less than 3 active tblptr bytes
  4810  0026D2                     	endif
  4811  0026D2  0009               	tblrd		*+
  4812  0026D4  CFF5 F0B3          	movff	tablat,?_scale
  4813  0026D8  0009               	tblrd		*+
  4814  0026DA  CFF5 F0B4          	movff	tablat,?_scale+1
  4815  0026DE  000A               	tblrd		*-
  4816  0026E0  CFF5 F0B5          	movff	tablat,?_scale+2
  4817                           
  4818                           ; BSR set to: 1
  4819  0026E4  0012               	return	
  4820  0026E6                     l6228:
  4821                           
  4822                           ; BSR set to: 1
  4823                           ;doprnt.c: 435: }
  4824                           ;doprnt.c: 436: if(scl>=110)
  4825  0026E6  0101               	movlb	1	; () banked
  4826  0026E8  5103               	movf	scale@scl& (0+255),w,b
  4827  0026EA  0A80               	xorlw	128
  4828  0026EC  0F12               	addlw	-238
  4829  0026EE  A0D8               	btfss	status,0,c
  4830  0026F0  D0AC               	goto	l6236
  4831                           
  4832                           ; BSR set to: 1
  4833                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4834  0026F2  0E00               	movlw	0
  4835  0026F4  0100               	movlb	0	; () banked
  4836  0026F6  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4837  0026F8  0E03               	movlw	3
  4838  0026FA  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  4839  0026FC  0E00               	movlw	0
  4840  0026FE  0100               	movlb	0	; () banked
  4841  002700  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  4842  002702  0E0A               	movlw	10
  4843  002704  6F98               	movwf	___awdiv@divisor& (0+255),b
  4844  002706  0E00               	movlw	0
  4845  002708  0100               	movlb	0	; () banked
  4846  00270A  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  4847  00270C  0E64               	movlw	100
  4848  00270E  6F92               	movwf	___awmod@divisor& (0+255),b
  4849  002710  0101               	movlb	1	; () banked
  4850  002712  5103               	movf	scale@scl& (0+255),w,b
  4851  002714  0100               	movlb	0	; () banked
  4852  002716  6F90               	movwf	___awmod@dividend& (0+255),b
  4853  002718  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  4854  00271A  BF90               	btfsc	___awmod@dividend& (0+255),7,b
  4855  00271C  0791               	decf	(___awmod@dividend+1)& (0+255),f,b
  4856  00271E  EC48  F025         	call	___awmod	;wreg free
  4857  002722  C090  F096         	movff	?___awmod,___awdiv@dividend
  4858  002726  C091  F097         	movff	?___awmod+1,___awdiv@dividend+1
  4859  00272A  EC34  F024         	call	___awdiv	;wreg free
  4860  00272E  0E09               	movlw	9
  4861  002730  0100               	movlb	0	; () banked
  4862  002732  2596               	addwf	?___awdiv& (0+255),w,b
  4863  002734  0100               	movlb	0	; () banked
  4864  002736  6F9E               	movwf	___wmul@multiplier& (0+255),b
  4865  002738  0E00               	movlw	0
  4866  00273A  0100               	movlb	0	; () banked
  4867  00273C  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  4868  00273E  0100               	movlb	0	; () banked
  4869  002740  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  4870  002742  EC33  F029         	call	___wmul	;wreg free
  4871  002746  0E46               	movlw	low __powers_
  4872  002748  0100               	movlb	0	; () banked
  4873  00274A  259E               	addwf	?___wmul& (0+255),w,b
  4874  00274C  6EF6               	movwf	tblptrl,c
  4875  00274E  0E7F               	movlw	high __powers_
  4876  002750  0100               	movlb	0	; () banked
  4877  002752  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  4878  002754  6EF7               	movwf	tblptrh,c
  4879  002756                     	if	0	;There are less than 3 active tblptr bytes
  4880  002756                     	endif
  4881  002756  0009               	tblrd		*+
  4882  002758  CFF5 F0A7          	movff	tablat,___ftmul@f2
  4883  00275C  0009               	tblrd		*+
  4884  00275E  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  4885  002762  000A               	tblrd		*-
  4886  002764  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  4887  002768  0E00               	movlw	0
  4888  00276A  0100               	movlb	0	; () banked
  4889  00276C  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  4890  00276E  0E64               	movlw	100
  4891  002770  6F98               	movwf	___awdiv@divisor& (0+255),b
  4892  002772  0101               	movlb	1	; () banked
  4893  002774  5103               	movf	scale@scl& (0+255),w,b
  4894  002776  0100               	movlb	0	; () banked
  4895  002778  6F96               	movwf	___awdiv@dividend& (0+255),b
  4896  00277A  6B97               	clrf	(___awdiv@dividend+1)& (0+255),b
  4897  00277C  BF96               	btfsc	___awdiv@dividend& (0+255),7,b
  4898  00277E  0797               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4899  002780  EC34  F024         	call	___awdiv	;wreg free
  4900  002784  0E12               	movlw	18
  4901  002786  0100               	movlb	0	; () banked
  4902  002788  2596               	addwf	?___awdiv& (0+255),w,b
  4903  00278A  0100               	movlb	0	; () banked
  4904  00278C  6F9E               	movwf	___wmul@multiplier& (0+255),b
  4905  00278E  0E00               	movlw	0
  4906  002790  0100               	movlb	0	; () banked
  4907  002792  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  4908  002794  0100               	movlb	0	; () banked
  4909  002796  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  4910  002798  0E00               	movlw	0
  4911  00279A  0100               	movlb	0	; () banked
  4912  00279C  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4913  00279E  0E03               	movlw	3
  4914  0027A0  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  4915  0027A2  EC33  F029         	call	___wmul	;wreg free
  4916  0027A6  0E46               	movlw	low __powers_
  4917  0027A8  0100               	movlb	0	; () banked
  4918  0027AA  259E               	addwf	?___wmul& (0+255),w,b
  4919  0027AC  6EF6               	movwf	tblptrl,c
  4920  0027AE  0E7F               	movlw	high __powers_
  4921  0027B0  0100               	movlb	0	; () banked
  4922  0027B2  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  4923  0027B4  6EF7               	movwf	tblptrh,c
  4924  0027B6                     	if	0	;There are less than 3 active tblptr bytes
  4925  0027B6                     	endif
  4926  0027B6  0009               	tblrd		*+
  4927  0027B8  CFF5 F0A4          	movff	tablat,___ftmul@f1
  4928  0027BC  0009               	tblrd		*+
  4929  0027BE  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  4930  0027C2  000A               	tblrd		*-
  4931  0027C4  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  4932  0027C8  EC2E  F01E         	call	___ftmul	;wreg free
  4933  0027CC  C0A4  F100         	movff	?___ftmul,_scale$1744
  4934  0027D0  C0A5  F101         	movff	?___ftmul+1,_scale$1744+1
  4935  0027D4  C0A6  F102         	movff	?___ftmul+2,_scale$1744+2
  4936                           
  4937                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4938  0027D8  C100  F0A4         	movff	_scale$1744,___ftmul@f1
  4939  0027DC  C101  F0A5         	movff	_scale$1744+1,___ftmul@f1+1
  4940  0027E0  C102  F0A6         	movff	_scale$1744+2,___ftmul@f1+2
  4941  0027E4  0E00               	movlw	0
  4942  0027E6  0100               	movlb	0	; () banked
  4943  0027E8  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4944  0027EA  0E03               	movlw	3
  4945  0027EC  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  4946  0027EE  0E00               	movlw	0
  4947  0027F0  0100               	movlb	0	; () banked
  4948  0027F2  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  4949  0027F4  0E0A               	movlw	10
  4950  0027F6  6F92               	movwf	___awmod@divisor& (0+255),b
  4951  0027F8  0101               	movlb	1	; () banked
  4952  0027FA  5103               	movf	scale@scl& (0+255),w,b
  4953  0027FC  0100               	movlb	0	; () banked
  4954  0027FE  6F90               	movwf	___awmod@dividend& (0+255),b
  4955  002800  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  4956  002802  BF90               	btfsc	___awmod@dividend& (0+255),7,b
  4957  002804  0791               	decf	(___awmod@dividend+1)& (0+255),f,b
  4958  002806  EC48  F025         	call	___awmod	;wreg free
  4959  00280A  C090  F09E         	movff	?___awmod,___wmul@multiplier
  4960  00280E  C091  F09F         	movff	?___awmod+1,___wmul@multiplier+1
  4961  002812  EC33  F029         	call	___wmul	;wreg free
  4962  002816  0E46               	movlw	low __powers_
  4963  002818  0100               	movlb	0	; () banked
  4964  00281A  259E               	addwf	?___wmul& (0+255),w,b
  4965  00281C  6EF6               	movwf	tblptrl,c
  4966  00281E  0E7F               	movlw	high __powers_
  4967  002820  0100               	movlb	0	; () banked
  4968  002822  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  4969  002824  6EF7               	movwf	tblptrh,c
  4970  002826                     	if	0	;There are less than 3 active tblptr bytes
  4971  002826                     	endif
  4972  002826  0009               	tblrd		*+
  4973  002828  CFF5 F0A7          	movff	tablat,___ftmul@f2
  4974  00282C  0009               	tblrd		*+
  4975  00282E  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  4976  002832  000A               	tblrd		*-
  4977  002834  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  4978  002838  EC2E  F01E         	call	___ftmul	;wreg free
  4979  00283C  C0A4  F0B3         	movff	?___ftmul,?_scale
  4980  002840  C0A5  F0B4         	movff	?___ftmul+1,?_scale+1
  4981  002844  C0A6  F0B5         	movff	?___ftmul+2,?_scale+2
  4982  002848  0012               	return	
  4983  00284A                     l6236:
  4984                           
  4985                           ;doprnt.c: 438: else if(scl > 10)
  4986  00284A  0101               	movlb	1	; () banked
  4987  00284C  5103               	movf	scale@scl& (0+255),w,b
  4988  00284E  0A80               	xorlw	128
  4989  002850  0F75               	addlw	-139
  4990  002852  A0D8               	btfss	status,0,c
  4991  002854  D05D               	goto	l6242
  4992                           
  4993                           ; BSR set to: 1
  4994                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4995  002856  0E00               	movlw	0
  4996  002858  0100               	movlb	0	; () banked
  4997  00285A  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  4998  00285C  0E0A               	movlw	10
  4999  00285E  6F98               	movwf	___awdiv@divisor& (0+255),b
  5000  002860  0101               	movlb	1	; () banked
  5001  002862  5103               	movf	scale@scl& (0+255),w,b
  5002  002864  0100               	movlb	0	; () banked
  5003  002866  6F96               	movwf	___awdiv@dividend& (0+255),b
  5004  002868  6B97               	clrf	(___awdiv@dividend+1)& (0+255),b
  5005  00286A  BF96               	btfsc	___awdiv@dividend& (0+255),7,b
  5006  00286C  0797               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5007  00286E  EC34  F024         	call	___awdiv	;wreg free
  5008  002872  0E09               	movlw	9
  5009  002874  0100               	movlb	0	; () banked
  5010  002876  2596               	addwf	?___awdiv& (0+255),w,b
  5011  002878  0100               	movlb	0	; () banked
  5012  00287A  6F9E               	movwf	___wmul@multiplier& (0+255),b
  5013  00287C  0E00               	movlw	0
  5014  00287E  0100               	movlb	0	; () banked
  5015  002880  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  5016  002882  0100               	movlb	0	; () banked
  5017  002884  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  5018  002886  0E00               	movlw	0
  5019  002888  0100               	movlb	0	; () banked
  5020  00288A  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5021  00288C  0E03               	movlw	3
  5022  00288E  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  5023  002890  EC33  F029         	call	___wmul	;wreg free
  5024  002894  0E46               	movlw	low __powers_
  5025  002896  0100               	movlb	0	; () banked
  5026  002898  259E               	addwf	?___wmul& (0+255),w,b
  5027  00289A  6EF6               	movwf	tblptrl,c
  5028  00289C  0E7F               	movlw	high __powers_
  5029  00289E  0100               	movlb	0	; () banked
  5030  0028A0  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  5031  0028A2  6EF7               	movwf	tblptrh,c
  5032  0028A4                     	if	0	;There are less than 3 active tblptr bytes
  5033  0028A4                     	endif
  5034  0028A4  0009               	tblrd		*+
  5035  0028A6  CFF5 F0A4          	movff	tablat,___ftmul@f1
  5036  0028AA  0009               	tblrd		*+
  5037  0028AC  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  5038  0028B0  000A               	tblrd		*-
  5039  0028B2  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  5040  0028B6  0E00               	movlw	0
  5041  0028B8  0100               	movlb	0	; () banked
  5042  0028BA  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5043  0028BC  0E03               	movlw	3
  5044  0028BE  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  5045  0028C0  0E00               	movlw	0
  5046  0028C2  0100               	movlb	0	; () banked
  5047  0028C4  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  5048  0028C6  0E0A               	movlw	10
  5049  0028C8  6F92               	movwf	___awmod@divisor& (0+255),b
  5050  0028CA  0101               	movlb	1	; () banked
  5051  0028CC  5103               	movf	scale@scl& (0+255),w,b
  5052  0028CE  0100               	movlb	0	; () banked
  5053  0028D0  6F90               	movwf	___awmod@dividend& (0+255),b
  5054  0028D2  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  5055  0028D4  BF90               	btfsc	___awmod@dividend& (0+255),7,b
  5056  0028D6  0791               	decf	(___awmod@dividend+1)& (0+255),f,b
  5057  0028D8  EC48  F025         	call	___awmod	;wreg free
  5058  0028DC  C090  F09E         	movff	?___awmod,___wmul@multiplier
  5059  0028E0  C091  F09F         	movff	?___awmod+1,___wmul@multiplier+1
  5060  0028E4  EC33  F029         	call	___wmul	;wreg free
  5061  0028E8  0E46               	movlw	low __powers_
  5062  0028EA  0100               	movlb	0	; () banked
  5063  0028EC  259E               	addwf	?___wmul& (0+255),w,b
  5064  0028EE  6EF6               	movwf	tblptrl,c
  5065  0028F0  0E7F               	movlw	high __powers_
  5066  0028F2  0100               	movlb	0	; () banked
  5067  0028F4  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  5068  0028F6  6EF7               	movwf	tblptrh,c
  5069  0028F8                     	if	0	;There are less than 3 active tblptr bytes
  5070  0028F8                     	endif
  5071  0028F8  0009               	tblrd		*+
  5072  0028FA  CFF5 F0A7          	movff	tablat,___ftmul@f2
  5073  0028FE  0009               	tblrd		*+
  5074  002900  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  5075  002904  000A               	tblrd		*-
  5076  002906  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  5077  00290A  EC2E  F01E         	call	___ftmul	;wreg free
  5078  00290E  D796               	goto	L4
  5079  002910                     l6242:
  5080                           
  5081                           ;doprnt.c: 440: return _powers_[scl];
  5082  002910  0101               	movlb	1	; () banked
  5083  002912  5103               	movf	scale@scl& (0+255),w,b
  5084  002914  0D03               	mullw	3
  5085  002916  0E46               	movlw	low __powers_
  5086  002918  24F3               	addwf	prodl,w,c
  5087  00291A  6EF6               	movwf	tblptrl,c
  5088  00291C  0E7F               	movlw	high __powers_
  5089  00291E  20F4               	addwfc	prodh,w,c
  5090  002920  6EF7               	movwf	tblptrh,c
  5091  002922                     	if	0	;There are less than 3 active tblptr bytes
  5092  002922                     	endif
  5093  002922  0009               	tblrd		*+
  5094  002924  CFF5 F0B3          	movff	tablat,?_scale
  5095  002928  0009               	tblrd		*+
  5096  00292A  CFF5 F0B4          	movff	tablat,?_scale+1
  5097  00292E  000A               	tblrd		*-
  5098  002930  CFF5 F0B5          	movff	tablat,?_scale+2
  5099  002934  0012               	return	
  5100  002936                     __end_of_scale:
  5101                           	opt stack 0
  5102                           tosu	equ	0xFFF
  5103                           tosh	equ	0xFFE
  5104                           tosl	equ	0xFFD
  5105                           pclath	equ	0xFFA
  5106                           tblptru	equ	0xFF8
  5107                           tblptrh	equ	0xFF7
  5108                           tblptrl	equ	0xFF6
  5109                           tablat	equ	0xFF5
  5110                           prodh	equ	0xFF4
  5111                           prodl	equ	0xFF3
  5112                           intcon	equ	0xFF2
  5113                           postinc0	equ	0xFEE
  5114                           wreg	equ	0xFE8
  5115                           postdec1	equ	0xFE5
  5116                           fsr1l	equ	0xFE1
  5117                           indf2	equ	0xFDF
  5118                           postinc2	equ	0xFDE
  5119                           postdec2	equ	0xFDD
  5120                           fsr2h	equ	0xFDA
  5121                           fsr2l	equ	0xFD9
  5122                           status	equ	0xFD8
  5123                           
  5124 ;; *************** function _putch *****************
  5125 ;; Defined at:
  5126 ;;		line 111 in file "mcc_generated_files/eusart1.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;  txData          1    wreg     unsigned char 
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;  txData          1   49[BANK0 ] unsigned char 
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  1    wreg      void 
  5133 ;; Registers used:
  5134 ;;		wreg, status,2, cstack
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5140 ;;      Params:         0       0       0       0       0       0       0
  5141 ;;      Locals:         0       1       0       0       0       0       0
  5142 ;;      Temps:          0       0       0       0       0       0       0
  5143 ;;      Totals:         0       1       0       0       0       0       0
  5144 ;;Total ram usage:        1 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; Hardware stack levels required when called:    8
  5147 ;; This function calls:
  5148 ;;		_EUSART1_Write
  5149 ;; This function is called by:
  5150 ;;		i2__doprnt
  5151 ;;		__doprnt
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155                           	psect	text4
  5156  0054A4                     __ptext4:
  5157                           	opt stack 0
  5158  0054A4                     _putch:
  5159                           	opt stack 0
  5160                           
  5161                           ;Skip over the trampoline to the duplicate function for level 2
  5162  0054A4  B25E               	btfsc	btemp,1,c
  5163  0054A6  EF83  F02A         	goto	i2_putch
  5164  0054AA                     _putch$intlevel0:
  5165                           	opt stack 20
  5166                           
  5167                           ;incstack = 0
  5168                           ;putch@txData stored from wreg
  5169  0054AA  0100               	movlb	0	; () banked
  5170  0054AC  6F91               	movwf	putch@txData& (0+255),b
  5171                           
  5172                           ;eusart1.c: 113: EUSART1_Write(txData);
  5173  0054AE  0100               	movlb	0	; () banked
  5174  0054B0  5191               	movf	putch@txData& (0+255),w,b
  5175  0054B2  EC5C  F02A         	call	_EUSART1_Write
  5176  0054B6  0012               	return		;funcret
  5177  0054B8                     __end_of_putch:
  5178                           	opt stack 0
  5179                           tosu	equ	0xFFF
  5180                           tosh	equ	0xFFE
  5181                           tosl	equ	0xFFD
  5182                           pclath	equ	0xFFA
  5183                           tblptru	equ	0xFF8
  5184                           tblptrh	equ	0xFF7
  5185                           tblptrl	equ	0xFF6
  5186                           tablat	equ	0xFF5
  5187                           prodh	equ	0xFF4
  5188                           prodl	equ	0xFF3
  5189                           intcon	equ	0xFF2
  5190                           postinc0	equ	0xFEE
  5191                           wreg	equ	0xFE8
  5192                           postdec1	equ	0xFE5
  5193                           fsr1l	equ	0xFE1
  5194                           indf2	equ	0xFDF
  5195                           postinc2	equ	0xFDE
  5196                           postdec2	equ	0xFDD
  5197                           fsr2h	equ	0xFDA
  5198                           fsr2l	equ	0xFD9
  5199                           status	equ	0xFD8
  5200                           
  5201 ;; *************** function _EUSART1_Write *****************
  5202 ;; Defined at:
  5203 ;;		line 97 in file "mcc_generated_files/eusart1.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;  txData          1    wreg     unsigned char 
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;  txData          1   48[BANK0 ] unsigned char 
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  1    wreg      void 
  5210 ;; Registers used:
  5211 ;;		wreg
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5217 ;;      Params:         0       0       0       0       0       0       0
  5218 ;;      Locals:         0       1       0       0       0       0       0
  5219 ;;      Temps:          0       0       0       0       0       0       0
  5220 ;;      Totals:         0       1       0       0       0       0       0
  5221 ;;Total ram usage:        1 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; Hardware stack levels required when called:    7
  5224 ;; This function calls:
  5225 ;;		Nothing
  5226 ;; This function is called by:
  5227 ;;		_putch
  5228 ;; This function uses a non-reentrant model
  5229 ;;
  5230                           
  5231                           	psect	text5
  5232  0054B8                     __ptext5:
  5233                           	opt stack 0
  5234  0054B8                     _EUSART1_Write:
  5235                           	opt stack 20
  5236                           
  5237                           ;incstack = 0
  5238                           ;EUSART1_Write@txData stored from wreg
  5239  0054B8  0100               	movlb	0	; () banked
  5240  0054BA  6F90               	movwf	EUSART1_Write@txData& (0+255),b
  5241  0054BC                     l238:
  5242  0054BC  A89E               	btfss	3998,4,c	;volatile
  5243  0054BE  D7FE               	goto	l238
  5244                           
  5245                           ;eusart1.c: 101: }
  5246                           ;eusart1.c: 103: TXREG1 = txData;
  5247  0054C0  C090  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  5248  0054C4  0012               	return		;funcret
  5249  0054C6                     __end_of_EUSART1_Write:
  5250                           	opt stack 0
  5251                           tosu	equ	0xFFF
  5252                           tosh	equ	0xFFE
  5253                           tosl	equ	0xFFD
  5254                           pclath	equ	0xFFA
  5255                           tblptru	equ	0xFF8
  5256                           tblptrh	equ	0xFF7
  5257                           tblptrl	equ	0xFF6
  5258                           tablat	equ	0xFF5
  5259                           prodh	equ	0xFF4
  5260                           prodl	equ	0xFF3
  5261                           intcon	equ	0xFF2
  5262                           postinc0	equ	0xFEE
  5263                           wreg	equ	0xFE8
  5264                           postdec1	equ	0xFE5
  5265                           fsr1l	equ	0xFE1
  5266                           indf2	equ	0xFDF
  5267                           postinc2	equ	0xFDE
  5268                           postdec2	equ	0xFDD
  5269                           fsr2h	equ	0xFDA
  5270                           fsr2l	equ	0xFD9
  5271                           status	equ	0xFD8
  5272                           
  5273 ;; *************** function _isdigit *****************
  5274 ;; Defined at:
  5275 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
  5276 ;; Parameters:    Size  Location     Type
  5277 ;;  c               1    wreg     unsigned char 
  5278 ;; Auto vars:     Size  Location     Type
  5279 ;;  c               1   50[BANK0 ] unsigned char 
  5280 ;; Return value:  Size  Location     Type
  5281 ;;		None               void
  5282 ;; Registers used:
  5283 ;;		wreg, status,2, status,0
  5284 ;; Tracked objects:
  5285 ;;		On entry : 0/0
  5286 ;;		On exit  : 0/0
  5287 ;;		Unchanged: 0/0
  5288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5289 ;;      Params:         0       0       0       0       0       0       0
  5290 ;;      Locals:         0       2       0       0       0       0       0
  5291 ;;      Temps:          0       1       0       0       0       0       0
  5292 ;;      Totals:         0       3       0       0       0       0       0
  5293 ;;Total ram usage:        3 bytes
  5294 ;; Hardware stack levels used:    1
  5295 ;; Hardware stack levels required when called:    7
  5296 ;; This function calls:
  5297 ;;		Nothing
  5298 ;; This function is called by:
  5299 ;;		__doprnt
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           
  5303                           	psect	text6
  5304  005398                     __ptext6:
  5305                           	opt stack 0
  5306  005398                     _isdigit:
  5307                           	opt stack 21
  5308                           
  5309                           ;incstack = 0
  5310                           ;isdigit@c stored from wreg
  5311  005398  0100               	movlb	0	; () banked
  5312  00539A  6F92               	movwf	isdigit@c& (0+255),b
  5313  00539C  0E00               	movlw	0
  5314  00539E  0100               	movlb	0	; () banked
  5315  0053A0  6F91               	movwf	_isdigit$1291& (0+255),b
  5316                           
  5317                           ; BSR set to: 0
  5318  0053A2  0E3A               	movlw	58
  5319  0053A4  0100               	movlb	0	; () banked
  5320  0053A6  6192               	cpfslt	isdigit@c& (0+255),b
  5321  0053A8  D007               	goto	l4512
  5322                           
  5323                           ; BSR set to: 0
  5324  0053AA  0E2F               	movlw	47
  5325  0053AC  0100               	movlb	0	; () banked
  5326  0053AE  6592               	cpfsgt	isdigit@c& (0+255),b
  5327  0053B0  D003               	goto	l4512
  5328                           
  5329                           ; BSR set to: 0
  5330  0053B2  0E01               	movlw	1
  5331  0053B4  0100               	movlb	0	; () banked
  5332  0053B6  6F91               	movwf	_isdigit$1291& (0+255),b
  5333  0053B8                     l4512:
  5334                           
  5335                           ; BSR set to: 0
  5336  0053B8  C091  F090         	movff	_isdigit$1291,??_isdigit
  5337  0053BC  0100               	movlb	0	; () banked
  5338  0053BE  3190               	rrcf	??_isdigit& (0+255),w,b
  5339  0053C0  0012               	return	
  5340  0053C2                     __end_of_isdigit:
  5341                           	opt stack 0
  5342                           tosu	equ	0xFFF
  5343                           tosh	equ	0xFFE
  5344                           tosl	equ	0xFFD
  5345                           pclath	equ	0xFFA
  5346                           tblptru	equ	0xFF8
  5347                           tblptrh	equ	0xFF7
  5348                           tblptrl	equ	0xFF6
  5349                           tablat	equ	0xFF5
  5350                           prodh	equ	0xFF4
  5351                           prodl	equ	0xFF3
  5352                           intcon	equ	0xFF2
  5353                           postinc0	equ	0xFEE
  5354                           wreg	equ	0xFE8
  5355                           postdec1	equ	0xFE5
  5356                           fsr1l	equ	0xFE1
  5357                           indf2	equ	0xFDF
  5358                           postinc2	equ	0xFDE
  5359                           postdec2	equ	0xFDD
  5360                           fsr2h	equ	0xFDA
  5361                           fsr2l	equ	0xFD9
  5362                           status	equ	0xFD8
  5363                           
  5364 ;; *************** function _fround *****************
  5365 ;; Defined at:
  5366 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;  prec            1    wreg     unsigned char 
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  prec            1    6[BANK1 ] unsigned char 
  5371 ;; Return value:  Size  Location     Type
  5372 ;;                  3   83[BANK0 ] unsigned char 
  5373 ;; Registers used:
  5374 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5380 ;;      Params:         0       3       0       0       0       0       0
  5381 ;;      Locals:         0       0       7       0       0       0       0
  5382 ;;      Temps:          0       0       0       0       0       0       0
  5383 ;;      Totals:         0       3       7       0       0       0       0
  5384 ;;Total ram usage:       10 bytes
  5385 ;; Hardware stack levels used:    1
  5386 ;; Hardware stack levels required when called:    9
  5387 ;; This function calls:
  5388 ;;		___awdiv
  5389 ;;		___awmod
  5390 ;;		___ftmul
  5391 ;;		___wmul
  5392 ;; This function is called by:
  5393 ;;		__doprnt
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           	psect	text7
  5398  002D26                     __ptext7:
  5399                           	opt stack 0
  5400  002D26                     _fround:
  5401                           	opt stack 19
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;incstack = 0
  5405                           ;fround@prec stored from wreg
  5406  002D26  0101               	movlb	1	; () banked
  5407  002D28  6F06               	movwf	fround@prec& (0+255),b
  5408                           
  5409                           ;doprnt.c: 413: if(prec>=110)
  5410  002D2A  0E6D               	movlw	109
  5411  002D2C  0101               	movlb	1	; () banked
  5412  002D2E  6506               	cpfsgt	fround@prec& (0+255),b
  5413  002D30  D0BA               	goto	l6196
  5414                           
  5415                           ; BSR set to: 1
  5416                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5417  002D32  0E00               	movlw	0
  5418  002D34  0100               	movlb	0	; () banked
  5419  002D36  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5420  002D38  0E03               	movlw	3
  5421  002D3A  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  5422  002D3C  0E00               	movlw	0
  5423  002D3E  0100               	movlb	0	; () banked
  5424  002D40  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  5425  002D42  0E0A               	movlw	10
  5426  002D44  6F98               	movwf	___awdiv@divisor& (0+255),b
  5427  002D46  0E00               	movlw	0
  5428  002D48  0100               	movlb	0	; () banked
  5429  002D4A  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  5430  002D4C  0E64               	movlw	100
  5431  002D4E  6F92               	movwf	___awmod@divisor& (0+255),b
  5432  002D50  C106  F090         	movff	fround@prec,___awmod@dividend
  5433  002D54  0100               	movlb	0	; () banked
  5434  002D56  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  5435  002D58  EC48  F025         	call	___awmod	;wreg free
  5436  002D5C  C090  F096         	movff	?___awmod,___awdiv@dividend
  5437  002D60  C091  F097         	movff	?___awmod+1,___awdiv@dividend+1
  5438  002D64  EC34  F024         	call	___awdiv	;wreg free
  5439  002D68  0E09               	movlw	9
  5440  002D6A  0100               	movlb	0	; () banked
  5441  002D6C  2596               	addwf	?___awdiv& (0+255),w,b
  5442  002D6E  0100               	movlb	0	; () banked
  5443  002D70  6F9E               	movwf	___wmul@multiplier& (0+255),b
  5444  002D72  0E00               	movlw	0
  5445  002D74  0100               	movlb	0	; () banked
  5446  002D76  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  5447  002D78  0100               	movlb	0	; () banked
  5448  002D7A  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  5449  002D7C  EC33  F029         	call	___wmul	;wreg free
  5450  002D80  0E1F               	movlw	low __npowers_
  5451  002D82  0100               	movlb	0	; () banked
  5452  002D84  259E               	addwf	?___wmul& (0+255),w,b
  5453  002D86  6EF6               	movwf	tblptrl,c
  5454  002D88  0E7F               	movlw	high __npowers_
  5455  002D8A  0100               	movlb	0	; () banked
  5456  002D8C  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  5457  002D8E  6EF7               	movwf	tblptrh,c
  5458  002D90                     	if	0	;There are less than 3 active tblptr bytes
  5459  002D90                     	endif
  5460  002D90  0009               	tblrd		*+
  5461  002D92  CFF5 F0A7          	movff	tablat,___ftmul@f2
  5462  002D96  0009               	tblrd		*+
  5463  002D98  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  5464  002D9C  000A               	tblrd		*-
  5465  002D9E  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  5466  002DA2  0E00               	movlw	0
  5467  002DA4  0100               	movlb	0	; () banked
  5468  002DA6  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  5469  002DA8  0E64               	movlw	100
  5470  002DAA  6F98               	movwf	___awdiv@divisor& (0+255),b
  5471  002DAC  C106  F096         	movff	fround@prec,___awdiv@dividend
  5472  002DB0  0100               	movlb	0	; () banked
  5473  002DB2  6B97               	clrf	(___awdiv@dividend+1)& (0+255),b
  5474  002DB4  EC34  F024         	call	___awdiv	;wreg free
  5475  002DB8  0E12               	movlw	18
  5476  002DBA  0100               	movlb	0	; () banked
  5477  002DBC  2596               	addwf	?___awdiv& (0+255),w,b
  5478  002DBE  0100               	movlb	0	; () banked
  5479  002DC0  6F9E               	movwf	___wmul@multiplier& (0+255),b
  5480  002DC2  0E00               	movlw	0
  5481  002DC4  0100               	movlb	0	; () banked
  5482  002DC6  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  5483  002DC8  0100               	movlb	0	; () banked
  5484  002DCA  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  5485  002DCC  0E00               	movlw	0
  5486  002DCE  0100               	movlb	0	; () banked
  5487  002DD0  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5488  002DD2  0E03               	movlw	3
  5489  002DD4  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  5490  002DD6  EC33  F029         	call	___wmul	;wreg free
  5491  002DDA  0E1F               	movlw	low __npowers_
  5492  002DDC  0100               	movlb	0	; () banked
  5493  002DDE  259E               	addwf	?___wmul& (0+255),w,b
  5494  002DE0  6EF6               	movwf	tblptrl,c
  5495  002DE2  0E7F               	movlw	high __npowers_
  5496  002DE4  0100               	movlb	0	; () banked
  5497  002DE6  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  5498  002DE8  6EF7               	movwf	tblptrh,c
  5499  002DEA                     	if	0	;There are less than 3 active tblptr bytes
  5500  002DEA                     	endif
  5501  002DEA  0009               	tblrd		*+
  5502  002DEC  CFF5 F0A4          	movff	tablat,___ftmul@f1
  5503  002DF0  0009               	tblrd		*+
  5504  002DF2  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  5505  002DF6  000A               	tblrd		*-
  5506  002DF8  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  5507  002DFC  EC2E  F01E         	call	___ftmul	;wreg free
  5508  002E00  C0A4  F103         	movff	?___ftmul,_fround$1742
  5509  002E04  C0A5  F104         	movff	?___ftmul+1,_fround$1742+1
  5510  002E08  C0A6  F105         	movff	?___ftmul+2,_fround$1742+2
  5511                           
  5512                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5513  002E0C  0E00               	movlw	0
  5514  002E0E  0100               	movlb	0	; () banked
  5515  002E10  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5516  002E12  0E03               	movlw	3
  5517  002E14  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  5518  002E16  0E00               	movlw	0
  5519  002E18  0100               	movlb	0	; () banked
  5520  002E1A  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  5521  002E1C  0E0A               	movlw	10
  5522  002E1E  6F92               	movwf	___awmod@divisor& (0+255),b
  5523  002E20  C106  F090         	movff	fround@prec,___awmod@dividend
  5524  002E24  0100               	movlb	0	; () banked
  5525  002E26  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  5526  002E28  EC48  F025         	call	___awmod	;wreg free
  5527  002E2C  C090  F09E         	movff	?___awmod,___wmul@multiplier
  5528  002E30  C091  F09F         	movff	?___awmod+1,___wmul@multiplier+1
  5529  002E34  EC33  F029         	call	___wmul	;wreg free
  5530  002E38  0E1F               	movlw	low __npowers_
  5531  002E3A  0100               	movlb	0	; () banked
  5532  002E3C  259E               	addwf	?___wmul& (0+255),w,b
  5533  002E3E  6EF6               	movwf	tblptrl,c
  5534  002E40  0E7F               	movlw	high __npowers_
  5535  002E42  0100               	movlb	0	; () banked
  5536  002E44  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  5537  002E46  6EF7               	movwf	tblptrh,c
  5538  002E48                     	if	0	;There are less than 3 active tblptr bytes
  5539  002E48                     	endif
  5540  002E48  0009               	tblrd		*+
  5541  002E4A  CFF5 F0A7          	movff	tablat,___ftmul@f2
  5542  002E4E  0009               	tblrd		*+
  5543  002E50  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  5544  002E54  000A               	tblrd		*-
  5545  002E56  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  5546  002E5A  C103  F0A4         	movff	_fround$1742,___ftmul@f1
  5547  002E5E  C104  F0A5         	movff	_fround$1742+1,___ftmul@f1+1
  5548  002E62  C105  F0A6         	movff	_fround$1742+2,___ftmul@f1+2
  5549  002E66  EC2E  F01E         	call	___ftmul	;wreg free
  5550  002E6A  C0A4  F100         	movff	?___ftmul,_fround$1743
  5551  002E6E  C0A5  F101         	movff	?___ftmul+1,_fround$1743+1
  5552  002E72  C0A6  F102         	movff	?___ftmul+2,_fround$1743+2
  5553                           
  5554                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5555  002E76  C100  F0A4         	movff	_fround$1743,___ftmul@f1
  5556  002E7A  C101  F0A5         	movff	_fround$1743+1,___ftmul@f1+1
  5557  002E7E  C102  F0A6         	movff	_fround$1743+2,___ftmul@f1+2
  5558  002E82  0E00               	movlw	0
  5559  002E84  0100               	movlb	0	; () banked
  5560  002E86  6FA7               	movwf	___ftmul@f2& (0+255),b
  5561  002E88  0E00               	movlw	0
  5562  002E8A  0100               	movlb	0	; () banked
  5563  002E8C  6FA8               	movwf	(___ftmul@f2+1)& (0+255),b
  5564  002E8E  0E3F               	movlw	63
  5565  002E90  0100               	movlb	0	; () banked
  5566  002E92  6FA9               	movwf	(___ftmul@f2+2)& (0+255),b
  5567  002E94  EC2E  F01E         	call	___ftmul	;wreg free
  5568  002E98  C0A4  F0B3         	movff	?___ftmul,?_fround
  5569  002E9C  C0A5  F0B4         	movff	?___ftmul+1,?_fround+1
  5570  002EA0  C0A6  F0B5         	movff	?___ftmul+2,?_fround+2
  5571  002EA4  0012               	return	
  5572  002EA6                     l6196:
  5573                           
  5574                           ;doprnt.c: 415: else if(prec > 10)
  5575  002EA6  0E0A               	movlw	10
  5576  002EA8  0101               	movlb	1	; () banked
  5577  002EAA  6506               	cpfsgt	fround@prec& (0+255),b
  5578  002EAC  D06E               	goto	l6204
  5579                           
  5580                           ; BSR set to: 1
  5581                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5582  002EAE  0E00               	movlw	0
  5583  002EB0  0100               	movlb	0	; () banked
  5584  002EB2  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5585  002EB4  0E03               	movlw	3
  5586  002EB6  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  5587  002EB8  0E00               	movlw	0
  5588  002EBA  0100               	movlb	0	; () banked
  5589  002EBC  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  5590  002EBE  0E0A               	movlw	10
  5591  002EC0  6F92               	movwf	___awmod@divisor& (0+255),b
  5592  002EC2  C106  F090         	movff	fround@prec,___awmod@dividend
  5593  002EC6  0100               	movlb	0	; () banked
  5594  002EC8  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  5595  002ECA  EC48  F025         	call	___awmod	;wreg free
  5596  002ECE  C090  F09E         	movff	?___awmod,___wmul@multiplier
  5597  002ED2  C091  F09F         	movff	?___awmod+1,___wmul@multiplier+1
  5598  002ED6  EC33  F029         	call	___wmul	;wreg free
  5599  002EDA  0E1F               	movlw	low __npowers_
  5600  002EDC  0100               	movlb	0	; () banked
  5601  002EDE  259E               	addwf	?___wmul& (0+255),w,b
  5602  002EE0  6EF6               	movwf	tblptrl,c
  5603  002EE2  0E7F               	movlw	high __npowers_
  5604  002EE4  0100               	movlb	0	; () banked
  5605  002EE6  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  5606  002EE8  6EF7               	movwf	tblptrh,c
  5607  002EEA                     	if	0	;There are less than 3 active tblptr bytes
  5608  002EEA                     	endif
  5609  002EEA  0009               	tblrd		*+
  5610  002EEC  CFF5 F0A7          	movff	tablat,___ftmul@f2
  5611  002EF0  0009               	tblrd		*+
  5612  002EF2  CFF5 F0A8          	movff	tablat,___ftmul@f2+1
  5613  002EF6  000A               	tblrd		*-
  5614  002EF8  CFF5 F0A9          	movff	tablat,___ftmul@f2+2
  5615  002EFC  0E00               	movlw	0
  5616  002EFE  0100               	movlb	0	; () banked
  5617  002F00  6F99               	movwf	(___awdiv@divisor+1)& (0+255),b
  5618  002F02  0E0A               	movlw	10
  5619  002F04  6F98               	movwf	___awdiv@divisor& (0+255),b
  5620  002F06  C106  F096         	movff	fround@prec,___awdiv@dividend
  5621  002F0A  0100               	movlb	0	; () banked
  5622  002F0C  6B97               	clrf	(___awdiv@dividend+1)& (0+255),b
  5623  002F0E  EC34  F024         	call	___awdiv	;wreg free
  5624  002F12  0E09               	movlw	9
  5625  002F14  0100               	movlb	0	; () banked
  5626  002F16  2596               	addwf	?___awdiv& (0+255),w,b
  5627  002F18  0100               	movlb	0	; () banked
  5628  002F1A  6F9E               	movwf	___wmul@multiplier& (0+255),b
  5629  002F1C  0E00               	movlw	0
  5630  002F1E  0100               	movlb	0	; () banked
  5631  002F20  2197               	addwfc	(?___awdiv+1)& (0+255),w,b
  5632  002F22  0100               	movlb	0	; () banked
  5633  002F24  6F9F               	movwf	(___wmul@multiplier+1)& (0+255),b
  5634  002F26  0E00               	movlw	0
  5635  002F28  0100               	movlb	0	; () banked
  5636  002F2A  6FA1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5637  002F2C  0E03               	movlw	3
  5638  002F2E  6FA0               	movwf	___wmul@multiplicand& (0+255),b
  5639  002F30  EC33  F029         	call	___wmul	;wreg free
  5640  002F34  0E1F               	movlw	low __npowers_
  5641  002F36  0100               	movlb	0	; () banked
  5642  002F38  259E               	addwf	?___wmul& (0+255),w,b
  5643  002F3A  6EF6               	movwf	tblptrl,c
  5644  002F3C  0E7F               	movlw	high __npowers_
  5645  002F3E  0100               	movlb	0	; () banked
  5646  002F40  219F               	addwfc	(?___wmul+1)& (0+255),w,b
  5647  002F42  6EF7               	movwf	tblptrh,c
  5648  002F44                     	if	0	;There are less than 3 active tblptr bytes
  5649  002F44                     	endif
  5650  002F44  0009               	tblrd		*+
  5651  002F46  CFF5 F0A4          	movff	tablat,___ftmul@f1
  5652  002F4A  0009               	tblrd		*+
  5653  002F4C  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  5654  002F50  000A               	tblrd		*-
  5655  002F52  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  5656  002F56  EC2E  F01E         	call	___ftmul	;wreg free
  5657  002F5A  C0A4  F103         	movff	?___ftmul,_fround$1742
  5658  002F5E  C0A5  F104         	movff	?___ftmul+1,_fround$1742+1
  5659  002F62  C0A6  F105         	movff	?___ftmul+2,_fround$1742+2
  5660                           
  5661                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5662  002F66  C103  F0A4         	movff	_fround$1742,___ftmul@f1
  5663  002F6A  C104  F0A5         	movff	_fround$1742+1,___ftmul@f1+1
  5664  002F6E  C105  F0A6         	movff	_fround$1742+2,___ftmul@f1+2
  5665  002F72  0E00               	movlw	0
  5666  002F74  0100               	movlb	0	; () banked
  5667  002F76  6FA7               	movwf	___ftmul@f2& (0+255),b
  5668  002F78  0E00               	movlw	0
  5669  002F7A  0100               	movlb	0	; () banked
  5670  002F7C  6FA8               	movwf	(___ftmul@f2+1)& (0+255),b
  5671  002F7E  0E3F               	movlw	63
  5672  002F80  0100               	movlb	0	; () banked
  5673  002F82  6FA9               	movwf	(___ftmul@f2+2)& (0+255),b
  5674  002F84  EC2E  F01E         	call	___ftmul	;wreg free
  5675  002F88  D787               	goto	L5
  5676  002F8A                     l6204:
  5677                           
  5678                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5679  002F8A  0101               	movlb	1	; () banked
  5680  002F8C  5106               	movf	fround@prec& (0+255),w,b
  5681  002F8E  0D03               	mullw	3
  5682  002F90  0E1F               	movlw	low __npowers_
  5683  002F92  24F3               	addwf	prodl,w,c
  5684  002F94  6EF6               	movwf	tblptrl,c
  5685  002F96  0E7F               	movlw	high __npowers_
  5686  002F98  20F4               	addwfc	prodh,w,c
  5687  002F9A  6EF7               	movwf	tblptrh,c
  5688  002F9C                     	if	0	;There are less than 3 active tblptr bytes
  5689  002F9C                     	endif
  5690  002F9C  0009               	tblrd		*+
  5691  002F9E  CFF5 F0A4          	movff	tablat,___ftmul@f1
  5692  002FA2  0009               	tblrd		*+
  5693  002FA4  CFF5 F0A5          	movff	tablat,___ftmul@f1+1
  5694  002FA8  000A               	tblrd		*-
  5695  002FAA  CFF5 F0A6          	movff	tablat,___ftmul@f1+2
  5696  002FAE  0E00               	movlw	0
  5697  002FB0  0100               	movlb	0	; () banked
  5698  002FB2  6FA7               	movwf	___ftmul@f2& (0+255),b
  5699  002FB4  0E00               	movlw	0
  5700  002FB6  0100               	movlb	0	; () banked
  5701  002FB8  6FA8               	movwf	(___ftmul@f2+1)& (0+255),b
  5702  002FBA  0E3F               	movlw	63
  5703  002FBC  0100               	movlb	0	; () banked
  5704  002FBE  6FA9               	movwf	(___ftmul@f2+2)& (0+255),b
  5705  002FC0  EC2E  F01E         	call	___ftmul	;wreg free
  5706  002FC4  C0A4  F0B3         	movff	?___ftmul,?_fround
  5707  002FC8  C0A5  F0B4         	movff	?___ftmul+1,?_fround+1
  5708  002FCC  C0A6  F0B5         	movff	?___ftmul+2,?_fround+2
  5709  002FD0  0012               	return	
  5710  002FD2                     __end_of_fround:
  5711                           	opt stack 0
  5712                           tosu	equ	0xFFF
  5713                           tosh	equ	0xFFE
  5714                           tosl	equ	0xFFD
  5715                           pclath	equ	0xFFA
  5716                           tblptru	equ	0xFF8
  5717                           tblptrh	equ	0xFF7
  5718                           tblptrl	equ	0xFF6
  5719                           tablat	equ	0xFF5
  5720                           prodh	equ	0xFF4
  5721                           prodl	equ	0xFF3
  5722                           intcon	equ	0xFF2
  5723                           postinc0	equ	0xFEE
  5724                           wreg	equ	0xFE8
  5725                           postdec1	equ	0xFE5
  5726                           fsr1l	equ	0xFE1
  5727                           indf2	equ	0xFDF
  5728                           postinc2	equ	0xFDE
  5729                           postdec2	equ	0xFDD
  5730                           fsr2h	equ	0xFDA
  5731                           fsr2l	equ	0xFD9
  5732                           status	equ	0xFD8
  5733                           
  5734 ;; *************** function ___wmul *****************
  5735 ;; Defined at:
  5736 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  5737 ;; Parameters:    Size  Location     Type
  5738 ;;  multiplier      2   62[BANK0 ] unsigned int 
  5739 ;;  multiplicand    2   64[BANK0 ] unsigned int 
  5740 ;; Auto vars:     Size  Location     Type
  5741 ;;  product         2   66[BANK0 ] unsigned int 
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  2   62[BANK0 ] unsigned int 
  5744 ;; Registers used:
  5745 ;;		wreg, status,2, status,0, prodl, prodh
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5751 ;;      Params:         0       4       0       0       0       0       0
  5752 ;;      Locals:         0       2       0       0       0       0       0
  5753 ;;      Temps:          0       0       0       0       0       0       0
  5754 ;;      Totals:         0       6       0       0       0       0       0
  5755 ;;Total ram usage:        6 bytes
  5756 ;; Hardware stack levels used:    1
  5757 ;; Hardware stack levels required when called:    7
  5758 ;; This function calls:
  5759 ;;		Nothing
  5760 ;; This function is called by:
  5761 ;;		_fround
  5762 ;;		_scale
  5763 ;;		__doprnt
  5764 ;; This function uses a non-reentrant model
  5765 ;;
  5766                           
  5767                           	psect	text8
  5768  005266                     __ptext8:
  5769                           	opt stack 0
  5770  005266                     ___wmul:
  5771                           	opt stack 20
  5772                           
  5773                           ;incstack = 0
  5774  005266  0100               	movlb	0	; () banked
  5775  005268  519E               	movf	___wmul@multiplier& (0+255),w,b
  5776  00526A  0100               	movlb	0	; () banked
  5777  00526C  03A0               	mulwf	___wmul@multiplicand& (0+255),b
  5778  00526E  CFF3 F0A2          	movff	prodl,___wmul@product
  5779  005272  CFF4 F0A3          	movff	prodh,___wmul@product+1
  5780  005276  0100               	movlb	0	; () banked
  5781  005278  519E               	movf	___wmul@multiplier& (0+255),w,b
  5782  00527A  0100               	movlb	0	; () banked
  5783  00527C  03A1               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5784  00527E  50F3               	movf	prodl,w,c
  5785  005280  0100               	movlb	0	; () banked
  5786  005282  27A3               	addwf	(___wmul@product+1)& (0+255),f,b
  5787  005284  0100               	movlb	0	; () banked
  5788  005286  519F               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5789  005288  0100               	movlb	0	; () banked
  5790  00528A  03A0               	mulwf	___wmul@multiplicand& (0+255),b
  5791  00528C  50F3               	movf	prodl,w,c
  5792  00528E  0100               	movlb	0	; () banked
  5793  005290  27A3               	addwf	(___wmul@product+1)& (0+255),f,b
  5794                           
  5795                           ; BSR set to: 0
  5796  005292  C0A2  F09E         	movff	___wmul@product,?___wmul
  5797  005296  C0A3  F09F         	movff	___wmul@product+1,?___wmul+1
  5798  00529A  0012               	return	
  5799  00529C                     __end_of___wmul:
  5800                           	opt stack 0
  5801                           tosu	equ	0xFFF
  5802                           tosh	equ	0xFFE
  5803                           tosl	equ	0xFFD
  5804                           pclath	equ	0xFFA
  5805                           tblptru	equ	0xFF8
  5806                           tblptrh	equ	0xFF7
  5807                           tblptrl	equ	0xFF6
  5808                           tablat	equ	0xFF5
  5809                           prodh	equ	0xFF4
  5810                           prodl	equ	0xFF3
  5811                           intcon	equ	0xFF2
  5812                           postinc0	equ	0xFEE
  5813                           wreg	equ	0xFE8
  5814                           postdec1	equ	0xFE5
  5815                           fsr1l	equ	0xFE1
  5816                           indf2	equ	0xFDF
  5817                           postinc2	equ	0xFDE
  5818                           postdec2	equ	0xFDD
  5819                           fsr2h	equ	0xFDA
  5820                           fsr2l	equ	0xFD9
  5821                           status	equ	0xFD8
  5822                           
  5823 ;; *************** function ___ftmul *****************
  5824 ;; Defined at:
  5825 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;  f1              3   68[BANK0 ] float 
  5828 ;;  f2              3   71[BANK0 ] float 
  5829 ;; Auto vars:     Size  Location     Type
  5830 ;;  f3_as_produc    3   78[BANK0 ] unsigned um
  5831 ;;  sign            1   82[BANK0 ] unsigned char 
  5832 ;;  cntr            1   81[BANK0 ] unsigned char 
  5833 ;;  exp             1   77[BANK0 ] unsigned char 
  5834 ;; Return value:  Size  Location     Type
  5835 ;;                  3   68[BANK0 ] float 
  5836 ;; Registers used:
  5837 ;;		wreg, status,2, status,0, cstack
  5838 ;; Tracked objects:
  5839 ;;		On entry : 0/0
  5840 ;;		On exit  : 0/0
  5841 ;;		Unchanged: 0/0
  5842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5843 ;;      Params:         0       6       0       0       0       0       0
  5844 ;;      Locals:         0       6       0       0       0       0       0
  5845 ;;      Temps:          0       3       0       0       0       0       0
  5846 ;;      Totals:         0      15       0       0       0       0       0
  5847 ;;Total ram usage:       15 bytes
  5848 ;; Hardware stack levels used:    1
  5849 ;; Hardware stack levels required when called:    8
  5850 ;; This function calls:
  5851 ;;		___ftpack
  5852 ;; This function is called by:
  5853 ;;		_fround
  5854 ;;		_scale
  5855 ;;		__doprnt
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           	psect	text9
  5860  003C5C                     __ptext9:
  5861                           	opt stack 0
  5862  003C5C                     ___ftmul:
  5863                           	opt stack 19
  5864                           
  5865                           ; BSR set to: 0
  5866                           ;incstack = 0
  5867  003C5C  C0A6  F0AA         	movff	___ftmul@f1+2,??___ftmul
  5868  003C60  0100               	movlb	0	; () banked
  5869  003C62  6BAB               	clrf	(??___ftmul+1)& (0+255),b
  5870  003C64  6BAC               	clrf	(??___ftmul+2)& (0+255),b
  5871  003C66  0100               	movlb	0	; () banked
  5872  003C68  35A5               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  5873  003C6A  0100               	movlb	0	; () banked
  5874  003C6C  37AA               	rlcf	??___ftmul& (0+255),f,b
  5875  003C6E  E301               	bnc	u8661
  5876  003C70  81AB               	bsf	(??___ftmul+1)& (0+255),0,b
  5877  003C72                     u8661:
  5878  003C72  0100               	movlb	0	; () banked
  5879  003C74  51AA               	movf	??___ftmul& (0+255),w,b
  5880  003C76  0100               	movlb	0	; () banked
  5881  003C78  6FAD               	movwf	___ftmul@exp& (0+255),b
  5882  003C7A  0100               	movlb	0	; () banked
  5883  003C7C  51AD               	movf	___ftmul@exp& (0+255),w,b
  5884  003C7E  A4D8               	btfss	status,2,c
  5885  003C80  D00A               	goto	l6064
  5886                           
  5887                           ; BSR set to: 0
  5888  003C82  0E00               	movlw	0
  5889  003C84  0100               	movlb	0	; () banked
  5890  003C86  6FA4               	movwf	?___ftmul& (0+255),b
  5891  003C88  0E00               	movlw	0
  5892  003C8A  0100               	movlb	0	; () banked
  5893  003C8C  6FA5               	movwf	(?___ftmul+1)& (0+255),b
  5894  003C8E  0E00               	movlw	0
  5895  003C90  0100               	movlb	0	; () banked
  5896  003C92  6FA6               	movwf	(?___ftmul+2)& (0+255),b
  5897                           
  5898                           ; BSR set to: 0
  5899  003C94  0012               	return	
  5900  003C96                     l6064:
  5901                           
  5902                           ; BSR set to: 0
  5903  003C96  C0A9  F0AA         	movff	___ftmul@f2+2,??___ftmul
  5904  003C9A  0100               	movlb	0	; () banked
  5905  003C9C  6BAB               	clrf	(??___ftmul+1)& (0+255),b
  5906  003C9E  6BAC               	clrf	(??___ftmul+2)& (0+255),b
  5907  003CA0  0100               	movlb	0	; () banked
  5908  003CA2  35A8               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  5909  003CA4  0100               	movlb	0	; () banked
  5910  003CA6  37AA               	rlcf	??___ftmul& (0+255),f,b
  5911  003CA8  E301               	bnc	u8681
  5912  003CAA  81AB               	bsf	(??___ftmul+1)& (0+255),0,b
  5913  003CAC                     u8681:
  5914  003CAC  0100               	movlb	0	; () banked
  5915  003CAE  51AA               	movf	??___ftmul& (0+255),w,b
  5916  003CB0  0100               	movlb	0	; () banked
  5917  003CB2  6FB2               	movwf	___ftmul@sign& (0+255),b
  5918  003CB4  0100               	movlb	0	; () banked
  5919  003CB6  51B2               	movf	___ftmul@sign& (0+255),w,b
  5920  003CB8  A4D8               	btfss	status,2,c
  5921  003CBA  D00A               	goto	l6070
  5922                           
  5923                           ; BSR set to: 0
  5924  003CBC  0E00               	movlw	0
  5925  003CBE  0100               	movlb	0	; () banked
  5926  003CC0  6FA4               	movwf	?___ftmul& (0+255),b
  5927  003CC2  0E00               	movlw	0
  5928  003CC4  0100               	movlb	0	; () banked
  5929  003CC6  6FA5               	movwf	(?___ftmul+1)& (0+255),b
  5930  003CC8  0E00               	movlw	0
  5931  003CCA  0100               	movlb	0	; () banked
  5932  003CCC  6FA6               	movwf	(?___ftmul+2)& (0+255),b
  5933                           
  5934                           ; BSR set to: 0
  5935  003CCE  0012               	return	
  5936  003CD0                     l6070:
  5937                           
  5938                           ; BSR set to: 0
  5939  003CD0  0100               	movlb	0	; () banked
  5940  003CD2  51B2               	movf	___ftmul@sign& (0+255),w,b
  5941  003CD4  0F7B               	addlw	123
  5942  003CD6  0100               	movlb	0	; () banked
  5943  003CD8  27AD               	addwf	___ftmul@exp& (0+255),f,b
  5944                           
  5945                           ; BSR set to: 0
  5946  003CDA  C0A6  F0B2         	movff	___ftmul@f1+2,___ftmul@sign
  5947  003CDE  0100               	movlb	0	; () banked
  5948  003CE0  51A9               	movf	(___ftmul@f2+2)& (0+255),w,b
  5949  003CE2  0100               	movlb	0	; () banked
  5950  003CE4  1BB2               	xorwf	___ftmul@sign& (0+255),f,b
  5951  003CE6  0E80               	movlw	128
  5952  003CE8  0100               	movlb	0	; () banked
  5953  003CEA  17B2               	andwf	___ftmul@sign& (0+255),f,b
  5954                           
  5955                           ; BSR set to: 0
  5956  003CEC  0100               	movlb	0	; () banked
  5957  003CEE  8FA5               	bsf	(___ftmul@f1+1)& (0+255),7,b
  5958                           
  5959                           ; BSR set to: 0
  5960  003CF0  0100               	movlb	0	; () banked
  5961  003CF2  8FA8               	bsf	(___ftmul@f2+1)& (0+255),7,b
  5962                           
  5963                           ; BSR set to: 0
  5964  003CF4  0EFF               	movlw	255
  5965  003CF6  0100               	movlb	0	; () banked
  5966  003CF8  17A7               	andwf	___ftmul@f2& (0+255),f,b
  5967  003CFA  0EFF               	movlw	255
  5968  003CFC  0100               	movlb	0	; () banked
  5969  003CFE  17A8               	andwf	(___ftmul@f2+1)& (0+255),f,b
  5970  003D00  0E00               	movlw	0
  5971  003D02  0100               	movlb	0	; () banked
  5972  003D04  17A9               	andwf	(___ftmul@f2+2)& (0+255),f,b
  5973                           
  5974                           ; BSR set to: 0
  5975  003D06  0E00               	movlw	0
  5976  003D08  0100               	movlb	0	; () banked
  5977  003D0A  6FAE               	movwf	___ftmul@f3_as_product& (0+255),b
  5978  003D0C  0E00               	movlw	0
  5979  003D0E  0100               	movlb	0	; () banked
  5980  003D10  6FAF               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  5981  003D12  0E00               	movlw	0
  5982  003D14  0100               	movlb	0	; () banked
  5983  003D16  6FB0               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  5984                           
  5985                           ; BSR set to: 0
  5986  003D18  0E07               	movlw	7
  5987  003D1A  0100               	movlb	0	; () banked
  5988  003D1C  6FB1               	movwf	___ftmul@cntr& (0+255),b
  5989  003D1E                     l6084:
  5990                           
  5991                           ; BSR set to: 0
  5992  003D1E  0100               	movlb	0	; () banked
  5993  003D20  A1A4               	btfss	___ftmul@f1& (0+255),0,b
  5994  003D22  D00C               	goto	l6088
  5995                           
  5996                           ; BSR set to: 0
  5997  003D24  0100               	movlb	0	; () banked
  5998  003D26  51A7               	movf	___ftmul@f2& (0+255),w,b
  5999  003D28  0100               	movlb	0	; () banked
  6000  003D2A  27AE               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6001  003D2C  0100               	movlb	0	; () banked
  6002  003D2E  51A8               	movf	(___ftmul@f2+1)& (0+255),w,b
  6003  003D30  0100               	movlb	0	; () banked
  6004  003D32  23AF               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6005  003D34  0100               	movlb	0	; () banked
  6006  003D36  51A9               	movf	(___ftmul@f2+2)& (0+255),w,b
  6007  003D38  0100               	movlb	0	; () banked
  6008  003D3A  23B0               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6009  003D3C                     l6088:
  6010                           
  6011                           ; BSR set to: 0
  6012  003D3C  0100               	movlb	0	; () banked
  6013  003D3E  90D8               	bcf	status,0,c
  6014  003D40  33A6               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6015  003D42  33A5               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6016  003D44  33A4               	rrcf	___ftmul@f1& (0+255),f,b
  6017  003D46  0100               	movlb	0	; () banked
  6018  003D48  90D8               	bcf	status,0,c
  6019  003D4A  37A7               	rlcf	___ftmul@f2& (0+255),f,b
  6020  003D4C  37A8               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  6021  003D4E  37A9               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  6022                           
  6023                           ; BSR set to: 0
  6024  003D50  0100               	movlb	0	; () banked
  6025  003D52  2FB1               	decfsz	___ftmul@cntr& (0+255),f,b
  6026  003D54  D7E4               	goto	l6084
  6027                           
  6028                           ; BSR set to: 0
  6029                           
  6030                           ; BSR set to: 0
  6031  003D56  0E09               	movlw	9
  6032  003D58  0100               	movlb	0	; () banked
  6033  003D5A  6FB1               	movwf	___ftmul@cntr& (0+255),b
  6034  003D5C                     l6094:
  6035                           
  6036                           ; BSR set to: 0
  6037  003D5C  0100               	movlb	0	; () banked
  6038  003D5E  A1A4               	btfss	___ftmul@f1& (0+255),0,b
  6039  003D60  D00C               	goto	l6098
  6040                           
  6041                           ; BSR set to: 0
  6042  003D62  0100               	movlb	0	; () banked
  6043  003D64  51A7               	movf	___ftmul@f2& (0+255),w,b
  6044  003D66  0100               	movlb	0	; () banked
  6045  003D68  27AE               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6046  003D6A  0100               	movlb	0	; () banked
  6047  003D6C  51A8               	movf	(___ftmul@f2+1)& (0+255),w,b
  6048  003D6E  0100               	movlb	0	; () banked
  6049  003D70  23AF               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6050  003D72  0100               	movlb	0	; () banked
  6051  003D74  51A9               	movf	(___ftmul@f2+2)& (0+255),w,b
  6052  003D76  0100               	movlb	0	; () banked
  6053  003D78  23B0               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6054  003D7A                     l6098:
  6055                           
  6056                           ; BSR set to: 0
  6057  003D7A  0100               	movlb	0	; () banked
  6058  003D7C  90D8               	bcf	status,0,c
  6059  003D7E  33A6               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6060  003D80  33A5               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6061  003D82  33A4               	rrcf	___ftmul@f1& (0+255),f,b
  6062  003D84  0100               	movlb	0	; () banked
  6063  003D86  90D8               	bcf	status,0,c
  6064  003D88  33B0               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  6065  003D8A  33AF               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  6066  003D8C  33AE               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  6067                           
  6068                           ; BSR set to: 0
  6069  003D8E  0100               	movlb	0	; () banked
  6070  003D90  2FB1               	decfsz	___ftmul@cntr& (0+255),f,b
  6071  003D92  D7E4               	goto	l6094
  6072                           
  6073                           ; BSR set to: 0
  6074                           
  6075                           ; BSR set to: 0
  6076  003D94  C0AE  F090         	movff	___ftmul@f3_as_product,___ftpack@arg
  6077  003D98  C0AF  F091         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6078  003D9C  C0B0  F092         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6079  003DA0  C0AD  F093         	movff	___ftmul@exp,___ftpack@exp
  6080  003DA4  C0B2  F094         	movff	___ftmul@sign,___ftpack@sign
  6081  003DA8  ECE3  F021         	call	___ftpack	;wreg free
  6082  003DAC  C090  F0A4         	movff	?___ftpack,?___ftmul
  6083  003DB0  C091  F0A5         	movff	?___ftpack+1,?___ftmul+1
  6084  003DB4  C092  F0A6         	movff	?___ftpack+2,?___ftmul+2
  6085  003DB8  0012               	return	
  6086  003DBA                     __end_of___ftmul:
  6087                           	opt stack 0
  6088                           tosu	equ	0xFFF
  6089                           tosh	equ	0xFFE
  6090                           tosl	equ	0xFFD
  6091                           pclath	equ	0xFFA
  6092                           tblptru	equ	0xFF8
  6093                           tblptrh	equ	0xFF7
  6094                           tblptrl	equ	0xFF6
  6095                           tablat	equ	0xFF5
  6096                           prodh	equ	0xFF4
  6097                           prodl	equ	0xFF3
  6098                           intcon	equ	0xFF2
  6099                           postinc0	equ	0xFEE
  6100                           wreg	equ	0xFE8
  6101                           postdec1	equ	0xFE5
  6102                           fsr1l	equ	0xFE1
  6103                           indf2	equ	0xFDF
  6104                           postinc2	equ	0xFDE
  6105                           postdec2	equ	0xFDD
  6106                           fsr2h	equ	0xFDA
  6107                           fsr2l	equ	0xFD9
  6108                           status	equ	0xFD8
  6109                           
  6110 ;; *************** function ___awmod *****************
  6111 ;; Defined at:
  6112 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  6113 ;; Parameters:    Size  Location     Type
  6114 ;;  dividend        2   48[BANK0 ] int 
  6115 ;;  divisor         2   50[BANK0 ] int 
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;  sign            1   53[BANK0 ] unsigned char 
  6118 ;;  counter         1   52[BANK0 ] unsigned char 
  6119 ;; Return value:  Size  Location     Type
  6120 ;;                  2   48[BANK0 ] int 
  6121 ;; Registers used:
  6122 ;;		wreg, status,2, status,0
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6128 ;;      Params:         0       4       0       0       0       0       0
  6129 ;;      Locals:         0       2       0       0       0       0       0
  6130 ;;      Temps:          0       0       0       0       0       0       0
  6131 ;;      Totals:         0       6       0       0       0       0       0
  6132 ;;Total ram usage:        6 bytes
  6133 ;; Hardware stack levels used:    1
  6134 ;; Hardware stack levels required when called:    7
  6135 ;; This function calls:
  6136 ;;		Nothing
  6137 ;; This function is called by:
  6138 ;;		_fround
  6139 ;;		_scale
  6140 ;; This function uses a non-reentrant model
  6141 ;;
  6142                           
  6143                           	psect	text10
  6144  004A90                     __ptext10:
  6145                           	opt stack 0
  6146  004A90                     ___awmod:
  6147                           	opt stack 20
  6148                           
  6149                           ;incstack = 0
  6150  004A90  0E00               	movlw	0
  6151  004A92  0100               	movlb	0	; () banked
  6152  004A94  6F95               	movwf	___awmod@sign& (0+255),b
  6153                           
  6154                           ; BSR set to: 0
  6155  004A96  0100               	movlb	0	; () banked
  6156  004A98  AF91               	btfss	(___awmod@dividend+1)& (0+255),7,b
  6157  004A9A  D008               	goto	l6158
  6158                           
  6159                           ; BSR set to: 0
  6160  004A9C  0100               	movlb	0	; () banked
  6161  004A9E  6D90               	negf	___awmod@dividend& (0+255),b
  6162  004AA0  1F91               	comf	(___awmod@dividend+1)& (0+255),f,b
  6163  004AA2  B0D8               	btfsc	status,0,c
  6164  004AA4  2B91               	incf	(___awmod@dividend+1)& (0+255),f,b
  6165                           
  6166                           ; BSR set to: 0
  6167  004AA6  0E01               	movlw	1
  6168  004AA8  0100               	movlb	0	; () banked
  6169  004AAA  6F95               	movwf	___awmod@sign& (0+255),b
  6170  004AAC                     l6158:
  6171                           
  6172                           ; BSR set to: 0
  6173  004AAC  0100               	movlb	0	; () banked
  6174  004AAE  AF93               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6175  004AB0  D005               	goto	l6162
  6176                           
  6177                           ; BSR set to: 0
  6178  004AB2  0100               	movlb	0	; () banked
  6179  004AB4  6D92               	negf	___awmod@divisor& (0+255),b
  6180  004AB6  1F93               	comf	(___awmod@divisor+1)& (0+255),f,b
  6181  004AB8  B0D8               	btfsc	status,0,c
  6182  004ABA  2B93               	incf	(___awmod@divisor+1)& (0+255),f,b
  6183  004ABC                     l6162:
  6184                           
  6185                           ; BSR set to: 0
  6186  004ABC  0100               	movlb	0	; () banked
  6187  004ABE  5192               	movf	___awmod@divisor& (0+255),w,b
  6188  004AC0  0100               	movlb	0	; () banked
  6189  004AC2  1193               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6190  004AC4  B4D8               	btfsc	status,2,c
  6191  004AC6  D026               	goto	l6178
  6192                           
  6193                           ; BSR set to: 0
  6194  004AC8  0E01               	movlw	1
  6195  004ACA  0100               	movlb	0	; () banked
  6196  004ACC  6F94               	movwf	___awmod@counter& (0+255),b
  6197  004ACE  D006               	goto	l6168
  6198  004AD0                     l6166:
  6199                           
  6200                           ; BSR set to: 0
  6201  004AD0  0100               	movlb	0	; () banked
  6202  004AD2  90D8               	bcf	status,0,c
  6203  004AD4  3792               	rlcf	___awmod@divisor& (0+255),f,b
  6204  004AD6  3793               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6205  004AD8  0100               	movlb	0	; () banked
  6206  004ADA  2B94               	incf	___awmod@counter& (0+255),f,b
  6207  004ADC                     l6168:
  6208                           
  6209                           ; BSR set to: 0
  6210  004ADC  0100               	movlb	0	; () banked
  6211  004ADE  AF93               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6212  004AE0  D7F7               	goto	l6166
  6213  004AE2                     l6170:
  6214                           
  6215                           ; BSR set to: 0
  6216  004AE2  0100               	movlb	0	; () banked
  6217  004AE4  5192               	movf	___awmod@divisor& (0+255),w,b
  6218  004AE6  0100               	movlb	0	; () banked
  6219  004AE8  5D90               	subwf	___awmod@dividend& (0+255),w,b
  6220  004AEA  0100               	movlb	0	; () banked
  6221  004AEC  5193               	movf	(___awmod@divisor+1)& (0+255),w,b
  6222  004AEE  0100               	movlb	0	; () banked
  6223  004AF0  5991               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6224  004AF2  A0D8               	btfss	status,0,c
  6225  004AF4  D008               	goto	l6174
  6226                           
  6227                           ; BSR set to: 0
  6228  004AF6  0100               	movlb	0	; () banked
  6229  004AF8  5192               	movf	___awmod@divisor& (0+255),w,b
  6230  004AFA  0100               	movlb	0	; () banked
  6231  004AFC  5F90               	subwf	___awmod@dividend& (0+255),f,b
  6232  004AFE  0100               	movlb	0	; () banked
  6233  004B00  5193               	movf	(___awmod@divisor+1)& (0+255),w,b
  6234  004B02  0100               	movlb	0	; () banked
  6235  004B04  5B91               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6236  004B06                     l6174:
  6237                           
  6238                           ; BSR set to: 0
  6239  004B06  0100               	movlb	0	; () banked
  6240  004B08  90D8               	bcf	status,0,c
  6241  004B0A  3393               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6242  004B0C  3392               	rrcf	___awmod@divisor& (0+255),f,b
  6243                           
  6244                           ; BSR set to: 0
  6245  004B0E  0100               	movlb	0	; () banked
  6246  004B10  2F94               	decfsz	___awmod@counter& (0+255),f,b
  6247  004B12  D7E7               	goto	l6170
  6248  004B14                     l6178:
  6249                           
  6250                           ; BSR set to: 0
  6251  004B14  0100               	movlb	0	; () banked
  6252  004B16  5195               	movf	___awmod@sign& (0+255),w,b
  6253  004B18  0100               	movlb	0	; () banked
  6254  004B1A  B4D8               	btfsc	status,2,c
  6255  004B1C  D005               	goto	l6182
  6256                           
  6257                           ; BSR set to: 0
  6258  004B1E  0100               	movlb	0	; () banked
  6259  004B20  6D90               	negf	___awmod@dividend& (0+255),b
  6260  004B22  1F91               	comf	(___awmod@dividend+1)& (0+255),f,b
  6261  004B24  B0D8               	btfsc	status,0,c
  6262  004B26  2B91               	incf	(___awmod@dividend+1)& (0+255),f,b
  6263  004B28                     l6182:
  6264                           
  6265                           ; BSR set to: 0
  6266  004B28  C090  F090         	movff	___awmod@dividend,?___awmod
  6267  004B2C  C091  F091         	movff	___awmod@dividend+1,?___awmod+1
  6268  004B30  0012               	return	
  6269  004B32                     __end_of___awmod:
  6270                           	opt stack 0
  6271                           tosu	equ	0xFFF
  6272                           tosh	equ	0xFFE
  6273                           tosl	equ	0xFFD
  6274                           pclath	equ	0xFFA
  6275                           tblptru	equ	0xFF8
  6276                           tblptrh	equ	0xFF7
  6277                           tblptrl	equ	0xFF6
  6278                           tablat	equ	0xFF5
  6279                           prodh	equ	0xFF4
  6280                           prodl	equ	0xFF3
  6281                           intcon	equ	0xFF2
  6282                           postinc0	equ	0xFEE
  6283                           wreg	equ	0xFE8
  6284                           postdec1	equ	0xFE5
  6285                           fsr1l	equ	0xFE1
  6286                           indf2	equ	0xFDF
  6287                           postinc2	equ	0xFDE
  6288                           postdec2	equ	0xFDD
  6289                           fsr2h	equ	0xFDA
  6290                           fsr2l	equ	0xFD9
  6291                           status	equ	0xFD8
  6292                           
  6293 ;; *************** function ___awdiv *****************
  6294 ;; Defined at:
  6295 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  6296 ;; Parameters:    Size  Location     Type
  6297 ;;  dividend        2   54[BANK0 ] int 
  6298 ;;  divisor         2   56[BANK0 ] int 
  6299 ;; Auto vars:     Size  Location     Type
  6300 ;;  quotient        2   60[BANK0 ] int 
  6301 ;;  sign            1   59[BANK0 ] unsigned char 
  6302 ;;  counter         1   58[BANK0 ] unsigned char 
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  2   54[BANK0 ] int 
  6305 ;; Registers used:
  6306 ;;		wreg, status,2, status,0
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6312 ;;      Params:         0       4       0       0       0       0       0
  6313 ;;      Locals:         0       4       0       0       0       0       0
  6314 ;;      Temps:          0       0       0       0       0       0       0
  6315 ;;      Totals:         0       8       0       0       0       0       0
  6316 ;;Total ram usage:        8 bytes
  6317 ;; Hardware stack levels used:    1
  6318 ;; Hardware stack levels required when called:    7
  6319 ;; This function calls:
  6320 ;;		Nothing
  6321 ;; This function is called by:
  6322 ;;		_fround
  6323 ;;		_scale
  6324 ;;		__doprnt
  6325 ;; This function uses a non-reentrant model
  6326 ;;
  6327                           
  6328                           	psect	text11
  6329  004868                     __ptext11:
  6330                           	opt stack 0
  6331  004868                     ___awdiv:
  6332                           	opt stack 20
  6333                           
  6334                           ; BSR set to: 0
  6335                           ;incstack = 0
  6336  004868  0E00               	movlw	0
  6337  00486A  0100               	movlb	0	; () banked
  6338  00486C  6F9B               	movwf	___awdiv@sign& (0+255),b
  6339                           
  6340                           ; BSR set to: 0
  6341  00486E  0100               	movlb	0	; () banked
  6342  004870  AF99               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6343  004872  D008               	goto	l6114
  6344                           
  6345                           ; BSR set to: 0
  6346  004874  0100               	movlb	0	; () banked
  6347  004876  6D98               	negf	___awdiv@divisor& (0+255),b
  6348  004878  1F99               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6349  00487A  B0D8               	btfsc	status,0,c
  6350  00487C  2B99               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6351                           
  6352                           ; BSR set to: 0
  6353  00487E  0E01               	movlw	1
  6354  004880  0100               	movlb	0	; () banked
  6355  004882  6F9B               	movwf	___awdiv@sign& (0+255),b
  6356  004884                     l6114:
  6357                           
  6358                           ; BSR set to: 0
  6359  004884  0100               	movlb	0	; () banked
  6360  004886  AF97               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6361  004888  D008               	goto	l6120
  6362                           
  6363                           ; BSR set to: 0
  6364  00488A  0100               	movlb	0	; () banked
  6365  00488C  6D96               	negf	___awdiv@dividend& (0+255),b
  6366  00488E  1F97               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6367  004890  B0D8               	btfsc	status,0,c
  6368  004892  2B97               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6369                           
  6370                           ; BSR set to: 0
  6371  004894  0E01               	movlw	1
  6372  004896  0100               	movlb	0	; () banked
  6373  004898  1B9B               	xorwf	___awdiv@sign& (0+255),f,b
  6374  00489A                     l6120:
  6375                           
  6376                           ; BSR set to: 0
  6377  00489A  0E00               	movlw	0
  6378  00489C  0100               	movlb	0	; () banked
  6379  00489E  6F9D               	movwf	(___awdiv@quotient+1)& (0+255),b
  6380  0048A0  0E00               	movlw	0
  6381  0048A2  6F9C               	movwf	___awdiv@quotient& (0+255),b
  6382                           
  6383                           ; BSR set to: 0
  6384  0048A4  0100               	movlb	0	; () banked
  6385  0048A6  5198               	movf	___awdiv@divisor& (0+255),w,b
  6386  0048A8  0100               	movlb	0	; () banked
  6387  0048AA  1199               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6388  0048AC  B4D8               	btfsc	status,2,c
  6389  0048AE  D02C               	goto	l6142
  6390                           
  6391                           ; BSR set to: 0
  6392  0048B0  0E01               	movlw	1
  6393  0048B2  0100               	movlb	0	; () banked
  6394  0048B4  6F9A               	movwf	___awdiv@counter& (0+255),b
  6395  0048B6  D006               	goto	l6128
  6396  0048B8                     l6126:
  6397                           
  6398                           ; BSR set to: 0
  6399  0048B8  0100               	movlb	0	; () banked
  6400  0048BA  90D8               	bcf	status,0,c
  6401  0048BC  3798               	rlcf	___awdiv@divisor& (0+255),f,b
  6402  0048BE  3799               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6403  0048C0  0100               	movlb	0	; () banked
  6404  0048C2  2B9A               	incf	___awdiv@counter& (0+255),f,b
  6405  0048C4                     l6128:
  6406                           
  6407                           ; BSR set to: 0
  6408  0048C4  0100               	movlb	0	; () banked
  6409  0048C6  AF99               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6410  0048C8  D7F7               	goto	l6126
  6411  0048CA                     l6130:
  6412                           
  6413                           ; BSR set to: 0
  6414  0048CA  0100               	movlb	0	; () banked
  6415  0048CC  90D8               	bcf	status,0,c
  6416  0048CE  379C               	rlcf	___awdiv@quotient& (0+255),f,b
  6417  0048D0  379D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6418                           
  6419                           ; BSR set to: 0
  6420  0048D2  0100               	movlb	0	; () banked
  6421  0048D4  5198               	movf	___awdiv@divisor& (0+255),w,b
  6422  0048D6  0100               	movlb	0	; () banked
  6423  0048D8  5D96               	subwf	___awdiv@dividend& (0+255),w,b
  6424  0048DA  0100               	movlb	0	; () banked
  6425  0048DC  5199               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6426  0048DE  0100               	movlb	0	; () banked
  6427  0048E0  5997               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6428  0048E2  A0D8               	btfss	status,0,c
  6429  0048E4  D00A               	goto	l6138
  6430                           
  6431                           ; BSR set to: 0
  6432  0048E6  0100               	movlb	0	; () banked
  6433  0048E8  5198               	movf	___awdiv@divisor& (0+255),w,b
  6434  0048EA  0100               	movlb	0	; () banked
  6435  0048EC  5F96               	subwf	___awdiv@dividend& (0+255),f,b
  6436  0048EE  0100               	movlb	0	; () banked
  6437  0048F0  5199               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6438  0048F2  0100               	movlb	0	; () banked
  6439  0048F4  5B97               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6440                           
  6441                           ; BSR set to: 0
  6442  0048F6  0100               	movlb	0	; () banked
  6443  0048F8  819C               	bsf	___awdiv@quotient& (0+255),0,b
  6444  0048FA                     l6138:
  6445                           
  6446                           ; BSR set to: 0
  6447  0048FA  0100               	movlb	0	; () banked
  6448  0048FC  90D8               	bcf	status,0,c
  6449  0048FE  3399               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6450  004900  3398               	rrcf	___awdiv@divisor& (0+255),f,b
  6451                           
  6452                           ; BSR set to: 0
  6453  004902  0100               	movlb	0	; () banked
  6454  004904  2F9A               	decfsz	___awdiv@counter& (0+255),f,b
  6455  004906  D7E1               	goto	l6130
  6456  004908                     l6142:
  6457                           
  6458                           ; BSR set to: 0
  6459  004908  0100               	movlb	0	; () banked
  6460  00490A  519B               	movf	___awdiv@sign& (0+255),w,b
  6461  00490C  0100               	movlb	0	; () banked
  6462  00490E  B4D8               	btfsc	status,2,c
  6463  004910  D005               	goto	l6146
  6464                           
  6465                           ; BSR set to: 0
  6466  004912  0100               	movlb	0	; () banked
  6467  004914  6D9C               	negf	___awdiv@quotient& (0+255),b
  6468  004916  1F9D               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6469  004918  B0D8               	btfsc	status,0,c
  6470  00491A  2B9D               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6471  00491C                     l6146:
  6472                           
  6473                           ; BSR set to: 0
  6474  00491C  C09C  F096         	movff	___awdiv@quotient,?___awdiv
  6475  004920  C09D  F097         	movff	___awdiv@quotient+1,?___awdiv+1
  6476  004924  0012               	return	
  6477  004926                     __end_of___awdiv:
  6478                           	opt stack 0
  6479                           tosu	equ	0xFFF
  6480                           tosh	equ	0xFFE
  6481                           tosl	equ	0xFFD
  6482                           pclath	equ	0xFFA
  6483                           tblptru	equ	0xFF8
  6484                           tblptrh	equ	0xFF7
  6485                           tblptrl	equ	0xFF6
  6486                           tablat	equ	0xFF5
  6487                           prodh	equ	0xFF4
  6488                           prodl	equ	0xFF3
  6489                           intcon	equ	0xFF2
  6490                           postinc0	equ	0xFEE
  6491                           wreg	equ	0xFE8
  6492                           postdec1	equ	0xFE5
  6493                           fsr1l	equ	0xFE1
  6494                           indf2	equ	0xFDF
  6495                           postinc2	equ	0xFDE
  6496                           postdec2	equ	0xFDD
  6497                           fsr2h	equ	0xFDA
  6498                           fsr2l	equ	0xFD9
  6499                           status	equ	0xFD8
  6500                           
  6501 ;; *************** function __tdiv_to_l_ *****************
  6502 ;; Defined at:
  6503 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdivl.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;  f1              3   48[BANK0 ] float 
  6506 ;;  f2              3   51[BANK0 ] float 
  6507 ;; Auto vars:     Size  Location     Type
  6508 ;;  quot            4   57[BANK0 ] unsigned long 
  6509 ;;  exp1            1   62[BANK0 ] unsigned char 
  6510 ;;  cntr            1   61[BANK0 ] unsigned char 
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  4   48[BANK0 ] unsigned long 
  6513 ;; Registers used:
  6514 ;;		wreg, status,2, status,0
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/0
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6520 ;;      Params:         0       6       0       0       0       0       0
  6521 ;;      Locals:         0       6       0       0       0       0       0
  6522 ;;      Temps:          0       3       0       0       0       0       0
  6523 ;;      Totals:         0      15       0       0       0       0       0
  6524 ;;Total ram usage:       15 bytes
  6525 ;; Hardware stack levels used:    1
  6526 ;; Hardware stack levels required when called:    7
  6527 ;; This function calls:
  6528 ;;		Nothing
  6529 ;; This function is called by:
  6530 ;;		__doprnt
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533                           
  6534                           	psect	text12
  6535  0037D0                     __ptext12:
  6536                           	opt stack 0
  6537  0037D0                     __tdiv_to_l_:
  6538                           	opt stack 21
  6539                           
  6540                           ; BSR set to: 0
  6541                           ;incstack = 0
  6542  0037D0  C092  F096         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  6543  0037D4  0100               	movlb	0	; () banked
  6544  0037D6  6B97               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  6545  0037D8  6B98               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  6546  0037DA  0100               	movlb	0	; () banked
  6547  0037DC  3591               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6548  0037DE  0100               	movlb	0	; () banked
  6549  0037E0  3796               	rlcf	??__tdiv_to_l_& (0+255),f,b
  6550  0037E2  E301               	bnc	u5851
  6551  0037E4  8197               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  6552  0037E6                     u5851:
  6553  0037E6  0100               	movlb	0	; () banked
  6554  0037E8  5196               	movf	??__tdiv_to_l_& (0+255),w,b
  6555  0037EA  0100               	movlb	0	; () banked
  6556  0037EC  6F9E               	movwf	__tdiv_to_l_@exp1& (0+255),b
  6557  0037EE  0100               	movlb	0	; () banked
  6558  0037F0  519E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6559  0037F2  A4D8               	btfss	status,2,c
  6560  0037F4  D00A               	goto	l4522
  6561                           
  6562                           ; BSR set to: 0
  6563  0037F6  0E00               	movlw	0
  6564  0037F8  0100               	movlb	0	; () banked
  6565  0037FA  6F90               	movwf	?__tdiv_to_l_& (0+255),b
  6566  0037FC  0E00               	movlw	0
  6567  0037FE  6F91               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6568  003800  0E00               	movlw	0
  6569  003802  6F92               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6570  003804  0E00               	movlw	0
  6571  003806  6F93               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6572                           
  6573                           ; BSR set to: 0
  6574  003808  0012               	return	
  6575  00380A                     l4522:
  6576                           
  6577                           ; BSR set to: 0
  6578  00380A  C095  F096         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  6579  00380E  0100               	movlb	0	; () banked
  6580  003810  6B97               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  6581  003812  6B98               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  6582  003814  0100               	movlb	0	; () banked
  6583  003816  3594               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6584  003818  0100               	movlb	0	; () banked
  6585  00381A  3796               	rlcf	??__tdiv_to_l_& (0+255),f,b
  6586  00381C  E301               	bnc	u5871
  6587  00381E  8197               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  6588  003820                     u5871:
  6589  003820  0100               	movlb	0	; () banked
  6590  003822  5196               	movf	??__tdiv_to_l_& (0+255),w,b
  6591  003824  0100               	movlb	0	; () banked
  6592  003826  6F9D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6593  003828  0100               	movlb	0	; () banked
  6594  00382A  519D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6595  00382C  A4D8               	btfss	status,2,c
  6596  00382E  D00A               	goto	l4528
  6597                           
  6598                           ; BSR set to: 0
  6599  003830  0E00               	movlw	0
  6600  003832  0100               	movlb	0	; () banked
  6601  003834  6F90               	movwf	?__tdiv_to_l_& (0+255),b
  6602  003836  0E00               	movlw	0
  6603  003838  6F91               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6604  00383A  0E00               	movlw	0
  6605  00383C  6F92               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6606  00383E  0E00               	movlw	0
  6607  003840  6F93               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6608                           
  6609                           ; BSR set to: 0
  6610  003842  0012               	return	
  6611  003844                     l4528:
  6612                           
  6613                           ; BSR set to: 0
  6614  003844  0100               	movlb	0	; () banked
  6615  003846  8F91               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  6616                           
  6617                           ; BSR set to: 0
  6618  003848  0EFF               	movlw	255
  6619  00384A  0100               	movlb	0	; () banked
  6620  00384C  1790               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  6621  00384E  0EFF               	movlw	255
  6622  003850  0100               	movlb	0	; () banked
  6623  003852  1791               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6624  003854  0E00               	movlw	0
  6625  003856  0100               	movlb	0	; () banked
  6626  003858  1792               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6627  00385A  0100               	movlb	0	; () banked
  6628  00385C  8F94               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  6629                           
  6630                           ; BSR set to: 0
  6631  00385E  0EFF               	movlw	255
  6632  003860  0100               	movlb	0	; () banked
  6633  003862  1793               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  6634  003864  0EFF               	movlw	255
  6635  003866  0100               	movlb	0	; () banked
  6636  003868  1794               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  6637  00386A  0E00               	movlw	0
  6638  00386C  0100               	movlb	0	; () banked
  6639  00386E  1795               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  6640                           
  6641                           ; BSR set to: 0
  6642  003870  0E00               	movlw	0
  6643  003872  0100               	movlb	0	; () banked
  6644  003874  6F99               	movwf	__tdiv_to_l_@quot& (0+255),b
  6645  003876  0E00               	movlw	0
  6646  003878  6F9A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  6647  00387A  0E00               	movlw	0
  6648  00387C  6F9B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  6649  00387E  0E00               	movlw	0
  6650  003880  6F9C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  6651                           
  6652                           ; BSR set to: 0
  6653  003882  0E7F               	movlw	127
  6654  003884  0100               	movlb	0	; () banked
  6655  003886  5F9E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6656                           
  6657                           ; BSR set to: 0
  6658  003888  0100               	movlb	0	; () banked
  6659  00388A  519D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6660  00388C  0F98               	addlw	152
  6661  00388E  0100               	movlb	0	; () banked
  6662  003890  5F9E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6663                           
  6664                           ; BSR set to: 0
  6665  003892  0E18               	movlw	24
  6666  003894  0100               	movlb	0	; () banked
  6667  003896  6F9D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6668  003898                     l832:
  6669                           
  6670                           ; BSR set to: 0
  6671  003898  0100               	movlb	0	; () banked
  6672  00389A  90D8               	bcf	status,0,c
  6673  00389C  3799               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6674  00389E  379A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6675  0038A0  379B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6676  0038A2  379C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6677                           
  6678                           ; BSR set to: 0
  6679  0038A4  0100               	movlb	0	; () banked
  6680  0038A6  5193               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6681  0038A8  0100               	movlb	0	; () banked
  6682  0038AA  5D90               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  6683  0038AC  0100               	movlb	0	; () banked
  6684  0038AE  5194               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6685  0038B0  0100               	movlb	0	; () banked
  6686  0038B2  5991               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6687  0038B4  0100               	movlb	0	; () banked
  6688  0038B6  5195               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6689  0038B8  0100               	movlb	0	; () banked
  6690  0038BA  5992               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  6691  0038BC  A0D8               	btfss	status,0,c
  6692  0038BE  D00E               	goto	l833
  6693                           
  6694                           ; BSR set to: 0
  6695  0038C0  0100               	movlb	0	; () banked
  6696  0038C2  5193               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6697  0038C4  0100               	movlb	0	; () banked
  6698  0038C6  5F90               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  6699  0038C8  0100               	movlb	0	; () banked
  6700  0038CA  5194               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6701  0038CC  0100               	movlb	0	; () banked
  6702  0038CE  5B91               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6703  0038D0  0100               	movlb	0	; () banked
  6704  0038D2  5195               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6705  0038D4  0100               	movlb	0	; () banked
  6706  0038D6  5B92               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6707                           
  6708                           ; BSR set to: 0
  6709  0038D8  0100               	movlb	0	; () banked
  6710  0038DA  8199               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  6711  0038DC                     l833:
  6712                           
  6713                           ; BSR set to: 0
  6714  0038DC  0100               	movlb	0	; () banked
  6715  0038DE  90D8               	bcf	status,0,c
  6716  0038E0  3790               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  6717  0038E2  3791               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6718  0038E4  3792               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6719                           
  6720                           ; BSR set to: 0
  6721  0038E6  0100               	movlb	0	; () banked
  6722  0038E8  2F9D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  6723  0038EA  D7D6               	goto	l832
  6724                           
  6725                           ; BSR set to: 0
  6726                           
  6727                           ; BSR set to: 0
  6728  0038EC  0100               	movlb	0	; () banked
  6729  0038EE  AF9E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  6730  0038F0  D01A               	goto	l4562
  6731                           
  6732                           ; BSR set to: 0
  6733  0038F2  0100               	movlb	0	; () banked
  6734  0038F4  519E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6735  0038F6  0A80               	xorlw	128
  6736  0038F8  0F97               	addlw	151
  6737  0038FA  B0D8               	btfsc	status,0,c
  6738  0038FC  D00A               	goto	l4558
  6739                           
  6740                           ; BSR set to: 0
  6741  0038FE  0E00               	movlw	0
  6742  003900  0100               	movlb	0	; () banked
  6743  003902  6F90               	movwf	?__tdiv_to_l_& (0+255),b
  6744  003904  0E00               	movlw	0
  6745  003906  6F91               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6746  003908  0E00               	movlw	0
  6747  00390A  6F92               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6748  00390C  0E00               	movlw	0
  6749  00390E  6F93               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6750                           
  6751                           ; BSR set to: 0
  6752  003910  0012               	return	
  6753  003912                     l4558:
  6754                           
  6755                           ; BSR set to: 0
  6756  003912  0100               	movlb	0	; () banked
  6757  003914  90D8               	bcf	status,0,c
  6758  003916  339C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6759  003918  339B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6760  00391A  339A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6761  00391C  3399               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  6762                           
  6763                           ; BSR set to: 0
  6764  00391E  0100               	movlb	0	; () banked
  6765  003920  3F9E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  6766  003922  D7F7               	goto	l4558
  6767                           
  6768                           ; BSR set to: 0
  6769  003924  D01B               	goto	l839
  6770  003926                     l4562:
  6771                           
  6772                           ; BSR set to: 0
  6773  003926  0E17               	movlw	23
  6774  003928  0100               	movlb	0	; () banked
  6775  00392A  659E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  6776  00392C  D012               	goto	l4570
  6777                           
  6778                           ; BSR set to: 0
  6779  00392E  0E00               	movlw	0
  6780  003930  0100               	movlb	0	; () banked
  6781  003932  6F90               	movwf	?__tdiv_to_l_& (0+255),b
  6782  003934  0E00               	movlw	0
  6783  003936  6F91               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6784  003938  0E00               	movlw	0
  6785  00393A  6F92               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6786  00393C  0E00               	movlw	0
  6787  00393E  6F93               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6788                           
  6789                           ; BSR set to: 0
  6790  003940  0012               	return	
  6791  003942                     l4568:
  6792                           
  6793                           ; BSR set to: 0
  6794  003942  0100               	movlb	0	; () banked
  6795  003944  90D8               	bcf	status,0,c
  6796  003946  3799               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6797  003948  379A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6798  00394A  379B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6799  00394C  379C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6800  00394E  0100               	movlb	0	; () banked
  6801  003950  079E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  6802  003952                     l4570:
  6803                           
  6804                           ; BSR set to: 0
  6805  003952  0100               	movlb	0	; () banked
  6806  003954  519E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6807  003956  0100               	movlb	0	; () banked
  6808  003958  A4D8               	btfss	status,2,c
  6809  00395A  D7F3               	goto	l4568
  6810  00395C                     l839:
  6811                           
  6812                           ; BSR set to: 0
  6813  00395C  C099  F090         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  6814  003960  C09A  F091         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  6815  003964  C09B  F092         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  6816  003968  C09C  F093         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  6817                           
  6818                           ; BSR set to: 0
  6819  00396C  0012               	return		;funcret
  6820  00396E                     __end_of__tdiv_to_l_:
  6821                           	opt stack 0
  6822                           tosu	equ	0xFFF
  6823                           tosh	equ	0xFFE
  6824                           tosl	equ	0xFFD
  6825                           pclath	equ	0xFFA
  6826                           tblptru	equ	0xFF8
  6827                           tblptrh	equ	0xFF7
  6828                           tblptrl	equ	0xFF6
  6829                           tablat	equ	0xFF5
  6830                           prodh	equ	0xFF4
  6831                           prodl	equ	0xFF3
  6832                           intcon	equ	0xFF2
  6833                           postinc0	equ	0xFEE
  6834                           wreg	equ	0xFE8
  6835                           postdec1	equ	0xFE5
  6836                           fsr1l	equ	0xFE1
  6837                           indf2	equ	0xFDF
  6838                           postinc2	equ	0xFDE
  6839                           postdec2	equ	0xFDD
  6840                           fsr2h	equ	0xFDA
  6841                           fsr2l	equ	0xFD9
  6842                           status	equ	0xFD8
  6843                           
  6844 ;; *************** function __div_to_l_ *****************
  6845 ;; Defined at:
  6846 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fldivl.c"
  6847 ;; Parameters:    Size  Location     Type
  6848 ;;  f1              3   48[BANK0 ] unsigned long 
  6849 ;;  f2              3   51[BANK0 ] unsigned long 
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;  quot            4   54[BANK0 ] unsigned long 
  6852 ;;  exp1            1   59[BANK0 ] unsigned char 
  6853 ;;  cntr            1   58[BANK0 ] unsigned char 
  6854 ;; Return value:  Size  Location     Type
  6855 ;;                  4   48[BANK0 ] unsigned long 
  6856 ;; Registers used:
  6857 ;;		wreg, status,2, status,0
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6863 ;;      Params:         0       6       0       0       0       0       0
  6864 ;;      Locals:         0       6       0       0       0       0       0
  6865 ;;      Temps:          0       0       0       0       0       0       0
  6866 ;;      Totals:         0      12       0       0       0       0       0
  6867 ;;Total ram usage:       12 bytes
  6868 ;; Hardware stack levels used:    1
  6869 ;; Hardware stack levels required when called:    7
  6870 ;; This function calls:
  6871 ;;		Nothing
  6872 ;; This function is called by:
  6873 ;;		__doprnt
  6874 ;; This function uses a non-reentrant model
  6875 ;;
  6876                           
  6877                           	psect	text13
  6878  00396E                     __ptext13:
  6879                           	opt stack 0
  6880  00396E                     __div_to_l_:
  6881                           	opt stack 21
  6882                           
  6883                           ; BSR set to: 0
  6884                           ;incstack = 0
  6885  00396E  0100               	movlb	0	; () banked
  6886  003970  3592               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  6887  003972  3593               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  6888  003974  0100               	movlb	0	; () banked
  6889  003976  6F9B               	movwf	__div_to_l_@exp1& (0+255),b
  6890  003978  0100               	movlb	0	; () banked
  6891  00397A  519B               	movf	__div_to_l_@exp1& (0+255),w,b
  6892  00397C  A4D8               	btfss	status,2,c
  6893  00397E  D00A               	goto	l4578
  6894                           
  6895                           ; BSR set to: 0
  6896  003980  0E00               	movlw	0
  6897  003982  0100               	movlb	0	; () banked
  6898  003984  6F90               	movwf	?__div_to_l_& (0+255),b
  6899  003986  0E00               	movlw	0
  6900  003988  6F91               	movwf	(?__div_to_l_+1)& (0+255),b
  6901  00398A  0E00               	movlw	0
  6902  00398C  6F92               	movwf	(?__div_to_l_+2)& (0+255),b
  6903  00398E  0E00               	movlw	0
  6904  003990  6F93               	movwf	(?__div_to_l_+3)& (0+255),b
  6905                           
  6906                           ; BSR set to: 0
  6907  003992  0012               	return	
  6908  003994                     l4578:
  6909                           
  6910                           ; BSR set to: 0
  6911  003994  0100               	movlb	0	; () banked
  6912  003996  3595               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  6913  003998  3596               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  6914  00399A  0100               	movlb	0	; () banked
  6915  00399C  6F9A               	movwf	__div_to_l_@cntr& (0+255),b
  6916  00399E  0100               	movlb	0	; () banked
  6917  0039A0  519A               	movf	__div_to_l_@cntr& (0+255),w,b
  6918  0039A2  A4D8               	btfss	status,2,c
  6919  0039A4  D00A               	goto	l4584
  6920                           
  6921                           ; BSR set to: 0
  6922  0039A6  0E00               	movlw	0
  6923  0039A8  0100               	movlb	0	; () banked
  6924  0039AA  6F90               	movwf	?__div_to_l_& (0+255),b
  6925  0039AC  0E00               	movlw	0
  6926  0039AE  6F91               	movwf	(?__div_to_l_+1)& (0+255),b
  6927  0039B0  0E00               	movlw	0
  6928  0039B2  6F92               	movwf	(?__div_to_l_+2)& (0+255),b
  6929  0039B4  0E00               	movlw	0
  6930  0039B6  6F93               	movwf	(?__div_to_l_+3)& (0+255),b
  6931                           
  6932                           ; BSR set to: 0
  6933  0039B8  0012               	return	
  6934  0039BA                     l4584:
  6935                           
  6936                           ; BSR set to: 0
  6937  0039BA  0100               	movlb	0	; () banked
  6938  0039BC  8F92               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  6939                           
  6940                           ; BSR set to: 0
  6941  0039BE  0EFF               	movlw	255
  6942  0039C0  0100               	movlb	0	; () banked
  6943  0039C2  1790               	andwf	__div_to_l_@f1& (0+255),f,b
  6944  0039C4  0EFF               	movlw	255
  6945  0039C6  1791               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  6946  0039C8  0EFF               	movlw	255
  6947  0039CA  1792               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  6948  0039CC  0E00               	movlw	0
  6949  0039CE  1793               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  6950                           
  6951                           ; BSR set to: 0
  6952  0039D0  0100               	movlb	0	; () banked
  6953  0039D2  8F95               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  6954  0039D4  0EFF               	movlw	255
  6955  0039D6  0100               	movlb	0	; () banked
  6956  0039D8  1793               	andwf	__div_to_l_@f2& (0+255),f,b
  6957  0039DA  0EFF               	movlw	255
  6958  0039DC  1794               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  6959  0039DE  0EFF               	movlw	255
  6960  0039E0  1795               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  6961  0039E2  0E00               	movlw	0
  6962  0039E4  1796               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  6963                           
  6964                           ; BSR set to: 0
  6965  0039E6  0E00               	movlw	0
  6966  0039E8  0100               	movlb	0	; () banked
  6967  0039EA  6F96               	movwf	__div_to_l_@quot& (0+255),b
  6968  0039EC  0E00               	movlw	0
  6969  0039EE  6F97               	movwf	(__div_to_l_@quot+1)& (0+255),b
  6970  0039F0  0E00               	movlw	0
  6971  0039F2  6F98               	movwf	(__div_to_l_@quot+2)& (0+255),b
  6972  0039F4  0E00               	movlw	0
  6973  0039F6  6F99               	movwf	(__div_to_l_@quot+3)& (0+255),b
  6974                           
  6975                           ; BSR set to: 0
  6976  0039F8  0E7F               	movlw	127
  6977  0039FA  0100               	movlb	0	; () banked
  6978  0039FC  5F9B               	subwf	__div_to_l_@exp1& (0+255),f,b
  6979                           
  6980                           ; BSR set to: 0
  6981  0039FE  0100               	movlb	0	; () banked
  6982  003A00  519A               	movf	__div_to_l_@cntr& (0+255),w,b
  6983  003A02  0FA0               	addlw	160
  6984  003A04  0100               	movlb	0	; () banked
  6985  003A06  5F9B               	subwf	__div_to_l_@exp1& (0+255),f,b
  6986                           
  6987                           ; BSR set to: 0
  6988  003A08  0E20               	movlw	32
  6989  003A0A  0100               	movlb	0	; () banked
  6990  003A0C  6F9A               	movwf	__div_to_l_@cntr& (0+255),b
  6991  003A0E                     l4598:
  6992                           
  6993                           ; BSR set to: 0
  6994  003A0E  0100               	movlb	0	; () banked
  6995  003A10  90D8               	bcf	status,0,c
  6996  003A12  3796               	rlcf	__div_to_l_@quot& (0+255),f,b
  6997  003A14  3797               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  6998  003A16  3798               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  6999  003A18  3799               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7000                           
  7001                           ; BSR set to: 0
  7002  003A1A  0100               	movlb	0	; () banked
  7003  003A1C  5193               	movf	__div_to_l_@f2& (0+255),w,b
  7004  003A1E  0100               	movlb	0	; () banked
  7005  003A20  5D90               	subwf	__div_to_l_@f1& (0+255),w,b
  7006  003A22  0100               	movlb	0	; () banked
  7007  003A24  5194               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7008  003A26  0100               	movlb	0	; () banked
  7009  003A28  5991               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  7010  003A2A  0100               	movlb	0	; () banked
  7011  003A2C  5195               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7012  003A2E  0100               	movlb	0	; () banked
  7013  003A30  5992               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  7014  003A32  0100               	movlb	0	; () banked
  7015  003A34  5196               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7016  003A36  0100               	movlb	0	; () banked
  7017  003A38  5993               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  7018  003A3A  A0D8               	btfss	status,0,c
  7019  003A3C  D012               	goto	l4606
  7020                           
  7021                           ; BSR set to: 0
  7022  003A3E  0100               	movlb	0	; () banked
  7023  003A40  5193               	movf	__div_to_l_@f2& (0+255),w,b
  7024  003A42  0100               	movlb	0	; () banked
  7025  003A44  5F90               	subwf	__div_to_l_@f1& (0+255),f,b
  7026  003A46  0100               	movlb	0	; () banked
  7027  003A48  5194               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7028  003A4A  0100               	movlb	0	; () banked
  7029  003A4C  5B91               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  7030  003A4E  0100               	movlb	0	; () banked
  7031  003A50  5195               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7032  003A52  0100               	movlb	0	; () banked
  7033  003A54  5B92               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  7034  003A56  0100               	movlb	0	; () banked
  7035  003A58  5196               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7036  003A5A  0100               	movlb	0	; () banked
  7037  003A5C  5B93               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  7038                           
  7039                           ; BSR set to: 0
  7040  003A5E  0100               	movlb	0	; () banked
  7041  003A60  8196               	bsf	__div_to_l_@quot& (0+255),0,b
  7042  003A62                     l4606:
  7043                           
  7044                           ; BSR set to: 0
  7045  003A62  0100               	movlb	0	; () banked
  7046  003A64  90D8               	bcf	status,0,c
  7047  003A66  3790               	rlcf	__div_to_l_@f1& (0+255),f,b
  7048  003A68  3791               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  7049  003A6A  3792               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  7050  003A6C  3793               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  7051                           
  7052                           ; BSR set to: 0
  7053  003A6E  0100               	movlb	0	; () banked
  7054  003A70  2F9A               	decfsz	__div_to_l_@cntr& (0+255),f,b
  7055  003A72  D7CD               	goto	l4598
  7056                           
  7057                           ; BSR set to: 0
  7058                           
  7059                           ; BSR set to: 0
  7060  003A74  0100               	movlb	0	; () banked
  7061  003A76  AF9B               	btfss	__div_to_l_@exp1& (0+255),7,b
  7062  003A78  D01A               	goto	l4622
  7063                           
  7064                           ; BSR set to: 0
  7065  003A7A  0100               	movlb	0	; () banked
  7066  003A7C  519B               	movf	__div_to_l_@exp1& (0+255),w,b
  7067  003A7E  0A80               	xorlw	128
  7068  003A80  0F9F               	addlw	159
  7069  003A82  B0D8               	btfsc	status,0,c
  7070  003A84  D00A               	goto	l4618
  7071                           
  7072                           ; BSR set to: 0
  7073  003A86  0E00               	movlw	0
  7074  003A88  0100               	movlb	0	; () banked
  7075  003A8A  6F90               	movwf	?__div_to_l_& (0+255),b
  7076  003A8C  0E00               	movlw	0
  7077  003A8E  6F91               	movwf	(?__div_to_l_+1)& (0+255),b
  7078  003A90  0E00               	movlw	0
  7079  003A92  6F92               	movwf	(?__div_to_l_+2)& (0+255),b
  7080  003A94  0E00               	movlw	0
  7081  003A96  6F93               	movwf	(?__div_to_l_+3)& (0+255),b
  7082                           
  7083                           ; BSR set to: 0
  7084  003A98  0012               	return	
  7085  003A9A                     l4618:
  7086                           
  7087                           ; BSR set to: 0
  7088  003A9A  0100               	movlb	0	; () banked
  7089  003A9C  90D8               	bcf	status,0,c
  7090  003A9E  3399               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  7091  003AA0  3398               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  7092  003AA2  3397               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  7093  003AA4  3396               	rrcf	__div_to_l_@quot& (0+255),f,b
  7094                           
  7095                           ; BSR set to: 0
  7096  003AA6  0100               	movlb	0	; () banked
  7097  003AA8  3F9B               	incfsz	__div_to_l_@exp1& (0+255),f,b
  7098  003AAA  D7F7               	goto	l4618
  7099                           
  7100                           ; BSR set to: 0
  7101  003AAC  D01B               	goto	l735
  7102  003AAE                     l4622:
  7103                           
  7104                           ; BSR set to: 0
  7105  003AAE  0E1F               	movlw	31
  7106  003AB0  0100               	movlb	0	; () banked
  7107  003AB2  659B               	cpfsgt	__div_to_l_@exp1& (0+255),b
  7108  003AB4  D012               	goto	l4630
  7109                           
  7110                           ; BSR set to: 0
  7111  003AB6  0E00               	movlw	0
  7112  003AB8  0100               	movlb	0	; () banked
  7113  003ABA  6F90               	movwf	?__div_to_l_& (0+255),b
  7114  003ABC  0E00               	movlw	0
  7115  003ABE  6F91               	movwf	(?__div_to_l_+1)& (0+255),b
  7116  003AC0  0E00               	movlw	0
  7117  003AC2  6F92               	movwf	(?__div_to_l_+2)& (0+255),b
  7118  003AC4  0E00               	movlw	0
  7119  003AC6  6F93               	movwf	(?__div_to_l_+3)& (0+255),b
  7120                           
  7121                           ; BSR set to: 0
  7122  003AC8  0012               	return	
  7123  003ACA                     l4628:
  7124                           
  7125                           ; BSR set to: 0
  7126  003ACA  0100               	movlb	0	; () banked
  7127  003ACC  90D8               	bcf	status,0,c
  7128  003ACE  3796               	rlcf	__div_to_l_@quot& (0+255),f,b
  7129  003AD0  3797               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7130  003AD2  3798               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7131  003AD4  3799               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7132  003AD6  0100               	movlb	0	; () banked
  7133  003AD8  079B               	decf	__div_to_l_@exp1& (0+255),f,b
  7134  003ADA                     l4630:
  7135                           
  7136                           ; BSR set to: 0
  7137  003ADA  0100               	movlb	0	; () banked
  7138  003ADC  519B               	movf	__div_to_l_@exp1& (0+255),w,b
  7139  003ADE  0100               	movlb	0	; () banked
  7140  003AE0  A4D8               	btfss	status,2,c
  7141  003AE2  D7F3               	goto	l4628
  7142  003AE4                     l735:
  7143                           
  7144                           ; BSR set to: 0
  7145  003AE4  C096  F090         	movff	__div_to_l_@quot,?__div_to_l_
  7146  003AE8  C097  F091         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  7147  003AEC  C098  F092         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  7148  003AF0  C099  F093         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  7149                           
  7150                           ; BSR set to: 0
  7151  003AF4  0012               	return		;funcret
  7152  003AF6                     __end_of__div_to_l_:
  7153                           	opt stack 0
  7154                           tosu	equ	0xFFF
  7155                           tosh	equ	0xFFE
  7156                           tosl	equ	0xFFD
  7157                           pclath	equ	0xFFA
  7158                           tblptru	equ	0xFF8
  7159                           tblptrh	equ	0xFF7
  7160                           tblptrl	equ	0xFF6
  7161                           tablat	equ	0xFF5
  7162                           prodh	equ	0xFF4
  7163                           prodl	equ	0xFF3
  7164                           intcon	equ	0xFF2
  7165                           postinc0	equ	0xFEE
  7166                           wreg	equ	0xFE8
  7167                           postdec1	equ	0xFE5
  7168                           fsr1l	equ	0xFE1
  7169                           indf2	equ	0xFDF
  7170                           postinc2	equ	0xFDE
  7171                           postdec2	equ	0xFDD
  7172                           fsr2h	equ	0xFDA
  7173                           fsr2l	equ	0xFD9
  7174                           status	equ	0xFD8
  7175                           
  7176 ;; *************** function ___lltoft *****************
  7177 ;; Defined at:
  7178 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lltoft.c"
  7179 ;; Parameters:    Size  Location     Type
  7180 ;;  c               4   56[BANK0 ] unsigned long 
  7181 ;; Auto vars:     Size  Location     Type
  7182 ;;  exp             1   64[BANK0 ] unsigned char 
  7183 ;; Return value:  Size  Location     Type
  7184 ;;                  3   56[BANK0 ] float 
  7185 ;; Registers used:
  7186 ;;		wreg, status,2, status,0, cstack
  7187 ;; Tracked objects:
  7188 ;;		On entry : 0/0
  7189 ;;		On exit  : 0/0
  7190 ;;		Unchanged: 0/0
  7191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7192 ;;      Params:         0       4       0       0       0       0       0
  7193 ;;      Locals:         0       1       0       0       0       0       0
  7194 ;;      Temps:          0       4       0       0       0       0       0
  7195 ;;      Totals:         0       9       0       0       0       0       0
  7196 ;;Total ram usage:        9 bytes
  7197 ;; Hardware stack levels used:    1
  7198 ;; Hardware stack levels required when called:    8
  7199 ;; This function calls:
  7200 ;;		___ftpack
  7201 ;; This function is called by:
  7202 ;;		__doprnt
  7203 ;; This function uses a non-reentrant model
  7204 ;;
  7205                           
  7206                           	psect	text14
  7207  004D62                     __ptext14:
  7208                           	opt stack 0
  7209  004D62                     ___lltoft:
  7210                           	opt stack 20
  7211                           
  7212                           ; BSR set to: 0
  7213                           ;incstack = 0
  7214  004D62  0E8E               	movlw	142
  7215  004D64  0100               	movlb	0	; () banked
  7216  004D66  6FA0               	movwf	___lltoft@exp& (0+255),b
  7217  004D68  D008               	goto	l6304
  7218  004D6A                     l6302:
  7219                           
  7220                           ; BSR set to: 0
  7221  004D6A  0100               	movlb	0	; () banked
  7222  004D6C  90D8               	bcf	status,0,c
  7223  004D6E  339B               	rrcf	(___lltoft@c+3)& (0+255),f,b
  7224  004D70  339A               	rrcf	(___lltoft@c+2)& (0+255),f,b
  7225  004D72  3399               	rrcf	(___lltoft@c+1)& (0+255),f,b
  7226  004D74  3398               	rrcf	___lltoft@c& (0+255),f,b
  7227  004D76  0100               	movlb	0	; () banked
  7228  004D78  2BA0               	incf	___lltoft@exp& (0+255),f,b
  7229  004D7A                     l6304:
  7230                           
  7231                           ; BSR set to: 0
  7232  004D7A  0E00               	movlw	0
  7233  004D7C  0100               	movlb	0	; () banked
  7234  004D7E  1598               	andwf	___lltoft@c& (0+255),w,b
  7235  004D80  0100               	movlb	0	; () banked
  7236  004D82  6F9C               	movwf	??___lltoft& (0+255),b
  7237  004D84  0E00               	movlw	0
  7238  004D86  0100               	movlb	0	; () banked
  7239  004D88  1599               	andwf	(___lltoft@c+1)& (0+255),w,b
  7240  004D8A  0100               	movlb	0	; () banked
  7241  004D8C  6F9D               	movwf	(??___lltoft+1)& (0+255),b
  7242  004D8E  0E00               	movlw	0
  7243  004D90  0100               	movlb	0	; () banked
  7244  004D92  159A               	andwf	(___lltoft@c+2)& (0+255),w,b
  7245  004D94  0100               	movlb	0	; () banked
  7246  004D96  6F9E               	movwf	(??___lltoft+2)& (0+255),b
  7247  004D98  0EFF               	movlw	255
  7248  004D9A  0100               	movlb	0	; () banked
  7249  004D9C  159B               	andwf	(___lltoft@c+3)& (0+255),w,b
  7250  004D9E  0100               	movlb	0	; () banked
  7251  004DA0  6F9F               	movwf	(??___lltoft+3)& (0+255),b
  7252  004DA2  0100               	movlb	0	; () banked
  7253  004DA4  519C               	movf	??___lltoft& (0+255),w,b
  7254  004DA6  0100               	movlb	0	; () banked
  7255  004DA8  119D               	iorwf	(??___lltoft+1)& (0+255),w,b
  7256  004DAA  0100               	movlb	0	; () banked
  7257  004DAC  119E               	iorwf	(??___lltoft+2)& (0+255),w,b
  7258  004DAE  0100               	movlb	0	; () banked
  7259  004DB0  119F               	iorwf	(??___lltoft+3)& (0+255),w,b
  7260  004DB2  A4D8               	btfss	status,2,c
  7261  004DB4  D7DA               	goto	l6302
  7262                           
  7263                           ; BSR set to: 0
  7264                           
  7265                           ; BSR set to: 0
  7266  004DB6  C098  F090         	movff	___lltoft@c,___ftpack@arg
  7267  004DBA  C099  F091         	movff	___lltoft@c+1,___ftpack@arg+1
  7268  004DBE  C09A  F092         	movff	___lltoft@c+2,___ftpack@arg+2
  7269  004DC2  C0A0  F093         	movff	___lltoft@exp,___ftpack@exp
  7270  004DC6  0E00               	movlw	0
  7271  004DC8  0100               	movlb	0	; () banked
  7272  004DCA  6F94               	movwf	___ftpack@sign& (0+255),b
  7273  004DCC  ECE3  F021         	call	___ftpack	;wreg free
  7274  004DD0  C090  F098         	movff	?___ftpack,?___lltoft
  7275  004DD4  C091  F099         	movff	?___ftpack+1,?___lltoft+1
  7276  004DD8  C092  F09A         	movff	?___ftpack+2,?___lltoft+2
  7277  004DDC  0012               	return	
  7278  004DDE                     __end_of___lltoft:
  7279                           	opt stack 0
  7280                           tosu	equ	0xFFF
  7281                           tosh	equ	0xFFE
  7282                           tosl	equ	0xFFD
  7283                           pclath	equ	0xFFA
  7284                           tblptru	equ	0xFF8
  7285                           tblptrh	equ	0xFF7
  7286                           tblptrl	equ	0xFF6
  7287                           tablat	equ	0xFF5
  7288                           prodh	equ	0xFF4
  7289                           prodl	equ	0xFF3
  7290                           intcon	equ	0xFF2
  7291                           postinc0	equ	0xFEE
  7292                           wreg	equ	0xFE8
  7293                           postdec1	equ	0xFE5
  7294                           fsr1l	equ	0xFE1
  7295                           indf2	equ	0xFDF
  7296                           postinc2	equ	0xFDE
  7297                           postdec2	equ	0xFDD
  7298                           fsr2h	equ	0xFDA
  7299                           fsr2l	equ	0xFD9
  7300                           status	equ	0xFD8
  7301                           
  7302 ;; *************** function ___llmod *****************
  7303 ;; Defined at:
  7304 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;  dividend        4   61[BANK0 ] unsigned long 
  7307 ;;  divisor         4   65[BANK0 ] unsigned long 
  7308 ;; Auto vars:     Size  Location     Type
  7309 ;;  counter         1   69[BANK0 ] unsigned char 
  7310 ;; Return value:  Size  Location     Type
  7311 ;;                  4   61[BANK0 ] unsigned long 
  7312 ;; Registers used:
  7313 ;;		wreg, status,2, status,0
  7314 ;; Tracked objects:
  7315 ;;		On entry : 0/0
  7316 ;;		On exit  : 0/0
  7317 ;;		Unchanged: 0/0
  7318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7319 ;;      Params:         0       8       0       0       0       0       0
  7320 ;;      Locals:         0       1       0       0       0       0       0
  7321 ;;      Temps:          0       0       0       0       0       0       0
  7322 ;;      Totals:         0       9       0       0       0       0       0
  7323 ;;Total ram usage:        9 bytes
  7324 ;; Hardware stack levels used:    1
  7325 ;; Hardware stack levels required when called:    7
  7326 ;; This function calls:
  7327 ;;		Nothing
  7328 ;; This function is called by:
  7329 ;;		__doprnt
  7330 ;; This function uses a non-reentrant model
  7331 ;;
  7332                           
  7333                           	psect	text15
  7334  004B32                     __ptext15:
  7335                           	opt stack 0
  7336  004B32                     ___llmod:
  7337                           	opt stack 21
  7338                           
  7339                           ;incstack = 0
  7340  004B32  0100               	movlb	0	; () banked
  7341  004B34  51A1               	movf	___llmod@divisor& (0+255),w,b
  7342  004B36  0100               	movlb	0	; () banked
  7343  004B38  11A2               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  7344  004B3A  0100               	movlb	0	; () banked
  7345  004B3C  11A3               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  7346  004B3E  0100               	movlb	0	; () banked
  7347  004B40  11A4               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  7348  004B42  B4D8               	btfsc	status,2,c
  7349  004B44  D03A               	goto	l946
  7350                           
  7351                           ; BSR set to: 0
  7352  004B46  0E01               	movlw	1
  7353  004B48  0100               	movlb	0	; () banked
  7354  004B4A  6FA5               	movwf	___llmod@counter& (0+255),b
  7355  004B4C  D008               	goto	l4736
  7356  004B4E                     l4734:
  7357                           
  7358                           ; BSR set to: 0
  7359  004B4E  0100               	movlb	0	; () banked
  7360  004B50  90D8               	bcf	status,0,c
  7361  004B52  37A1               	rlcf	___llmod@divisor& (0+255),f,b
  7362  004B54  37A2               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  7363  004B56  37A3               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  7364  004B58  37A4               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  7365  004B5A  0100               	movlb	0	; () banked
  7366  004B5C  2BA5               	incf	___llmod@counter& (0+255),f,b
  7367  004B5E                     l4736:
  7368                           
  7369                           ; BSR set to: 0
  7370  004B5E  0100               	movlb	0	; () banked
  7371  004B60  AFA4               	btfss	(___llmod@divisor+3)& (0+255),7,b
  7372  004B62  D7F5               	goto	l4734
  7373  004B64                     l4738:
  7374                           
  7375                           ; BSR set to: 0
  7376  004B64  0100               	movlb	0	; () banked
  7377  004B66  51A1               	movf	___llmod@divisor& (0+255),w,b
  7378  004B68  0100               	movlb	0	; () banked
  7379  004B6A  5D9D               	subwf	___llmod@dividend& (0+255),w,b
  7380  004B6C  0100               	movlb	0	; () banked
  7381  004B6E  51A2               	movf	(___llmod@divisor+1)& (0+255),w,b
  7382  004B70  0100               	movlb	0	; () banked
  7383  004B72  599E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  7384  004B74  0100               	movlb	0	; () banked
  7385  004B76  51A3               	movf	(___llmod@divisor+2)& (0+255),w,b
  7386  004B78  0100               	movlb	0	; () banked
  7387  004B7A  599F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  7388  004B7C  0100               	movlb	0	; () banked
  7389  004B7E  51A4               	movf	(___llmod@divisor+3)& (0+255),w,b
  7390  004B80  0100               	movlb	0	; () banked
  7391  004B82  59A0               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  7392  004B84  A0D8               	btfss	status,0,c
  7393  004B86  D010               	goto	l4742
  7394                           
  7395                           ; BSR set to: 0
  7396  004B88  0100               	movlb	0	; () banked
  7397  004B8A  51A1               	movf	___llmod@divisor& (0+255),w,b
  7398  004B8C  0100               	movlb	0	; () banked
  7399  004B8E  5F9D               	subwf	___llmod@dividend& (0+255),f,b
  7400  004B90  0100               	movlb	0	; () banked
  7401  004B92  51A2               	movf	(___llmod@divisor+1)& (0+255),w,b
  7402  004B94  0100               	movlb	0	; () banked
  7403  004B96  5B9E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  7404  004B98  0100               	movlb	0	; () banked
  7405  004B9A  51A3               	movf	(___llmod@divisor+2)& (0+255),w,b
  7406  004B9C  0100               	movlb	0	; () banked
  7407  004B9E  5B9F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  7408  004BA0  0100               	movlb	0	; () banked
  7409  004BA2  51A4               	movf	(___llmod@divisor+3)& (0+255),w,b
  7410  004BA4  0100               	movlb	0	; () banked
  7411  004BA6  5BA0               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  7412  004BA8                     l4742:
  7413                           
  7414                           ; BSR set to: 0
  7415  004BA8  0100               	movlb	0	; () banked
  7416  004BAA  90D8               	bcf	status,0,c
  7417  004BAC  33A4               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  7418  004BAE  33A3               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  7419  004BB0  33A2               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  7420  004BB2  33A1               	rrcf	___llmod@divisor& (0+255),f,b
  7421                           
  7422                           ; BSR set to: 0
  7423  004BB4  0100               	movlb	0	; () banked
  7424  004BB6  2FA5               	decfsz	___llmod@counter& (0+255),f,b
  7425  004BB8  D7D5               	goto	l4738
  7426  004BBA                     l946:
  7427                           
  7428                           ; BSR set to: 0
  7429  004BBA  C09D  F09D         	movff	___llmod@dividend,?___llmod
  7430  004BBE  C09E  F09E         	movff	___llmod@dividend+1,?___llmod+1
  7431  004BC2  C09F  F09F         	movff	___llmod@dividend+2,?___llmod+2
  7432  004BC6  C0A0  F0A0         	movff	___llmod@dividend+3,?___llmod+3
  7433                           
  7434                           ; BSR set to: 0
  7435  004BCA  0012               	return		;funcret
  7436  004BCC                     __end_of___llmod:
  7437                           	opt stack 0
  7438                           tosu	equ	0xFFF
  7439                           tosh	equ	0xFFE
  7440                           tosl	equ	0xFFD
  7441                           pclath	equ	0xFFA
  7442                           tblptru	equ	0xFF8
  7443                           tblptrh	equ	0xFF7
  7444                           tblptrl	equ	0xFF6
  7445                           tablat	equ	0xFF5
  7446                           prodh	equ	0xFF4
  7447                           prodl	equ	0xFF3
  7448                           intcon	equ	0xFF2
  7449                           postinc0	equ	0xFEE
  7450                           wreg	equ	0xFE8
  7451                           postdec1	equ	0xFE5
  7452                           fsr1l	equ	0xFE1
  7453                           indf2	equ	0xFDF
  7454                           postinc2	equ	0xFDE
  7455                           postdec2	equ	0xFDD
  7456                           fsr2h	equ	0xFDA
  7457                           fsr2l	equ	0xFD9
  7458                           status	equ	0xFD8
  7459                           
  7460 ;; *************** function ___lldiv *****************
  7461 ;; Defined at:
  7462 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
  7463 ;; Parameters:    Size  Location     Type
  7464 ;;  dividend        4   48[BANK0 ] unsigned long 
  7465 ;;  divisor         4   52[BANK0 ] unsigned long 
  7466 ;; Auto vars:     Size  Location     Type
  7467 ;;  quotient        4   56[BANK0 ] unsigned long 
  7468 ;;  counter         1   60[BANK0 ] unsigned char 
  7469 ;; Return value:  Size  Location     Type
  7470 ;;                  4   48[BANK0 ] unsigned long 
  7471 ;; Registers used:
  7472 ;;		wreg, status,2, status,0
  7473 ;; Tracked objects:
  7474 ;;		On entry : 0/0
  7475 ;;		On exit  : 0/0
  7476 ;;		Unchanged: 0/0
  7477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7478 ;;      Params:         0       8       0       0       0       0       0
  7479 ;;      Locals:         0       5       0       0       0       0       0
  7480 ;;      Temps:          0       0       0       0       0       0       0
  7481 ;;      Totals:         0      13       0       0       0       0       0
  7482 ;;Total ram usage:       13 bytes
  7483 ;; Hardware stack levels used:    1
  7484 ;; Hardware stack levels required when called:    7
  7485 ;; This function calls:
  7486 ;;		Nothing
  7487 ;; This function is called by:
  7488 ;;		__doprnt
  7489 ;; This function uses a non-reentrant model
  7490 ;;
  7491                           
  7492                           	psect	text16
  7493  004926                     __ptext16:
  7494                           	opt stack 0
  7495  004926                     ___lldiv:
  7496                           	opt stack 21
  7497                           
  7498                           ; BSR set to: 0
  7499                           ;incstack = 0
  7500  004926  0E00               	movlw	0
  7501  004928  0100               	movlb	0	; () banked
  7502  00492A  6F98               	movwf	___lldiv@quotient& (0+255),b
  7503  00492C  0E00               	movlw	0
  7504  00492E  6F99               	movwf	(___lldiv@quotient+1)& (0+255),b
  7505  004930  0E00               	movlw	0
  7506  004932  6F9A               	movwf	(___lldiv@quotient+2)& (0+255),b
  7507  004934  0E00               	movlw	0
  7508  004936  6F9B               	movwf	(___lldiv@quotient+3)& (0+255),b
  7509                           
  7510                           ; BSR set to: 0
  7511  004938  0100               	movlb	0	; () banked
  7512  00493A  5194               	movf	___lldiv@divisor& (0+255),w,b
  7513  00493C  0100               	movlb	0	; () banked
  7514  00493E  1195               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7515  004940  0100               	movlb	0	; () banked
  7516  004942  1196               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7517  004944  0100               	movlb	0	; () banked
  7518  004946  1197               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  7519  004948  B4D8               	btfsc	status,2,c
  7520  00494A  D042               	goto	l936
  7521                           
  7522                           ; BSR set to: 0
  7523  00494C  0E01               	movlw	1
  7524  00494E  0100               	movlb	0	; () banked
  7525  004950  6F9C               	movwf	___lldiv@counter& (0+255),b
  7526  004952  D008               	goto	l4716
  7527  004954                     l4714:
  7528                           
  7529                           ; BSR set to: 0
  7530  004954  0100               	movlb	0	; () banked
  7531  004956  90D8               	bcf	status,0,c
  7532  004958  3794               	rlcf	___lldiv@divisor& (0+255),f,b
  7533  00495A  3795               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7534  00495C  3796               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7535  00495E  3797               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7536  004960  0100               	movlb	0	; () banked
  7537  004962  2B9C               	incf	___lldiv@counter& (0+255),f,b
  7538  004964                     l4716:
  7539                           
  7540                           ; BSR set to: 0
  7541  004964  0100               	movlb	0	; () banked
  7542  004966  AF97               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  7543  004968  D7F5               	goto	l4714
  7544  00496A                     l4718:
  7545                           
  7546                           ; BSR set to: 0
  7547  00496A  0100               	movlb	0	; () banked
  7548  00496C  90D8               	bcf	status,0,c
  7549  00496E  3798               	rlcf	___lldiv@quotient& (0+255),f,b
  7550  004970  3799               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  7551  004972  379A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  7552  004974  379B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  7553                           
  7554                           ; BSR set to: 0
  7555  004976  0100               	movlb	0	; () banked
  7556  004978  5194               	movf	___lldiv@divisor& (0+255),w,b
  7557  00497A  0100               	movlb	0	; () banked
  7558  00497C  5D90               	subwf	___lldiv@dividend& (0+255),w,b
  7559  00497E  0100               	movlb	0	; () banked
  7560  004980  5195               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7561  004982  0100               	movlb	0	; () banked
  7562  004984  5991               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7563  004986  0100               	movlb	0	; () banked
  7564  004988  5196               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7565  00498A  0100               	movlb	0	; () banked
  7566  00498C  5992               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7567  00498E  0100               	movlb	0	; () banked
  7568  004990  5197               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7569  004992  0100               	movlb	0	; () banked
  7570  004994  5993               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7571  004996  A0D8               	btfss	status,0,c
  7572  004998  D012               	goto	l4726
  7573                           
  7574                           ; BSR set to: 0
  7575  00499A  0100               	movlb	0	; () banked
  7576  00499C  5194               	movf	___lldiv@divisor& (0+255),w,b
  7577  00499E  0100               	movlb	0	; () banked
  7578  0049A0  5F90               	subwf	___lldiv@dividend& (0+255),f,b
  7579  0049A2  0100               	movlb	0	; () banked
  7580  0049A4  5195               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7581  0049A6  0100               	movlb	0	; () banked
  7582  0049A8  5B91               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7583  0049AA  0100               	movlb	0	; () banked
  7584  0049AC  5196               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7585  0049AE  0100               	movlb	0	; () banked
  7586  0049B0  5B92               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7587  0049B2  0100               	movlb	0	; () banked
  7588  0049B4  5197               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7589  0049B6  0100               	movlb	0	; () banked
  7590  0049B8  5B93               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7591                           
  7592                           ; BSR set to: 0
  7593  0049BA  0100               	movlb	0	; () banked
  7594  0049BC  8198               	bsf	___lldiv@quotient& (0+255),0,b
  7595  0049BE                     l4726:
  7596                           
  7597                           ; BSR set to: 0
  7598  0049BE  0100               	movlb	0	; () banked
  7599  0049C0  90D8               	bcf	status,0,c
  7600  0049C2  3397               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7601  0049C4  3396               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7602  0049C6  3395               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7603  0049C8  3394               	rrcf	___lldiv@divisor& (0+255),f,b
  7604                           
  7605                           ; BSR set to: 0
  7606  0049CA  0100               	movlb	0	; () banked
  7607  0049CC  2F9C               	decfsz	___lldiv@counter& (0+255),f,b
  7608  0049CE  D7CD               	goto	l4718
  7609  0049D0                     l936:
  7610                           
  7611                           ; BSR set to: 0
  7612  0049D0  C098  F090         	movff	___lldiv@quotient,?___lldiv
  7613  0049D4  C099  F091         	movff	___lldiv@quotient+1,?___lldiv+1
  7614  0049D8  C09A  F092         	movff	___lldiv@quotient+2,?___lldiv+2
  7615  0049DC  C09B  F093         	movff	___lldiv@quotient+3,?___lldiv+3
  7616                           
  7617                           ; BSR set to: 0
  7618  0049E0  0012               	return		;funcret
  7619  0049E2                     __end_of___lldiv:
  7620                           	opt stack 0
  7621                           tosu	equ	0xFFF
  7622                           tosh	equ	0xFFE
  7623                           tosl	equ	0xFFD
  7624                           pclath	equ	0xFFA
  7625                           tblptru	equ	0xFF8
  7626                           tblptrh	equ	0xFF7
  7627                           tblptrl	equ	0xFF6
  7628                           tablat	equ	0xFF5
  7629                           prodh	equ	0xFF4
  7630                           prodl	equ	0xFF3
  7631                           intcon	equ	0xFF2
  7632                           postinc0	equ	0xFEE
  7633                           wreg	equ	0xFE8
  7634                           postdec1	equ	0xFE5
  7635                           fsr1l	equ	0xFE1
  7636                           indf2	equ	0xFDF
  7637                           postinc2	equ	0xFDE
  7638                           postdec2	equ	0xFDD
  7639                           fsr2h	equ	0xFDA
  7640                           fsr2l	equ	0xFD9
  7641                           status	equ	0xFD8
  7642                           
  7643 ;; *************** function ___fttol *****************
  7644 ;; Defined at:
  7645 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  7646 ;; Parameters:    Size  Location     Type
  7647 ;;  f1              3    4[BANK1 ] float 
  7648 ;; Auto vars:     Size  Location     Type
  7649 ;;  lval            4   14[BANK1 ] unsigned long 
  7650 ;;  exp1            1   18[BANK1 ] unsigned char 
  7651 ;;  sign1           1   13[BANK1 ] unsigned char 
  7652 ;; Return value:  Size  Location     Type
  7653 ;;                  4    4[BANK1 ] long 
  7654 ;; Registers used:
  7655 ;;		wreg, status,2, status,0
  7656 ;; Tracked objects:
  7657 ;;		On entry : 0/0
  7658 ;;		On exit  : 0/0
  7659 ;;		Unchanged: 0/0
  7660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7661 ;;      Params:         0       0       4       0       0       0       0
  7662 ;;      Locals:         0       0       6       0       0       0       0
  7663 ;;      Temps:          0       0       5       0       0       0       0
  7664 ;;      Totals:         0       0      15       0       0       0       0
  7665 ;;Total ram usage:       15 bytes
  7666 ;; Hardware stack levels used:    1
  7667 ;; Hardware stack levels required when called:    7
  7668 ;; This function calls:
  7669 ;;		Nothing
  7670 ;; This function is called by:
  7671 ;;		__doprnt
  7672 ;; This function uses a non-reentrant model
  7673 ;;
  7674                           
  7675                           	psect	text17
  7676  003F06                     __ptext17:
  7677                           	opt stack 0
  7678  003F06                     ___fttol:
  7679                           	opt stack 21
  7680                           
  7681                           ; BSR set to: 0
  7682                           ;incstack = 0
  7683  003F06  C106  F108         	movff	___fttol@f1+2,??___fttol
  7684  003F0A  0101               	movlb	1	; () banked
  7685  003F0C  6B09               	clrf	(??___fttol+1)& (0+255),b
  7686  003F0E  6B0A               	clrf	(??___fttol+2)& (0+255),b
  7687  003F10  0101               	movlb	1	; () banked
  7688  003F12  3505               	rlcf	(___fttol@f1+1)& (0+255),w,b
  7689  003F14  0101               	movlb	1	; () banked
  7690  003F16  3708               	rlcf	??___fttol& (0+255),f,b
  7691  003F18  E301               	bnc	u8921
  7692  003F1A  8109               	bsf	(??___fttol+1)& (0+255),0,b
  7693  003F1C                     u8921:
  7694  003F1C  0101               	movlb	1	; () banked
  7695  003F1E  5108               	movf	??___fttol& (0+255),w,b
  7696  003F20  0101               	movlb	1	; () banked
  7697  003F22  6F12               	movwf	___fttol@exp1& (0+255),b
  7698  003F24  0101               	movlb	1	; () banked
  7699  003F26  5112               	movf	___fttol@exp1& (0+255),w,b
  7700  003F28  A4D8               	btfss	status,2,c
  7701  003F2A  D00A               	goto	l6260
  7702                           
  7703                           ; BSR set to: 1
  7704  003F2C  0E00               	movlw	0
  7705  003F2E  0101               	movlb	1	; () banked
  7706  003F30  6F04               	movwf	?___fttol& (0+255),b
  7707  003F32  0E00               	movlw	0
  7708  003F34  6F05               	movwf	(?___fttol+1)& (0+255),b
  7709  003F36  0E00               	movlw	0
  7710  003F38  6F06               	movwf	(?___fttol+2)& (0+255),b
  7711  003F3A  0E00               	movlw	0
  7712  003F3C  6F07               	movwf	(?___fttol+3)& (0+255),b
  7713                           
  7714                           ; BSR set to: 1
  7715  003F3E  0012               	return	
  7716  003F40                     l6260:
  7717                           
  7718                           ; BSR set to: 1
  7719  003F40  0E17               	movlw	23
  7720  003F42  0101               	movlb	1	; () banked
  7721  003F44  6F08               	movwf	??___fttol& (0+255),b
  7722  003F46  C104  F109         	movff	___fttol@f1,??___fttol+1
  7723  003F4A  C105  F10A         	movff	___fttol@f1+1,??___fttol+2
  7724  003F4E  C106  F10B         	movff	___fttol@f1+2,??___fttol+3
  7725  003F52  0101               	movlb	1	; () banked
  7726  003F54  2908               	incf	??___fttol& (0+255),w,b
  7727  003F56  0101               	movlb	1	; () banked
  7728  003F58  6F0C               	movwf	(??___fttol+4)& (0+255),b
  7729  003F5A  D005               	goto	u8940
  7730  003F5C                     u8945:
  7731  003F5C  0101               	movlb	1	; () banked
  7732  003F5E  90D8               	bcf	status,0,c
  7733  003F60  330B               	rrcf	(??___fttol+3)& (0+255),f,b
  7734  003F62  330A               	rrcf	(??___fttol+2)& (0+255),f,b
  7735  003F64  3309               	rrcf	(??___fttol+1)& (0+255),f,b
  7736  003F66                     u8940:
  7737  003F66  0101               	movlb	1	; () banked
  7738  003F68  2F0C               	decfsz	(??___fttol+4)& (0+255),f,b
  7739  003F6A  D7F8               	goto	u8945
  7740  003F6C  0101               	movlb	1	; () banked
  7741  003F6E  5109               	movf	(??___fttol+1)& (0+255),w,b
  7742  003F70  0101               	movlb	1	; () banked
  7743  003F72  6F0D               	movwf	___fttol@sign1& (0+255),b
  7744                           
  7745                           ; BSR set to: 1
  7746  003F74  0101               	movlb	1	; () banked
  7747  003F76  8F05               	bsf	(___fttol@f1+1)& (0+255),7,b
  7748                           
  7749                           ; BSR set to: 1
  7750  003F78  0EFF               	movlw	255
  7751  003F7A  0101               	movlb	1	; () banked
  7752  003F7C  1704               	andwf	___fttol@f1& (0+255),f,b
  7753  003F7E  0EFF               	movlw	255
  7754  003F80  0101               	movlb	1	; () banked
  7755  003F82  1705               	andwf	(___fttol@f1+1)& (0+255),f,b
  7756  003F84  0E00               	movlw	0
  7757  003F86  0101               	movlb	1	; () banked
  7758  003F88  1706               	andwf	(___fttol@f1+2)& (0+255),f,b
  7759                           
  7760                           ; BSR set to: 1
  7761  003F8A  0101               	movlb	1	; () banked
  7762  003F8C  5104               	movf	___fttol@f1& (0+255),w,b
  7763  003F8E  0101               	movlb	1	; () banked
  7764  003F90  6F0E               	movwf	___fttol@lval& (0+255),b
  7765  003F92  0101               	movlb	1	; () banked
  7766  003F94  5105               	movf	(___fttol@f1+1)& (0+255),w,b
  7767  003F96  0101               	movlb	1	; () banked
  7768  003F98  6F0F               	movwf	(___fttol@lval+1)& (0+255),b
  7769  003F9A  0101               	movlb	1	; () banked
  7770  003F9C  5106               	movf	(___fttol@f1+2)& (0+255),w,b
  7771  003F9E  0101               	movlb	1	; () banked
  7772  003FA0  6F10               	movwf	(___fttol@lval+2)& (0+255),b
  7773  003FA2  0101               	movlb	1	; () banked
  7774  003FA4  6B11               	clrf	(___fttol@lval+3)& (0+255),b
  7775                           
  7776                           ; BSR set to: 1
  7777  003FA6  0E8E               	movlw	142
  7778  003FA8  0101               	movlb	1	; () banked
  7779  003FAA  5F12               	subwf	___fttol@exp1& (0+255),f,b
  7780                           
  7781                           ; BSR set to: 1
  7782  003FAC  0101               	movlb	1	; () banked
  7783  003FAE  AF12               	btfss	___fttol@exp1& (0+255),7,b
  7784  003FB0  D01A               	goto	l6282
  7785                           
  7786                           ; BSR set to: 1
  7787  003FB2  0101               	movlb	1	; () banked
  7788  003FB4  5112               	movf	___fttol@exp1& (0+255),w,b
  7789  003FB6  0A80               	xorlw	128
  7790  003FB8  0F8F               	addlw	143
  7791  003FBA  B0D8               	btfsc	status,0,c
  7792  003FBC  D00A               	goto	l6278
  7793                           
  7794                           ; BSR set to: 1
  7795  003FBE  0E00               	movlw	0
  7796  003FC0  0101               	movlb	1	; () banked
  7797  003FC2  6F04               	movwf	?___fttol& (0+255),b
  7798  003FC4  0E00               	movlw	0
  7799  003FC6  6F05               	movwf	(?___fttol+1)& (0+255),b
  7800  003FC8  0E00               	movlw	0
  7801  003FCA  6F06               	movwf	(?___fttol+2)& (0+255),b
  7802  003FCC  0E00               	movlw	0
  7803  003FCE  6F07               	movwf	(?___fttol+3)& (0+255),b
  7804                           
  7805                           ; BSR set to: 1
  7806  003FD0  0012               	return	
  7807  003FD2                     l6278:
  7808                           
  7809                           ; BSR set to: 1
  7810  003FD2  0101               	movlb	1	; () banked
  7811  003FD4  90D8               	bcf	status,0,c
  7812  003FD6  3311               	rrcf	(___fttol@lval+3)& (0+255),f,b
  7813  003FD8  3310               	rrcf	(___fttol@lval+2)& (0+255),f,b
  7814  003FDA  330F               	rrcf	(___fttol@lval+1)& (0+255),f,b
  7815  003FDC  330E               	rrcf	___fttol@lval& (0+255),f,b
  7816                           
  7817                           ; BSR set to: 1
  7818  003FDE  0101               	movlb	1	; () banked
  7819  003FE0  3F12               	incfsz	___fttol@exp1& (0+255),f,b
  7820  003FE2  D7F7               	goto	l6278
  7821                           
  7822                           ; BSR set to: 1
  7823  003FE4  D01B               	goto	l6292
  7824  003FE6                     l6282:
  7825                           
  7826                           ; BSR set to: 1
  7827  003FE6  0E17               	movlw	23
  7828  003FE8  0101               	movlb	1	; () banked
  7829  003FEA  6512               	cpfsgt	___fttol@exp1& (0+255),b
  7830  003FEC  D012               	goto	l6290
  7831                           
  7832                           ; BSR set to: 1
  7833  003FEE  0E00               	movlw	0
  7834  003FF0  0101               	movlb	1	; () banked
  7835  003FF2  6F04               	movwf	?___fttol& (0+255),b
  7836  003FF4  0E00               	movlw	0
  7837  003FF6  6F05               	movwf	(?___fttol+1)& (0+255),b
  7838  003FF8  0E00               	movlw	0
  7839  003FFA  6F06               	movwf	(?___fttol+2)& (0+255),b
  7840  003FFC  0E00               	movlw	0
  7841  003FFE  6F07               	movwf	(?___fttol+3)& (0+255),b
  7842                           
  7843                           ; BSR set to: 1
  7844  004000  0012               	return	
  7845  004002                     l6288:
  7846                           
  7847                           ; BSR set to: 1
  7848  004002  0101               	movlb	1	; () banked
  7849  004004  90D8               	bcf	status,0,c
  7850  004006  370E               	rlcf	___fttol@lval& (0+255),f,b
  7851  004008  370F               	rlcf	(___fttol@lval+1)& (0+255),f,b
  7852  00400A  3710               	rlcf	(___fttol@lval+2)& (0+255),f,b
  7853  00400C  3711               	rlcf	(___fttol@lval+3)& (0+255),f,b
  7854  00400E  0101               	movlb	1	; () banked
  7855  004010  0712               	decf	___fttol@exp1& (0+255),f,b
  7856  004012                     l6290:
  7857                           
  7858                           ; BSR set to: 1
  7859  004012  0101               	movlb	1	; () banked
  7860  004014  5112               	movf	___fttol@exp1& (0+255),w,b
  7861  004016  0101               	movlb	1	; () banked
  7862  004018  A4D8               	btfss	status,2,c
  7863  00401A  D7F3               	goto	l6288
  7864  00401C                     l6292:
  7865                           
  7866                           ; BSR set to: 1
  7867  00401C  0101               	movlb	1	; () banked
  7868  00401E  510D               	movf	___fttol@sign1& (0+255),w,b
  7869  004020  0101               	movlb	1	; () banked
  7870  004022  B4D8               	btfsc	status,2,c
  7871  004024  D009               	goto	l6296
  7872                           
  7873                           ; BSR set to: 1
  7874  004026  0101               	movlb	1	; () banked
  7875  004028  1F11               	comf	(___fttol@lval+3)& (0+255),f,b
  7876  00402A  1F10               	comf	(___fttol@lval+2)& (0+255),f,b
  7877  00402C  1F0F               	comf	(___fttol@lval+1)& (0+255),f,b
  7878  00402E  6D0E               	negf	___fttol@lval& (0+255),b
  7879  004030  0E00               	movlw	0
  7880  004032  230F               	addwfc	(___fttol@lval+1)& (0+255),f,b
  7881  004034  2310               	addwfc	(___fttol@lval+2)& (0+255),f,b
  7882  004036  2311               	addwfc	(___fttol@lval+3)& (0+255),f,b
  7883  004038                     l6296:
  7884                           
  7885                           ; BSR set to: 1
  7886  004038  C10E  F104         	movff	___fttol@lval,?___fttol
  7887  00403C  C10F  F105         	movff	___fttol@lval+1,?___fttol+1
  7888  004040  C110  F106         	movff	___fttol@lval+2,?___fttol+2
  7889  004044  C111  F107         	movff	___fttol@lval+3,?___fttol+3
  7890  004048  0012               	return	
  7891  00404A                     __end_of___fttol:
  7892                           	opt stack 0
  7893                           tosu	equ	0xFFF
  7894                           tosh	equ	0xFFE
  7895                           tosl	equ	0xFFD
  7896                           pclath	equ	0xFFA
  7897                           tblptru	equ	0xFF8
  7898                           tblptrh	equ	0xFF7
  7899                           tblptrl	equ	0xFF6
  7900                           tablat	equ	0xFF5
  7901                           prodh	equ	0xFF4
  7902                           prodl	equ	0xFF3
  7903                           intcon	equ	0xFF2
  7904                           postinc0	equ	0xFEE
  7905                           wreg	equ	0xFE8
  7906                           postdec1	equ	0xFE5
  7907                           fsr1l	equ	0xFE1
  7908                           indf2	equ	0xFDF
  7909                           postinc2	equ	0xFDE
  7910                           postdec2	equ	0xFDD
  7911                           fsr2h	equ	0xFDA
  7912                           fsr2l	equ	0xFD9
  7913                           status	equ	0xFD8
  7914                           
  7915 ;; *************** function ___ftsub *****************
  7916 ;; Defined at:
  7917 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  7918 ;; Parameters:    Size  Location     Type
  7919 ;;  f1              3   19[BANK1 ] float 
  7920 ;;  f2              3   22[BANK1 ] float 
  7921 ;; Auto vars:     Size  Location     Type
  7922 ;;		None
  7923 ;; Return value:  Size  Location     Type
  7924 ;;                  3   19[BANK1 ] float 
  7925 ;; Registers used:
  7926 ;;		wreg, status,2, status,0, cstack
  7927 ;; Tracked objects:
  7928 ;;		On entry : 0/0
  7929 ;;		On exit  : 0/0
  7930 ;;		Unchanged: 0/0
  7931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7932 ;;      Params:         0       0       6       0       0       0       0
  7933 ;;      Locals:         0       0       0       0       0       0       0
  7934 ;;      Temps:          0       0       0       0       0       0       0
  7935 ;;      Totals:         0       0       6       0       0       0       0
  7936 ;;Total ram usage:        6 bytes
  7937 ;; Hardware stack levels used:    1
  7938 ;; Hardware stack levels required when called:    9
  7939 ;; This function calls:
  7940 ;;		___ftadd
  7941 ;; This function is called by:
  7942 ;;		__doprnt
  7943 ;; This function uses a non-reentrant model
  7944 ;;
  7945                           
  7946                           	psect	text18
  7947  005040                     __ptext18:
  7948                           	opt stack 0
  7949  005040                     ___ftsub:
  7950                           	opt stack 19
  7951                           
  7952                           ; BSR set to: 1
  7953                           ;incstack = 0
  7954  005040  0101               	movlb	1	; () banked
  7955  005042  5116               	movf	___ftsub@f2& (0+255),w,b
  7956  005044  0101               	movlb	1	; () banked
  7957  005046  1117               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  7958  005048  0101               	movlb	1	; () banked
  7959  00504A  1118               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  7960  00504C  B4D8               	btfsc	status,2,c
  7961  00504E  D009               	goto	l6250
  7962                           
  7963                           ; BSR set to: 1
  7964  005050  0E00               	movlw	0
  7965  005052  0101               	movlb	1	; () banked
  7966  005054  1B16               	xorwf	___ftsub@f2& (0+255),f,b
  7967  005056  0E00               	movlw	0
  7968  005058  0101               	movlb	1	; () banked
  7969  00505A  1B17               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  7970  00505C  0E80               	movlw	128
  7971  00505E  0101               	movlb	1	; () banked
  7972  005060  1B18               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  7973  005062                     l6250:
  7974                           
  7975                           ; BSR set to: 1
  7976  005062  C113  F107         	movff	___ftsub@f1,___ftadd@f1
  7977  005066  C114  F108         	movff	___ftsub@f1+1,___ftadd@f1+1
  7978  00506A  C115  F109         	movff	___ftsub@f1+2,___ftadd@f1+2
  7979  00506E  C116  F10A         	movff	___ftsub@f2,___ftadd@f2
  7980  005072  C117  F10B         	movff	___ftsub@f2+1,___ftadd@f2+1
  7981  005076  C118  F10C         	movff	___ftsub@f2+2,___ftadd@f2+2
  7982  00507A  ECE9  F017         	call	___ftadd	;wreg free
  7983  00507E  C107  F113         	movff	?___ftadd,?___ftsub
  7984  005082  C108  F114         	movff	?___ftadd+1,?___ftsub+1
  7985  005086  C109  F115         	movff	?___ftadd+2,?___ftsub+2
  7986  00508A  0012               	return	
  7987  00508C                     __end_of___ftsub:
  7988                           	opt stack 0
  7989                           tosu	equ	0xFFF
  7990                           tosh	equ	0xFFE
  7991                           tosl	equ	0xFFD
  7992                           pclath	equ	0xFFA
  7993                           tblptru	equ	0xFF8
  7994                           tblptrh	equ	0xFF7
  7995                           tblptrl	equ	0xFF6
  7996                           tablat	equ	0xFF5
  7997                           prodh	equ	0xFF4
  7998                           prodl	equ	0xFF3
  7999                           intcon	equ	0xFF2
  8000                           postinc0	equ	0xFEE
  8001                           wreg	equ	0xFE8
  8002                           postdec1	equ	0xFE5
  8003                           fsr1l	equ	0xFE1
  8004                           indf2	equ	0xFDF
  8005                           postinc2	equ	0xFDE
  8006                           postdec2	equ	0xFDD
  8007                           fsr2h	equ	0xFDA
  8008                           fsr2l	equ	0xFD9
  8009                           status	equ	0xFD8
  8010                           
  8011 ;; *************** function ___ftadd *****************
  8012 ;; Defined at:
  8013 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  8014 ;; Parameters:    Size  Location     Type
  8015 ;;  f1              3    7[BANK1 ] float 
  8016 ;;  f2              3   10[BANK1 ] float 
  8017 ;; Auto vars:     Size  Location     Type
  8018 ;;  exp1            1   18[BANK1 ] unsigned char 
  8019 ;;  exp2            1   17[BANK1 ] unsigned char 
  8020 ;;  sign            1   16[BANK1 ] unsigned char 
  8021 ;; Return value:  Size  Location     Type
  8022 ;;                  3    7[BANK1 ] float 
  8023 ;; Registers used:
  8024 ;;		wreg, status,2, status,0, cstack
  8025 ;; Tracked objects:
  8026 ;;		On entry : 0/0
  8027 ;;		On exit  : 0/0
  8028 ;;		Unchanged: 0/0
  8029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8030 ;;      Params:         0       0       6       0       0       0       0
  8031 ;;      Locals:         0       0       3       0       0       0       0
  8032 ;;      Temps:          0       0       3       0       0       0       0
  8033 ;;      Totals:         0       0      12       0       0       0       0
  8034 ;;Total ram usage:       12 bytes
  8035 ;; Hardware stack levels used:    1
  8036 ;; Hardware stack levels required when called:    8
  8037 ;; This function calls:
  8038 ;;		___ftpack
  8039 ;; This function is called by:
  8040 ;;		__doprnt
  8041 ;;		___ftsub
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           	psect	text19
  8046  002FD2                     __ptext19:
  8047                           	opt stack 0
  8048  002FD2                     ___ftadd:
  8049                           	opt stack 19
  8050                           
  8051                           ;incstack = 0
  8052  002FD2  C109  F10D         	movff	___ftadd@f1+2,??___ftadd
  8053  002FD6  0101               	movlb	1	; () banked
  8054  002FD8  6B0E               	clrf	(??___ftadd+1)& (0+255),b
  8055  002FDA  6B0F               	clrf	(??___ftadd+2)& (0+255),b
  8056  002FDC  0101               	movlb	1	; () banked
  8057  002FDE  3508               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  8058  002FE0  0101               	movlb	1	; () banked
  8059  002FE2  370D               	rlcf	??___ftadd& (0+255),f,b
  8060  002FE4  E301               	bnc	u8451
  8061  002FE6  810E               	bsf	(??___ftadd+1)& (0+255),0,b
  8062  002FE8                     u8451:
  8063  002FE8  0101               	movlb	1	; () banked
  8064  002FEA  510D               	movf	??___ftadd& (0+255),w,b
  8065  002FEC  0101               	movlb	1	; () banked
  8066  002FEE  6F12               	movwf	___ftadd@exp1& (0+255),b
  8067  002FF0  C10C  F10D         	movff	___ftadd@f2+2,??___ftadd
  8068  002FF4  0101               	movlb	1	; () banked
  8069  002FF6  6B0E               	clrf	(??___ftadd+1)& (0+255),b
  8070  002FF8  6B0F               	clrf	(??___ftadd+2)& (0+255),b
  8071  002FFA  0101               	movlb	1	; () banked
  8072  002FFC  350B               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  8073  002FFE  0101               	movlb	1	; () banked
  8074  003000  370D               	rlcf	??___ftadd& (0+255),f,b
  8075  003002  E301               	bnc	u8461
  8076  003004  810E               	bsf	(??___ftadd+1)& (0+255),0,b
  8077  003006                     u8461:
  8078  003006  0101               	movlb	1	; () banked
  8079  003008  510D               	movf	??___ftadd& (0+255),w,b
  8080  00300A  0101               	movlb	1	; () banked
  8081  00300C  6F11               	movwf	___ftadd@exp2& (0+255),b
  8082                           
  8083                           ; BSR set to: 1
  8084  00300E  0101               	movlb	1	; () banked
  8085  003010  5112               	movf	___ftadd@exp1& (0+255),w,b
  8086  003012  0101               	movlb	1	; () banked
  8087  003014  B4D8               	btfsc	status,2,c
  8088  003016  D011               	goto	l790
  8089                           
  8090                           ; BSR set to: 1
  8091  003018  0101               	movlb	1	; () banked
  8092  00301A  5111               	movf	___ftadd@exp2& (0+255),w,b
  8093  00301C  0101               	movlb	1	; () banked
  8094  00301E  5D12               	subwf	___ftadd@exp1& (0+255),w,b
  8095  003020  B0D8               	btfsc	status,0,c
  8096  003022  D012               	goto	l5996
  8097                           
  8098                           ; BSR set to: 1
  8099  003024  0101               	movlb	1	; () banked
  8100  003026  5112               	movf	___ftadd@exp1& (0+255),w,b
  8101  003028  0800               	sublw	0
  8102  00302A  0101               	movlb	1	; () banked
  8103  00302C  2511               	addwf	___ftadd@exp2& (0+255),w,b
  8104  00302E  0101               	movlb	1	; () banked
  8105  003030  6F0D               	movwf	??___ftadd& (0+255),b
  8106  003032  0E18               	movlw	24
  8107  003034  0101               	movlb	1	; () banked
  8108  003036  650D               	cpfsgt	??___ftadd& (0+255),b
  8109  003038  D007               	goto	l5996
  8110  00303A                     l790:
  8111                           
  8112                           ; BSR set to: 1
  8113  00303A  C10A  F107         	movff	___ftadd@f2,?___ftadd
  8114  00303E  C10B  F108         	movff	___ftadd@f2+1,?___ftadd+1
  8115  003042  C10C  F109         	movff	___ftadd@f2+2,?___ftadd+2
  8116  003046  0012               	return	
  8117  003048                     l5996:
  8118                           
  8119                           ; BSR set to: 1
  8120  003048  0101               	movlb	1	; () banked
  8121  00304A  5111               	movf	___ftadd@exp2& (0+255),w,b
  8122  00304C  0101               	movlb	1	; () banked
  8123  00304E  B4D8               	btfsc	status,2,c
  8124  003050  D011               	goto	l794
  8125                           
  8126                           ; BSR set to: 1
  8127  003052  0101               	movlb	1	; () banked
  8128  003054  5112               	movf	___ftadd@exp1& (0+255),w,b
  8129  003056  0101               	movlb	1	; () banked
  8130  003058  5D11               	subwf	___ftadd@exp2& (0+255),w,b
  8131  00305A  B0D8               	btfsc	status,0,c
  8132  00305C  D012               	goto	l6002
  8133                           
  8134                           ; BSR set to: 1
  8135  00305E  0101               	movlb	1	; () banked
  8136  003060  5111               	movf	___ftadd@exp2& (0+255),w,b
  8137  003062  0800               	sublw	0
  8138  003064  0101               	movlb	1	; () banked
  8139  003066  2512               	addwf	___ftadd@exp1& (0+255),w,b
  8140  003068  0101               	movlb	1	; () banked
  8141  00306A  6F0D               	movwf	??___ftadd& (0+255),b
  8142  00306C  0E18               	movlw	24
  8143  00306E  0101               	movlb	1	; () banked
  8144  003070  650D               	cpfsgt	??___ftadd& (0+255),b
  8145  003072  D007               	goto	l6002
  8146  003074                     l794:
  8147                           
  8148                           ; BSR set to: 1
  8149  003074  C107  F107         	movff	___ftadd@f1,?___ftadd
  8150  003078  C108  F108         	movff	___ftadd@f1+1,?___ftadd+1
  8151  00307C  C109  F109         	movff	___ftadd@f1+2,?___ftadd+2
  8152  003080  0012               	return	
  8153  003082                     l6002:
  8154                           
  8155                           ; BSR set to: 1
  8156  003082  0E06               	movlw	6
  8157  003084  0101               	movlb	1	; () banked
  8158  003086  6F10               	movwf	___ftadd@sign& (0+255),b
  8159                           
  8160                           ; BSR set to: 1
  8161  003088  0101               	movlb	1	; () banked
  8162  00308A  AF09               	btfss	(___ftadd@f1+2)& (0+255),7,b
  8163  00308C  D002               	goto	l6008
  8164                           
  8165                           ; BSR set to: 1
  8166  00308E  0101               	movlb	1	; () banked
  8167  003090  8F10               	bsf	___ftadd@sign& (0+255),7,b
  8168  003092                     l6008:
  8169                           
  8170                           ; BSR set to: 1
  8171  003092  0101               	movlb	1	; () banked
  8172  003094  AF0C               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8173  003096  D002               	goto	l796
  8174                           
  8175                           ; BSR set to: 1
  8176  003098  0101               	movlb	1	; () banked
  8177  00309A  8D10               	bsf	___ftadd@sign& (0+255),6,b
  8178  00309C                     l796:
  8179                           
  8180                           ; BSR set to: 1
  8181  00309C  0101               	movlb	1	; () banked
  8182  00309E  8F08               	bsf	(___ftadd@f1+1)& (0+255),7,b
  8183                           
  8184                           ; BSR set to: 1
  8185  0030A0  0EFF               	movlw	255
  8186  0030A2  0101               	movlb	1	; () banked
  8187  0030A4  1707               	andwf	___ftadd@f1& (0+255),f,b
  8188  0030A6  0EFF               	movlw	255
  8189  0030A8  0101               	movlb	1	; () banked
  8190  0030AA  1708               	andwf	(___ftadd@f1+1)& (0+255),f,b
  8191  0030AC  0E00               	movlw	0
  8192  0030AE  0101               	movlb	1	; () banked
  8193  0030B0  1709               	andwf	(___ftadd@f1+2)& (0+255),f,b
  8194  0030B2  0101               	movlb	1	; () banked
  8195  0030B4  8F0B               	bsf	(___ftadd@f2+1)& (0+255),7,b
  8196                           
  8197                           ; BSR set to: 1
  8198  0030B6  0EFF               	movlw	255
  8199  0030B8  0101               	movlb	1	; () banked
  8200  0030BA  170A               	andwf	___ftadd@f2& (0+255),f,b
  8201  0030BC  0EFF               	movlw	255
  8202  0030BE  0101               	movlb	1	; () banked
  8203  0030C0  170B               	andwf	(___ftadd@f2+1)& (0+255),f,b
  8204  0030C2  0E00               	movlw	0
  8205  0030C4  0101               	movlb	1	; () banked
  8206  0030C6  170C               	andwf	(___ftadd@f2+2)& (0+255),f,b
  8207                           
  8208                           ; BSR set to: 1
  8209  0030C8  0101               	movlb	1	; () banked
  8210  0030CA  5111               	movf	___ftadd@exp2& (0+255),w,b
  8211  0030CC  0101               	movlb	1	; () banked
  8212  0030CE  5D12               	subwf	___ftadd@exp1& (0+255),w,b
  8213  0030D0  B0D8               	btfsc	status,0,c
  8214  0030D2  D025               	goto	l6028
  8215  0030D4                     l6018:
  8216                           
  8217                           ; BSR set to: 1
  8218  0030D4  0101               	movlb	1	; () banked
  8219  0030D6  90D8               	bcf	status,0,c
  8220  0030D8  370A               	rlcf	___ftadd@f2& (0+255),f,b
  8221  0030DA  370B               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  8222  0030DC  370C               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  8223  0030DE  0101               	movlb	1	; () banked
  8224  0030E0  0711               	decf	___ftadd@exp2& (0+255),f,b
  8225                           
  8226                           ; BSR set to: 1
  8227  0030E2  0101               	movlb	1	; () banked
  8228  0030E4  5112               	movf	___ftadd@exp1& (0+255),w,b
  8229  0030E6  0101               	movlb	1	; () banked
  8230  0030E8  1911               	xorwf	___ftadd@exp2& (0+255),w,b
  8231  0030EA  B4D8               	btfsc	status,2,c
  8232  0030EC  D011               	goto	l6026
  8233                           
  8234                           ; BSR set to: 1
  8235  0030EE  0101               	movlb	1	; () banked
  8236  0030F0  0710               	decf	___ftadd@sign& (0+255),f,b
  8237  0030F2  C110  F10D         	movff	___ftadd@sign,??___ftadd
  8238  0030F6  0E07               	movlw	7
  8239  0030F8  0101               	movlb	1	; () banked
  8240  0030FA  170D               	andwf	??___ftadd& (0+255),f,b
  8241  0030FC  B4D8               	btfsc	status,2,c
  8242  0030FE  D008               	goto	l6026
  8243  003100  D7E9               	goto	l6018
  8244  003102                     l6024:
  8245                           
  8246                           ; BSR set to: 1
  8247  003102  0101               	movlb	1	; () banked
  8248  003104  90D8               	bcf	status,0,c
  8249  003106  3309               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  8250  003108  3308               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  8251  00310A  3307               	rrcf	___ftadd@f1& (0+255),f,b
  8252  00310C  0101               	movlb	1	; () banked
  8253  00310E  2B12               	incf	___ftadd@exp1& (0+255),f,b
  8254  003110                     l6026:
  8255                           
  8256                           ; BSR set to: 1
  8257  003110  0101               	movlb	1	; () banked
  8258  003112  5111               	movf	___ftadd@exp2& (0+255),w,b
  8259  003114  0101               	movlb	1	; () banked
  8260  003116  1912               	xorwf	___ftadd@exp1& (0+255),w,b
  8261  003118  B4D8               	btfsc	status,2,c
  8262  00311A  D02B               	goto	l805
  8263  00311C  D7F2               	goto	l6024
  8264  00311E                     l6028:
  8265                           
  8266                           ; BSR set to: 1
  8267  00311E  0101               	movlb	1	; () banked
  8268  003120  5112               	movf	___ftadd@exp1& (0+255),w,b
  8269  003122  0101               	movlb	1	; () banked
  8270  003124  5D11               	subwf	___ftadd@exp2& (0+255),w,b
  8271  003126  B0D8               	btfsc	status,0,c
  8272  003128  D024               	goto	l805
  8273  00312A                     l6030:
  8274                           
  8275                           ; BSR set to: 1
  8276  00312A  0101               	movlb	1	; () banked
  8277  00312C  90D8               	bcf	status,0,c
  8278  00312E  3707               	rlcf	___ftadd@f1& (0+255),f,b
  8279  003130  3708               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  8280  003132  3709               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  8281  003134  0101               	movlb	1	; () banked
  8282  003136  0712               	decf	___ftadd@exp1& (0+255),f,b
  8283                           
  8284                           ; BSR set to: 1
  8285  003138  0101               	movlb	1	; () banked
  8286  00313A  5112               	movf	___ftadd@exp1& (0+255),w,b
  8287  00313C  0101               	movlb	1	; () banked
  8288  00313E  1911               	xorwf	___ftadd@exp2& (0+255),w,b
  8289  003140  B4D8               	btfsc	status,2,c
  8290  003142  D011               	goto	l6038
  8291                           
  8292                           ; BSR set to: 1
  8293  003144  0101               	movlb	1	; () banked
  8294  003146  0710               	decf	___ftadd@sign& (0+255),f,b
  8295  003148  C110  F10D         	movff	___ftadd@sign,??___ftadd
  8296  00314C  0E07               	movlw	7
  8297  00314E  0101               	movlb	1	; () banked
  8298  003150  170D               	andwf	??___ftadd& (0+255),f,b
  8299  003152  B4D8               	btfsc	status,2,c
  8300  003154  D008               	goto	l6038
  8301  003156  D7E9               	goto	l6030
  8302  003158                     l6036:
  8303                           
  8304                           ; BSR set to: 1
  8305  003158  0101               	movlb	1	; () banked
  8306  00315A  90D8               	bcf	status,0,c
  8307  00315C  330C               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  8308  00315E  330B               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  8309  003160  330A               	rrcf	___ftadd@f2& (0+255),f,b
  8310  003162  0101               	movlb	1	; () banked
  8311  003164  2B11               	incf	___ftadd@exp2& (0+255),f,b
  8312  003166                     l6038:
  8313                           
  8314                           ; BSR set to: 1
  8315  003166  0101               	movlb	1	; () banked
  8316  003168  5111               	movf	___ftadd@exp2& (0+255),w,b
  8317  00316A  0101               	movlb	1	; () banked
  8318  00316C  1912               	xorwf	___ftadd@exp1& (0+255),w,b
  8319  00316E  A4D8               	btfss	status,2,c
  8320  003170  D7F3               	goto	l6036
  8321  003172                     l805:
  8322                           
  8323                           ; BSR set to: 1
  8324  003172  0101               	movlb	1	; () banked
  8325  003174  AF10               	btfss	___ftadd@sign& (0+255),7,b
  8326  003176  D012               	goto	l814
  8327                           
  8328                           ; BSR set to: 1
  8329  003178  0EFF               	movlw	255
  8330  00317A  0101               	movlb	1	; () banked
  8331  00317C  1B07               	xorwf	___ftadd@f1& (0+255),f,b
  8332  00317E  0EFF               	movlw	255
  8333  003180  0101               	movlb	1	; () banked
  8334  003182  1B08               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  8335  003184  0EFF               	movlw	255
  8336  003186  0101               	movlb	1	; () banked
  8337  003188  1B09               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  8338  00318A  0E01               	movlw	1
  8339  00318C  0101               	movlb	1	; () banked
  8340  00318E  2707               	addwf	___ftadd@f1& (0+255),f,b
  8341  003190  0E00               	movlw	0
  8342  003192  0101               	movlb	1	; () banked
  8343  003194  2308               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  8344  003196  0E00               	movlw	0
  8345  003198  0101               	movlb	1	; () banked
  8346  00319A  2309               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  8347  00319C                     l814:
  8348                           
  8349                           ; BSR set to: 1
  8350  00319C  0101               	movlb	1	; () banked
  8351  00319E  AD10               	btfss	___ftadd@sign& (0+255),6,b
  8352  0031A0  D012               	goto	l6044
  8353                           
  8354                           ; BSR set to: 1
  8355  0031A2  0EFF               	movlw	255
  8356  0031A4  0101               	movlb	1	; () banked
  8357  0031A6  1B0A               	xorwf	___ftadd@f2& (0+255),f,b
  8358  0031A8  0EFF               	movlw	255
  8359  0031AA  0101               	movlb	1	; () banked
  8360  0031AC  1B0B               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8361  0031AE  0EFF               	movlw	255
  8362  0031B0  0101               	movlb	1	; () banked
  8363  0031B2  1B0C               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8364  0031B4  0E01               	movlw	1
  8365  0031B6  0101               	movlb	1	; () banked
  8366  0031B8  270A               	addwf	___ftadd@f2& (0+255),f,b
  8367  0031BA  0E00               	movlw	0
  8368  0031BC  0101               	movlb	1	; () banked
  8369  0031BE  230B               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8370  0031C0  0E00               	movlw	0
  8371  0031C2  0101               	movlb	1	; () banked
  8372  0031C4  230C               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8373  0031C6                     l6044:
  8374                           
  8375                           ; BSR set to: 1
  8376  0031C6  0E00               	movlw	0
  8377  0031C8  0101               	movlb	1	; () banked
  8378  0031CA  6F10               	movwf	___ftadd@sign& (0+255),b
  8379                           
  8380                           ; BSR set to: 1
  8381  0031CC  0101               	movlb	1	; () banked
  8382  0031CE  5107               	movf	___ftadd@f1& (0+255),w,b
  8383  0031D0  0101               	movlb	1	; () banked
  8384  0031D2  270A               	addwf	___ftadd@f2& (0+255),f,b
  8385  0031D4  0101               	movlb	1	; () banked
  8386  0031D6  5108               	movf	(___ftadd@f1+1)& (0+255),w,b
  8387  0031D8  0101               	movlb	1	; () banked
  8388  0031DA  230B               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8389  0031DC  0101               	movlb	1	; () banked
  8390  0031DE  5109               	movf	(___ftadd@f1+2)& (0+255),w,b
  8391  0031E0  0101               	movlb	1	; () banked
  8392  0031E2  230C               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8393                           
  8394                           ; BSR set to: 1
  8395  0031E4  0101               	movlb	1	; () banked
  8396  0031E6  AF0C               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8397  0031E8  D015               	goto	l6054
  8398                           
  8399                           ; BSR set to: 1
  8400  0031EA  0EFF               	movlw	255
  8401  0031EC  0101               	movlb	1	; () banked
  8402  0031EE  1B0A               	xorwf	___ftadd@f2& (0+255),f,b
  8403  0031F0  0EFF               	movlw	255
  8404  0031F2  0101               	movlb	1	; () banked
  8405  0031F4  1B0B               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8406  0031F6  0EFF               	movlw	255
  8407  0031F8  0101               	movlb	1	; () banked
  8408  0031FA  1B0C               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8409  0031FC  0E01               	movlw	1
  8410  0031FE  0101               	movlb	1	; () banked
  8411  003200  270A               	addwf	___ftadd@f2& (0+255),f,b
  8412  003202  0E00               	movlw	0
  8413  003204  0101               	movlb	1	; () banked
  8414  003206  230B               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8415  003208  0E00               	movlw	0
  8416  00320A  0101               	movlb	1	; () banked
  8417  00320C  230C               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8418                           
  8419                           ; BSR set to: 1
  8420  00320E  0E01               	movlw	1
  8421  003210  0101               	movlb	1	; () banked
  8422  003212  6F10               	movwf	___ftadd@sign& (0+255),b
  8423  003214                     l6054:
  8424                           
  8425                           ; BSR set to: 1
  8426  003214  C10A  F090         	movff	___ftadd@f2,___ftpack@arg
  8427  003218  C10B  F091         	movff	___ftadd@f2+1,___ftpack@arg+1
  8428  00321C  C10C  F092         	movff	___ftadd@f2+2,___ftpack@arg+2
  8429  003220  C112  F093         	movff	___ftadd@exp1,___ftpack@exp
  8430  003224  C110  F094         	movff	___ftadd@sign,___ftpack@sign
  8431  003228  ECE3  F021         	call	___ftpack	;wreg free
  8432  00322C  C090  F107         	movff	?___ftpack,?___ftadd
  8433  003230  C091  F108         	movff	?___ftpack+1,?___ftadd+1
  8434  003234  C092  F109         	movff	?___ftpack+2,?___ftadd+2
  8435  003238  0012               	return	
  8436  00323A                     __end_of___ftadd:
  8437                           	opt stack 0
  8438                           tosu	equ	0xFFF
  8439                           tosh	equ	0xFFE
  8440                           tosl	equ	0xFFD
  8441                           pclath	equ	0xFFA
  8442                           tblptru	equ	0xFF8
  8443                           tblptrh	equ	0xFF7
  8444                           tblptrl	equ	0xFF6
  8445                           tablat	equ	0xFF5
  8446                           prodh	equ	0xFF4
  8447                           prodl	equ	0xFF3
  8448                           intcon	equ	0xFF2
  8449                           postinc0	equ	0xFEE
  8450                           wreg	equ	0xFE8
  8451                           postdec1	equ	0xFE5
  8452                           fsr1l	equ	0xFE1
  8453                           indf2	equ	0xFDF
  8454                           postinc2	equ	0xFDE
  8455                           postdec2	equ	0xFDD
  8456                           fsr2h	equ	0xFDA
  8457                           fsr2l	equ	0xFD9
  8458                           status	equ	0xFD8
  8459                           
  8460 ;; *************** function ___ftneg *****************
  8461 ;; Defined at:
  8462 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
  8463 ;; Parameters:    Size  Location     Type
  8464 ;;  f1              3   48[BANK0 ] float 
  8465 ;; Auto vars:     Size  Location     Type
  8466 ;;		None
  8467 ;; Return value:  Size  Location     Type
  8468 ;;                  3   48[BANK0 ] float 
  8469 ;; Registers used:
  8470 ;;		wreg, status,2, status,0
  8471 ;; Tracked objects:
  8472 ;;		On entry : 0/0
  8473 ;;		On exit  : 0/0
  8474 ;;		Unchanged: 0/0
  8475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8476 ;;      Params:         0       3       0       0       0       0       0
  8477 ;;      Locals:         0       0       0       0       0       0       0
  8478 ;;      Temps:          0       0       0       0       0       0       0
  8479 ;;      Totals:         0       3       0       0       0       0       0
  8480 ;;Total ram usage:        3 bytes
  8481 ;; Hardware stack levels used:    1
  8482 ;; Hardware stack levels required when called:    7
  8483 ;; This function calls:
  8484 ;;		Nothing
  8485 ;; This function is called by:
  8486 ;;		__doprnt
  8487 ;; This function uses a non-reentrant model
  8488 ;;
  8489                           
  8490                           	psect	text20
  8491  005308                     __ptext20:
  8492                           	opt stack 0
  8493  005308                     ___ftneg:
  8494                           	opt stack 21
  8495                           
  8496                           ;incstack = 0
  8497  005308  0100               	movlb	0	; () banked
  8498  00530A  5190               	movf	___ftneg@f1& (0+255),w,b
  8499  00530C  0100               	movlb	0	; () banked
  8500  00530E  1191               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  8501  005310  0100               	movlb	0	; () banked
  8502  005312  1192               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  8503  005314  B4D8               	btfsc	status,2,c
  8504  005316  D009               	goto	l864
  8505                           
  8506                           ; BSR set to: 0
  8507  005318  0E00               	movlw	0
  8508  00531A  0100               	movlb	0	; () banked
  8509  00531C  1B90               	xorwf	___ftneg@f1& (0+255),f,b
  8510  00531E  0E00               	movlw	0
  8511  005320  0100               	movlb	0	; () banked
  8512  005322  1B91               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  8513  005324  0E80               	movlw	128
  8514  005326  0100               	movlb	0	; () banked
  8515  005328  1B92               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  8516  00532A                     l864:
  8517                           
  8518                           ; BSR set to: 0
  8519  00532A  C090  F090         	movff	___ftneg@f1,?___ftneg
  8520  00532E  C091  F091         	movff	___ftneg@f1+1,?___ftneg+1
  8521  005332  C092  F092         	movff	___ftneg@f1+2,?___ftneg+2
  8522                           
  8523                           ; BSR set to: 0
  8524  005336  0012               	return		;funcret
  8525  005338                     __end_of___ftneg:
  8526                           	opt stack 0
  8527                           tosu	equ	0xFFF
  8528                           tosh	equ	0xFFE
  8529                           tosl	equ	0xFFD
  8530                           pclath	equ	0xFFA
  8531                           tblptru	equ	0xFF8
  8532                           tblptrh	equ	0xFF7
  8533                           tblptrl	equ	0xFF6
  8534                           tablat	equ	0xFF5
  8535                           prodh	equ	0xFF4
  8536                           prodl	equ	0xFF3
  8537                           intcon	equ	0xFF2
  8538                           postinc0	equ	0xFEE
  8539                           wreg	equ	0xFE8
  8540                           postdec1	equ	0xFE5
  8541                           fsr1l	equ	0xFE1
  8542                           indf2	equ	0xFDF
  8543                           postinc2	equ	0xFDE
  8544                           postdec2	equ	0xFDD
  8545                           fsr2h	equ	0xFDA
  8546                           fsr2l	equ	0xFD9
  8547                           status	equ	0xFD8
  8548                           
  8549 ;; *************** function ___ftge *****************
  8550 ;; Defined at:
  8551 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  8552 ;; Parameters:    Size  Location     Type
  8553 ;;  ff1             3   48[BANK0 ] float 
  8554 ;;  ff2             3   51[BANK0 ] float 
  8555 ;; Auto vars:     Size  Location     Type
  8556 ;;		None
  8557 ;; Return value:  Size  Location     Type
  8558 ;;		None               void
  8559 ;; Registers used:
  8560 ;;		wreg, status,2, status,0
  8561 ;; Tracked objects:
  8562 ;;		On entry : 0/0
  8563 ;;		On exit  : 0/0
  8564 ;;		Unchanged: 0/0
  8565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8566 ;;      Params:         0       6       0       0       0       0       0
  8567 ;;      Locals:         0       0       0       0       0       0       0
  8568 ;;      Temps:          0       3       0       0       0       0       0
  8569 ;;      Totals:         0       9       0       0       0       0       0
  8570 ;;Total ram usage:        9 bytes
  8571 ;; Hardware stack levels used:    1
  8572 ;; Hardware stack levels required when called:    7
  8573 ;; This function calls:
  8574 ;;		Nothing
  8575 ;; This function is called by:
  8576 ;;		_main
  8577 ;;		__doprnt
  8578 ;; This function uses a non-reentrant model
  8579 ;;
  8580                           
  8581                           	psect	text21
  8582  0047A0                     __ptext21:
  8583                           	opt stack 0
  8584  0047A0                     ___ftge:
  8585                           	opt stack 21
  8586                           
  8587                           ; BSR set to: 0
  8588                           ;incstack = 0
  8589  0047A0  0100               	movlb	0	; () banked
  8590  0047A2  AF92               	btfss	(___ftge@ff1+2)& (0+255),7,b
  8591  0047A4  D01D               	goto	l4644
  8592                           
  8593                           ; BSR set to: 0
  8594  0047A6  C090  F096         	movff	___ftge@ff1,??___ftge
  8595  0047AA  C091  F097         	movff	___ftge@ff1+1,??___ftge+1
  8596  0047AE  C092  F098         	movff	___ftge@ff1+2,??___ftge+2
  8597  0047B2  0100               	movlb	0	; () banked
  8598  0047B4  1F96               	comf	??___ftge& (0+255),f,b
  8599  0047B6  1F97               	comf	(??___ftge+1)& (0+255),f,b
  8600  0047B8  1F98               	comf	(??___ftge+2)& (0+255),f,b
  8601  0047BA  2B96               	incf	??___ftge& (0+255),f,b
  8602  0047BC  0E00               	movlw	0
  8603  0047BE  2397               	addwfc	(??___ftge+1)& (0+255),f,b
  8604  0047C0  2398               	addwfc	(??___ftge+2)& (0+255),f,b
  8605  0047C2  0E00               	movlw	0
  8606  0047C4  0100               	movlb	0	; () banked
  8607  0047C6  2596               	addwf	??___ftge& (0+255),w,b
  8608  0047C8  0100               	movlb	0	; () banked
  8609  0047CA  6F90               	movwf	___ftge@ff1& (0+255),b
  8610  0047CC  0E00               	movlw	0
  8611  0047CE  0100               	movlb	0	; () banked
  8612  0047D0  2197               	addwfc	(??___ftge+1)& (0+255),w,b
  8613  0047D2  0100               	movlb	0	; () banked
  8614  0047D4  6F91               	movwf	(___ftge@ff1+1)& (0+255),b
  8615  0047D6  0E80               	movlw	128
  8616  0047D8  0100               	movlb	0	; () banked
  8617  0047DA  2198               	addwfc	(??___ftge+2)& (0+255),w,b
  8618  0047DC  0100               	movlb	0	; () banked
  8619  0047DE  6F92               	movwf	(___ftge@ff1+2)& (0+255),b
  8620  0047E0                     l4644:
  8621                           
  8622                           ; BSR set to: 0
  8623  0047E0  0100               	movlb	0	; () banked
  8624  0047E2  AF95               	btfss	(___ftge@ff2+2)& (0+255),7,b
  8625  0047E4  D01D               	goto	l4648
  8626                           
  8627                           ; BSR set to: 0
  8628  0047E6  C093  F096         	movff	___ftge@ff2,??___ftge
  8629  0047EA  C094  F097         	movff	___ftge@ff2+1,??___ftge+1
  8630  0047EE  C095  F098         	movff	___ftge@ff2+2,??___ftge+2
  8631  0047F2  0100               	movlb	0	; () banked
  8632  0047F4  1F96               	comf	??___ftge& (0+255),f,b
  8633  0047F6  1F97               	comf	(??___ftge+1)& (0+255),f,b
  8634  0047F8  1F98               	comf	(??___ftge+2)& (0+255),f,b
  8635  0047FA  2B96               	incf	??___ftge& (0+255),f,b
  8636  0047FC  0E00               	movlw	0
  8637  0047FE  2397               	addwfc	(??___ftge+1)& (0+255),f,b
  8638  004800  2398               	addwfc	(??___ftge+2)& (0+255),f,b
  8639  004802  0E00               	movlw	0
  8640  004804  0100               	movlb	0	; () banked
  8641  004806  2596               	addwf	??___ftge& (0+255),w,b
  8642  004808  0100               	movlb	0	; () banked
  8643  00480A  6F93               	movwf	___ftge@ff2& (0+255),b
  8644  00480C  0E00               	movlw	0
  8645  00480E  0100               	movlb	0	; () banked
  8646  004810  2197               	addwfc	(??___ftge+1)& (0+255),w,b
  8647  004812  0100               	movlb	0	; () banked
  8648  004814  6F94               	movwf	(___ftge@ff2+1)& (0+255),b
  8649  004816  0E80               	movlw	128
  8650  004818  0100               	movlb	0	; () banked
  8651  00481A  2198               	addwfc	(??___ftge+2)& (0+255),w,b
  8652  00481C  0100               	movlb	0	; () banked
  8653  00481E  6F95               	movwf	(___ftge@ff2+2)& (0+255),b
  8654  004820                     l4648:
  8655                           
  8656                           ; BSR set to: 0
  8657  004820  0E00               	movlw	0
  8658  004822  0100               	movlb	0	; () banked
  8659  004824  1B90               	xorwf	___ftge@ff1& (0+255),f,b
  8660  004826  0E00               	movlw	0
  8661  004828  0100               	movlb	0	; () banked
  8662  00482A  1B91               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  8663  00482C  0E80               	movlw	128
  8664  00482E  0100               	movlb	0	; () banked
  8665  004830  1B92               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  8666                           
  8667                           ; BSR set to: 0
  8668  004832  0E00               	movlw	0
  8669  004834  0100               	movlb	0	; () banked
  8670  004836  1B93               	xorwf	___ftge@ff2& (0+255),f,b
  8671  004838  0E00               	movlw	0
  8672  00483A  0100               	movlb	0	; () banked
  8673  00483C  1B94               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  8674  00483E  0E80               	movlw	128
  8675  004840  0100               	movlb	0	; () banked
  8676  004842  1B95               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  8677  004844  0100               	movlb	0	; () banked
  8678  004846  5193               	movf	___ftge@ff2& (0+255),w,b
  8679  004848  0100               	movlb	0	; () banked
  8680  00484A  5D90               	subwf	___ftge@ff1& (0+255),w,b
  8681  00484C  0100               	movlb	0	; () banked
  8682  00484E  5194               	movf	(___ftge@ff2+1)& (0+255),w,b
  8683  004850  0100               	movlb	0	; () banked
  8684  004852  5991               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  8685  004854  0100               	movlb	0	; () banked
  8686  004856  5195               	movf	(___ftge@ff2+2)& (0+255),w,b
  8687  004858  0100               	movlb	0	; () banked
  8688  00485A  5992               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  8689  00485C  B0D8               	btfsc	status,0,c
  8690  00485E  D002               	goto	l4654
  8691                           
  8692                           ; BSR set to: 0
  8693  004860  90D8               	bcf	status,0,c
  8694  004862  0012               	return	
  8695  004864                     l4654:
  8696                           
  8697                           ; BSR set to: 0
  8698  004864  80D8               	bsf	status,0,c
  8699                           
  8700                           ; BSR set to: 0
  8701  004866  0012               	return	
  8702  004868                     __end_of___ftge:
  8703                           	opt stack 0
  8704                           tosu	equ	0xFFF
  8705                           tosh	equ	0xFFE
  8706                           tosl	equ	0xFFD
  8707                           pclath	equ	0xFFA
  8708                           tblptru	equ	0xFF8
  8709                           tblptrh	equ	0xFF7
  8710                           tblptrl	equ	0xFF6
  8711                           tablat	equ	0xFF5
  8712                           prodh	equ	0xFF4
  8713                           prodl	equ	0xFF3
  8714                           intcon	equ	0xFF2
  8715                           postinc0	equ	0xFEE
  8716                           wreg	equ	0xFE8
  8717                           postdec1	equ	0xFE5
  8718                           fsr1l	equ	0xFE1
  8719                           indf2	equ	0xFDF
  8720                           postinc2	equ	0xFDE
  8721                           postdec2	equ	0xFDD
  8722                           fsr2h	equ	0xFDA
  8723                           fsr2l	equ	0xFD9
  8724                           status	equ	0xFD8
  8725                           
  8726 ;; *************** function _lcd_sendString *****************
  8727 ;; Defined at:
  8728 ;;		line 74 in file "lcd.c"
  8729 ;; Parameters:    Size  Location     Type
  8730 ;;  a               2   52[BANK0 ] PTR const unsigned char 
  8731 ;;		 -> ftoa@buf(17), lcd_sendUInt@displayString(10), lcd_sendInt@displayString(10), main@cap_string(16), 
  8732 ;; Auto vars:     Size  Location     Type
  8733 ;;  i               2   54[BANK0 ] int 
  8734 ;; Return value:  Size  Location     Type
  8735 ;;                  1    wreg      void 
  8736 ;; Registers used:
  8737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8738 ;; Tracked objects:
  8739 ;;		On entry : 0/0
  8740 ;;		On exit  : 0/0
  8741 ;;		Unchanged: 0/0
  8742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8743 ;;      Params:         0       2       0       0       0       0       0
  8744 ;;      Locals:         0       2       0       0       0       0       0
  8745 ;;      Temps:          0       0       0       0       0       0       0
  8746 ;;      Totals:         0       4       0       0       0       0       0
  8747 ;;Total ram usage:        4 bytes
  8748 ;; Hardware stack levels used:    1
  8749 ;; Hardware stack levels required when called:    9
  8750 ;; This function calls:
  8751 ;;		_lcd_sendChar
  8752 ;; This function is called by:
  8753 ;;		_main
  8754 ;;		_lcd_sendStringToPos
  8755 ;;		_lcd_sendInt
  8756 ;;		_lcd_sendFloat
  8757 ;;		_lcd_sendUInt
  8758 ;; This function uses a non-reentrant model
  8759 ;;
  8760                           
  8761                           	psect	text22
  8762  00508C                     __ptext22:
  8763                           	opt stack 0
  8764  00508C                     _lcd_sendString:
  8765                           	opt stack 21
  8766                           
  8767                           ;lcd.c: 76: int i;
  8768                           ;lcd.c: 77: for(i=0;a[i]!='\0';i++)
  8769                           
  8770                           ; BSR set to: 0
  8771                           ;incstack = 0
  8772  00508C  0E00               	movlw	0
  8773  00508E  0100               	movlb	0	; () banked
  8774  005090  6F97               	movwf	(lcd_sendString@i+1)& (0+255),b
  8775  005092  0E00               	movlw	0
  8776  005094  6F96               	movwf	lcd_sendString@i& (0+255),b
  8777  005096  D010               	goto	l5806
  8778  005098                     l5802:
  8779                           
  8780                           ; BSR set to: 0
  8781                           ;lcd.c: 78: lcd_sendChar(a[i]);
  8782  005098  0100               	movlb	0	; () banked
  8783  00509A  5196               	movf	lcd_sendString@i& (0+255),w,b
  8784  00509C  0100               	movlb	0	; () banked
  8785  00509E  2594               	addwf	lcd_sendString@a& (0+255),w,b
  8786  0050A0  6ED9               	movwf	fsr2l,c
  8787  0050A2  0100               	movlb	0	; () banked
  8788  0050A4  5197               	movf	(lcd_sendString@i+1)& (0+255),w,b
  8789  0050A6  0100               	movlb	0	; () banked
  8790  0050A8  2195               	addwfc	(lcd_sendString@a+1)& (0+255),w,b
  8791  0050AA  6EDA               	movwf	fsr2h,c
  8792  0050AC  50DF               	movf	indf2,w,c
  8793  0050AE  EC6A  F028         	call	_lcd_sendChar
  8794  0050B2  0100               	movlb	0	; () banked
  8795  0050B4  4B96               	infsnz	lcd_sendString@i& (0+255),f,b
  8796  0050B6  2B97               	incf	(lcd_sendString@i+1)& (0+255),f,b
  8797  0050B8                     l5806:
  8798                           
  8799                           ; BSR set to: 0
  8800  0050B8  0100               	movlb	0	; () banked
  8801  0050BA  5196               	movf	lcd_sendString@i& (0+255),w,b
  8802  0050BC  0100               	movlb	0	; () banked
  8803  0050BE  2594               	addwf	lcd_sendString@a& (0+255),w,b
  8804  0050C0  6ED9               	movwf	fsr2l,c
  8805  0050C2  0100               	movlb	0	; () banked
  8806  0050C4  5197               	movf	(lcd_sendString@i+1)& (0+255),w,b
  8807  0050C6  0100               	movlb	0	; () banked
  8808  0050C8  2195               	addwfc	(lcd_sendString@a+1)& (0+255),w,b
  8809  0050CA  6EDA               	movwf	fsr2h,c
  8810  0050CC  50DF               	movf	indf2,w,c
  8811  0050CE  B4D8               	btfsc	status,2,c
  8812  0050D0  0012               	return	
  8813  0050D2  D7E2               	goto	l5802
  8814  0050D4                     __end_of_lcd_sendString:
  8815                           	opt stack 0
  8816                           tosu	equ	0xFFF
  8817                           tosh	equ	0xFFE
  8818                           tosl	equ	0xFFD
  8819                           pclath	equ	0xFFA
  8820                           tblptru	equ	0xFF8
  8821                           tblptrh	equ	0xFF7
  8822                           tblptrl	equ	0xFF6
  8823                           tablat	equ	0xFF5
  8824                           prodh	equ	0xFF4
  8825                           prodl	equ	0xFF3
  8826                           intcon	equ	0xFF2
  8827                           postinc0	equ	0xFEE
  8828                           wreg	equ	0xFE8
  8829                           postdec1	equ	0xFE5
  8830                           fsr1l	equ	0xFE1
  8831                           indf2	equ	0xFDF
  8832                           postinc2	equ	0xFDE
  8833                           postdec2	equ	0xFDD
  8834                           fsr2h	equ	0xFDA
  8835                           fsr2l	equ	0xFD9
  8836                           status	equ	0xFD8
  8837                           
  8838 ;; *************** function _lcd_sendChar *****************
  8839 ;; Defined at:
  8840 ;;		line 58 in file "lcd.c"
  8841 ;; Parameters:    Size  Location     Type
  8842 ;;  a               1    wreg     const unsigned char 
  8843 ;; Auto vars:     Size  Location     Type
  8844 ;;  a               1   51[BANK0 ] const unsigned char 
  8845 ;;  y               1   50[BANK0 ] unsigned char 
  8846 ;;  temp            1   49[BANK0 ] unsigned char 
  8847 ;; Return value:  Size  Location     Type
  8848 ;;                  1    wreg      void 
  8849 ;; Registers used:
  8850 ;;		wreg, status,2, status,0, cstack
  8851 ;; Tracked objects:
  8852 ;;		On entry : 0/0
  8853 ;;		On exit  : 0/0
  8854 ;;		Unchanged: 0/0
  8855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8856 ;;      Params:         0       0       0       0       0       0       0
  8857 ;;      Locals:         0       3       0       0       0       0       0
  8858 ;;      Temps:          0       0       0       0       0       0       0
  8859 ;;      Totals:         0       3       0       0       0       0       0
  8860 ;;Total ram usage:        3 bytes
  8861 ;; Hardware stack levels used:    1
  8862 ;; Hardware stack levels required when called:    8
  8863 ;; This function calls:
  8864 ;;		__lcd_Port
  8865 ;; This function is called by:
  8866 ;;		_lcd_sendString
  8867 ;; This function uses a non-reentrant model
  8868 ;;
  8869                           
  8870                           	psect	text23
  8871  0050D4                     __ptext23:
  8872                           	opt stack 0
  8873  0050D4                     _lcd_sendChar:
  8874                           	opt stack 21
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;incstack = 0
  8878                           ;lcd_sendChar@a stored from wreg
  8879  0050D4  0100               	movlb	0	; () banked
  8880  0050D6  6F93               	movwf	lcd_sendChar@a& (0+255),b
  8881                           
  8882                           ;lcd.c: 60: char temp,y;
  8883                           ;lcd.c: 61: temp = a&0x0F;
  8884  0050D8  0100               	movlb	0	; () banked
  8885  0050DA  5193               	movf	lcd_sendChar@a& (0+255),w,b
  8886  0050DC  0B0F               	andlw	15
  8887  0050DE  0100               	movlb	0	; () banked
  8888  0050E0  6F91               	movwf	lcd_sendChar@temp& (0+255),b
  8889                           
  8890                           ;lcd.c: 62: y = a&0xF0;
  8891  0050E2  0100               	movlb	0	; () banked
  8892  0050E4  5193               	movf	lcd_sendChar@a& (0+255),w,b
  8893  0050E6  0BF0               	andlw	240
  8894  0050E8  0100               	movlb	0	; () banked
  8895  0050EA  6F92               	movwf	lcd_sendChar@y& (0+255),b
  8896                           
  8897                           ; BSR set to: 0
  8898                           ;lcd.c: 63: LATAbits.LA5 = 1;
  8899  0050EC  8A89               	bsf	3977,5,c	;volatile
  8900                           
  8901                           ; BSR set to: 0
  8902                           ;lcd.c: 64: _lcd_Port(y>>4);
  8903  0050EE  0100               	movlb	0	; () banked
  8904  0050F0  3992               	swapf	lcd_sendChar@y& (0+255),w,b
  8905  0050F2  0B0F               	andlw	15
  8906  0050F4  EC4E  F029         	call	__lcd_Port
  8907                           
  8908                           ;lcd.c: 65: LATAbits.LA4 = 1;
  8909  0050F8  8889               	bsf	3977,4,c	;volatile
  8910                           
  8911                           ;lcd.c: 66: _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  8912  0050FA  0E35               	movlw	53
  8913  0050FC                     u17027:
  8914  0050FC  2EE8               	decfsz	wreg,f,c
  8915  0050FE  D7FE               	goto	u17027
  8916  005100  F000               	nop	
  8917                           
  8918                           ;lcd.c: 67: LATAbits.LA4 = 0;
  8919  005102  9889               	bcf	3977,4,c	;volatile
  8920                           
  8921                           ;lcd.c: 68: _lcd_Port(temp);
  8922  005104  0100               	movlb	0	; () banked
  8923  005106  5191               	movf	lcd_sendChar@temp& (0+255),w,b
  8924  005108  EC4E  F029         	call	__lcd_Port
  8925                           
  8926                           ;lcd.c: 69: LATAbits.LA4 = 1;
  8927  00510C  8889               	bsf	3977,4,c	;volatile
  8928                           
  8929                           ;lcd.c: 70: _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  8930  00510E  0E35               	movlw	53
  8931  005110                     u17037:
  8932  005110  2EE8               	decfsz	wreg,f,c
  8933  005112  D7FE               	goto	u17037
  8934  005114  F000               	nop	
  8935                           
  8936                           ;lcd.c: 71: LATAbits.LA4 = 0;
  8937  005116  9889               	bcf	3977,4,c	;volatile
  8938  005118  0012               	return		;funcret
  8939  00511A                     __end_of_lcd_sendChar:
  8940                           	opt stack 0
  8941                           tosu	equ	0xFFF
  8942                           tosh	equ	0xFFE
  8943                           tosl	equ	0xFFD
  8944                           pclath	equ	0xFFA
  8945                           tblptru	equ	0xFF8
  8946                           tblptrh	equ	0xFF7
  8947                           tblptrl	equ	0xFF6
  8948                           tablat	equ	0xFF5
  8949                           prodh	equ	0xFF4
  8950                           prodl	equ	0xFF3
  8951                           intcon	equ	0xFF2
  8952                           postinc0	equ	0xFEE
  8953                           wreg	equ	0xFE8
  8954                           postdec1	equ	0xFE5
  8955                           fsr1l	equ	0xFE1
  8956                           indf2	equ	0xFDF
  8957                           postinc2	equ	0xFDE
  8958                           postdec2	equ	0xFDD
  8959                           fsr2h	equ	0xFDA
  8960                           fsr2l	equ	0xFD9
  8961                           status	equ	0xFD8
  8962                           
  8963 ;; *************** function _lcd_init *****************
  8964 ;; Defined at:
  8965 ;;		line 39 in file "lcd.c"
  8966 ;; Parameters:    Size  Location     Type
  8967 ;;		None
  8968 ;; Auto vars:     Size  Location     Type
  8969 ;;		None
  8970 ;; Return value:  Size  Location     Type
  8971 ;;                  1    wreg      void 
  8972 ;; Registers used:
  8973 ;;		wreg, status,2, cstack
  8974 ;; Tracked objects:
  8975 ;;		On entry : 0/0
  8976 ;;		On exit  : 0/0
  8977 ;;		Unchanged: 0/0
  8978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8979 ;;      Params:         0       0       0       0       0       0       0
  8980 ;;      Locals:         0       0       0       0       0       0       0
  8981 ;;      Temps:          0       1       0       0       0       0       0
  8982 ;;      Totals:         0       1       0       0       0       0       0
  8983 ;;Total ram usage:        1 bytes
  8984 ;; Hardware stack levels used:    1
  8985 ;; Hardware stack levels required when called:    9
  8986 ;; This function calls:
  8987 ;;		__lcd_Port
  8988 ;;		_lcd_sendCommand
  8989 ;; This function is called by:
  8990 ;;		_main
  8991 ;; This function uses a non-reentrant model
  8992 ;;
  8993                           
  8994                           	psect	text24
  8995  004DDE                     __ptext24:
  8996                           	opt stack 0
  8997  004DDE                     _lcd_init:
  8998                           	opt stack 21
  8999                           
  9000                           ;lcd.c: 41: _lcd_Port(0x00);
  9001                           
  9002                           ;incstack = 0
  9003  004DDE  0E00               	movlw	0
  9004  004DE0  EC4E  F029         	call	__lcd_Port
  9005                           
  9006                           ;lcd.c: 42: _delay((unsigned long)((20)*(16000000UL/4000.0)));
  9007  004DE4  0E68               	movlw	104
  9008  004DE6  0100               	movlb	0	; () banked
  9009  004DE8  6F93               	movwf	??_lcd_init& (0+255),b
  9010  004DEA  0EE4               	movlw	228
  9011  004DEC                     u17047:
  9012  004DEC  2EE8               	decfsz	wreg,f,c
  9013  004DEE  D7FE               	goto	u17047
  9014  004DF0  2F93               	decfsz	??_lcd_init& (0+255),f,b
  9015  004DF2  D7FC               	goto	u17047
  9016  004DF4  D000               	nop2	
  9017                           
  9018                           ;lcd.c: 43: lcd_sendCommand(0x03);
  9019  004DF6  0E03               	movlw	3
  9020  004DF8  ECE1  F029         	call	_lcd_sendCommand
  9021                           
  9022                           ;lcd.c: 44: _delay((unsigned long)((5)*(16000000UL/4000.0)));
  9023  004DFC  0E1A               	movlw	26
  9024  004DFE  0100               	movlb	0	; () banked
  9025  004E00  6F93               	movwf	??_lcd_init& (0+255),b
  9026  004E02  0EF8               	movlw	248
  9027  004E04                     u17057:
  9028  004E04  2EE8               	decfsz	wreg,f,c
  9029  004E06  D7FE               	goto	u17057
  9030  004E08  2F93               	decfsz	??_lcd_init& (0+255),f,b
  9031  004E0A  D7FC               	goto	u17057
  9032  004E0C  D000               	nop2	
  9033                           
  9034                           ;lcd.c: 45: lcd_sendCommand(0x03);
  9035  004E0E  0E03               	movlw	3
  9036  004E10  ECE1  F029         	call	_lcd_sendCommand
  9037                           
  9038                           ;lcd.c: 46: _delay((unsigned long)((11)*(16000000UL/4000.0)));
  9039  004E14  0E3A               	movlw	58
  9040  004E16  0100               	movlb	0	; () banked
  9041  004E18  6F93               	movwf	??_lcd_init& (0+255),b
  9042  004E1A  0E23               	movlw	35
  9043  004E1C                     u17067:
  9044  004E1C  2EE8               	decfsz	wreg,f,c
  9045  004E1E  D7FE               	goto	u17067
  9046  004E20  2F93               	decfsz	??_lcd_init& (0+255),f,b
  9047  004E22  D7FC               	goto	u17067
  9048  004E24  F000               	nop	
  9049                           
  9050                           ;lcd.c: 47: lcd_sendCommand(0x03);
  9051  004E26  0E03               	movlw	3
  9052  004E28  ECE1  F029         	call	_lcd_sendCommand
  9053                           
  9054                           ;lcd.c: 49: lcd_sendCommand(0x02);
  9055  004E2C  0E02               	movlw	2
  9056  004E2E  ECE1  F029         	call	_lcd_sendCommand
  9057                           
  9058                           ;lcd.c: 50: lcd_sendCommand(0x02);
  9059  004E32  0E02               	movlw	2
  9060  004E34  ECE1  F029         	call	_lcd_sendCommand
  9061                           
  9062                           ;lcd.c: 51: lcd_sendCommand(0x08);
  9063  004E38  0E08               	movlw	8
  9064  004E3A  ECE1  F029         	call	_lcd_sendCommand
  9065                           
  9066                           ;lcd.c: 52: lcd_sendCommand(0x00);
  9067  004E3E  0E00               	movlw	0
  9068  004E40  ECE1  F029         	call	_lcd_sendCommand
  9069                           
  9070                           ;lcd.c: 53: lcd_sendCommand(0x0C);
  9071  004E44  0E0C               	movlw	12
  9072  004E46  ECE1  F029         	call	_lcd_sendCommand
  9073                           
  9074                           ;lcd.c: 54: lcd_sendCommand(0x00);
  9075  004E4A  0E00               	movlw	0
  9076  004E4C  ECE1  F029         	call	_lcd_sendCommand
  9077                           
  9078                           ;lcd.c: 55: lcd_sendCommand(0x06);
  9079  004E50  0E06               	movlw	6
  9080  004E52  ECE1  F029         	call	_lcd_sendCommand
  9081  004E56  0012               	return		;funcret
  9082  004E58                     __end_of_lcd_init:
  9083                           	opt stack 0
  9084                           tosu	equ	0xFFF
  9085                           tosh	equ	0xFFE
  9086                           tosl	equ	0xFFD
  9087                           pclath	equ	0xFFA
  9088                           tblptru	equ	0xFF8
  9089                           tblptrh	equ	0xFF7
  9090                           tblptrl	equ	0xFF6
  9091                           tablat	equ	0xFF5
  9092                           prodh	equ	0xFF4
  9093                           prodl	equ	0xFF3
  9094                           intcon	equ	0xFF2
  9095                           postinc0	equ	0xFEE
  9096                           wreg	equ	0xFE8
  9097                           postdec1	equ	0xFE5
  9098                           fsr1l	equ	0xFE1
  9099                           indf2	equ	0xFDF
  9100                           postinc2	equ	0xFDE
  9101                           postdec2	equ	0xFDD
  9102                           fsr2h	equ	0xFDA
  9103                           fsr2l	equ	0xFD9
  9104                           status	equ	0xFD8
  9105                           
  9106 ;; *************** function _lcd_clear *****************
  9107 ;; Defined at:
  9108 ;;		line 12 in file "lcd.c"
  9109 ;; Parameters:    Size  Location     Type
  9110 ;;		None
  9111 ;; Auto vars:     Size  Location     Type
  9112 ;;		None
  9113 ;; Return value:  Size  Location     Type
  9114 ;;                  1    wreg      void 
  9115 ;; Registers used:
  9116 ;;		wreg, status,2, cstack
  9117 ;; Tracked objects:
  9118 ;;		On entry : 0/0
  9119 ;;		On exit  : 0/0
  9120 ;;		Unchanged: 0/0
  9121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9122 ;;      Params:         0       0       0       0       0       0       0
  9123 ;;      Locals:         0       0       0       0       0       0       0
  9124 ;;      Temps:          0       0       0       0       0       0       0
  9125 ;;      Totals:         0       0       0       0       0       0       0
  9126 ;;Total ram usage:        0 bytes
  9127 ;; Hardware stack levels used:    1
  9128 ;; Hardware stack levels required when called:    9
  9129 ;; This function calls:
  9130 ;;		_lcd_sendCommand
  9131 ;; This function is called by:
  9132 ;;		_main
  9133 ;; This function uses a non-reentrant model
  9134 ;;
  9135                           
  9136                           	psect	text25
  9137  0054C6                     __ptext25:
  9138                           	opt stack 0
  9139  0054C6                     _lcd_clear:
  9140                           	opt stack 21
  9141                           
  9142                           ;lcd.c: 14: lcd_sendCommand(0);
  9143                           
  9144                           ;incstack = 0
  9145  0054C6  0E00               	movlw	0
  9146  0054C8  ECE1  F029         	call	_lcd_sendCommand
  9147                           
  9148                           ;lcd.c: 15: lcd_sendCommand(1);
  9149  0054CC  0E01               	movlw	1
  9150  0054CE  ECE1  F029         	call	_lcd_sendCommand
  9151  0054D2  0012               	return		;funcret
  9152  0054D4                     __end_of_lcd_clear:
  9153                           	opt stack 0
  9154                           tosu	equ	0xFFF
  9155                           tosh	equ	0xFFE
  9156                           tosl	equ	0xFFD
  9157                           pclath	equ	0xFFA
  9158                           tblptru	equ	0xFF8
  9159                           tblptrh	equ	0xFF7
  9160                           tblptrl	equ	0xFF6
  9161                           tablat	equ	0xFF5
  9162                           prodh	equ	0xFF4
  9163                           prodl	equ	0xFF3
  9164                           intcon	equ	0xFF2
  9165                           postinc0	equ	0xFEE
  9166                           wreg	equ	0xFE8
  9167                           postdec1	equ	0xFE5
  9168                           fsr1l	equ	0xFE1
  9169                           indf2	equ	0xFDF
  9170                           postinc2	equ	0xFDE
  9171                           postdec2	equ	0xFDD
  9172                           fsr2h	equ	0xFDA
  9173                           fsr2l	equ	0xFD9
  9174                           status	equ	0xFD8
  9175                           
  9176 ;; *************** function _lcd_sendCommand *****************
  9177 ;; Defined at:
  9178 ;;		line 3 in file "lcd.c"
  9179 ;; Parameters:    Size  Location     Type
  9180 ;;  a               1    wreg     unsigned char 
  9181 ;; Auto vars:     Size  Location     Type
  9182 ;;  a               1   50[BANK0 ] unsigned char 
  9183 ;; Return value:  Size  Location     Type
  9184 ;;                  1    wreg      void 
  9185 ;; Registers used:
  9186 ;;		wreg, status,2, cstack
  9187 ;; Tracked objects:
  9188 ;;		On entry : 0/0
  9189 ;;		On exit  : 0/0
  9190 ;;		Unchanged: 0/0
  9191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9192 ;;      Params:         0       0       0       0       0       0       0
  9193 ;;      Locals:         0       1       0       0       0       0       0
  9194 ;;      Temps:          0       1       0       0       0       0       0
  9195 ;;      Totals:         0       2       0       0       0       0       0
  9196 ;;Total ram usage:        2 bytes
  9197 ;; Hardware stack levels used:    1
  9198 ;; Hardware stack levels required when called:    8
  9199 ;; This function calls:
  9200 ;;		__lcd_Port
  9201 ;; This function is called by:
  9202 ;;		_lcd_clear
  9203 ;;		_lcd_init
  9204 ;;		_lcd_setPosition
  9205 ;;		_lcd_shiftRight
  9206 ;;		_lcd_shiftLeft
  9207 ;; This function uses a non-reentrant model
  9208 ;;
  9209                           
  9210                           	psect	text26
  9211  0053C2                     __ptext26:
  9212                           	opt stack 0
  9213  0053C2                     _lcd_sendCommand:
  9214                           	opt stack 21
  9215                           
  9216                           ;incstack = 0
  9217                           ;lcd_sendCommand@a stored from wreg
  9218  0053C2  0100               	movlb	0	; () banked
  9219  0053C4  6F92               	movwf	lcd_sendCommand@a& (0+255),b
  9220                           
  9221                           ;lcd.c: 5: LATAbits.LA5 = 0;
  9222  0053C6  9A89               	bcf	3977,5,c	;volatile
  9223                           
  9224                           ;lcd.c: 6: _lcd_Port(a);
  9225  0053C8  0100               	movlb	0	; () banked
  9226  0053CA  5192               	movf	lcd_sendCommand@a& (0+255),w,b
  9227  0053CC  EC4E  F029         	call	__lcd_Port
  9228                           
  9229                           ;lcd.c: 7: LATAbits.LA4 = 1;
  9230  0053D0  8889               	bsf	3977,4,c	;volatile
  9231                           
  9232                           ;lcd.c: 8: _delay((unsigned long)((4)*(16000000UL/4000.0)));
  9233  0053D2  0E15               	movlw	21
  9234  0053D4  0100               	movlb	0	; () banked
  9235  0053D6  6F91               	movwf	??_lcd_sendCommand& (0+255),b
  9236  0053D8  0EC6               	movlw	198
  9237  0053DA                     u17077:
  9238  0053DA  2EE8               	decfsz	wreg,f,c
  9239  0053DC  D7FE               	goto	u17077
  9240  0053DE  2F91               	decfsz	??_lcd_sendCommand& (0+255),f,b
  9241  0053E0  D7FC               	goto	u17077
  9242  0053E2  D000               	nop2	
  9243                           
  9244                           ;lcd.c: 9: LATAbits.LA4 = 0;
  9245  0053E4  9889               	bcf	3977,4,c	;volatile
  9246  0053E6  0012               	return		;funcret
  9247  0053E8                     __end_of_lcd_sendCommand:
  9248                           	opt stack 0
  9249                           tosu	equ	0xFFF
  9250                           tosh	equ	0xFFE
  9251                           tosl	equ	0xFFD
  9252                           pclath	equ	0xFFA
  9253                           tblptru	equ	0xFF8
  9254                           tblptrh	equ	0xFF7
  9255                           tblptrl	equ	0xFF6
  9256                           tablat	equ	0xFF5
  9257                           prodh	equ	0xFF4
  9258                           prodl	equ	0xFF3
  9259                           intcon	equ	0xFF2
  9260                           postinc0	equ	0xFEE
  9261                           wreg	equ	0xFE8
  9262                           postdec1	equ	0xFE5
  9263                           fsr1l	equ	0xFE1
  9264                           indf2	equ	0xFDF
  9265                           postinc2	equ	0xFDE
  9266                           postdec2	equ	0xFDD
  9267                           fsr2h	equ	0xFDA
  9268                           fsr2l	equ	0xFD9
  9269                           status	equ	0xFD8
  9270                           
  9271 ;; *************** function __lcd_Port *****************
  9272 ;; Defined at:
  9273 ;;		line 139 in file "lcd.c"
  9274 ;; Parameters:    Size  Location     Type
  9275 ;;  a               1    wreg     unsigned char 
  9276 ;; Auto vars:     Size  Location     Type
  9277 ;;  a               1   48[BANK0 ] unsigned char 
  9278 ;; Return value:  Size  Location     Type
  9279 ;;                  1    wreg      void 
  9280 ;; Registers used:
  9281 ;;		wreg
  9282 ;; Tracked objects:
  9283 ;;		On entry : 0/0
  9284 ;;		On exit  : 0/0
  9285 ;;		Unchanged: 0/0
  9286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9287 ;;      Params:         0       0       0       0       0       0       0
  9288 ;;      Locals:         0       1       0       0       0       0       0
  9289 ;;      Temps:          0       0       0       0       0       0       0
  9290 ;;      Totals:         0       1       0       0       0       0       0
  9291 ;;Total ram usage:        1 bytes
  9292 ;; Hardware stack levels used:    1
  9293 ;; Hardware stack levels required when called:    7
  9294 ;; This function calls:
  9295 ;;		Nothing
  9296 ;; This function is called by:
  9297 ;;		_lcd_sendCommand
  9298 ;;		_lcd_init
  9299 ;;		_lcd_sendChar
  9300 ;; This function uses a non-reentrant model
  9301 ;;
  9302                           
  9303                           	psect	text27
  9304  00529C                     __ptext27:
  9305                           	opt stack 0
  9306  00529C                     __lcd_Port:
  9307                           	opt stack 21
  9308                           
  9309                           ;incstack = 0
  9310                           ;__lcd_Port@a stored from wreg
  9311  00529C  0100               	movlb	0	; () banked
  9312  00529E  6F90               	movwf	__lcd_Port@a& (0+255),b
  9313                           
  9314                           ;lcd.c: 141: if(a & 1)
  9315  0052A0  0100               	movlb	0	; () banked
  9316  0052A2  A190               	btfss	__lcd_Port@a& (0+255),0,b
  9317  0052A4  D002               	goto	l343
  9318                           
  9319                           ; BSR set to: 0
  9320                           ;lcd.c: 142: LATAbits.LA3 = 1;
  9321  0052A6  8689               	bsf	3977,3,c	;volatile
  9322  0052A8  D001               	goto	l4432
  9323  0052AA                     l343:
  9324                           
  9325                           ; BSR set to: 0
  9326                           ;lcd.c: 143: else
  9327                           ;lcd.c: 144: LATAbits.LA3 = 0;
  9328  0052AA  9689               	bcf	3977,3,c	;volatile
  9329  0052AC                     l4432:
  9330                           
  9331                           ; BSR set to: 0
  9332                           ;lcd.c: 146: if(a & 2)
  9333  0052AC  0100               	movlb	0	; () banked
  9334  0052AE  A390               	btfss	__lcd_Port@a& (0+255),1,b
  9335  0052B0  D002               	goto	l345
  9336                           
  9337                           ; BSR set to: 0
  9338                           ;lcd.c: 147: LATAbits.LA2 = 1;
  9339  0052B2  8489               	bsf	3977,2,c	;volatile
  9340  0052B4  D001               	goto	l4436
  9341  0052B6                     l345:
  9342                           
  9343                           ; BSR set to: 0
  9344                           ;lcd.c: 148: else
  9345                           ;lcd.c: 149: LATAbits.LA2 = 0;
  9346  0052B6  9489               	bcf	3977,2,c	;volatile
  9347  0052B8                     l4436:
  9348                           
  9349                           ; BSR set to: 0
  9350                           ;lcd.c: 151: if(a & 4)
  9351  0052B8  0100               	movlb	0	; () banked
  9352  0052BA  A590               	btfss	__lcd_Port@a& (0+255),2,b
  9353  0052BC  D002               	goto	l347
  9354                           
  9355                           ; BSR set to: 0
  9356                           ;lcd.c: 152: LATAbits.LA1 = 1;
  9357  0052BE  8289               	bsf	3977,1,c	;volatile
  9358  0052C0  D001               	goto	l4440
  9359  0052C2                     l347:
  9360                           
  9361                           ; BSR set to: 0
  9362                           ;lcd.c: 153: else
  9363                           ;lcd.c: 154: LATAbits.LA1 = 0;
  9364  0052C2  9289               	bcf	3977,1,c	;volatile
  9365  0052C4                     l4440:
  9366                           
  9367                           ; BSR set to: 0
  9368                           ;lcd.c: 156: if(a & 8)
  9369  0052C4  0100               	movlb	0	; () banked
  9370  0052C6  A790               	btfss	__lcd_Port@a& (0+255),3,b
  9371  0052C8  D002               	goto	l349
  9372                           
  9373                           ; BSR set to: 0
  9374                           ;lcd.c: 157: LATAbits.LA0 = 1;
  9375  0052CA  8089               	bsf	3977,0,c	;volatile
  9376  0052CC  0012               	return	
  9377  0052CE                     l349:
  9378                           
  9379                           ; BSR set to: 0
  9380                           ;lcd.c: 158: else
  9381                           ;lcd.c: 159: LATAbits.LA0 = 0;
  9382  0052CE  9089               	bcf	3977,0,c	;volatile
  9383  0052D0  0012               	return	
  9384  0052D2                     __end_of__lcd_Port:
  9385                           	opt stack 0
  9386                           tosu	equ	0xFFF
  9387                           tosh	equ	0xFFE
  9388                           tosl	equ	0xFFD
  9389                           pclath	equ	0xFFA
  9390                           tblptru	equ	0xFF8
  9391                           tblptrh	equ	0xFF7
  9392                           tblptrl	equ	0xFF6
  9393                           tablat	equ	0xFF5
  9394                           prodh	equ	0xFF4
  9395                           prodl	equ	0xFF3
  9396                           intcon	equ	0xFF2
  9397                           postinc0	equ	0xFEE
  9398                           wreg	equ	0xFE8
  9399                           postdec1	equ	0xFE5
  9400                           fsr1l	equ	0xFE1
  9401                           indf2	equ	0xFDF
  9402                           postinc2	equ	0xFDE
  9403                           postdec2	equ	0xFDD
  9404                           fsr2h	equ	0xFDA
  9405                           fsr2l	equ	0xFD9
  9406                           status	equ	0xFD8
  9407                           
  9408 ;; *************** function ___ftdiv *****************
  9409 ;; Defined at:
  9410 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  9411 ;; Parameters:    Size  Location     Type
  9412 ;;  f1              3   56[BANK0 ] float 
  9413 ;;  f2              3   59[BANK0 ] float 
  9414 ;; Auto vars:     Size  Location     Type
  9415 ;;  f3              3   66[BANK0 ] float 
  9416 ;;  sign            1   70[BANK0 ] unsigned char 
  9417 ;;  exp             1   69[BANK0 ] unsigned char 
  9418 ;;  cntr            1   65[BANK0 ] unsigned char 
  9419 ;; Return value:  Size  Location     Type
  9420 ;;                  3   56[BANK0 ] float 
  9421 ;; Registers used:
  9422 ;;		wreg, status,2, status,0, cstack
  9423 ;; Tracked objects:
  9424 ;;		On entry : 0/0
  9425 ;;		On exit  : 0/0
  9426 ;;		Unchanged: 0/0
  9427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9428 ;;      Params:         0       6       0       0       0       0       0
  9429 ;;      Locals:         0       6       0       0       0       0       0
  9430 ;;      Temps:          0       3       0       0       0       0       0
  9431 ;;      Totals:         0      15       0       0       0       0       0
  9432 ;;Total ram usage:       15 bytes
  9433 ;; Hardware stack levels used:    1
  9434 ;; Hardware stack levels required when called:    8
  9435 ;; This function calls:
  9436 ;;		___ftpack
  9437 ;; This function is called by:
  9438 ;;		_main
  9439 ;; This function uses a non-reentrant model
  9440 ;;
  9441                           
  9442                           	psect	text28
  9443  003DBA                     __ptext28:
  9444                           	opt stack 0
  9445  003DBA                     ___ftdiv:
  9446                           	opt stack 22
  9447                           
  9448                           ; BSR set to: 0
  9449                           ;incstack = 0
  9450  003DBA  C09A  F09E         	movff	___ftdiv@f1+2,??___ftdiv
  9451  003DBE  0100               	movlb	0	; () banked
  9452  003DC0  6B9F               	clrf	(??___ftdiv+1)& (0+255),b
  9453  003DC2  6BA0               	clrf	(??___ftdiv+2)& (0+255),b
  9454  003DC4  0100               	movlb	0	; () banked
  9455  003DC6  3599               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  9456  003DC8  0100               	movlb	0	; () banked
  9457  003DCA  379E               	rlcf	??___ftdiv& (0+255),f,b
  9458  003DCC  E301               	bnc	u10911
  9459  003DCE  819F               	bsf	(??___ftdiv+1)& (0+255),0,b
  9460  003DD0                     u10911:
  9461  003DD0  0100               	movlb	0	; () banked
  9462  003DD2  519E               	movf	??___ftdiv& (0+255),w,b
  9463  003DD4  0100               	movlb	0	; () banked
  9464  003DD6  6FA5               	movwf	___ftdiv@exp& (0+255),b
  9465  003DD8  0100               	movlb	0	; () banked
  9466  003DDA  51A5               	movf	___ftdiv@exp& (0+255),w,b
  9467  003DDC  A4D8               	btfss	status,2,c
  9468  003DDE  D00A               	goto	l7186
  9469                           
  9470                           ; BSR set to: 0
  9471  003DE0  0E00               	movlw	0
  9472  003DE2  0100               	movlb	0	; () banked
  9473  003DE4  6F98               	movwf	?___ftdiv& (0+255),b
  9474  003DE6  0E00               	movlw	0
  9475  003DE8  0100               	movlb	0	; () banked
  9476  003DEA  6F99               	movwf	(?___ftdiv+1)& (0+255),b
  9477  003DEC  0E00               	movlw	0
  9478  003DEE  0100               	movlb	0	; () banked
  9479  003DF0  6F9A               	movwf	(?___ftdiv+2)& (0+255),b
  9480                           
  9481                           ; BSR set to: 0
  9482  003DF2  0012               	return	
  9483  003DF4                     l7186:
  9484                           
  9485                           ; BSR set to: 0
  9486  003DF4  C09D  F09E         	movff	___ftdiv@f2+2,??___ftdiv
  9487  003DF8  0100               	movlb	0	; () banked
  9488  003DFA  6B9F               	clrf	(??___ftdiv+1)& (0+255),b
  9489  003DFC  6BA0               	clrf	(??___ftdiv+2)& (0+255),b
  9490  003DFE  0100               	movlb	0	; () banked
  9491  003E00  359C               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  9492  003E02  0100               	movlb	0	; () banked
  9493  003E04  379E               	rlcf	??___ftdiv& (0+255),f,b
  9494  003E06  E301               	bnc	u10931
  9495  003E08  819F               	bsf	(??___ftdiv+1)& (0+255),0,b
  9496  003E0A                     u10931:
  9497  003E0A  0100               	movlb	0	; () banked
  9498  003E0C  519E               	movf	??___ftdiv& (0+255),w,b
  9499  003E0E  0100               	movlb	0	; () banked
  9500  003E10  6FA6               	movwf	___ftdiv@sign& (0+255),b
  9501  003E12  0100               	movlb	0	; () banked
  9502  003E14  51A6               	movf	___ftdiv@sign& (0+255),w,b
  9503  003E16  A4D8               	btfss	status,2,c
  9504  003E18  D00A               	goto	l7192
  9505                           
  9506                           ; BSR set to: 0
  9507  003E1A  0E00               	movlw	0
  9508  003E1C  0100               	movlb	0	; () banked
  9509  003E1E  6F98               	movwf	?___ftdiv& (0+255),b
  9510  003E20  0E00               	movlw	0
  9511  003E22  0100               	movlb	0	; () banked
  9512  003E24  6F99               	movwf	(?___ftdiv+1)& (0+255),b
  9513  003E26  0E00               	movlw	0
  9514  003E28  0100               	movlb	0	; () banked
  9515  003E2A  6F9A               	movwf	(?___ftdiv+2)& (0+255),b
  9516                           
  9517                           ; BSR set to: 0
  9518  003E2C  0012               	return	
  9519  003E2E                     l7192:
  9520                           
  9521                           ; BSR set to: 0
  9522  003E2E  0E00               	movlw	0
  9523  003E30  0100               	movlb	0	; () banked
  9524  003E32  6FA2               	movwf	___ftdiv@f3& (0+255),b
  9525  003E34  0E00               	movlw	0
  9526  003E36  0100               	movlb	0	; () banked
  9527  003E38  6FA3               	movwf	(___ftdiv@f3+1)& (0+255),b
  9528  003E3A  0E00               	movlw	0
  9529  003E3C  0100               	movlb	0	; () banked
  9530  003E3E  6FA4               	movwf	(___ftdiv@f3+2)& (0+255),b
  9531                           
  9532                           ; BSR set to: 0
  9533  003E40  0100               	movlb	0	; () banked
  9534  003E42  51A6               	movf	___ftdiv@sign& (0+255),w,b
  9535  003E44  0F89               	addlw	137
  9536  003E46  0100               	movlb	0	; () banked
  9537  003E48  5FA5               	subwf	___ftdiv@exp& (0+255),f,b
  9538                           
  9539                           ; BSR set to: 0
  9540  003E4A  C09A  F0A6         	movff	___ftdiv@f1+2,___ftdiv@sign
  9541                           
  9542                           ; BSR set to: 0
  9543  003E4E  0100               	movlb	0	; () banked
  9544  003E50  519D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9545  003E52  0100               	movlb	0	; () banked
  9546  003E54  1BA6               	xorwf	___ftdiv@sign& (0+255),f,b
  9547                           
  9548                           ; BSR set to: 0
  9549  003E56  0E80               	movlw	128
  9550  003E58  0100               	movlb	0	; () banked
  9551  003E5A  17A6               	andwf	___ftdiv@sign& (0+255),f,b
  9552                           
  9553                           ; BSR set to: 0
  9554  003E5C  0100               	movlb	0	; () banked
  9555  003E5E  8F99               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  9556                           
  9557                           ; BSR set to: 0
  9558  003E60  0EFF               	movlw	255
  9559  003E62  0100               	movlb	0	; () banked
  9560  003E64  1798               	andwf	___ftdiv@f1& (0+255),f,b
  9561  003E66  0EFF               	movlw	255
  9562  003E68  0100               	movlb	0	; () banked
  9563  003E6A  1799               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  9564  003E6C  0E00               	movlw	0
  9565  003E6E  0100               	movlb	0	; () banked
  9566  003E70  179A               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  9567                           
  9568                           ; BSR set to: 0
  9569  003E72  0100               	movlb	0	; () banked
  9570  003E74  8F9C               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  9571                           
  9572                           ; BSR set to: 0
  9573  003E76  0EFF               	movlw	255
  9574  003E78  0100               	movlb	0	; () banked
  9575  003E7A  179B               	andwf	___ftdiv@f2& (0+255),f,b
  9576  003E7C  0EFF               	movlw	255
  9577  003E7E  0100               	movlb	0	; () banked
  9578  003E80  179C               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  9579  003E82  0E00               	movlw	0
  9580  003E84  0100               	movlb	0	; () banked
  9581  003E86  179D               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  9582                           
  9583                           ; BSR set to: 0
  9584  003E88  0E18               	movlw	24
  9585  003E8A  0100               	movlb	0	; () banked
  9586  003E8C  6FA1               	movwf	___ftdiv@cntr& (0+255),b
  9587  003E8E                     l7212:
  9588                           
  9589                           ; BSR set to: 0
  9590  003E8E  0100               	movlb	0	; () banked
  9591  003E90  90D8               	bcf	status,0,c
  9592  003E92  37A2               	rlcf	___ftdiv@f3& (0+255),f,b
  9593  003E94  37A3               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  9594  003E96  37A4               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  9595                           
  9596                           ; BSR set to: 0
  9597  003E98  0100               	movlb	0	; () banked
  9598  003E9A  519B               	movf	___ftdiv@f2& (0+255),w,b
  9599  003E9C  0100               	movlb	0	; () banked
  9600  003E9E  5D98               	subwf	___ftdiv@f1& (0+255),w,b
  9601  003EA0  0100               	movlb	0	; () banked
  9602  003EA2  519C               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9603  003EA4  0100               	movlb	0	; () banked
  9604  003EA6  5999               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  9605  003EA8  0100               	movlb	0	; () banked
  9606  003EAA  519D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9607  003EAC  0100               	movlb	0	; () banked
  9608  003EAE  599A               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  9609  003EB0  A0D8               	btfss	status,0,c
  9610  003EB2  D00E               	goto	l825
  9611                           
  9612                           ; BSR set to: 0
  9613  003EB4  0100               	movlb	0	; () banked
  9614  003EB6  519B               	movf	___ftdiv@f2& (0+255),w,b
  9615  003EB8  0100               	movlb	0	; () banked
  9616  003EBA  5F98               	subwf	___ftdiv@f1& (0+255),f,b
  9617  003EBC  0100               	movlb	0	; () banked
  9618  003EBE  519C               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9619  003EC0  0100               	movlb	0	; () banked
  9620  003EC2  5B99               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  9621  003EC4  0100               	movlb	0	; () banked
  9622  003EC6  519D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9623  003EC8  0100               	movlb	0	; () banked
  9624  003ECA  5B9A               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  9625                           
  9626                           ; BSR set to: 0
  9627  003ECC  0100               	movlb	0	; () banked
  9628  003ECE  81A2               	bsf	___ftdiv@f3& (0+255),0,b
  9629  003ED0                     l825:
  9630                           
  9631                           ; BSR set to: 0
  9632  003ED0  0100               	movlb	0	; () banked
  9633  003ED2  90D8               	bcf	status,0,c
  9634  003ED4  3798               	rlcf	___ftdiv@f1& (0+255),f,b
  9635  003ED6  3799               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  9636  003ED8  379A               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  9637                           
  9638                           ; BSR set to: 0
  9639  003EDA  0100               	movlb	0	; () banked
  9640  003EDC  2FA1               	decfsz	___ftdiv@cntr& (0+255),f,b
  9641  003EDE  D7D7               	goto	l7212
  9642                           
  9643                           ; BSR set to: 0
  9644                           
  9645                           ; BSR set to: 0
  9646  003EE0  C0A2  F090         	movff	___ftdiv@f3,___ftpack@arg
  9647  003EE4  C0A3  F091         	movff	___ftdiv@f3+1,___ftpack@arg+1
  9648  003EE8  C0A4  F092         	movff	___ftdiv@f3+2,___ftpack@arg+2
  9649  003EEC  C0A5  F093         	movff	___ftdiv@exp,___ftpack@exp
  9650  003EF0  C0A6  F094         	movff	___ftdiv@sign,___ftpack@sign
  9651  003EF4  ECE3  F021         	call	___ftpack	;wreg free
  9652  003EF8  C090  F098         	movff	?___ftpack,?___ftdiv
  9653  003EFC  C091  F099         	movff	?___ftpack+1,?___ftdiv+1
  9654  003F00  C092  F09A         	movff	?___ftpack+2,?___ftdiv+2
  9655  003F04  0012               	return	
  9656  003F06                     __end_of___ftdiv:
  9657                           	opt stack 0
  9658                           tosu	equ	0xFFF
  9659                           tosh	equ	0xFFE
  9660                           tosl	equ	0xFFD
  9661                           pclath	equ	0xFFA
  9662                           tblptru	equ	0xFF8
  9663                           tblptrh	equ	0xFF7
  9664                           tblptrl	equ	0xFF6
  9665                           tablat	equ	0xFF5
  9666                           prodh	equ	0xFF4
  9667                           prodl	equ	0xFF3
  9668                           intcon	equ	0xFF2
  9669                           postinc0	equ	0xFEE
  9670                           wreg	equ	0xFE8
  9671                           postdec1	equ	0xFE5
  9672                           fsr1l	equ	0xFE1
  9673                           indf2	equ	0xFDF
  9674                           postinc2	equ	0xFDE
  9675                           postdec2	equ	0xFDD
  9676                           fsr2h	equ	0xFDA
  9677                           fsr2l	equ	0xFD9
  9678                           status	equ	0xFD8
  9679                           
  9680 ;; *************** function ___ftpack *****************
  9681 ;; Defined at:
  9682 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  9683 ;; Parameters:    Size  Location     Type
  9684 ;;  arg             3   48[BANK0 ] unsigned um
  9685 ;;  exp             1   51[BANK0 ] unsigned char 
  9686 ;;  sign            1   52[BANK0 ] unsigned char 
  9687 ;; Auto vars:     Size  Location     Type
  9688 ;;		None
  9689 ;; Return value:  Size  Location     Type
  9690 ;;                  3   48[BANK0 ] float 
  9691 ;; Registers used:
  9692 ;;		wreg, status,2, status,0
  9693 ;; Tracked objects:
  9694 ;;		On entry : 0/0
  9695 ;;		On exit  : 0/0
  9696 ;;		Unchanged: 0/0
  9697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9698 ;;      Params:         0       5       0       0       0       0       0
  9699 ;;      Locals:         0       0       0       0       0       0       0
  9700 ;;      Temps:          0       3       0       0       0       0       0
  9701 ;;      Totals:         0       8       0       0       0       0       0
  9702 ;;Total ram usage:        8 bytes
  9703 ;; Hardware stack levels used:    1
  9704 ;; Hardware stack levels required when called:    7
  9705 ;; This function calls:
  9706 ;;		Nothing
  9707 ;; This function is called by:
  9708 ;;		___ftadd
  9709 ;;		___ftdiv
  9710 ;;		___ftmul
  9711 ;;		___lltoft
  9712 ;; This function uses a non-reentrant model
  9713 ;;
  9714                           
  9715                           	psect	text29
  9716  0043C6                     __ptext29:
  9717                           	opt stack 0
  9718  0043C6                     ___ftpack:
  9719                           	opt stack 19
  9720                           
  9721                           ;incstack = 0
  9722  0043C6  0100               	movlb	0	; () banked
  9723  0043C8  5193               	movf	___ftpack@exp& (0+255),w,b
  9724  0043CA  0100               	movlb	0	; () banked
  9725  0043CC  B4D8               	btfsc	status,2,c
  9726  0043CE  D008               	goto	l5950
  9727                           
  9728                           ; BSR set to: 0
  9729  0043D0  0100               	movlb	0	; () banked
  9730  0043D2  5190               	movf	___ftpack@arg& (0+255),w,b
  9731  0043D4  0100               	movlb	0	; () banked
  9732  0043D6  1191               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  9733  0043D8  0100               	movlb	0	; () banked
  9734  0043DA  1192               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  9735  0043DC  A4D8               	btfss	status,2,c
  9736  0043DE  D011               	goto	l5956
  9737  0043E0                     l5950:
  9738                           
  9739                           ; BSR set to: 0
  9740  0043E0  0E00               	movlw	0
  9741  0043E2  0100               	movlb	0	; () banked
  9742  0043E4  6F90               	movwf	?___ftpack& (0+255),b
  9743  0043E6  0E00               	movlw	0
  9744  0043E8  0100               	movlb	0	; () banked
  9745  0043EA  6F91               	movwf	(?___ftpack+1)& (0+255),b
  9746  0043EC  0E00               	movlw	0
  9747  0043EE  0100               	movlb	0	; () banked
  9748  0043F0  6F92               	movwf	(?___ftpack+2)& (0+255),b
  9749                           
  9750                           ; BSR set to: 0
  9751  0043F2  0012               	return	
  9752  0043F4                     l5954:
  9753                           
  9754                           ; BSR set to: 0
  9755  0043F4  0100               	movlb	0	; () banked
  9756  0043F6  2B93               	incf	___ftpack@exp& (0+255),f,b
  9757  0043F8  0100               	movlb	0	; () banked
  9758  0043FA  90D8               	bcf	status,0,c
  9759  0043FC  3392               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9760  0043FE  3391               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9761  004400  3390               	rrcf	___ftpack@arg& (0+255),f,b
  9762  004402                     l5956:
  9763                           
  9764                           ; BSR set to: 0
  9765  004402  0E00               	movlw	0
  9766  004404  0100               	movlb	0	; () banked
  9767  004406  1590               	andwf	___ftpack@arg& (0+255),w,b
  9768  004408  0100               	movlb	0	; () banked
  9769  00440A  6F95               	movwf	??___ftpack& (0+255),b
  9770  00440C  0E00               	movlw	0
  9771  00440E  0100               	movlb	0	; () banked
  9772  004410  1591               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9773  004412  0100               	movlb	0	; () banked
  9774  004414  6F96               	movwf	(??___ftpack+1)& (0+255),b
  9775  004416  0EFE               	movlw	254
  9776  004418  0100               	movlb	0	; () banked
  9777  00441A  1592               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9778  00441C  0100               	movlb	0	; () banked
  9779  00441E  6F97               	movwf	(??___ftpack+2)& (0+255),b
  9780  004420  0100               	movlb	0	; () banked
  9781  004422  5195               	movf	??___ftpack& (0+255),w,b
  9782  004424  0100               	movlb	0	; () banked
  9783  004426  1196               	iorwf	(??___ftpack+1)& (0+255),w,b
  9784  004428  0100               	movlb	0	; () banked
  9785  00442A  1197               	iorwf	(??___ftpack+2)& (0+255),w,b
  9786  00442C  B4D8               	btfsc	status,2,c
  9787  00442E  D011               	goto	l5962
  9788  004430  D7E1               	goto	l5954
  9789  004432                     l5958:
  9790                           
  9791                           ; BSR set to: 0
  9792  004432  0100               	movlb	0	; () banked
  9793  004434  2B93               	incf	___ftpack@exp& (0+255),f,b
  9794                           
  9795                           ; BSR set to: 0
  9796  004436  0E01               	movlw	1
  9797  004438  0100               	movlb	0	; () banked
  9798  00443A  2790               	addwf	___ftpack@arg& (0+255),f,b
  9799  00443C  0E00               	movlw	0
  9800  00443E  0100               	movlb	0	; () banked
  9801  004440  2391               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  9802  004442  0E00               	movlw	0
  9803  004444  0100               	movlb	0	; () banked
  9804  004446  2392               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  9805  004448  0100               	movlb	0	; () banked
  9806  00444A  90D8               	bcf	status,0,c
  9807  00444C  3392               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9808  00444E  3391               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9809  004450  3390               	rrcf	___ftpack@arg& (0+255),f,b
  9810  004452                     l5962:
  9811                           
  9812                           ; BSR set to: 0
  9813  004452  0E00               	movlw	0
  9814  004454  0100               	movlb	0	; () banked
  9815  004456  1590               	andwf	___ftpack@arg& (0+255),w,b
  9816  004458  0100               	movlb	0	; () banked
  9817  00445A  6F95               	movwf	??___ftpack& (0+255),b
  9818  00445C  0E00               	movlw	0
  9819  00445E  0100               	movlb	0	; () banked
  9820  004460  1591               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9821  004462  0100               	movlb	0	; () banked
  9822  004464  6F96               	movwf	(??___ftpack+1)& (0+255),b
  9823  004466  0EFF               	movlw	255
  9824  004468  0100               	movlb	0	; () banked
  9825  00446A  1592               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9826  00446C  0100               	movlb	0	; () banked
  9827  00446E  6F97               	movwf	(??___ftpack+2)& (0+255),b
  9828  004470  0100               	movlb	0	; () banked
  9829  004472  5195               	movf	??___ftpack& (0+255),w,b
  9830  004474  0100               	movlb	0	; () banked
  9831  004476  1196               	iorwf	(??___ftpack+1)& (0+255),w,b
  9832  004478  0100               	movlb	0	; () banked
  9833  00447A  1197               	iorwf	(??___ftpack+2)& (0+255),w,b
  9834  00447C  B4D8               	btfsc	status,2,c
  9835  00447E  D008               	goto	l5966
  9836  004480  D7D8               	goto	l5958
  9837  004482                     l5964:
  9838                           
  9839                           ; BSR set to: 0
  9840  004482  0100               	movlb	0	; () banked
  9841  004484  0793               	decf	___ftpack@exp& (0+255),f,b
  9842  004486  0100               	movlb	0	; () banked
  9843  004488  90D8               	bcf	status,0,c
  9844  00448A  3790               	rlcf	___ftpack@arg& (0+255),f,b
  9845  00448C  3791               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  9846  00448E  3792               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  9847  004490                     l5966:
  9848                           
  9849                           ; BSR set to: 0
  9850  004490  0100               	movlb	0	; () banked
  9851  004492  BF91               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  9852  004494  D004               	goto	l767
  9853                           
  9854                           ; BSR set to: 0
  9855  004496  0E02               	movlw	2
  9856  004498  0100               	movlb	0	; () banked
  9857  00449A  6193               	cpfslt	___ftpack@exp& (0+255),b
  9858  00449C  D7F2               	goto	l5964
  9859  00449E                     l767:
  9860                           
  9861                           ; BSR set to: 0
  9862  00449E  0100               	movlb	0	; () banked
  9863  0044A0  B193               	btfsc	___ftpack@exp& (0+255),0,b
  9864  0044A2  D002               	goto	l5972
  9865                           
  9866                           ; BSR set to: 0
  9867  0044A4  0100               	movlb	0	; () banked
  9868  0044A6  9F91               	bcf	(___ftpack@arg+1)& (0+255),7,b
  9869  0044A8                     l5972:
  9870                           
  9871                           ; BSR set to: 0
  9872  0044A8  0100               	movlb	0	; () banked
  9873  0044AA  90D8               	bcf	status,0,c
  9874  0044AC  3393               	rrcf	___ftpack@exp& (0+255),f,b
  9875  0044AE  0100               	movlb	0	; () banked
  9876  0044B0  5193               	movf	___ftpack@exp& (0+255),w,b
  9877  0044B2  0100               	movlb	0	; () banked
  9878  0044B4  1392               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  9879                           
  9880                           ; BSR set to: 0
  9881  0044B6  0100               	movlb	0	; () banked
  9882  0044B8  5194               	movf	___ftpack@sign& (0+255),w,b
  9883  0044BA  0100               	movlb	0	; () banked
  9884  0044BC  B4D8               	btfsc	status,2,c
  9885  0044BE  D002               	goto	l5978
  9886                           
  9887                           ; BSR set to: 0
  9888  0044C0  0100               	movlb	0	; () banked
  9889  0044C2  8F92               	bsf	(___ftpack@arg+2)& (0+255),7,b
  9890  0044C4                     l5978:
  9891                           
  9892                           ; BSR set to: 0
  9893  0044C4  C090  F090         	movff	___ftpack@arg,?___ftpack
  9894  0044C8  C091  F091         	movff	___ftpack@arg+1,?___ftpack+1
  9895  0044CC  C092  F092         	movff	___ftpack@arg+2,?___ftpack+2
  9896  0044D0  0012               	return	
  9897  0044D2                     __end_of___ftpack:
  9898                           	opt stack 0
  9899                           tosu	equ	0xFFF
  9900                           tosh	equ	0xFFE
  9901                           tosl	equ	0xFFD
  9902                           pclath	equ	0xFFA
  9903                           tblptru	equ	0xFF8
  9904                           tblptrh	equ	0xFF7
  9905                           tblptrl	equ	0xFF6
  9906                           tablat	equ	0xFF5
  9907                           prodh	equ	0xFF4
  9908                           prodl	equ	0xFF3
  9909                           intcon	equ	0xFF2
  9910                           postinc0	equ	0xFEE
  9911                           wreg	equ	0xFE8
  9912                           postdec1	equ	0xFE5
  9913                           fsr1l	equ	0xFE1
  9914                           indf2	equ	0xFDF
  9915                           postinc2	equ	0xFDE
  9916                           postdec2	equ	0xFDD
  9917                           fsr2h	equ	0xFDA
  9918                           fsr2l	equ	0xFD9
  9919                           status	equ	0xFD8
  9920                           
  9921 ;; *************** function _SYSTEM_Initialize *****************
  9922 ;; Defined at:
  9923 ;;		line 111 in file "mcc_generated_files/mcc.c"
  9924 ;; Parameters:    Size  Location     Type
  9925 ;;		None
  9926 ;; Auto vars:     Size  Location     Type
  9927 ;;		None
  9928 ;; Return value:  Size  Location     Type
  9929 ;;                  1    wreg      void 
  9930 ;; Registers used:
  9931 ;;		wreg, status,2, status,0, cstack
  9932 ;; Tracked objects:
  9933 ;;		On entry : 0/0
  9934 ;;		On exit  : 0/0
  9935 ;;		Unchanged: 0/0
  9936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9937 ;;      Params:         0       0       0       0       0       0       0
  9938 ;;      Locals:         0       0       0       0       0       0       0
  9939 ;;      Temps:          0       0       0       0       0       0       0
  9940 ;;      Totals:         0       0       0       0       0       0       0
  9941 ;;Total ram usage:        0 bytes
  9942 ;; Hardware stack levels used:    1
  9943 ;; Hardware stack levels required when called:    9
  9944 ;; This function calls:
  9945 ;;		_EUSART1_Initialize
  9946 ;;		_EXT_INT_Initialize
  9947 ;;		_INTERRUPT_Initialize
  9948 ;;		_OSCILLATOR_Initialize
  9949 ;;		_PIN_MANAGER_Initialize
  9950 ;;		_TMR0_Initialize
  9951 ;; This function is called by:
  9952 ;;		_main
  9953 ;; This function uses a non-reentrant model
  9954 ;;
  9955                           
  9956                           	psect	text30
  9957  005474                     __ptext30:
  9958                           	opt stack 0
  9959  005474                     _SYSTEM_Initialize:
  9960                           	opt stack 21
  9961                           
  9962                           ;mcc.c: 114: INTERRUPT_Initialize();
  9963                           
  9964                           ; BSR set to: 0
  9965                           ;incstack = 0
  9966  005474  EC91  F02A         	call	_INTERRUPT_Initialize	;wreg free
  9967                           
  9968                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  9969  005478  EC9C  F029         	call	_PIN_MANAGER_Initialize	;wreg free
  9970                           
  9971                           ;mcc.c: 116: OSCILLATOR_Initialize();
  9972  00547C  EC6A  F02A         	call	_OSCILLATOR_Initialize	;wreg free
  9973                           
  9974                           ;mcc.c: 117: EXT_INT_Initialize();
  9975  005480  EC71  F02A         	call	_EXT_INT_Initialize	;wreg free
  9976                           
  9977                           ;mcc.c: 118: TMR0_Initialize();
  9978  005484  EC8D  F028         	call	_TMR0_Initialize	;wreg free
  9979                           
  9980                           ;mcc.c: 119: EUSART1_Initialize();
  9981  005488  EC47  F02A         	call	_EUSART1_Initialize	;wreg free
  9982  00548C  0012               	return		;funcret
  9983  00548E                     __end_of_SYSTEM_Initialize:
  9984                           	opt stack 0
  9985                           tosu	equ	0xFFF
  9986                           tosh	equ	0xFFE
  9987                           tosl	equ	0xFFD
  9988                           pclath	equ	0xFFA
  9989                           tblptru	equ	0xFF8
  9990                           tblptrh	equ	0xFF7
  9991                           tblptrl	equ	0xFF6
  9992                           tablat	equ	0xFF5
  9993                           prodh	equ	0xFF4
  9994                           prodl	equ	0xFF3
  9995                           intcon	equ	0xFF2
  9996                           postinc0	equ	0xFEE
  9997                           wreg	equ	0xFE8
  9998                           postdec1	equ	0xFE5
  9999                           fsr1l	equ	0xFE1
 10000                           indf2	equ	0xFDF
 10001                           postinc2	equ	0xFDE
 10002                           postdec2	equ	0xFDD
 10003                           fsr2h	equ	0xFDA
 10004                           fsr2l	equ	0xFD9
 10005                           status	equ	0xFD8
 10006                           
 10007 ;; *************** function _TMR0_Initialize *****************
 10008 ;; Defined at:
 10009 ;;		line 22 in file "mcc_generated_files/tmr0.c"
 10010 ;; Parameters:    Size  Location     Type
 10011 ;;		None
 10012 ;; Auto vars:     Size  Location     Type
 10013 ;;		None
 10014 ;; Return value:  Size  Location     Type
 10015 ;;                  1    wreg      void 
 10016 ;; Registers used:
 10017 ;;		wreg, status,2, status,0, cstack
 10018 ;; Tracked objects:
 10019 ;;		On entry : 0/0
 10020 ;;		On exit  : 0/0
 10021 ;;		Unchanged: 0/0
 10022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10023 ;;      Params:         0       0       0       0       0       0       0
 10024 ;;      Locals:         0       0       0       0       0       0       0
 10025 ;;      Temps:          0       2       0       0       0       0       0
 10026 ;;      Totals:         0       2       0       0       0       0       0
 10027 ;;Total ram usage:        2 bytes
 10028 ;; Hardware stack levels used:    1
 10029 ;; Hardware stack levels required when called:    8
 10030 ;; This function calls:
 10031 ;;		_TMR0_SetInterruptHandler
 10032 ;;		_TMR0_StartTimer
 10033 ;; This function is called by:
 10034 ;;		_SYSTEM_Initialize
 10035 ;; This function uses a non-reentrant model
 10036 ;;
 10037                           
 10038                           	psect	text31
 10039  00511A                     __ptext31:
 10040                           	opt stack 0
 10041  00511A                     _TMR0_Initialize:
 10042                           	opt stack 21
 10043                           
 10044                           ;tmr0.c: 27: T0CON = 0x11;
 10045                           
 10046                           ;incstack = 0
 10047  00511A  0E11               	movlw	17
 10048  00511C  6ED5               	movwf	4053,c	;volatile
 10049                           
 10050                           ;tmr0.c: 30: TMR0H = 0x15;
 10051  00511E  0E15               	movlw	21
 10052  005120  6ED7               	movwf	4055,c	;volatile
 10053                           
 10054                           ;tmr0.c: 33: TMR0L = 0x9F;
 10055  005122  0E9F               	movlw	159
 10056  005124  6ED6               	movwf	4054,c	;volatile
 10057                           
 10058                           ;tmr0.c: 36: timer0ReloadVal = (TMR0H << 8) | TMR0L;
 10059  005126  50D6               	movf	4054,w,c	;volatile
 10060  005128  CFD7 F092          	movff	4055,??_TMR0_Initialize	;volatile
 10061  00512C  0100               	movlb	0	; () banked
 10062  00512E  6B93               	clrf	(??_TMR0_Initialize+1)& (0+255),b
 10063  005130  C092  F093         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 10064  005134  0100               	movlb	0	; () banked
 10065  005136  6B92               	clrf	??_TMR0_Initialize& (0+255),b
 10066  005138  0100               	movlb	0	; () banked
 10067  00513A  1192               	iorwf	??_TMR0_Initialize& (0+255),w,b
 10068  00513C  6E5C               	movwf	_timer0ReloadVal,c	;volatile
 10069  00513E  0100               	movlb	0	; () banked
 10070  005140  5193               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
 10071  005142  6E5D               	movwf	_timer0ReloadVal+1,c	;volatile
 10072                           
 10073                           ; BSR set to: 0
 10074                           ;tmr0.c: 39: INTCONbits.TMR0IF = 0;
 10075  005144  94F2               	bcf	intcon,2,c	;volatile
 10076                           
 10077                           ; BSR set to: 0
 10078                           ;tmr0.c: 42: INTCONbits.TMR0IE = 1;
 10079  005146  8AF2               	bsf	intcon,5,c	;volatile
 10080                           
 10081                           ; BSR set to: 0
 10082                           ;tmr0.c: 45: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 10083  005148  0E5E               	movlw	low _TMR0_DefaultInterruptHandler
 10084  00514A  0100               	movlb	0	; () banked
 10085  00514C  6F90               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
 10086  00514E  0E51               	movlw	high _TMR0_DefaultInterruptHandler
 10087  005150  0100               	movlb	0	; () banked
 10088  005152  6F91               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 10089  005154  EC7E  F02A         	call	_TMR0_SetInterruptHandler	;wreg free
 10090                           
 10091                           ;tmr0.c: 48: TMR0_StartTimer();
 10092  005158  EC8F  F02A         	call	_TMR0_StartTimer	;wreg free
 10093  00515C  0012               	return		;funcret
 10094  00515E                     __end_of_TMR0_Initialize:
 10095                           	opt stack 0
 10096                           tosu	equ	0xFFF
 10097                           tosh	equ	0xFFE
 10098                           tosl	equ	0xFFD
 10099                           pclath	equ	0xFFA
 10100                           tblptru	equ	0xFF8
 10101                           tblptrh	equ	0xFF7
 10102                           tblptrl	equ	0xFF6
 10103                           tablat	equ	0xFF5
 10104                           prodh	equ	0xFF4
 10105                           prodl	equ	0xFF3
 10106                           intcon	equ	0xFF2
 10107                           postinc0	equ	0xFEE
 10108                           wreg	equ	0xFE8
 10109                           postdec1	equ	0xFE5
 10110                           fsr1l	equ	0xFE1
 10111                           indf2	equ	0xFDF
 10112                           postinc2	equ	0xFDE
 10113                           postdec2	equ	0xFDD
 10114                           fsr2h	equ	0xFDA
 10115                           fsr2l	equ	0xFD9
 10116                           status	equ	0xFD8
 10117                           
 10118 ;; *************** function _TMR0_StartTimer *****************
 10119 ;; Defined at:
 10120 ;;		line 51 in file "mcc_generated_files/tmr0.c"
 10121 ;; Parameters:    Size  Location     Type
 10122 ;;		None
 10123 ;; Auto vars:     Size  Location     Type
 10124 ;;		None
 10125 ;; Return value:  Size  Location     Type
 10126 ;;                  1    wreg      void 
 10127 ;; Registers used:
 10128 ;;		None
 10129 ;; Tracked objects:
 10130 ;;		On entry : 0/0
 10131 ;;		On exit  : 0/0
 10132 ;;		Unchanged: 0/0
 10133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10134 ;;      Params:         0       0       0       0       0       0       0
 10135 ;;      Locals:         0       0       0       0       0       0       0
 10136 ;;      Temps:          0       0       0       0       0       0       0
 10137 ;;      Totals:         0       0       0       0       0       0       0
 10138 ;;Total ram usage:        0 bytes
 10139 ;; Hardware stack levels used:    1
 10140 ;; Hardware stack levels required when called:    7
 10141 ;; This function calls:
 10142 ;;		Nothing
 10143 ;; This function is called by:
 10144 ;;		_TMR0_Initialize
 10145 ;; This function uses a non-reentrant model
 10146 ;;
 10147                           
 10148                           	psect	text32
 10149  00551E                     __ptext32:
 10150                           	opt stack 0
 10151  00551E                     _TMR0_StartTimer:
 10152                           	opt stack 21
 10153                           
 10154                           ;tmr0.c: 54: T0CONbits.TMR0ON = 1;
 10155                           
 10156                           ;incstack = 0
 10157  00551E  8ED5               	bsf	4053,7,c	;volatile
 10158  005520  0012               	return		;funcret
 10159  005522                     __end_of_TMR0_StartTimer:
 10160                           	opt stack 0
 10161                           tosu	equ	0xFFF
 10162                           tosh	equ	0xFFE
 10163                           tosl	equ	0xFFD
 10164                           pclath	equ	0xFFA
 10165                           tblptru	equ	0xFF8
 10166                           tblptrh	equ	0xFF7
 10167                           tblptrl	equ	0xFF6
 10168                           tablat	equ	0xFF5
 10169                           prodh	equ	0xFF4
 10170                           prodl	equ	0xFF3
 10171                           intcon	equ	0xFF2
 10172                           postinc0	equ	0xFEE
 10173                           wreg	equ	0xFE8
 10174                           postdec1	equ	0xFE5
 10175                           fsr1l	equ	0xFE1
 10176                           indf2	equ	0xFDF
 10177                           postinc2	equ	0xFDE
 10178                           postdec2	equ	0xFDD
 10179                           fsr2h	equ	0xFDA
 10180                           fsr2l	equ	0xFD9
 10181                           status	equ	0xFD8
 10182                           
 10183 ;; *************** function _TMR0_SetInterruptHandler *****************
 10184 ;; Defined at:
 10185 ;;		line 109 in file "mcc_generated_files/tmr0.c"
 10186 ;; Parameters:    Size  Location     Type
 10187 ;;  InterruptHan    2   48[BANK0 ] PTR void 
 10188 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 10189 ;; Auto vars:     Size  Location     Type
 10190 ;;		None
 10191 ;; Return value:  Size  Location     Type
 10192 ;;                  1    wreg      void 
 10193 ;; Registers used:
 10194 ;;		wreg, status,2, status,0
 10195 ;; Tracked objects:
 10196 ;;		On entry : 0/0
 10197 ;;		On exit  : 0/0
 10198 ;;		Unchanged: 0/0
 10199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10200 ;;      Params:         0       2       0       0       0       0       0
 10201 ;;      Locals:         0       0       0       0       0       0       0
 10202 ;;      Temps:          0       0       0       0       0       0       0
 10203 ;;      Totals:         0       2       0       0       0       0       0
 10204 ;;Total ram usage:        2 bytes
 10205 ;; Hardware stack levels used:    1
 10206 ;; Hardware stack levels required when called:    7
 10207 ;; This function calls:
 10208 ;;		Nothing
 10209 ;; This function is called by:
 10210 ;;		_TMR0_Initialize
 10211 ;; This function uses a non-reentrant model
 10212 ;;
 10213                           
 10214                           	psect	text33
 10215  0054FC                     __ptext33:
 10216                           	opt stack 0
 10217  0054FC                     _TMR0_SetInterruptHandler:
 10218                           	opt stack 21
 10219                           
 10220                           ;tmr0.c: 110: TMR0_InterruptHandler = InterruptHandler;
 10221                           
 10222                           ;incstack = 0
 10223  0054FC  C090  F0CE         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 10224  005500  C091  F0CF         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 10225  005504  0012               	return		;funcret
 10226  005506                     __end_of_TMR0_SetInterruptHandler:
 10227                           	opt stack 0
 10228                           tosu	equ	0xFFF
 10229                           tosh	equ	0xFFE
 10230                           tosl	equ	0xFFD
 10231                           pclath	equ	0xFFA
 10232                           tblptru	equ	0xFF8
 10233                           tblptrh	equ	0xFF7
 10234                           tblptrl	equ	0xFF6
 10235                           tablat	equ	0xFF5
 10236                           prodh	equ	0xFF4
 10237                           prodl	equ	0xFF3
 10238                           intcon	equ	0xFF2
 10239                           postinc0	equ	0xFEE
 10240                           wreg	equ	0xFE8
 10241                           postdec1	equ	0xFE5
 10242                           fsr1l	equ	0xFE1
 10243                           indf2	equ	0xFDF
 10244                           postinc2	equ	0xFDE
 10245                           postdec2	equ	0xFDD
 10246                           fsr2h	equ	0xFDA
 10247                           fsr2l	equ	0xFD9
 10248                           status	equ	0xFD8
 10249                           
 10250 ;; *************** function _PIN_MANAGER_Initialize *****************
 10251 ;; Defined at:
 10252 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
 10253 ;; Parameters:    Size  Location     Type
 10254 ;;		None
 10255 ;; Auto vars:     Size  Location     Type
 10256 ;;		None
 10257 ;; Return value:  Size  Location     Type
 10258 ;;                  1    wreg      void 
 10259 ;; Registers used:
 10260 ;;		wreg, status,2
 10261 ;; Tracked objects:
 10262 ;;		On entry : 0/0
 10263 ;;		On exit  : 0/0
 10264 ;;		Unchanged: 0/0
 10265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10266 ;;      Params:         0       0       0       0       0       0       0
 10267 ;;      Locals:         0       0       0       0       0       0       0
 10268 ;;      Temps:          0       0       0       0       0       0       0
 10269 ;;      Totals:         0       0       0       0       0       0       0
 10270 ;;Total ram usage:        0 bytes
 10271 ;; Hardware stack levels used:    1
 10272 ;; Hardware stack levels required when called:    7
 10273 ;; This function calls:
 10274 ;;		Nothing
 10275 ;; This function is called by:
 10276 ;;		_SYSTEM_Initialize
 10277 ;; This function uses a non-reentrant model
 10278 ;;
 10279                           
 10280                           	psect	text34
 10281  005338                     __ptext34:
 10282                           	opt stack 0
 10283  005338                     _PIN_MANAGER_Initialize:
 10284                           	opt stack 22
 10285                           
 10286                           ;pin_manager.c: 56: LATA = 0x00;
 10287                           
 10288                           ;incstack = 0
 10289  005338  0E00               	movlw	0
 10290  00533A  6E89               	movwf	3977,c	;volatile
 10291                           
 10292                           ;pin_manager.c: 57: LATB = 0x3C;
 10293  00533C  0E3C               	movlw	60
 10294  00533E  6E8A               	movwf	3978,c	;volatile
 10295                           
 10296                           ;pin_manager.c: 58: LATC = 0x1F;
 10297  005340  0E1F               	movlw	31
 10298  005342  6E8B               	movwf	3979,c	;volatile
 10299                           
 10300                           ;pin_manager.c: 63: TRISA = 0xC0;
 10301  005344  0EC0               	movlw	192
 10302  005346  6E92               	movwf	3986,c	;volatile
 10303                           
 10304                           ;pin_manager.c: 64: TRISB = 0xC3;
 10305  005348  0EC3               	movlw	195
 10306  00534A  6E93               	movwf	3987,c	;volatile
 10307                           
 10308                           ;pin_manager.c: 65: TRISC = 0x20;
 10309  00534C  0E20               	movlw	32
 10310  00534E  6E94               	movwf	3988,c	;volatile
 10311                           
 10312                           ;pin_manager.c: 70: ANSELC = 0x20;
 10313  005350  0E20               	movlw	32
 10314  005352  010F               	movlb	15	; () banked
 10315  005354  6F3A               	movwf	58,b	;volatile
 10316                           
 10317                           ;pin_manager.c: 71: ANSELB = 0x00;
 10318  005356  0E00               	movlw	0
 10319  005358  010F               	movlb	15	; () banked
 10320  00535A  6F39               	movwf	57,b	;volatile
 10321                           
 10322                           ;pin_manager.c: 72: ANSELA = 0x00;
 10323  00535C  0E00               	movlw	0
 10324  00535E  010F               	movlb	15	; () banked
 10325  005360  6F38               	movwf	56,b	;volatile
 10326                           
 10327                           ; BSR set to: 15
 10328                           ;pin_manager.c: 77: WPUB = 0xFF;
 10329  005362  6861               	setf	3937,c	;volatile
 10330                           
 10331                           ; BSR set to: 15
 10332                           ;pin_manager.c: 78: INTCON2bits.nRBPU = 0;
 10333  005364  9EF1               	bcf	intcon2,7,c	;volatile
 10334                           
 10335                           ; BSR set to: 15
 10336  005366  0012               	return		;funcret
 10337  005368                     __end_of_PIN_MANAGER_Initialize:
 10338                           	opt stack 0
 10339                           tosu	equ	0xFFF
 10340                           tosh	equ	0xFFE
 10341                           tosl	equ	0xFFD
 10342                           pclath	equ	0xFFA
 10343                           tblptru	equ	0xFF8
 10344                           tblptrh	equ	0xFF7
 10345                           tblptrl	equ	0xFF6
 10346                           tablat	equ	0xFF5
 10347                           prodh	equ	0xFF4
 10348                           prodl	equ	0xFF3
 10349                           intcon	equ	0xFF2
 10350                           intcon2	equ	0xFF1
 10351                           postinc0	equ	0xFEE
 10352                           wreg	equ	0xFE8
 10353                           postdec1	equ	0xFE5
 10354                           fsr1l	equ	0xFE1
 10355                           indf2	equ	0xFDF
 10356                           postinc2	equ	0xFDE
 10357                           postdec2	equ	0xFDD
 10358                           fsr2h	equ	0xFDA
 10359                           fsr2l	equ	0xFD9
 10360                           status	equ	0xFD8
 10361                           
 10362 ;; *************** function _OSCILLATOR_Initialize *****************
 10363 ;; Defined at:
 10364 ;;		line 122 in file "mcc_generated_files/mcc.c"
 10365 ;; Parameters:    Size  Location     Type
 10366 ;;		None
 10367 ;; Auto vars:     Size  Location     Type
 10368 ;;		None
 10369 ;; Return value:  Size  Location     Type
 10370 ;;                  1    wreg      void 
 10371 ;; Registers used:
 10372 ;;		wreg, status,2
 10373 ;; Tracked objects:
 10374 ;;		On entry : 0/0
 10375 ;;		On exit  : 0/0
 10376 ;;		Unchanged: 0/0
 10377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10378 ;;      Params:         0       0       0       0       0       0       0
 10379 ;;      Locals:         0       0       0       0       0       0       0
 10380 ;;      Temps:          0       0       0       0       0       0       0
 10381 ;;      Totals:         0       0       0       0       0       0       0
 10382 ;;Total ram usage:        0 bytes
 10383 ;; Hardware stack levels used:    1
 10384 ;; Hardware stack levels required when called:    7
 10385 ;; This function calls:
 10386 ;;		Nothing
 10387 ;; This function is called by:
 10388 ;;		_SYSTEM_Initialize
 10389 ;; This function uses a non-reentrant model
 10390 ;;
 10391                           
 10392                           	psect	text35
 10393  0054D4                     __ptext35:
 10394                           	opt stack 0
 10395  0054D4                     _OSCILLATOR_Initialize:
 10396                           	opt stack 22
 10397                           
 10398                           ;mcc.c: 125: OSCCON = 0x70;
 10399                           
 10400                           ; BSR set to: 15
 10401                           ;incstack = 0
 10402  0054D4  0E70               	movlw	112
 10403  0054D6  6ED3               	movwf	4051,c	;volatile
 10404                           
 10405                           ;mcc.c: 127: OSCCON2 = 0x04;
 10406  0054D8  0E04               	movlw	4
 10407  0054DA  6ED2               	movwf	4050,c	;volatile
 10408                           
 10409                           ;mcc.c: 129: OSCTUNE = 0x00;
 10410  0054DC  0E00               	movlw	0
 10411  0054DE  6E9B               	movwf	3995,c	;volatile
 10412  0054E0  0012               	return		;funcret
 10413  0054E2                     __end_of_OSCILLATOR_Initialize:
 10414                           	opt stack 0
 10415                           tosu	equ	0xFFF
 10416                           tosh	equ	0xFFE
 10417                           tosl	equ	0xFFD
 10418                           pclath	equ	0xFFA
 10419                           tblptru	equ	0xFF8
 10420                           tblptrh	equ	0xFF7
 10421                           tblptrl	equ	0xFF6
 10422                           tablat	equ	0xFF5
 10423                           prodh	equ	0xFF4
 10424                           prodl	equ	0xFF3
 10425                           intcon	equ	0xFF2
 10426                           intcon2	equ	0xFF1
 10427                           postinc0	equ	0xFEE
 10428                           wreg	equ	0xFE8
 10429                           postdec1	equ	0xFE5
 10430                           fsr1l	equ	0xFE1
 10431                           indf2	equ	0xFDF
 10432                           postinc2	equ	0xFDE
 10433                           postdec2	equ	0xFDD
 10434                           fsr2h	equ	0xFDA
 10435                           fsr2l	equ	0xFD9
 10436                           status	equ	0xFD8
 10437                           
 10438 ;; *************** function _INTERRUPT_Initialize *****************
 10439 ;; Defined at:
 10440 ;;		line 4 in file "mcc_generated_files/interrupt_manager.c"
 10441 ;; Parameters:    Size  Location     Type
 10442 ;;		None
 10443 ;; Auto vars:     Size  Location     Type
 10444 ;;		None
 10445 ;; Return value:  Size  Location     Type
 10446 ;;                  1    wreg      void 
 10447 ;; Registers used:
 10448 ;;		None
 10449 ;; Tracked objects:
 10450 ;;		On entry : 0/0
 10451 ;;		On exit  : 0/0
 10452 ;;		Unchanged: 0/0
 10453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10454 ;;      Params:         0       0       0       0       0       0       0
 10455 ;;      Locals:         0       0       0       0       0       0       0
 10456 ;;      Temps:          0       0       0       0       0       0       0
 10457 ;;      Totals:         0       0       0       0       0       0       0
 10458 ;;Total ram usage:        0 bytes
 10459 ;; Hardware stack levels used:    1
 10460 ;; Hardware stack levels required when called:    7
 10461 ;; This function calls:
 10462 ;;		Nothing
 10463 ;; This function is called by:
 10464 ;;		_SYSTEM_Initialize
 10465 ;; This function uses a non-reentrant model
 10466 ;;
 10467                           
 10468                           	psect	text36
 10469  005522                     __ptext36:
 10470                           	opt stack 0
 10471  005522                     _INTERRUPT_Initialize:
 10472                           	opt stack 22
 10473                           
 10474                           ;interrupt_manager.c: 7: RCONbits.IPEN = 0;
 10475                           
 10476                           ;incstack = 0
 10477  005522  9ED0               	bcf	4048,7,c	;volatile
 10478  005524  0012               	return		;funcret
 10479  005526                     __end_of_INTERRUPT_Initialize:
 10480                           	opt stack 0
 10481                           tosu	equ	0xFFF
 10482                           tosh	equ	0xFFE
 10483                           tosl	equ	0xFFD
 10484                           pclath	equ	0xFFA
 10485                           tblptru	equ	0xFF8
 10486                           tblptrh	equ	0xFF7
 10487                           tblptrl	equ	0xFF6
 10488                           tablat	equ	0xFF5
 10489                           prodh	equ	0xFF4
 10490                           prodl	equ	0xFF3
 10491                           intcon	equ	0xFF2
 10492                           intcon2	equ	0xFF1
 10493                           postinc0	equ	0xFEE
 10494                           wreg	equ	0xFE8
 10495                           postdec1	equ	0xFE5
 10496                           fsr1l	equ	0xFE1
 10497                           indf2	equ	0xFDF
 10498                           postinc2	equ	0xFDE
 10499                           postdec2	equ	0xFDD
 10500                           fsr2h	equ	0xFDA
 10501                           fsr2l	equ	0xFD9
 10502                           status	equ	0xFD8
 10503                           
 10504 ;; *************** function _EXT_INT_Initialize *****************
 10505 ;; Defined at:
 10506 ;;		line 151 in file "mcc_generated_files/ext_int.c"
 10507 ;; Parameters:    Size  Location     Type
 10508 ;;		None
 10509 ;; Auto vars:     Size  Location     Type
 10510 ;;		None
 10511 ;; Return value:  Size  Location     Type
 10512 ;;                  1    wreg      void 
 10513 ;; Registers used:
 10514 ;;		None
 10515 ;; Tracked objects:
 10516 ;;		On entry : 0/0
 10517 ;;		On exit  : 0/0
 10518 ;;		Unchanged: 0/0
 10519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10520 ;;      Params:         0       0       0       0       0       0       0
 10521 ;;      Locals:         0       0       0       0       0       0       0
 10522 ;;      Temps:          0       0       0       0       0       0       0
 10523 ;;      Totals:         0       0       0       0       0       0       0
 10524 ;;Total ram usage:        0 bytes
 10525 ;; Hardware stack levels used:    1
 10526 ;; Hardware stack levels required when called:    7
 10527 ;; This function calls:
 10528 ;;		Nothing
 10529 ;; This function is called by:
 10530 ;;		_SYSTEM_Initialize
 10531 ;; This function uses a non-reentrant model
 10532 ;;
 10533                           
 10534                           	psect	text37
 10535  0054E2                     __ptext37:
 10536                           	opt stack 0
 10537  0054E2                     _EXT_INT_Initialize:
 10538                           	opt stack 22
 10539                           
 10540                           ;ext_int.c: 159: (INTCON3bits.INT1IF = 0);
 10541                           
 10542                           ;incstack = 0
 10543  0054E2  90F0               	bcf	intcon3,0,c	;volatile
 10544                           
 10545                           ;ext_int.c: 160: (INTCON2bits.INTEDG1 = 0);
 10546  0054E4  9AF1               	bcf	intcon2,5,c	;volatile
 10547                           
 10548                           ;ext_int.c: 161: (INTCON3bits.INT1IE = 1);
 10549  0054E6  86F0               	bsf	intcon3,3,c	;volatile
 10550                           
 10551                           ;ext_int.c: 169: (INTCONbits.INT0IF = 0);
 10552  0054E8  92F2               	bcf	intcon,1,c	;volatile
 10553                           
 10554                           ;ext_int.c: 170: (INTCON2bits.INTEDG0 = 0);
 10555  0054EA  9CF1               	bcf	intcon2,6,c	;volatile
 10556                           
 10557                           ;ext_int.c: 171: (INTCONbits.INT0IE = 1);
 10558  0054EC  88F2               	bsf	intcon,4,c	;volatile
 10559  0054EE  0012               	return		;funcret
 10560  0054F0                     __end_of_EXT_INT_Initialize:
 10561                           	opt stack 0
 10562                           tosu	equ	0xFFF
 10563                           tosh	equ	0xFFE
 10564                           tosl	equ	0xFFD
 10565                           pclath	equ	0xFFA
 10566                           tblptru	equ	0xFF8
 10567                           tblptrh	equ	0xFF7
 10568                           tblptrl	equ	0xFF6
 10569                           tablat	equ	0xFF5
 10570                           prodh	equ	0xFF4
 10571                           prodl	equ	0xFF3
 10572                           intcon	equ	0xFF2
 10573                           intcon2	equ	0xFF1
 10574                           intcon3	equ	0xFF0
 10575                           postinc0	equ	0xFEE
 10576                           wreg	equ	0xFE8
 10577                           postdec1	equ	0xFE5
 10578                           fsr1l	equ	0xFE1
 10579                           indf2	equ	0xFDF
 10580                           postinc2	equ	0xFDE
 10581                           postdec2	equ	0xFDD
 10582                           fsr2h	equ	0xFDA
 10583                           fsr2l	equ	0xFD9
 10584                           status	equ	0xFD8
 10585                           
 10586 ;; *************** function _EUSART1_Initialize *****************
 10587 ;; Defined at:
 10588 ;;		line 55 in file "mcc_generated_files/eusart1.c"
 10589 ;; Parameters:    Size  Location     Type
 10590 ;;		None
 10591 ;; Auto vars:     Size  Location     Type
 10592 ;;		None
 10593 ;; Return value:  Size  Location     Type
 10594 ;;                  1    wreg      void 
 10595 ;; Registers used:
 10596 ;;		wreg, status,2
 10597 ;; Tracked objects:
 10598 ;;		On entry : 0/0
 10599 ;;		On exit  : 0/0
 10600 ;;		Unchanged: 0/0
 10601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10602 ;;      Params:         0       0       0       0       0       0       0
 10603 ;;      Locals:         0       0       0       0       0       0       0
 10604 ;;      Temps:          0       0       0       0       0       0       0
 10605 ;;      Totals:         0       0       0       0       0       0       0
 10606 ;;Total ram usage:        0 bytes
 10607 ;; Hardware stack levels used:    1
 10608 ;; Hardware stack levels required when called:    7
 10609 ;; This function calls:
 10610 ;;		Nothing
 10611 ;; This function is called by:
 10612 ;;		_SYSTEM_Initialize
 10613 ;; This function uses a non-reentrant model
 10614 ;;
 10615                           
 10616                           	psect	text38
 10617  00548E                     __ptext38:
 10618                           	opt stack 0
 10619  00548E                     _EUSART1_Initialize:
 10620                           	opt stack 22
 10621                           
 10622                           ;eusart1.c: 60: BAUDCON1 = 0x08;
 10623                           
 10624                           ;incstack = 0
 10625  00548E  0E08               	movlw	8
 10626  005490  6EB8               	movwf	4024,c	;volatile
 10627                           
 10628                           ;eusart1.c: 63: RCSTA1 = 0x80;
 10629  005492  0E80               	movlw	128
 10630  005494  6EAB               	movwf	4011,c	;volatile
 10631                           
 10632                           ;eusart1.c: 66: TXSTA1 = 0x24;
 10633  005496  0E24               	movlw	36
 10634  005498  6EAC               	movwf	4012,c	;volatile
 10635                           
 10636                           ;eusart1.c: 69: SPBRG1 = 0xA0;
 10637  00549A  0EA0               	movlw	160
 10638  00549C  6EAF               	movwf	4015,c	;volatile
 10639                           
 10640                           ;eusart1.c: 72: SPBRGH1 = 0x01;
 10641  00549E  0E01               	movlw	1
 10642  0054A0  6EB0               	movwf	4016,c	;volatile
 10643  0054A2  0012               	return		;funcret
 10644  0054A4                     __end_of_EUSART1_Initialize:
 10645                           	opt stack 0
 10646                           tosu	equ	0xFFF
 10647                           tosh	equ	0xFFE
 10648                           tosl	equ	0xFFD
 10649                           pclath	equ	0xFFA
 10650                           tblptru	equ	0xFF8
 10651                           tblptrh	equ	0xFF7
 10652                           tblptrl	equ	0xFF6
 10653                           tablat	equ	0xFF5
 10654                           prodh	equ	0xFF4
 10655                           prodl	equ	0xFF3
 10656                           intcon	equ	0xFF2
 10657                           intcon2	equ	0xFF1
 10658                           intcon3	equ	0xFF0
 10659                           postinc0	equ	0xFEE
 10660                           wreg	equ	0xFE8
 10661                           postdec1	equ	0xFE5
 10662                           fsr1l	equ	0xFE1
 10663                           indf2	equ	0xFDF
 10664                           postinc2	equ	0xFDE
 10665                           postdec2	equ	0xFDD
 10666                           fsr2h	equ	0xFDA
 10667                           fsr2l	equ	0xFD9
 10668                           status	equ	0xFD8
 10669                           
 10670 ;; *************** function _INTERRUPT_InterruptManager *****************
 10671 ;; Defined at:
 10672 ;;		line 10 in file "mcc_generated_files/interrupt_manager.c"
 10673 ;; Parameters:    Size  Location     Type
 10674 ;;		None
 10675 ;; Auto vars:     Size  Location     Type
 10676 ;;		None
 10677 ;; Return value:  Size  Location     Type
 10678 ;;                  1    wreg      void 
 10679 ;; Registers used:
 10680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10681 ;; Tracked objects:
 10682 ;;		On entry : 0/0
 10683 ;;		On exit  : 0/0
 10684 ;;		Unchanged: 0/0
 10685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10686 ;;      Params:         0       0       0       0       0       0       0
 10687 ;;      Locals:         0       0       0       0       0       0       0
 10688 ;;      Temps:          0      14       0       0       0       0       0
 10689 ;;      Totals:         0      14       0       0       0       0       0
 10690 ;;Total ram usage:       14 bytes
 10691 ;; Hardware stack levels used:    1
 10692 ;; Hardware stack levels required when called:    6
 10693 ;; This function calls:
 10694 ;;		_INT0_ISR
 10695 ;;		_INT1_ISR
 10696 ;;		_TMR0_ISR
 10697 ;; This function is called by:
 10698 ;;		Interrupt level 2
 10699 ;; This function uses a non-reentrant model
 10700 ;;
 10701                           
 10702                           	psect	intcode
 10703  000008                     __pintcode:
 10704                           	opt stack 0
 10705  000008                     _INTERRUPT_InterruptManager:
 10706                           	opt stack 19
 10707                           
 10708                           ;incstack = 0
 10709  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10710  00000A  CFFA F082          	movff	pclath,??_INTERRUPT_InterruptManager
 10711  00000E  CFFB F083          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 10712  000012  CFE9 F084          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 10713  000016  CFEA F085          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 10714  00001A  CFE1 F086          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 10715  00001E  CFE2 F087          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 10716  000022  CFD9 F088          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 10717  000026  CFDA F089          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 10718  00002A  CFF3 F08A          	movff	prodl,??_INTERRUPT_InterruptManager+8
 10719  00002E  CFF4 F08B          	movff	prodh,??_INTERRUPT_InterruptManager+9
 10720  000032  CFF6 F08C          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 10721  000036  CFF7 F08D          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 10722  00003A  CFF8 F08E          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 10723  00003E  CFF5 F08F          	movff	tablat,??_INTERRUPT_InterruptManager+13
 10724                           
 10725                           ;interrupt_manager.c: 13: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 10726  000042  B6F0               	btfsc	intcon3,3,c	;volatile
 10727  000044  A0F0               	btfss	intcon3,0,c	;volatile
 10728  000046  D003               	goto	i2l107
 10729                           
 10730                           ;interrupt_manager.c: 14: {
 10731                           ;interrupt_manager.c: 15: INT1_ISR();
 10732  000048  EC97  F027         	call	_INT1_ISR	;wreg free
 10733                           
 10734                           ;interrupt_manager.c: 16: }
 10735  00004C  D00B               	goto	i2l113
 10736  00004E                     i2l107:
 10737                           
 10738                           ;interrupt_manager.c: 17: else if(INTCONbits.INT0IE == 1 && INTCONbits.INT0IF == 1)
 10739  00004E  B8F2               	btfsc	intcon,4,c	;volatile
 10740  000050  A2F2               	btfss	intcon,1,c	;volatile
 10741  000052  D003               	goto	i2l109
 10742                           
 10743                           ;interrupt_manager.c: 18: {
 10744                           ;interrupt_manager.c: 19: INT0_ISR();
 10745  000054  EC52  F021         	call	_INT0_ISR	;wreg free
 10746                           
 10747                           ;interrupt_manager.c: 20: }
 10748  000058  D005               	goto	i2l113
 10749  00005A                     i2l109:
 10750                           
 10751                           ;interrupt_manager.c: 21: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 10752  00005A  BAF2               	btfsc	intcon,5,c	;volatile
 10753  00005C  A4F2               	btfss	intcon,2,c	;volatile
 10754  00005E  D002               	goto	i2l113
 10755                           
 10756                           ;interrupt_manager.c: 22: {
 10757                           ;interrupt_manager.c: 23: TMR0_ISR();
 10758  000060  ECB4  F029         	call	_TMR0_ISR	;wreg free
 10759  000064                     i2l113:
 10760  000064  C08F  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 10761  000068  C08E  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 10762  00006C  C08D  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 10763  000070  C08C  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 10764  000074  C08B  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 10765  000078  C08A  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 10766  00007C  C089  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 10767  000080  C088  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 10768  000084  C087  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 10769  000088  C086  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 10770  00008C  C085  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 10771  000090  C084  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 10772  000094  C083  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 10773  000098  C082  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 10774  00009C  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10775  00009E  0011               	retfie		f
 10776  0000A0                     __end_of_INTERRUPT_InterruptManager:
 10777                           	opt stack 0
 10778                           tosu	equ	0xFFF
 10779                           tosh	equ	0xFFE
 10780                           tosl	equ	0xFFD
 10781                           pclatu	equ	0xFFB
 10782                           pclath	equ	0xFFA
 10783                           tblptru	equ	0xFF8
 10784                           tblptrh	equ	0xFF7
 10785                           tblptrl	equ	0xFF6
 10786                           tablat	equ	0xFF5
 10787                           prodh	equ	0xFF4
 10788                           prodl	equ	0xFF3
 10789                           intcon	equ	0xFF2
 10790                           intcon2	equ	0xFF1
 10791                           intcon3	equ	0xFF0
 10792                           postinc0	equ	0xFEE
 10793                           fsr0h	equ	0xFEA
 10794                           fsr0l	equ	0xFE9
 10795                           wreg	equ	0xFE8
 10796                           postdec1	equ	0xFE5
 10797                           fsr1h	equ	0xFE2
 10798                           fsr1l	equ	0xFE1
 10799                           indf2	equ	0xFDF
 10800                           postinc2	equ	0xFDE
 10801                           postdec2	equ	0xFDD
 10802                           fsr2h	equ	0xFDA
 10803                           fsr2l	equ	0xFD9
 10804                           status	equ	0xFD8
 10805                           
 10806 ;; *************** function _TMR0_ISR *****************
 10807 ;; Defined at:
 10808 ;;		line 92 in file "mcc_generated_files/tmr0.c"
 10809 ;; Parameters:    Size  Location     Type
 10810 ;;		None
 10811 ;; Auto vars:     Size  Location     Type
 10812 ;;		None
 10813 ;; Return value:  Size  Location     Type
 10814 ;;                  1    wreg      void 
 10815 ;; Registers used:
 10816 ;;		wreg, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 10817 ;; Tracked objects:
 10818 ;;		On entry : 0/0
 10819 ;;		On exit  : 0/0
 10820 ;;		Unchanged: 0/0
 10821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10822 ;;      Params:         0       0       0       0       0       0       0
 10823 ;;      Locals:         0       0       0       0       0       0       0
 10824 ;;      Temps:          0       0       0       0       0       0       0
 10825 ;;      Totals:         0       0       0       0       0       0       0
 10826 ;;Total ram usage:        0 bytes
 10827 ;; Hardware stack levels used:    1
 10828 ;; Hardware stack levels required when called:    2
 10829 ;; This function calls:
 10830 ;;		Absolute function
 10831 ;;		_TMR0_DefaultInterruptHandler
 10832 ;; This function is called by:
 10833 ;;		_INTERRUPT_InterruptManager
 10834 ;; This function uses a non-reentrant model
 10835 ;;
 10836                           
 10837                           	psect	text40
 10838  005368                     __ptext40:
 10839                           	opt stack 0
 10840  005368                     _TMR0_ISR:
 10841                           	opt stack 22
 10842                           
 10843                           ;tmr0.c: 95: INTCONbits.TMR0IF = 0;
 10844                           
 10845                           ;incstack = 0
 10846  005368  94F2               	bcf	intcon,2,c	;volatile
 10847                           
 10848                           ;tmr0.c: 99: TMR0H = timer0ReloadVal >> 8;
 10849  00536A  505D               	movf	_timer0ReloadVal+1,w,c	;volatile
 10850  00536C  6ED7               	movwf	4055,c	;volatile
 10851                           
 10852                           ;tmr0.c: 100: TMR0L = (uint8_t) timer0ReloadVal;
 10853  00536E  C05C  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 10854                           
 10855                           ;tmr0.c: 102: if(TMR0_InterruptHandler)
 10856  005372  0100               	movlb	0	; () banked
 10857  005374  51CE               	movf	_TMR0_InterruptHandler& (0+255),w,b
 10858  005376  0100               	movlb	0	; () banked
 10859  005378  11CF               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 10860  00537A  B4D8               	btfsc	status,2,c
 10861  00537C  0012               	return	
 10862                           
 10863                           ; BSR set to: 0
 10864                           ;tmr0.c: 103: {
 10865                           ;tmr0.c: 104: TMR0_InterruptHandler();
 10866  00537E  D801               	call	i2u1692_48
 10867  005380  0012               	return	
 10868  005382                     i2u1692_48:
 10869  005382  0005               	push	
 10870  005384  0100               	movlb	0	; () banked
 10871  005386  6EFA               	movwf	pclath,c
 10872  005388  51CE               	movf	_TMR0_InterruptHandler& (0+255),w,b
 10873  00538A  6EFD               	movwf	tosl,c
 10874  00538C  51CF               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 10875  00538E  6EFE               	movwf	tosh,c
 10876  005390  50F8               	movf	tblptru,w,c
 10877  005392  6EFF               	movwf	tosu,c
 10878  005394  50FA               	movf	pclath,w,c
 10879  005396  0012               	return		;indir
 10880  005398                     __end_of_TMR0_ISR:
 10881                           	opt stack 0
 10882                           tosu	equ	0xFFF
 10883                           tosh	equ	0xFFE
 10884                           tosl	equ	0xFFD
 10885                           pclatu	equ	0xFFB
 10886                           pclath	equ	0xFFA
 10887                           tblptru	equ	0xFF8
 10888                           tblptrh	equ	0xFF7
 10889                           tblptrl	equ	0xFF6
 10890                           tablat	equ	0xFF5
 10891                           prodh	equ	0xFF4
 10892                           prodl	equ	0xFF3
 10893                           intcon	equ	0xFF2
 10894                           intcon2	equ	0xFF1
 10895                           intcon3	equ	0xFF0
 10896                           postinc0	equ	0xFEE
 10897                           fsr0h	equ	0xFEA
 10898                           fsr0l	equ	0xFE9
 10899                           wreg	equ	0xFE8
 10900                           postdec1	equ	0xFE5
 10901                           fsr1h	equ	0xFE2
 10902                           fsr1l	equ	0xFE1
 10903                           indf2	equ	0xFDF
 10904                           postinc2	equ	0xFDE
 10905                           postdec2	equ	0xFDD
 10906                           fsr2h	equ	0xFDA
 10907                           fsr2l	equ	0xFD9
 10908                           status	equ	0xFD8
 10909                           
 10910 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 10911 ;; Defined at:
 10912 ;;		line 113 in file "mcc_generated_files/tmr0.c"
 10913 ;; Parameters:    Size  Location     Type
 10914 ;;		None
 10915 ;; Auto vars:     Size  Location     Type
 10916 ;;		None
 10917 ;; Return value:  Size  Location     Type
 10918 ;;                  1    wreg      void 
 10919 ;; Registers used:
 10920 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10921 ;; Tracked objects:
 10922 ;;		On entry : 0/0
 10923 ;;		On exit  : 0/0
 10924 ;;		Unchanged: 0/0
 10925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10926 ;;      Params:         0       0       0       0       0       0       0
 10927 ;;      Locals:         0       0       0       0       0       0       0
 10928 ;;      Temps:          1       0       0       0       0       0       0
 10929 ;;      Totals:         1       0       0       0       0       0       0
 10930 ;;Total ram usage:        1 bytes
 10931 ;; Hardware stack levels used:    1
 10932 ;; Hardware stack levels required when called:    1
 10933 ;; This function calls:
 10934 ;;		_SetRange
 10935 ;; This function is called by:
 10936 ;;		_TMR0_Initialize
 10937 ;;		_TMR0_ISR
 10938 ;; This function uses a non-reentrant model
 10939 ;;
 10940                           
 10941                           	psect	text41
 10942  00515E                     __ptext41:
 10943                           	opt stack 0
 10944  00515E                     _TMR0_DefaultInterruptHandler:
 10945                           	opt stack 22
 10946                           
 10947                           ;tmr0.c: 116: if (cal_mode == 0)
 10948                           
 10949                           ;incstack = 0
 10950  00515E  505B               	movf	_cal_mode,w,c
 10951  005160  A4D8               	btfss	status,2,c
 10952  005162  D00F               	goto	i2l175
 10953                           
 10954                           ;tmr0.c: 117: {
 10955                           ;tmr0.c: 119: do { LATCbits.LATC7 = ~LATCbits.LATC7; } while(0);
 10956  005164  AE8B               	btfss	3979,7,c	;volatile
 10957  005166  D002               	goto	i2u712_40
 10958  005168  0E01               	movlw	1
 10959  00516A  D001               	goto	i2u712_46
 10960  00516C                     i2u712_40:
 10961  00516C  0E00               	movlw	0
 10962  00516E                     i2u712_46:
 10963  00516E  0AFF               	xorlw	255
 10964  005170  6E0C               	movwf	??_TMR0_DefaultInterruptHandler& (0+255),c
 10965  005172  320C               	rrcf	??_TMR0_DefaultInterruptHandler,f,c
 10966  005174  320C               	rrcf	??_TMR0_DefaultInterruptHandler,f,c
 10967  005176  508B               	movf	3979,w,c	;volatile
 10968  005178  180C               	xorwf	??_TMR0_DefaultInterruptHandler,w,c
 10969  00517A  0B7F               	andlw	-129
 10970  00517C  180C               	xorwf	??_TMR0_DefaultInterruptHandler,w,c
 10971  00517E  6E8B               	movwf	3979,c	;volatile
 10972                           
 10973                           ;tmr0.c: 120: }
 10974  005180  D001               	goto	i2l5202
 10975  005182                     i2l175:
 10976  005182  9E8B               	bcf	3979,7,c	;volatile
 10977  005184                     i2l5202:
 10978                           
 10979                           ;tmr0.c: 125: }
 10980                           ;tmr0.c: 128: if (auto_range == 1)
 10981  005184  0100               	movlb	0	; () banked
 10982  005186  05CC               	decf	_auto_range& (0+255),w,b
 10983  005188  A4D8               	btfss	status,2,c
 10984  00518A  0012               	return	
 10985                           
 10986                           ; BSR set to: 0
 10987                           ;tmr0.c: 129: {
 10988                           ;tmr0.c: 130: if (range < 5)
 10989  00518C  0E05               	movlw	5
 10990  00518E  0100               	movlb	0	; () banked
 10991  005190  61CD               	cpfslt	_range& (0+255),b
 10992  005192  0012               	return	
 10993                           
 10994                           ; BSR set to: 0
 10995                           ;tmr0.c: 131: {
 10996                           ;tmr0.c: 132: range += 1;
 10997  005194  0100               	movlb	0	; () banked
 10998  005196  2BCD               	incf	_range& (0+255),f,b
 10999                           
 11000                           ; BSR set to: 0
 11001                           ;tmr0.c: 133: SetRange(range);
 11002  005198  0100               	movlb	0	; () banked
 11003  00519A  51CD               	movf	_range& (0+255),w,b
 11004  00519C  EC16  F01B         	call	_SetRange
 11005  0051A0  0012               	return	
 11006  0051A2                     __end_of_TMR0_DefaultInterruptHandler:
 11007                           	opt stack 0
 11008                           tosu	equ	0xFFF
 11009                           tosh	equ	0xFFE
 11010                           tosl	equ	0xFFD
 11011                           pclatu	equ	0xFFB
 11012                           pclath	equ	0xFFA
 11013                           tblptru	equ	0xFF8
 11014                           tblptrh	equ	0xFF7
 11015                           tblptrl	equ	0xFF6
 11016                           tablat	equ	0xFF5
 11017                           prodh	equ	0xFF4
 11018                           prodl	equ	0xFF3
 11019                           intcon	equ	0xFF2
 11020                           intcon2	equ	0xFF1
 11021                           intcon3	equ	0xFF0
 11022                           postinc0	equ	0xFEE
 11023                           fsr0h	equ	0xFEA
 11024                           fsr0l	equ	0xFE9
 11025                           wreg	equ	0xFE8
 11026                           postdec1	equ	0xFE5
 11027                           fsr1h	equ	0xFE2
 11028                           fsr1l	equ	0xFE1
 11029                           indf2	equ	0xFDF
 11030                           postinc2	equ	0xFDE
 11031                           postdec2	equ	0xFDD
 11032                           fsr2h	equ	0xFDA
 11033                           fsr2l	equ	0xFD9
 11034                           status	equ	0xFD8
 11035                           
 11036 ;; *************** function _INT1_ISR *****************
 11037 ;; Defined at:
 11038 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 11039 ;; Parameters:    Size  Location     Type
 11040 ;;		None
 11041 ;; Auto vars:     Size  Location     Type
 11042 ;;		None
 11043 ;; Return value:  Size  Location     Type
 11044 ;;                  1    wreg      void 
 11045 ;; Registers used:
 11046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11047 ;; Tracked objects:
 11048 ;;		On entry : 0/0
 11049 ;;		On exit  : 0/0
 11050 ;;		Unchanged: 0/0
 11051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11052 ;;      Params:         0       0       0       0       0       0       0
 11053 ;;      Locals:         0       0       0       0       0       0       0
 11054 ;;      Temps:          0       0       0       0       0       0       0
 11055 ;;      Totals:         0       0       0       0       0       0       0
 11056 ;;Total ram usage:        0 bytes
 11057 ;; Hardware stack levels used:    1
 11058 ;; Hardware stack levels required when called:    5
 11059 ;; This function calls:
 11060 ;;		_SetRange
 11061 ;;		_printf
 11062 ;; This function is called by:
 11063 ;;		_INTERRUPT_InterruptManager
 11064 ;; This function uses a non-reentrant model
 11065 ;;
 11066                           
 11067                           	psect	text42
 11068  004F2E                     __ptext42:
 11069                           	opt stack 0
 11070  004F2E                     _INT1_ISR:
 11071                           	opt stack 19
 11072                           
 11073                           ;ext_int.c: 61: if (auto_range == 1)
 11074                           
 11075                           ;incstack = 0
 11076  004F2E  0100               	movlb	0	; () banked
 11077  004F30  05CC               	decf	_auto_range& (0+255),w,b
 11078  004F32  A4D8               	btfss	status,2,c
 11079  004F34  D005               	goto	i2l9902
 11080                           
 11081                           ; BSR set to: 0
 11082                           ;ext_int.c: 62: {
 11083                           ;ext_int.c: 63: stored_range = range;
 11084  004F36  C0CD  F0B8         	movff	_range,_stored_range
 11085                           
 11086                           ; BSR set to: 0
 11087                           ;ext_int.c: 64: auto_range = 0;
 11088  004F3A  0E00               	movlw	0
 11089  004F3C  0100               	movlb	0	; () banked
 11090  004F3E  6FCC               	movwf	_auto_range& (0+255),b
 11091  004F40                     i2l9902:
 11092                           
 11093                           ; BSR set to: 0
 11094                           ;ext_int.c: 65: }
 11095                           ;ext_int.c: 68: if (range < 5)
 11096  004F40  0E05               	movlw	5
 11097  004F42  0100               	movlb	0	; () banked
 11098  004F44  61CD               	cpfslt	_range& (0+255),b
 11099  004F46  D003               	goto	i2l9906
 11100                           
 11101                           ; BSR set to: 0
 11102                           ;ext_int.c: 69: {
 11103                           ;ext_int.c: 70: range += 1;
 11104  004F48  0100               	movlb	0	; () banked
 11105  004F4A  2BCD               	incf	_range& (0+255),f,b
 11106                           
 11107                           ;ext_int.c: 71: }
 11108  004F4C  D003               	goto	i2l9908
 11109  004F4E                     i2l9906:
 11110                           
 11111                           ; BSR set to: 0
 11112                           ;ext_int.c: 72: else
 11113                           ;ext_int.c: 74: {
 11114                           ;ext_int.c: 75: range -= (5 - 2);
 11115  004F4E  0E03               	movlw	3
 11116  004F50  0100               	movlb	0	; () banked
 11117  004F52  5FCD               	subwf	_range& (0+255),f,b
 11118  004F54                     i2l9908:
 11119                           
 11120                           ; BSR set to: 0
 11121                           ;ext_int.c: 76: }
 11122                           ;ext_int.c: 80: if (auto_range == 0 && range == stored_range)
 11123  004F54  0100               	movlb	0	; () banked
 11124  004F56  51CC               	movf	_auto_range& (0+255),w,b
 11125  004F58  A4D8               	btfss	status,2,c
 11126  004F5A  D009               	goto	i2l9914
 11127                           
 11128                           ; BSR set to: 0
 11129  004F5C  0100               	movlb	0	; () banked
 11130  004F5E  51B8               	movf	_stored_range& (0+255),w,b
 11131  004F60  0100               	movlb	0	; () banked
 11132  004F62  19CD               	xorwf	_range& (0+255),w,b
 11133  004F64  A4D8               	btfss	status,2,c
 11134  004F66  D003               	goto	i2l9914
 11135                           
 11136                           ; BSR set to: 0
 11137                           ;ext_int.c: 81: {
 11138                           ;ext_int.c: 82: auto_range = 1;
 11139  004F68  0E01               	movlw	1
 11140  004F6A  0100               	movlb	0	; () banked
 11141  004F6C  6FCC               	movwf	_auto_range& (0+255),b
 11142  004F6E                     i2l9914:
 11143                           
 11144                           ; BSR set to: 0
 11145                           ;ext_int.c: 83: }
 11146                           ;ext_int.c: 86: printf("\r\nSetting range = %d\r\n", range);
 11147  004F6E  0EBB               	movlw	low STR_1
 11148  004F70  0100               	movlb	0	; () banked
 11149  004F72  6F77               	movwf	printf@f& (0+255),b
 11150  004F74  0E7F               	movlw	high STR_1
 11151  004F76  0100               	movlb	0	; () banked
 11152  004F78  6F78               	movwf	(printf@f+1)& (0+255),b
 11153  004F7A  C0CD  F079         	movff	_range,?_printf+2
 11154  004F7E  0100               	movlb	0	; () banked
 11155  004F80  6B7A               	clrf	(?_printf+3)& (0+255),b
 11156  004F82  EC69  F029         	call	_printf	;wreg free
 11157                           
 11158                           ;ext_int.c: 88: SetRange(range);
 11159  004F86  0100               	movlb	0	; () banked
 11160  004F88  51CD               	movf	_range& (0+255),w,b
 11161  004F8A  EC16  F01B         	call	_SetRange
 11162                           
 11163                           ;ext_int.c: 92: (INTCON3bits.INT1IF = 0);
 11164  004F8E  90F0               	bcf	intcon3,0,c	;volatile
 11165  004F90  0012               	return		;funcret
 11166  004F92                     __end_of_INT1_ISR:
 11167                           	opt stack 0
 11168                           tosu	equ	0xFFF
 11169                           tosh	equ	0xFFE
 11170                           tosl	equ	0xFFD
 11171                           pclatu	equ	0xFFB
 11172                           pclath	equ	0xFFA
 11173                           tblptru	equ	0xFF8
 11174                           tblptrh	equ	0xFF7
 11175                           tblptrl	equ	0xFF6
 11176                           tablat	equ	0xFF5
 11177                           prodh	equ	0xFF4
 11178                           prodl	equ	0xFF3
 11179                           intcon	equ	0xFF2
 11180                           intcon2	equ	0xFF1
 11181                           intcon3	equ	0xFF0
 11182                           postinc0	equ	0xFEE
 11183                           fsr0h	equ	0xFEA
 11184                           fsr0l	equ	0xFE9
 11185                           wreg	equ	0xFE8
 11186                           postdec1	equ	0xFE5
 11187                           fsr1h	equ	0xFE2
 11188                           fsr1l	equ	0xFE1
 11189                           indf2	equ	0xFDF
 11190                           postinc2	equ	0xFDE
 11191                           postdec2	equ	0xFDD
 11192                           fsr2h	equ	0xFDA
 11193                           fsr2l	equ	0xFD9
 11194                           status	equ	0xFD8
 11195                           
 11196 ;; *************** function _INT0_ISR *****************
 11197 ;; Defined at:
 11198 ;;		line 98 in file "mcc_generated_files/ext_int.c"
 11199 ;; Parameters:    Size  Location     Type
 11200 ;;		None
 11201 ;; Auto vars:     Size  Location     Type
 11202 ;;		None
 11203 ;; Return value:  Size  Location     Type
 11204 ;;                  1    wreg      void 
 11205 ;; Registers used:
 11206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11207 ;; Tracked objects:
 11208 ;;		On entry : 0/0
 11209 ;;		On exit  : 0/0
 11210 ;;		Unchanged: 0/0
 11211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11212 ;;      Params:         0       0       0       0       0       0       0
 11213 ;;      Locals:         0       0       0       0       0       0       0
 11214 ;;      Temps:          0       0       0       0       0       0       0
 11215 ;;      Totals:         0       0       0       0       0       0       0
 11216 ;;Total ram usage:        0 bytes
 11217 ;; Hardware stack levels used:    1
 11218 ;; Hardware stack levels required when called:    5
 11219 ;; This function calls:
 11220 ;;		_SetRange
 11221 ;;		_TMR0_ReadTimer
 11222 ;;		_TMR0_Reload
 11223 ;;		_TMR0_StopTimer
 11224 ;;		___lwtoft
 11225 ;;		_printf
 11226 ;;		i2_TMR0_StartTimer
 11227 ;;		i2___ftadd
 11228 ;;		i2___ftdiv
 11229 ;;		i2___ftmul
 11230 ;;		i2___wmul
 11231 ;; This function is called by:
 11232 ;;		_INTERRUPT_InterruptManager
 11233 ;; This function uses a non-reentrant model
 11234 ;;
 11235                           
 11236                           	psect	text43
 11237  0042A4                     __ptext43:
 11238                           	opt stack 0
 11239  0042A4                     _INT0_ISR:
 11240                           	opt stack 19
 11241                           
 11242                           ;ext_int.c: 100: if (cal_mode == 1)
 11243                           
 11244                           ;incstack = 0
 11245  0042A4  045B               	decf	_cal_mode,w,c
 11246  0042A6  A4D8               	btfss	status,2,c
 11247  0042A8  D002               	goto	i2l9922
 11248                           
 11249                           ;ext_int.c: 101: {
 11250                           ;ext_int.c: 102: do { LATCbits.LATC7 = 0; } while(0);
 11251  0042AA  9E8B               	bcf	3979,7,c	;volatile
 11252                           
 11253                           ;ext_int.c: 103: return;
 11254  0042AC  0012               	return	
 11255  0042AE                     i2l9922:
 11256                           
 11257                           ;ext_int.c: 104: }
 11258                           ;ext_int.c: 107: TMR0_StopTimer();
 11259  0042AE  EC95  F02A         	call	_TMR0_StopTimer	;wreg free
 11260                           
 11261                           ;ext_int.c: 108: reading = TMR0_ReadTimer();
 11262  0042B2  ECF2  F028         	call	_TMR0_ReadTimer	;wreg free
 11263  0042B6  C001  F0B6         	movff	?_TMR0_ReadTimer,_reading
 11264  0042BA  C002  F0B7         	movff	?_TMR0_ReadTimer+1,_reading+1
 11265                           
 11266                           ;ext_int.c: 111: do { LATCbits.LATC7 = 1; } while(0);
 11267  0042BE  8E8B               	bsf	3979,7,c	;volatile
 11268                           
 11269                           ;ext_int.c: 115: result = cal_current[range - 1] * ((float)reading - 27) / 3.01004;
 11270  0042C0  0E00               	movlw	0
 11271  0042C2  6E12               	movwf	i2___wmul@multiplicand+1,c
 11272  0042C4  0E03               	movlw	3
 11273  0042C6  6E11               	movwf	i2___wmul@multiplicand,c
 11274  0042C8  0EFF               	movlw	255
 11275  0042CA  0100               	movlb	0	; () banked
 11276  0042CC  25CD               	addwf	_range& (0+255),w,b
 11277  0042CE  6E0F               	movwf	i2___wmul@multiplier,c
 11278  0042D0  6A10               	clrf	i2___wmul@multiplier+1,c
 11279  0042D2  0EFF               	movlw	255
 11280  0042D4  2210               	addwfc	i2___wmul@multiplier+1,f,c
 11281  0042D6  ECF4  F029         	call	i2___wmul	;wreg free
 11282  0042DA  0E6D               	movlw	low _cal_current
 11283  0042DC  240F               	addwf	?i2___wmul,w,c
 11284  0042DE  6EF6               	movwf	tblptrl,c
 11285  0042E0  0E7F               	movlw	high _cal_current
 11286  0042E2  2010               	addwfc	?i2___wmul+1,w,c
 11287  0042E4  6EF7               	movwf	tblptrh,c
 11288  0042E6                     	if	0	;There are less than 3 active tblptr bytes
 11289  0042E6                     	endif
 11290  0042E6  0009               	tblrd		*+
 11291  0042E8  CFF5 F024          	movff	tablat,i2___ftmul@f2
 11292  0042EC  0009               	tblrd		*+
 11293  0042EE  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 11294  0042F2  000A               	tblrd		*-
 11295  0042F4  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 11296  0042F8  0E00               	movlw	0
 11297  0042FA  6E18               	movwf	i2___ftadd@f2,c
 11298  0042FC  0ED8               	movlw	216
 11299  0042FE  6E19               	movwf	i2___ftadd@f2+1,c
 11300  004300  0EC1               	movlw	193
 11301  004302  6E1A               	movwf	i2___ftadd@f2+2,c
 11302  004304  C0B6  F009         	movff	_reading,___lwtoft@c
 11303  004308  C0B7  F00A         	movff	_reading+1,___lwtoft@c+1
 11304  00430C  EC19  F02A         	call	___lwtoft	;wreg free
 11305  004310  C009  F015         	movff	?___lwtoft,i2___ftadd@f1
 11306  004314  C00A  F016         	movff	?___lwtoft+1,i2___ftadd@f1+1
 11307  004318  C00B  F017         	movff	?___lwtoft+2,i2___ftadd@f1+2
 11308  00431C  EC40  F01A         	call	i2___ftadd	;wreg free
 11309  004320  C015  F021         	movff	?i2___ftadd,i2___ftmul@f1
 11310  004324  C016  F022         	movff	?i2___ftadd+1,i2___ftmul@f1+1
 11311  004328  C017  F023         	movff	?i2___ftadd+2,i2___ftmul@f1+2
 11312  00432C  EC69  F022         	call	i2___ftmul	;wreg free
 11313  004330  C021  F030         	movff	?i2___ftmul,i2___ftdiv@f1
 11314  004334  C022  F031         	movff	?i2___ftmul+1,i2___ftdiv@f1+1
 11315  004338  C023  F032         	movff	?i2___ftmul+2,i2___ftdiv@f1+2
 11316  00433C  0EA4               	movlw	164
 11317  00433E  6E33               	movwf	i2___ftdiv@f2,c
 11318  004340  0E40               	movlw	64
 11319  004342  6E34               	movwf	i2___ftdiv@f2+1,c
 11320  004344  0E40               	movlw	64
 11321  004346  6E35               	movwf	i2___ftdiv@f2+2,c
 11322  004348  EC5D  F023         	call	i2___ftdiv	;wreg free
 11323  00434C  C030  F058         	movff	?i2___ftdiv,_result
 11324  004350  C031  F059         	movff	?i2___ftdiv+1,_result+1
 11325  004354  C032  F05A         	movff	?i2___ftdiv+2,_result+2
 11326                           
 11327                           ;ext_int.c: 118: printf("Capacitance: %0.2f pF (Count: %u) - Range: %d (%d)\r\n", result
      +                          , reading, range, auto_range);
 11328  004358  0E86               	movlw	low STR_2
 11329  00435A  0100               	movlb	0	; () banked
 11330  00435C  6F77               	movwf	printf@f& (0+255),b
 11331  00435E  0E7F               	movlw	high STR_2
 11332  004360  0100               	movlb	0	; () banked
 11333  004362  6F78               	movwf	(printf@f+1)& (0+255),b
 11334  004364  C058  F079         	movff	_result,?_printf+2
 11335  004368  C059  F07A         	movff	_result+1,?_printf+3
 11336  00436C  C05A  F07B         	movff	_result+2,?_printf+4
 11337  004370  C0B6  F07C         	movff	_reading,?_printf+5
 11338  004374  C0B7  F07D         	movff	_reading+1,?_printf+6
 11339  004378  C0CD  F07E         	movff	_range,?_printf+7
 11340  00437C  0100               	movlb	0	; () banked
 11341  00437E  6B7F               	clrf	(?_printf+8)& (0+255),b
 11342  004380  C0CC  F080         	movff	_auto_range,?_printf+9
 11343  004384  0100               	movlb	0	; () banked
 11344  004386  6B81               	clrf	(?_printf+10)& (0+255),b
 11345  004388  EC69  F029         	call	_printf	;wreg free
 11346                           
 11347                           ;ext_int.c: 121: if (auto_range == 1)
 11348  00438C  0100               	movlb	0	; () banked
 11349  00438E  05CC               	decf	_auto_range& (0+255),w,b
 11350  004390  A4D8               	btfss	status,2,c
 11351  004392  D012               	goto	i2l9942
 11352                           
 11353                           ; BSR set to: 0
 11354                           ;ext_int.c: 122: {
 11355                           ;ext_int.c: 123: if (reading < 1000 && range > 2)
 11356  004394  0EE8               	movlw	232
 11357  004396  0100               	movlb	0	; () banked
 11358  004398  5DB6               	subwf	_reading& (0+255),w,b
 11359  00439A  0E03               	movlw	3
 11360  00439C  0100               	movlb	0	; () banked
 11361  00439E  59B7               	subwfb	(_reading+1)& (0+255),w,b
 11362  0043A0  B0D8               	btfsc	status,0,c
 11363  0043A2  D00A               	goto	i2l9942
 11364                           
 11365                           ; BSR set to: 0
 11366  0043A4  0E02               	movlw	2
 11367  0043A6  0100               	movlb	0	; () banked
 11368  0043A8  65CD               	cpfsgt	_range& (0+255),b
 11369  0043AA  D006               	goto	i2l9942
 11370                           
 11371                           ; BSR set to: 0
 11372                           ;ext_int.c: 124: {
 11373                           ;ext_int.c: 125: range -= 1;
 11374  0043AC  0100               	movlb	0	; () banked
 11375  0043AE  07CD               	decf	_range& (0+255),f,b
 11376                           
 11377                           ; BSR set to: 0
 11378                           ;ext_int.c: 126: SetRange(range);
 11379  0043B0  0100               	movlb	0	; () banked
 11380  0043B2  51CD               	movf	_range& (0+255),w,b
 11381  0043B4  EC16  F01B         	call	_SetRange
 11382  0043B8                     i2l9942:
 11383                           
 11384                           ;ext_int.c: 127: }
 11385                           ;ext_int.c: 128: }
 11386                           ;ext_int.c: 131: TMR0_Reload();
 11387  0043B8  EC88  F02A         	call	_TMR0_Reload	;wreg free
 11388                           
 11389                           ;ext_int.c: 134: do { LATCbits.LATC7 = 0; } while(0);
 11390  0043BC  9E8B               	bcf	3979,7,c	;volatile
 11391                           
 11392                           ;ext_int.c: 135: TMR0_StartTimer();
 11393  0043BE  EC93  F02A         	call	i2_TMR0_StartTimer	;wreg free
 11394                           
 11395                           ;ext_int.c: 138: (INTCONbits.INT0IF = 0);
 11396  0043C2  92F2               	bcf	intcon,1,c	;volatile
 11397  0043C4  0012               	return		;funcret
 11398  0043C6                     __end_of_INT0_ISR:
 11399                           	opt stack 0
 11400                           tosu	equ	0xFFF
 11401                           tosh	equ	0xFFE
 11402                           tosl	equ	0xFFD
 11403                           pclatu	equ	0xFFB
 11404                           pclath	equ	0xFFA
 11405                           tblptru	equ	0xFF8
 11406                           tblptrh	equ	0xFF7
 11407                           tblptrl	equ	0xFF6
 11408                           tablat	equ	0xFF5
 11409                           prodh	equ	0xFF4
 11410                           prodl	equ	0xFF3
 11411                           intcon	equ	0xFF2
 11412                           intcon2	equ	0xFF1
 11413                           intcon3	equ	0xFF0
 11414                           postinc0	equ	0xFEE
 11415                           fsr0h	equ	0xFEA
 11416                           fsr0l	equ	0xFE9
 11417                           wreg	equ	0xFE8
 11418                           postdec1	equ	0xFE5
 11419                           fsr1h	equ	0xFE2
 11420                           fsr1l	equ	0xFE1
 11421                           indf2	equ	0xFDF
 11422                           postinc2	equ	0xFDE
 11423                           postdec2	equ	0xFDD
 11424                           fsr2h	equ	0xFDA
 11425                           fsr2l	equ	0xFD9
 11426                           status	equ	0xFD8
 11427                           
 11428 ;; *************** function i2___ftdiv *****************
 11429 ;; Defined at:
 11430 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
 11431 ;; Parameters:    Size  Location     Type
 11432 ;;  f1              3   47[COMRAM] float 
 11433 ;;  f2              3   50[COMRAM] float 
 11434 ;; Auto vars:     Size  Location     Type
 11435 ;;  __ftdiv         3   57[COMRAM] float 
 11436 ;;  __ftdiv         1   61[COMRAM] unsigned char 
 11437 ;;  __ftdiv         1   60[COMRAM] unsigned char 
 11438 ;;  __ftdiv         1   56[COMRAM] unsigned char 
 11439 ;; Return value:  Size  Location     Type
 11440 ;;                  3   47[COMRAM] float 
 11441 ;; Registers used:
 11442 ;;		wreg, status,2, status,0, cstack
 11443 ;; Tracked objects:
 11444 ;;		On entry : 0/0
 11445 ;;		On exit  : 0/0
 11446 ;;		Unchanged: 0/0
 11447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11448 ;;      Params:         6       0       0       0       0       0       0
 11449 ;;      Locals:         6       0       0       0       0       0       0
 11450 ;;      Temps:          3       0       0       0       0       0       0
 11451 ;;      Totals:        15       0       0       0       0       0       0
 11452 ;;Total ram usage:       15 bytes
 11453 ;; Hardware stack levels used:    1
 11454 ;; Hardware stack levels required when called:    1
 11455 ;; This function calls:
 11456 ;;		i2___ftpack
 11457 ;; This function is called by:
 11458 ;;		_INT0_ISR
 11459 ;; This function uses a non-reentrant model
 11460 ;;
 11461                           
 11462                           	psect	text44
 11463  0046BA                     __ptext44:
 11464                           	opt stack 0
 11465  0046BA                     i2___ftdiv:
 11466                           	opt stack 22
 11467                           
 11468                           ;incstack = 0
 11469  0046BA  C032  F036         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 11470  0046BE  6A37               	clrf	(??i2___ftdiv+1)& (0+255),c
 11471  0046C0  6A38               	clrf	(??i2___ftdiv+2)& (0+255),c
 11472  0046C2  3431               	rlcf	i2___ftdiv@f1+1,w,c
 11473  0046C4  3636               	rlcf	??i2___ftdiv& (0+255),f,c
 11474  0046C6  E301               	bnc	u805_41
 11475  0046C8  8037               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 11476  0046CA                     u805_41:
 11477  0046CA  5036               	movf	??i2___ftdiv,w,c
 11478  0046CC  6E3D               	movwf	i2___ftdiv@exp,c
 11479  0046CE  503D               	movf	i2___ftdiv@exp,w,c
 11480  0046D0  A4D8               	btfss	status,2,c
 11481  0046D2  D007               	goto	i2l5648
 11482  0046D4  0E00               	movlw	0
 11483  0046D6  6E30               	movwf	?i2___ftdiv,c
 11484  0046D8  0E00               	movlw	0
 11485  0046DA  6E31               	movwf	?i2___ftdiv+1,c
 11486  0046DC  0E00               	movlw	0
 11487  0046DE  6E32               	movwf	?i2___ftdiv+2,c
 11488  0046E0  0012               	return	
 11489  0046E2                     i2l5648:
 11490  0046E2  C035  F036         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 11491  0046E6  6A37               	clrf	(??i2___ftdiv+1)& (0+255),c
 11492  0046E8  6A38               	clrf	(??i2___ftdiv+2)& (0+255),c
 11493  0046EA  3434               	rlcf	i2___ftdiv@f2+1,w,c
 11494  0046EC  3636               	rlcf	??i2___ftdiv& (0+255),f,c
 11495  0046EE  E301               	bnc	u807_41
 11496  0046F0  8037               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 11497  0046F2                     u807_41:
 11498  0046F2  5036               	movf	??i2___ftdiv,w,c
 11499  0046F4  6E3E               	movwf	i2___ftdiv@sign,c
 11500  0046F6  503E               	movf	i2___ftdiv@sign,w,c
 11501  0046F8  A4D8               	btfss	status,2,c
 11502  0046FA  D007               	goto	i2l5654
 11503  0046FC  0E00               	movlw	0
 11504  0046FE  6E30               	movwf	?i2___ftdiv,c
 11505  004700  0E00               	movlw	0
 11506  004702  6E31               	movwf	?i2___ftdiv+1,c
 11507  004704  0E00               	movlw	0
 11508  004706  6E32               	movwf	?i2___ftdiv+2,c
 11509  004708  0012               	return	
 11510  00470A                     i2l5654:
 11511  00470A  0E00               	movlw	0
 11512  00470C  6E3A               	movwf	i2___ftdiv@f3,c
 11513  00470E  0E00               	movlw	0
 11514  004710  6E3B               	movwf	i2___ftdiv@f3+1,c
 11515  004712  0E00               	movlw	0
 11516  004714  6E3C               	movwf	i2___ftdiv@f3+2,c
 11517  004716  503E               	movf	i2___ftdiv@sign,w,c
 11518  004718  0F89               	addlw	137
 11519  00471A  5E3D               	subwf	i2___ftdiv@exp,f,c
 11520  00471C  C032  F03E         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 11521  004720  5035               	movf	i2___ftdiv@f2+2,w,c
 11522  004722  1A3E               	xorwf	i2___ftdiv@sign,f,c
 11523  004724  0E80               	movlw	128
 11524  004726  163E               	andwf	i2___ftdiv@sign,f,c
 11525  004728  8E31               	bsf	i2___ftdiv@f1+1,7,c
 11526  00472A  0EFF               	movlw	255
 11527  00472C  1630               	andwf	i2___ftdiv@f1,f,c
 11528  00472E  0EFF               	movlw	255
 11529  004730  1631               	andwf	i2___ftdiv@f1+1,f,c
 11530  004732  0E00               	movlw	0
 11531  004734  1632               	andwf	i2___ftdiv@f1+2,f,c
 11532  004736  8E34               	bsf	i2___ftdiv@f2+1,7,c
 11533  004738  0EFF               	movlw	255
 11534  00473A  1633               	andwf	i2___ftdiv@f2,f,c
 11535  00473C  0EFF               	movlw	255
 11536  00473E  1634               	andwf	i2___ftdiv@f2+1,f,c
 11537  004740  0E00               	movlw	0
 11538  004742  1635               	andwf	i2___ftdiv@f2+2,f,c
 11539  004744  0E18               	movlw	24
 11540  004746  6E39               	movwf	i2___ftdiv@cntr,c
 11541  004748                     i2l5674:
 11542  004748  90D8               	bcf	status,0,c
 11543  00474A  363A               	rlcf	i2___ftdiv@f3,f,c
 11544  00474C  363B               	rlcf	i2___ftdiv@f3+1,f,c
 11545  00474E  363C               	rlcf	i2___ftdiv@f3+2,f,c
 11546  004750  5033               	movf	i2___ftdiv@f2,w,c
 11547  004752  5C30               	subwf	i2___ftdiv@f1,w,c
 11548  004754  5034               	movf	i2___ftdiv@f2+1,w,c
 11549  004756  5831               	subwfb	i2___ftdiv@f1+1,w,c
 11550  004758  5035               	movf	i2___ftdiv@f2+2,w,c
 11551  00475A  5832               	subwfb	i2___ftdiv@f1+2,w,c
 11552  00475C  A0D8               	btfss	status,0,c
 11553  00475E  D007               	goto	i2l825
 11554  004760  5033               	movf	i2___ftdiv@f2,w,c
 11555  004762  5E30               	subwf	i2___ftdiv@f1,f,c
 11556  004764  5034               	movf	i2___ftdiv@f2+1,w,c
 11557  004766  5A31               	subwfb	i2___ftdiv@f1+1,f,c
 11558  004768  5035               	movf	i2___ftdiv@f2+2,w,c
 11559  00476A  5A32               	subwfb	i2___ftdiv@f1+2,f,c
 11560  00476C  803A               	bsf	i2___ftdiv@f3,0,c
 11561  00476E                     i2l825:
 11562  00476E  90D8               	bcf	status,0,c
 11563  004770  3630               	rlcf	i2___ftdiv@f1,f,c
 11564  004772  3631               	rlcf	i2___ftdiv@f1+1,f,c
 11565  004774  3632               	rlcf	i2___ftdiv@f1+2,f,c
 11566  004776  2E39               	decfsz	i2___ftdiv@cntr,f,c
 11567  004778  D7E7               	goto	i2l5674
 11568  00477A  C03A  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 11569  00477E  C03B  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 11570  004782  C03C  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 11571  004786  C03D  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 11572  00478A  C03E  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 11573  00478E  ECF1  F024         	call	i2___ftpack	;wreg free
 11574  004792  C001  F030         	movff	?i2___ftpack,?i2___ftdiv
 11575  004796  C002  F031         	movff	?i2___ftpack+1,?i2___ftdiv+1
 11576  00479A  C003  F032         	movff	?i2___ftpack+2,?i2___ftdiv+2
 11577  00479E  0012               	return	
 11578  0047A0                     __end_ofi2___ftdiv:
 11579                           	opt stack 0
 11580                           tosu	equ	0xFFF
 11581                           tosh	equ	0xFFE
 11582                           tosl	equ	0xFFD
 11583                           pclatu	equ	0xFFB
 11584                           pclath	equ	0xFFA
 11585                           tblptru	equ	0xFF8
 11586                           tblptrh	equ	0xFF7
 11587                           tblptrl	equ	0xFF6
 11588                           tablat	equ	0xFF5
 11589                           prodh	equ	0xFF4
 11590                           prodl	equ	0xFF3
 11591                           intcon	equ	0xFF2
 11592                           intcon2	equ	0xFF1
 11593                           intcon3	equ	0xFF0
 11594                           postinc0	equ	0xFEE
 11595                           fsr0h	equ	0xFEA
 11596                           fsr0l	equ	0xFE9
 11597                           wreg	equ	0xFE8
 11598                           postdec1	equ	0xFE5
 11599                           fsr1h	equ	0xFE2
 11600                           fsr1l	equ	0xFE1
 11601                           indf2	equ	0xFDF
 11602                           postinc2	equ	0xFDE
 11603                           postdec2	equ	0xFDD
 11604                           fsr2h	equ	0xFDA
 11605                           fsr2l	equ	0xFD9
 11606                           status	equ	0xFD8
 11607                           
 11608 ;; *************** function i2_TMR0_StartTimer *****************
 11609 ;; Defined at:
 11610 ;;		line 51 in file "mcc_generated_files/tmr0.c"
 11611 ;; Parameters:    Size  Location     Type
 11612 ;;		None
 11613 ;; Auto vars:     Size  Location     Type
 11614 ;;		None
 11615 ;; Return value:  Size  Location     Type
 11616 ;;                  1    wreg      void 
 11617 ;; Registers used:
 11618 ;;		None
 11619 ;; Tracked objects:
 11620 ;;		On entry : 0/0
 11621 ;;		On exit  : 0/0
 11622 ;;		Unchanged: 0/0
 11623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11624 ;;      Params:         0       0       0       0       0       0       0
 11625 ;;      Locals:         0       0       0       0       0       0       0
 11626 ;;      Temps:          0       0       0       0       0       0       0
 11627 ;;      Totals:         0       0       0       0       0       0       0
 11628 ;;Total ram usage:        0 bytes
 11629 ;; Hardware stack levels used:    1
 11630 ;; This function calls:
 11631 ;;		Nothing
 11632 ;; This function is called by:
 11633 ;;		_INT0_ISR
 11634 ;; This function uses a non-reentrant model
 11635 ;;
 11636                           
 11637                           	psect	text45
 11638  005526                     __ptext45:
 11639                           	opt stack 0
 11640  005526                     i2_TMR0_StartTimer:
 11641                           	opt stack 23
 11642                           
 11643                           ;tmr0.c: 54: T0CONbits.TMR0ON = 1;
 11644                           
 11645                           ;incstack = 0
 11646  005526  8ED5               	bsf	4053,7,c	;volatile
 11647  005528  0012               	return		;funcret
 11648  00552A                     __end_ofi2_TMR0_StartTimer:
 11649                           	opt stack 0
 11650                           tosu	equ	0xFFF
 11651                           tosh	equ	0xFFE
 11652                           tosl	equ	0xFFD
 11653                           pclatu	equ	0xFFB
 11654                           pclath	equ	0xFFA
 11655                           tblptru	equ	0xFF8
 11656                           tblptrh	equ	0xFF7
 11657                           tblptrl	equ	0xFF6
 11658                           tablat	equ	0xFF5
 11659                           prodh	equ	0xFF4
 11660                           prodl	equ	0xFF3
 11661                           intcon	equ	0xFF2
 11662                           intcon2	equ	0xFF1
 11663                           intcon3	equ	0xFF0
 11664                           postinc0	equ	0xFEE
 11665                           fsr0h	equ	0xFEA
 11666                           fsr0l	equ	0xFE9
 11667                           wreg	equ	0xFE8
 11668                           postdec1	equ	0xFE5
 11669                           fsr1h	equ	0xFE2
 11670                           fsr1l	equ	0xFE1
 11671                           indf2	equ	0xFDF
 11672                           postinc2	equ	0xFDE
 11673                           postdec2	equ	0xFDD
 11674                           fsr2h	equ	0xFDA
 11675                           fsr2l	equ	0xFD9
 11676                           status	equ	0xFD8
 11677                           
 11678 ;; *************** function _printf *****************
 11679 ;; Defined at:
 11680 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\printf.c"
 11681 ;; Parameters:    Size  Location     Type
 11682 ;;  f               2   23[BANK0 ] PTR const unsigned char 
 11683 ;;		 -> STR_2(53), STR_1(23), 
 11684 ;; Auto vars:     Size  Location     Type
 11685 ;;  pb              4   83[COMRAM] struct __prbuf
 11686 ;;  ap              2   81[COMRAM] PTR void [1]
 11687 ;;		 -> ?_sprintf(2), ?_printf(2), 
 11688 ;; Return value:  Size  Location     Type
 11689 ;;                  2   23[BANK0 ] int 
 11690 ;; Registers used:
 11691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11692 ;; Tracked objects:
 11693 ;;		On entry : 0/0
 11694 ;;		On exit  : 0/0
 11695 ;;		Unchanged: 0/0
 11696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11697 ;;      Params:         0      11       0       0       0       0       0
 11698 ;;      Locals:         6       0       0       0       0       0       0
 11699 ;;      Temps:          0       0       0       0       0       0       0
 11700 ;;      Totals:         6      11       0       0       0       0       0
 11701 ;;Total ram usage:       17 bytes
 11702 ;; Hardware stack levels used:    1
 11703 ;; Hardware stack levels required when called:    4
 11704 ;; This function calls:
 11705 ;;		i2__doprnt
 11706 ;; This function is called by:
 11707 ;;		_INT1_ISR
 11708 ;;		_INT0_ISR
 11709 ;; This function uses a non-reentrant model
 11710 ;;
 11711                           
 11712                           	psect	text46
 11713  0052D2                     __ptext46:
 11714                           	opt stack 0
 11715  0052D2                     _printf:
 11716                           	opt stack 19
 11717                           
 11718                           ;incstack = 0
 11719  0052D2  0E00               	movlw	0
 11720  0052D4  6E54               	movwf	printf@pb,c
 11721  0052D6  0E00               	movlw	0
 11722  0052D8  6E55               	movwf	printf@pb+1,c
 11723  0052DA  0E06               	movlw	low i2_putch
 11724  0052DC  6E56               	movwf	printf@pb+2,c
 11725  0052DE  0E55               	movlw	high i2_putch
 11726  0052E0  6E57               	movwf	printf@pb+3,c
 11727  0052E2  0E79               	movlw	low (?_printf+2)
 11728  0052E4  6E52               	movwf	printf@ap,c
 11729  0052E6  0E00               	movlw	high (?_printf+2)
 11730  0052E8  6E53               	movwf	printf@ap+1,c
 11731                           
 11732                           ;	Return value of _printf is never used
 11733  0052EA  0E54               	movlw	low printf@pb
 11734  0052EC  6E46               	movwf	i2__doprnt@pb,c
 11735  0052EE  0E00               	movlw	high printf@pb
 11736  0052F0  6E47               	movwf	i2__doprnt@pb+1,c
 11737  0052F2  C077  F048         	movff	printf@f,i2__doprnt@f
 11738  0052F6  C078  F049         	movff	printf@f+1,i2__doprnt@f+1
 11739  0052FA  0E52               	movlw	low printf@ap
 11740  0052FC  6E4A               	movwf	i2__doprnt@ap,c
 11741  0052FE  0E00               	movlw	high printf@ap
 11742  005300  6E4B               	movwf	i2__doprnt@ap+1,c
 11743  005302  EC88  F009         	call	i2__doprnt	;wreg free
 11744  005306  0012               	return	
 11745  005308                     __end_of_printf:
 11746                           	opt stack 0
 11747                           tosu	equ	0xFFF
 11748                           tosh	equ	0xFFE
 11749                           tosl	equ	0xFFD
 11750                           pclatu	equ	0xFFB
 11751                           pclath	equ	0xFFA
 11752                           tblptru	equ	0xFF8
 11753                           tblptrh	equ	0xFF7
 11754                           tblptrl	equ	0xFF6
 11755                           tablat	equ	0xFF5
 11756                           prodh	equ	0xFF4
 11757                           prodl	equ	0xFF3
 11758                           intcon	equ	0xFF2
 11759                           intcon2	equ	0xFF1
 11760                           intcon3	equ	0xFF0
 11761                           postinc0	equ	0xFEE
 11762                           fsr0h	equ	0xFEA
 11763                           fsr0l	equ	0xFE9
 11764                           wreg	equ	0xFE8
 11765                           postdec1	equ	0xFE5
 11766                           fsr1h	equ	0xFE2
 11767                           fsr1l	equ	0xFE1
 11768                           indf2	equ	0xFDF
 11769                           postinc2	equ	0xFDE
 11770                           postdec2	equ	0xFDD
 11771                           fsr2h	equ	0xFDA
 11772                           fsr2l	equ	0xFD9
 11773                           status	equ	0xFD8
 11774                           
 11775 ;; *************** function i2__doprnt *****************
 11776 ;; Defined at:
 11777 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 11778 ;; Parameters:    Size  Location     Type
 11779 ;;  pb              2   69[COMRAM] PTR struct __prbuf
 11780 ;;		 -> sprintf@pb(4), printf@pb(4), 
 11781 ;;  f               2   71[COMRAM] PTR const unsigned char 
 11782 ;;		 -> STR_6(11), STR_5(11), STR_4(11), STR_3(11), 
 11783 ;;		 -> STR_2(53), STR_1(23), 
 11784 ;;  ap              2   73[COMRAM] PTR PTR void 
 11785 ;;		 -> sprintf@ap(2), printf@ap(2), 
 11786 ;; Auto vars:     Size  Location     Type
 11787 ;;  _doprnt         4    9[BANK0 ] struct .
 11788 ;;  _doprnt         4    5[BANK0 ] unsigned long 
 11789 ;;  _doprnt         3   13[BANK0 ] unsigned long 
 11790 ;;  _doprnt         3    0        PTR const unsigned char 
 11791 ;;  _doprnt         2   20[BANK0 ] int 
 11792 ;;  _doprnt         2   18[BANK0 ] unsigned short 
 11793 ;;  _doprnt         2   16[BANK0 ] int 
 11794 ;;  _doprnt         2    3[BANK0 ] int 
 11795 ;;  _doprnt         2    0        unsigned int 
 11796 ;;  _doprnt         1   22[BANK0 ] char 
 11797 ;;  _doprnt         1    0        unsigned char 
 11798 ;; Return value:  Size  Location     Type
 11799 ;;                  2   69[COMRAM] int 
 11800 ;; Registers used:
 11801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11802 ;; Tracked objects:
 11803 ;;		On entry : 0/0
 11804 ;;		On exit  : 0/0
 11805 ;;		Unchanged: 0/0
 11806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11807 ;;      Params:         6       0       0       0       0       0       0
 11808 ;;      Locals:         0      23       0       0       0       0       0
 11809 ;;      Temps:          6       0       0       0       0       0       0
 11810 ;;      Totals:        12      23       0       0       0       0       0
 11811 ;;Total ram usage:       35 bytes
 11812 ;; Hardware stack levels used:    1
 11813 ;; Hardware stack levels required when called:    3
 11814 ;; This function calls:
 11815 ;;		Absolute function
 11816 ;;		i2___awdiv
 11817 ;;		i2___ftadd
 11818 ;;		i2___ftge
 11819 ;;		i2___ftmul
 11820 ;;		i2___ftneg
 11821 ;;		i2___ftsub
 11822 ;;		i2___fttol
 11823 ;;		i2___lldiv
 11824 ;;		i2___llmod
 11825 ;;		i2___lltoft
 11826 ;;		i2___wmul
 11827 ;;		i2__div_to_l_
 11828 ;;		i2__tdiv_to_l_
 11829 ;;		i2_fround
 11830 ;;		i2_isdigit
 11831 ;;		i2_putch
 11832 ;;		i2_scale
 11833 ;; This function is called by:
 11834 ;;		_printf
 11835 ;; This function uses a non-reentrant model
 11836 ;;
 11837                           
 11838                           	psect	text47
 11839  001310                     __ptext47:
 11840                           	opt stack 0
 11841  001310                     i2__doprnt:
 11842                           	opt stack 19
 11843                           
 11844                           ;doprnt.c: 499: signed char c;
 11845                           ;doprnt.c: 501: int width;
 11846                           ;doprnt.c: 504: int prec;
 11847                           ;doprnt.c: 508: unsigned short flag;
 11848                           ;doprnt.c: 515: char d;
 11849                           ;doprnt.c: 516: double fval;
 11850                           ;doprnt.c: 517: int exp;
 11851                           ;doprnt.c: 523: union {
 11852                           ;doprnt.c: 524: unsigned long vd;
 11853                           ;doprnt.c: 525: double integ;
 11854                           ;doprnt.c: 526: } tmpval;
 11855                           ;doprnt.c: 528: unsigned long val;
 11856                           ;doprnt.c: 529: unsigned len;
 11857                           ;doprnt.c: 530: const char * cp;
 11858                           ;doprnt.c: 536: while(c = *f++) {
 11859                           
 11860                           ;incstack = 0
 11861  001310  EF31  F012         	goto	i2l9488
 11862  001314                     i2l9100:
 11863                           
 11864                           ;doprnt.c: 538: if(c != '%')
 11865  001314  0E25               	movlw	37
 11866  001316  0100               	movlb	0	; () banked
 11867  001318  1976               	xorwf	i2__doprnt@c& (0+255),w,b
 11868  00131A  B4D8               	btfsc	status,2,c
 11869  00131C  D036               	goto	i2l9110
 11870                           
 11871                           ; BSR set to: 0
 11872                           ;doprnt.c: 540: {
 11873                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 11874  00131E  EE20 F002          	lfsr	2,2
 11875  001322  5046               	movf	i2__doprnt@pb,w,c
 11876  001324  26D9               	addwf	fsr2l,f,c
 11877  001326  5047               	movf	i2__doprnt@pb+1,w,c
 11878  001328  22DA               	addwfc	fsr2h,f,c
 11879  00132A  50DE               	movf	postinc2,w,c
 11880  00132C  10DE               	iorwf	postinc2,w,c
 11881  00132E  B4D8               	btfsc	status,2,c
 11882  001330  D015               	goto	i2l9106
 11883                           
 11884                           ; BSR set to: 0
 11885  001332  EE20 F002          	lfsr	2,2
 11886  001336  5046               	movf	i2__doprnt@pb,w,c
 11887  001338  26D9               	addwf	fsr2l,f,c
 11888  00133A  5047               	movf	i2__doprnt@pb+1,w,c
 11889  00133C  22DA               	addwfc	fsr2h,f,c
 11890  00133E  D802               	call	i2u1505_48
 11891  001340  EF31  F012         	goto	i2l9488
 11892  001344                     i2u1505_48:
 11893  001344  0005               	push	
 11894  001346  6EFA               	movwf	pclath,c
 11895  001348  50DE               	movf	postinc2,w,c
 11896  00134A  6EFD               	movwf	tosl,c
 11897  00134C  50DE               	movf	postinc2,w,c
 11898  00134E  6EFE               	movwf	tosh,c
 11899  001350  50F8               	movf	tblptru,w,c
 11900  001352  6EFF               	movwf	tosu,c
 11901  001354  50FA               	movf	pclath,w,c
 11902  001356  0100               	movlb	0	; () banked
 11903  001358  5176               	movf	i2__doprnt@c& (0+255),w,b
 11904  00135A  0012               	return		;indir
 11905  00135C                     i2l9106:
 11906  00135C  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 11907  001360  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 11908  001364  CFDE F04C          	movff	postinc2,??i2__doprnt
 11909  001368  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 11910  00136C  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 11911  001370  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 11912  001374  C076  FFDF         	movff	i2__doprnt@c,indf2
 11913  001378  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 11914  00137C  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 11915  001380  2ADE               	incf	postinc2,f,c
 11916  001382  0E00               	movlw	0
 11917  001384  22DD               	addwfc	postdec2,f,c
 11918                           
 11919                           ;doprnt.c: 542: continue;
 11920  001386  EF31  F012         	goto	i2l9488
 11921  00138A                     i2l9110:
 11922                           
 11923                           ;doprnt.c: 543: }
 11924                           ;doprnt.c: 546: width = 0;
 11925  00138A  0E00               	movlw	0
 11926  00138C  0100               	movlb	0	; () banked
 11927  00138E  6F71               	movwf	(i2__doprnt@width+1)& (0+255),b
 11928  001390  0E00               	movlw	0
 11929  001392  6F70               	movwf	i2__doprnt@width& (0+255),b
 11930                           
 11931                           ;doprnt.c: 548: flag = 0;
 11932  001394  0E00               	movlw	0
 11933  001396  0100               	movlb	0	; () banked
 11934  001398  6F73               	movwf	(i2__doprnt@flag+1)& (0+255),b
 11935  00139A  0E00               	movlw	0
 11936  00139C  6F72               	movwf	i2__doprnt@flag& (0+255),b
 11937                           
 11938                           ; BSR set to: 0
 11939                           ;doprnt.c: 551: switch(*f) {
 11940                           
 11941                           ;doprnt.c: 550: for(;;) {
 11942  00139E  D004               	goto	i2l9116
 11943  0013A0                     i2l9112:
 11944                           
 11945                           ;doprnt.c: 580: flag |= 0x04;
 11946  0013A0  0100               	movlb	0	; () banked
 11947  0013A2  8572               	bsf	i2__doprnt@flag& (0+255),2,b
 11948                           
 11949                           ;doprnt.c: 581: f++;
 11950  0013A4  4A48               	infsnz	i2__doprnt@f,f,c
 11951  0013A6  2A49               	incf	i2__doprnt@f+1,f,c
 11952  0013A8                     i2l9116:
 11953  0013A8  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 11954  0013AC  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 11955  0013B0                     	if	0	;tblptru may be non-zero
 11956  0013B0                     	endif
 11957  0013B0                     	if	0	;tblptru may be non-zero
 11958  0013B0                     	endif
 11959  0013B0  0008               	tblrd		*
 11960  0013B2  50F5               	movf	tablat,w,c
 11961                           
 11962                           ; Switch size 1, requested type "space"
 11963                           ; Number of cases is 1, Range of values is 48 to 48
 11964                           ; switch strategies available:
 11965                           ; Name         Instructions Cycles
 11966                           ; simple_byte            4     3 (average)
 11967                           ;	Chosen strategy is simple_byte
 11968  0013B4  0A30               	xorlw	48	; case 48
 11969  0013B6  B4D8               	btfsc	status,2,c
 11970  0013B8  D7F3               	goto	i2l9112
 11971                           
 11972                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 11973                           
 11974                           ;doprnt.c: 586: }
 11975                           
 11976                           ;doprnt.c: 585: break;
 11977  0013BA  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 11978  0013BE  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 11979  0013C2                     	if	0	;tblptru may be non-zero
 11980  0013C2                     	endif
 11981  0013C2                     	if	0	;tblptru may be non-zero
 11982  0013C2                     	endif
 11983  0013C2  0008               	tblrd		*
 11984  0013C4  50F5               	movf	tablat,w,c
 11985  0013C6  EC2B  F02A         	call	i2_isdigit
 11986  0013CA  A0D8               	btfss	status,0,c
 11987  0013CC  D035               	goto	i2l9130
 11988                           
 11989                           ;doprnt.c: 598: width = 0;
 11990  0013CE  0E00               	movlw	0
 11991  0013D0  0100               	movlb	0	; () banked
 11992  0013D2  6F71               	movwf	(i2__doprnt@width+1)& (0+255),b
 11993  0013D4  0E00               	movlw	0
 11994  0013D6  6F70               	movwf	i2__doprnt@width& (0+255),b
 11995  0013D8                     i2l9122:
 11996                           
 11997                           ;doprnt.c: 600: width *= 10;
 11998  0013D8  C070  F00F         	movff	i2__doprnt@width,i2___wmul@multiplier
 11999  0013DC  C071  F010         	movff	i2__doprnt@width+1,i2___wmul@multiplier+1
 12000  0013E0  0E00               	movlw	0
 12001  0013E2  6E12               	movwf	i2___wmul@multiplicand+1,c
 12002  0013E4  0E0A               	movlw	10
 12003  0013E6  6E11               	movwf	i2___wmul@multiplicand,c
 12004  0013E8  ECF4  F029         	call	i2___wmul	;wreg free
 12005  0013EC  C00F  F070         	movff	?i2___wmul,i2__doprnt@width
 12006  0013F0  C010  F071         	movff	?i2___wmul+1,i2__doprnt@width+1
 12007                           
 12008                           ;doprnt.c: 601: width += *f++ - '0';
 12009  0013F4  0ED0               	movlw	208
 12010  0013F6  6E4C               	movwf	??i2__doprnt& (0+255),c
 12011  0013F8  0EFF               	movlw	255
 12012  0013FA  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 12013  0013FC  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12014  001400  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12015  001404                     	if	0	;tblptru may be non-zero
 12016  001404                     	endif
 12017  001404                     	if	0	;tblptru may be non-zero
 12018  001404                     	endif
 12019  001404  0008               	tblrd		*
 12020  001406  50F5               	movf	tablat,w,c
 12021  001408  6E4E               	movwf	(??i2__doprnt+2)& (0+255),c
 12022  00140A  6A4F               	clrf	(??i2__doprnt+3)& (0+255),c
 12023  00140C  504C               	movf	??i2__doprnt,w,c
 12024  00140E  264E               	addwf	??i2__doprnt+2,f,c
 12025  001410  504D               	movf	??i2__doprnt+1,w,c
 12026  001412  224F               	addwfc	??i2__doprnt+3,f,c
 12027  001414  504E               	movf	??i2__doprnt+2,w,c
 12028  001416  0100               	movlb	0	; () banked
 12029  001418  2770               	addwf	i2__doprnt@width& (0+255),f,b
 12030  00141A  504F               	movf	??i2__doprnt+3,w,c
 12031  00141C  0100               	movlb	0	; () banked
 12032  00141E  2371               	addwfc	(i2__doprnt@width+1)& (0+255),f,b
 12033                           
 12034                           ; BSR set to: 0
 12035  001420  4A48               	infsnz	i2__doprnt@f,f,c
 12036  001422  2A49               	incf	i2__doprnt@f+1,f,c
 12037                           
 12038                           ; BSR set to: 0
 12039                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 12040  001424  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12041  001428  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12042  00142C                     	if	0	;tblptru may be non-zero
 12043  00142C                     	endif
 12044  00142C                     	if	0	;tblptru may be non-zero
 12045  00142C                     	endif
 12046  00142C  0008               	tblrd		*
 12047  00142E  50F5               	movf	tablat,w,c
 12048  001430  EC2B  F02A         	call	i2_isdigit
 12049  001434  B0D8               	btfsc	status,0,c
 12050  001436  D7D0               	goto	i2l9122
 12051  001438                     i2l9130:
 12052                           
 12053                           ;doprnt.c: 608: }
 12054                           ;doprnt.c: 611: if(*f == '.') {
 12055  001438  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12056  00143C  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12057  001440                     	if	0	;tblptru may be non-zero
 12058  001440                     	endif
 12059  001440                     	if	0	;tblptru may be non-zero
 12060  001440                     	endif
 12061  001440  0008               	tblrd		*
 12062  001442  50F5               	movf	tablat,w,c
 12063  001444  0A2E               	xorlw	46
 12064  001446  A4D8               	btfss	status,2,c
 12065  001448  D032               	goto	i2l9142
 12066                           
 12067                           ;doprnt.c: 612: flag |= 0x4000;
 12068  00144A  0100               	movlb	0	; () banked
 12069  00144C  8D73               	bsf	(i2__doprnt@flag+1)& (0+255),6,b
 12070                           
 12071                           ;doprnt.c: 613: f++;
 12072  00144E  4A48               	infsnz	i2__doprnt@f,f,c
 12073  001450  2A49               	incf	i2__doprnt@f+1,f,c
 12074                           
 12075                           ; BSR set to: 0
 12076                           ;doprnt.c: 620: {
 12077                           ;doprnt.c: 621: prec = 0;
 12078  001452  0E00               	movlw	0
 12079  001454  0100               	movlb	0	; () banked
 12080  001456  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 12081  001458  0E00               	movlw	0
 12082  00145A  6F74               	movwf	i2__doprnt@prec& (0+255),b
 12083                           
 12084                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 12085  00145C  D01D               	goto	i2l9140
 12086  00145E                     i2l9136:
 12087                           
 12088                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 12089  00145E  C074  F00F         	movff	i2__doprnt@prec,i2___wmul@multiplier
 12090  001462  C075  F010         	movff	i2__doprnt@prec+1,i2___wmul@multiplier+1
 12091  001466  0E00               	movlw	0
 12092  001468  6E12               	movwf	i2___wmul@multiplicand+1,c
 12093  00146A  0E0A               	movlw	10
 12094  00146C  6E11               	movwf	i2___wmul@multiplicand,c
 12095  00146E  ECF4  F029         	call	i2___wmul	;wreg free
 12096  001472  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12097  001476  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12098  00147A                     	if	0	;tblptru may be non-zero
 12099  00147A                     	endif
 12100  00147A                     	if	0	;tblptru may be non-zero
 12101  00147A                     	endif
 12102  00147A  0008               	tblrd		*
 12103  00147C  50F5               	movf	tablat,w,c
 12104  00147E  260F               	addwf	?i2___wmul,f,c
 12105  001480  0E00               	movlw	0
 12106  001482  2210               	addwfc	?i2___wmul+1,f,c
 12107  001484  0ED0               	movlw	208
 12108  001486  240F               	addwf	?i2___wmul,w,c
 12109  001488  0100               	movlb	0	; () banked
 12110  00148A  6F74               	movwf	i2__doprnt@prec& (0+255),b
 12111  00148C  0EFF               	movlw	255
 12112  00148E  2010               	addwfc	?i2___wmul+1,w,c
 12113  001490  0100               	movlb	0	; () banked
 12114  001492  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 12115                           
 12116                           ; BSR set to: 0
 12117  001494  4A48               	infsnz	i2__doprnt@f,f,c
 12118  001496  2A49               	incf	i2__doprnt@f+1,f,c
 12119  001498                     i2l9140:
 12120                           
 12121                           ; BSR set to: 0
 12122  001498  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12123  00149C  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12124  0014A0                     	if	0	;tblptru may be non-zero
 12125  0014A0                     	endif
 12126  0014A0                     	if	0	;tblptru may be non-zero
 12127  0014A0                     	endif
 12128  0014A0  0008               	tblrd		*
 12129  0014A2  50F5               	movf	tablat,w,c
 12130  0014A4  EC2B  F02A         	call	i2_isdigit
 12131  0014A8  A0D8               	btfss	status,0,c
 12132  0014AA  D012               	goto	i2l9154
 12133  0014AC  D7D8               	goto	i2l9136
 12134  0014AE                     i2l9142:
 12135                           
 12136                           ;doprnt.c: 626: prec = 0;
 12137  0014AE  0E00               	movlw	0
 12138  0014B0  0100               	movlb	0	; () banked
 12139  0014B2  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 12140  0014B4  0E00               	movlw	0
 12141  0014B6  6F74               	movwf	i2__doprnt@prec& (0+255),b
 12142                           
 12143                           ; BSR set to: 0
 12144                           ;doprnt.c: 628: flag |= 0x1000;
 12145  0014B8  0100               	movlb	0	; () banked
 12146  0014BA  8973               	bsf	(i2__doprnt@flag+1)& (0+255),4,b
 12147                           
 12148                           ; BSR set to: 0
 12149                           ;doprnt.c: 635: switch(c = *f++) {
 12150                           
 12151                           ;doprnt.c: 630: }
 12152                           ;doprnt.c: 633: loop:
 12153                           
 12154                           ; BSR set to: 0
 12155  0014BC  D009               	goto	i2l9154
 12156  0014BE                     i2l9146:
 12157                           
 12158                           ; BSR set to: 0
 12159                           ;doprnt.c: 643: flag |= 0x10;
 12160  0014BE  0100               	movlb	0	; () banked
 12161  0014C0  8972               	bsf	i2__doprnt@flag& (0+255),4,b
 12162                           
 12163                           ;doprnt.c: 644: goto loop;
 12164  0014C2  D006               	goto	i2l9154
 12165  0014C4                     i2l9148:
 12166                           
 12167                           ; BSR set to: 0
 12168                           ;doprnt.c: 663: flag |= 0x400;
 12169  0014C4  0100               	movlb	0	; () banked
 12170  0014C6  8573               	bsf	(i2__doprnt@flag+1)& (0+255),2,b
 12171                           
 12172                           ; BSR set to: 0
 12173                           ;doprnt.c: 698: case 'i':
 12174                           ;doprnt.c: 699: break;
 12175                           
 12176                           ; BSR set to: 0
 12177                           
 12178                           ;doprnt.c: 697: case 'd':
 12179                           
 12180                           ;doprnt.c: 664: break;
 12181  0014C8  D023               	goto	i2l9156
 12182  0014CA                     i2l9150:
 12183                           
 12184                           ; BSR set to: 0
 12185                           ;doprnt.c: 818: flag |= 0x40;
 12186  0014CA  0100               	movlb	0	; () banked
 12187  0014CC  8D72               	bsf	i2__doprnt@flag& (0+255),6,b
 12188                           
 12189                           ; BSR set to: 0
 12190                           ;doprnt.c: 822: }
 12191                           
 12192                           ;doprnt.c: 819: break;
 12193  0014CE  D020               	goto	i2l9156
 12194  0014D0                     i2l9154:
 12195  0014D0  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 12196  0014D4  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 12197  0014D8  4A48               	infsnz	i2__doprnt@f,f,c
 12198  0014DA  2A49               	incf	i2__doprnt@f+1,f,c
 12199  0014DC                     	if	0	;tblptru may be non-zero
 12200  0014DC                     	endif
 12201  0014DC                     	if	0	;tblptru may be non-zero
 12202  0014DC                     	endif
 12203  0014DC  0008               	tblrd		*
 12204  0014DE  CFF5 F076          	movff	tablat,i2__doprnt@c
 12205  0014E2  0100               	movlb	0	; () banked
 12206  0014E4  5176               	movf	i2__doprnt@c& (0+255),w,b
 12207                           
 12208                           ; Switch size 1, requested type "space"
 12209                           ; Number of cases is 6, Range of values is 0 to 117
 12210                           ; switch strategies available:
 12211                           ; Name         Instructions Cycles
 12212                           ; simple_byte           19    10 (average)
 12213                           ;	Chosen strategy is simple_byte
 12214  0014E6  0A00               	xorlw	0	; case 0
 12215  0014E8  B4D8               	btfsc	status,2,c
 12216  0014EA  EF3F  F012         	goto	i2l9490
 12217  0014EE  0A64               	xorlw	100	; case 100
 12218  0014F0  B4D8               	btfsc	status,2,c
 12219  0014F2  D00E               	goto	i2l9156
 12220  0014F4  0A02               	xorlw	2	; case 102
 12221  0014F6  B4D8               	btfsc	status,2,c
 12222  0014F8  D7E5               	goto	i2l9148
 12223  0014FA  0A0F               	xorlw	15	; case 105
 12224  0014FC  B4D8               	btfsc	status,2,c
 12225  0014FE  D008               	goto	i2l9156
 12226  001500  0A05               	xorlw	5	; case 108
 12227  001502  B4D8               	btfsc	status,2,c
 12228  001504  D7DC               	goto	i2l9146
 12229  001506  0A19               	xorlw	25	; case 117
 12230  001508  B4D8               	btfsc	status,2,c
 12231  00150A  D7DF               	goto	i2l9150
 12232  00150C  EF31  F012         	goto	i2l9488
 12233  001510                     i2l9156:
 12234                           
 12235                           ; BSR set to: 0
 12236                           ;doprnt.c: 825: if(flag & (0x700)) {
 12237  001510  0E07               	movlw	7
 12238  001512  0100               	movlb	0	; () banked
 12239  001514  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 12240  001516  B4D8               	btfsc	status,2,c
 12241  001518  EF8A  F00F         	goto	i2l414
 12242                           
 12243                           ; BSR set to: 0
 12244                           ;doprnt.c: 827: if(flag & 0x1000)
 12245  00151C  0100               	movlb	0	; () banked
 12246  00151E  A973               	btfss	(i2__doprnt@flag+1)& (0+255),4,b
 12247  001520  D005               	goto	i2l9162
 12248                           
 12249                           ; BSR set to: 0
 12250                           ;doprnt.c: 829: prec = 6;
 12251  001522  0E00               	movlw	0
 12252  001524  0100               	movlb	0	; () banked
 12253  001526  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 12254  001528  0E06               	movlw	6
 12255  00152A  6F74               	movwf	i2__doprnt@prec& (0+255),b
 12256  00152C                     i2l9162:
 12257                           
 12258                           ; BSR set to: 0
 12259                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 12260  00152C  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 12261  001530  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 12262  001534  CFDF F04C          	movff	indf2,??i2__doprnt
 12263  001538  0E03               	movlw	3
 12264  00153A  26DE               	addwf	postinc2,f,c
 12265  00153C  CFDF F04D          	movff	indf2,??i2__doprnt+1
 12266  001540  0E00               	movlw	0
 12267  001542  22DD               	addwfc	postdec2,f,c
 12268  001544  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12269  001548  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12270  00154C  CFDE F06D          	movff	postinc2,i2__doprnt@fval
 12271  001550  CFDE F06E          	movff	postinc2,i2__doprnt@fval+1
 12272  001554  CFDD F06F          	movff	postdec2,i2__doprnt@fval+2
 12273                           
 12274                           ; BSR set to: 0
 12275                           ;doprnt.c: 831: if(fval < 0.0) {
 12276  001558  0100               	movlb	0	; () banked
 12277  00155A  AF6F               	btfss	(i2__doprnt@fval+2)& (0+255),7,b
 12278  00155C  D011               	goto	i2l9170
 12279                           
 12280                           ; BSR set to: 0
 12281                           ;doprnt.c: 832: fval = -fval;
 12282  00155E  C06D  F001         	movff	i2__doprnt@fval,i2___ftneg@f1
 12283  001562  C06E  F002         	movff	i2__doprnt@fval+1,i2___ftneg@f1+1
 12284  001566  C06F  F003         	movff	i2__doprnt@fval+2,i2___ftneg@f1+2
 12285  00156A  EC07  F02A         	call	i2___ftneg	;wreg free
 12286  00156E  C001  F06D         	movff	?i2___ftneg,i2__doprnt@fval
 12287  001572  C002  F06E         	movff	?i2___ftneg+1,i2__doprnt@fval+1
 12288  001576  C003  F06F         	movff	?i2___ftneg+2,i2__doprnt@fval+2
 12289                           
 12290                           ;doprnt.c: 833: flag |= 0x03;
 12291  00157A  0E03               	movlw	3
 12292  00157C  0100               	movlb	0	; () banked
 12293  00157E  1372               	iorwf	i2__doprnt@flag& (0+255),f,b
 12294  001580                     i2l9170:
 12295                           
 12296                           ; BSR set to: 0
 12297                           ;doprnt.c: 834: }
 12298                           ;doprnt.c: 835: exp = 0;
 12299  001580  0E00               	movlw	0
 12300  001582  0100               	movlb	0	; () banked
 12301  001584  6F64               	movwf	(i2__doprnt@exp+1)& (0+255),b
 12302  001586  0E00               	movlw	0
 12303  001588  6F63               	movwf	i2__doprnt@exp& (0+255),b
 12304                           
 12305                           ; BSR set to: 0
 12306                           ;doprnt.c: 836: if( fval!=0) {
 12307  00158A  0100               	movlb	0	; () banked
 12308  00158C  516D               	movf	i2__doprnt@fval& (0+255),w,b
 12309  00158E  0100               	movlb	0	; () banked
 12310  001590  116E               	iorwf	(i2__doprnt@fval+1)& (0+255),w,b
 12311  001592  0100               	movlb	0	; () banked
 12312  001594  116F               	iorwf	(i2__doprnt@fval+2)& (0+255),w,b
 12313  001596  B4D8               	btfsc	status,2,c
 12314  001598  D08B               	goto	i2l9198
 12315                           
 12316                           ; BSR set to: 0
 12317                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 12318  00159A  0E82               	movlw	130
 12319  00159C  6E4C               	movwf	??i2__doprnt& (0+255),c
 12320  00159E  0EFF               	movlw	255
 12321  0015A0  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 12322  0015A2  C06D  F04E         	movff	i2__doprnt@fval,??i2__doprnt+2
 12323  0015A6  C06E  F04F         	movff	i2__doprnt@fval+1,??i2__doprnt+3
 12324  0015AA  C06F  F050         	movff	i2__doprnt@fval+2,??i2__doprnt+4
 12325  0015AE  C070  F051         	movff	i2__doprnt@fval+3,??i2__doprnt+5
 12326  0015B2  0E10               	movlw	16
 12327  0015B4  D005               	goto	i2u1514_40
 12328  0015B6                     i2u1514_45:
 12329  0015B6  90D8               	bcf	status,0,c
 12330  0015B8  3251               	rrcf	??i2__doprnt+5,f,c
 12331  0015BA  3250               	rrcf	??i2__doprnt+4,f,c
 12332  0015BC  324F               	rrcf	??i2__doprnt+3,f,c
 12333  0015BE  324E               	rrcf	??i2__doprnt+2,f,c
 12334  0015C0                     i2u1514_40:
 12335  0015C0  2EE8               	decfsz	wreg,f,c
 12336  0015C2  D7F9               	goto	i2u1514_45
 12337  0015C4  504E               	movf	??i2__doprnt+2,w,c
 12338  0015C6  244C               	addwf	??i2__doprnt,w,c
 12339  0015C8  0100               	movlb	0	; () banked
 12340  0015CA  6F63               	movwf	i2__doprnt@exp& (0+255),b
 12341  0015CC  0E00               	movlw	0
 12342  0015CE  204D               	addwfc	??i2__doprnt+1,w,c
 12343  0015D0  0100               	movlb	0	; () banked
 12344  0015D2  6F64               	movwf	(i2__doprnt@exp+1)& (0+255),b
 12345                           
 12346                           ; BSR set to: 0
 12347                           ;doprnt.c: 838: exp--;
 12348  0015D4  0100               	movlb	0	; () banked
 12349  0015D6  0763               	decf	i2__doprnt@exp& (0+255),f,b
 12350  0015D8  A0D8               	btfss	status,0,c
 12351  0015DA  0764               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 12352                           
 12353                           ; BSR set to: 0
 12354                           ;doprnt.c: 839: exp *= 3;
 12355  0015DC  C063  F00F         	movff	i2__doprnt@exp,i2___wmul@multiplier
 12356  0015E0  C064  F010         	movff	i2__doprnt@exp+1,i2___wmul@multiplier+1
 12357  0015E4  0E00               	movlw	0
 12358  0015E6  6E12               	movwf	i2___wmul@multiplicand+1,c
 12359  0015E8  0E03               	movlw	3
 12360  0015EA  6E11               	movwf	i2___wmul@multiplicand,c
 12361  0015EC  ECF4  F029         	call	i2___wmul	;wreg free
 12362  0015F0  C00F  F063         	movff	?i2___wmul,i2__doprnt@exp
 12363  0015F4  C010  F064         	movff	?i2___wmul+1,i2__doprnt@exp+1
 12364                           
 12365                           ;doprnt.c: 840: exp /= 10;
 12366  0015F8  C063  F007         	movff	i2__doprnt@exp,i2___awdiv@dividend
 12367  0015FC  C064  F008         	movff	i2__doprnt@exp+1,i2___awdiv@dividend+1
 12368  001600  0E00               	movlw	0
 12369  001602  6E0A               	movwf	i2___awdiv@divisor+1,c
 12370  001604  0E0A               	movlw	10
 12371  001606  6E09               	movwf	i2___awdiv@divisor,c
 12372  001608  EC2E  F026         	call	i2___awdiv	;wreg free
 12373  00160C  C007  F063         	movff	?i2___awdiv,i2__doprnt@exp
 12374  001610  C008  F064         	movff	?i2___awdiv+1,i2__doprnt@exp+1
 12375                           
 12376                           ;doprnt.c: 841: if(exp < 0)
 12377  001614  0100               	movlb	0	; () banked
 12378  001616  AF64               	btfss	(i2__doprnt@exp+1)& (0+255),7,b
 12379  001618  D004               	goto	i2l9186
 12380                           
 12381                           ; BSR set to: 0
 12382                           ;doprnt.c: 842: exp--;
 12383  00161A  0100               	movlb	0	; () banked
 12384  00161C  0763               	decf	i2__doprnt@exp& (0+255),f,b
 12385  00161E  A0D8               	btfss	status,0,c
 12386  001620  0764               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 12387  001622                     i2l9186:
 12388                           
 12389                           ; BSR set to: 0
 12390                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 12391  001622  0100               	movlb	0	; () banked
 12392  001624  5163               	movf	i2__doprnt@exp& (0+255),w,b
 12393  001626  0800               	sublw	0
 12394  001628  EC9B  F014         	call	i2_scale
 12395  00162C  C030  F069         	movff	?i2_scale,i2__doprnt@tmpval
 12396  001630  C031  F06A         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 12397  001634  C032  F06B         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 12398                           
 12399                           ;doprnt.c: 847: tmpval.integ *= fval;
 12400  001638  C069  F021         	movff	i2__doprnt@tmpval,i2___ftmul@f1
 12401  00163C  C06A  F022         	movff	i2__doprnt@tmpval+1,i2___ftmul@f1+1
 12402  001640  C06B  F023         	movff	i2__doprnt@tmpval+2,i2___ftmul@f1+2
 12403  001644  C06D  F024         	movff	i2__doprnt@fval,i2___ftmul@f2
 12404  001648  C06E  F025         	movff	i2__doprnt@fval+1,i2___ftmul@f2+1
 12405  00164C  C06F  F026         	movff	i2__doprnt@fval+2,i2___ftmul@f2+2
 12406  001650  EC69  F022         	call	i2___ftmul	;wreg free
 12407  001654  C021  F069         	movff	?i2___ftmul,i2__doprnt@tmpval
 12408  001658  C022  F06A         	movff	?i2___ftmul+1,i2__doprnt@tmpval+1
 12409  00165C  C023  F06B         	movff	?i2___ftmul+2,i2__doprnt@tmpval+2
 12410                           
 12411                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 12412  001660  C069  F001         	movff	i2__doprnt@tmpval,i2___ftge@ff1
 12413  001664  C06A  F002         	movff	i2__doprnt@tmpval+1,i2___ftge@ff1+1
 12414  001668  C06B  F003         	movff	i2__doprnt@tmpval+2,i2___ftge@ff1+2
 12415  00166C  0E00               	movlw	0
 12416  00166E  6E04               	movwf	i2___ftge@ff2,c
 12417  001670  0E80               	movlw	128
 12418  001672  6E05               	movwf	i2___ftge@ff2+1,c
 12419  001674  0E3F               	movlw	63
 12420  001676  6E06               	movwf	i2___ftge@ff2+2,c
 12421  001678  ECE6  F025         	call	i2___ftge	;wreg free
 12422  00167C  B0D8               	btfsc	status,0,c
 12423  00167E  D005               	goto	i2l9194
 12424                           
 12425                           ;doprnt.c: 849: exp--;
 12426  001680  0100               	movlb	0	; () banked
 12427  001682  0763               	decf	i2__doprnt@exp& (0+255),f,b
 12428  001684  A0D8               	btfss	status,0,c
 12429  001686  0764               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 12430  001688  D013               	goto	i2l9198
 12431  00168A                     i2l9194:
 12432                           
 12433                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 12434  00168A  C069  F001         	movff	i2__doprnt@tmpval,i2___ftge@ff1
 12435  00168E  C06A  F002         	movff	i2__doprnt@tmpval+1,i2___ftge@ff1+1
 12436  001692  C06B  F003         	movff	i2__doprnt@tmpval+2,i2___ftge@ff1+2
 12437  001696  0E00               	movlw	0
 12438  001698  6E04               	movwf	i2___ftge@ff2,c
 12439  00169A  0E20               	movlw	32
 12440  00169C  6E05               	movwf	i2___ftge@ff2+1,c
 12441  00169E  0E41               	movlw	65
 12442  0016A0  6E06               	movwf	i2___ftge@ff2+2,c
 12443  0016A2  ECE6  F025         	call	i2___ftge	;wreg free
 12444  0016A6  A0D8               	btfss	status,0,c
 12445  0016A8  D003               	goto	i2l9198
 12446                           
 12447                           ;doprnt.c: 851: exp++;
 12448  0016AA  0100               	movlb	0	; () banked
 12449  0016AC  4B63               	infsnz	i2__doprnt@exp& (0+255),f,b
 12450  0016AE  2B64               	incf	(i2__doprnt@exp+1)& (0+255),f,b
 12451  0016B0                     i2l9198:
 12452                           
 12453                           ;doprnt.c: 852: }
 12454                           ;doprnt.c: 1112: if(prec <= 12)
 12455  0016B0  0100               	movlb	0	; () banked
 12456  0016B2  BF75               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 12457  0016B4  D008               	goto	i2l9200
 12458  0016B6  0100               	movlb	0	; () banked
 12459  0016B8  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 12460  0016BA  E11D               	bnz	i2l9202
 12461  0016BC  0E0D               	movlw	13
 12462  0016BE  0100               	movlb	0	; () banked
 12463  0016C0  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 12464  0016C2  B0D8               	btfsc	status,0,c
 12465  0016C4  D018               	goto	i2l9202
 12466  0016C6                     i2l9200:
 12467                           
 12468                           ; BSR set to: 0
 12469                           ;doprnt.c: 1113: fval += fround(prec);
 12470  0016C6  C06D  F015         	movff	i2__doprnt@fval,i2___ftadd@f1
 12471  0016CA  C06E  F016         	movff	i2__doprnt@fval+1,i2___ftadd@f1+1
 12472  0016CE  C06F  F017         	movff	i2__doprnt@fval+2,i2___ftadd@f1+2
 12473  0016D2  0100               	movlb	0	; () banked
 12474  0016D4  5174               	movf	i2__doprnt@prec& (0+255),w,b
 12475  0016D6  EC1D  F019         	call	i2_fround
 12476  0016DA  C030  F018         	movff	?i2_fround,i2___ftadd@f2
 12477  0016DE  C031  F019         	movff	?i2_fround+1,i2___ftadd@f2+1
 12478  0016E2  C032  F01A         	movff	?i2_fround+2,i2___ftadd@f2+2
 12479  0016E6  EC40  F01A         	call	i2___ftadd	;wreg free
 12480  0016EA  C015  F06D         	movff	?i2___ftadd,i2__doprnt@fval
 12481  0016EE  C016  F06E         	movff	?i2___ftadd+1,i2__doprnt@fval+1
 12482  0016F2  C017  F06F         	movff	?i2___ftadd+2,i2__doprnt@fval+2
 12483  0016F6                     i2l9202:
 12484                           
 12485                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 12486  0016F6  0100               	movlb	0	; () banked
 12487  0016F8  BF64               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 12488  0016FA  D008               	goto	i2l9204
 12489  0016FC  0100               	movlb	0	; () banked
 12490  0016FE  5164               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 12491  001700  E126               	bnz	i2l9210
 12492  001702  0E0A               	movlw	10
 12493  001704  0100               	movlb	0	; () banked
 12494  001706  5D63               	subwf	i2__doprnt@exp& (0+255),w,b
 12495  001708  B0D8               	btfsc	status,0,c
 12496  00170A  D021               	goto	i2l9210
 12497  00170C                     i2l9204:
 12498                           
 12499                           ; BSR set to: 0
 12500  00170C  0100               	movlb	0	; () banked
 12501  00170E  516D               	movf	i2__doprnt@fval& (0+255),w,b
 12502  001710  0100               	movlb	0	; () banked
 12503  001712  116E               	iorwf	(i2__doprnt@fval+1)& (0+255),w,b
 12504  001714  0100               	movlb	0	; () banked
 12505  001716  116F               	iorwf	(i2__doprnt@fval+2)& (0+255),w,b
 12506  001718  B4D8               	btfsc	status,2,c
 12507  00171A  D05B               	goto	i2l9224
 12508                           
 12509                           ; BSR set to: 0
 12510  00171C  C06D  F037         	movff	i2__doprnt@fval,i2___fttol@f1
 12511  001720  C06E  F038         	movff	i2__doprnt@fval+1,i2___fttol@f1+1
 12512  001724  C06F  F039         	movff	i2__doprnt@fval+2,i2___fttol@f1+2
 12513  001728  ECE3  F022         	call	i2___fttol	;wreg free
 12514  00172C  5037               	movf	?i2___fttol,w,c
 12515  00172E  1038               	iorwf	?i2___fttol+1,w,c
 12516  001730  1039               	iorwf	?i2___fttol+2,w,c
 12517  001732  103A               	iorwf	?i2___fttol+3,w,c
 12518  001734  A4D8               	btfss	status,2,c
 12519  001736  D04D               	goto	i2l9224
 12520  001738  0100               	movlb	0	; () banked
 12521  00173A  BF64               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 12522  00173C  D04A               	goto	i2l9224
 12523  00173E  0100               	movlb	0	; () banked
 12524  001740  5164               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 12525  001742  E105               	bnz	i2l9210
 12526  001744  0E02               	movlw	2
 12527  001746  0100               	movlb	0	; () banked
 12528  001748  5D63               	subwf	i2__doprnt@exp& (0+255),w,b
 12529  00174A  A0D8               	btfss	status,0,c
 12530  00174C  D042               	goto	i2l9224
 12531  00174E                     i2l9210:
 12532                           
 12533                           ; BSR set to: 0
 12534                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 12535  00174E  C069  F001         	movff	i2__doprnt@tmpval,i2___ftge@ff1
 12536  001752  C06A  F002         	movff	i2__doprnt@tmpval+1,i2___ftge@ff1+1
 12537  001756  C06B  F003         	movff	i2__doprnt@tmpval+2,i2___ftge@ff1+2
 12538  00175A  0E70               	movlw	112
 12539  00175C  6E04               	movwf	i2___ftge@ff2,c
 12540  00175E  0E89               	movlw	137
 12541  001760  6E05               	movwf	i2___ftge@ff2+1,c
 12542  001762  0E40               	movlw	64
 12543  001764  6E06               	movwf	i2___ftge@ff2+2,c
 12544  001766  ECE6  F025         	call	i2___ftge	;wreg free
 12545  00176A  B0D8               	btfsc	status,0,c
 12546  00176C  D003               	goto	i2l9214
 12547                           
 12548                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 12549  00176E  0100               	movlb	0	; () banked
 12550  001770  0EF7               	movlw	247
 12551  001772  D002               	goto	L6
 12552  001774                     i2l9214:
 12553                           
 12554                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 12555  001774  0100               	movlb	0	; () banked
 12556  001776  0EF8               	movlw	248
 12557  001778                     L6:
 12558  001778  2763               	addwf	i2__doprnt@exp& (0+255),f,b
 12559  00177A  0EFF               	movlw	255
 12560  00177C  2364               	addwfc	(i2__doprnt@exp+1)& (0+255),f,b
 12561                           
 12562                           ; BSR set to: 0
 12563                           ;doprnt.c: 1124: }
 12564                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 12565                           
 12566                           ; BSR set to: 0
 12567  00177E  0100               	movlb	0	; () banked
 12568  001780  5163               	movf	i2__doprnt@exp& (0+255),w,b
 12569  001782  EC9B  F014         	call	i2_scale
 12570  001786  C030  F069         	movff	?i2_scale,i2__doprnt@tmpval
 12571  00178A  C031  F06A         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 12572  00178E  C032  F06B         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 12573                           
 12574                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 12575  001792  C06D  F001         	movff	i2__doprnt@fval,i2__tdiv_to_l_@f1
 12576  001796  C06E  F002         	movff	i2__doprnt@fval+1,i2__tdiv_to_l_@f1+1
 12577  00179A  C06F  F003         	movff	i2__doprnt@fval+2,i2__tdiv_to_l_@f1+2
 12578  00179E  C069  F004         	movff	i2__doprnt@tmpval,i2__tdiv_to_l_@f2
 12579  0017A2  C06A  F005         	movff	i2__doprnt@tmpval+1,i2__tdiv_to_l_@f2+1
 12580  0017A6  C06B  F006         	movff	i2__doprnt@tmpval+2,i2__tdiv_to_l_@f2+2
 12581  0017AA  EC25  F020         	call	i2__tdiv_to_l_	;wreg free
 12582  0017AE  C001  F065         	movff	?i2__tdiv_to_l_,i2__doprnt@val
 12583  0017B2  C002  F066         	movff	?i2__tdiv_to_l_+1,i2__doprnt@val+1
 12584  0017B6  C003  F067         	movff	?i2__tdiv_to_l_+2,i2__doprnt@val+2
 12585  0017BA  C004  F068         	movff	?i2__tdiv_to_l_+3,i2__doprnt@val+3
 12586                           
 12587                           ;doprnt.c: 1129: fval = 0.0;
 12588  0017BE  0E00               	movlw	0
 12589  0017C0  0100               	movlb	0	; () banked
 12590  0017C2  6F6D               	movwf	i2__doprnt@fval& (0+255),b
 12591  0017C4  0E00               	movlw	0
 12592  0017C6  0100               	movlb	0	; () banked
 12593  0017C8  6F6E               	movwf	(i2__doprnt@fval+1)& (0+255),b
 12594  0017CA  0E00               	movlw	0
 12595  0017CC  0100               	movlb	0	; () banked
 12596  0017CE  6F6F               	movwf	(i2__doprnt@fval+2)& (0+255),b
 12597                           
 12598                           ;doprnt.c: 1130: } else {
 12599  0017D0  D033               	goto	i2l9228
 12600  0017D2                     i2l9224:
 12601                           
 12602                           ;doprnt.c: 1131: val = (unsigned long)fval;
 12603  0017D2  C06D  F037         	movff	i2__doprnt@fval,i2___fttol@f1
 12604  0017D6  C06E  F038         	movff	i2__doprnt@fval+1,i2___fttol@f1+1
 12605  0017DA  C06F  F039         	movff	i2__doprnt@fval+2,i2___fttol@f1+2
 12606  0017DE  ECE3  F022         	call	i2___fttol	;wreg free
 12607  0017E2  C037  F065         	movff	?i2___fttol,i2__doprnt@val
 12608  0017E6  C038  F066         	movff	?i2___fttol+1,i2__doprnt@val+1
 12609  0017EA  C039  F067         	movff	?i2___fttol+2,i2__doprnt@val+2
 12610  0017EE  C03A  F068         	movff	?i2___fttol+3,i2__doprnt@val+3
 12611                           
 12612                           ;doprnt.c: 1132: fval -= (double)val;
 12613  0017F2  C06D  F021         	movff	i2__doprnt@fval,i2___ftsub@f1
 12614  0017F6  C06E  F022         	movff	i2__doprnt@fval+1,i2___ftsub@f1+1
 12615  0017FA  C06F  F023         	movff	i2__doprnt@fval+2,i2___ftsub@f1+2
 12616  0017FE  C065  F009         	movff	i2__doprnt@val,i2___lltoft@c
 12617  001802  C066  F00A         	movff	i2__doprnt@val+1,i2___lltoft@c+1
 12618  001806  C067  F00B         	movff	i2__doprnt@val+2,i2___lltoft@c+2
 12619  00180A  C068  F00C         	movff	i2__doprnt@val+3,i2___lltoft@c+3
 12620  00180E  ECC9  F027         	call	i2___lltoft	;wreg free
 12621  001812  C009  F024         	movff	?i2___lltoft,i2___ftsub@f2
 12622  001816  C00A  F025         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 12623  00181A  C00B  F026         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 12624  00181E  EC13  F029         	call	i2___ftsub	;wreg free
 12625  001822  C021  F06D         	movff	?i2___ftsub,i2__doprnt@fval
 12626  001826  C022  F06E         	movff	?i2___ftsub+1,i2__doprnt@fval+1
 12627  00182A  C023  F06F         	movff	?i2___ftsub+2,i2__doprnt@fval+2
 12628                           
 12629                           ;doprnt.c: 1133: exp = 0;
 12630  00182E  0E00               	movlw	0
 12631  001830  0100               	movlb	0	; () banked
 12632  001832  6F64               	movwf	(i2__doprnt@exp+1)& (0+255),b
 12633  001834  0E00               	movlw	0
 12634  001836  6F63               	movwf	i2__doprnt@exp& (0+255),b
 12635  001838                     i2l9228:
 12636                           
 12637                           ; BSR set to: 0
 12638                           ;doprnt.c: 1134: }
 12639                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 12640  001838  0E01               	movlw	1
 12641  00183A  0100               	movlb	0	; () banked
 12642  00183C  6F76               	movwf	i2__doprnt@c& (0+255),b
 12643  00183E                     i2l9230:
 12644                           
 12645                           ; BSR set to: 0
 12646  00183E  0E0A               	movlw	10
 12647  001840  0100               	movlb	0	; () banked
 12648  001842  1976               	xorwf	i2__doprnt@c& (0+255),w,b
 12649  001844  B4D8               	btfsc	status,2,c
 12650  001846  D01E               	goto	i2l9242
 12651                           
 12652                           ; BSR set to: 0
 12653                           ;doprnt.c: 1137: if(val < dpowers[c])
 12654                           
 12655                           ; BSR set to: 0
 12656                           
 12657                           ; BSR set to: 0
 12658  001848  0100               	movlb	0	; () banked
 12659  00184A  5176               	movf	i2__doprnt@c& (0+255),w,b
 12660  00184C  0D04               	mullw	4
 12661  00184E  0EF7               	movlw	low _dpowers
 12662  001850  24F3               	addwf	prodl,w,c
 12663  001852  6EF6               	movwf	tblptrl,c
 12664  001854  0E7E               	movlw	high _dpowers
 12665  001856  20F4               	addwfc	prodh,w,c
 12666  001858  6EF7               	movwf	tblptrh,c
 12667  00185A                     	if	0	;There are less than 3 active tblptr bytes
 12668  00185A                     	endif
 12669  00185A  0009               	tblrd		*+
 12670  00185C  50F5               	movf	tablat,w,c
 12671  00185E  0100               	movlb	0	; () banked
 12672  001860  5D65               	subwf	i2__doprnt@val& (0+255),w,b
 12673  001862  0009               	tblrd		*+
 12674  001864  50F5               	movf	tablat,w,c
 12675  001866  0100               	movlb	0	; () banked
 12676  001868  5966               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 12677  00186A  0009               	tblrd		*+
 12678  00186C  50F5               	movf	tablat,w,c
 12679  00186E  0100               	movlb	0	; () banked
 12680  001870  5967               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 12681  001872  0009               	tblrd		*+
 12682  001874  50F5               	movf	tablat,w,c
 12683  001876  0100               	movlb	0	; () banked
 12684  001878  5968               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 12685  00187A  A0D8               	btfss	status,0,c
 12686  00187C  D003               	goto	i2l9242
 12687                           
 12688                           ; BSR set to: 0
 12689                           
 12690                           ; BSR set to: 0
 12691                           
 12692                           ; BSR set to: 0
 12693                           ;doprnt.c: 1138: break;
 12694  00187E  0100               	movlb	0	; () banked
 12695  001880  2B76               	incf	i2__doprnt@c& (0+255),f,b
 12696  001882  D7DD               	goto	i2l9230
 12697  001884                     i2l9242:
 12698                           
 12699                           ; BSR set to: 0
 12700                           ;doprnt.c: 1142: width -= prec + c + exp;
 12701  001884  C076  F04C         	movff	i2__doprnt@c,??i2__doprnt
 12702  001888  6A4D               	clrf	(??i2__doprnt+1)& (0+255),c
 12703  00188A  BE4C               	btfsc	??i2__doprnt& (0+255),7,c
 12704  00188C  064D               	decf	(??i2__doprnt+1)& (0+255),f,c
 12705  00188E  0100               	movlb	0	; () banked
 12706  001890  5174               	movf	i2__doprnt@prec& (0+255),w,b
 12707  001892  264C               	addwf	??i2__doprnt,f,c
 12708  001894  0100               	movlb	0	; () banked
 12709  001896  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 12710  001898  224D               	addwfc	??i2__doprnt+1,f,c
 12711  00189A  0100               	movlb	0	; () banked
 12712  00189C  5163               	movf	i2__doprnt@exp& (0+255),w,b
 12713  00189E  264C               	addwf	??i2__doprnt,f,c
 12714  0018A0  0100               	movlb	0	; () banked
 12715  0018A2  5164               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 12716  0018A4  224D               	addwfc	??i2__doprnt+1,f,c
 12717  0018A6  504C               	movf	??i2__doprnt,w,c
 12718  0018A8  0100               	movlb	0	; () banked
 12719  0018AA  5F70               	subwf	i2__doprnt@width& (0+255),f,b
 12720  0018AC  504D               	movf	??i2__doprnt+1,w,c
 12721  0018AE  0100               	movlb	0	; () banked
 12722  0018B0  5B71               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 12723                           
 12724                           ;doprnt.c: 1143: if(
 12725                           ;doprnt.c: 1147: prec)
 12726  0018B2  0100               	movlb	0	; () banked
 12727  0018B4  5174               	movf	i2__doprnt@prec& (0+255),w,b
 12728  0018B6  0100               	movlb	0	; () banked
 12729  0018B8  1175               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 12730  0018BA  B4D8               	btfsc	status,2,c
 12731  0018BC  D004               	goto	i2l9246
 12732                           
 12733                           ; BSR set to: 0
 12734                           ;doprnt.c: 1148: width--;
 12735  0018BE  0100               	movlb	0	; () banked
 12736  0018C0  0770               	decf	i2__doprnt@width& (0+255),f,b
 12737  0018C2  A0D8               	btfss	status,0,c
 12738  0018C4  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 12739  0018C6                     i2l9246:
 12740                           
 12741                           ; BSR set to: 0
 12742                           ;doprnt.c: 1149: if(flag & 0x03)
 12743  0018C6  0E03               	movlw	3
 12744  0018C8  0100               	movlb	0	; () banked
 12745  0018CA  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 12746  0018CC  6E4C               	movwf	??i2__doprnt& (0+255),c
 12747  0018CE  0E00               	movlw	0
 12748  0018D0  0100               	movlb	0	; () banked
 12749  0018D2  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 12750  0018D4  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 12751  0018D6  504C               	movf	??i2__doprnt,w,c
 12752  0018D8  104D               	iorwf	??i2__doprnt+1,w,c
 12753  0018DA  B4D8               	btfsc	status,2,c
 12754  0018DC  D004               	goto	i2l9250
 12755                           
 12756                           ; BSR set to: 0
 12757                           ;doprnt.c: 1150: width--;
 12758  0018DE  0100               	movlb	0	; () banked
 12759  0018E0  0770               	decf	i2__doprnt@width& (0+255),f,b
 12760  0018E2  A0D8               	btfss	status,0,c
 12761  0018E4  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 12762  0018E6                     i2l9250:
 12763                           
 12764                           ; BSR set to: 0
 12765                           ;doprnt.c: 1153: if(flag & 0x04) {
 12766  0018E6  0100               	movlb	0	; () banked
 12767  0018E8  A572               	btfss	i2__doprnt@flag& (0+255),2,b
 12768  0018EA  D0B6               	goto	i2l9284
 12769                           
 12770                           ; BSR set to: 0
 12771                           ;doprnt.c: 1157: if(flag & 0x03)
 12772  0018EC  0E03               	movlw	3
 12773  0018EE  0100               	movlb	0	; () banked
 12774  0018F0  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 12775  0018F2  6E4C               	movwf	??i2__doprnt& (0+255),c
 12776  0018F4  0E00               	movlw	0
 12777  0018F6  0100               	movlb	0	; () banked
 12778  0018F8  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 12779  0018FA  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 12780  0018FC  504C               	movf	??i2__doprnt,w,c
 12781  0018FE  104D               	iorwf	??i2__doprnt+1,w,c
 12782  001900  B4D8               	btfsc	status,2,c
 12783  001902  D069               	goto	i2l9272
 12784                           
 12785                           ; BSR set to: 0
 12786                           ;doprnt.c: 1159: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 12787  001904  EE20 F002          	lfsr	2,2
 12788  001908  5046               	movf	i2__doprnt@pb,w,c
 12789  00190A  26D9               	addwf	fsr2l,f,c
 12790  00190C  5047               	movf	i2__doprnt@pb+1,w,c
 12791  00190E  22DA               	addwfc	fsr2h,f,c
 12792  001910  50DE               	movf	postinc2,w,c
 12793  001912  10DE               	iorwf	postinc2,w,c
 12794  001914  B4D8               	btfsc	status,2,c
 12795  001916  D013               	goto	i2l9258
 12796                           
 12797                           ; BSR set to: 0
 12798  001918  EE20 F002          	lfsr	2,2
 12799  00191C  5046               	movf	i2__doprnt@pb,w,c
 12800  00191E  26D9               	addwf	fsr2l,f,c
 12801  001920  5047               	movf	i2__doprnt@pb+1,w,c
 12802  001922  22DA               	addwfc	fsr2h,f,c
 12803  001924  D801               	call	i2u1532_48
 12804  001926  D057               	goto	i2l9272
 12805  001928                     i2u1532_48:
 12806  001928  0005               	push	
 12807  00192A  6EFA               	movwf	pclath,c
 12808  00192C  50DE               	movf	postinc2,w,c
 12809  00192E  6EFD               	movwf	tosl,c
 12810  001930  50DE               	movf	postinc2,w,c
 12811  001932  6EFE               	movwf	tosh,c
 12812  001934  50F8               	movf	tblptru,w,c
 12813  001936  6EFF               	movwf	tosu,c
 12814  001938  50FA               	movf	pclath,w,c
 12815  00193A  0E2D               	movlw	45
 12816  00193C  0012               	return		;indir
 12817  00193E                     i2l9258:
 12818  00193E  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12819  001942  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12820  001946  CFDE F04C          	movff	postinc2,??i2__doprnt
 12821  00194A  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12822  00194E  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12823  001952  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12824  001956  0E2D               	movlw	45
 12825  001958  6EDF               	movwf	indf2,c
 12826  00195A  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12827  00195E  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12828  001962  2ADE               	incf	postinc2,f,c
 12829  001964  0E00               	movlw	0
 12830  001966  22DD               	addwfc	postdec2,f,c
 12831                           
 12832                           ;doprnt.c: 1168: while(width > 0) {
 12833  001968  D036               	goto	i2l9272
 12834  00196A                     i2l9262:
 12835                           
 12836                           ;doprnt.c: 1169: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 12837  00196A  EE20 F002          	lfsr	2,2
 12838  00196E  5046               	movf	i2__doprnt@pb,w,c
 12839  001970  26D9               	addwf	fsr2l,f,c
 12840  001972  5047               	movf	i2__doprnt@pb+1,w,c
 12841  001974  22DA               	addwfc	fsr2h,f,c
 12842  001976  50DE               	movf	postinc2,w,c
 12843  001978  10DE               	iorwf	postinc2,w,c
 12844  00197A  B4D8               	btfsc	status,2,c
 12845  00197C  D013               	goto	i2l9266
 12846  00197E  EE20 F002          	lfsr	2,2
 12847  001982  5046               	movf	i2__doprnt@pb,w,c
 12848  001984  26D9               	addwf	fsr2l,f,c
 12849  001986  5047               	movf	i2__doprnt@pb+1,w,c
 12850  001988  22DA               	addwfc	fsr2h,f,c
 12851  00198A  D801               	call	i2u1534_48
 12852  00198C  D020               	goto	i2l9270
 12853  00198E                     i2u1534_48:
 12854  00198E  0005               	push	
 12855  001990  6EFA               	movwf	pclath,c
 12856  001992  50DE               	movf	postinc2,w,c
 12857  001994  6EFD               	movwf	tosl,c
 12858  001996  50DE               	movf	postinc2,w,c
 12859  001998  6EFE               	movwf	tosh,c
 12860  00199A  50F8               	movf	tblptru,w,c
 12861  00199C  6EFF               	movwf	tosu,c
 12862  00199E  50FA               	movf	pclath,w,c
 12863  0019A0  0E30               	movlw	48
 12864  0019A2  0012               	return		;indir
 12865  0019A4                     i2l9266:
 12866  0019A4  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12867  0019A8  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12868  0019AC  CFDE F04C          	movff	postinc2,??i2__doprnt
 12869  0019B0  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12870  0019B4  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12871  0019B8  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12872  0019BC  0E30               	movlw	48
 12873  0019BE  6EDF               	movwf	indf2,c
 12874  0019C0  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12875  0019C4  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12876  0019C8  2ADE               	incf	postinc2,f,c
 12877  0019CA  0E00               	movlw	0
 12878  0019CC  22DD               	addwfc	postdec2,f,c
 12879  0019CE                     i2l9270:
 12880                           
 12881                           ;doprnt.c: 1170: width--;
 12882  0019CE  0100               	movlb	0	; () banked
 12883  0019D0  0770               	decf	i2__doprnt@width& (0+255),f,b
 12884  0019D2  A0D8               	btfss	status,0,c
 12885  0019D4  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 12886  0019D6                     i2l9272:
 12887  0019D6  0100               	movlb	0	; () banked
 12888  0019D8  BF71               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 12889  0019DA  D0F8               	goto	i2l9306
 12890  0019DC  0100               	movlb	0	; () banked
 12891  0019DE  5171               	movf	(i2__doprnt@width+1)& (0+255),w,b
 12892  0019E0  E1C4               	bnz	i2l9262
 12893  0019E2  0100               	movlb	0	; () banked
 12894  0019E4  0570               	decf	i2__doprnt@width& (0+255),w,b
 12895  0019E6  A0D8               	btfss	status,0,c
 12896  0019E8  D0F1               	goto	i2l9306
 12897  0019EA  D7BF               	goto	i2l9262
 12898  0019EC                     i2l9274:
 12899                           
 12900                           ; BSR set to: 0
 12901                           ;doprnt.c: 1181: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 12902  0019EC  EE20 F002          	lfsr	2,2
 12903  0019F0  5046               	movf	i2__doprnt@pb,w,c
 12904  0019F2  26D9               	addwf	fsr2l,f,c
 12905  0019F4  5047               	movf	i2__doprnt@pb+1,w,c
 12906  0019F6  22DA               	addwfc	fsr2h,f,c
 12907  0019F8  50DE               	movf	postinc2,w,c
 12908  0019FA  10DE               	iorwf	postinc2,w,c
 12909  0019FC  B4D8               	btfsc	status,2,c
 12910  0019FE  D013               	goto	i2l9278
 12911                           
 12912                           ; BSR set to: 0
 12913  001A00  EE20 F002          	lfsr	2,2
 12914  001A04  5046               	movf	i2__doprnt@pb,w,c
 12915  001A06  26D9               	addwf	fsr2l,f,c
 12916  001A08  5047               	movf	i2__doprnt@pb+1,w,c
 12917  001A0A  22DA               	addwfc	fsr2h,f,c
 12918  001A0C  D801               	call	i2u1537_48
 12919  001A0E  D020               	goto	i2l9282
 12920  001A10                     i2u1537_48:
 12921  001A10  0005               	push	
 12922  001A12  6EFA               	movwf	pclath,c
 12923  001A14  50DE               	movf	postinc2,w,c
 12924  001A16  6EFD               	movwf	tosl,c
 12925  001A18  50DE               	movf	postinc2,w,c
 12926  001A1A  6EFE               	movwf	tosh,c
 12927  001A1C  50F8               	movf	tblptru,w,c
 12928  001A1E  6EFF               	movwf	tosu,c
 12929  001A20  50FA               	movf	pclath,w,c
 12930  001A22  0E20               	movlw	32
 12931  001A24  0012               	return		;indir
 12932  001A26                     i2l9278:
 12933  001A26  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12934  001A2A  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12935  001A2E  CFDE F04C          	movff	postinc2,??i2__doprnt
 12936  001A32  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12937  001A36  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12938  001A3A  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12939  001A3E  0E20               	movlw	32
 12940  001A40  6EDF               	movwf	indf2,c
 12941  001A42  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12942  001A46  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12943  001A4A  2ADE               	incf	postinc2,f,c
 12944  001A4C  0E00               	movlw	0
 12945  001A4E  22DD               	addwfc	postdec2,f,c
 12946  001A50                     i2l9282:
 12947                           
 12948                           ;doprnt.c: 1182: width--;
 12949  001A50  0100               	movlb	0	; () banked
 12950  001A52  0770               	decf	i2__doprnt@width& (0+255),f,b
 12951  001A54  A0D8               	btfss	status,0,c
 12952  001A56  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 12953  001A58                     i2l9284:
 12954                           
 12955                           ; BSR set to: 0
 12956  001A58  0100               	movlb	0	; () banked
 12957  001A5A  BF71               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 12958  001A5C  D007               	goto	i2l9286
 12959  001A5E  0100               	movlb	0	; () banked
 12960  001A60  5171               	movf	(i2__doprnt@width+1)& (0+255),w,b
 12961  001A62  E1C4               	bnz	i2l9274
 12962  001A64  0100               	movlb	0	; () banked
 12963  001A66  0570               	decf	i2__doprnt@width& (0+255),w,b
 12964  001A68  B0D8               	btfsc	status,0,c
 12965  001A6A  D7C0               	goto	i2l9274
 12966  001A6C                     i2l9286:
 12967                           
 12968                           ; BSR set to: 0
 12969                           ;doprnt.c: 1183: }
 12970                           ;doprnt.c: 1188: if(flag & 0x03)
 12971  001A6C  0E03               	movlw	3
 12972  001A6E  0100               	movlb	0	; () banked
 12973  001A70  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 12974  001A72  6E4C               	movwf	??i2__doprnt& (0+255),c
 12975  001A74  0E00               	movlw	0
 12976  001A76  0100               	movlb	0	; () banked
 12977  001A78  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 12978  001A7A  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 12979  001A7C  504C               	movf	??i2__doprnt,w,c
 12980  001A7E  104D               	iorwf	??i2__doprnt+1,w,c
 12981  001A80  B4D8               	btfsc	status,2,c
 12982  001A82  D0A4               	goto	i2l9306
 12983                           
 12984                           ; BSR set to: 0
 12985                           ;doprnt.c: 1190: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 12986  001A84  EE20 F002          	lfsr	2,2
 12987  001A88  5046               	movf	i2__doprnt@pb,w,c
 12988  001A8A  26D9               	addwf	fsr2l,f,c
 12989  001A8C  5047               	movf	i2__doprnt@pb+1,w,c
 12990  001A8E  22DA               	addwfc	fsr2h,f,c
 12991  001A90  50DE               	movf	postinc2,w,c
 12992  001A92  10DE               	iorwf	postinc2,w,c
 12993  001A94  B4D8               	btfsc	status,2,c
 12994  001A96  D013               	goto	i2l9292
 12995                           
 12996                           ; BSR set to: 0
 12997  001A98  EE20 F002          	lfsr	2,2
 12998  001A9C  5046               	movf	i2__doprnt@pb,w,c
 12999  001A9E  26D9               	addwf	fsr2l,f,c
 13000  001AA0  5047               	movf	i2__doprnt@pb+1,w,c
 13001  001AA2  22DA               	addwfc	fsr2h,f,c
 13002  001AA4  D801               	call	i2u1541_48
 13003  001AA6  D092               	goto	i2l9306
 13004  001AA8                     i2u1541_48:
 13005  001AA8  0005               	push	
 13006  001AAA  6EFA               	movwf	pclath,c
 13007  001AAC  50DE               	movf	postinc2,w,c
 13008  001AAE  6EFD               	movwf	tosl,c
 13009  001AB0  50DE               	movf	postinc2,w,c
 13010  001AB2  6EFE               	movwf	tosh,c
 13011  001AB4  50F8               	movf	tblptru,w,c
 13012  001AB6  6EFF               	movwf	tosu,c
 13013  001AB8  50FA               	movf	pclath,w,c
 13014  001ABA  0E2D               	movlw	45
 13015  001ABC  0012               	return		;indir
 13016  001ABE                     i2l9292:
 13017  001ABE  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13018  001AC2  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13019  001AC6  CFDE F04C          	movff	postinc2,??i2__doprnt
 13020  001ACA  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13021  001ACE  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13022  001AD2  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13023  001AD6  0E2D               	movlw	45
 13024  001AD8  D077               	goto	L7
 13025  001ADA                     i2l9294:
 13026  001ADA  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13027  001ADE  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13028  001AE2  2ADE               	incf	postinc2,f,c
 13029  001AE4  0E00               	movlw	0
 13030  001AE6  22DD               	addwfc	postdec2,f,c
 13031                           
 13032                           ;doprnt.c: 1195: }
 13033                           ;doprnt.c: 1196: while(c--) {
 13034  001AE8  D071               	goto	i2l9306
 13035  001AEA                     i2l9296:
 13036                           
 13037                           ;doprnt.c: 1200: {
 13038                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 13039  001AEA  C065  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 13040  001AEE  C066  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 13041  001AF2  C067  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 13042  001AF6  C068  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 13043  001AFA  0100               	movlb	0	; () banked
 13044  001AFC  5176               	movf	i2__doprnt@c& (0+255),w,b
 13045  001AFE  0D04               	mullw	4
 13046  001B00  0EF7               	movlw	low _dpowers
 13047  001B02  24F3               	addwf	prodl,w,c
 13048  001B04  6EF6               	movwf	tblptrl,c
 13049  001B06  0E7E               	movlw	high _dpowers
 13050  001B08  20F4               	addwfc	prodh,w,c
 13051  001B0A  6EF7               	movwf	tblptrh,c
 13052  001B0C                     	if	0	;There are less than 3 active tblptr bytes
 13053  001B0C                     	endif
 13054  001B0C  0009               	tblrd		*+
 13055  001B0E  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 13056  001B12  0009               	tblrd		*+
 13057  001B14  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 13058  001B18  0009               	tblrd		*+
 13059  001B1A  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 13060  001B1E  000A               	tblrd		*-
 13061  001B20  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 13062  001B24  EC70  F026         	call	i2___lldiv
 13063  001B28  C001  F069         	movff	?i2___lldiv,i2__doprnt@tmpval
 13064  001B2C  C002  F06A         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 13065  001B30  C003  F06B         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 13066  001B34  C004  F06C         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 13067                           
 13068                           ;doprnt.c: 1202: tmpval.vd %= 10;
 13069  001B38  C069  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 13070  001B3C  C06A  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 13071  001B40  C06B  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 13072  001B44  C06C  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 13073  001B48  0E0A               	movlw	10
 13074  001B4A  6E12               	movwf	i2___llmod@divisor,c
 13075  001B4C  0E00               	movlw	0
 13076  001B4E  6E13               	movwf	i2___llmod@divisor+1,c
 13077  001B50  0E00               	movlw	0
 13078  001B52  6E14               	movwf	i2___llmod@divisor+2,c
 13079  001B54  0E00               	movlw	0
 13080  001B56  6E15               	movwf	i2___llmod@divisor+3,c
 13081  001B58  EC64  F027         	call	i2___llmod	;wreg free
 13082  001B5C  C00E  F069         	movff	?i2___llmod,i2__doprnt@tmpval
 13083  001B60  C00F  F06A         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 13084  001B64  C010  F06B         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 13085  001B68  C011  F06C         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 13086                           
 13087                           ;doprnt.c: 1203: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 13088  001B6C  EE20 F002          	lfsr	2,2
 13089  001B70  5046               	movf	i2__doprnt@pb,w,c
 13090  001B72  26D9               	addwf	fsr2l,f,c
 13091  001B74  5047               	movf	i2__doprnt@pb+1,w,c
 13092  001B76  22DA               	addwfc	fsr2h,f,c
 13093  001B78  50DE               	movf	postinc2,w,c
 13094  001B7A  10DE               	iorwf	postinc2,w,c
 13095  001B7C  B4D8               	btfsc	status,2,c
 13096  001B7E  D015               	goto	i2l9304
 13097  001B80  EE20 F002          	lfsr	2,2
 13098  001B84  5046               	movf	i2__doprnt@pb,w,c
 13099  001B86  26D9               	addwf	fsr2l,f,c
 13100  001B88  5047               	movf	i2__doprnt@pb+1,w,c
 13101  001B8A  22DA               	addwfc	fsr2h,f,c
 13102  001B8C  D801               	call	i2u1543_48
 13103  001B8E  D01E               	goto	i2l9306
 13104  001B90                     i2u1543_48:
 13105  001B90  0005               	push	
 13106  001B92  6EFA               	movwf	pclath,c
 13107  001B94  50DE               	movf	postinc2,w,c
 13108  001B96  6EFD               	movwf	tosl,c
 13109  001B98  50DE               	movf	postinc2,w,c
 13110  001B9A  6EFE               	movwf	tosh,c
 13111  001B9C  50F8               	movf	tblptru,w,c
 13112  001B9E  6EFF               	movwf	tosu,c
 13113  001BA0  50FA               	movf	pclath,w,c
 13114  001BA2  0100               	movlb	0	; () banked
 13115  001BA4  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 13116  001BA6  0F30               	addlw	48
 13117  001BA8  0012               	return		;indir
 13118  001BAA                     i2l9304:
 13119  001BAA  0100               	movlb	0	; () banked
 13120  001BAC  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 13121  001BAE  0F30               	addlw	48
 13122  001BB0  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13123  001BB4  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13124  001BB8  CFDE F04C          	movff	postinc2,??i2__doprnt
 13125  001BBC  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13126  001BC0  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13127  001BC4  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13128  001BC8                     L7:
 13129  001BC8  6EDF               	movwf	indf2,c
 13130  001BCA  D787               	goto	i2l9294
 13131  001BCC                     i2l9306:
 13132  001BCC  0100               	movlb	0	; () banked
 13133  001BCE  0776               	decf	i2__doprnt@c& (0+255),f,b
 13134  001BD0  0100               	movlb	0	; () banked
 13135  001BD2  2976               	incf	i2__doprnt@c& (0+255),w,b
 13136  001BD4  B4D8               	btfsc	status,2,c
 13137  001BD6  D037               	goto	i2l9318
 13138  001BD8  D788               	goto	i2l9296
 13139  001BDA                     i2l9308:
 13140                           
 13141                           ; BSR set to: 0
 13142                           ;doprnt.c: 1208: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 13143  001BDA  EE20 F002          	lfsr	2,2
 13144  001BDE  5046               	movf	i2__doprnt@pb,w,c
 13145  001BE0  26D9               	addwf	fsr2l,f,c
 13146  001BE2  5047               	movf	i2__doprnt@pb+1,w,c
 13147  001BE4  22DA               	addwfc	fsr2h,f,c
 13148  001BE6  50DE               	movf	postinc2,w,c
 13149  001BE8  10DE               	iorwf	postinc2,w,c
 13150  001BEA  B4D8               	btfsc	status,2,c
 13151  001BEC  D013               	goto	i2l9312
 13152                           
 13153                           ; BSR set to: 0
 13154  001BEE  EE20 F002          	lfsr	2,2
 13155  001BF2  5046               	movf	i2__doprnt@pb,w,c
 13156  001BF4  26D9               	addwf	fsr2l,f,c
 13157  001BF6  5047               	movf	i2__doprnt@pb+1,w,c
 13158  001BF8  22DA               	addwfc	fsr2h,f,c
 13159  001BFA  D801               	call	i2u1546_48
 13160  001BFC  D020               	goto	i2l9316
 13161  001BFE                     i2u1546_48:
 13162  001BFE  0005               	push	
 13163  001C00  6EFA               	movwf	pclath,c
 13164  001C02  50DE               	movf	postinc2,w,c
 13165  001C04  6EFD               	movwf	tosl,c
 13166  001C06  50DE               	movf	postinc2,w,c
 13167  001C08  6EFE               	movwf	tosh,c
 13168  001C0A  50F8               	movf	tblptru,w,c
 13169  001C0C  6EFF               	movwf	tosu,c
 13170  001C0E  50FA               	movf	pclath,w,c
 13171  001C10  0E30               	movlw	48
 13172  001C12  0012               	return		;indir
 13173  001C14                     i2l9312:
 13174  001C14  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13175  001C18  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13176  001C1C  CFDE F04C          	movff	postinc2,??i2__doprnt
 13177  001C20  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13178  001C24  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13179  001C28  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13180  001C2C  0E30               	movlw	48
 13181  001C2E  6EDF               	movwf	indf2,c
 13182  001C30  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13183  001C34  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13184  001C38  2ADE               	incf	postinc2,f,c
 13185  001C3A  0E00               	movlw	0
 13186  001C3C  22DD               	addwfc	postdec2,f,c
 13187  001C3E                     i2l9316:
 13188                           
 13189                           ;doprnt.c: 1209: exp--;
 13190  001C3E  0100               	movlb	0	; () banked
 13191  001C40  0763               	decf	i2__doprnt@exp& (0+255),f,b
 13192  001C42  A0D8               	btfss	status,0,c
 13193  001C44  0764               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 13194  001C46                     i2l9318:
 13195                           
 13196                           ; BSR set to: 0
 13197  001C46  0100               	movlb	0	; () banked
 13198  001C48  BF64               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 13199  001C4A  D007               	goto	i2l9320
 13200  001C4C  0100               	movlb	0	; () banked
 13201  001C4E  5164               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 13202  001C50  E1C4               	bnz	i2l9308
 13203  001C52  0100               	movlb	0	; () banked
 13204  001C54  0563               	decf	i2__doprnt@exp& (0+255),w,b
 13205  001C56  B0D8               	btfsc	status,0,c
 13206  001C58  D7C0               	goto	i2l9308
 13207  001C5A                     i2l9320:
 13208                           
 13209                           ; BSR set to: 0
 13210                           ;doprnt.c: 1210: }
 13211                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 13212  001C5A  0100               	movlb	0	; () banked
 13213  001C5C  BF75               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 13214  001C5E  D00C               	goto	i2l466
 13215  001C60  0100               	movlb	0	; () banked
 13216  001C62  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 13217  001C64  E105               	bnz	i2u1548_40
 13218  001C66  0E09               	movlw	9
 13219  001C68  0100               	movlb	0	; () banked
 13220  001C6A  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 13221  001C6C  A0D8               	btfss	status,0,c
 13222  001C6E  D004               	goto	i2l466
 13223  001C70                     i2u1548_40:
 13224                           
 13225                           ; BSR set to: 0
 13226                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 13227  001C70  0E08               	movlw	8
 13228  001C72  0100               	movlb	0	; () banked
 13229  001C74  6F76               	movwf	i2__doprnt@c& (0+255),b
 13230  001C76  D002               	goto	i2l9324
 13231  001C78                     i2l466:
 13232                           
 13233                           ; BSR set to: 0
 13234                           ;doprnt.c: 1213: else
 13235                           ;doprnt.c: 1214: c = prec;
 13236  001C78  C074  F076         	movff	i2__doprnt@prec,i2__doprnt@c
 13237  001C7C                     i2l9324:
 13238                           
 13239                           ; BSR set to: 0
 13240                           ;doprnt.c: 1215: prec -= c;
 13241  001C7C  0100               	movlb	0	; () banked
 13242  001C7E  5176               	movf	i2__doprnt@c& (0+255),w,b
 13243  001C80  0100               	movlb	0	; () banked
 13244  001C82  5F74               	subwf	i2__doprnt@prec& (0+255),f,b
 13245  001C84  0E00               	movlw	0
 13246  001C86  0100               	movlb	0	; () banked
 13247  001C88  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 13248  001C8A  0EFF               	movlw	255
 13249  001C8C  0100               	movlb	0	; () banked
 13250  001C8E  5B75               	subwfb	(i2__doprnt@prec+1)& (0+255),f,b
 13251                           
 13252                           ; BSR set to: 0
 13253                           ;doprnt.c: 1219: if(c)
 13254  001C90  0100               	movlb	0	; () banked
 13255  001C92  5176               	movf	i2__doprnt@c& (0+255),w,b
 13256  001C94  0100               	movlb	0	; () banked
 13257  001C96  B4D8               	btfsc	status,2,c
 13258  001C98  D032               	goto	i2l9336
 13259                           
 13260                           ; BSR set to: 0
 13261                           ;doprnt.c: 1221: if(pb->func) (pb->func('.')); else ((*pb->ptr++ = '.'));
 13262  001C9A  EE20 F002          	lfsr	2,2
 13263  001C9E  5046               	movf	i2__doprnt@pb,w,c
 13264  001CA0  26D9               	addwf	fsr2l,f,c
 13265  001CA2  5047               	movf	i2__doprnt@pb+1,w,c
 13266  001CA4  22DA               	addwfc	fsr2h,f,c
 13267  001CA6  50DE               	movf	postinc2,w,c
 13268  001CA8  10DE               	iorwf	postinc2,w,c
 13269  001CAA  B4D8               	btfsc	status,2,c
 13270  001CAC  D013               	goto	i2l9332
 13271                           
 13272                           ; BSR set to: 0
 13273  001CAE  EE20 F002          	lfsr	2,2
 13274  001CB2  5046               	movf	i2__doprnt@pb,w,c
 13275  001CB4  26D9               	addwf	fsr2l,f,c
 13276  001CB6  5047               	movf	i2__doprnt@pb+1,w,c
 13277  001CB8  22DA               	addwfc	fsr2h,f,c
 13278  001CBA  D801               	call	i2u1551_48
 13279  001CBC  D020               	goto	i2l9336
 13280  001CBE                     i2u1551_48:
 13281  001CBE  0005               	push	
 13282  001CC0  6EFA               	movwf	pclath,c
 13283  001CC2  50DE               	movf	postinc2,w,c
 13284  001CC4  6EFD               	movwf	tosl,c
 13285  001CC6  50DE               	movf	postinc2,w,c
 13286  001CC8  6EFE               	movwf	tosh,c
 13287  001CCA  50F8               	movf	tblptru,w,c
 13288  001CCC  6EFF               	movwf	tosu,c
 13289  001CCE  50FA               	movf	pclath,w,c
 13290  001CD0  0E2E               	movlw	46
 13291  001CD2  0012               	return		;indir
 13292  001CD4                     i2l9332:
 13293  001CD4  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13294  001CD8  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13295  001CDC  CFDE F04C          	movff	postinc2,??i2__doprnt
 13296  001CE0  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13297  001CE4  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13298  001CE8  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13299  001CEC  0E2E               	movlw	46
 13300  001CEE  6EDF               	movwf	indf2,c
 13301  001CF0  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13302  001CF4  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13303  001CF8  2ADE               	incf	postinc2,f,c
 13304  001CFA  0E00               	movlw	0
 13305  001CFC  22DD               	addwfc	postdec2,f,c
 13306  001CFE                     i2l9336:
 13307                           
 13308                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 13309  001CFE  0100               	movlb	0	; () banked
 13310  001D00  5176               	movf	i2__doprnt@c& (0+255),w,b
 13311  001D02  EC9B  F014         	call	i2_scale
 13312  001D06  C030  F060         	movff	?i2_scale,i2__doprnt$1927
 13313  001D0A  C031  F061         	movff	?i2_scale+1,i2__doprnt$1927+1
 13314  001D0E  C032  F062         	movff	?i2_scale+2,i2__doprnt$1927+2
 13315                           
 13316                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 13317  001D12  C06D  F024         	movff	i2__doprnt@fval,i2___ftmul@f2
 13318  001D16  C06E  F025         	movff	i2__doprnt@fval+1,i2___ftmul@f2+1
 13319  001D1A  C06F  F026         	movff	i2__doprnt@fval+2,i2___ftmul@f2+2
 13320  001D1E  C060  F021         	movff	i2__doprnt$1927,i2___ftmul@f1
 13321  001D22  C061  F022         	movff	i2__doprnt$1927+1,i2___ftmul@f1+1
 13322  001D26  C062  F023         	movff	i2__doprnt$1927+2,i2___ftmul@f1+2
 13323  001D2A  EC69  F022         	call	i2___ftmul	;wreg free
 13324  001D2E  C021  F037         	movff	?i2___ftmul,i2___fttol@f1
 13325  001D32  C022  F038         	movff	?i2___ftmul+1,i2___fttol@f1+1
 13326  001D36  C023  F039         	movff	?i2___ftmul+2,i2___fttol@f1+2
 13327  001D3A  ECE3  F022         	call	i2___fttol	;wreg free
 13328  001D3E  C037  F065         	movff	?i2___fttol,i2__doprnt@val
 13329  001D42  C038  F066         	movff	?i2___fttol+1,i2__doprnt@val+1
 13330  001D46  C039  F067         	movff	?i2___fttol+2,i2__doprnt@val+2
 13331  001D4A  C03A  F068         	movff	?i2___fttol+3,i2__doprnt@val+3
 13332                           
 13333                           ;doprnt.c: 1228: while(c--) {
 13334  001D4E  D09E               	goto	i2l9352
 13335  001D50                     i2l9340:
 13336                           
 13337                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 13338  001D50  C065  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 13339  001D54  C066  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 13340  001D58  C067  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 13341  001D5C  C068  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 13342  001D60  0100               	movlb	0	; () banked
 13343  001D62  5176               	movf	i2__doprnt@c& (0+255),w,b
 13344  001D64  0D04               	mullw	4
 13345  001D66  0EF7               	movlw	low _dpowers
 13346  001D68  24F3               	addwf	prodl,w,c
 13347  001D6A  6EF6               	movwf	tblptrl,c
 13348  001D6C  0E7E               	movlw	high _dpowers
 13349  001D6E  20F4               	addwfc	prodh,w,c
 13350  001D70  6EF7               	movwf	tblptrh,c
 13351  001D72                     	if	0	;There are less than 3 active tblptr bytes
 13352  001D72                     	endif
 13353  001D72  0009               	tblrd		*+
 13354  001D74  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 13355  001D78  0009               	tblrd		*+
 13356  001D7A  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 13357  001D7E  0009               	tblrd		*+
 13358  001D80  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 13359  001D84  000A               	tblrd		*-
 13360  001D86  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 13361  001D8A  EC70  F026         	call	i2___lldiv	;wreg free
 13362  001D8E  C001  F069         	movff	?i2___lldiv,i2__doprnt@tmpval
 13363  001D92  C002  F06A         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 13364  001D96  C003  F06B         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 13365  001D9A  C004  F06C         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 13366                           
 13367                           ;doprnt.c: 1230: tmpval.vd %= 10;
 13368  001D9E  C069  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 13369  001DA2  C06A  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 13370  001DA6  C06B  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 13371  001DAA  C06C  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 13372  001DAE  0E0A               	movlw	10
 13373  001DB0  6E12               	movwf	i2___llmod@divisor,c
 13374  001DB2  0E00               	movlw	0
 13375  001DB4  6E13               	movwf	i2___llmod@divisor+1,c
 13376  001DB6  0E00               	movlw	0
 13377  001DB8  6E14               	movwf	i2___llmod@divisor+2,c
 13378  001DBA  0E00               	movlw	0
 13379  001DBC  6E15               	movwf	i2___llmod@divisor+3,c
 13380  001DBE  EC64  F027         	call	i2___llmod	;wreg free
 13381  001DC2  C00E  F069         	movff	?i2___llmod,i2__doprnt@tmpval
 13382  001DC6  C00F  F06A         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 13383  001DCA  C010  F06B         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 13384  001DCE  C011  F06C         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 13385                           
 13386                           ;doprnt.c: 1231: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 13387  001DD2  EE20 F002          	lfsr	2,2
 13388  001DD6  5046               	movf	i2__doprnt@pb,w,c
 13389  001DD8  26D9               	addwf	fsr2l,f,c
 13390  001DDA  5047               	movf	i2__doprnt@pb+1,w,c
 13391  001DDC  22DA               	addwfc	fsr2h,f,c
 13392  001DDE  50DE               	movf	postinc2,w,c
 13393  001DE0  10DE               	iorwf	postinc2,w,c
 13394  001DE2  B4D8               	btfsc	status,2,c
 13395  001DE4  D015               	goto	i2l9348
 13396  001DE6  EE20 F002          	lfsr	2,2
 13397  001DEA  5046               	movf	i2__doprnt@pb,w,c
 13398  001DEC  26D9               	addwf	fsr2l,f,c
 13399  001DEE  5047               	movf	i2__doprnt@pb+1,w,c
 13400  001DF0  22DA               	addwfc	fsr2h,f,c
 13401  001DF2  D801               	call	i2u1553_48
 13402  001DF4  D024               	goto	i2l9350
 13403  001DF6                     i2u1553_48:
 13404  001DF6  0005               	push	
 13405  001DF8  6EFA               	movwf	pclath,c
 13406  001DFA  50DE               	movf	postinc2,w,c
 13407  001DFC  6EFD               	movwf	tosl,c
 13408  001DFE  50DE               	movf	postinc2,w,c
 13409  001E00  6EFE               	movwf	tosh,c
 13410  001E02  50F8               	movf	tblptru,w,c
 13411  001E04  6EFF               	movwf	tosu,c
 13412  001E06  50FA               	movf	pclath,w,c
 13413  001E08  0100               	movlb	0	; () banked
 13414  001E0A  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 13415  001E0C  0F30               	addlw	48
 13416  001E0E  0012               	return		;indir
 13417  001E10                     i2l9348:
 13418  001E10  0100               	movlb	0	; () banked
 13419  001E12  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 13420  001E14  0F30               	addlw	48
 13421  001E16  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13422  001E1A  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13423  001E1E  CFDE F04C          	movff	postinc2,??i2__doprnt
 13424  001E22  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13425  001E26  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13426  001E2A  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13427  001E2E  6EDF               	movwf	indf2,c
 13428  001E30  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13429  001E34  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13430  001E38  2ADE               	incf	postinc2,f,c
 13431  001E3A  0E00               	movlw	0
 13432  001E3C  22DD               	addwfc	postdec2,f,c
 13433  001E3E                     i2l9350:
 13434                           
 13435                           ;doprnt.c: 1232: val %= dpowers[c];
 13436  001E3E  C065  F00E         	movff	i2__doprnt@val,i2___llmod@dividend
 13437  001E42  C066  F00F         	movff	i2__doprnt@val+1,i2___llmod@dividend+1
 13438  001E46  C067  F010         	movff	i2__doprnt@val+2,i2___llmod@dividend+2
 13439  001E4A  C068  F011         	movff	i2__doprnt@val+3,i2___llmod@dividend+3
 13440  001E4E  0100               	movlb	0	; () banked
 13441  001E50  5176               	movf	i2__doprnt@c& (0+255),w,b
 13442  001E52  0D04               	mullw	4
 13443  001E54  0EF7               	movlw	low _dpowers
 13444  001E56  24F3               	addwf	prodl,w,c
 13445  001E58  6EF6               	movwf	tblptrl,c
 13446  001E5A  0E7E               	movlw	high _dpowers
 13447  001E5C  20F4               	addwfc	prodh,w,c
 13448  001E5E  6EF7               	movwf	tblptrh,c
 13449  001E60                     	if	0	;There are less than 3 active tblptr bytes
 13450  001E60                     	endif
 13451  001E60  0009               	tblrd		*+
 13452  001E62  CFF5 F012          	movff	tablat,i2___llmod@divisor
 13453  001E66  0009               	tblrd		*+
 13454  001E68  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 13455  001E6C  0009               	tblrd		*+
 13456  001E6E  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 13457  001E72  000A               	tblrd		*-
 13458  001E74  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 13459  001E78  EC64  F027         	call	i2___llmod
 13460  001E7C  C00E  F065         	movff	?i2___llmod,i2__doprnt@val
 13461  001E80  C00F  F066         	movff	?i2___llmod+1,i2__doprnt@val+1
 13462  001E84  C010  F067         	movff	?i2___llmod+2,i2__doprnt@val+2
 13463  001E88  C011  F068         	movff	?i2___llmod+3,i2__doprnt@val+3
 13464  001E8C                     i2l9352:
 13465  001E8C  0100               	movlb	0	; () banked
 13466  001E8E  0776               	decf	i2__doprnt@c& (0+255),f,b
 13467  001E90  0100               	movlb	0	; () banked
 13468  001E92  2976               	incf	i2__doprnt@c& (0+255),w,b
 13469  001E94  B4D8               	btfsc	status,2,c
 13470  001E96  D037               	goto	i2l9364
 13471  001E98  D75B               	goto	i2l9340
 13472  001E9A                     i2l9354:
 13473                           
 13474                           ; BSR set to: 0
 13475                           ;doprnt.c: 1236: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 13476  001E9A  EE20 F002          	lfsr	2,2
 13477  001E9E  5046               	movf	i2__doprnt@pb,w,c
 13478  001EA0  26D9               	addwf	fsr2l,f,c
 13479  001EA2  5047               	movf	i2__doprnt@pb+1,w,c
 13480  001EA4  22DA               	addwfc	fsr2h,f,c
 13481  001EA6  50DE               	movf	postinc2,w,c
 13482  001EA8  10DE               	iorwf	postinc2,w,c
 13483  001EAA  B4D8               	btfsc	status,2,c
 13484  001EAC  D013               	goto	i2l9358
 13485                           
 13486                           ; BSR set to: 0
 13487  001EAE  EE20 F002          	lfsr	2,2
 13488  001EB2  5046               	movf	i2__doprnt@pb,w,c
 13489  001EB4  26D9               	addwf	fsr2l,f,c
 13490  001EB6  5047               	movf	i2__doprnt@pb+1,w,c
 13491  001EB8  22DA               	addwfc	fsr2h,f,c
 13492  001EBA  D801               	call	i2u1556_48
 13493  001EBC  D020               	goto	i2l9362
 13494  001EBE                     i2u1556_48:
 13495  001EBE  0005               	push	
 13496  001EC0  6EFA               	movwf	pclath,c
 13497  001EC2  50DE               	movf	postinc2,w,c
 13498  001EC4  6EFD               	movwf	tosl,c
 13499  001EC6  50DE               	movf	postinc2,w,c
 13500  001EC8  6EFE               	movwf	tosh,c
 13501  001ECA  50F8               	movf	tblptru,w,c
 13502  001ECC  6EFF               	movwf	tosu,c
 13503  001ECE  50FA               	movf	pclath,w,c
 13504  001ED0  0E30               	movlw	48
 13505  001ED2  0012               	return		;indir
 13506  001ED4                     i2l9358:
 13507  001ED4  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13508  001ED8  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13509  001EDC  CFDE F04C          	movff	postinc2,??i2__doprnt
 13510  001EE0  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13511  001EE4  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13512  001EE8  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13513  001EEC  0E30               	movlw	48
 13514  001EEE  6EDF               	movwf	indf2,c
 13515  001EF0  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13516  001EF4  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13517  001EF8  2ADE               	incf	postinc2,f,c
 13518  001EFA  0E00               	movlw	0
 13519  001EFC  22DD               	addwfc	postdec2,f,c
 13520  001EFE                     i2l9362:
 13521                           
 13522                           ;doprnt.c: 1237: prec--;
 13523  001EFE  0100               	movlb	0	; () banked
 13524  001F00  0774               	decf	i2__doprnt@prec& (0+255),f,b
 13525  001F02  A0D8               	btfss	status,0,c
 13526  001F04  0775               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 13527  001F06                     i2l9364:
 13528                           
 13529                           ; BSR set to: 0
 13530  001F06  0100               	movlb	0	; () banked
 13531  001F08  5174               	movf	i2__doprnt@prec& (0+255),w,b
 13532  001F0A  0100               	movlb	0	; () banked
 13533  001F0C  1175               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 13534  001F0E  B4D8               	btfsc	status,2,c
 13535  001F10  D2A8               	goto	i2l9488
 13536  001F12  D7C3               	goto	i2l9354
 13537  001F14                     i2l414:
 13538                           
 13539                           ; BSR set to: 0
 13540                           ;doprnt.c: 1246: }
 13541                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
 13542  001F14  0100               	movlb	0	; () banked
 13543  001F16  BD72               	btfsc	i2__doprnt@flag& (0+255),6,b
 13544  001F18  D046               	goto	i2l481
 13545                           
 13546                           ; BSR set to: 0
 13547                           ;doprnt.c: 1253: {
 13548                           ;doprnt.c: 1255: if(flag & 0x10)
 13549  001F1A  0100               	movlb	0	; () banked
 13550  001F1C  A972               	btfss	i2__doprnt@flag& (0+255),4,b
 13551  001F1E  D019               	goto	i2l9370
 13552                           
 13553                           ; BSR set to: 0
 13554                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 13555  001F20  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 13556  001F24  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 13557  001F28  CFDF F04C          	movff	indf2,??i2__doprnt
 13558  001F2C  0E04               	movlw	4
 13559  001F2E  26DE               	addwf	postinc2,f,c
 13560  001F30  CFDF F04D          	movff	indf2,??i2__doprnt+1
 13561  001F34  0E00               	movlw	0
 13562  001F36  22DD               	addwfc	postdec2,f,c
 13563  001F38  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13564  001F3C  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13565  001F40  CFDE F065          	movff	postinc2,i2__doprnt@val
 13566  001F44  CFDE F066          	movff	postinc2,i2__doprnt@val+1
 13567  001F48  CFDE F067          	movff	postinc2,i2__doprnt@val+2
 13568  001F4C  CFDE F068          	movff	postinc2,i2__doprnt@val+3
 13569  001F50  D01A               	goto	i2l9372
 13570  001F52                     i2l9370:
 13571                           
 13572                           ; BSR set to: 0
 13573                           ;doprnt.c: 1257: else
 13574                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 13575  001F52  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 13576  001F56  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 13577  001F5A  CFDF F04C          	movff	indf2,??i2__doprnt
 13578  001F5E  0E02               	movlw	2
 13579  001F60  26DE               	addwf	postinc2,f,c
 13580  001F62  CFDF F04D          	movff	indf2,??i2__doprnt+1
 13581  001F66  0E00               	movlw	0
 13582  001F68  22DD               	addwfc	postdec2,f,c
 13583  001F6A  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13584  001F6E  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13585  001F72  CFDE F065          	movff	postinc2,i2__doprnt@val
 13586  001F76  CFDD F066          	movff	postdec2,i2__doprnt@val+1
 13587  001F7A  0100               	movlb	0	; () banked
 13588  001F7C  0E00               	movlw	0
 13589  001F7E  BF66               	btfsc	(i2__doprnt@val+1)& (0+255),7,b
 13590  001F80  0EFF               	movlw	-1
 13591  001F82  6F67               	movwf	(i2__doprnt@val+2)& (0+255),b
 13592  001F84  6F68               	movwf	(i2__doprnt@val+3)& (0+255),b
 13593  001F86                     i2l9372:
 13594                           
 13595                           ; BSR set to: 0
 13596                           ;doprnt.c: 1261: if((long)val < 0) {
 13597  001F86  0100               	movlb	0	; () banked
 13598  001F88  AF68               	btfss	(i2__doprnt@val+3)& (0+255),7,b
 13599  001F8A  D044               	goto	i2l9382
 13600                           
 13601                           ; BSR set to: 0
 13602                           ;doprnt.c: 1262: flag |= 0x03;
 13603  001F8C  0E03               	movlw	3
 13604  001F8E  0100               	movlb	0	; () banked
 13605  001F90  1372               	iorwf	i2__doprnt@flag& (0+255),f,b
 13606                           
 13607                           ; BSR set to: 0
 13608                           ;doprnt.c: 1263: val = -val;
 13609  001F92  0100               	movlb	0	; () banked
 13610  001F94  1F68               	comf	(i2__doprnt@val+3)& (0+255),f,b
 13611  001F96  1F67               	comf	(i2__doprnt@val+2)& (0+255),f,b
 13612  001F98  1F66               	comf	(i2__doprnt@val+1)& (0+255),f,b
 13613  001F9A  6D65               	negf	i2__doprnt@val& (0+255),b
 13614  001F9C  0E00               	movlw	0
 13615  001F9E  2366               	addwfc	(i2__doprnt@val+1)& (0+255),f,b
 13616  001FA0  2367               	addwfc	(i2__doprnt@val+2)& (0+255),f,b
 13617  001FA2  2368               	addwfc	(i2__doprnt@val+3)& (0+255),f,b
 13618                           
 13619                           ; BSR set to: 0
 13620                           ;doprnt.c: 1264: }
 13621                           ;doprnt.c: 1266: }
 13622  001FA4  D037               	goto	i2l9382
 13623  001FA6                     i2l481:
 13624                           
 13625                           ; BSR set to: 0
 13626                           ;doprnt.c: 1268: else
 13627                           ;doprnt.c: 1273: {
 13628                           ;doprnt.c: 1281: if(flag & 0x10)
 13629  001FA6  0100               	movlb	0	; () banked
 13630  001FA8  A972               	btfss	i2__doprnt@flag& (0+255),4,b
 13631  001FAA  D019               	goto	i2l9380
 13632                           
 13633                           ; BSR set to: 0
 13634                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 13635  001FAC  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 13636  001FB0  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 13637  001FB4  CFDF F04C          	movff	indf2,??i2__doprnt
 13638  001FB8  0E04               	movlw	4
 13639  001FBA  26DE               	addwf	postinc2,f,c
 13640  001FBC  CFDF F04D          	movff	indf2,??i2__doprnt+1
 13641  001FC0  0E00               	movlw	0
 13642  001FC2  22DD               	addwfc	postdec2,f,c
 13643  001FC4  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13644  001FC8  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13645  001FCC  CFDE F065          	movff	postinc2,i2__doprnt@val
 13646  001FD0  CFDE F066          	movff	postinc2,i2__doprnt@val+1
 13647  001FD4  CFDE F067          	movff	postinc2,i2__doprnt@val+2
 13648  001FD8  CFDE F068          	movff	postinc2,i2__doprnt@val+3
 13649  001FDC  D01B               	goto	i2l9382
 13650  001FDE                     i2l9380:
 13651                           
 13652                           ; BSR set to: 0
 13653                           ;doprnt.c: 1283: else
 13654                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 13655  001FDE  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 13656  001FE2  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 13657  001FE6  CFDF F04C          	movff	indf2,??i2__doprnt
 13658  001FEA  0E02               	movlw	2
 13659  001FEC  26DE               	addwf	postinc2,f,c
 13660  001FEE  CFDF F04D          	movff	indf2,??i2__doprnt+1
 13661  001FF2  0E00               	movlw	0
 13662  001FF4  22DD               	addwfc	postdec2,f,c
 13663  001FF6  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13664  001FFA  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13665  001FFE  CFDE F04E          	movff	postinc2,??i2__doprnt+2
 13666  002002  CFDD F04F          	movff	postdec2,??i2__doprnt+3
 13667  002006  C04E  F065         	movff	??i2__doprnt+2,i2__doprnt@val
 13668  00200A  C04F  F066         	movff	??i2__doprnt+3,i2__doprnt@val+1
 13669  00200E  0100               	movlb	0	; () banked
 13670  002010  6B67               	clrf	(i2__doprnt@val+2)& (0+255),b
 13671  002012  6B68               	clrf	(i2__doprnt@val+3)& (0+255),b
 13672  002014                     i2l9382:
 13673                           
 13674                           ; BSR set to: 0
 13675                           ;doprnt.c: 1287: }
 13676                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 13677  002014  0100               	movlb	0	; () banked
 13678  002016  5174               	movf	i2__doprnt@prec& (0+255),w,b
 13679  002018  0100               	movlb	0	; () banked
 13680  00201A  1175               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 13681  00201C  A4D8               	btfss	status,2,c
 13682  00201E  D00D               	goto	i2l9388
 13683                           
 13684                           ; BSR set to: 0
 13685  002020  0100               	movlb	0	; () banked
 13686  002022  5165               	movf	i2__doprnt@val& (0+255),w,b
 13687  002024  0100               	movlb	0	; () banked
 13688  002026  1166               	iorwf	(i2__doprnt@val+1)& (0+255),w,b
 13689  002028  0100               	movlb	0	; () banked
 13690  00202A  1167               	iorwf	(i2__doprnt@val+2)& (0+255),w,b
 13691  00202C  0100               	movlb	0	; () banked
 13692  00202E  1168               	iorwf	(i2__doprnt@val+3)& (0+255),w,b
 13693  002030  A4D8               	btfss	status,2,c
 13694  002032  D003               	goto	i2l9388
 13695                           
 13696                           ; BSR set to: 0
 13697                           ;doprnt.c: 1291: prec++;
 13698  002034  0100               	movlb	0	; () banked
 13699  002036  4B74               	infsnz	i2__doprnt@prec& (0+255),f,b
 13700  002038  2B75               	incf	(i2__doprnt@prec+1)& (0+255),f,b
 13701  00203A                     i2l9388:
 13702                           
 13703                           ; BSR set to: 0
 13704                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 13705  00203A  0E01               	movlw	1
 13706  00203C  0100               	movlb	0	; () banked
 13707  00203E  6F76               	movwf	i2__doprnt@c& (0+255),b
 13708  002040                     i2l9390:
 13709                           
 13710                           ; BSR set to: 0
 13711  002040  0E0A               	movlw	10
 13712  002042  0100               	movlb	0	; () banked
 13713  002044  1976               	xorwf	i2__doprnt@c& (0+255),w,b
 13714  002046  B4D8               	btfsc	status,2,c
 13715  002048  D01E               	goto	i2l9402
 13716                           
 13717                           ; BSR set to: 0
 13718                           ;doprnt.c: 1306: if(val < dpowers[c])
 13719                           
 13720                           ; BSR set to: 0
 13721                           
 13722                           ; BSR set to: 0
 13723  00204A  0100               	movlb	0	; () banked
 13724  00204C  5176               	movf	i2__doprnt@c& (0+255),w,b
 13725  00204E  0D04               	mullw	4
 13726  002050  0EF7               	movlw	low _dpowers
 13727  002052  24F3               	addwf	prodl,w,c
 13728  002054  6EF6               	movwf	tblptrl,c
 13729  002056  0E7E               	movlw	high _dpowers
 13730  002058  20F4               	addwfc	prodh,w,c
 13731  00205A  6EF7               	movwf	tblptrh,c
 13732  00205C                     	if	0	;There are less than 3 active tblptr bytes
 13733  00205C                     	endif
 13734  00205C  0009               	tblrd		*+
 13735  00205E  50F5               	movf	tablat,w,c
 13736  002060  0100               	movlb	0	; () banked
 13737  002062  5D65               	subwf	i2__doprnt@val& (0+255),w,b
 13738  002064  0009               	tblrd		*+
 13739  002066  50F5               	movf	tablat,w,c
 13740  002068  0100               	movlb	0	; () banked
 13741  00206A  5966               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 13742  00206C  0009               	tblrd		*+
 13743  00206E  50F5               	movf	tablat,w,c
 13744  002070  0100               	movlb	0	; () banked
 13745  002072  5967               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 13746  002074  0009               	tblrd		*+
 13747  002076  50F5               	movf	tablat,w,c
 13748  002078  0100               	movlb	0	; () banked
 13749  00207A  5968               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 13750  00207C  A0D8               	btfss	status,0,c
 13751  00207E  D003               	goto	i2l9402
 13752                           
 13753                           ; BSR set to: 0
 13754                           
 13755                           ; BSR set to: 0
 13756                           
 13757                           ; BSR set to: 0
 13758                           ;doprnt.c: 1307: break;
 13759  002080  0100               	movlb	0	; () banked
 13760  002082  2B76               	incf	i2__doprnt@c& (0+255),f,b
 13761  002084  D7DD               	goto	i2l9390
 13762  002086                     i2l9402:
 13763                           
 13764                           ; BSR set to: 0
 13765                           ;doprnt.c: 1339: if(c < prec)
 13766  002086  0E80               	movlw	128
 13767  002088  0100               	movlb	0	; () banked
 13768  00208A  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 13769  00208C  0E7F               	movlw	127
 13770  00208E  6E4C               	movwf	??i2__doprnt& (0+255),c
 13771  002090  0100               	movlb	0	; () banked
 13772  002092  5174               	movf	i2__doprnt@prec& (0+255),w,b
 13773  002094  0100               	movlb	0	; () banked
 13774  002096  5D76               	subwf	i2__doprnt@c& (0+255),w,b
 13775  002098  0100               	movlb	0	; () banked
 13776  00209A  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 13777  00209C  0A80               	xorlw	128
 13778  00209E  584C               	subwfb	??i2__doprnt& (0+255),w,c
 13779  0020A0  B0D8               	btfsc	status,0,c
 13780  0020A2  D003               	goto	i2l9406
 13781                           
 13782                           ; BSR set to: 0
 13783                           ;doprnt.c: 1340: c = prec;
 13784  0020A4  C074  F076         	movff	i2__doprnt@prec,i2__doprnt@c
 13785  0020A8  D016               	goto	i2l9410
 13786  0020AA                     i2l9406:
 13787                           
 13788                           ; BSR set to: 0
 13789                           ;doprnt.c: 1341: else if(prec < c)
 13790  0020AA  0100               	movlb	0	; () banked
 13791  0020AC  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 13792  0020AE  0A80               	xorlw	128
 13793  0020B0  6E4C               	movwf	??i2__doprnt& (0+255),c
 13794  0020B2  0100               	movlb	0	; () banked
 13795  0020B4  5176               	movf	i2__doprnt@c& (0+255),w,b
 13796  0020B6  0100               	movlb	0	; () banked
 13797  0020B8  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 13798  0020BA  0E80               	movlw	128
 13799  0020BC  0100               	movlb	0	; () banked
 13800  0020BE  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 13801  0020C0  0E7F               	movlw	127
 13802  0020C2  584C               	subwfb	??i2__doprnt& (0+255),w,c
 13803  0020C4  B0D8               	btfsc	status,0,c
 13804  0020C6  D007               	goto	i2l9410
 13805                           
 13806                           ; BSR set to: 0
 13807                           ;doprnt.c: 1342: prec = c;
 13808  0020C8  0100               	movlb	0	; () banked
 13809  0020CA  5176               	movf	i2__doprnt@c& (0+255),w,b
 13810  0020CC  0100               	movlb	0	; () banked
 13811  0020CE  6F74               	movwf	i2__doprnt@prec& (0+255),b
 13812  0020D0  6B75               	clrf	(i2__doprnt@prec+1)& (0+255),b
 13813  0020D2  BF74               	btfsc	i2__doprnt@prec& (0+255),7,b
 13814  0020D4  0775               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 13815  0020D6                     i2l9410:
 13816                           
 13817                           ; BSR set to: 0
 13818                           ;doprnt.c: 1345: if(width && flag & 0x03)
 13819  0020D6  0100               	movlb	0	; () banked
 13820  0020D8  5170               	movf	i2__doprnt@width& (0+255),w,b
 13821  0020DA  0100               	movlb	0	; () banked
 13822  0020DC  1171               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 13823  0020DE  B4D8               	btfsc	status,2,c
 13824  0020E0  D010               	goto	i2l9416
 13825                           
 13826                           ; BSR set to: 0
 13827  0020E2  0E03               	movlw	3
 13828  0020E4  0100               	movlb	0	; () banked
 13829  0020E6  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 13830  0020E8  6E4C               	movwf	??i2__doprnt& (0+255),c
 13831  0020EA  0E00               	movlw	0
 13832  0020EC  0100               	movlb	0	; () banked
 13833  0020EE  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 13834  0020F0  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 13835  0020F2  504C               	movf	??i2__doprnt,w,c
 13836  0020F4  104D               	iorwf	??i2__doprnt+1,w,c
 13837  0020F6  B4D8               	btfsc	status,2,c
 13838  0020F8  D004               	goto	i2l9416
 13839                           
 13840                           ; BSR set to: 0
 13841                           ;doprnt.c: 1346: width--;
 13842  0020FA  0100               	movlb	0	; () banked
 13843  0020FC  0770               	decf	i2__doprnt@width& (0+255),f,b
 13844  0020FE  A0D8               	btfss	status,0,c
 13845  002100  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 13846  002102                     i2l9416:
 13847                           
 13848                           ; BSR set to: 0
 13849                           ;doprnt.c: 1348: if(flag & 0x4000) {
 13850  002102  0100               	movlb	0	; () banked
 13851  002104  AD73               	btfss	(i2__doprnt@flag+1)& (0+255),6,b
 13852  002106  D01C               	goto	i2l9424
 13853                           
 13854                           ; BSR set to: 0
 13855                           ;doprnt.c: 1349: if(width > prec)
 13856  002108  0100               	movlb	0	; () banked
 13857  00210A  5170               	movf	i2__doprnt@width& (0+255),w,b
 13858  00210C  0100               	movlb	0	; () banked
 13859  00210E  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 13860  002110  0100               	movlb	0	; () banked
 13861  002112  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 13862  002114  0A80               	xorlw	128
 13863  002116  6E4C               	movwf	??i2__doprnt& (0+255),c
 13864  002118  0100               	movlb	0	; () banked
 13865  00211A  5171               	movf	(i2__doprnt@width+1)& (0+255),w,b
 13866  00211C  0A80               	xorlw	128
 13867  00211E  584C               	subwfb	??i2__doprnt& (0+255),w,c
 13868  002120  B0D8               	btfsc	status,0,c
 13869  002122  D009               	goto	i2l9422
 13870                           
 13871                           ; BSR set to: 0
 13872                           ;doprnt.c: 1350: width -= prec;
 13873  002124  0100               	movlb	0	; () banked
 13874  002126  5174               	movf	i2__doprnt@prec& (0+255),w,b
 13875  002128  0100               	movlb	0	; () banked
 13876  00212A  5F70               	subwf	i2__doprnt@width& (0+255),f,b
 13877  00212C  0100               	movlb	0	; () banked
 13878  00212E  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 13879  002130  0100               	movlb	0	; () banked
 13880  002132  5B71               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 13881  002134  D005               	goto	i2l9424
 13882  002136                     i2l9422:
 13883                           
 13884                           ; BSR set to: 0
 13885                           ;doprnt.c: 1351: else
 13886                           ;doprnt.c: 1352: width = 0;
 13887  002136  0E00               	movlw	0
 13888  002138  0100               	movlb	0	; () banked
 13889  00213A  6F71               	movwf	(i2__doprnt@width+1)& (0+255),b
 13890  00213C  0E00               	movlw	0
 13891  00213E  6F70               	movwf	i2__doprnt@width& (0+255),b
 13892  002140                     i2l9424:
 13893                           
 13894                           ; BSR set to: 0
 13895                           ;doprnt.c: 1353: }
 13896                           ;doprnt.c: 1381: if(width > c)
 13897  002140  0E80               	movlw	128
 13898  002142  0100               	movlb	0	; () banked
 13899  002144  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 13900  002146  0E7F               	movlw	127
 13901  002148  6E4C               	movwf	??i2__doprnt& (0+255),c
 13902  00214A  0100               	movlb	0	; () banked
 13903  00214C  5170               	movf	i2__doprnt@width& (0+255),w,b
 13904  00214E  0100               	movlb	0	; () banked
 13905  002150  5D76               	subwf	i2__doprnt@c& (0+255),w,b
 13906  002152  0100               	movlb	0	; () banked
 13907  002154  5171               	movf	(i2__doprnt@width+1)& (0+255),w,b
 13908  002156  0A80               	xorlw	128
 13909  002158  584C               	subwfb	??i2__doprnt& (0+255),w,c
 13910  00215A  B0D8               	btfsc	status,0,c
 13911  00215C  D00B               	goto	i2l9428
 13912                           
 13913                           ; BSR set to: 0
 13914                           ;doprnt.c: 1382: width -= c;
 13915  00215E  0100               	movlb	0	; () banked
 13916  002160  5176               	movf	i2__doprnt@c& (0+255),w,b
 13917  002162  0100               	movlb	0	; () banked
 13918  002164  5F70               	subwf	i2__doprnt@width& (0+255),f,b
 13919  002166  0E00               	movlw	0
 13920  002168  0100               	movlb	0	; () banked
 13921  00216A  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 13922  00216C  0EFF               	movlw	255
 13923  00216E  0100               	movlb	0	; () banked
 13924  002170  5B71               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 13925  002172  D005               	goto	i2l9430
 13926  002174                     i2l9428:
 13927                           
 13928                           ; BSR set to: 0
 13929                           ;doprnt.c: 1383: else
 13930                           ;doprnt.c: 1384: width = 0;
 13931  002174  0E00               	movlw	0
 13932  002176  0100               	movlb	0	; () banked
 13933  002178  6F71               	movwf	(i2__doprnt@width+1)& (0+255),b
 13934  00217A  0E00               	movlw	0
 13935  00217C  6F70               	movwf	i2__doprnt@width& (0+255),b
 13936  00217E                     i2l9430:
 13937                           
 13938                           ; BSR set to: 0
 13939                           ;doprnt.c: 1387: if(flag & 0x04) {
 13940  00217E  0100               	movlb	0	; () banked
 13941  002180  A572               	btfss	i2__doprnt@flag& (0+255),2,b
 13942  002182  D07B               	goto	i2l9454
 13943                           
 13944                           ; BSR set to: 0
 13945                           ;doprnt.c: 1392: if(flag & 0x03)
 13946  002184  0E03               	movlw	3
 13947  002186  0100               	movlb	0	; () banked
 13948  002188  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 13949  00218A  6E4C               	movwf	??i2__doprnt& (0+255),c
 13950  00218C  0E00               	movlw	0
 13951  00218E  0100               	movlb	0	; () banked
 13952  002190  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 13953  002192  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 13954  002194  504C               	movf	??i2__doprnt,w,c
 13955  002196  104D               	iorwf	??i2__doprnt+1,w,c
 13956  002198  B4D8               	btfsc	status,2,c
 13957  00219A  D032               	goto	i2l9442
 13958                           
 13959                           ; BSR set to: 0
 13960                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 13961  00219C  EE20 F002          	lfsr	2,2
 13962  0021A0  5046               	movf	i2__doprnt@pb,w,c
 13963  0021A2  26D9               	addwf	fsr2l,f,c
 13964  0021A4  5047               	movf	i2__doprnt@pb+1,w,c
 13965  0021A6  22DA               	addwfc	fsr2h,f,c
 13966  0021A8  50DE               	movf	postinc2,w,c
 13967  0021AA  10DE               	iorwf	postinc2,w,c
 13968  0021AC  B4D8               	btfsc	status,2,c
 13969  0021AE  D013               	goto	i2l9438
 13970                           
 13971                           ; BSR set to: 0
 13972  0021B0  EE20 F002          	lfsr	2,2
 13973  0021B4  5046               	movf	i2__doprnt@pb,w,c
 13974  0021B6  26D9               	addwf	fsr2l,f,c
 13975  0021B8  5047               	movf	i2__doprnt@pb+1,w,c
 13976  0021BA  22DA               	addwfc	fsr2h,f,c
 13977  0021BC  D801               	call	i2u1577_48
 13978  0021BE  D020               	goto	i2l9442
 13979  0021C0                     i2u1577_48:
 13980  0021C0  0005               	push	
 13981  0021C2  6EFA               	movwf	pclath,c
 13982  0021C4  50DE               	movf	postinc2,w,c
 13983  0021C6  6EFD               	movwf	tosl,c
 13984  0021C8  50DE               	movf	postinc2,w,c
 13985  0021CA  6EFE               	movwf	tosh,c
 13986  0021CC  50F8               	movf	tblptru,w,c
 13987  0021CE  6EFF               	movwf	tosu,c
 13988  0021D0  50FA               	movf	pclath,w,c
 13989  0021D2  0E2D               	movlw	45
 13990  0021D4  0012               	return		;indir
 13991  0021D6                     i2l9438:
 13992  0021D6  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13993  0021DA  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13994  0021DE  CFDE F04C          	movff	postinc2,??i2__doprnt
 13995  0021E2  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13996  0021E6  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13997  0021EA  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13998  0021EE  0E2D               	movlw	45
 13999  0021F0  6EDF               	movwf	indf2,c
 14000  0021F2  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14001  0021F6  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14002  0021FA  2ADE               	incf	postinc2,f,c
 14003  0021FC  0E00               	movlw	0
 14004  0021FE  22DD               	addwfc	postdec2,f,c
 14005  002200                     i2l9442:
 14006                           
 14007                           ;doprnt.c: 1415: if(width)
 14008  002200  0100               	movlb	0	; () banked
 14009  002202  5170               	movf	i2__doprnt@width& (0+255),w,b
 14010  002204  0100               	movlb	0	; () banked
 14011  002206  1171               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 14012  002208  B4D8               	btfsc	status,2,c
 14013  00220A  D120               	goto	i2l9486
 14014                           
 14015                           ; BSR set to: 0
 14016                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 14017                           
 14018                           ; BSR set to: 0
 14019                           
 14020                           ;doprnt.c: 1416: do
 14021  00220C  EE20 F002          	lfsr	2,2
 14022  002210  5046               	movf	i2__doprnt@pb,w,c
 14023  002212  26D9               	addwf	fsr2l,f,c
 14024  002214  5047               	movf	i2__doprnt@pb+1,w,c
 14025  002216  22DA               	addwfc	fsr2h,f,c
 14026  002218  50DE               	movf	postinc2,w,c
 14027  00221A  10DE               	iorwf	postinc2,w,c
 14028  00221C  B4D8               	btfsc	status,2,c
 14029  00221E  D013               	goto	i2l9448
 14030                           
 14031                           ; BSR set to: 0
 14032  002220  EE20 F002          	lfsr	2,2
 14033  002224  5046               	movf	i2__doprnt@pb,w,c
 14034  002226  26D9               	addwf	fsr2l,f,c
 14035  002228  5047               	movf	i2__doprnt@pb+1,w,c
 14036  00222A  22DA               	addwfc	fsr2h,f,c
 14037  00222C  D801               	call	i2u1580_48
 14038  00222E  D020               	goto	i2l9452
 14039  002230                     i2u1580_48:
 14040  002230  0005               	push	
 14041  002232  6EFA               	movwf	pclath,c
 14042  002234  50DE               	movf	postinc2,w,c
 14043  002236  6EFD               	movwf	tosl,c
 14044  002238  50DE               	movf	postinc2,w,c
 14045  00223A  6EFE               	movwf	tosh,c
 14046  00223C  50F8               	movf	tblptru,w,c
 14047  00223E  6EFF               	movwf	tosu,c
 14048  002240  50FA               	movf	pclath,w,c
 14049  002242  0E30               	movlw	48
 14050  002244  0012               	return		;indir
 14051  002246                     i2l9448:
 14052  002246  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14053  00224A  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14054  00224E  CFDE F04C          	movff	postinc2,??i2__doprnt
 14055  002252  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 14056  002256  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 14057  00225A  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 14058  00225E  0E30               	movlw	48
 14059  002260  6EDF               	movwf	indf2,c
 14060  002262  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14061  002266  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14062  00226A  2ADE               	incf	postinc2,f,c
 14063  00226C  0E00               	movlw	0
 14064  00226E  22DD               	addwfc	postdec2,f,c
 14065  002270                     i2l9452:
 14066                           
 14067                           ;doprnt.c: 1418: while(--width);
 14068  002270  0100               	movlb	0	; () banked
 14069  002272  0770               	decf	i2__doprnt@width& (0+255),f,b
 14070  002274  A0D8               	btfss	status,0,c
 14071  002276  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 14072  002278  D7C3               	goto	i2l9442
 14073  00227A                     i2l9454:
 14074                           
 14075                           ; BSR set to: 0
 14076                           ;doprnt.c: 1422: {
 14077                           ;doprnt.c: 1424: if(width
 14078                           ;doprnt.c: 1428: )
 14079  00227A  0100               	movlb	0	; () banked
 14080  00227C  5170               	movf	i2__doprnt@width& (0+255),w,b
 14081  00227E  0100               	movlb	0	; () banked
 14082  002280  1171               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 14083  002282  B4D8               	btfsc	status,2,c
 14084  002284  D03C               	goto	i2l9466
 14085  002286                     i2l9456:
 14086                           
 14087                           ; BSR set to: 0
 14088                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 14089  002286  EE20 F002          	lfsr	2,2
 14090  00228A  5046               	movf	i2__doprnt@pb,w,c
 14091  00228C  26D9               	addwf	fsr2l,f,c
 14092  00228E  5047               	movf	i2__doprnt@pb+1,w,c
 14093  002290  22DA               	addwfc	fsr2h,f,c
 14094  002292  50DE               	movf	postinc2,w,c
 14095  002294  10DE               	iorwf	postinc2,w,c
 14096  002296  B4D8               	btfsc	status,2,c
 14097  002298  D013               	goto	i2l9460
 14098                           
 14099                           ; BSR set to: 0
 14100  00229A  EE20 F002          	lfsr	2,2
 14101  00229E  5046               	movf	i2__doprnt@pb,w,c
 14102  0022A0  26D9               	addwf	fsr2l,f,c
 14103  0022A2  5047               	movf	i2__doprnt@pb+1,w,c
 14104  0022A4  22DA               	addwfc	fsr2h,f,c
 14105  0022A6  D801               	call	i2u1584_48
 14106  0022A8  D020               	goto	i2l9464
 14107  0022AA                     i2u1584_48:
 14108  0022AA  0005               	push	
 14109  0022AC  6EFA               	movwf	pclath,c
 14110  0022AE  50DE               	movf	postinc2,w,c
 14111  0022B0  6EFD               	movwf	tosl,c
 14112  0022B2  50DE               	movf	postinc2,w,c
 14113  0022B4  6EFE               	movwf	tosh,c
 14114  0022B6  50F8               	movf	tblptru,w,c
 14115  0022B8  6EFF               	movwf	tosu,c
 14116  0022BA  50FA               	movf	pclath,w,c
 14117  0022BC  0E20               	movlw	32
 14118  0022BE  0012               	return		;indir
 14119  0022C0                     i2l9460:
 14120  0022C0  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14121  0022C4  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14122  0022C8  CFDE F04C          	movff	postinc2,??i2__doprnt
 14123  0022CC  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 14124  0022D0  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 14125  0022D4  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 14126  0022D8  0E20               	movlw	32
 14127  0022DA  6EDF               	movwf	indf2,c
 14128  0022DC  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14129  0022E0  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14130  0022E4  2ADE               	incf	postinc2,f,c
 14131  0022E6  0E00               	movlw	0
 14132  0022E8  22DD               	addwfc	postdec2,f,c
 14133  0022EA                     i2l9464:
 14134                           
 14135                           ;doprnt.c: 1431: while(--width);
 14136  0022EA  0100               	movlb	0	; () banked
 14137  0022EC  0770               	decf	i2__doprnt@width& (0+255),f,b
 14138  0022EE  A0D8               	btfss	status,0,c
 14139  0022F0  0771               	decf	(i2__doprnt@width+1)& (0+255),f,b
 14140  0022F2  0100               	movlb	0	; () banked
 14141  0022F4  5170               	movf	i2__doprnt@width& (0+255),w,b
 14142  0022F6  0100               	movlb	0	; () banked
 14143  0022F8  1171               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 14144  0022FA  A4D8               	btfss	status,2,c
 14145  0022FC  D7C4               	goto	i2l9456
 14146  0022FE                     i2l9466:
 14147                           
 14148                           ; BSR set to: 0
 14149                           ;doprnt.c: 1438: if(flag & 0x03)
 14150  0022FE  0E03               	movlw	3
 14151  002300  0100               	movlb	0	; () banked
 14152  002302  1572               	andwf	i2__doprnt@flag& (0+255),w,b
 14153  002304  6E4C               	movwf	??i2__doprnt& (0+255),c
 14154  002306  0E00               	movlw	0
 14155  002308  0100               	movlb	0	; () banked
 14156  00230A  1573               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 14157  00230C  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 14158  00230E  504C               	movf	??i2__doprnt,w,c
 14159  002310  104D               	iorwf	??i2__doprnt+1,w,c
 14160  002312  B4D8               	btfsc	status,2,c
 14161  002314  D09B               	goto	i2l9486
 14162                           
 14163                           ; BSR set to: 0
 14164                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 14165  002316  EE20 F002          	lfsr	2,2
 14166  00231A  5046               	movf	i2__doprnt@pb,w,c
 14167  00231C  26D9               	addwf	fsr2l,f,c
 14168  00231E  5047               	movf	i2__doprnt@pb+1,w,c
 14169  002320  22DA               	addwfc	fsr2h,f,c
 14170  002322  50DE               	movf	postinc2,w,c
 14171  002324  10DE               	iorwf	postinc2,w,c
 14172  002326  B4D8               	btfsc	status,2,c
 14173  002328  D013               	goto	i2l9472
 14174                           
 14175                           ; BSR set to: 0
 14176  00232A  EE20 F002          	lfsr	2,2
 14177  00232E  5046               	movf	i2__doprnt@pb,w,c
 14178  002330  26D9               	addwf	fsr2l,f,c
 14179  002332  5047               	movf	i2__doprnt@pb+1,w,c
 14180  002334  22DA               	addwfc	fsr2h,f,c
 14181  002336  D801               	call	i2u1588_48
 14182  002338  D089               	goto	i2l9486
 14183  00233A                     i2u1588_48:
 14184  00233A  0005               	push	
 14185  00233C  6EFA               	movwf	pclath,c
 14186  00233E  50DE               	movf	postinc2,w,c
 14187  002340  6EFD               	movwf	tosl,c
 14188  002342  50DE               	movf	postinc2,w,c
 14189  002344  6EFE               	movwf	tosh,c
 14190  002346  50F8               	movf	tblptru,w,c
 14191  002348  6EFF               	movwf	tosu,c
 14192  00234A  50FA               	movf	pclath,w,c
 14193  00234C  0E2D               	movlw	45
 14194  00234E  0012               	return		;indir
 14195  002350                     i2l9472:
 14196  002350  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14197  002354  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14198  002358  CFDE F04C          	movff	postinc2,??i2__doprnt
 14199  00235C  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 14200  002360  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 14201  002364  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 14202  002368  0E2D               	movlw	45
 14203  00236A  6EDF               	movwf	indf2,c
 14204  00236C  D068               	goto	i2l9484
 14205  00236E                     i2l9476:
 14206                           
 14207                           ;doprnt.c: 1478: {
 14208                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 14209  00236E  C074  F04C         	movff	i2__doprnt@prec,??i2__doprnt
 14210  002372  C075  F04D         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 14211  002376  90D8               	bcf	status,0,c
 14212  002378  364C               	rlcf	??i2__doprnt,f,c
 14213  00237A  364D               	rlcf	??i2__doprnt+1,f,c
 14214  00237C  90D8               	bcf	status,0,c
 14215  00237E  364C               	rlcf	??i2__doprnt,f,c
 14216  002380  364D               	rlcf	??i2__doprnt+1,f,c
 14217  002382  0EF7               	movlw	low _dpowers
 14218  002384  244C               	addwf	??i2__doprnt,w,c
 14219  002386  6EF6               	movwf	tblptrl,c
 14220  002388  0E7E               	movlw	high _dpowers
 14221  00238A  204D               	addwfc	??i2__doprnt+1,w,c
 14222  00238C  6EF7               	movwf	tblptrh,c
 14223  00238E                     	if	0	;There are less than 3 active tblptr bytes
 14224  00238E                     	endif
 14225  00238E  0009               	tblrd		*+
 14226  002390  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 14227  002394  0009               	tblrd		*+
 14228  002396  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 14229  00239A  0009               	tblrd		*+
 14230  00239C  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 14231  0023A0  000A               	tblrd		*-
 14232  0023A2  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 14233  0023A6  C065  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 14234  0023AA  C066  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 14235  0023AE  C067  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 14236  0023B2  C068  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 14237  0023B6  EC70  F026         	call	i2___lldiv
 14238  0023BA  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 14239  0023BE  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 14240  0023C2  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 14241  0023C6  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 14242  0023CA  0E0A               	movlw	10
 14243  0023CC  6E12               	movwf	i2___llmod@divisor,c
 14244  0023CE  0E00               	movlw	0
 14245  0023D0  6E13               	movwf	i2___llmod@divisor+1,c
 14246  0023D2  0E00               	movlw	0
 14247  0023D4  6E14               	movwf	i2___llmod@divisor+2,c
 14248  0023D6  0E00               	movlw	0
 14249  0023D8  6E15               	movwf	i2___llmod@divisor+3,c
 14250  0023DA  EC64  F027         	call	i2___llmod	;wreg free
 14251  0023DE  500E               	movf	?i2___llmod,w,c
 14252  0023E0  0F30               	addlw	48
 14253  0023E2  0100               	movlb	0	; () banked
 14254  0023E4  6F76               	movwf	i2__doprnt@c& (0+255),b
 14255                           
 14256                           ; BSR set to: 0
 14257                           ;doprnt.c: 1523: }
 14258                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 14259  0023E6  EE20 F002          	lfsr	2,2
 14260  0023EA  5046               	movf	i2__doprnt@pb,w,c
 14261  0023EC  26D9               	addwf	fsr2l,f,c
 14262  0023EE  5047               	movf	i2__doprnt@pb+1,w,c
 14263  0023F0  22DA               	addwfc	fsr2h,f,c
 14264  0023F2  50DE               	movf	postinc2,w,c
 14265  0023F4  10DE               	iorwf	postinc2,w,c
 14266  0023F6  B4D8               	btfsc	status,2,c
 14267  0023F8  D014               	goto	i2l9482
 14268                           
 14269                           ; BSR set to: 0
 14270  0023FA  EE20 F002          	lfsr	2,2
 14271  0023FE  5046               	movf	i2__doprnt@pb,w,c
 14272  002400  26D9               	addwf	fsr2l,f,c
 14273  002402  5047               	movf	i2__doprnt@pb+1,w,c
 14274  002404  22DA               	addwfc	fsr2h,f,c
 14275  002406  D801               	call	i2u1590_48
 14276  002408  D021               	goto	i2l9486
 14277  00240A                     i2u1590_48:
 14278  00240A  0005               	push	
 14279  00240C  6EFA               	movwf	pclath,c
 14280  00240E  50DE               	movf	postinc2,w,c
 14281  002410  6EFD               	movwf	tosl,c
 14282  002412  50DE               	movf	postinc2,w,c
 14283  002414  6EFE               	movwf	tosh,c
 14284  002416  50F8               	movf	tblptru,w,c
 14285  002418  6EFF               	movwf	tosu,c
 14286  00241A  50FA               	movf	pclath,w,c
 14287  00241C  0100               	movlb	0	; () banked
 14288  00241E  5176               	movf	i2__doprnt@c& (0+255),w,b
 14289  002420  0012               	return		;indir
 14290  002422                     i2l9482:
 14291  002422  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14292  002426  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14293  00242A  CFDE F04C          	movff	postinc2,??i2__doprnt
 14294  00242E  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 14295  002432  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 14296  002436  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 14297  00243A  C076  FFDF         	movff	i2__doprnt@c,indf2
 14298  00243E                     i2l9484:
 14299  00243E  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 14300  002442  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 14301  002446  2ADE               	incf	postinc2,f,c
 14302  002448  0E00               	movlw	0
 14303  00244A  22DD               	addwfc	postdec2,f,c
 14304  00244C                     i2l9486:
 14305  00244C  0100               	movlb	0	; () banked
 14306  00244E  0774               	decf	i2__doprnt@prec& (0+255),f,b
 14307  002450  A0D8               	btfss	status,0,c
 14308  002452  0775               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 14309  002454  0100               	movlb	0	; () banked
 14310  002456  2974               	incf	i2__doprnt@prec& (0+255),w,b
 14311  002458  E18A               	bnz	i2l9476
 14312  00245A  0100               	movlb	0	; () banked
 14313  00245C  2975               	incf	(i2__doprnt@prec+1)& (0+255),w,b
 14314  00245E  A4D8               	btfss	status,2,c
 14315  002460  D786               	goto	i2l9476
 14316  002462                     i2l9488:
 14317  002462  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 14318  002466  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 14319  00246A  4A48               	infsnz	i2__doprnt@f,f,c
 14320  00246C  2A49               	incf	i2__doprnt@f+1,f,c
 14321  00246E                     	if	0	;tblptru may be non-zero
 14322  00246E                     	endif
 14323  00246E                     	if	0	;tblptru may be non-zero
 14324  00246E                     	endif
 14325  00246E  0008               	tblrd		*
 14326  002470  CFF5 F076          	movff	tablat,i2__doprnt@c
 14327  002474  0100               	movlb	0	; () banked
 14328  002476  5176               	movf	i2__doprnt@c& (0+255),w,b
 14329  002478  A4D8               	btfss	status,2,c
 14330  00247A  EF8A  F009         	goto	i2l9100
 14331  00247E                     i2l9490:
 14332                           
 14333                           ; BSR set to: 0
 14334                           ;doprnt.c: 1540: return 0;
 14335  00247E  0E00               	movlw	0
 14336  002480  6E47               	movwf	?i2__doprnt+1,c
 14337  002482  0E00               	movlw	0
 14338  002484  6E46               	movwf	?i2__doprnt,c
 14339  002486  0012               	return	
 14340  002488                     __end_ofi2__doprnt:
 14341                           	opt stack 0
 14342                           tosu	equ	0xFFF
 14343                           tosh	equ	0xFFE
 14344                           tosl	equ	0xFFD
 14345                           pclatu	equ	0xFFB
 14346                           pclath	equ	0xFFA
 14347                           tblptru	equ	0xFF8
 14348                           tblptrh	equ	0xFF7
 14349                           tblptrl	equ	0xFF6
 14350                           tablat	equ	0xFF5
 14351                           prodh	equ	0xFF4
 14352                           prodl	equ	0xFF3
 14353                           intcon	equ	0xFF2
 14354                           intcon2	equ	0xFF1
 14355                           intcon3	equ	0xFF0
 14356                           postinc0	equ	0xFEE
 14357                           fsr0h	equ	0xFEA
 14358                           fsr0l	equ	0xFE9
 14359                           wreg	equ	0xFE8
 14360                           postdec1	equ	0xFE5
 14361                           fsr1h	equ	0xFE2
 14362                           fsr1l	equ	0xFE1
 14363                           indf2	equ	0xFDF
 14364                           postinc2	equ	0xFDE
 14365                           postdec2	equ	0xFDD
 14366                           fsr2h	equ	0xFDA
 14367                           fsr2l	equ	0xFD9
 14368                           status	equ	0xFD8
 14369                           
 14370 ;; *************** function i2_scale *****************
 14371 ;; Defined at:
 14372 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 14373 ;; Parameters:    Size  Location     Type
 14374 ;;  scl             1    wreg     char 
 14375 ;; Auto vars:     Size  Location     Type
 14376 ;;  scl             1   53[COMRAM] char 
 14377 ;; Return value:  Size  Location     Type
 14378 ;;                  3   47[COMRAM] char 
 14379 ;; Registers used:
 14380 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14381 ;; Tracked objects:
 14382 ;;		On entry : 0/0
 14383 ;;		On exit  : 0/0
 14384 ;;		Unchanged: 0/0
 14385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14386 ;;      Params:         3       0       0       0       0       0       0
 14387 ;;      Locals:         4       0       0       0       0       0       0
 14388 ;;      Temps:          0       0       0       0       0       0       0
 14389 ;;      Totals:         7       0       0       0       0       0       0
 14390 ;;Total ram usage:        7 bytes
 14391 ;; Hardware stack levels used:    1
 14392 ;; Hardware stack levels required when called:    2
 14393 ;; This function calls:
 14394 ;;		i2___awdiv
 14395 ;;		i2___awmod
 14396 ;;		i2___ftmul
 14397 ;;		i2___wmul
 14398 ;; This function is called by:
 14399 ;;		i2__doprnt
 14400 ;; This function uses a non-reentrant model
 14401 ;;
 14402                           
 14403                           	psect	text48
 14404  002936                     __ptext48:
 14405                           	opt stack 0
 14406  002936                     i2_scale:
 14407                           	opt stack 19
 14408                           
 14409                           ; BSR set to: 0
 14410                           ;incstack = 0
 14411                           ;i2scale@scl stored from wreg
 14412  002936  6E36               	movwf	i2scale@scl,c
 14413                           
 14414                           ;doprnt.c: 428: if(scl < 0) {
 14415  002938  AE36               	btfss	i2scale@scl,7,c
 14416  00293A  D0FB               	goto	i2l4150
 14417                           
 14418                           ;doprnt.c: 429: scl = -scl;
 14419  00293C  6C36               	negf	i2scale@scl,c
 14420                           
 14421                           ;doprnt.c: 430: if(scl>=110)
 14422  00293E  5036               	movf	i2scale@scl,w,c
 14423  002940  0A80               	xorlw	128
 14424  002942  0F12               	addlw	-238
 14425  002944  A0D8               	btfss	status,0,c
 14426  002946  D091               	goto	i2l4140
 14427                           
 14428                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 14429  002948  0E00               	movlw	0
 14430  00294A  6E12               	movwf	i2___wmul@multiplicand+1,c
 14431  00294C  0E03               	movlw	3
 14432  00294E  6E11               	movwf	i2___wmul@multiplicand,c
 14433  002950  0E00               	movlw	0
 14434  002952  6E0A               	movwf	i2___awdiv@divisor+1,c
 14435  002954  0E0A               	movlw	10
 14436  002956  6E09               	movwf	i2___awdiv@divisor,c
 14437  002958  0E00               	movlw	0
 14438  00295A  6E04               	movwf	i2___awmod@divisor+1,c
 14439  00295C  0E64               	movlw	100
 14440  00295E  6E03               	movwf	i2___awmod@divisor,c
 14441  002960  5036               	movf	i2scale@scl,w,c
 14442  002962  6E01               	movwf	i2___awmod@dividend,c
 14443  002964  6A02               	clrf	i2___awmod@dividend+1,c
 14444  002966  BE01               	btfsc	i2___awmod@dividend,7,c
 14445  002968  0602               	decf	i2___awmod@dividend+1,f,c
 14446  00296A  EC2C  F027         	call	i2___awmod
 14447  00296E  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 14448  002972  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 14449  002976  EC2E  F026         	call	i2___awdiv	;wreg free
 14450  00297A  0E09               	movlw	9
 14451  00297C  2407               	addwf	?i2___awdiv,w,c
 14452  00297E  6E0F               	movwf	i2___wmul@multiplier,c
 14453  002980  0E00               	movlw	0
 14454  002982  2008               	addwfc	?i2___awdiv+1,w,c
 14455  002984  6E10               	movwf	i2___wmul@multiplier+1,c
 14456  002986  ECF4  F029         	call	i2___wmul	;wreg free
 14457  00298A  0E1F               	movlw	low __npowers_
 14458  00298C  240F               	addwf	?i2___wmul,w,c
 14459  00298E  6EF6               	movwf	tblptrl,c
 14460  002990  0E7F               	movlw	high __npowers_
 14461  002992  2010               	addwfc	?i2___wmul+1,w,c
 14462  002994  6EF7               	movwf	tblptrh,c
 14463  002996                     	if	0	;There are less than 3 active tblptr bytes
 14464  002996                     	endif
 14465  002996  0009               	tblrd		*+
 14466  002998  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14467  00299C  0009               	tblrd		*+
 14468  00299E  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14469  0029A2  000A               	tblrd		*-
 14470  0029A4  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14471  0029A8  0E00               	movlw	0
 14472  0029AA  6E0A               	movwf	i2___awdiv@divisor+1,c
 14473  0029AC  0E64               	movlw	100
 14474  0029AE  6E09               	movwf	i2___awdiv@divisor,c
 14475  0029B0  5036               	movf	i2scale@scl,w,c
 14476  0029B2  6E07               	movwf	i2___awdiv@dividend,c
 14477  0029B4  6A08               	clrf	i2___awdiv@dividend+1,c
 14478  0029B6  BE07               	btfsc	i2___awdiv@dividend,7,c
 14479  0029B8  0608               	decf	i2___awdiv@dividend+1,f,c
 14480  0029BA  EC2E  F026         	call	i2___awdiv	;wreg free
 14481  0029BE  0E12               	movlw	18
 14482  0029C0  2407               	addwf	?i2___awdiv,w,c
 14483  0029C2  6E0F               	movwf	i2___wmul@multiplier,c
 14484  0029C4  0E00               	movlw	0
 14485  0029C6  2008               	addwfc	?i2___awdiv+1,w,c
 14486  0029C8  6E10               	movwf	i2___wmul@multiplier+1,c
 14487  0029CA  0E00               	movlw	0
 14488  0029CC  6E12               	movwf	i2___wmul@multiplicand+1,c
 14489  0029CE  0E03               	movlw	3
 14490  0029D0  6E11               	movwf	i2___wmul@multiplicand,c
 14491  0029D2  ECF4  F029         	call	i2___wmul	;wreg free
 14492  0029D6  0E1F               	movlw	low __npowers_
 14493  0029D8  240F               	addwf	?i2___wmul,w,c
 14494  0029DA  6EF6               	movwf	tblptrl,c
 14495  0029DC  0E7F               	movlw	high __npowers_
 14496  0029DE  2010               	addwfc	?i2___wmul+1,w,c
 14497  0029E0  6EF7               	movwf	tblptrh,c
 14498  0029E2                     	if	0	;There are less than 3 active tblptr bytes
 14499  0029E2                     	endif
 14500  0029E2  0009               	tblrd		*+
 14501  0029E4  CFF5 F021          	movff	tablat,i2___ftmul@f1
 14502  0029E8  0009               	tblrd		*+
 14503  0029EA  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 14504  0029EE  000A               	tblrd		*-
 14505  0029F0  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 14506  0029F4  EC69  F022         	call	i2___ftmul	;wreg free
 14507  0029F8  C021  F033         	movff	?i2___ftmul,i2_scale$1926
 14508  0029FC  C022  F034         	movff	?i2___ftmul+1,i2_scale$1926+1
 14509  002A00  C023  F035         	movff	?i2___ftmul+2,i2_scale$1926+2
 14510                           
 14511                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 14512  002A04  C033  F021         	movff	i2_scale$1926,i2___ftmul@f1
 14513  002A08  C034  F022         	movff	i2_scale$1926+1,i2___ftmul@f1+1
 14514  002A0C  C035  F023         	movff	i2_scale$1926+2,i2___ftmul@f1+2
 14515  002A10  0E00               	movlw	0
 14516  002A12  6E12               	movwf	i2___wmul@multiplicand+1,c
 14517  002A14  0E03               	movlw	3
 14518  002A16  6E11               	movwf	i2___wmul@multiplicand,c
 14519  002A18  0E00               	movlw	0
 14520  002A1A  6E04               	movwf	i2___awmod@divisor+1,c
 14521  002A1C  0E0A               	movlw	10
 14522  002A1E  6E03               	movwf	i2___awmod@divisor,c
 14523  002A20  5036               	movf	i2scale@scl,w,c
 14524  002A22  6E01               	movwf	i2___awmod@dividend,c
 14525  002A24  6A02               	clrf	i2___awmod@dividend+1,c
 14526  002A26  BE01               	btfsc	i2___awmod@dividend,7,c
 14527  002A28  0602               	decf	i2___awmod@dividend+1,f,c
 14528  002A2A  EC2C  F027         	call	i2___awmod	;wreg free
 14529  002A2E  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 14530  002A32  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14531  002A36  ECF4  F029         	call	i2___wmul	;wreg free
 14532  002A3A  0E1F               	movlw	low __npowers_
 14533  002A3C  240F               	addwf	?i2___wmul,w,c
 14534  002A3E  6EF6               	movwf	tblptrl,c
 14535  002A40  0E7F               	movlw	high __npowers_
 14536  002A42  2010               	addwfc	?i2___wmul+1,w,c
 14537  002A44  6EF7               	movwf	tblptrh,c
 14538  002A46                     	if	0	;There are less than 3 active tblptr bytes
 14539  002A46                     	endif
 14540  002A46  0009               	tblrd		*+
 14541  002A48  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14542  002A4C  0009               	tblrd		*+
 14543  002A4E  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14544  002A52  000A               	tblrd		*-
 14545  002A54  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14546  002A58  EC69  F022         	call	i2___ftmul	;wreg free
 14547  002A5C  C021  F030         	movff	?i2___ftmul,?i2_scale
 14548  002A60  C022  F031         	movff	?i2___ftmul+1,?i2_scale+1
 14549  002A64  C023  F032         	movff	?i2___ftmul+2,?i2_scale+2
 14550  002A68  0012               	return	
 14551  002A6A                     i2l4140:
 14552                           
 14553                           ;doprnt.c: 432: else if(scl > 10)
 14554  002A6A  5036               	movf	i2scale@scl,w,c
 14555  002A6C  0A80               	xorlw	128
 14556  002A6E  0F75               	addlw	-139
 14557  002A70  A0D8               	btfss	status,0,c
 14558  002A72  D04D               	goto	i2l4146
 14559                           
 14560                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 14561  002A74  0E00               	movlw	0
 14562  002A76  6E0A               	movwf	i2___awdiv@divisor+1,c
 14563  002A78  0E0A               	movlw	10
 14564  002A7A  6E09               	movwf	i2___awdiv@divisor,c
 14565  002A7C  5036               	movf	i2scale@scl,w,c
 14566  002A7E  6E07               	movwf	i2___awdiv@dividend,c
 14567  002A80  6A08               	clrf	i2___awdiv@dividend+1,c
 14568  002A82  BE07               	btfsc	i2___awdiv@dividend,7,c
 14569  002A84  0608               	decf	i2___awdiv@dividend+1,f,c
 14570  002A86  EC2E  F026         	call	i2___awdiv	;wreg free
 14571  002A8A  0E09               	movlw	9
 14572  002A8C  2407               	addwf	?i2___awdiv,w,c
 14573  002A8E  6E0F               	movwf	i2___wmul@multiplier,c
 14574  002A90  0E00               	movlw	0
 14575  002A92  2008               	addwfc	?i2___awdiv+1,w,c
 14576  002A94  6E10               	movwf	i2___wmul@multiplier+1,c
 14577  002A96  0E00               	movlw	0
 14578  002A98  6E12               	movwf	i2___wmul@multiplicand+1,c
 14579  002A9A  0E03               	movlw	3
 14580  002A9C  6E11               	movwf	i2___wmul@multiplicand,c
 14581  002A9E  ECF4  F029         	call	i2___wmul	;wreg free
 14582  002AA2  0E1F               	movlw	low __npowers_
 14583  002AA4  240F               	addwf	?i2___wmul,w,c
 14584  002AA6  6EF6               	movwf	tblptrl,c
 14585  002AA8  0E7F               	movlw	high __npowers_
 14586  002AAA  2010               	addwfc	?i2___wmul+1,w,c
 14587  002AAC  6EF7               	movwf	tblptrh,c
 14588  002AAE                     	if	0	;There are less than 3 active tblptr bytes
 14589  002AAE                     	endif
 14590  002AAE  0009               	tblrd		*+
 14591  002AB0  CFF5 F021          	movff	tablat,i2___ftmul@f1
 14592  002AB4  0009               	tblrd		*+
 14593  002AB6  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 14594  002ABA  000A               	tblrd		*-
 14595  002ABC  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 14596  002AC0  0E00               	movlw	0
 14597  002AC2  6E12               	movwf	i2___wmul@multiplicand+1,c
 14598  002AC4  0E03               	movlw	3
 14599  002AC6  6E11               	movwf	i2___wmul@multiplicand,c
 14600  002AC8  0E00               	movlw	0
 14601  002ACA  6E04               	movwf	i2___awmod@divisor+1,c
 14602  002ACC  0E0A               	movlw	10
 14603  002ACE  6E03               	movwf	i2___awmod@divisor,c
 14604  002AD0  5036               	movf	i2scale@scl,w,c
 14605  002AD2  6E01               	movwf	i2___awmod@dividend,c
 14606  002AD4  6A02               	clrf	i2___awmod@dividend+1,c
 14607  002AD6  BE01               	btfsc	i2___awmod@dividend,7,c
 14608  002AD8  0602               	decf	i2___awmod@dividend+1,f,c
 14609  002ADA  EC2C  F027         	call	i2___awmod	;wreg free
 14610  002ADE  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 14611  002AE2  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14612  002AE6  ECF4  F029         	call	i2___wmul	;wreg free
 14613  002AEA  0E1F               	movlw	low __npowers_
 14614  002AEC  240F               	addwf	?i2___wmul,w,c
 14615  002AEE  6EF6               	movwf	tblptrl,c
 14616  002AF0  0E7F               	movlw	high __npowers_
 14617  002AF2  2010               	addwfc	?i2___wmul+1,w,c
 14618  002AF4  6EF7               	movwf	tblptrh,c
 14619  002AF6                     	if	0	;There are less than 3 active tblptr bytes
 14620  002AF6                     	endif
 14621  002AF6  0009               	tblrd		*+
 14622  002AF8  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14623  002AFC  0009               	tblrd		*+
 14624  002AFE  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14625  002B02  000A               	tblrd		*-
 14626  002B04  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14627  002B08  EC69  F022         	call	i2___ftmul	;wreg free
 14628  002B0C  D7A7               	goto	L8
 14629  002B0E                     i2l4146:
 14630                           
 14631                           ;doprnt.c: 434: return _npowers_[scl];
 14632  002B0E  5036               	movf	i2scale@scl,w,c
 14633  002B10  0D03               	mullw	3
 14634  002B12  0E1F               	movlw	low __npowers_
 14635  002B14  24F3               	addwf	prodl,w,c
 14636  002B16  6EF6               	movwf	tblptrl,c
 14637  002B18  0E7F               	movlw	high __npowers_
 14638  002B1A  20F4               	addwfc	prodh,w,c
 14639  002B1C  6EF7               	movwf	tblptrh,c
 14640  002B1E                     	if	0	;There are less than 3 active tblptr bytes
 14641  002B1E                     	endif
 14642  002B1E  0009               	tblrd		*+
 14643  002B20  CFF5 F030          	movff	tablat,?i2_scale
 14644  002B24  0009               	tblrd		*+
 14645  002B26  CFF5 F031          	movff	tablat,?i2_scale+1
 14646  002B2A  000A               	tblrd		*-
 14647  002B2C  CFF5 F032          	movff	tablat,?i2_scale+2
 14648  002B30  0012               	return	
 14649  002B32                     i2l4150:
 14650                           
 14651                           ;doprnt.c: 435: }
 14652                           ;doprnt.c: 436: if(scl>=110)
 14653  002B32  5036               	movf	i2scale@scl,w,c
 14654  002B34  0A80               	xorlw	128
 14655  002B36  0F12               	addlw	-238
 14656  002B38  A0D8               	btfss	status,0,c
 14657  002B3A  D091               	goto	i2l4158
 14658                           
 14659                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 14660  002B3C  0E00               	movlw	0
 14661  002B3E  6E12               	movwf	i2___wmul@multiplicand+1,c
 14662  002B40  0E03               	movlw	3
 14663  002B42  6E11               	movwf	i2___wmul@multiplicand,c
 14664  002B44  0E00               	movlw	0
 14665  002B46  6E0A               	movwf	i2___awdiv@divisor+1,c
 14666  002B48  0E0A               	movlw	10
 14667  002B4A  6E09               	movwf	i2___awdiv@divisor,c
 14668  002B4C  0E00               	movlw	0
 14669  002B4E  6E04               	movwf	i2___awmod@divisor+1,c
 14670  002B50  0E64               	movlw	100
 14671  002B52  6E03               	movwf	i2___awmod@divisor,c
 14672  002B54  5036               	movf	i2scale@scl,w,c
 14673  002B56  6E01               	movwf	i2___awmod@dividend,c
 14674  002B58  6A02               	clrf	i2___awmod@dividend+1,c
 14675  002B5A  BE01               	btfsc	i2___awmod@dividend,7,c
 14676  002B5C  0602               	decf	i2___awmod@dividend+1,f,c
 14677  002B5E  EC2C  F027         	call	i2___awmod	;wreg free
 14678  002B62  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 14679  002B66  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 14680  002B6A  EC2E  F026         	call	i2___awdiv	;wreg free
 14681  002B6E  0E09               	movlw	9
 14682  002B70  2407               	addwf	?i2___awdiv,w,c
 14683  002B72  6E0F               	movwf	i2___wmul@multiplier,c
 14684  002B74  0E00               	movlw	0
 14685  002B76  2008               	addwfc	?i2___awdiv+1,w,c
 14686  002B78  6E10               	movwf	i2___wmul@multiplier+1,c
 14687  002B7A  ECF4  F029         	call	i2___wmul	;wreg free
 14688  002B7E  0E46               	movlw	low __powers_
 14689  002B80  240F               	addwf	?i2___wmul,w,c
 14690  002B82  6EF6               	movwf	tblptrl,c
 14691  002B84  0E7F               	movlw	high __powers_
 14692  002B86  2010               	addwfc	?i2___wmul+1,w,c
 14693  002B88  6EF7               	movwf	tblptrh,c
 14694  002B8A                     	if	0	;There are less than 3 active tblptr bytes
 14695  002B8A                     	endif
 14696  002B8A  0009               	tblrd		*+
 14697  002B8C  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14698  002B90  0009               	tblrd		*+
 14699  002B92  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14700  002B96  000A               	tblrd		*-
 14701  002B98  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14702  002B9C  0E00               	movlw	0
 14703  002B9E  6E0A               	movwf	i2___awdiv@divisor+1,c
 14704  002BA0  0E64               	movlw	100
 14705  002BA2  6E09               	movwf	i2___awdiv@divisor,c
 14706  002BA4  5036               	movf	i2scale@scl,w,c
 14707  002BA6  6E07               	movwf	i2___awdiv@dividend,c
 14708  002BA8  6A08               	clrf	i2___awdiv@dividend+1,c
 14709  002BAA  BE07               	btfsc	i2___awdiv@dividend,7,c
 14710  002BAC  0608               	decf	i2___awdiv@dividend+1,f,c
 14711  002BAE  EC2E  F026         	call	i2___awdiv	;wreg free
 14712  002BB2  0E12               	movlw	18
 14713  002BB4  2407               	addwf	?i2___awdiv,w,c
 14714  002BB6  6E0F               	movwf	i2___wmul@multiplier,c
 14715  002BB8  0E00               	movlw	0
 14716  002BBA  2008               	addwfc	?i2___awdiv+1,w,c
 14717  002BBC  6E10               	movwf	i2___wmul@multiplier+1,c
 14718  002BBE  0E00               	movlw	0
 14719  002BC0  6E12               	movwf	i2___wmul@multiplicand+1,c
 14720  002BC2  0E03               	movlw	3
 14721  002BC4  6E11               	movwf	i2___wmul@multiplicand,c
 14722  002BC6  ECF4  F029         	call	i2___wmul	;wreg free
 14723  002BCA  0E46               	movlw	low __powers_
 14724  002BCC  240F               	addwf	?i2___wmul,w,c
 14725  002BCE  6EF6               	movwf	tblptrl,c
 14726  002BD0  0E7F               	movlw	high __powers_
 14727  002BD2  2010               	addwfc	?i2___wmul+1,w,c
 14728  002BD4  6EF7               	movwf	tblptrh,c
 14729  002BD6                     	if	0	;There are less than 3 active tblptr bytes
 14730  002BD6                     	endif
 14731  002BD6  0009               	tblrd		*+
 14732  002BD8  CFF5 F021          	movff	tablat,i2___ftmul@f1
 14733  002BDC  0009               	tblrd		*+
 14734  002BDE  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 14735  002BE2  000A               	tblrd		*-
 14736  002BE4  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 14737  002BE8  EC69  F022         	call	i2___ftmul	;wreg free
 14738  002BEC  C021  F033         	movff	?i2___ftmul,i2_scale$1926
 14739  002BF0  C022  F034         	movff	?i2___ftmul+1,i2_scale$1926+1
 14740  002BF4  C023  F035         	movff	?i2___ftmul+2,i2_scale$1926+2
 14741                           
 14742                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 14743  002BF8  C033  F021         	movff	i2_scale$1926,i2___ftmul@f1
 14744  002BFC  C034  F022         	movff	i2_scale$1926+1,i2___ftmul@f1+1
 14745  002C00  C035  F023         	movff	i2_scale$1926+2,i2___ftmul@f1+2
 14746  002C04  0E00               	movlw	0
 14747  002C06  6E12               	movwf	i2___wmul@multiplicand+1,c
 14748  002C08  0E03               	movlw	3
 14749  002C0A  6E11               	movwf	i2___wmul@multiplicand,c
 14750  002C0C  0E00               	movlw	0
 14751  002C0E  6E04               	movwf	i2___awmod@divisor+1,c
 14752  002C10  0E0A               	movlw	10
 14753  002C12  6E03               	movwf	i2___awmod@divisor,c
 14754  002C14  5036               	movf	i2scale@scl,w,c
 14755  002C16  6E01               	movwf	i2___awmod@dividend,c
 14756  002C18  6A02               	clrf	i2___awmod@dividend+1,c
 14757  002C1A  BE01               	btfsc	i2___awmod@dividend,7,c
 14758  002C1C  0602               	decf	i2___awmod@dividend+1,f,c
 14759  002C1E  EC2C  F027         	call	i2___awmod	;wreg free
 14760  002C22  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 14761  002C26  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14762  002C2A  ECF4  F029         	call	i2___wmul	;wreg free
 14763  002C2E  0E46               	movlw	low __powers_
 14764  002C30  240F               	addwf	?i2___wmul,w,c
 14765  002C32  6EF6               	movwf	tblptrl,c
 14766  002C34  0E7F               	movlw	high __powers_
 14767  002C36  2010               	addwfc	?i2___wmul+1,w,c
 14768  002C38  6EF7               	movwf	tblptrh,c
 14769  002C3A                     	if	0	;There are less than 3 active tblptr bytes
 14770  002C3A                     	endif
 14771  002C3A  0009               	tblrd		*+
 14772  002C3C  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14773  002C40  0009               	tblrd		*+
 14774  002C42  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14775  002C46  000A               	tblrd		*-
 14776  002C48  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14777  002C4C  EC69  F022         	call	i2___ftmul	;wreg free
 14778  002C50  C021  F030         	movff	?i2___ftmul,?i2_scale
 14779  002C54  C022  F031         	movff	?i2___ftmul+1,?i2_scale+1
 14780  002C58  C023  F032         	movff	?i2___ftmul+2,?i2_scale+2
 14781  002C5C  0012               	return	
 14782  002C5E                     i2l4158:
 14783                           
 14784                           ;doprnt.c: 438: else if(scl > 10)
 14785  002C5E  5036               	movf	i2scale@scl,w,c
 14786  002C60  0A80               	xorlw	128
 14787  002C62  0F75               	addlw	-139
 14788  002C64  A0D8               	btfss	status,0,c
 14789  002C66  D04D               	goto	i2l4164
 14790                           
 14791                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 14792  002C68  0E00               	movlw	0
 14793  002C6A  6E0A               	movwf	i2___awdiv@divisor+1,c
 14794  002C6C  0E0A               	movlw	10
 14795  002C6E  6E09               	movwf	i2___awdiv@divisor,c
 14796  002C70  5036               	movf	i2scale@scl,w,c
 14797  002C72  6E07               	movwf	i2___awdiv@dividend,c
 14798  002C74  6A08               	clrf	i2___awdiv@dividend+1,c
 14799  002C76  BE07               	btfsc	i2___awdiv@dividend,7,c
 14800  002C78  0608               	decf	i2___awdiv@dividend+1,f,c
 14801  002C7A  EC2E  F026         	call	i2___awdiv	;wreg free
 14802  002C7E  0E09               	movlw	9
 14803  002C80  2407               	addwf	?i2___awdiv,w,c
 14804  002C82  6E0F               	movwf	i2___wmul@multiplier,c
 14805  002C84  0E00               	movlw	0
 14806  002C86  2008               	addwfc	?i2___awdiv+1,w,c
 14807  002C88  6E10               	movwf	i2___wmul@multiplier+1,c
 14808  002C8A  0E00               	movlw	0
 14809  002C8C  6E12               	movwf	i2___wmul@multiplicand+1,c
 14810  002C8E  0E03               	movlw	3
 14811  002C90  6E11               	movwf	i2___wmul@multiplicand,c
 14812  002C92  ECF4  F029         	call	i2___wmul	;wreg free
 14813  002C96  0E46               	movlw	low __powers_
 14814  002C98  240F               	addwf	?i2___wmul,w,c
 14815  002C9A  6EF6               	movwf	tblptrl,c
 14816  002C9C  0E7F               	movlw	high __powers_
 14817  002C9E  2010               	addwfc	?i2___wmul+1,w,c
 14818  002CA0  6EF7               	movwf	tblptrh,c
 14819  002CA2                     	if	0	;There are less than 3 active tblptr bytes
 14820  002CA2                     	endif
 14821  002CA2  0009               	tblrd		*+
 14822  002CA4  CFF5 F021          	movff	tablat,i2___ftmul@f1
 14823  002CA8  0009               	tblrd		*+
 14824  002CAA  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 14825  002CAE  000A               	tblrd		*-
 14826  002CB0  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 14827  002CB4  0E00               	movlw	0
 14828  002CB6  6E12               	movwf	i2___wmul@multiplicand+1,c
 14829  002CB8  0E03               	movlw	3
 14830  002CBA  6E11               	movwf	i2___wmul@multiplicand,c
 14831  002CBC  0E00               	movlw	0
 14832  002CBE  6E04               	movwf	i2___awmod@divisor+1,c
 14833  002CC0  0E0A               	movlw	10
 14834  002CC2  6E03               	movwf	i2___awmod@divisor,c
 14835  002CC4  5036               	movf	i2scale@scl,w,c
 14836  002CC6  6E01               	movwf	i2___awmod@dividend,c
 14837  002CC8  6A02               	clrf	i2___awmod@dividend+1,c
 14838  002CCA  BE01               	btfsc	i2___awmod@dividend,7,c
 14839  002CCC  0602               	decf	i2___awmod@dividend+1,f,c
 14840  002CCE  EC2C  F027         	call	i2___awmod	;wreg free
 14841  002CD2  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 14842  002CD6  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14843  002CDA  ECF4  F029         	call	i2___wmul	;wreg free
 14844  002CDE  0E46               	movlw	low __powers_
 14845  002CE0  240F               	addwf	?i2___wmul,w,c
 14846  002CE2  6EF6               	movwf	tblptrl,c
 14847  002CE4  0E7F               	movlw	high __powers_
 14848  002CE6  2010               	addwfc	?i2___wmul+1,w,c
 14849  002CE8  6EF7               	movwf	tblptrh,c
 14850  002CEA                     	if	0	;There are less than 3 active tblptr bytes
 14851  002CEA                     	endif
 14852  002CEA  0009               	tblrd		*+
 14853  002CEC  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14854  002CF0  0009               	tblrd		*+
 14855  002CF2  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14856  002CF6  000A               	tblrd		*-
 14857  002CF8  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14858  002CFC  EC69  F022         	call	i2___ftmul	;wreg free
 14859  002D00  D7A7               	goto	L9
 14860  002D02                     i2l4164:
 14861                           
 14862                           ;doprnt.c: 440: return _powers_[scl];
 14863  002D02  5036               	movf	i2scale@scl,w,c
 14864  002D04  0D03               	mullw	3
 14865  002D06  0E46               	movlw	low __powers_
 14866  002D08  24F3               	addwf	prodl,w,c
 14867  002D0A  6EF6               	movwf	tblptrl,c
 14868  002D0C  0E7F               	movlw	high __powers_
 14869  002D0E  20F4               	addwfc	prodh,w,c
 14870  002D10  6EF7               	movwf	tblptrh,c
 14871  002D12                     	if	0	;There are less than 3 active tblptr bytes
 14872  002D12                     	endif
 14873  002D12  0009               	tblrd		*+
 14874  002D14  CFF5 F030          	movff	tablat,?i2_scale
 14875  002D18  0009               	tblrd		*+
 14876  002D1A  CFF5 F031          	movff	tablat,?i2_scale+1
 14877  002D1E  000A               	tblrd		*-
 14878  002D20  CFF5 F032          	movff	tablat,?i2_scale+2
 14879  002D24  0012               	return	
 14880  002D26                     __end_ofi2_scale:
 14881                           	opt stack 0
 14882                           tosu	equ	0xFFF
 14883                           tosh	equ	0xFFE
 14884                           tosl	equ	0xFFD
 14885                           pclatu	equ	0xFFB
 14886                           pclath	equ	0xFFA
 14887                           tblptru	equ	0xFF8
 14888                           tblptrh	equ	0xFF7
 14889                           tblptrl	equ	0xFF6
 14890                           tablat	equ	0xFF5
 14891                           prodh	equ	0xFF4
 14892                           prodl	equ	0xFF3
 14893                           intcon	equ	0xFF2
 14894                           intcon2	equ	0xFF1
 14895                           intcon3	equ	0xFF0
 14896                           postinc0	equ	0xFEE
 14897                           fsr0h	equ	0xFEA
 14898                           fsr0l	equ	0xFE9
 14899                           wreg	equ	0xFE8
 14900                           postdec1	equ	0xFE5
 14901                           fsr1h	equ	0xFE2
 14902                           fsr1l	equ	0xFE1
 14903                           indf2	equ	0xFDF
 14904                           postinc2	equ	0xFDE
 14905                           postdec2	equ	0xFDD
 14906                           fsr2h	equ	0xFDA
 14907                           fsr2l	equ	0xFD9
 14908                           status	equ	0xFD8
 14909                           
 14910 ;; *************** function i2_putch *****************
 14911 ;; Defined at:
 14912 ;;		line 111 in file "mcc_generated_files/eusart1.c"
 14913 ;; Parameters:    Size  Location     Type
 14914 ;;  txData          1    wreg     unsigned char 
 14915 ;; Auto vars:     Size  Location     Type
 14916 ;;  txData          1    1[COMRAM] unsigned char 
 14917 ;; Return value:  Size  Location     Type
 14918 ;;                  1    wreg      void 
 14919 ;; Registers used:
 14920 ;;		wreg, status,2, cstack
 14921 ;; Tracked objects:
 14922 ;;		On entry : 0/0
 14923 ;;		On exit  : 0/0
 14924 ;;		Unchanged: 0/0
 14925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14926 ;;      Params:         0       0       0       0       0       0       0
 14927 ;;      Locals:         1       0       0       0       0       0       0
 14928 ;;      Temps:          0       0       0       0       0       0       0
 14929 ;;      Totals:         1       0       0       0       0       0       0
 14930 ;;Total ram usage:        1 bytes
 14931 ;; Hardware stack levels used:    1
 14932 ;; Hardware stack levels required when called:    1
 14933 ;; This function calls:
 14934 ;;		i2_EUSART1_Write
 14935 ;; This function is called by:
 14936 ;;		_printf
 14937 ;; This function uses a non-reentrant model
 14938 ;;
 14939                           
 14940                           	psect	text49
 14941  005506                     __ptext49:
 14942                           	opt stack 0
 14943  005506                     i2_putch:
 14944                           	opt stack 20
 14945                           
 14946                           ;incstack = 0
 14947                           ;i2putch@txData stored from wreg
 14948  005506  6E02               	movwf	i2putch@txData,c
 14949                           
 14950                           ;eusart1.c: 113: EUSART1_Write(txData);
 14951  005508  5002               	movf	i2putch@txData,w,c
 14952  00550A  EC78  F02A         	call	i2_EUSART1_Write
 14953  00550E  0012               	return		;funcret
 14954  005510                     __end_ofi2_putch:
 14955                           	opt stack 0
 14956                           tosu	equ	0xFFF
 14957                           tosh	equ	0xFFE
 14958                           tosl	equ	0xFFD
 14959                           pclatu	equ	0xFFB
 14960                           pclath	equ	0xFFA
 14961                           tblptru	equ	0xFF8
 14962                           tblptrh	equ	0xFF7
 14963                           tblptrl	equ	0xFF6
 14964                           tablat	equ	0xFF5
 14965                           prodh	equ	0xFF4
 14966                           prodl	equ	0xFF3
 14967                           intcon	equ	0xFF2
 14968                           intcon2	equ	0xFF1
 14969                           intcon3	equ	0xFF0
 14970                           postinc0	equ	0xFEE
 14971                           fsr0h	equ	0xFEA
 14972                           fsr0l	equ	0xFE9
 14973                           wreg	equ	0xFE8
 14974                           postdec1	equ	0xFE5
 14975                           fsr1h	equ	0xFE2
 14976                           fsr1l	equ	0xFE1
 14977                           indf2	equ	0xFDF
 14978                           postinc2	equ	0xFDE
 14979                           postdec2	equ	0xFDD
 14980                           fsr2h	equ	0xFDA
 14981                           fsr2l	equ	0xFD9
 14982                           status	equ	0xFD8
 14983                           
 14984 ;; *************** function i2_EUSART1_Write *****************
 14985 ;; Defined at:
 14986 ;;		line 97 in file "mcc_generated_files/eusart1.c"
 14987 ;; Parameters:    Size  Location     Type
 14988 ;;  txData          1    wreg     unsigned char 
 14989 ;; Auto vars:     Size  Location     Type
 14990 ;;  txData          1    0[COMRAM] unsigned char 
 14991 ;; Return value:  Size  Location     Type
 14992 ;;                  1    wreg      void 
 14993 ;; Registers used:
 14994 ;;		wreg
 14995 ;; Tracked objects:
 14996 ;;		On entry : 0/0
 14997 ;;		On exit  : 0/0
 14998 ;;		Unchanged: 0/0
 14999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15000 ;;      Params:         0       0       0       0       0       0       0
 15001 ;;      Locals:         1       0       0       0       0       0       0
 15002 ;;      Temps:          0       0       0       0       0       0       0
 15003 ;;      Totals:         1       0       0       0       0       0       0
 15004 ;;Total ram usage:        1 bytes
 15005 ;; Hardware stack levels used:    1
 15006 ;; This function calls:
 15007 ;;		Nothing
 15008 ;; This function is called by:
 15009 ;;		i2_putch
 15010 ;; This function uses a non-reentrant model
 15011 ;;
 15012                           
 15013                           	psect	text50
 15014  0054F0                     __ptext50:
 15015                           	opt stack 0
 15016  0054F0                     i2_EUSART1_Write:
 15017                           	opt stack 20
 15018                           
 15019                           ;incstack = 0
 15020                           ;i2EUSART1_Write@txData stored from wreg
 15021  0054F0  6E01               	movwf	i2EUSART1_Write@txData,c
 15022  0054F2                     i2l238:
 15023  0054F2  A89E               	btfss	3998,4,c	;volatile
 15024  0054F4  D7FE               	goto	i2l238
 15025                           
 15026                           ;eusart1.c: 101: }
 15027                           ;eusart1.c: 103: TXREG1 = txData;
 15028  0054F6  C001  FFAD         	movff	i2EUSART1_Write@txData,4013	;volatile
 15029  0054FA  0012               	return		;funcret
 15030  0054FC                     __end_ofi2_EUSART1_Write:
 15031                           	opt stack 0
 15032                           tosu	equ	0xFFF
 15033                           tosh	equ	0xFFE
 15034                           tosl	equ	0xFFD
 15035                           pclatu	equ	0xFFB
 15036                           pclath	equ	0xFFA
 15037                           tblptru	equ	0xFF8
 15038                           tblptrh	equ	0xFF7
 15039                           tblptrl	equ	0xFF6
 15040                           tablat	equ	0xFF5
 15041                           prodh	equ	0xFF4
 15042                           prodl	equ	0xFF3
 15043                           intcon	equ	0xFF2
 15044                           intcon2	equ	0xFF1
 15045                           intcon3	equ	0xFF0
 15046                           postinc0	equ	0xFEE
 15047                           fsr0h	equ	0xFEA
 15048                           fsr0l	equ	0xFE9
 15049                           wreg	equ	0xFE8
 15050                           postdec1	equ	0xFE5
 15051                           fsr1h	equ	0xFE2
 15052                           fsr1l	equ	0xFE1
 15053                           indf2	equ	0xFDF
 15054                           postinc2	equ	0xFDE
 15055                           postdec2	equ	0xFDD
 15056                           fsr2h	equ	0xFDA
 15057                           fsr2l	equ	0xFD9
 15058                           status	equ	0xFD8
 15059                           
 15060 ;; *************** function i2_isdigit *****************
 15061 ;; Defined at:
 15062 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
 15063 ;; Parameters:    Size  Location     Type
 15064 ;;  c               1    wreg     unsigned char 
 15065 ;; Auto vars:     Size  Location     Type
 15066 ;;  c               1    2[COMRAM] unsigned char 
 15067 ;; Return value:  Size  Location     Type
 15068 ;;		None               void
 15069 ;; Registers used:
 15070 ;;		wreg, status,2, status,0
 15071 ;; Tracked objects:
 15072 ;;		On entry : 0/0
 15073 ;;		On exit  : 0/0
 15074 ;;		Unchanged: 0/0
 15075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15076 ;;      Params:         0       0       0       0       0       0       0
 15077 ;;      Locals:         2       0       0       0       0       0       0
 15078 ;;      Temps:          1       0       0       0       0       0       0
 15079 ;;      Totals:         3       0       0       0       0       0       0
 15080 ;;Total ram usage:        3 bytes
 15081 ;; Hardware stack levels used:    1
 15082 ;; This function calls:
 15083 ;;		Nothing
 15084 ;; This function is called by:
 15085 ;;		i2__doprnt
 15086 ;; This function uses a non-reentrant model
 15087 ;;
 15088                           
 15089                           	psect	text51
 15090  005456                     __ptext51:
 15091                           	opt stack 0
 15092  005456                     i2_isdigit:
 15093                           	opt stack 21
 15094                           
 15095                           ;incstack = 0
 15096                           ;i2isdigit@c stored from wreg
 15097  005456  6E03               	movwf	i2isdigit@c,c
 15098  005458  0E00               	movlw	0
 15099  00545A  6E02               	movwf	i2_isdigit$1291,c
 15100  00545C  0E3A               	movlw	58
 15101  00545E  6003               	cpfslt	i2isdigit@c,c
 15102  005460  D005               	goto	i2l4368
 15103  005462  0E2F               	movlw	47
 15104  005464  6403               	cpfsgt	i2isdigit@c,c
 15105  005466  D002               	goto	i2l4368
 15106  005468  0E01               	movlw	1
 15107  00546A  6E02               	movwf	i2_isdigit$1291,c
 15108  00546C                     i2l4368:
 15109  00546C  C002  F001         	movff	i2_isdigit$1291,??i2_isdigit
 15110  005470  3001               	rrcf	??i2_isdigit,w,c
 15111  005472  0012               	return	
 15112  005474                     __end_ofi2_isdigit:
 15113                           	opt stack 0
 15114                           tosu	equ	0xFFF
 15115                           tosh	equ	0xFFE
 15116                           tosl	equ	0xFFD
 15117                           pclatu	equ	0xFFB
 15118                           pclath	equ	0xFFA
 15119                           tblptru	equ	0xFF8
 15120                           tblptrh	equ	0xFF7
 15121                           tblptrl	equ	0xFF6
 15122                           tablat	equ	0xFF5
 15123                           prodh	equ	0xFF4
 15124                           prodl	equ	0xFF3
 15125                           intcon	equ	0xFF2
 15126                           intcon2	equ	0xFF1
 15127                           intcon3	equ	0xFF0
 15128                           postinc0	equ	0xFEE
 15129                           fsr0h	equ	0xFEA
 15130                           fsr0l	equ	0xFE9
 15131                           wreg	equ	0xFE8
 15132                           postdec1	equ	0xFE5
 15133                           fsr1h	equ	0xFE2
 15134                           fsr1l	equ	0xFE1
 15135                           indf2	equ	0xFDF
 15136                           postinc2	equ	0xFDE
 15137                           postdec2	equ	0xFDD
 15138                           fsr2h	equ	0xFDA
 15139                           fsr2l	equ	0xFD9
 15140                           status	equ	0xFD8
 15141                           
 15142 ;; *************** function i2_fround *****************
 15143 ;; Defined at:
 15144 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 15145 ;; Parameters:    Size  Location     Type
 15146 ;;  prec            1    wreg     unsigned char 
 15147 ;; Auto vars:     Size  Location     Type
 15148 ;;  prec            1   56[COMRAM] unsigned char 
 15149 ;; Return value:  Size  Location     Type
 15150 ;;                  3   47[COMRAM] unsigned char 
 15151 ;; Registers used:
 15152 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15153 ;; Tracked objects:
 15154 ;;		On entry : 0/0
 15155 ;;		On exit  : 0/0
 15156 ;;		Unchanged: 0/0
 15157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15158 ;;      Params:         3       0       0       0       0       0       0
 15159 ;;      Locals:         7       0       0       0       0       0       0
 15160 ;;      Temps:          0       0       0       0       0       0       0
 15161 ;;      Totals:        10       0       0       0       0       0       0
 15162 ;;Total ram usage:       10 bytes
 15163 ;; Hardware stack levels used:    1
 15164 ;; Hardware stack levels required when called:    2
 15165 ;; This function calls:
 15166 ;;		i2___awdiv
 15167 ;;		i2___awmod
 15168 ;;		i2___ftmul
 15169 ;;		i2___wmul
 15170 ;; This function is called by:
 15171 ;;		i2__doprnt
 15172 ;; This function uses a non-reentrant model
 15173 ;;
 15174                           
 15175                           	psect	text52
 15176  00323A                     __ptext52:
 15177                           	opt stack 0
 15178  00323A                     i2_fround:
 15179                           	opt stack 19
 15180                           
 15181                           ;incstack = 0
 15182                           ;i2fround@prec stored from wreg
 15183  00323A  6E39               	movwf	i2fround@prec,c
 15184                           
 15185                           ;doprnt.c: 413: if(prec>=110)
 15186  00323C  0E6D               	movlw	109
 15187  00323E  6439               	cpfsgt	i2fround@prec,c
 15188  003240  D09F               	goto	i2l4118
 15189                           
 15190                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15191  003242  0E00               	movlw	0
 15192  003244  6E12               	movwf	i2___wmul@multiplicand+1,c
 15193  003246  0E03               	movlw	3
 15194  003248  6E11               	movwf	i2___wmul@multiplicand,c
 15195  00324A  0E00               	movlw	0
 15196  00324C  6E0A               	movwf	i2___awdiv@divisor+1,c
 15197  00324E  0E0A               	movlw	10
 15198  003250  6E09               	movwf	i2___awdiv@divisor,c
 15199  003252  0E00               	movlw	0
 15200  003254  6E04               	movwf	i2___awmod@divisor+1,c
 15201  003256  0E64               	movlw	100
 15202  003258  6E03               	movwf	i2___awmod@divisor,c
 15203  00325A  C039  F001         	movff	i2fround@prec,i2___awmod@dividend
 15204  00325E  6A02               	clrf	i2___awmod@dividend+1,c
 15205  003260  EC2C  F027         	call	i2___awmod	;wreg free
 15206  003264  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 15207  003268  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 15208  00326C  EC2E  F026         	call	i2___awdiv	;wreg free
 15209  003270  0E09               	movlw	9
 15210  003272  2407               	addwf	?i2___awdiv,w,c
 15211  003274  6E0F               	movwf	i2___wmul@multiplier,c
 15212  003276  0E00               	movlw	0
 15213  003278  2008               	addwfc	?i2___awdiv+1,w,c
 15214  00327A  6E10               	movwf	i2___wmul@multiplier+1,c
 15215  00327C  ECF4  F029         	call	i2___wmul	;wreg free
 15216  003280  0E1F               	movlw	low __npowers_
 15217  003282  240F               	addwf	?i2___wmul,w,c
 15218  003284  6EF6               	movwf	tblptrl,c
 15219  003286  0E7F               	movlw	high __npowers_
 15220  003288  2010               	addwfc	?i2___wmul+1,w,c
 15221  00328A  6EF7               	movwf	tblptrh,c
 15222  00328C                     	if	0	;There are less than 3 active tblptr bytes
 15223  00328C                     	endif
 15224  00328C  0009               	tblrd		*+
 15225  00328E  CFF5 F024          	movff	tablat,i2___ftmul@f2
 15226  003292  0009               	tblrd		*+
 15227  003294  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 15228  003298  000A               	tblrd		*-
 15229  00329A  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 15230  00329E  0E00               	movlw	0
 15231  0032A0  6E0A               	movwf	i2___awdiv@divisor+1,c
 15232  0032A2  0E64               	movlw	100
 15233  0032A4  6E09               	movwf	i2___awdiv@divisor,c
 15234  0032A6  C039  F007         	movff	i2fround@prec,i2___awdiv@dividend
 15235  0032AA  6A08               	clrf	i2___awdiv@dividend+1,c
 15236  0032AC  EC2E  F026         	call	i2___awdiv	;wreg free
 15237  0032B0  0E12               	movlw	18
 15238  0032B2  2407               	addwf	?i2___awdiv,w,c
 15239  0032B4  6E0F               	movwf	i2___wmul@multiplier,c
 15240  0032B6  0E00               	movlw	0
 15241  0032B8  2008               	addwfc	?i2___awdiv+1,w,c
 15242  0032BA  6E10               	movwf	i2___wmul@multiplier+1,c
 15243  0032BC  0E00               	movlw	0
 15244  0032BE  6E12               	movwf	i2___wmul@multiplicand+1,c
 15245  0032C0  0E03               	movlw	3
 15246  0032C2  6E11               	movwf	i2___wmul@multiplicand,c
 15247  0032C4  ECF4  F029         	call	i2___wmul	;wreg free
 15248  0032C8  0E1F               	movlw	low __npowers_
 15249  0032CA  240F               	addwf	?i2___wmul,w,c
 15250  0032CC  6EF6               	movwf	tblptrl,c
 15251  0032CE  0E7F               	movlw	high __npowers_
 15252  0032D0  2010               	addwfc	?i2___wmul+1,w,c
 15253  0032D2  6EF7               	movwf	tblptrh,c
 15254  0032D4                     	if	0	;There are less than 3 active tblptr bytes
 15255  0032D4                     	endif
 15256  0032D4  0009               	tblrd		*+
 15257  0032D6  CFF5 F021          	movff	tablat,i2___ftmul@f1
 15258  0032DA  0009               	tblrd		*+
 15259  0032DC  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 15260  0032E0  000A               	tblrd		*-
 15261  0032E2  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 15262  0032E6  EC69  F022         	call	i2___ftmul	;wreg free
 15263  0032EA  C021  F036         	movff	?i2___ftmul,i2_fround$1924
 15264  0032EE  C022  F037         	movff	?i2___ftmul+1,i2_fround$1924+1
 15265  0032F2  C023  F038         	movff	?i2___ftmul+2,i2_fround$1924+2
 15266                           
 15267                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15268  0032F6  0E00               	movlw	0
 15269  0032F8  6E12               	movwf	i2___wmul@multiplicand+1,c
 15270  0032FA  0E03               	movlw	3
 15271  0032FC  6E11               	movwf	i2___wmul@multiplicand,c
 15272  0032FE  0E00               	movlw	0
 15273  003300  6E04               	movwf	i2___awmod@divisor+1,c
 15274  003302  0E0A               	movlw	10
 15275  003304  6E03               	movwf	i2___awmod@divisor,c
 15276  003306  C039  F001         	movff	i2fround@prec,i2___awmod@dividend
 15277  00330A  6A02               	clrf	i2___awmod@dividend+1,c
 15278  00330C  EC2C  F027         	call	i2___awmod	;wreg free
 15279  003310  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 15280  003314  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15281  003318  ECF4  F029         	call	i2___wmul	;wreg free
 15282  00331C  0E1F               	movlw	low __npowers_
 15283  00331E  240F               	addwf	?i2___wmul,w,c
 15284  003320  6EF6               	movwf	tblptrl,c
 15285  003322  0E7F               	movlw	high __npowers_
 15286  003324  2010               	addwfc	?i2___wmul+1,w,c
 15287  003326  6EF7               	movwf	tblptrh,c
 15288  003328                     	if	0	;There are less than 3 active tblptr bytes
 15289  003328                     	endif
 15290  003328  0009               	tblrd		*+
 15291  00332A  CFF5 F024          	movff	tablat,i2___ftmul@f2
 15292  00332E  0009               	tblrd		*+
 15293  003330  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 15294  003334  000A               	tblrd		*-
 15295  003336  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 15296  00333A  C036  F021         	movff	i2_fround$1924,i2___ftmul@f1
 15297  00333E  C037  F022         	movff	i2_fround$1924+1,i2___ftmul@f1+1
 15298  003342  C038  F023         	movff	i2_fround$1924+2,i2___ftmul@f1+2
 15299  003346  EC69  F022         	call	i2___ftmul	;wreg free
 15300  00334A  C021  F033         	movff	?i2___ftmul,i2_fround$1925
 15301  00334E  C022  F034         	movff	?i2___ftmul+1,i2_fround$1925+1
 15302  003352  C023  F035         	movff	?i2___ftmul+2,i2_fround$1925+2
 15303                           
 15304                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15305  003356  C033  F021         	movff	i2_fround$1925,i2___ftmul@f1
 15306  00335A  C034  F022         	movff	i2_fround$1925+1,i2___ftmul@f1+1
 15307  00335E  C035  F023         	movff	i2_fround$1925+2,i2___ftmul@f1+2
 15308  003362  0E00               	movlw	0
 15309  003364  6E24               	movwf	i2___ftmul@f2,c
 15310  003366  0E00               	movlw	0
 15311  003368  6E25               	movwf	i2___ftmul@f2+1,c
 15312  00336A  0E3F               	movlw	63
 15313  00336C  6E26               	movwf	i2___ftmul@f2+2,c
 15314  00336E  EC69  F022         	call	i2___ftmul	;wreg free
 15315  003372  C021  F030         	movff	?i2___ftmul,?i2_fround
 15316  003376  C022  F031         	movff	?i2___ftmul+1,?i2_fround+1
 15317  00337A  C023  F032         	movff	?i2___ftmul+2,?i2_fround+2
 15318  00337E  0012               	return	
 15319  003380                     i2l4118:
 15320                           
 15321                           ;doprnt.c: 415: else if(prec > 10)
 15322  003380  0E0A               	movlw	10
 15323  003382  6439               	cpfsgt	i2fround@prec,c
 15324  003384  D05D               	goto	i2l4126
 15325                           
 15326                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 15327  003386  0E00               	movlw	0
 15328  003388  6E12               	movwf	i2___wmul@multiplicand+1,c
 15329  00338A  0E03               	movlw	3
 15330  00338C  6E11               	movwf	i2___wmul@multiplicand,c
 15331  00338E  0E00               	movlw	0
 15332  003390  6E04               	movwf	i2___awmod@divisor+1,c
 15333  003392  0E0A               	movlw	10
 15334  003394  6E03               	movwf	i2___awmod@divisor,c
 15335  003396  C039  F001         	movff	i2fround@prec,i2___awmod@dividend
 15336  00339A  6A02               	clrf	i2___awmod@dividend+1,c
 15337  00339C  EC2C  F027         	call	i2___awmod	;wreg free
 15338  0033A0  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 15339  0033A4  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15340  0033A8  ECF4  F029         	call	i2___wmul	;wreg free
 15341  0033AC  0E1F               	movlw	low __npowers_
 15342  0033AE  240F               	addwf	?i2___wmul,w,c
 15343  0033B0  6EF6               	movwf	tblptrl,c
 15344  0033B2  0E7F               	movlw	high __npowers_
 15345  0033B4  2010               	addwfc	?i2___wmul+1,w,c
 15346  0033B6  6EF7               	movwf	tblptrh,c
 15347  0033B8                     	if	0	;There are less than 3 active tblptr bytes
 15348  0033B8                     	endif
 15349  0033B8  0009               	tblrd		*+
 15350  0033BA  CFF5 F024          	movff	tablat,i2___ftmul@f2
 15351  0033BE  0009               	tblrd		*+
 15352  0033C0  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 15353  0033C4  000A               	tblrd		*-
 15354  0033C6  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 15355  0033CA  0E00               	movlw	0
 15356  0033CC  6E0A               	movwf	i2___awdiv@divisor+1,c
 15357  0033CE  0E0A               	movlw	10
 15358  0033D0  6E09               	movwf	i2___awdiv@divisor,c
 15359  0033D2  C039  F007         	movff	i2fround@prec,i2___awdiv@dividend
 15360  0033D6  6A08               	clrf	i2___awdiv@dividend+1,c
 15361  0033D8  EC2E  F026         	call	i2___awdiv	;wreg free
 15362  0033DC  0E09               	movlw	9
 15363  0033DE  2407               	addwf	?i2___awdiv,w,c
 15364  0033E0  6E0F               	movwf	i2___wmul@multiplier,c
 15365  0033E2  0E00               	movlw	0
 15366  0033E4  2008               	addwfc	?i2___awdiv+1,w,c
 15367  0033E6  6E10               	movwf	i2___wmul@multiplier+1,c
 15368  0033E8  0E00               	movlw	0
 15369  0033EA  6E12               	movwf	i2___wmul@multiplicand+1,c
 15370  0033EC  0E03               	movlw	3
 15371  0033EE  6E11               	movwf	i2___wmul@multiplicand,c
 15372  0033F0  ECF4  F029         	call	i2___wmul	;wreg free
 15373  0033F4  0E1F               	movlw	low __npowers_
 15374  0033F6  240F               	addwf	?i2___wmul,w,c
 15375  0033F8  6EF6               	movwf	tblptrl,c
 15376  0033FA  0E7F               	movlw	high __npowers_
 15377  0033FC  2010               	addwfc	?i2___wmul+1,w,c
 15378  0033FE  6EF7               	movwf	tblptrh,c
 15379  003400                     	if	0	;There are less than 3 active tblptr bytes
 15380  003400                     	endif
 15381  003400  0009               	tblrd		*+
 15382  003402  CFF5 F021          	movff	tablat,i2___ftmul@f1
 15383  003406  0009               	tblrd		*+
 15384  003408  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 15385  00340C  000A               	tblrd		*-
 15386  00340E  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 15387  003412  EC69  F022         	call	i2___ftmul	;wreg free
 15388  003416  C021  F036         	movff	?i2___ftmul,i2_fround$1924
 15389  00341A  C022  F037         	movff	?i2___ftmul+1,i2_fround$1924+1
 15390  00341E  C023  F038         	movff	?i2___ftmul+2,i2_fround$1924+2
 15391                           
 15392                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 15393  003422  C036  F021         	movff	i2_fround$1924,i2___ftmul@f1
 15394  003426  C037  F022         	movff	i2_fround$1924+1,i2___ftmul@f1+1
 15395  00342A  C038  F023         	movff	i2_fround$1924+2,i2___ftmul@f1+2
 15396  00342E  0E00               	movlw	0
 15397  003430  6E24               	movwf	i2___ftmul@f2,c
 15398  003432  0E00               	movlw	0
 15399  003434  6E25               	movwf	i2___ftmul@f2+1,c
 15400  003436  0E3F               	movlw	63
 15401  003438  6E26               	movwf	i2___ftmul@f2+2,c
 15402  00343A  EC69  F022         	call	i2___ftmul	;wreg free
 15403  00343E  D799               	goto	L10
 15404  003440                     i2l4126:
 15405                           
 15406                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 15407  003440  5039               	movf	i2fround@prec,w,c
 15408  003442  0D03               	mullw	3
 15409  003444  0E1F               	movlw	low __npowers_
 15410  003446  24F3               	addwf	prodl,w,c
 15411  003448  6EF6               	movwf	tblptrl,c
 15412  00344A  0E7F               	movlw	high __npowers_
 15413  00344C  20F4               	addwfc	prodh,w,c
 15414  00344E  6EF7               	movwf	tblptrh,c
 15415  003450                     	if	0	;There are less than 3 active tblptr bytes
 15416  003450                     	endif
 15417  003450  0009               	tblrd		*+
 15418  003452  CFF5 F021          	movff	tablat,i2___ftmul@f1
 15419  003456  0009               	tblrd		*+
 15420  003458  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 15421  00345C  000A               	tblrd		*-
 15422  00345E  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 15423  003462  0E00               	movlw	0
 15424  003464  6E24               	movwf	i2___ftmul@f2,c
 15425  003466  0E00               	movlw	0
 15426  003468  6E25               	movwf	i2___ftmul@f2+1,c
 15427  00346A  0E3F               	movlw	63
 15428  00346C  6E26               	movwf	i2___ftmul@f2+2,c
 15429  00346E  EC69  F022         	call	i2___ftmul	;wreg free
 15430  003472  C021  F030         	movff	?i2___ftmul,?i2_fround
 15431  003476  C022  F031         	movff	?i2___ftmul+1,?i2_fround+1
 15432  00347A  C023  F032         	movff	?i2___ftmul+2,?i2_fround+2
 15433  00347E  0012               	return	
 15434  003480                     __end_ofi2_fround:
 15435                           	opt stack 0
 15436                           tosu	equ	0xFFF
 15437                           tosh	equ	0xFFE
 15438                           tosl	equ	0xFFD
 15439                           pclatu	equ	0xFFB
 15440                           pclath	equ	0xFFA
 15441                           tblptru	equ	0xFF8
 15442                           tblptrh	equ	0xFF7
 15443                           tblptrl	equ	0xFF6
 15444                           tablat	equ	0xFF5
 15445                           prodh	equ	0xFF4
 15446                           prodl	equ	0xFF3
 15447                           intcon	equ	0xFF2
 15448                           intcon2	equ	0xFF1
 15449                           intcon3	equ	0xFF0
 15450                           postinc0	equ	0xFEE
 15451                           fsr0h	equ	0xFEA
 15452                           fsr0l	equ	0xFE9
 15453                           wreg	equ	0xFE8
 15454                           postdec1	equ	0xFE5
 15455                           fsr1h	equ	0xFE2
 15456                           fsr1l	equ	0xFE1
 15457                           indf2	equ	0xFDF
 15458                           postinc2	equ	0xFDE
 15459                           postdec2	equ	0xFDD
 15460                           fsr2h	equ	0xFDA
 15461                           fsr2l	equ	0xFD9
 15462                           status	equ	0xFD8
 15463                           
 15464 ;; *************** function i2___wmul *****************
 15465 ;; Defined at:
 15466 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 15467 ;; Parameters:    Size  Location     Type
 15468 ;;  multiplier      2   14[COMRAM] unsigned int 
 15469 ;;  multiplicand    2   16[COMRAM] unsigned int 
 15470 ;; Auto vars:     Size  Location     Type
 15471 ;;  __wmul          2   18[COMRAM] unsigned int 
 15472 ;; Return value:  Size  Location     Type
 15473 ;;                  2   14[COMRAM] unsigned int 
 15474 ;; Registers used:
 15475 ;;		wreg, status,2, status,0, prodl, prodh
 15476 ;; Tracked objects:
 15477 ;;		On entry : 0/0
 15478 ;;		On exit  : 0/0
 15479 ;;		Unchanged: 0/0
 15480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15481 ;;      Params:         4       0       0       0       0       0       0
 15482 ;;      Locals:         2       0       0       0       0       0       0
 15483 ;;      Temps:          0       0       0       0       0       0       0
 15484 ;;      Totals:         6       0       0       0       0       0       0
 15485 ;;Total ram usage:        6 bytes
 15486 ;; Hardware stack levels used:    1
 15487 ;; This function calls:
 15488 ;;		Nothing
 15489 ;; This function is called by:
 15490 ;;		_INT0_ISR
 15491 ;;		i2_fround
 15492 ;;		i2_scale
 15493 ;;		i2__doprnt
 15494 ;; This function uses a non-reentrant model
 15495 ;;
 15496                           
 15497                           	psect	text53
 15498  0053E8                     __ptext53:
 15499                           	opt stack 0
 15500  0053E8                     i2___wmul:
 15501                           	opt stack 20
 15502                           
 15503                           ;incstack = 0
 15504  0053E8  500F               	movf	i2___wmul@multiplier,w,c
 15505  0053EA  0211               	mulwf	i2___wmul@multiplicand,c
 15506  0053EC  CFF3 F013          	movff	prodl,i2___wmul@product
 15507  0053F0  CFF4 F014          	movff	prodh,i2___wmul@product+1
 15508  0053F4  500F               	movf	i2___wmul@multiplier,w,c
 15509  0053F6  0212               	mulwf	i2___wmul@multiplicand+1,c
 15510  0053F8  50F3               	movf	prodl,w,c
 15511  0053FA  2614               	addwf	i2___wmul@product+1,f,c
 15512  0053FC  5010               	movf	i2___wmul@multiplier+1,w,c
 15513  0053FE  0211               	mulwf	i2___wmul@multiplicand,c
 15514  005400  50F3               	movf	prodl,w,c
 15515  005402  2614               	addwf	i2___wmul@product+1,f,c
 15516  005404  C013  F00F         	movff	i2___wmul@product,?i2___wmul
 15517  005408  C014  F010         	movff	i2___wmul@product+1,?i2___wmul+1
 15518  00540C  0012               	return	
 15519  00540E                     __end_ofi2___wmul:
 15520                           	opt stack 0
 15521                           tosu	equ	0xFFF
 15522                           tosh	equ	0xFFE
 15523                           tosl	equ	0xFFD
 15524                           pclatu	equ	0xFFB
 15525                           pclath	equ	0xFFA
 15526                           tblptru	equ	0xFF8
 15527                           tblptrh	equ	0xFF7
 15528                           tblptrl	equ	0xFF6
 15529                           tablat	equ	0xFF5
 15530                           prodh	equ	0xFF4
 15531                           prodl	equ	0xFF3
 15532                           intcon	equ	0xFF2
 15533                           intcon2	equ	0xFF1
 15534                           intcon3	equ	0xFF0
 15535                           postinc0	equ	0xFEE
 15536                           fsr0h	equ	0xFEA
 15537                           fsr0l	equ	0xFE9
 15538                           wreg	equ	0xFE8
 15539                           postdec1	equ	0xFE5
 15540                           fsr1h	equ	0xFE2
 15541                           fsr1l	equ	0xFE1
 15542                           indf2	equ	0xFDF
 15543                           postinc2	equ	0xFDE
 15544                           postdec2	equ	0xFDD
 15545                           fsr2h	equ	0xFDA
 15546                           fsr2l	equ	0xFD9
 15547                           status	equ	0xFD8
 15548                           
 15549 ;; *************** function i2___ftmul *****************
 15550 ;; Defined at:
 15551 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
 15552 ;; Parameters:    Size  Location     Type
 15553 ;;  f1              3   32[COMRAM] float 
 15554 ;;  f2              3   35[COMRAM] float 
 15555 ;; Auto vars:     Size  Location     Type
 15556 ;;  __ftmul         3   42[COMRAM] unsigned um
 15557 ;;  __ftmul         1   46[COMRAM] unsigned char 
 15558 ;;  __ftmul         1   45[COMRAM] unsigned char 
 15559 ;;  __ftmul         1   41[COMRAM] unsigned char 
 15560 ;; Return value:  Size  Location     Type
 15561 ;;                  3   32[COMRAM] float 
 15562 ;; Registers used:
 15563 ;;		wreg, status,2, status,0, cstack
 15564 ;; Tracked objects:
 15565 ;;		On entry : 0/0
 15566 ;;		On exit  : 0/0
 15567 ;;		Unchanged: 0/0
 15568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15569 ;;      Params:         6       0       0       0       0       0       0
 15570 ;;      Locals:         6       0       0       0       0       0       0
 15571 ;;      Temps:          3       0       0       0       0       0       0
 15572 ;;      Totals:        15       0       0       0       0       0       0
 15573 ;;Total ram usage:       15 bytes
 15574 ;; Hardware stack levels used:    1
 15575 ;; Hardware stack levels required when called:    1
 15576 ;; This function calls:
 15577 ;;		i2___ftpack
 15578 ;; This function is called by:
 15579 ;;		_INT0_ISR
 15580 ;;		i2_fround
 15581 ;;		i2_scale
 15582 ;;		i2__doprnt
 15583 ;; This function uses a non-reentrant model
 15584 ;;
 15585                           
 15586                           	psect	text54
 15587  0044D2                     __ptext54:
 15588                           	opt stack 0
 15589  0044D2                     i2___ftmul:
 15590                           	opt stack 19
 15591                           
 15592                           ;incstack = 0
 15593  0044D2  C023  F027         	movff	i2___ftmul@f1+2,??i2___ftmul
 15594  0044D6  6A28               	clrf	(??i2___ftmul+1)& (0+255),c
 15595  0044D8  6A29               	clrf	(??i2___ftmul+2)& (0+255),c
 15596  0044DA  3422               	rlcf	i2___ftmul@f1+1,w,c
 15597  0044DC  3627               	rlcf	??i2___ftmul& (0+255),f,c
 15598  0044DE  E301               	bnc	u470_41
 15599  0044E0  8028               	bsf	(??i2___ftmul+1)& (0+255),0,c
 15600  0044E2                     u470_41:
 15601  0044E2  5027               	movf	??i2___ftmul,w,c
 15602  0044E4  6E2A               	movwf	i2___ftmul@exp,c
 15603  0044E6  502A               	movf	i2___ftmul@exp,w,c
 15604  0044E8  A4D8               	btfss	status,2,c
 15605  0044EA  D007               	goto	i2l3856
 15606  0044EC  0E00               	movlw	0
 15607  0044EE  6E21               	movwf	?i2___ftmul,c
 15608  0044F0  0E00               	movlw	0
 15609  0044F2  6E22               	movwf	?i2___ftmul+1,c
 15610  0044F4  0E00               	movlw	0
 15611  0044F6  6E23               	movwf	?i2___ftmul+2,c
 15612  0044F8  0012               	return	
 15613  0044FA                     i2l3856:
 15614  0044FA  C026  F027         	movff	i2___ftmul@f2+2,??i2___ftmul
 15615  0044FE  6A28               	clrf	(??i2___ftmul+1)& (0+255),c
 15616  004500  6A29               	clrf	(??i2___ftmul+2)& (0+255),c
 15617  004502  3425               	rlcf	i2___ftmul@f2+1,w,c
 15618  004504  3627               	rlcf	??i2___ftmul& (0+255),f,c
 15619  004506  E301               	bnc	u472_41
 15620  004508  8028               	bsf	(??i2___ftmul+1)& (0+255),0,c
 15621  00450A                     u472_41:
 15622  00450A  5027               	movf	??i2___ftmul,w,c
 15623  00450C  6E2F               	movwf	i2___ftmul@sign,c
 15624  00450E  502F               	movf	i2___ftmul@sign,w,c
 15625  004510  A4D8               	btfss	status,2,c
 15626  004512  D007               	goto	i2l3862
 15627  004514  0E00               	movlw	0
 15628  004516  6E21               	movwf	?i2___ftmul,c
 15629  004518  0E00               	movlw	0
 15630  00451A  6E22               	movwf	?i2___ftmul+1,c
 15631  00451C  0E00               	movlw	0
 15632  00451E  6E23               	movwf	?i2___ftmul+2,c
 15633  004520  0012               	return	
 15634  004522                     i2l3862:
 15635  004522  502F               	movf	i2___ftmul@sign,w,c
 15636  004524  0F7B               	addlw	123
 15637  004526  262A               	addwf	i2___ftmul@exp,f,c
 15638  004528  C023  F02F         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 15639  00452C  5026               	movf	i2___ftmul@f2+2,w,c
 15640  00452E  1A2F               	xorwf	i2___ftmul@sign,f,c
 15641  004530  0E80               	movlw	128
 15642  004532  162F               	andwf	i2___ftmul@sign,f,c
 15643  004534  8E22               	bsf	i2___ftmul@f1+1,7,c
 15644  004536  8E25               	bsf	i2___ftmul@f2+1,7,c
 15645  004538  0EFF               	movlw	255
 15646  00453A  1624               	andwf	i2___ftmul@f2,f,c
 15647  00453C  0EFF               	movlw	255
 15648  00453E  1625               	andwf	i2___ftmul@f2+1,f,c
 15649  004540  0E00               	movlw	0
 15650  004542  1626               	andwf	i2___ftmul@f2+2,f,c
 15651  004544  0E00               	movlw	0
 15652  004546  6E2B               	movwf	i2___ftmul@f3_as_product,c
 15653  004548  0E00               	movlw	0
 15654  00454A  6E2C               	movwf	i2___ftmul@f3_as_product+1,c
 15655  00454C  0E00               	movlw	0
 15656  00454E  6E2D               	movwf	i2___ftmul@f3_as_product+2,c
 15657  004550  0E07               	movlw	7
 15658  004552  6E2E               	movwf	i2___ftmul@cntr,c
 15659  004554                     i2l3876:
 15660  004554  A021               	btfss	i2___ftmul@f1,0,c
 15661  004556  D006               	goto	i2l3880
 15662  004558  5024               	movf	i2___ftmul@f2,w,c
 15663  00455A  262B               	addwf	i2___ftmul@f3_as_product,f,c
 15664  00455C  5025               	movf	i2___ftmul@f2+1,w,c
 15665  00455E  222C               	addwfc	i2___ftmul@f3_as_product+1,f,c
 15666  004560  5026               	movf	i2___ftmul@f2+2,w,c
 15667  004562  222D               	addwfc	i2___ftmul@f3_as_product+2,f,c
 15668  004564                     i2l3880:
 15669  004564  90D8               	bcf	status,0,c
 15670  004566  3223               	rrcf	i2___ftmul@f1+2,f,c
 15671  004568  3222               	rrcf	i2___ftmul@f1+1,f,c
 15672  00456A  3221               	rrcf	i2___ftmul@f1,f,c
 15673  00456C  90D8               	bcf	status,0,c
 15674  00456E  3624               	rlcf	i2___ftmul@f2,f,c
 15675  004570  3625               	rlcf	i2___ftmul@f2+1,f,c
 15676  004572  3626               	rlcf	i2___ftmul@f2+2,f,c
 15677  004574  2E2E               	decfsz	i2___ftmul@cntr,f,c
 15678  004576  D7EE               	goto	i2l3876
 15679  004578  0E09               	movlw	9
 15680  00457A  6E2E               	movwf	i2___ftmul@cntr,c
 15681  00457C                     i2l3886:
 15682  00457C  A021               	btfss	i2___ftmul@f1,0,c
 15683  00457E  D006               	goto	i2l3890
 15684  004580  5024               	movf	i2___ftmul@f2,w,c
 15685  004582  262B               	addwf	i2___ftmul@f3_as_product,f,c
 15686  004584  5025               	movf	i2___ftmul@f2+1,w,c
 15687  004586  222C               	addwfc	i2___ftmul@f3_as_product+1,f,c
 15688  004588  5026               	movf	i2___ftmul@f2+2,w,c
 15689  00458A  222D               	addwfc	i2___ftmul@f3_as_product+2,f,c
 15690  00458C                     i2l3890:
 15691  00458C  90D8               	bcf	status,0,c
 15692  00458E  3223               	rrcf	i2___ftmul@f1+2,f,c
 15693  004590  3222               	rrcf	i2___ftmul@f1+1,f,c
 15694  004592  3221               	rrcf	i2___ftmul@f1,f,c
 15695  004594  90D8               	bcf	status,0,c
 15696  004596  322D               	rrcf	i2___ftmul@f3_as_product+2,f,c
 15697  004598  322C               	rrcf	i2___ftmul@f3_as_product+1,f,c
 15698  00459A  322B               	rrcf	i2___ftmul@f3_as_product,f,c
 15699  00459C  2E2E               	decfsz	i2___ftmul@cntr,f,c
 15700  00459E  D7EE               	goto	i2l3886
 15701  0045A0  C02B  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 15702  0045A4  C02C  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 15703  0045A8  C02D  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 15704  0045AC  C02A  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 15705  0045B0  C02F  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 15706  0045B4  ECF1  F024         	call	i2___ftpack	;wreg free
 15707  0045B8  C001  F021         	movff	?i2___ftpack,?i2___ftmul
 15708  0045BC  C002  F022         	movff	?i2___ftpack+1,?i2___ftmul+1
 15709  0045C0  C003  F023         	movff	?i2___ftpack+2,?i2___ftmul+2
 15710  0045C4  0012               	return	
 15711  0045C6                     __end_ofi2___ftmul:
 15712                           	opt stack 0
 15713                           tosu	equ	0xFFF
 15714                           tosh	equ	0xFFE
 15715                           tosl	equ	0xFFD
 15716                           pclatu	equ	0xFFB
 15717                           pclath	equ	0xFFA
 15718                           tblptru	equ	0xFF8
 15719                           tblptrh	equ	0xFF7
 15720                           tblptrl	equ	0xFF6
 15721                           tablat	equ	0xFF5
 15722                           prodh	equ	0xFF4
 15723                           prodl	equ	0xFF3
 15724                           intcon	equ	0xFF2
 15725                           intcon2	equ	0xFF1
 15726                           intcon3	equ	0xFF0
 15727                           postinc0	equ	0xFEE
 15728                           fsr0h	equ	0xFEA
 15729                           fsr0l	equ	0xFE9
 15730                           wreg	equ	0xFE8
 15731                           postdec1	equ	0xFE5
 15732                           fsr1h	equ	0xFE2
 15733                           fsr1l	equ	0xFE1
 15734                           indf2	equ	0xFDF
 15735                           postinc2	equ	0xFDE
 15736                           postdec2	equ	0xFDD
 15737                           fsr2h	equ	0xFDA
 15738                           fsr2l	equ	0xFD9
 15739                           status	equ	0xFD8
 15740                           
 15741 ;; *************** function i2___awmod *****************
 15742 ;; Defined at:
 15743 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 15744 ;; Parameters:    Size  Location     Type
 15745 ;;  dividend        2    0[COMRAM] int 
 15746 ;;  divisor         2    2[COMRAM] int 
 15747 ;; Auto vars:     Size  Location     Type
 15748 ;;  __awmod         1    5[COMRAM] unsigned char 
 15749 ;;  __awmod         1    4[COMRAM] unsigned char 
 15750 ;; Return value:  Size  Location     Type
 15751 ;;                  2    0[COMRAM] int 
 15752 ;; Registers used:
 15753 ;;		wreg, status,2, status,0
 15754 ;; Tracked objects:
 15755 ;;		On entry : 0/0
 15756 ;;		On exit  : 0/0
 15757 ;;		Unchanged: 0/0
 15758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15759 ;;      Params:         4       0       0       0       0       0       0
 15760 ;;      Locals:         2       0       0       0       0       0       0
 15761 ;;      Temps:          0       0       0       0       0       0       0
 15762 ;;      Totals:         6       0       0       0       0       0       0
 15763 ;;Total ram usage:        6 bytes
 15764 ;; Hardware stack levels used:    1
 15765 ;; This function calls:
 15766 ;;		Nothing
 15767 ;; This function is called by:
 15768 ;;		i2_fround
 15769 ;;		i2_scale
 15770 ;; This function uses a non-reentrant model
 15771 ;;
 15772                           
 15773                           	psect	text55
 15774  004E58                     __ptext55:
 15775                           	opt stack 0
 15776  004E58                     i2___awmod:
 15777                           	opt stack 20
 15778                           
 15779                           ;incstack = 0
 15780  004E58  0E00               	movlw	0
 15781  004E5A  6E06               	movwf	i2___awmod@sign,c
 15782  004E5C  AE02               	btfss	i2___awmod@dividend+1,7,c
 15783  004E5E  D006               	goto	i2l3752
 15784  004E60  6C01               	negf	i2___awmod@dividend,c
 15785  004E62  1E02               	comf	i2___awmod@dividend+1,f,c
 15786  004E64  B0D8               	btfsc	status,0,c
 15787  004E66  2A02               	incf	i2___awmod@dividend+1,f,c
 15788  004E68  0E01               	movlw	1
 15789  004E6A  6E06               	movwf	i2___awmod@sign,c
 15790  004E6C                     i2l3752:
 15791  004E6C  AE04               	btfss	i2___awmod@divisor+1,7,c
 15792  004E6E  D004               	goto	i2l3756
 15793  004E70  6C03               	negf	i2___awmod@divisor,c
 15794  004E72  1E04               	comf	i2___awmod@divisor+1,f,c
 15795  004E74  B0D8               	btfsc	status,0,c
 15796  004E76  2A04               	incf	i2___awmod@divisor+1,f,c
 15797  004E78                     i2l3756:
 15798  004E78  5003               	movf	i2___awmod@divisor,w,c
 15799  004E7A  1004               	iorwf	i2___awmod@divisor+1,w,c
 15800  004E7C  B4D8               	btfsc	status,2,c
 15801  004E7E  D018               	goto	i2l3772
 15802  004E80  0E01               	movlw	1
 15803  004E82  6E05               	movwf	i2___awmod@counter,c
 15804  004E84  D004               	goto	i2l3762
 15805  004E86                     i2l3760:
 15806  004E86  90D8               	bcf	status,0,c
 15807  004E88  3603               	rlcf	i2___awmod@divisor,f,c
 15808  004E8A  3604               	rlcf	i2___awmod@divisor+1,f,c
 15809  004E8C  2A05               	incf	i2___awmod@counter,f,c
 15810  004E8E                     i2l3762:
 15811  004E8E  AE04               	btfss	i2___awmod@divisor+1,7,c
 15812  004E90  D7FA               	goto	i2l3760
 15813  004E92                     i2l3764:
 15814  004E92  5003               	movf	i2___awmod@divisor,w,c
 15815  004E94  5C01               	subwf	i2___awmod@dividend,w,c
 15816  004E96  5004               	movf	i2___awmod@divisor+1,w,c
 15817  004E98  5802               	subwfb	i2___awmod@dividend+1,w,c
 15818  004E9A  A0D8               	btfss	status,0,c
 15819  004E9C  D004               	goto	i2l3768
 15820  004E9E  5003               	movf	i2___awmod@divisor,w,c
 15821  004EA0  5E01               	subwf	i2___awmod@dividend,f,c
 15822  004EA2  5004               	movf	i2___awmod@divisor+1,w,c
 15823  004EA4  5A02               	subwfb	i2___awmod@dividend+1,f,c
 15824  004EA6                     i2l3768:
 15825  004EA6  90D8               	bcf	status,0,c
 15826  004EA8  3204               	rrcf	i2___awmod@divisor+1,f,c
 15827  004EAA  3203               	rrcf	i2___awmod@divisor,f,c
 15828  004EAC  2E05               	decfsz	i2___awmod@counter,f,c
 15829  004EAE  D7F1               	goto	i2l3764
 15830  004EB0                     i2l3772:
 15831  004EB0  5006               	movf	i2___awmod@sign,w,c
 15832  004EB2  B4D8               	btfsc	status,2,c
 15833  004EB4  D004               	goto	i2l3776
 15834  004EB6  6C01               	negf	i2___awmod@dividend,c
 15835  004EB8  1E02               	comf	i2___awmod@dividend+1,f,c
 15836  004EBA  B0D8               	btfsc	status,0,c
 15837  004EBC  2A02               	incf	i2___awmod@dividend+1,f,c
 15838  004EBE                     i2l3776:
 15839  004EBE  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 15840  004EC2  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 15841  004EC6  0012               	return	
 15842  004EC8                     __end_ofi2___awmod:
 15843                           	opt stack 0
 15844                           tosu	equ	0xFFF
 15845                           tosh	equ	0xFFE
 15846                           tosl	equ	0xFFD
 15847                           pclatu	equ	0xFFB
 15848                           pclath	equ	0xFFA
 15849                           tblptru	equ	0xFF8
 15850                           tblptrh	equ	0xFF7
 15851                           tblptrl	equ	0xFF6
 15852                           tablat	equ	0xFF5
 15853                           prodh	equ	0xFF4
 15854                           prodl	equ	0xFF3
 15855                           intcon	equ	0xFF2
 15856                           intcon2	equ	0xFF1
 15857                           intcon3	equ	0xFF0
 15858                           postinc0	equ	0xFEE
 15859                           fsr0h	equ	0xFEA
 15860                           fsr0l	equ	0xFE9
 15861                           wreg	equ	0xFE8
 15862                           postdec1	equ	0xFE5
 15863                           fsr1h	equ	0xFE2
 15864                           fsr1l	equ	0xFE1
 15865                           indf2	equ	0xFDF
 15866                           postinc2	equ	0xFDE
 15867                           postdec2	equ	0xFDD
 15868                           fsr2h	equ	0xFDA
 15869                           fsr2l	equ	0xFD9
 15870                           status	equ	0xFD8
 15871                           
 15872 ;; *************** function i2___awdiv *****************
 15873 ;; Defined at:
 15874 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 15875 ;; Parameters:    Size  Location     Type
 15876 ;;  dividend        2    6[COMRAM] int 
 15877 ;;  divisor         2    8[COMRAM] int 
 15878 ;; Auto vars:     Size  Location     Type
 15879 ;;  __awdiv         2   12[COMRAM] int 
 15880 ;;  __awdiv         1   11[COMRAM] unsigned char 
 15881 ;;  __awdiv         1   10[COMRAM] unsigned char 
 15882 ;; Return value:  Size  Location     Type
 15883 ;;                  2    6[COMRAM] int 
 15884 ;; Registers used:
 15885 ;;		wreg, status,2, status,0
 15886 ;; Tracked objects:
 15887 ;;		On entry : 0/0
 15888 ;;		On exit  : 0/0
 15889 ;;		Unchanged: 0/0
 15890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15891 ;;      Params:         4       0       0       0       0       0       0
 15892 ;;      Locals:         4       0       0       0       0       0       0
 15893 ;;      Temps:          0       0       0       0       0       0       0
 15894 ;;      Totals:         8       0       0       0       0       0       0
 15895 ;;Total ram usage:        8 bytes
 15896 ;; Hardware stack levels used:    1
 15897 ;; This function calls:
 15898 ;;		Nothing
 15899 ;; This function is called by:
 15900 ;;		i2_fround
 15901 ;;		i2_scale
 15902 ;;		i2__doprnt
 15903 ;; This function uses a non-reentrant model
 15904 ;;
 15905                           
 15906                           	psect	text56
 15907  004C5C                     __ptext56:
 15908                           	opt stack 0
 15909  004C5C                     i2___awdiv:
 15910                           	opt stack 20
 15911                           
 15912                           ;incstack = 0
 15913  004C5C  0E00               	movlw	0
 15914  004C5E  6E0C               	movwf	i2___awdiv@sign,c
 15915  004C60  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 15916  004C62  D006               	goto	i2l3708
 15917  004C64  6C09               	negf	i2___awdiv@divisor,c
 15918  004C66  1E0A               	comf	i2___awdiv@divisor+1,f,c
 15919  004C68  B0D8               	btfsc	status,0,c
 15920  004C6A  2A0A               	incf	i2___awdiv@divisor+1,f,c
 15921  004C6C  0E01               	movlw	1
 15922  004C6E  6E0C               	movwf	i2___awdiv@sign,c
 15923  004C70                     i2l3708:
 15924  004C70  AE08               	btfss	i2___awdiv@dividend+1,7,c
 15925  004C72  D006               	goto	i2l3714
 15926  004C74  6C07               	negf	i2___awdiv@dividend,c
 15927  004C76  1E08               	comf	i2___awdiv@dividend+1,f,c
 15928  004C78  B0D8               	btfsc	status,0,c
 15929  004C7A  2A08               	incf	i2___awdiv@dividend+1,f,c
 15930  004C7C  0E01               	movlw	1
 15931  004C7E  1A0C               	xorwf	i2___awdiv@sign,f,c
 15932  004C80                     i2l3714:
 15933  004C80  0E00               	movlw	0
 15934  004C82  6E0E               	movwf	i2___awdiv@quotient+1,c
 15935  004C84  0E00               	movlw	0
 15936  004C86  6E0D               	movwf	i2___awdiv@quotient,c
 15937  004C88  5009               	movf	i2___awdiv@divisor,w,c
 15938  004C8A  100A               	iorwf	i2___awdiv@divisor+1,w,c
 15939  004C8C  B4D8               	btfsc	status,2,c
 15940  004C8E  D01C               	goto	i2l3736
 15941  004C90  0E01               	movlw	1
 15942  004C92  6E0B               	movwf	i2___awdiv@counter,c
 15943  004C94  D004               	goto	i2l3722
 15944  004C96                     i2l3720:
 15945  004C96  90D8               	bcf	status,0,c
 15946  004C98  3609               	rlcf	i2___awdiv@divisor,f,c
 15947  004C9A  360A               	rlcf	i2___awdiv@divisor+1,f,c
 15948  004C9C  2A0B               	incf	i2___awdiv@counter,f,c
 15949  004C9E                     i2l3722:
 15950  004C9E  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 15951  004CA0  D7FA               	goto	i2l3720
 15952  004CA2                     i2l3724:
 15953  004CA2  90D8               	bcf	status,0,c
 15954  004CA4  360D               	rlcf	i2___awdiv@quotient,f,c
 15955  004CA6  360E               	rlcf	i2___awdiv@quotient+1,f,c
 15956  004CA8  5009               	movf	i2___awdiv@divisor,w,c
 15957  004CAA  5C07               	subwf	i2___awdiv@dividend,w,c
 15958  004CAC  500A               	movf	i2___awdiv@divisor+1,w,c
 15959  004CAE  5808               	subwfb	i2___awdiv@dividend+1,w,c
 15960  004CB0  A0D8               	btfss	status,0,c
 15961  004CB2  D005               	goto	i2l3732
 15962  004CB4  5009               	movf	i2___awdiv@divisor,w,c
 15963  004CB6  5E07               	subwf	i2___awdiv@dividend,f,c
 15964  004CB8  500A               	movf	i2___awdiv@divisor+1,w,c
 15965  004CBA  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 15966  004CBC  800D               	bsf	i2___awdiv@quotient,0,c
 15967  004CBE                     i2l3732:
 15968  004CBE  90D8               	bcf	status,0,c
 15969  004CC0  320A               	rrcf	i2___awdiv@divisor+1,f,c
 15970  004CC2  3209               	rrcf	i2___awdiv@divisor,f,c
 15971  004CC4  2E0B               	decfsz	i2___awdiv@counter,f,c
 15972  004CC6  D7ED               	goto	i2l3724
 15973  004CC8                     i2l3736:
 15974  004CC8  500C               	movf	i2___awdiv@sign,w,c
 15975  004CCA  B4D8               	btfsc	status,2,c
 15976  004CCC  D004               	goto	i2l3740
 15977  004CCE  6C0D               	negf	i2___awdiv@quotient,c
 15978  004CD0  1E0E               	comf	i2___awdiv@quotient+1,f,c
 15979  004CD2  B0D8               	btfsc	status,0,c
 15980  004CD4  2A0E               	incf	i2___awdiv@quotient+1,f,c
 15981  004CD6                     i2l3740:
 15982  004CD6  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 15983  004CDA  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 15984  004CDE  0012               	return	
 15985  004CE0                     __end_ofi2___awdiv:
 15986                           	opt stack 0
 15987                           tosu	equ	0xFFF
 15988                           tosh	equ	0xFFE
 15989                           tosl	equ	0xFFD
 15990                           pclatu	equ	0xFFB
 15991                           pclath	equ	0xFFA
 15992                           tblptru	equ	0xFF8
 15993                           tblptrh	equ	0xFF7
 15994                           tblptrl	equ	0xFF6
 15995                           tablat	equ	0xFF5
 15996                           prodh	equ	0xFF4
 15997                           prodl	equ	0xFF3
 15998                           intcon	equ	0xFF2
 15999                           intcon2	equ	0xFF1
 16000                           intcon3	equ	0xFF0
 16001                           postinc0	equ	0xFEE
 16002                           fsr0h	equ	0xFEA
 16003                           fsr0l	equ	0xFE9
 16004                           wreg	equ	0xFE8
 16005                           postdec1	equ	0xFE5
 16006                           fsr1h	equ	0xFE2
 16007                           fsr1l	equ	0xFE1
 16008                           indf2	equ	0xFDF
 16009                           postinc2	equ	0xFDE
 16010                           postdec2	equ	0xFDD
 16011                           fsr2h	equ	0xFDA
 16012                           fsr2l	equ	0xFD9
 16013                           status	equ	0xFD8
 16014                           
 16015 ;; *************** function i2__tdiv_to_l_ *****************
 16016 ;; Defined at:
 16017 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdivl.c"
 16018 ;; Parameters:    Size  Location     Type
 16019 ;;  f1              3    0[COMRAM] float 
 16020 ;;  f2              3    3[COMRAM] float 
 16021 ;; Auto vars:     Size  Location     Type
 16022 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 16023 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 16024 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 16025 ;; Return value:  Size  Location     Type
 16026 ;;                  4    0[COMRAM] unsigned long 
 16027 ;; Registers used:
 16028 ;;		wreg, status,2, status,0
 16029 ;; Tracked objects:
 16030 ;;		On entry : 0/0
 16031 ;;		On exit  : 0/0
 16032 ;;		Unchanged: 0/0
 16033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16034 ;;      Params:         6       0       0       0       0       0       0
 16035 ;;      Locals:         6       0       0       0       0       0       0
 16036 ;;      Temps:          3       0       0       0       0       0       0
 16037 ;;      Totals:        15       0       0       0       0       0       0
 16038 ;;Total ram usage:       15 bytes
 16039 ;; Hardware stack levels used:    1
 16040 ;; This function calls:
 16041 ;;		Nothing
 16042 ;; This function is called by:
 16043 ;;		i2__doprnt
 16044 ;; This function uses a non-reentrant model
 16045 ;;
 16046                           
 16047                           	psect	text57
 16048  00404A                     __ptext57:
 16049                           	opt stack 0
 16050  00404A                     i2__tdiv_to_l_:
 16051                           	opt stack 21
 16052                           
 16053                           ;incstack = 0
 16054  00404A  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 16055  00404E  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 16056  004050  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 16057  004052  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 16058  004054  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 16059  004056  E301               	bnc	u530_41
 16060  004058  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 16061  00405A                     u530_41:
 16062  00405A  5007               	movf	??i2__tdiv_to_l_,w,c
 16063  00405C  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 16064  00405E  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 16065  004060  A4D8               	btfss	status,2,c
 16066  004062  D009               	goto	i2l4234
 16067  004064  0E00               	movlw	0
 16068  004066  6E01               	movwf	?i2__tdiv_to_l_,c
 16069  004068  0E00               	movlw	0
 16070  00406A  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16071  00406C  0E00               	movlw	0
 16072  00406E  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16073  004070  0E00               	movlw	0
 16074  004072  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16075  004074  0012               	return	
 16076  004076                     i2l4234:
 16077  004076  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 16078  00407A  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 16079  00407C  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 16080  00407E  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 16081  004080  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 16082  004082  E301               	bnc	u532_41
 16083  004084  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 16084  004086                     u532_41:
 16085  004086  5007               	movf	??i2__tdiv_to_l_,w,c
 16086  004088  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 16087  00408A  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 16088  00408C  A4D8               	btfss	status,2,c
 16089  00408E  D009               	goto	i2l4240
 16090  004090  0E00               	movlw	0
 16091  004092  6E01               	movwf	?i2__tdiv_to_l_,c
 16092  004094  0E00               	movlw	0
 16093  004096  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16094  004098  0E00               	movlw	0
 16095  00409A  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16096  00409C  0E00               	movlw	0
 16097  00409E  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16098  0040A0  0012               	return	
 16099  0040A2                     i2l4240:
 16100  0040A2  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 16101  0040A4  0EFF               	movlw	255
 16102  0040A6  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 16103  0040A8  0EFF               	movlw	255
 16104  0040AA  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 16105  0040AC  0E00               	movlw	0
 16106  0040AE  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 16107  0040B0  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 16108  0040B2  0EFF               	movlw	255
 16109  0040B4  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 16110  0040B6  0EFF               	movlw	255
 16111  0040B8  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 16112  0040BA  0E00               	movlw	0
 16113  0040BC  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 16114  0040BE  0E00               	movlw	0
 16115  0040C0  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 16116  0040C2  0E00               	movlw	0
 16117  0040C4  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 16118  0040C6  0E00               	movlw	0
 16119  0040C8  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 16120  0040CA  0E00               	movlw	0
 16121  0040CC  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 16122  0040CE  0E7F               	movlw	127
 16123  0040D0  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 16124  0040D2  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 16125  0040D4  0F98               	addlw	152
 16126  0040D6  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 16127  0040D8  0E18               	movlw	24
 16128  0040DA  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 16129  0040DC                     i2l832:
 16130  0040DC  90D8               	bcf	status,0,c
 16131  0040DE  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 16132  0040E0  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 16133  0040E2  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 16134  0040E4  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 16135  0040E6  5004               	movf	i2__tdiv_to_l_@f2,w,c
 16136  0040E8  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 16137  0040EA  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 16138  0040EC  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 16139  0040EE  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 16140  0040F0  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 16141  0040F2  A0D8               	btfss	status,0,c
 16142  0040F4  D007               	goto	i2l833
 16143  0040F6  5004               	movf	i2__tdiv_to_l_@f2,w,c
 16144  0040F8  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 16145  0040FA  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 16146  0040FC  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 16147  0040FE  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 16148  004100  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 16149  004102  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 16150  004104                     i2l833:
 16151  004104  90D8               	bcf	status,0,c
 16152  004106  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 16153  004108  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 16154  00410A  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 16155  00410C  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 16156  00410E  D7E6               	goto	i2l832
 16157  004110  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 16158  004112  D016               	goto	i2l4274
 16159  004114  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 16160  004116  0A80               	xorlw	128
 16161  004118  0F97               	addlw	151
 16162  00411A  B0D8               	btfsc	status,0,c
 16163  00411C  D009               	goto	i2l4270
 16164  00411E  0E00               	movlw	0
 16165  004120  6E01               	movwf	?i2__tdiv_to_l_,c
 16166  004122  0E00               	movlw	0
 16167  004124  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16168  004126  0E00               	movlw	0
 16169  004128  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16170  00412A  0E00               	movlw	0
 16171  00412C  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16172  00412E  0012               	return	
 16173  004130                     i2l4270:
 16174  004130  90D8               	bcf	status,0,c
 16175  004132  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 16176  004134  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 16177  004136  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 16178  004138  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 16179  00413A  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 16180  00413C  D7F9               	goto	i2l4270
 16181  00413E  D015               	goto	i2l839
 16182  004140                     i2l4274:
 16183  004140  0E17               	movlw	23
 16184  004142  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 16185  004144  D00F               	goto	i2l4282
 16186  004146  0E00               	movlw	0
 16187  004148  6E01               	movwf	?i2__tdiv_to_l_,c
 16188  00414A  0E00               	movlw	0
 16189  00414C  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16190  00414E  0E00               	movlw	0
 16191  004150  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16192  004152  0E00               	movlw	0
 16193  004154  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16194  004156  0012               	return	
 16195  004158                     i2l4280:
 16196  004158  90D8               	bcf	status,0,c
 16197  00415A  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 16198  00415C  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 16199  00415E  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 16200  004160  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 16201  004162  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 16202  004164                     i2l4282:
 16203  004164  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 16204  004166  A4D8               	btfss	status,2,c
 16205  004168  D7F7               	goto	i2l4280
 16206  00416A                     i2l839:
 16207  00416A  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 16208  00416E  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 16209  004172  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 16210  004176  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 16211  00417A  0012               	return		;funcret
 16212  00417C                     __end_ofi2__tdiv_to_l_:
 16213                           	opt stack 0
 16214                           tosu	equ	0xFFF
 16215                           tosh	equ	0xFFE
 16216                           tosl	equ	0xFFD
 16217                           pclatu	equ	0xFFB
 16218                           pclath	equ	0xFFA
 16219                           tblptru	equ	0xFF8
 16220                           tblptrh	equ	0xFF7
 16221                           tblptrl	equ	0xFF6
 16222                           tablat	equ	0xFF5
 16223                           prodh	equ	0xFF4
 16224                           prodl	equ	0xFF3
 16225                           intcon	equ	0xFF2
 16226                           intcon2	equ	0xFF1
 16227                           intcon3	equ	0xFF0
 16228                           postinc0	equ	0xFEE
 16229                           fsr0h	equ	0xFEA
 16230                           fsr0l	equ	0xFE9
 16231                           wreg	equ	0xFE8
 16232                           postdec1	equ	0xFE5
 16233                           fsr1h	equ	0xFE2
 16234                           fsr1l	equ	0xFE1
 16235                           indf2	equ	0xFDF
 16236                           postinc2	equ	0xFDE
 16237                           postdec2	equ	0xFDD
 16238                           fsr2h	equ	0xFDA
 16239                           fsr2l	equ	0xFD9
 16240                           status	equ	0xFD8
 16241                           
 16242 ;; *************** function i2__div_to_l_ *****************
 16243 ;; Defined at:
 16244 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fldivl.c"
 16245 ;; Parameters:    Size  Location     Type
 16246 ;;  f1              3    0[COMRAM] unsigned long 
 16247 ;;  f2              3    3[COMRAM] unsigned long 
 16248 ;; Auto vars:     Size  Location     Type
 16249 ;;  _div_to_l_      4    6[COMRAM] unsigned long 
 16250 ;;  _div_to_l_      1   11[COMRAM] unsigned char 
 16251 ;;  _div_to_l_      1   10[COMRAM] unsigned char 
 16252 ;; Return value:  Size  Location     Type
 16253 ;;                  4    0[COMRAM] unsigned long 
 16254 ;; Registers used:
 16255 ;;		wreg, status,2, status,0
 16256 ;; Tracked objects:
 16257 ;;		On entry : 0/0
 16258 ;;		On exit  : 0/0
 16259 ;;		Unchanged: 0/0
 16260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16261 ;;      Params:         6       0       0       0       0       0       0
 16262 ;;      Locals:         6       0       0       0       0       0       0
 16263 ;;      Temps:          0       0       0       0       0       0       0
 16264 ;;      Totals:        12       0       0       0       0       0       0
 16265 ;;Total ram usage:       12 bytes
 16266 ;; Hardware stack levels used:    1
 16267 ;; This function calls:
 16268 ;;		Nothing
 16269 ;; This function is called by:
 16270 ;;		i2__doprnt
 16271 ;; This function uses a non-reentrant model
 16272 ;;
 16273                           
 16274                           	psect	text58
 16275  00417C                     __ptext58:
 16276                           	opt stack 0
 16277  00417C                     i2__div_to_l_:
 16278                           	opt stack 21
 16279                           
 16280                           ;incstack = 0
 16281  00417C  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 16282  00417E  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 16283  004180  6E0C               	movwf	i2__div_to_l_@exp1,c
 16284  004182  500C               	movf	i2__div_to_l_@exp1,w,c
 16285  004184  A4D8               	btfss	status,2,c
 16286  004186  D009               	goto	i2l4174
 16287  004188  0E00               	movlw	0
 16288  00418A  6E01               	movwf	?i2__div_to_l_,c
 16289  00418C  0E00               	movlw	0
 16290  00418E  6E02               	movwf	?i2__div_to_l_+1,c
 16291  004190  0E00               	movlw	0
 16292  004192  6E03               	movwf	?i2__div_to_l_+2,c
 16293  004194  0E00               	movlw	0
 16294  004196  6E04               	movwf	?i2__div_to_l_+3,c
 16295  004198  0012               	return	
 16296  00419A                     i2l4174:
 16297  00419A  3406               	rlcf	i2__div_to_l_@f2+2,w,c
 16298  00419C  3407               	rlcf	i2__div_to_l_@f2+3,w,c
 16299  00419E  6E0B               	movwf	i2__div_to_l_@cntr,c
 16300  0041A0  500B               	movf	i2__div_to_l_@cntr,w,c
 16301  0041A2  A4D8               	btfss	status,2,c
 16302  0041A4  D009               	goto	i2l4180
 16303  0041A6  0E00               	movlw	0
 16304  0041A8  6E01               	movwf	?i2__div_to_l_,c
 16305  0041AA  0E00               	movlw	0
 16306  0041AC  6E02               	movwf	?i2__div_to_l_+1,c
 16307  0041AE  0E00               	movlw	0
 16308  0041B0  6E03               	movwf	?i2__div_to_l_+2,c
 16309  0041B2  0E00               	movlw	0
 16310  0041B4  6E04               	movwf	?i2__div_to_l_+3,c
 16311  0041B6  0012               	return	
 16312  0041B8                     i2l4180:
 16313  0041B8  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 16314  0041BA  0EFF               	movlw	255
 16315  0041BC  1601               	andwf	i2__div_to_l_@f1,f,c
 16316  0041BE  0EFF               	movlw	255
 16317  0041C0  1602               	andwf	i2__div_to_l_@f1+1,f,c
 16318  0041C2  0EFF               	movlw	255
 16319  0041C4  1603               	andwf	i2__div_to_l_@f1+2,f,c
 16320  0041C6  0E00               	movlw	0
 16321  0041C8  1604               	andwf	i2__div_to_l_@f1+3,f,c
 16322  0041CA  8E06               	bsf	i2__div_to_l_@f2+2,7,c
 16323  0041CC  0EFF               	movlw	255
 16324  0041CE  1604               	andwf	i2__div_to_l_@f2,f,c
 16325  0041D0  0EFF               	movlw	255
 16326  0041D2  1605               	andwf	i2__div_to_l_@f2+1,f,c
 16327  0041D4  0EFF               	movlw	255
 16328  0041D6  1606               	andwf	i2__div_to_l_@f2+2,f,c
 16329  0041D8  0E00               	movlw	0
 16330  0041DA  1607               	andwf	i2__div_to_l_@f2+3,f,c
 16331  0041DC  0E00               	movlw	0
 16332  0041DE  6E07               	movwf	i2__div_to_l_@quot,c
 16333  0041E0  0E00               	movlw	0
 16334  0041E2  6E08               	movwf	i2__div_to_l_@quot+1,c
 16335  0041E4  0E00               	movlw	0
 16336  0041E6  6E09               	movwf	i2__div_to_l_@quot+2,c
 16337  0041E8  0E00               	movlw	0
 16338  0041EA  6E0A               	movwf	i2__div_to_l_@quot+3,c
 16339  0041EC  0E7F               	movlw	127
 16340  0041EE  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 16341  0041F0  500B               	movf	i2__div_to_l_@cntr,w,c
 16342  0041F2  0FA0               	addlw	160
 16343  0041F4  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 16344  0041F6  0E20               	movlw	32
 16345  0041F8  6E0B               	movwf	i2__div_to_l_@cntr,c
 16346  0041FA                     i2l4194:
 16347  0041FA  90D8               	bcf	status,0,c
 16348  0041FC  3607               	rlcf	i2__div_to_l_@quot,f,c
 16349  0041FE  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 16350  004200  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 16351  004202  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 16352  004204  5004               	movf	i2__div_to_l_@f2,w,c
 16353  004206  5C01               	subwf	i2__div_to_l_@f1,w,c
 16354  004208  5005               	movf	i2__div_to_l_@f2+1,w,c
 16355  00420A  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 16356  00420C  5006               	movf	i2__div_to_l_@f2+2,w,c
 16357  00420E  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 16358  004210  5007               	movf	i2__div_to_l_@f2+3,w,c
 16359  004212  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 16360  004214  A0D8               	btfss	status,0,c
 16361  004216  D009               	goto	i2l4202
 16362  004218  5004               	movf	i2__div_to_l_@f2,w,c
 16363  00421A  5E01               	subwf	i2__div_to_l_@f1,f,c
 16364  00421C  5005               	movf	i2__div_to_l_@f2+1,w,c
 16365  00421E  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 16366  004220  5006               	movf	i2__div_to_l_@f2+2,w,c
 16367  004222  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 16368  004224  5007               	movf	i2__div_to_l_@f2+3,w,c
 16369  004226  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 16370  004228  8007               	bsf	i2__div_to_l_@quot,0,c
 16371  00422A                     i2l4202:
 16372  00422A  90D8               	bcf	status,0,c
 16373  00422C  3601               	rlcf	i2__div_to_l_@f1,f,c
 16374  00422E  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 16375  004230  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 16376  004232  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 16377  004234  2E0B               	decfsz	i2__div_to_l_@cntr,f,c
 16378  004236  D7E1               	goto	i2l4194
 16379  004238  AE0C               	btfss	i2__div_to_l_@exp1,7,c
 16380  00423A  D016               	goto	i2l4218
 16381  00423C  500C               	movf	i2__div_to_l_@exp1,w,c
 16382  00423E  0A80               	xorlw	128
 16383  004240  0F9F               	addlw	159
 16384  004242  B0D8               	btfsc	status,0,c
 16385  004244  D009               	goto	i2l4214
 16386  004246  0E00               	movlw	0
 16387  004248  6E01               	movwf	?i2__div_to_l_,c
 16388  00424A  0E00               	movlw	0
 16389  00424C  6E02               	movwf	?i2__div_to_l_+1,c
 16390  00424E  0E00               	movlw	0
 16391  004250  6E03               	movwf	?i2__div_to_l_+2,c
 16392  004252  0E00               	movlw	0
 16393  004254  6E04               	movwf	?i2__div_to_l_+3,c
 16394  004256  0012               	return	
 16395  004258                     i2l4214:
 16396  004258  90D8               	bcf	status,0,c
 16397  00425A  320A               	rrcf	i2__div_to_l_@quot+3,f,c
 16398  00425C  3209               	rrcf	i2__div_to_l_@quot+2,f,c
 16399  00425E  3208               	rrcf	i2__div_to_l_@quot+1,f,c
 16400  004260  3207               	rrcf	i2__div_to_l_@quot,f,c
 16401  004262  3E0C               	incfsz	i2__div_to_l_@exp1,f,c
 16402  004264  D7F9               	goto	i2l4214
 16403  004266  D015               	goto	i2l735
 16404  004268                     i2l4218:
 16405  004268  0E1F               	movlw	31
 16406  00426A  640C               	cpfsgt	i2__div_to_l_@exp1,c
 16407  00426C  D00F               	goto	i2l4226
 16408  00426E  0E00               	movlw	0
 16409  004270  6E01               	movwf	?i2__div_to_l_,c
 16410  004272  0E00               	movlw	0
 16411  004274  6E02               	movwf	?i2__div_to_l_+1,c
 16412  004276  0E00               	movlw	0
 16413  004278  6E03               	movwf	?i2__div_to_l_+2,c
 16414  00427A  0E00               	movlw	0
 16415  00427C  6E04               	movwf	?i2__div_to_l_+3,c
 16416  00427E  0012               	return	
 16417  004280                     i2l4224:
 16418  004280  90D8               	bcf	status,0,c
 16419  004282  3607               	rlcf	i2__div_to_l_@quot,f,c
 16420  004284  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 16421  004286  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 16422  004288  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 16423  00428A  060C               	decf	i2__div_to_l_@exp1,f,c
 16424  00428C                     i2l4226:
 16425  00428C  500C               	movf	i2__div_to_l_@exp1,w,c
 16426  00428E  A4D8               	btfss	status,2,c
 16427  004290  D7F7               	goto	i2l4224
 16428  004292                     i2l735:
 16429  004292  C007  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 16430  004296  C008  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 16431  00429A  C009  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 16432  00429E  C00A  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 16433  0042A2  0012               	return		;funcret
 16434  0042A4                     __end_ofi2__div_to_l_:
 16435                           	opt stack 0
 16436                           tosu	equ	0xFFF
 16437                           tosh	equ	0xFFE
 16438                           tosl	equ	0xFFD
 16439                           pclatu	equ	0xFFB
 16440                           pclath	equ	0xFFA
 16441                           tblptru	equ	0xFF8
 16442                           tblptrh	equ	0xFF7
 16443                           tblptrl	equ	0xFF6
 16444                           tablat	equ	0xFF5
 16445                           prodh	equ	0xFF4
 16446                           prodl	equ	0xFF3
 16447                           intcon	equ	0xFF2
 16448                           intcon2	equ	0xFF1
 16449                           intcon3	equ	0xFF0
 16450                           postinc0	equ	0xFEE
 16451                           fsr0h	equ	0xFEA
 16452                           fsr0l	equ	0xFE9
 16453                           wreg	equ	0xFE8
 16454                           postdec1	equ	0xFE5
 16455                           fsr1h	equ	0xFE2
 16456                           fsr1l	equ	0xFE1
 16457                           indf2	equ	0xFDF
 16458                           postinc2	equ	0xFDE
 16459                           postdec2	equ	0xFDD
 16460                           fsr2h	equ	0xFDA
 16461                           fsr2l	equ	0xFD9
 16462                           status	equ	0xFD8
 16463                           
 16464 ;; *************** function i2___lltoft *****************
 16465 ;; Defined at:
 16466 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lltoft.c"
 16467 ;; Parameters:    Size  Location     Type
 16468 ;;  c               4    8[COMRAM] unsigned long 
 16469 ;; Auto vars:     Size  Location     Type
 16470 ;;  __lltoft        1   16[COMRAM] unsigned char 
 16471 ;; Return value:  Size  Location     Type
 16472 ;;                  3    8[COMRAM] float 
 16473 ;; Registers used:
 16474 ;;		wreg, status,2, status,0, cstack
 16475 ;; Tracked objects:
 16476 ;;		On entry : 0/0
 16477 ;;		On exit  : 0/0
 16478 ;;		Unchanged: 0/0
 16479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16480 ;;      Params:         4       0       0       0       0       0       0
 16481 ;;      Locals:         1       0       0       0       0       0       0
 16482 ;;      Temps:          4       0       0       0       0       0       0
 16483 ;;      Totals:         9       0       0       0       0       0       0
 16484 ;;Total ram usage:        9 bytes
 16485 ;; Hardware stack levels used:    1
 16486 ;; Hardware stack levels required when called:    1
 16487 ;; This function calls:
 16488 ;;		i2___ftpack
 16489 ;; This function is called by:
 16490 ;;		i2__doprnt
 16491 ;; This function uses a non-reentrant model
 16492 ;;
 16493                           
 16494                           	psect	text59
 16495  004F92                     __ptext59:
 16496                           	opt stack 0
 16497  004F92                     i2___lltoft:
 16498                           	opt stack 20
 16499                           
 16500                           ;incstack = 0
 16501  004F92  0E8E               	movlw	142
 16502  004F94  6E11               	movwf	i2___lltoft@exp,c
 16503  004F96  D006               	goto	i2l4414
 16504  004F98                     i2l4412:
 16505  004F98  90D8               	bcf	status,0,c
 16506  004F9A  320C               	rrcf	i2___lltoft@c+3,f,c
 16507  004F9C  320B               	rrcf	i2___lltoft@c+2,f,c
 16508  004F9E  320A               	rrcf	i2___lltoft@c+1,f,c
 16509  004FA0  3209               	rrcf	i2___lltoft@c,f,c
 16510  004FA2  2A11               	incf	i2___lltoft@exp,f,c
 16511  004FA4                     i2l4414:
 16512  004FA4  0E00               	movlw	0
 16513  004FA6  1409               	andwf	i2___lltoft@c,w,c
 16514  004FA8  6E0D               	movwf	??i2___lltoft& (0+255),c
 16515  004FAA  0E00               	movlw	0
 16516  004FAC  140A               	andwf	i2___lltoft@c+1,w,c
 16517  004FAE  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 16518  004FB0  0E00               	movlw	0
 16519  004FB2  140B               	andwf	i2___lltoft@c+2,w,c
 16520  004FB4  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 16521  004FB6  0EFF               	movlw	255
 16522  004FB8  140C               	andwf	i2___lltoft@c+3,w,c
 16523  004FBA  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 16524  004FBC  500D               	movf	??i2___lltoft,w,c
 16525  004FBE  100E               	iorwf	??i2___lltoft+1,w,c
 16526  004FC0  100F               	iorwf	??i2___lltoft+2,w,c
 16527  004FC2  1010               	iorwf	??i2___lltoft+3,w,c
 16528  004FC4  A4D8               	btfss	status,2,c
 16529  004FC6  D7E8               	goto	i2l4412
 16530  004FC8  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 16531  004FCC  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 16532  004FD0  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 16533  004FD4  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 16534  004FD8  0E00               	movlw	0
 16535  004FDA  6E05               	movwf	i2___ftpack@sign,c
 16536  004FDC  ECF1  F024         	call	i2___ftpack	;wreg free
 16537  004FE0  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 16538  004FE4  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 16539  004FE8  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 16540  004FEC  0012               	return	
 16541  004FEE                     __end_ofi2___lltoft:
 16542                           	opt stack 0
 16543                           tosu	equ	0xFFF
 16544                           tosh	equ	0xFFE
 16545                           tosl	equ	0xFFD
 16546                           pclatu	equ	0xFFB
 16547                           pclath	equ	0xFFA
 16548                           tblptru	equ	0xFF8
 16549                           tblptrh	equ	0xFF7
 16550                           tblptrl	equ	0xFF6
 16551                           tablat	equ	0xFF5
 16552                           prodh	equ	0xFF4
 16553                           prodl	equ	0xFF3
 16554                           intcon	equ	0xFF2
 16555                           intcon2	equ	0xFF1
 16556                           intcon3	equ	0xFF0
 16557                           postinc0	equ	0xFEE
 16558                           fsr0h	equ	0xFEA
 16559                           fsr0l	equ	0xFE9
 16560                           wreg	equ	0xFE8
 16561                           postdec1	equ	0xFE5
 16562                           fsr1h	equ	0xFE2
 16563                           fsr1l	equ	0xFE1
 16564                           indf2	equ	0xFDF
 16565                           postinc2	equ	0xFDE
 16566                           postdec2	equ	0xFDD
 16567                           fsr2h	equ	0xFDA
 16568                           fsr2l	equ	0xFD9
 16569                           status	equ	0xFD8
 16570                           
 16571 ;; *************** function i2___llmod *****************
 16572 ;; Defined at:
 16573 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
 16574 ;; Parameters:    Size  Location     Type
 16575 ;;  dividend        4   13[COMRAM] unsigned long 
 16576 ;;  divisor         4   17[COMRAM] unsigned long 
 16577 ;; Auto vars:     Size  Location     Type
 16578 ;;  __llmod         1   21[COMRAM] unsigned char 
 16579 ;; Return value:  Size  Location     Type
 16580 ;;                  4   13[COMRAM] unsigned long 
 16581 ;; Registers used:
 16582 ;;		wreg, status,2, status,0
 16583 ;; Tracked objects:
 16584 ;;		On entry : 0/0
 16585 ;;		On exit  : 0/0
 16586 ;;		Unchanged: 0/0
 16587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16588 ;;      Params:         8       0       0       0       0       0       0
 16589 ;;      Locals:         1       0       0       0       0       0       0
 16590 ;;      Temps:          0       0       0       0       0       0       0
 16591 ;;      Totals:         9       0       0       0       0       0       0
 16592 ;;Total ram usage:        9 bytes
 16593 ;; Hardware stack levels used:    1
 16594 ;; This function calls:
 16595 ;;		Nothing
 16596 ;; This function is called by:
 16597 ;;		i2__doprnt
 16598 ;; This function uses a non-reentrant model
 16599 ;;
 16600                           
 16601                           	psect	text60
 16602  004EC8                     __ptext60:
 16603                           	opt stack 0
 16604  004EC8                     i2___llmod:
 16605                           	opt stack 21
 16606                           
 16607                           ;incstack = 0
 16608  004EC8  5012               	movf	i2___llmod@divisor,w,c
 16609  004ECA  1013               	iorwf	i2___llmod@divisor+1,w,c
 16610  004ECC  1014               	iorwf	i2___llmod@divisor+2,w,c
 16611  004ECE  1015               	iorwf	i2___llmod@divisor+3,w,c
 16612  004ED0  B4D8               	btfsc	status,2,c
 16613  004ED2  D024               	goto	i2l946
 16614  004ED4  0E01               	movlw	1
 16615  004ED6  6E16               	movwf	i2___llmod@counter,c
 16616  004ED8  D006               	goto	i2l4400
 16617  004EDA                     i2l4398:
 16618  004EDA  90D8               	bcf	status,0,c
 16619  004EDC  3612               	rlcf	i2___llmod@divisor,f,c
 16620  004EDE  3613               	rlcf	i2___llmod@divisor+1,f,c
 16621  004EE0  3614               	rlcf	i2___llmod@divisor+2,f,c
 16622  004EE2  3615               	rlcf	i2___llmod@divisor+3,f,c
 16623  004EE4  2A16               	incf	i2___llmod@counter,f,c
 16624  004EE6                     i2l4400:
 16625  004EE6  AE15               	btfss	i2___llmod@divisor+3,7,c
 16626  004EE8  D7F8               	goto	i2l4398
 16627  004EEA                     i2l4402:
 16628  004EEA  5012               	movf	i2___llmod@divisor,w,c
 16629  004EEC  5C0E               	subwf	i2___llmod@dividend,w,c
 16630  004EEE  5013               	movf	i2___llmod@divisor+1,w,c
 16631  004EF0  580F               	subwfb	i2___llmod@dividend+1,w,c
 16632  004EF2  5014               	movf	i2___llmod@divisor+2,w,c
 16633  004EF4  5810               	subwfb	i2___llmod@dividend+2,w,c
 16634  004EF6  5015               	movf	i2___llmod@divisor+3,w,c
 16635  004EF8  5811               	subwfb	i2___llmod@dividend+3,w,c
 16636  004EFA  A0D8               	btfss	status,0,c
 16637  004EFC  D008               	goto	i2l4406
 16638  004EFE  5012               	movf	i2___llmod@divisor,w,c
 16639  004F00  5E0E               	subwf	i2___llmod@dividend,f,c
 16640  004F02  5013               	movf	i2___llmod@divisor+1,w,c
 16641  004F04  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 16642  004F06  5014               	movf	i2___llmod@divisor+2,w,c
 16643  004F08  5A10               	subwfb	i2___llmod@dividend+2,f,c
 16644  004F0A  5015               	movf	i2___llmod@divisor+3,w,c
 16645  004F0C  5A11               	subwfb	i2___llmod@dividend+3,f,c
 16646  004F0E                     i2l4406:
 16647  004F0E  90D8               	bcf	status,0,c
 16648  004F10  3215               	rrcf	i2___llmod@divisor+3,f,c
 16649  004F12  3214               	rrcf	i2___llmod@divisor+2,f,c
 16650  004F14  3213               	rrcf	i2___llmod@divisor+1,f,c
 16651  004F16  3212               	rrcf	i2___llmod@divisor,f,c
 16652  004F18  2E16               	decfsz	i2___llmod@counter,f,c
 16653  004F1A  D7E7               	goto	i2l4402
 16654  004F1C                     i2l946:
 16655  004F1C  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 16656  004F20  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 16657  004F24  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 16658  004F28  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 16659  004F2C  0012               	return		;funcret
 16660  004F2E                     __end_ofi2___llmod:
 16661                           	opt stack 0
 16662                           tosu	equ	0xFFF
 16663                           tosh	equ	0xFFE
 16664                           tosl	equ	0xFFD
 16665                           pclatu	equ	0xFFB
 16666                           pclath	equ	0xFFA
 16667                           tblptru	equ	0xFF8
 16668                           tblptrh	equ	0xFF7
 16669                           tblptrl	equ	0xFF6
 16670                           tablat	equ	0xFF5
 16671                           prodh	equ	0xFF4
 16672                           prodl	equ	0xFF3
 16673                           intcon	equ	0xFF2
 16674                           intcon2	equ	0xFF1
 16675                           intcon3	equ	0xFF0
 16676                           postinc0	equ	0xFEE
 16677                           fsr0h	equ	0xFEA
 16678                           fsr0l	equ	0xFE9
 16679                           wreg	equ	0xFE8
 16680                           postdec1	equ	0xFE5
 16681                           fsr1h	equ	0xFE2
 16682                           fsr1l	equ	0xFE1
 16683                           indf2	equ	0xFDF
 16684                           postinc2	equ	0xFDE
 16685                           postdec2	equ	0xFDD
 16686                           fsr2h	equ	0xFDA
 16687                           fsr2l	equ	0xFD9
 16688                           status	equ	0xFD8
 16689                           
 16690 ;; *************** function i2___lldiv *****************
 16691 ;; Defined at:
 16692 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
 16693 ;; Parameters:    Size  Location     Type
 16694 ;;  dividend        4    0[COMRAM] unsigned long 
 16695 ;;  divisor         4    4[COMRAM] unsigned long 
 16696 ;; Auto vars:     Size  Location     Type
 16697 ;;  __lldiv         4    8[COMRAM] unsigned long 
 16698 ;;  __lldiv         1   12[COMRAM] unsigned char 
 16699 ;; Return value:  Size  Location     Type
 16700 ;;                  4    0[COMRAM] unsigned long 
 16701 ;; Registers used:
 16702 ;;		wreg, status,2, status,0
 16703 ;; Tracked objects:
 16704 ;;		On entry : 0/0
 16705 ;;		On exit  : 0/0
 16706 ;;		Unchanged: 0/0
 16707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16708 ;;      Params:         8       0       0       0       0       0       0
 16709 ;;      Locals:         5       0       0       0       0       0       0
 16710 ;;      Temps:          0       0       0       0       0       0       0
 16711 ;;      Totals:        13       0       0       0       0       0       0
 16712 ;;Total ram usage:       13 bytes
 16713 ;; Hardware stack levels used:    1
 16714 ;; This function calls:
 16715 ;;		Nothing
 16716 ;; This function is called by:
 16717 ;;		i2__doprnt
 16718 ;; This function uses a non-reentrant model
 16719 ;;
 16720                           
 16721                           	psect	text61
 16722  004CE0                     __ptext61:
 16723                           	opt stack 0
 16724  004CE0                     i2___lldiv:
 16725                           	opt stack 21
 16726                           
 16727                           ;incstack = 0
 16728  004CE0  0E00               	movlw	0
 16729  004CE2  6E09               	movwf	i2___lldiv@quotient,c
 16730  004CE4  0E00               	movlw	0
 16731  004CE6  6E0A               	movwf	i2___lldiv@quotient+1,c
 16732  004CE8  0E00               	movlw	0
 16733  004CEA  6E0B               	movwf	i2___lldiv@quotient+2,c
 16734  004CEC  0E00               	movlw	0
 16735  004CEE  6E0C               	movwf	i2___lldiv@quotient+3,c
 16736  004CF0  5005               	movf	i2___lldiv@divisor,w,c
 16737  004CF2  1006               	iorwf	i2___lldiv@divisor+1,w,c
 16738  004CF4  1007               	iorwf	i2___lldiv@divisor+2,w,c
 16739  004CF6  1008               	iorwf	i2___lldiv@divisor+3,w,c
 16740  004CF8  B4D8               	btfsc	status,2,c
 16741  004CFA  D02A               	goto	i2l936
 16742  004CFC  0E01               	movlw	1
 16743  004CFE  6E0D               	movwf	i2___lldiv@counter,c
 16744  004D00  D006               	goto	i2l4380
 16745  004D02                     i2l4378:
 16746  004D02  90D8               	bcf	status,0,c
 16747  004D04  3605               	rlcf	i2___lldiv@divisor,f,c
 16748  004D06  3606               	rlcf	i2___lldiv@divisor+1,f,c
 16749  004D08  3607               	rlcf	i2___lldiv@divisor+2,f,c
 16750  004D0A  3608               	rlcf	i2___lldiv@divisor+3,f,c
 16751  004D0C  2A0D               	incf	i2___lldiv@counter,f,c
 16752  004D0E                     i2l4380:
 16753  004D0E  AE08               	btfss	i2___lldiv@divisor+3,7,c
 16754  004D10  D7F8               	goto	i2l4378
 16755  004D12                     i2l4382:
 16756  004D12  90D8               	bcf	status,0,c
 16757  004D14  3609               	rlcf	i2___lldiv@quotient,f,c
 16758  004D16  360A               	rlcf	i2___lldiv@quotient+1,f,c
 16759  004D18  360B               	rlcf	i2___lldiv@quotient+2,f,c
 16760  004D1A  360C               	rlcf	i2___lldiv@quotient+3,f,c
 16761  004D1C  5005               	movf	i2___lldiv@divisor,w,c
 16762  004D1E  5C01               	subwf	i2___lldiv@dividend,w,c
 16763  004D20  5006               	movf	i2___lldiv@divisor+1,w,c
 16764  004D22  5802               	subwfb	i2___lldiv@dividend+1,w,c
 16765  004D24  5007               	movf	i2___lldiv@divisor+2,w,c
 16766  004D26  5803               	subwfb	i2___lldiv@dividend+2,w,c
 16767  004D28  5008               	movf	i2___lldiv@divisor+3,w,c
 16768  004D2A  5804               	subwfb	i2___lldiv@dividend+3,w,c
 16769  004D2C  A0D8               	btfss	status,0,c
 16770  004D2E  D009               	goto	i2l4390
 16771  004D30  5005               	movf	i2___lldiv@divisor,w,c
 16772  004D32  5E01               	subwf	i2___lldiv@dividend,f,c
 16773  004D34  5006               	movf	i2___lldiv@divisor+1,w,c
 16774  004D36  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 16775  004D38  5007               	movf	i2___lldiv@divisor+2,w,c
 16776  004D3A  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 16777  004D3C  5008               	movf	i2___lldiv@divisor+3,w,c
 16778  004D3E  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 16779  004D40  8009               	bsf	i2___lldiv@quotient,0,c
 16780  004D42                     i2l4390:
 16781  004D42  90D8               	bcf	status,0,c
 16782  004D44  3208               	rrcf	i2___lldiv@divisor+3,f,c
 16783  004D46  3207               	rrcf	i2___lldiv@divisor+2,f,c
 16784  004D48  3206               	rrcf	i2___lldiv@divisor+1,f,c
 16785  004D4A  3205               	rrcf	i2___lldiv@divisor,f,c
 16786  004D4C  2E0D               	decfsz	i2___lldiv@counter,f,c
 16787  004D4E  D7E1               	goto	i2l4382
 16788  004D50                     i2l936:
 16789  004D50  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 16790  004D54  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 16791  004D58  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 16792  004D5C  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 16793  004D60  0012               	return		;funcret
 16794  004D62                     __end_ofi2___lldiv:
 16795                           	opt stack 0
 16796                           tosu	equ	0xFFF
 16797                           tosh	equ	0xFFE
 16798                           tosl	equ	0xFFD
 16799                           pclatu	equ	0xFFB
 16800                           pclath	equ	0xFFA
 16801                           tblptru	equ	0xFF8
 16802                           tblptrh	equ	0xFF7
 16803                           tblptrl	equ	0xFF6
 16804                           tablat	equ	0xFF5
 16805                           prodh	equ	0xFF4
 16806                           prodl	equ	0xFF3
 16807                           intcon	equ	0xFF2
 16808                           intcon2	equ	0xFF1
 16809                           intcon3	equ	0xFF0
 16810                           postinc0	equ	0xFEE
 16811                           fsr0h	equ	0xFEA
 16812                           fsr0l	equ	0xFE9
 16813                           wreg	equ	0xFE8
 16814                           postdec1	equ	0xFE5
 16815                           fsr1h	equ	0xFE2
 16816                           fsr1l	equ	0xFE1
 16817                           indf2	equ	0xFDF
 16818                           postinc2	equ	0xFDE
 16819                           postdec2	equ	0xFDD
 16820                           fsr2h	equ	0xFDA
 16821                           fsr2l	equ	0xFD9
 16822                           status	equ	0xFD8
 16823                           
 16824 ;; *************** function i2___fttol *****************
 16825 ;; Defined at:
 16826 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
 16827 ;; Parameters:    Size  Location     Type
 16828 ;;  f1              3   54[COMRAM] float 
 16829 ;; Auto vars:     Size  Location     Type
 16830 ;;  __fttol         4   64[COMRAM] unsigned long 
 16831 ;;  __fttol         1   68[COMRAM] unsigned char 
 16832 ;;  __fttol         1   63[COMRAM] unsigned char 
 16833 ;; Return value:  Size  Location     Type
 16834 ;;                  4   54[COMRAM] long 
 16835 ;; Registers used:
 16836 ;;		wreg, status,2, status,0
 16837 ;; Tracked objects:
 16838 ;;		On entry : 0/0
 16839 ;;		On exit  : 0/0
 16840 ;;		Unchanged: 0/0
 16841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16842 ;;      Params:         4       0       0       0       0       0       0
 16843 ;;      Locals:         6       0       0       0       0       0       0
 16844 ;;      Temps:          5       0       0       0       0       0       0
 16845 ;;      Totals:        15       0       0       0       0       0       0
 16846 ;;Total ram usage:       15 bytes
 16847 ;; Hardware stack levels used:    1
 16848 ;; This function calls:
 16849 ;;		Nothing
 16850 ;; This function is called by:
 16851 ;;		i2__doprnt
 16852 ;; This function uses a non-reentrant model
 16853 ;;
 16854                           
 16855                           	psect	text62
 16856  0045C6                     __ptext62:
 16857                           	opt stack 0
 16858  0045C6                     i2___fttol:
 16859                           	opt stack 21
 16860                           
 16861                           ;incstack = 0
 16862  0045C6  C039  F03B         	movff	i2___fttol@f1+2,??i2___fttol
 16863  0045CA  6A3C               	clrf	(??i2___fttol+1)& (0+255),c
 16864  0045CC  6A3D               	clrf	(??i2___fttol+2)& (0+255),c
 16865  0045CE  3438               	rlcf	i2___fttol@f1+1,w,c
 16866  0045D0  363B               	rlcf	??i2___fttol& (0+255),f,c
 16867  0045D2  E301               	bnc	u544_41
 16868  0045D4  803C               	bsf	(??i2___fttol+1)& (0+255),0,c
 16869  0045D6                     u544_41:
 16870  0045D6  503B               	movf	??i2___fttol,w,c
 16871  0045D8  6E45               	movwf	i2___fttol@exp1,c
 16872  0045DA  5045               	movf	i2___fttol@exp1,w,c
 16873  0045DC  A4D8               	btfss	status,2,c
 16874  0045DE  D009               	goto	i2l4320
 16875  0045E0  0E00               	movlw	0
 16876  0045E2  6E37               	movwf	?i2___fttol,c
 16877  0045E4  0E00               	movlw	0
 16878  0045E6  6E38               	movwf	?i2___fttol+1,c
 16879  0045E8  0E00               	movlw	0
 16880  0045EA  6E39               	movwf	?i2___fttol+2,c
 16881  0045EC  0E00               	movlw	0
 16882  0045EE  6E3A               	movwf	?i2___fttol+3,c
 16883  0045F0  0012               	return	
 16884  0045F2                     i2l4320:
 16885  0045F2  0E17               	movlw	23
 16886  0045F4  6E3B               	movwf	??i2___fttol& (0+255),c
 16887  0045F6  C037  F03C         	movff	i2___fttol@f1,??i2___fttol+1
 16888  0045FA  C038  F03D         	movff	i2___fttol@f1+1,??i2___fttol+2
 16889  0045FE  C039  F03E         	movff	i2___fttol@f1+2,??i2___fttol+3
 16890  004602  283B               	incf	??i2___fttol,w,c
 16891  004604  6E3F               	movwf	(??i2___fttol+4)& (0+255),c
 16892  004606  D004               	goto	i2u546_40
 16893  004608                     i2u546_45:
 16894  004608  90D8               	bcf	status,0,c
 16895  00460A  323E               	rrcf	??i2___fttol+3,f,c
 16896  00460C  323D               	rrcf	??i2___fttol+2,f,c
 16897  00460E  323C               	rrcf	??i2___fttol+1,f,c
 16898  004610                     i2u546_40:
 16899  004610  2E3F               	decfsz	(??i2___fttol+4)& (0+255),f,c
 16900  004612  D7FA               	goto	i2u546_45
 16901  004614  503C               	movf	??i2___fttol+1,w,c
 16902  004616  6E40               	movwf	i2___fttol@sign1,c
 16903  004618  8E38               	bsf	i2___fttol@f1+1,7,c
 16904  00461A  0EFF               	movlw	255
 16905  00461C  1637               	andwf	i2___fttol@f1,f,c
 16906  00461E  0EFF               	movlw	255
 16907  004620  1638               	andwf	i2___fttol@f1+1,f,c
 16908  004622  0E00               	movlw	0
 16909  004624  1639               	andwf	i2___fttol@f1+2,f,c
 16910  004626  5037               	movf	i2___fttol@f1,w,c
 16911  004628  6E41               	movwf	i2___fttol@lval,c
 16912  00462A  5038               	movf	i2___fttol@f1+1,w,c
 16913  00462C  6E42               	movwf	i2___fttol@lval+1,c
 16914  00462E  5039               	movf	i2___fttol@f1+2,w,c
 16915  004630  6E43               	movwf	i2___fttol@lval+2,c
 16916  004632  6A44               	clrf	i2___fttol@lval+3,c
 16917  004634  0E8E               	movlw	142
 16918  004636  5E45               	subwf	i2___fttol@exp1,f,c
 16919  004638  AE45               	btfss	i2___fttol@exp1,7,c
 16920  00463A  D016               	goto	i2l4342
 16921  00463C  5045               	movf	i2___fttol@exp1,w,c
 16922  00463E  0A80               	xorlw	128
 16923  004640  0F8F               	addlw	143
 16924  004642  B0D8               	btfsc	status,0,c
 16925  004644  D009               	goto	i2l4338
 16926  004646  0E00               	movlw	0
 16927  004648  6E37               	movwf	?i2___fttol,c
 16928  00464A  0E00               	movlw	0
 16929  00464C  6E38               	movwf	?i2___fttol+1,c
 16930  00464E  0E00               	movlw	0
 16931  004650  6E39               	movwf	?i2___fttol+2,c
 16932  004652  0E00               	movlw	0
 16933  004654  6E3A               	movwf	?i2___fttol+3,c
 16934  004656  0012               	return	
 16935  004658                     i2l4338:
 16936  004658  90D8               	bcf	status,0,c
 16937  00465A  3244               	rrcf	i2___fttol@lval+3,f,c
 16938  00465C  3243               	rrcf	i2___fttol@lval+2,f,c
 16939  00465E  3242               	rrcf	i2___fttol@lval+1,f,c
 16940  004660  3241               	rrcf	i2___fttol@lval,f,c
 16941  004662  3E45               	incfsz	i2___fttol@exp1,f,c
 16942  004664  D7F9               	goto	i2l4338
 16943  004666  D015               	goto	i2l4352
 16944  004668                     i2l4342:
 16945  004668  0E17               	movlw	23
 16946  00466A  6445               	cpfsgt	i2___fttol@exp1,c
 16947  00466C  D00F               	goto	i2l4350
 16948  00466E  0E00               	movlw	0
 16949  004670  6E37               	movwf	?i2___fttol,c
 16950  004672  0E00               	movlw	0
 16951  004674  6E38               	movwf	?i2___fttol+1,c
 16952  004676  0E00               	movlw	0
 16953  004678  6E39               	movwf	?i2___fttol+2,c
 16954  00467A  0E00               	movlw	0
 16955  00467C  6E3A               	movwf	?i2___fttol+3,c
 16956  00467E  0012               	return	
 16957  004680                     i2l4348:
 16958  004680  90D8               	bcf	status,0,c
 16959  004682  3641               	rlcf	i2___fttol@lval,f,c
 16960  004684  3642               	rlcf	i2___fttol@lval+1,f,c
 16961  004686  3643               	rlcf	i2___fttol@lval+2,f,c
 16962  004688  3644               	rlcf	i2___fttol@lval+3,f,c
 16963  00468A  0645               	decf	i2___fttol@exp1,f,c
 16964  00468C                     i2l4350:
 16965  00468C  5045               	movf	i2___fttol@exp1,w,c
 16966  00468E  A4D8               	btfss	status,2,c
 16967  004690  D7F7               	goto	i2l4348
 16968  004692                     i2l4352:
 16969  004692  5040               	movf	i2___fttol@sign1,w,c
 16970  004694  B4D8               	btfsc	status,2,c
 16971  004696  D008               	goto	i2l4356
 16972  004698  1E44               	comf	i2___fttol@lval+3,f,c
 16973  00469A  1E43               	comf	i2___fttol@lval+2,f,c
 16974  00469C  1E42               	comf	i2___fttol@lval+1,f,c
 16975  00469E  6C41               	negf	i2___fttol@lval,c
 16976  0046A0  0E00               	movlw	0
 16977  0046A2  2242               	addwfc	i2___fttol@lval+1,f,c
 16978  0046A4  2243               	addwfc	i2___fttol@lval+2,f,c
 16979  0046A6  2244               	addwfc	i2___fttol@lval+3,f,c
 16980  0046A8                     i2l4356:
 16981  0046A8  C041  F037         	movff	i2___fttol@lval,?i2___fttol
 16982  0046AC  C042  F038         	movff	i2___fttol@lval+1,?i2___fttol+1
 16983  0046B0  C043  F039         	movff	i2___fttol@lval+2,?i2___fttol+2
 16984  0046B4  C044  F03A         	movff	i2___fttol@lval+3,?i2___fttol+3
 16985  0046B8  0012               	return	
 16986  0046BA                     __end_ofi2___fttol:
 16987                           	opt stack 0
 16988                           tosu	equ	0xFFF
 16989                           tosh	equ	0xFFE
 16990                           tosl	equ	0xFFD
 16991                           pclatu	equ	0xFFB
 16992                           pclath	equ	0xFFA
 16993                           tblptru	equ	0xFF8
 16994                           tblptrh	equ	0xFF7
 16995                           tblptrl	equ	0xFF6
 16996                           tablat	equ	0xFF5
 16997                           prodh	equ	0xFF4
 16998                           prodl	equ	0xFF3
 16999                           intcon	equ	0xFF2
 17000                           intcon2	equ	0xFF1
 17001                           intcon3	equ	0xFF0
 17002                           postinc0	equ	0xFEE
 17003                           fsr0h	equ	0xFEA
 17004                           fsr0l	equ	0xFE9
 17005                           wreg	equ	0xFE8
 17006                           postdec1	equ	0xFE5
 17007                           fsr1h	equ	0xFE2
 17008                           fsr1l	equ	0xFE1
 17009                           indf2	equ	0xFDF
 17010                           postinc2	equ	0xFDE
 17011                           postdec2	equ	0xFDD
 17012                           fsr2h	equ	0xFDA
 17013                           fsr2l	equ	0xFD9
 17014                           status	equ	0xFD8
 17015                           
 17016 ;; *************** function i2___ftsub *****************
 17017 ;; Defined at:
 17018 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
 17019 ;; Parameters:    Size  Location     Type
 17020 ;;  f1              3   32[COMRAM] float 
 17021 ;;  f2              3   35[COMRAM] float 
 17022 ;; Auto vars:     Size  Location     Type
 17023 ;;		None
 17024 ;; Return value:  Size  Location     Type
 17025 ;;                  3   32[COMRAM] float 
 17026 ;; Registers used:
 17027 ;;		wreg, status,2, status,0, cstack
 17028 ;; Tracked objects:
 17029 ;;		On entry : 0/0
 17030 ;;		On exit  : 0/0
 17031 ;;		Unchanged: 0/0
 17032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17033 ;;      Params:         6       0       0       0       0       0       0
 17034 ;;      Locals:         0       0       0       0       0       0       0
 17035 ;;      Temps:          0       0       0       0       0       0       0
 17036 ;;      Totals:         6       0       0       0       0       0       0
 17037 ;;Total ram usage:        6 bytes
 17038 ;; Hardware stack levels used:    1
 17039 ;; Hardware stack levels required when called:    2
 17040 ;; This function calls:
 17041 ;;		i2___ftadd
 17042 ;; This function is called by:
 17043 ;;		i2__doprnt
 17044 ;; This function uses a non-reentrant model
 17045 ;;
 17046                           
 17047                           	psect	text63
 17048  005226                     __ptext63:
 17049                           	opt stack 0
 17050  005226                     i2___ftsub:
 17051                           	opt stack 19
 17052                           
 17053                           ;incstack = 0
 17054  005226  5024               	movf	i2___ftsub@f2,w,c
 17055  005228  1025               	iorwf	i2___ftsub@f2+1,w,c
 17056  00522A  1026               	iorwf	i2___ftsub@f2+2,w,c
 17057  00522C  B4D8               	btfsc	status,2,c
 17058  00522E  D006               	goto	i2l4310
 17059  005230  0E00               	movlw	0
 17060  005232  1A24               	xorwf	i2___ftsub@f2,f,c
 17061  005234  0E00               	movlw	0
 17062  005236  1A25               	xorwf	i2___ftsub@f2+1,f,c
 17063  005238  0E80               	movlw	128
 17064  00523A  1A26               	xorwf	i2___ftsub@f2+2,f,c
 17065  00523C                     i2l4310:
 17066  00523C  C021  F015         	movff	i2___ftsub@f1,i2___ftadd@f1
 17067  005240  C022  F016         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 17068  005244  C023  F017         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 17069  005248  C024  F018         	movff	i2___ftsub@f2,i2___ftadd@f2
 17070  00524C  C025  F019         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 17071  005250  C026  F01A         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 17072  005254  EC40  F01A         	call	i2___ftadd	;wreg free
 17073  005258  C015  F021         	movff	?i2___ftadd,?i2___ftsub
 17074  00525C  C016  F022         	movff	?i2___ftadd+1,?i2___ftsub+1
 17075  005260  C017  F023         	movff	?i2___ftadd+2,?i2___ftsub+2
 17076  005264  0012               	return	
 17077  005266                     __end_ofi2___ftsub:
 17078                           	opt stack 0
 17079                           tosu	equ	0xFFF
 17080                           tosh	equ	0xFFE
 17081                           tosl	equ	0xFFD
 17082                           pclatu	equ	0xFFB
 17083                           pclath	equ	0xFFA
 17084                           tblptru	equ	0xFF8
 17085                           tblptrh	equ	0xFF7
 17086                           tblptrl	equ	0xFF6
 17087                           tablat	equ	0xFF5
 17088                           prodh	equ	0xFF4
 17089                           prodl	equ	0xFF3
 17090                           intcon	equ	0xFF2
 17091                           intcon2	equ	0xFF1
 17092                           intcon3	equ	0xFF0
 17093                           postinc0	equ	0xFEE
 17094                           fsr0h	equ	0xFEA
 17095                           fsr0l	equ	0xFE9
 17096                           wreg	equ	0xFE8
 17097                           postdec1	equ	0xFE5
 17098                           fsr1h	equ	0xFE2
 17099                           fsr1l	equ	0xFE1
 17100                           indf2	equ	0xFDF
 17101                           postinc2	equ	0xFDE
 17102                           postdec2	equ	0xFDD
 17103                           fsr2h	equ	0xFDA
 17104                           fsr2l	equ	0xFD9
 17105                           status	equ	0xFD8
 17106                           
 17107 ;; *************** function i2___ftadd *****************
 17108 ;; Defined at:
 17109 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
 17110 ;; Parameters:    Size  Location     Type
 17111 ;;  f1              3   20[COMRAM] float 
 17112 ;;  f2              3   23[COMRAM] float 
 17113 ;; Auto vars:     Size  Location     Type
 17114 ;;  __ftadd         1   31[COMRAM] unsigned char 
 17115 ;;  __ftadd         1   30[COMRAM] unsigned char 
 17116 ;;  __ftadd         1   29[COMRAM] unsigned char 
 17117 ;; Return value:  Size  Location     Type
 17118 ;;                  3   20[COMRAM] float 
 17119 ;; Registers used:
 17120 ;;		wreg, status,2, status,0, cstack
 17121 ;; Tracked objects:
 17122 ;;		On entry : 0/0
 17123 ;;		On exit  : 0/0
 17124 ;;		Unchanged: 0/0
 17125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17126 ;;      Params:         6       0       0       0       0       0       0
 17127 ;;      Locals:         3       0       0       0       0       0       0
 17128 ;;      Temps:          3       0       0       0       0       0       0
 17129 ;;      Totals:        12       0       0       0       0       0       0
 17130 ;;Total ram usage:       12 bytes
 17131 ;; Hardware stack levels used:    1
 17132 ;; Hardware stack levels required when called:    1
 17133 ;; This function calls:
 17134 ;;		i2___ftpack
 17135 ;; This function is called by:
 17136 ;;		_INT0_ISR
 17137 ;;		i2__doprnt
 17138 ;;		i2___ftsub
 17139 ;; This function uses a non-reentrant model
 17140 ;;
 17141                           
 17142                           	psect	text64
 17143  003480                     __ptext64:
 17144                           	opt stack 0
 17145  003480                     i2___ftadd:
 17146                           	opt stack 19
 17147                           
 17148                           ;incstack = 0
 17149  003480  C017  F01B         	movff	i2___ftadd@f1+2,??i2___ftadd
 17150  003484  6A1C               	clrf	(??i2___ftadd+1)& (0+255),c
 17151  003486  6A1D               	clrf	(??i2___ftadd+2)& (0+255),c
 17152  003488  3416               	rlcf	i2___ftadd@f1+1,w,c
 17153  00348A  361B               	rlcf	??i2___ftadd& (0+255),f,c
 17154  00348C  E301               	bnc	u449_41
 17155  00348E  801C               	bsf	(??i2___ftadd+1)& (0+255),0,c
 17156  003490                     u449_41:
 17157  003490  501B               	movf	??i2___ftadd,w,c
 17158  003492  6E20               	movwf	i2___ftadd@exp1,c
 17159  003494  C01A  F01B         	movff	i2___ftadd@f2+2,??i2___ftadd
 17160  003498  6A1C               	clrf	(??i2___ftadd+1)& (0+255),c
 17161  00349A  6A1D               	clrf	(??i2___ftadd+2)& (0+255),c
 17162  00349C  3419               	rlcf	i2___ftadd@f2+1,w,c
 17163  00349E  361B               	rlcf	??i2___ftadd& (0+255),f,c
 17164  0034A0  E301               	bnc	u450_41
 17165  0034A2  801C               	bsf	(??i2___ftadd+1)& (0+255),0,c
 17166  0034A4                     u450_41:
 17167  0034A4  501B               	movf	??i2___ftadd,w,c
 17168  0034A6  6E1F               	movwf	i2___ftadd@exp2,c
 17169  0034A8  5020               	movf	i2___ftadd@exp1,w,c
 17170  0034AA  B4D8               	btfsc	status,2,c
 17171  0034AC  D00B               	goto	i2l790
 17172  0034AE  501F               	movf	i2___ftadd@exp2,w,c
 17173  0034B0  5C20               	subwf	i2___ftadd@exp1,w,c
 17174  0034B2  B0D8               	btfsc	status,0,c
 17175  0034B4  D00E               	goto	i2l3788
 17176  0034B6  5020               	movf	i2___ftadd@exp1,w,c
 17177  0034B8  0800               	sublw	0
 17178  0034BA  241F               	addwf	i2___ftadd@exp2,w,c
 17179  0034BC  6E1B               	movwf	??i2___ftadd& (0+255),c
 17180  0034BE  0E18               	movlw	24
 17181  0034C0  641B               	cpfsgt	??i2___ftadd,c
 17182  0034C2  D007               	goto	i2l3788
 17183  0034C4                     i2l790:
 17184  0034C4  C018  F015         	movff	i2___ftadd@f2,?i2___ftadd
 17185  0034C8  C019  F016         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 17186  0034CC  C01A  F017         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 17187  0034D0  0012               	return	
 17188  0034D2                     i2l3788:
 17189  0034D2  501F               	movf	i2___ftadd@exp2,w,c
 17190  0034D4  B4D8               	btfsc	status,2,c
 17191  0034D6  D00B               	goto	i2l794
 17192  0034D8  5020               	movf	i2___ftadd@exp1,w,c
 17193  0034DA  5C1F               	subwf	i2___ftadd@exp2,w,c
 17194  0034DC  B0D8               	btfsc	status,0,c
 17195  0034DE  D00E               	goto	i2l3794
 17196  0034E0  501F               	movf	i2___ftadd@exp2,w,c
 17197  0034E2  0800               	sublw	0
 17198  0034E4  2420               	addwf	i2___ftadd@exp1,w,c
 17199  0034E6  6E1B               	movwf	??i2___ftadd& (0+255),c
 17200  0034E8  0E18               	movlw	24
 17201  0034EA  641B               	cpfsgt	??i2___ftadd,c
 17202  0034EC  D007               	goto	i2l3794
 17203  0034EE                     i2l794:
 17204  0034EE  C015  F015         	movff	i2___ftadd@f1,?i2___ftadd
 17205  0034F2  C016  F016         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 17206  0034F6  C017  F017         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 17207  0034FA  0012               	return	
 17208  0034FC                     i2l3794:
 17209  0034FC  0E06               	movlw	6
 17210  0034FE  6E1E               	movwf	i2___ftadd@sign,c
 17211  003500  BE17               	btfsc	i2___ftadd@f1+2,7,c
 17212  003502  8E1E               	bsf	i2___ftadd@sign,7,c
 17213  003504  BE1A               	btfsc	i2___ftadd@f2+2,7,c
 17214  003506  8C1E               	bsf	i2___ftadd@sign,6,c
 17215  003508  8E16               	bsf	i2___ftadd@f1+1,7,c
 17216  00350A  0EFF               	movlw	255
 17217  00350C  1615               	andwf	i2___ftadd@f1,f,c
 17218  00350E  0EFF               	movlw	255
 17219  003510  1616               	andwf	i2___ftadd@f1+1,f,c
 17220  003512  0E00               	movlw	0
 17221  003514  1617               	andwf	i2___ftadd@f1+2,f,c
 17222  003516  8E19               	bsf	i2___ftadd@f2+1,7,c
 17223  003518  0EFF               	movlw	255
 17224  00351A  1618               	andwf	i2___ftadd@f2,f,c
 17225  00351C  0EFF               	movlw	255
 17226  00351E  1619               	andwf	i2___ftadd@f2+1,f,c
 17227  003520  0E00               	movlw	0
 17228  003522  161A               	andwf	i2___ftadd@f2+2,f,c
 17229  003524  501F               	movf	i2___ftadd@exp2,w,c
 17230  003526  5C20               	subwf	i2___ftadd@exp1,w,c
 17231  003528  B0D8               	btfsc	status,0,c
 17232  00352A  D01B               	goto	i2l3820
 17233  00352C                     i2l3810:
 17234  00352C  90D8               	bcf	status,0,c
 17235  00352E  3618               	rlcf	i2___ftadd@f2,f,c
 17236  003530  3619               	rlcf	i2___ftadd@f2+1,f,c
 17237  003532  361A               	rlcf	i2___ftadd@f2+2,f,c
 17238  003534  061F               	decf	i2___ftadd@exp2,f,c
 17239  003536  5020               	movf	i2___ftadd@exp1,w,c
 17240  003538  181F               	xorwf	i2___ftadd@exp2,w,c
 17241  00353A  B4D8               	btfsc	status,2,c
 17242  00353C  D00D               	goto	i2l3818
 17243  00353E  061E               	decf	i2___ftadd@sign,f,c
 17244  003540  C01E  F01B         	movff	i2___ftadd@sign,??i2___ftadd
 17245  003544  0E07               	movlw	7
 17246  003546  161B               	andwf	??i2___ftadd,f,c
 17247  003548  B4D8               	btfsc	status,2,c
 17248  00354A  D006               	goto	i2l3818
 17249  00354C  D7EF               	goto	i2l3810
 17250  00354E                     i2l3816:
 17251  00354E  90D8               	bcf	status,0,c
 17252  003550  3217               	rrcf	i2___ftadd@f1+2,f,c
 17253  003552  3216               	rrcf	i2___ftadd@f1+1,f,c
 17254  003554  3215               	rrcf	i2___ftadd@f1,f,c
 17255  003556  2A20               	incf	i2___ftadd@exp1,f,c
 17256  003558                     i2l3818:
 17257  003558  501F               	movf	i2___ftadd@exp2,w,c
 17258  00355A  1820               	xorwf	i2___ftadd@exp1,w,c
 17259  00355C  B4D8               	btfsc	status,2,c
 17260  00355E  D01F               	goto	i2l805
 17261  003560  D7F6               	goto	i2l3816
 17262  003562                     i2l3820:
 17263  003562  5020               	movf	i2___ftadd@exp1,w,c
 17264  003564  5C1F               	subwf	i2___ftadd@exp2,w,c
 17265  003566  B0D8               	btfsc	status,0,c
 17266  003568  D01A               	goto	i2l805
 17267  00356A                     i2l3822:
 17268  00356A  90D8               	bcf	status,0,c
 17269  00356C  3615               	rlcf	i2___ftadd@f1,f,c
 17270  00356E  3616               	rlcf	i2___ftadd@f1+1,f,c
 17271  003570  3617               	rlcf	i2___ftadd@f1+2,f,c
 17272  003572  0620               	decf	i2___ftadd@exp1,f,c
 17273  003574  5020               	movf	i2___ftadd@exp1,w,c
 17274  003576  181F               	xorwf	i2___ftadd@exp2,w,c
 17275  003578  B4D8               	btfsc	status,2,c
 17276  00357A  D00D               	goto	i2l3830
 17277  00357C  061E               	decf	i2___ftadd@sign,f,c
 17278  00357E  C01E  F01B         	movff	i2___ftadd@sign,??i2___ftadd
 17279  003582  0E07               	movlw	7
 17280  003584  161B               	andwf	??i2___ftadd,f,c
 17281  003586  B4D8               	btfsc	status,2,c
 17282  003588  D006               	goto	i2l3830
 17283  00358A  D7EF               	goto	i2l3822
 17284  00358C                     i2l3828:
 17285  00358C  90D8               	bcf	status,0,c
 17286  00358E  321A               	rrcf	i2___ftadd@f2+2,f,c
 17287  003590  3219               	rrcf	i2___ftadd@f2+1,f,c
 17288  003592  3218               	rrcf	i2___ftadd@f2,f,c
 17289  003594  2A1F               	incf	i2___ftadd@exp2,f,c
 17290  003596                     i2l3830:
 17291  003596  501F               	movf	i2___ftadd@exp2,w,c
 17292  003598  1820               	xorwf	i2___ftadd@exp1,w,c
 17293  00359A  A4D8               	btfss	status,2,c
 17294  00359C  D7F7               	goto	i2l3828
 17295  00359E                     i2l805:
 17296  00359E  AE1E               	btfss	i2___ftadd@sign,7,c
 17297  0035A0  D00C               	goto	i2l814
 17298  0035A2  0EFF               	movlw	255
 17299  0035A4  1A15               	xorwf	i2___ftadd@f1,f,c
 17300  0035A6  0EFF               	movlw	255
 17301  0035A8  1A16               	xorwf	i2___ftadd@f1+1,f,c
 17302  0035AA  0EFF               	movlw	255
 17303  0035AC  1A17               	xorwf	i2___ftadd@f1+2,f,c
 17304  0035AE  0E01               	movlw	1
 17305  0035B0  2615               	addwf	i2___ftadd@f1,f,c
 17306  0035B2  0E00               	movlw	0
 17307  0035B4  2216               	addwfc	i2___ftadd@f1+1,f,c
 17308  0035B6  0E00               	movlw	0
 17309  0035B8  2217               	addwfc	i2___ftadd@f1+2,f,c
 17310  0035BA                     i2l814:
 17311  0035BA  AC1E               	btfss	i2___ftadd@sign,6,c
 17312  0035BC  D00C               	goto	i2l3836
 17313  0035BE  0EFF               	movlw	255
 17314  0035C0  1A18               	xorwf	i2___ftadd@f2,f,c
 17315  0035C2  0EFF               	movlw	255
 17316  0035C4  1A19               	xorwf	i2___ftadd@f2+1,f,c
 17317  0035C6  0EFF               	movlw	255
 17318  0035C8  1A1A               	xorwf	i2___ftadd@f2+2,f,c
 17319  0035CA  0E01               	movlw	1
 17320  0035CC  2618               	addwf	i2___ftadd@f2,f,c
 17321  0035CE  0E00               	movlw	0
 17322  0035D0  2219               	addwfc	i2___ftadd@f2+1,f,c
 17323  0035D2  0E00               	movlw	0
 17324  0035D4  221A               	addwfc	i2___ftadd@f2+2,f,c
 17325  0035D6                     i2l3836:
 17326  0035D6  0E00               	movlw	0
 17327  0035D8  6E1E               	movwf	i2___ftadd@sign,c
 17328  0035DA  5015               	movf	i2___ftadd@f1,w,c
 17329  0035DC  2618               	addwf	i2___ftadd@f2,f,c
 17330  0035DE  5016               	movf	i2___ftadd@f1+1,w,c
 17331  0035E0  2219               	addwfc	i2___ftadd@f2+1,f,c
 17332  0035E2  5017               	movf	i2___ftadd@f1+2,w,c
 17333  0035E4  221A               	addwfc	i2___ftadd@f2+2,f,c
 17334  0035E6  AE1A               	btfss	i2___ftadd@f2+2,7,c
 17335  0035E8  D00E               	goto	i2l3846
 17336  0035EA  0EFF               	movlw	255
 17337  0035EC  1A18               	xorwf	i2___ftadd@f2,f,c
 17338  0035EE  0EFF               	movlw	255
 17339  0035F0  1A19               	xorwf	i2___ftadd@f2+1,f,c
 17340  0035F2  0EFF               	movlw	255
 17341  0035F4  1A1A               	xorwf	i2___ftadd@f2+2,f,c
 17342  0035F6  0E01               	movlw	1
 17343  0035F8  2618               	addwf	i2___ftadd@f2,f,c
 17344  0035FA  0E00               	movlw	0
 17345  0035FC  2219               	addwfc	i2___ftadd@f2+1,f,c
 17346  0035FE  0E00               	movlw	0
 17347  003600  221A               	addwfc	i2___ftadd@f2+2,f,c
 17348  003602  0E01               	movlw	1
 17349  003604  6E1E               	movwf	i2___ftadd@sign,c
 17350  003606                     i2l3846:
 17351  003606  C018  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 17352  00360A  C019  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 17353  00360E  C01A  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 17354  003612  C020  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 17355  003616  C01E  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 17356  00361A  ECF1  F024         	call	i2___ftpack	;wreg free
 17357  00361E  C001  F015         	movff	?i2___ftpack,?i2___ftadd
 17358  003622  C002  F016         	movff	?i2___ftpack+1,?i2___ftadd+1
 17359  003626  C003  F017         	movff	?i2___ftpack+2,?i2___ftadd+2
 17360  00362A  0012               	return	
 17361  00362C                     __end_ofi2___ftadd:
 17362                           	opt stack 0
 17363                           tosu	equ	0xFFF
 17364                           tosh	equ	0xFFE
 17365                           tosl	equ	0xFFD
 17366                           pclatu	equ	0xFFB
 17367                           pclath	equ	0xFFA
 17368                           tblptru	equ	0xFF8
 17369                           tblptrh	equ	0xFF7
 17370                           tblptrl	equ	0xFF6
 17371                           tablat	equ	0xFF5
 17372                           prodh	equ	0xFF4
 17373                           prodl	equ	0xFF3
 17374                           intcon	equ	0xFF2
 17375                           intcon2	equ	0xFF1
 17376                           intcon3	equ	0xFF0
 17377                           postinc0	equ	0xFEE
 17378                           fsr0h	equ	0xFEA
 17379                           fsr0l	equ	0xFE9
 17380                           wreg	equ	0xFE8
 17381                           postdec1	equ	0xFE5
 17382                           fsr1h	equ	0xFE2
 17383                           fsr1l	equ	0xFE1
 17384                           indf2	equ	0xFDF
 17385                           postinc2	equ	0xFDE
 17386                           postdec2	equ	0xFDD
 17387                           fsr2h	equ	0xFDA
 17388                           fsr2l	equ	0xFD9
 17389                           status	equ	0xFD8
 17390                           
 17391 ;; *************** function i2___ftneg *****************
 17392 ;; Defined at:
 17393 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
 17394 ;; Parameters:    Size  Location     Type
 17395 ;;  f1              3    0[COMRAM] float 
 17396 ;; Auto vars:     Size  Location     Type
 17397 ;;		None
 17398 ;; Return value:  Size  Location     Type
 17399 ;;                  3    0[COMRAM] float 
 17400 ;; Registers used:
 17401 ;;		wreg, status,2, status,0
 17402 ;; Tracked objects:
 17403 ;;		On entry : 0/0
 17404 ;;		On exit  : 0/0
 17405 ;;		Unchanged: 0/0
 17406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17407 ;;      Params:         3       0       0       0       0       0       0
 17408 ;;      Locals:         0       0       0       0       0       0       0
 17409 ;;      Temps:          0       0       0       0       0       0       0
 17410 ;;      Totals:         3       0       0       0       0       0       0
 17411 ;;Total ram usage:        3 bytes
 17412 ;; Hardware stack levels used:    1
 17413 ;; This function calls:
 17414 ;;		Nothing
 17415 ;; This function is called by:
 17416 ;;		i2__doprnt
 17417 ;; This function uses a non-reentrant model
 17418 ;;
 17419                           
 17420                           	psect	text65
 17421  00540E                     __ptext65:
 17422                           	opt stack 0
 17423  00540E                     i2___ftneg:
 17424                           	opt stack 21
 17425                           
 17426                           ;incstack = 0
 17427  00540E  5001               	movf	i2___ftneg@f1,w,c
 17428  005410  1002               	iorwf	i2___ftneg@f1+1,w,c
 17429  005412  1003               	iorwf	i2___ftneg@f1+2,w,c
 17430  005414  B4D8               	btfsc	status,2,c
 17431  005416  D006               	goto	i2l864
 17432  005418  0E00               	movlw	0
 17433  00541A  1A01               	xorwf	i2___ftneg@f1,f,c
 17434  00541C  0E00               	movlw	0
 17435  00541E  1A02               	xorwf	i2___ftneg@f1+1,f,c
 17436  005420  0E80               	movlw	128
 17437  005422  1A03               	xorwf	i2___ftneg@f1+2,f,c
 17438  005424                     i2l864:
 17439  005424  C001  F001         	movff	i2___ftneg@f1,?i2___ftneg
 17440  005428  C002  F002         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 17441  00542C  C003  F003         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 17442  005430  0012               	return		;funcret
 17443  005432                     __end_ofi2___ftneg:
 17444                           	opt stack 0
 17445                           tosu	equ	0xFFF
 17446                           tosh	equ	0xFFE
 17447                           tosl	equ	0xFFD
 17448                           pclatu	equ	0xFFB
 17449                           pclath	equ	0xFFA
 17450                           tblptru	equ	0xFF8
 17451                           tblptrh	equ	0xFF7
 17452                           tblptrl	equ	0xFF6
 17453                           tablat	equ	0xFF5
 17454                           prodh	equ	0xFF4
 17455                           prodl	equ	0xFF3
 17456                           intcon	equ	0xFF2
 17457                           intcon2	equ	0xFF1
 17458                           intcon3	equ	0xFF0
 17459                           postinc0	equ	0xFEE
 17460                           fsr0h	equ	0xFEA
 17461                           fsr0l	equ	0xFE9
 17462                           wreg	equ	0xFE8
 17463                           postdec1	equ	0xFE5
 17464                           fsr1h	equ	0xFE2
 17465                           fsr1l	equ	0xFE1
 17466                           indf2	equ	0xFDF
 17467                           postinc2	equ	0xFDE
 17468                           postdec2	equ	0xFDD
 17469                           fsr2h	equ	0xFDA
 17470                           fsr2l	equ	0xFD9
 17471                           status	equ	0xFD8
 17472                           
 17473 ;; *************** function i2___ftge *****************
 17474 ;; Defined at:
 17475 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
 17476 ;; Parameters:    Size  Location     Type
 17477 ;;  ff1             3    0[COMRAM] float 
 17478 ;;  ff2             3    3[COMRAM] float 
 17479 ;; Auto vars:     Size  Location     Type
 17480 ;;		None
 17481 ;; Return value:  Size  Location     Type
 17482 ;;		None               void
 17483 ;; Registers used:
 17484 ;;		wreg, status,2, status,0
 17485 ;; Tracked objects:
 17486 ;;		On entry : 0/0
 17487 ;;		On exit  : 0/0
 17488 ;;		Unchanged: 0/0
 17489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17490 ;;      Params:         6       0       0       0       0       0       0
 17491 ;;      Locals:         0       0       0       0       0       0       0
 17492 ;;      Temps:          3       0       0       0       0       0       0
 17493 ;;      Totals:         9       0       0       0       0       0       0
 17494 ;;Total ram usage:        9 bytes
 17495 ;; Hardware stack levels used:    1
 17496 ;; This function calls:
 17497 ;;		Nothing
 17498 ;; This function is called by:
 17499 ;;		i2__doprnt
 17500 ;; This function uses a non-reentrant model
 17501 ;;
 17502                           
 17503                           	psect	text66
 17504  004BCC                     __ptext66:
 17505                           	opt stack 0
 17506  004BCC                     i2___ftge:
 17507                           	opt stack 21
 17508                           
 17509                           ;incstack = 0
 17510  004BCC  AE03               	btfss	i2___ftge@ff1+2,7,c
 17511  004BCE  D016               	goto	i2l4288
 17512  004BD0  C001  F007         	movff	i2___ftge@ff1,??i2___ftge
 17513  004BD4  C002  F008         	movff	i2___ftge@ff1+1,??i2___ftge+1
 17514  004BD8  C003  F009         	movff	i2___ftge@ff1+2,??i2___ftge+2
 17515  004BDC  1E07               	comf	??i2___ftge,f,c
 17516  004BDE  1E08               	comf	??i2___ftge+1,f,c
 17517  004BE0  1E09               	comf	??i2___ftge+2,f,c
 17518  004BE2  2A07               	incf	??i2___ftge,f,c
 17519  004BE4  0E00               	movlw	0
 17520  004BE6  2208               	addwfc	??i2___ftge+1,f,c
 17521  004BE8  2209               	addwfc	??i2___ftge+2,f,c
 17522  004BEA  0E00               	movlw	0
 17523  004BEC  2407               	addwf	??i2___ftge,w,c
 17524  004BEE  6E01               	movwf	i2___ftge@ff1,c
 17525  004BF0  0E00               	movlw	0
 17526  004BF2  2008               	addwfc	??i2___ftge+1,w,c
 17527  004BF4  6E02               	movwf	i2___ftge@ff1+1,c
 17528  004BF6  0E80               	movlw	128
 17529  004BF8  2009               	addwfc	??i2___ftge+2,w,c
 17530  004BFA  6E03               	movwf	i2___ftge@ff1+2,c
 17531  004BFC                     i2l4288:
 17532  004BFC  AE06               	btfss	i2___ftge@ff2+2,7,c
 17533  004BFE  D016               	goto	i2l4292
 17534  004C00  C004  F007         	movff	i2___ftge@ff2,??i2___ftge
 17535  004C04  C005  F008         	movff	i2___ftge@ff2+1,??i2___ftge+1
 17536  004C08  C006  F009         	movff	i2___ftge@ff2+2,??i2___ftge+2
 17537  004C0C  1E07               	comf	??i2___ftge,f,c
 17538  004C0E  1E08               	comf	??i2___ftge+1,f,c
 17539  004C10  1E09               	comf	??i2___ftge+2,f,c
 17540  004C12  2A07               	incf	??i2___ftge,f,c
 17541  004C14  0E00               	movlw	0
 17542  004C16  2208               	addwfc	??i2___ftge+1,f,c
 17543  004C18  2209               	addwfc	??i2___ftge+2,f,c
 17544  004C1A  0E00               	movlw	0
 17545  004C1C  2407               	addwf	??i2___ftge,w,c
 17546  004C1E  6E04               	movwf	i2___ftge@ff2,c
 17547  004C20  0E00               	movlw	0
 17548  004C22  2008               	addwfc	??i2___ftge+1,w,c
 17549  004C24  6E05               	movwf	i2___ftge@ff2+1,c
 17550  004C26  0E80               	movlw	128
 17551  004C28  2009               	addwfc	??i2___ftge+2,w,c
 17552  004C2A  6E06               	movwf	i2___ftge@ff2+2,c
 17553  004C2C                     i2l4292:
 17554  004C2C  0E00               	movlw	0
 17555  004C2E  1A01               	xorwf	i2___ftge@ff1,f,c
 17556  004C30  0E00               	movlw	0
 17557  004C32  1A02               	xorwf	i2___ftge@ff1+1,f,c
 17558  004C34  0E80               	movlw	128
 17559  004C36  1A03               	xorwf	i2___ftge@ff1+2,f,c
 17560  004C38  0E00               	movlw	0
 17561  004C3A  1A04               	xorwf	i2___ftge@ff2,f,c
 17562  004C3C  0E00               	movlw	0
 17563  004C3E  1A05               	xorwf	i2___ftge@ff2+1,f,c
 17564  004C40  0E80               	movlw	128
 17565  004C42  1A06               	xorwf	i2___ftge@ff2+2,f,c
 17566  004C44  5004               	movf	i2___ftge@ff2,w,c
 17567  004C46  5C01               	subwf	i2___ftge@ff1,w,c
 17568  004C48  5005               	movf	i2___ftge@ff2+1,w,c
 17569  004C4A  5802               	subwfb	i2___ftge@ff1+1,w,c
 17570  004C4C  5006               	movf	i2___ftge@ff2+2,w,c
 17571  004C4E  5803               	subwfb	i2___ftge@ff1+2,w,c
 17572  004C50  B0D8               	btfsc	status,0,c
 17573  004C52  D002               	goto	i2l4298
 17574  004C54  90D8               	bcf	status,0,c
 17575  004C56  0012               	return	
 17576  004C58                     i2l4298:
 17577  004C58  80D8               	bsf	status,0,c
 17578  004C5A  0012               	return	
 17579  004C5C                     __end_ofi2___ftge:
 17580                           	opt stack 0
 17581                           tosu	equ	0xFFF
 17582                           tosh	equ	0xFFE
 17583                           tosl	equ	0xFFD
 17584                           pclatu	equ	0xFFB
 17585                           pclath	equ	0xFFA
 17586                           tblptru	equ	0xFF8
 17587                           tblptrh	equ	0xFF7
 17588                           tblptrl	equ	0xFF6
 17589                           tablat	equ	0xFF5
 17590                           prodh	equ	0xFF4
 17591                           prodl	equ	0xFF3
 17592                           intcon	equ	0xFF2
 17593                           intcon2	equ	0xFF1
 17594                           intcon3	equ	0xFF0
 17595                           postinc0	equ	0xFEE
 17596                           fsr0h	equ	0xFEA
 17597                           fsr0l	equ	0xFE9
 17598                           wreg	equ	0xFE8
 17599                           postdec1	equ	0xFE5
 17600                           fsr1h	equ	0xFE2
 17601                           fsr1l	equ	0xFE1
 17602                           indf2	equ	0xFDF
 17603                           postinc2	equ	0xFDE
 17604                           postdec2	equ	0xFDD
 17605                           fsr2h	equ	0xFDA
 17606                           fsr2l	equ	0xFD9
 17607                           status	equ	0xFD8
 17608                           
 17609 ;; *************** function ___lwtoft *****************
 17610 ;; Defined at:
 17611 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
 17612 ;; Parameters:    Size  Location     Type
 17613 ;;  c               2    8[COMRAM] unsigned int 
 17614 ;; Auto vars:     Size  Location     Type
 17615 ;;		None
 17616 ;; Return value:  Size  Location     Type
 17617 ;;                  3    8[COMRAM] float 
 17618 ;; Registers used:
 17619 ;;		wreg, status,2, status,0, cstack
 17620 ;; Tracked objects:
 17621 ;;		On entry : 0/0
 17622 ;;		On exit  : 0/0
 17623 ;;		Unchanged: 0/0
 17624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17625 ;;      Params:         3       0       0       0       0       0       0
 17626 ;;      Locals:         0       0       0       0       0       0       0
 17627 ;;      Temps:          0       0       0       0       0       0       0
 17628 ;;      Totals:         3       0       0       0       0       0       0
 17629 ;;Total ram usage:        3 bytes
 17630 ;; Hardware stack levels used:    1
 17631 ;; Hardware stack levels required when called:    1
 17632 ;; This function calls:
 17633 ;;		i2___ftpack
 17634 ;; This function is called by:
 17635 ;;		_INT0_ISR
 17636 ;; This function uses a non-reentrant model
 17637 ;;
 17638                           
 17639                           	psect	text67
 17640  005432                     __ptext67:
 17641                           	opt stack 0
 17642  005432                     ___lwtoft:
 17643                           	opt stack 22
 17644                           
 17645                           ;incstack = 0
 17646  005432  C009  F001         	movff	___lwtoft@c,i2___ftpack@arg
 17647  005436  C00A  F002         	movff	___lwtoft@c+1,i2___ftpack@arg+1
 17648  00543A  6A03               	clrf	i2___ftpack@arg+2,c
 17649  00543C  0E8E               	movlw	142
 17650  00543E  6E04               	movwf	i2___ftpack@exp,c
 17651  005440  0E00               	movlw	0
 17652  005442  6E05               	movwf	i2___ftpack@sign,c
 17653  005444  ECF1  F024         	call	i2___ftpack	;wreg free
 17654  005448  C001  F009         	movff	?i2___ftpack,?___lwtoft
 17655  00544C  C002  F00A         	movff	?i2___ftpack+1,?___lwtoft+1
 17656  005450  C003  F00B         	movff	?i2___ftpack+2,?___lwtoft+2
 17657  005454  0012               	return	
 17658  005456                     __end_of___lwtoft:
 17659                           	opt stack 0
 17660                           tosu	equ	0xFFF
 17661                           tosh	equ	0xFFE
 17662                           tosl	equ	0xFFD
 17663                           pclatu	equ	0xFFB
 17664                           pclath	equ	0xFFA
 17665                           tblptru	equ	0xFF8
 17666                           tblptrh	equ	0xFF7
 17667                           tblptrl	equ	0xFF6
 17668                           tablat	equ	0xFF5
 17669                           prodh	equ	0xFF4
 17670                           prodl	equ	0xFF3
 17671                           intcon	equ	0xFF2
 17672                           intcon2	equ	0xFF1
 17673                           intcon3	equ	0xFF0
 17674                           postinc0	equ	0xFEE
 17675                           fsr0h	equ	0xFEA
 17676                           fsr0l	equ	0xFE9
 17677                           wreg	equ	0xFE8
 17678                           postdec1	equ	0xFE5
 17679                           fsr1h	equ	0xFE2
 17680                           fsr1l	equ	0xFE1
 17681                           indf2	equ	0xFDF
 17682                           postinc2	equ	0xFDE
 17683                           postdec2	equ	0xFDD
 17684                           fsr2h	equ	0xFDA
 17685                           fsr2l	equ	0xFD9
 17686                           status	equ	0xFD8
 17687                           
 17688 ;; *************** function i2___ftpack *****************
 17689 ;; Defined at:
 17690 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
 17691 ;; Parameters:    Size  Location     Type
 17692 ;;  arg             3    0[COMRAM] unsigned um
 17693 ;;  exp             1    3[COMRAM] unsigned char 
 17694 ;;  sign            1    4[COMRAM] unsigned char 
 17695 ;; Auto vars:     Size  Location     Type
 17696 ;;		None
 17697 ;; Return value:  Size  Location     Type
 17698 ;;                  3    0[COMRAM] float 
 17699 ;; Registers used:
 17700 ;;		wreg, status,2, status,0
 17701 ;; Tracked objects:
 17702 ;;		On entry : 0/0
 17703 ;;		On exit  : 0/0
 17704 ;;		Unchanged: 0/0
 17705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17706 ;;      Params:         5       0       0       0       0       0       0
 17707 ;;      Locals:         0       0       0       0       0       0       0
 17708 ;;      Temps:          3       0       0       0       0       0       0
 17709 ;;      Totals:         8       0       0       0       0       0       0
 17710 ;;Total ram usage:        8 bytes
 17711 ;; Hardware stack levels used:    1
 17712 ;; This function calls:
 17713 ;;		Nothing
 17714 ;; This function is called by:
 17715 ;;		___lwtoft
 17716 ;;		i2___ftadd
 17717 ;;		i2___ftdiv
 17718 ;;		i2___ftmul
 17719 ;;		i2___lltoft
 17720 ;; This function uses a non-reentrant model
 17721 ;;
 17722                           
 17723                           	psect	text68
 17724  0049E2                     __ptext68:
 17725                           	opt stack 0
 17726  0049E2                     i2___ftpack:
 17727                           	opt stack 19
 17728                           
 17729                           ;incstack = 0
 17730  0049E2  5004               	movf	i2___ftpack@exp,w,c
 17731  0049E4  B4D8               	btfsc	status,2,c
 17732  0049E6  D005               	goto	i2l3622
 17733  0049E8  5001               	movf	i2___ftpack@arg,w,c
 17734  0049EA  1002               	iorwf	i2___ftpack@arg+1,w,c
 17735  0049EC  1003               	iorwf	i2___ftpack@arg+2,w,c
 17736  0049EE  A4D8               	btfss	status,2,c
 17737  0049F0  D00C               	goto	i2l3628
 17738  0049F2                     i2l3622:
 17739  0049F2  0E00               	movlw	0
 17740  0049F4  6E01               	movwf	?i2___ftpack,c
 17741  0049F6  0E00               	movlw	0
 17742  0049F8  6E02               	movwf	?i2___ftpack+1,c
 17743  0049FA  0E00               	movlw	0
 17744  0049FC  6E03               	movwf	?i2___ftpack+2,c
 17745  0049FE  0012               	return	
 17746  004A00                     i2l3626:
 17747  004A00  2A04               	incf	i2___ftpack@exp,f,c
 17748  004A02  90D8               	bcf	status,0,c
 17749  004A04  3203               	rrcf	i2___ftpack@arg+2,f,c
 17750  004A06  3202               	rrcf	i2___ftpack@arg+1,f,c
 17751  004A08  3201               	rrcf	i2___ftpack@arg,f,c
 17752  004A0A                     i2l3628:
 17753  004A0A  0E00               	movlw	0
 17754  004A0C  1401               	andwf	i2___ftpack@arg,w,c
 17755  004A0E  6E06               	movwf	??i2___ftpack& (0+255),c
 17756  004A10  0E00               	movlw	0
 17757  004A12  1402               	andwf	i2___ftpack@arg+1,w,c
 17758  004A14  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 17759  004A16  0EFE               	movlw	254
 17760  004A18  1403               	andwf	i2___ftpack@arg+2,w,c
 17761  004A1A  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 17762  004A1C  5006               	movf	??i2___ftpack,w,c
 17763  004A1E  1007               	iorwf	??i2___ftpack+1,w,c
 17764  004A20  1008               	iorwf	??i2___ftpack+2,w,c
 17765  004A22  B4D8               	btfsc	status,2,c
 17766  004A24  D00C               	goto	i2l3634
 17767  004A26  D7EC               	goto	i2l3626
 17768  004A28                     i2l3630:
 17769  004A28  2A04               	incf	i2___ftpack@exp,f,c
 17770  004A2A  0E01               	movlw	1
 17771  004A2C  2601               	addwf	i2___ftpack@arg,f,c
 17772  004A2E  0E00               	movlw	0
 17773  004A30  2202               	addwfc	i2___ftpack@arg+1,f,c
 17774  004A32  0E00               	movlw	0
 17775  004A34  2203               	addwfc	i2___ftpack@arg+2,f,c
 17776  004A36  90D8               	bcf	status,0,c
 17777  004A38  3203               	rrcf	i2___ftpack@arg+2,f,c
 17778  004A3A  3202               	rrcf	i2___ftpack@arg+1,f,c
 17779  004A3C  3201               	rrcf	i2___ftpack@arg,f,c
 17780  004A3E                     i2l3634:
 17781  004A3E  0E00               	movlw	0
 17782  004A40  1401               	andwf	i2___ftpack@arg,w,c
 17783  004A42  6E06               	movwf	??i2___ftpack& (0+255),c
 17784  004A44  0E00               	movlw	0
 17785  004A46  1402               	andwf	i2___ftpack@arg+1,w,c
 17786  004A48  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 17787  004A4A  0EFF               	movlw	255
 17788  004A4C  1403               	andwf	i2___ftpack@arg+2,w,c
 17789  004A4E  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 17790  004A50  5006               	movf	??i2___ftpack,w,c
 17791  004A52  1007               	iorwf	??i2___ftpack+1,w,c
 17792  004A54  1008               	iorwf	??i2___ftpack+2,w,c
 17793  004A56  B4D8               	btfsc	status,2,c
 17794  004A58  D006               	goto	i2l3638
 17795  004A5A  D7E6               	goto	i2l3630
 17796  004A5C                     i2l3636:
 17797  004A5C  0604               	decf	i2___ftpack@exp,f,c
 17798  004A5E  90D8               	bcf	status,0,c
 17799  004A60  3601               	rlcf	i2___ftpack@arg,f,c
 17800  004A62  3602               	rlcf	i2___ftpack@arg+1,f,c
 17801  004A64  3603               	rlcf	i2___ftpack@arg+2,f,c
 17802  004A66                     i2l3638:
 17803  004A66  BE02               	btfsc	i2___ftpack@arg+1,7,c
 17804  004A68  D003               	goto	i2l767
 17805  004A6A  0E02               	movlw	2
 17806  004A6C  6004               	cpfslt	i2___ftpack@exp,c
 17807  004A6E  D7F6               	goto	i2l3636
 17808  004A70                     i2l767:
 17809  004A70  A004               	btfss	i2___ftpack@exp,0,c
 17810  004A72  9E02               	bcf	i2___ftpack@arg+1,7,c
 17811  004A74  90D8               	bcf	status,0,c
 17812  004A76  3204               	rrcf	i2___ftpack@exp,f,c
 17813  004A78  5004               	movf	i2___ftpack@exp,w,c
 17814  004A7A  1203               	iorwf	i2___ftpack@arg+2,f,c
 17815  004A7C  5005               	movf	i2___ftpack@sign,w,c
 17816  004A7E  A4D8               	btfss	status,2,c
 17817  004A80  8E03               	bsf	i2___ftpack@arg+2,7,c
 17818  004A82  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 17819  004A86  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 17820  004A8A  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 17821  004A8E  0012               	return	
 17822  004A90                     __end_ofi2___ftpack:
 17823                           	opt stack 0
 17824                           tosu	equ	0xFFF
 17825                           tosh	equ	0xFFE
 17826                           tosl	equ	0xFFD
 17827                           pclatu	equ	0xFFB
 17828                           pclath	equ	0xFFA
 17829                           tblptru	equ	0xFF8
 17830                           tblptrh	equ	0xFF7
 17831                           tblptrl	equ	0xFF6
 17832                           tablat	equ	0xFF5
 17833                           prodh	equ	0xFF4
 17834                           prodl	equ	0xFF3
 17835                           intcon	equ	0xFF2
 17836                           intcon2	equ	0xFF1
 17837                           intcon3	equ	0xFF0
 17838                           postinc0	equ	0xFEE
 17839                           fsr0h	equ	0xFEA
 17840                           fsr0l	equ	0xFE9
 17841                           wreg	equ	0xFE8
 17842                           postdec1	equ	0xFE5
 17843                           fsr1h	equ	0xFE2
 17844                           fsr1l	equ	0xFE1
 17845                           indf2	equ	0xFDF
 17846                           postinc2	equ	0xFDE
 17847                           postdec2	equ	0xFDD
 17848                           fsr2h	equ	0xFDA
 17849                           fsr2l	equ	0xFD9
 17850                           status	equ	0xFD8
 17851                           
 17852 ;; *************** function _TMR0_StopTimer *****************
 17853 ;; Defined at:
 17854 ;;		line 57 in file "mcc_generated_files/tmr0.c"
 17855 ;; Parameters:    Size  Location     Type
 17856 ;;		None
 17857 ;; Auto vars:     Size  Location     Type
 17858 ;;		None
 17859 ;; Return value:  Size  Location     Type
 17860 ;;                  1    wreg      void 
 17861 ;; Registers used:
 17862 ;;		None
 17863 ;; Tracked objects:
 17864 ;;		On entry : 0/0
 17865 ;;		On exit  : 0/0
 17866 ;;		Unchanged: 0/0
 17867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17868 ;;      Params:         0       0       0       0       0       0       0
 17869 ;;      Locals:         0       0       0       0       0       0       0
 17870 ;;      Temps:          0       0       0       0       0       0       0
 17871 ;;      Totals:         0       0       0       0       0       0       0
 17872 ;;Total ram usage:        0 bytes
 17873 ;; Hardware stack levels used:    1
 17874 ;; This function calls:
 17875 ;;		Nothing
 17876 ;; This function is called by:
 17877 ;;		_INT0_ISR
 17878 ;; This function uses a non-reentrant model
 17879 ;;
 17880                           
 17881                           	psect	text69
 17882  00552A                     __ptext69:
 17883                           	opt stack 0
 17884  00552A                     _TMR0_StopTimer:
 17885                           	opt stack 23
 17886                           
 17887                           ;tmr0.c: 60: T0CONbits.TMR0ON = 0;
 17888                           
 17889                           ;incstack = 0
 17890  00552A  9ED5               	bcf	4053,7,c	;volatile
 17891  00552C  0012               	return		;funcret
 17892  00552E                     __end_of_TMR0_StopTimer:
 17893                           	opt stack 0
 17894                           tosu	equ	0xFFF
 17895                           tosh	equ	0xFFE
 17896                           tosl	equ	0xFFD
 17897                           pclatu	equ	0xFFB
 17898                           pclath	equ	0xFFA
 17899                           tblptru	equ	0xFF8
 17900                           tblptrh	equ	0xFF7
 17901                           tblptrl	equ	0xFF6
 17902                           tablat	equ	0xFF5
 17903                           prodh	equ	0xFF4
 17904                           prodl	equ	0xFF3
 17905                           intcon	equ	0xFF2
 17906                           intcon2	equ	0xFF1
 17907                           intcon3	equ	0xFF0
 17908                           postinc0	equ	0xFEE
 17909                           fsr0h	equ	0xFEA
 17910                           fsr0l	equ	0xFE9
 17911                           wreg	equ	0xFE8
 17912                           postdec1	equ	0xFE5
 17913                           fsr1h	equ	0xFE2
 17914                           fsr1l	equ	0xFE1
 17915                           indf2	equ	0xFDF
 17916                           postinc2	equ	0xFDE
 17917                           postdec2	equ	0xFDD
 17918                           fsr2h	equ	0xFDA
 17919                           fsr2l	equ	0xFD9
 17920                           status	equ	0xFD8
 17921                           
 17922 ;; *************** function _TMR0_Reload *****************
 17923 ;; Defined at:
 17924 ;;		line 85 in file "mcc_generated_files/tmr0.c"
 17925 ;; Parameters:    Size  Location     Type
 17926 ;;		None
 17927 ;; Auto vars:     Size  Location     Type
 17928 ;;		None
 17929 ;; Return value:  Size  Location     Type
 17930 ;;                  1    wreg      void 
 17931 ;; Registers used:
 17932 ;;		wreg, status,2
 17933 ;; Tracked objects:
 17934 ;;		On entry : 0/0
 17935 ;;		On exit  : 0/0
 17936 ;;		Unchanged: 0/0
 17937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17938 ;;      Params:         0       0       0       0       0       0       0
 17939 ;;      Locals:         0       0       0       0       0       0       0
 17940 ;;      Temps:          0       0       0       0       0       0       0
 17941 ;;      Totals:         0       0       0       0       0       0       0
 17942 ;;Total ram usage:        0 bytes
 17943 ;; Hardware stack levels used:    1
 17944 ;; This function calls:
 17945 ;;		Nothing
 17946 ;; This function is called by:
 17947 ;;		_INT0_ISR
 17948 ;; This function uses a non-reentrant model
 17949 ;;
 17950                           
 17951                           	psect	text70
 17952  005510                     __ptext70:
 17953                           	opt stack 0
 17954  005510                     _TMR0_Reload:
 17955                           	opt stack 23
 17956                           
 17957                           ;tmr0.c: 88: TMR0H = timer0ReloadVal >> 8;
 17958                           
 17959                           ;incstack = 0
 17960  005510  505D               	movf	_timer0ReloadVal+1,w,c	;volatile
 17961  005512  6ED7               	movwf	4055,c	;volatile
 17962                           
 17963                           ;tmr0.c: 89: TMR0L = (uint8_t) timer0ReloadVal;
 17964  005514  C05C  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 17965  005518  0012               	return		;funcret
 17966  00551A                     __end_of_TMR0_Reload:
 17967                           	opt stack 0
 17968                           tosu	equ	0xFFF
 17969                           tosh	equ	0xFFE
 17970                           tosl	equ	0xFFD
 17971                           pclatu	equ	0xFFB
 17972                           pclath	equ	0xFFA
 17973                           tblptru	equ	0xFF8
 17974                           tblptrh	equ	0xFF7
 17975                           tblptrl	equ	0xFF6
 17976                           tablat	equ	0xFF5
 17977                           prodh	equ	0xFF4
 17978                           prodl	equ	0xFF3
 17979                           intcon	equ	0xFF2
 17980                           intcon2	equ	0xFF1
 17981                           intcon3	equ	0xFF0
 17982                           postinc0	equ	0xFEE
 17983                           fsr0h	equ	0xFEA
 17984                           fsr0l	equ	0xFE9
 17985                           wreg	equ	0xFE8
 17986                           postdec1	equ	0xFE5
 17987                           fsr1h	equ	0xFE2
 17988                           fsr1l	equ	0xFE1
 17989                           indf2	equ	0xFDF
 17990                           postinc2	equ	0xFDE
 17991                           postdec2	equ	0xFDD
 17992                           fsr2h	equ	0xFDA
 17993                           fsr2l	equ	0xFD9
 17994                           status	equ	0xFD8
 17995                           
 17996 ;; *************** function _TMR0_ReadTimer *****************
 17997 ;; Defined at:
 17998 ;;		line 63 in file "mcc_generated_files/tmr0.c"
 17999 ;; Parameters:    Size  Location     Type
 18000 ;;		None
 18001 ;; Auto vars:     Size  Location     Type
 18002 ;;  readVal         2    6[COMRAM] unsigned int 
 18003 ;;  readValHigh     1    9[COMRAM] unsigned char 
 18004 ;;  readValLow      1    8[COMRAM] unsigned char 
 18005 ;; Return value:  Size  Location     Type
 18006 ;;                  2    0[COMRAM] unsigned int 
 18007 ;; Registers used:
 18008 ;;		wreg, status,2, status,0
 18009 ;; Tracked objects:
 18010 ;;		On entry : 0/0
 18011 ;;		On exit  : 0/0
 18012 ;;		Unchanged: 0/0
 18013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18014 ;;      Params:         2       0       0       0       0       0       0
 18015 ;;      Locals:         4       0       0       0       0       0       0
 18016 ;;      Temps:          4       0       0       0       0       0       0
 18017 ;;      Totals:        10       0       0       0       0       0       0
 18018 ;;Total ram usage:       10 bytes
 18019 ;; Hardware stack levels used:    1
 18020 ;; This function calls:
 18021 ;;		Nothing
 18022 ;; This function is called by:
 18023 ;;		_INT0_ISR
 18024 ;; This function uses a non-reentrant model
 18025 ;;
 18026                           
 18027                           	psect	text71
 18028  0051E4                     __ptext71:
 18029                           	opt stack 0
 18030  0051E4                     _TMR0_ReadTimer:
 18031                           	opt stack 23
 18032                           
 18033                           ;tmr0.c: 65: uint16_t readVal;
 18034                           ;tmr0.c: 66: uint8_t readValLow;
 18035                           ;tmr0.c: 67: uint8_t readValHigh;
 18036                           ;tmr0.c: 69: readValLow = TMR0L;
 18037                           
 18038                           ;incstack = 0
 18039  0051E4  CFD6 F009          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
 18040                           
 18041                           ;tmr0.c: 70: readValHigh = TMR0H;
 18042  0051E8  CFD7 F00A          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
 18043                           
 18044                           ;tmr0.c: 73: readVal = ((uint16_t)readValHigh << 8) + readValLow - (timer0ReloadVal);
 18045  0051EC  C05C  F003         	movff	_timer0ReloadVal,??_TMR0_ReadTimer	;volatile
 18046  0051F0  C05D  F004         	movff	_timer0ReloadVal+1,??_TMR0_ReadTimer+1	;volatile
 18047  0051F4  1E03               	comf	??_TMR0_ReadTimer,f,c
 18048  0051F6  1E04               	comf	??_TMR0_ReadTimer+1,f,c
 18049  0051F8  4A03               	infsnz	??_TMR0_ReadTimer,f,c
 18050  0051FA  2A04               	incf	??_TMR0_ReadTimer+1,f,c
 18051  0051FC  5009               	movf	TMR0_ReadTimer@readValLow,w,c
 18052  0051FE  C00A  F005         	movff	TMR0_ReadTimer@readValHigh,??_TMR0_ReadTimer+2
 18053  005202  6A06               	clrf	(??_TMR0_ReadTimer+3)& (0+255),c
 18054  005204  C005  F006         	movff	??_TMR0_ReadTimer+2,??_TMR0_ReadTimer+3
 18055  005208  6A05               	clrf	??_TMR0_ReadTimer+2,c
 18056  00520A  2605               	addwf	??_TMR0_ReadTimer+2,f,c
 18057  00520C  0E00               	movlw	0
 18058  00520E  2206               	addwfc	??_TMR0_ReadTimer+3,f,c
 18059  005210  5003               	movf	??_TMR0_ReadTimer,w,c
 18060  005212  2405               	addwf	??_TMR0_ReadTimer+2,w,c
 18061  005214  6E07               	movwf	TMR0_ReadTimer@readVal,c
 18062  005216  5004               	movf	??_TMR0_ReadTimer+1,w,c
 18063  005218  2006               	addwfc	??_TMR0_ReadTimer+3,w,c
 18064  00521A  6E08               	movwf	TMR0_ReadTimer@readVal+1,c
 18065                           
 18066                           ;tmr0.c: 75: return readVal;
 18067  00521C  C007  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
 18068  005220  C008  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
 18069  005224  0012               	return	
 18070  005226                     __end_of_TMR0_ReadTimer:
 18071                           	opt stack 0
 18072                           tosu	equ	0xFFF
 18073                           tosh	equ	0xFFE
 18074                           tosl	equ	0xFFD
 18075                           pclatu	equ	0xFFB
 18076                           pclath	equ	0xFFA
 18077                           tblptru	equ	0xFF8
 18078                           tblptrh	equ	0xFF7
 18079                           tblptrl	equ	0xFF6
 18080                           tablat	equ	0xFF5
 18081                           prodh	equ	0xFF4
 18082                           prodl	equ	0xFF3
 18083                           intcon	equ	0xFF2
 18084                           intcon2	equ	0xFF1
 18085                           intcon3	equ	0xFF0
 18086                           postinc0	equ	0xFEE
 18087                           fsr0h	equ	0xFEA
 18088                           fsr0l	equ	0xFE9
 18089                           wreg	equ	0xFE8
 18090                           postdec1	equ	0xFE5
 18091                           fsr1h	equ	0xFE2
 18092                           fsr1l	equ	0xFE1
 18093                           indf2	equ	0xFDF
 18094                           postinc2	equ	0xFDE
 18095                           postdec2	equ	0xFDD
 18096                           fsr2h	equ	0xFDA
 18097                           fsr2l	equ	0xFD9
 18098                           status	equ	0xFD8
 18099                           
 18100 ;; *************** function _SetRange *****************
 18101 ;; Defined at:
 18102 ;;		line 42 in file "mcc_generated_files/ext_int.c"
 18103 ;; Parameters:    Size  Location     Type
 18104 ;;  new_range       1    wreg     unsigned char 
 18105 ;; Auto vars:     Size  Location     Type
 18106 ;;  new_range       1   10[COMRAM] unsigned char 
 18107 ;; Return value:  Size  Location     Type
 18108 ;;                  1    wreg      void 
 18109 ;; Registers used:
 18110 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 18111 ;; Tracked objects:
 18112 ;;		On entry : 0/0
 18113 ;;		On exit  : 0/0
 18114 ;;		Unchanged: 0/0
 18115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18116 ;;      Params:         0       0       0       0       0       0       0
 18117 ;;      Locals:         1       0       0       0       0       0       0
 18118 ;;      Temps:         10       0       0       0       0       0       0
 18119 ;;      Totals:        11       0       0       0       0       0       0
 18120 ;;Total ram usage:       11 bytes
 18121 ;; Hardware stack levels used:    1
 18122 ;; This function calls:
 18123 ;;		Nothing
 18124 ;; This function is called by:
 18125 ;;		_INT1_ISR
 18126 ;;		_INT0_ISR
 18127 ;;		_TMR0_DefaultInterruptHandler
 18128 ;; This function uses a non-reentrant model
 18129 ;;
 18130                           
 18131                           	psect	text72
 18132  00362C                     __ptext72:
 18133                           	opt stack 0
 18134  00362C                     _SetRange:
 18135                           	opt stack 22
 18136                           
 18137                           ;incstack = 0
 18138                           ;SetRange@new_range stored from wreg
 18139  00362C  6E0B               	movwf	SetRange@new_range,c
 18140                           
 18141                           ;ext_int.c: 45: LATC |= (1 << R1_BIT[0]) | (1 << R1_BIT[1]) | (1 << R1_BIT[2]) | (1 << R
      +                          1_BIT[3]) | (1 << R1_BIT[4]);
 18142  00362E  0E80               	movlw	low (_R1_BIT+4)
 18143  003630  6EF6               	movwf	tblptrl,c
 18144  003632  0E7F               	movlw	high (_R1_BIT+4)
 18145  003634  6EF7               	movwf	tblptrh,c
 18146  003636                     	if	0	;tblptru may be non-zero
 18147  003636                     	endif
 18148  003636                     	if	0	;tblptru may be non-zero
 18149  003636                     	endif
 18150  003636  0008               	tblrd		*
 18151  003638  CFF5 F001          	movff	tablat,??_SetRange
 18152  00363C  0E01               	movlw	1
 18153  00363E  6E02               	movwf	(??_SetRange+1)& (0+255),c
 18154  003640  2A01               	incf	??_SetRange,f,c
 18155  003642  D002               	goto	i2u561_44
 18156  003644                     i2u561_45:
 18157  003644  90D8               	bcf	status,0,c
 18158  003646  3602               	rlcf	??_SetRange+1,f,c
 18159  003648                     i2u561_44:
 18160  003648  2E01               	decfsz	??_SetRange,f,c
 18161  00364A  D7FC               	goto	i2u561_45
 18162  00364C  0E7F               	movlw	low (_R1_BIT+3)
 18163  00364E  6EF6               	movwf	tblptrl,c
 18164  003650  0E7F               	movlw	high (_R1_BIT+3)
 18165  003652  6EF7               	movwf	tblptrh,c
 18166  003654                     	if	0	;tblptru may be non-zero
 18167  003654                     	endif
 18168  003654                     	if	0	;tblptru may be non-zero
 18169  003654                     	endif
 18170  003654  0008               	tblrd		*
 18171  003656  CFF5 F003          	movff	tablat,??_SetRange+2
 18172  00365A  0E01               	movlw	1
 18173  00365C  6E04               	movwf	(??_SetRange+3)& (0+255),c
 18174  00365E  2A03               	incf	??_SetRange+2,f,c
 18175  003660  D002               	goto	i2u562_44
 18176  003662                     i2u562_45:
 18177  003662  90D8               	bcf	status,0,c
 18178  003664  3604               	rlcf	??_SetRange+3,f,c
 18179  003666                     i2u562_44:
 18180  003666  2E03               	decfsz	??_SetRange+2,f,c
 18181  003668  D7FC               	goto	i2u562_45
 18182  00366A  0E7E               	movlw	low (_R1_BIT+2)
 18183  00366C  6EF6               	movwf	tblptrl,c
 18184  00366E  0E7F               	movlw	high (_R1_BIT+2)
 18185  003670  6EF7               	movwf	tblptrh,c
 18186  003672                     	if	0	;tblptru may be non-zero
 18187  003672                     	endif
 18188  003672                     	if	0	;tblptru may be non-zero
 18189  003672                     	endif
 18190  003672  0008               	tblrd		*
 18191  003674  CFF5 F005          	movff	tablat,??_SetRange+4
 18192  003678  0E01               	movlw	1
 18193  00367A  6E06               	movwf	(??_SetRange+5)& (0+255),c
 18194  00367C  2A05               	incf	??_SetRange+4,f,c
 18195  00367E  D002               	goto	i2u563_44
 18196  003680                     i2u563_45:
 18197  003680  90D8               	bcf	status,0,c
 18198  003682  3606               	rlcf	??_SetRange+5,f,c
 18199  003684                     i2u563_44:
 18200  003684  2E05               	decfsz	??_SetRange+4,f,c
 18201  003686  D7FC               	goto	i2u563_45
 18202  003688  0E7D               	movlw	low (_R1_BIT+1)
 18203  00368A  6EF6               	movwf	tblptrl,c
 18204  00368C  0E7F               	movlw	high (_R1_BIT+1)
 18205  00368E  6EF7               	movwf	tblptrh,c
 18206  003690                     	if	0	;tblptru may be non-zero
 18207  003690                     	endif
 18208  003690                     	if	0	;tblptru may be non-zero
 18209  003690                     	endif
 18210  003690  0008               	tblrd		*
 18211  003692  CFF5 F007          	movff	tablat,??_SetRange+6
 18212  003696  0E01               	movlw	1
 18213  003698  6E08               	movwf	(??_SetRange+7)& (0+255),c
 18214  00369A  2A07               	incf	??_SetRange+6,f,c
 18215  00369C  D002               	goto	i2u564_44
 18216  00369E                     i2u564_45:
 18217  00369E  90D8               	bcf	status,0,c
 18218  0036A0  3608               	rlcf	??_SetRange+7,f,c
 18219  0036A2                     i2u564_44:
 18220  0036A2  2E07               	decfsz	??_SetRange+6,f,c
 18221  0036A4  D7FC               	goto	i2u564_45
 18222  0036A6  0E7C               	movlw	low _R1_BIT
 18223  0036A8  6EF6               	movwf	tblptrl,c
 18224  0036AA                     	if	1	;There is more than 1 active tblptr byte
 18225  0036AA  0E7F               	movlw	high _R1_BIT
 18226  0036AC  6EF7               	movwf	tblptrh,c
 18227  0036AE                     	endif
 18228  0036AE                     	if	0	;There are less than 3 active tblptr bytes
 18229  0036AE                     	endif
 18230  0036AE  0008               	tblrd		*
 18231  0036B0  CFF5 F009          	movff	tablat,??_SetRange+8
 18232  0036B4  0E01               	movlw	1
 18233  0036B6  6E0A               	movwf	(??_SetRange+9)& (0+255),c
 18234  0036B8  2A09               	incf	??_SetRange+8,f,c
 18235  0036BA  D002               	goto	i2u565_44
 18236  0036BC                     i2u565_45:
 18237  0036BC  90D8               	bcf	status,0,c
 18238  0036BE  360A               	rlcf	??_SetRange+9,f,c
 18239  0036C0                     i2u565_44:
 18240  0036C0  2E09               	decfsz	??_SetRange+8,f,c
 18241  0036C2  D7FC               	goto	i2u565_45
 18242  0036C4  500A               	movf	??_SetRange+9,w,c
 18243  0036C6  1008               	iorwf	??_SetRange+7,w,c
 18244  0036C8  1006               	iorwf	??_SetRange+5,w,c
 18245  0036CA  1004               	iorwf	??_SetRange+3,w,c
 18246  0036CC  1002               	iorwf	??_SetRange+1,w,c
 18247  0036CE  128B               	iorwf	3979,f,c	;volatile
 18248                           
 18249                           ;ext_int.c: 46: LATB |= (1 << RSET_BIT[0]) | (1 << RSET_BIT[1]) | (1 << RSET_BIT[3]) | (
      +                          1 << RSET_BIT[4]);
 18250  0036D0  0E85               	movlw	low (_RSET_BIT+4)
 18251  0036D2  6EF6               	movwf	tblptrl,c
 18252  0036D4  0E7F               	movlw	high (_RSET_BIT+4)
 18253  0036D6  6EF7               	movwf	tblptrh,c
 18254  0036D8                     	if	0	;tblptru may be non-zero
 18255  0036D8                     	endif
 18256  0036D8                     	if	0	;tblptru may be non-zero
 18257  0036D8                     	endif
 18258  0036D8  0008               	tblrd		*
 18259  0036DA  CFF5 F001          	movff	tablat,??_SetRange
 18260  0036DE  0E01               	movlw	1
 18261  0036E0  6E02               	movwf	(??_SetRange+1)& (0+255),c
 18262  0036E2  2A01               	incf	??_SetRange,f,c
 18263  0036E4  D002               	goto	i2u566_44
 18264  0036E6                     i2u566_45:
 18265  0036E6  90D8               	bcf	status,0,c
 18266  0036E8  3602               	rlcf	??_SetRange+1,f,c
 18267  0036EA                     i2u566_44:
 18268  0036EA  2E01               	decfsz	??_SetRange,f,c
 18269  0036EC  D7FC               	goto	i2u566_45
 18270  0036EE  0E84               	movlw	low (_RSET_BIT+3)
 18271  0036F0  6EF6               	movwf	tblptrl,c
 18272  0036F2  0E7F               	movlw	high (_RSET_BIT+3)
 18273  0036F4  6EF7               	movwf	tblptrh,c
 18274  0036F6                     	if	0	;tblptru may be non-zero
 18275  0036F6                     	endif
 18276  0036F6                     	if	0	;tblptru may be non-zero
 18277  0036F6                     	endif
 18278  0036F6  0008               	tblrd		*
 18279  0036F8  CFF5 F003          	movff	tablat,??_SetRange+2
 18280  0036FC  0E01               	movlw	1
 18281  0036FE  6E04               	movwf	(??_SetRange+3)& (0+255),c
 18282  003700  2A03               	incf	??_SetRange+2,f,c
 18283  003702  D002               	goto	i2u567_44
 18284  003704                     i2u567_45:
 18285  003704  90D8               	bcf	status,0,c
 18286  003706  3604               	rlcf	??_SetRange+3,f,c
 18287  003708                     i2u567_44:
 18288  003708  2E03               	decfsz	??_SetRange+2,f,c
 18289  00370A  D7FC               	goto	i2u567_45
 18290  00370C  0E82               	movlw	low (_RSET_BIT+1)
 18291  00370E  6EF6               	movwf	tblptrl,c
 18292  003710  0E7F               	movlw	high (_RSET_BIT+1)
 18293  003712  6EF7               	movwf	tblptrh,c
 18294  003714                     	if	0	;tblptru may be non-zero
 18295  003714                     	endif
 18296  003714                     	if	0	;tblptru may be non-zero
 18297  003714                     	endif
 18298  003714  0008               	tblrd		*
 18299  003716  CFF5 F005          	movff	tablat,??_SetRange+4
 18300  00371A  0E01               	movlw	1
 18301  00371C  6E06               	movwf	(??_SetRange+5)& (0+255),c
 18302  00371E  2A05               	incf	??_SetRange+4,f,c
 18303  003720  D002               	goto	i2u568_44
 18304  003722                     i2u568_45:
 18305  003722  90D8               	bcf	status,0,c
 18306  003724  3606               	rlcf	??_SetRange+5,f,c
 18307  003726                     i2u568_44:
 18308  003726  2E05               	decfsz	??_SetRange+4,f,c
 18309  003728  D7FC               	goto	i2u568_45
 18310  00372A  0E81               	movlw	low _RSET_BIT
 18311  00372C  6EF6               	movwf	tblptrl,c
 18312  00372E                     	if	1	;There is more than 1 active tblptr byte
 18313  00372E  0E7F               	movlw	high _RSET_BIT
 18314  003730  6EF7               	movwf	tblptrh,c
 18315  003732                     	endif
 18316  003732                     	if	0	;There are less than 3 active tblptr bytes
 18317  003732                     	endif
 18318  003732  0008               	tblrd		*
 18319  003734  CFF5 F007          	movff	tablat,??_SetRange+6
 18320  003738  0E01               	movlw	1
 18321  00373A  6E08               	movwf	(??_SetRange+7)& (0+255),c
 18322  00373C  2A07               	incf	??_SetRange+6,f,c
 18323  00373E  D002               	goto	i2u569_44
 18324  003740                     i2u569_45:
 18325  003740  90D8               	bcf	status,0,c
 18326  003742  3608               	rlcf	??_SetRange+7,f,c
 18327  003744                     i2u569_44:
 18328  003744  2E07               	decfsz	??_SetRange+6,f,c
 18329  003746  D7FC               	goto	i2u569_45
 18330  003748  5008               	movf	??_SetRange+7,w,c
 18331  00374A  1006               	iorwf	??_SetRange+5,w,c
 18332  00374C  1004               	iorwf	??_SetRange+3,w,c
 18333  00374E  1002               	iorwf	??_SetRange+1,w,c
 18334  003750  128A               	iorwf	3978,f,c	;volatile
 18335                           
 18336                           ;ext_int.c: 48: LATC &= ~(1 << R1_BIT[new_range - 1]);
 18337  003752  0EFF               	movlw	255
 18338  003754  6E01               	movwf	??_SetRange& (0+255),c
 18339  003756  0EFF               	movlw	255
 18340  003758  6E02               	movwf	(??_SetRange+1)& (0+255),c
 18341  00375A  500B               	movf	SetRange@new_range,w,c
 18342  00375C  6E03               	movwf	(??_SetRange+2)& (0+255),c
 18343  00375E  6A04               	clrf	(??_SetRange+3)& (0+255),c
 18344  003760  5001               	movf	??_SetRange,w,c
 18345  003762  2603               	addwf	??_SetRange+2,f,c
 18346  003764  5002               	movf	??_SetRange+1,w,c
 18347  003766  2204               	addwfc	??_SetRange+3,f,c
 18348  003768  0E7C               	movlw	low _R1_BIT
 18349  00376A  2403               	addwf	??_SetRange+2,w,c
 18350  00376C  6EF6               	movwf	tblptrl,c
 18351  00376E  0E7F               	movlw	high _R1_BIT
 18352  003770  2004               	addwfc	??_SetRange+3,w,c
 18353  003772  6EF7               	movwf	tblptrh,c
 18354  003774                     	if	0	;There are less than 3 active tblptr bytes
 18355  003774                     	endif
 18356  003774  0008               	tblrd		*
 18357  003776  CFF5 F005          	movff	tablat,??_SetRange+4
 18358  00377A  0E01               	movlw	1
 18359  00377C  6E06               	movwf	(??_SetRange+5)& (0+255),c
 18360  00377E  2A05               	incf	??_SetRange+4,f,c
 18361  003780  D002               	goto	i2u570_44
 18362  003782                     i2u570_45:
 18363  003782  90D8               	bcf	status,0,c
 18364  003784  3606               	rlcf	??_SetRange+5,f,c
 18365  003786                     i2u570_44:
 18366  003786  2E05               	decfsz	??_SetRange+4,f,c
 18367  003788  D7FC               	goto	i2u570_45
 18368  00378A  5006               	movf	??_SetRange+5,w,c
 18369  00378C  0AFF               	xorlw	255
 18370  00378E  168B               	andwf	3979,f,c	;volatile
 18371                           
 18372                           ;ext_int.c: 49: LATB &= ~(1 << RSET_BIT[new_range - 1]);
 18373  003790  0EFF               	movlw	255
 18374  003792  6E01               	movwf	??_SetRange& (0+255),c
 18375  003794  0EFF               	movlw	255
 18376  003796  6E02               	movwf	(??_SetRange+1)& (0+255),c
 18377  003798  500B               	movf	SetRange@new_range,w,c
 18378  00379A  6E03               	movwf	(??_SetRange+2)& (0+255),c
 18379  00379C  6A04               	clrf	(??_SetRange+3)& (0+255),c
 18380  00379E  5001               	movf	??_SetRange,w,c
 18381  0037A0  2603               	addwf	??_SetRange+2,f,c
 18382  0037A2  5002               	movf	??_SetRange+1,w,c
 18383  0037A4  2204               	addwfc	??_SetRange+3,f,c
 18384  0037A6  0E81               	movlw	low _RSET_BIT
 18385  0037A8  2403               	addwf	??_SetRange+2,w,c
 18386  0037AA  6EF6               	movwf	tblptrl,c
 18387  0037AC  0E7F               	movlw	high _RSET_BIT
 18388  0037AE  2004               	addwfc	??_SetRange+3,w,c
 18389  0037B0  6EF7               	movwf	tblptrh,c
 18390  0037B2                     	if	0	;There are less than 3 active tblptr bytes
 18391  0037B2                     	endif
 18392  0037B2  0008               	tblrd		*
 18393  0037B4  CFF5 F005          	movff	tablat,??_SetRange+4
 18394  0037B8  0E01               	movlw	1
 18395  0037BA  6E06               	movwf	(??_SetRange+5)& (0+255),c
 18396  0037BC  2A05               	incf	??_SetRange+4,f,c
 18397  0037BE  D002               	goto	i2u571_44
 18398  0037C0                     i2u571_45:
 18399  0037C0  90D8               	bcf	status,0,c
 18400  0037C2  3606               	rlcf	??_SetRange+5,f,c
 18401  0037C4                     i2u571_44:
 18402  0037C4  2E05               	decfsz	??_SetRange+4,f,c
 18403  0037C6  D7FC               	goto	i2u571_45
 18404  0037C8  5006               	movf	??_SetRange+5,w,c
 18405  0037CA  0AFF               	xorlw	255
 18406  0037CC  168A               	andwf	3978,f,c	;volatile
 18407  0037CE  0012               	return		;funcret
 18408  0037D0                     __end_of_SetRange:
 18409                           	opt stack 0
 18410                           tosu	equ	0xFFF
 18411                           tosh	equ	0xFFE
 18412                           tosl	equ	0xFFD
 18413                           pclatu	equ	0xFFB
 18414                           pclath	equ	0xFFA
 18415                           tblptru	equ	0xFF8
 18416                           tblptrh	equ	0xFF7
 18417                           tblptrl	equ	0xFF6
 18418                           tablat	equ	0xFF5
 18419                           prodh	equ	0xFF4
 18420                           prodl	equ	0xFF3
 18421                           intcon	equ	0xFF2
 18422                           intcon2	equ	0xFF1
 18423                           intcon3	equ	0xFF0
 18424                           postinc0	equ	0xFEE
 18425                           fsr0h	equ	0xFEA
 18426                           fsr0l	equ	0xFE9
 18427                           wreg	equ	0xFE8
 18428                           postdec1	equ	0xFE5
 18429                           fsr1h	equ	0xFE2
 18430                           fsr1l	equ	0xFE1
 18431                           indf2	equ	0xFDF
 18432                           postinc2	equ	0xFDE
 18433                           postdec2	equ	0xFDD
 18434                           fsr2h	equ	0xFDA
 18435                           fsr2l	equ	0xFD9
 18436                           status	equ	0xFD8
 18437                           tosu	equ	0xFFF
 18438                           tosh	equ	0xFFE
 18439                           tosl	equ	0xFFD
 18440                           pclatu	equ	0xFFB
 18441                           pclath	equ	0xFFA
 18442                           tblptru	equ	0xFF8
 18443                           tblptrh	equ	0xFF7
 18444                           tblptrl	equ	0xFF6
 18445                           tablat	equ	0xFF5
 18446                           prodh	equ	0xFF4
 18447                           prodl	equ	0xFF3
 18448                           intcon	equ	0xFF2
 18449                           intcon2	equ	0xFF1
 18450                           intcon3	equ	0xFF0
 18451                           postinc0	equ	0xFEE
 18452                           fsr0h	equ	0xFEA
 18453                           fsr0l	equ	0xFE9
 18454                           wreg	equ	0xFE8
 18455                           postdec1	equ	0xFE5
 18456                           fsr1h	equ	0xFE2
 18457                           fsr1l	equ	0xFE1
 18458                           indf2	equ	0xFDF
 18459                           postinc2	equ	0xFDE
 18460                           postdec2	equ	0xFDD
 18461                           fsr2h	equ	0xFDA
 18462                           fsr2l	equ	0xFD9
 18463                           status	equ	0xFD8
 18464                           
 18465                           	psect	text73
 18466  000000                     __ptext73:
 18467                           	opt stack 0
 18468                           tosu	equ	0xFFF
 18469                           tosh	equ	0xFFE
 18470                           tosl	equ	0xFFD
 18471                           pclatu	equ	0xFFB
 18472                           pclath	equ	0xFFA
 18473                           tblptru	equ	0xFF8
 18474                           tblptrh	equ	0xFF7
 18475                           tblptrl	equ	0xFF6
 18476                           tablat	equ	0xFF5
 18477                           prodh	equ	0xFF4
 18478                           prodl	equ	0xFF3
 18479                           intcon	equ	0xFF2
 18480                           intcon2	equ	0xFF1
 18481                           intcon3	equ	0xFF0
 18482                           postinc0	equ	0xFEE
 18483                           fsr0h	equ	0xFEA
 18484                           fsr0l	equ	0xFE9
 18485                           wreg	equ	0xFE8
 18486                           postdec1	equ	0xFE5
 18487                           fsr1h	equ	0xFE2
 18488                           fsr1l	equ	0xFE1
 18489                           indf2	equ	0xFDF
 18490                           postinc2	equ	0xFDE
 18491                           postdec2	equ	0xFDD
 18492                           fsr2h	equ	0xFDA
 18493                           fsr2l	equ	0xFD9
 18494                           status	equ	0xFD8
 18495                           
 18496                           	psect	rparam
 18497  0000                     tosu	equ	0xFFF
 18498                           tosh	equ	0xFFE
 18499                           tosl	equ	0xFFD
 18500                           pclatu	equ	0xFFB
 18501                           pclath	equ	0xFFA
 18502                           tblptru	equ	0xFF8
 18503                           tblptrh	equ	0xFF7
 18504                           tblptrl	equ	0xFF6
 18505                           tablat	equ	0xFF5
 18506                           prodh	equ	0xFF4
 18507                           prodl	equ	0xFF3
 18508                           intcon	equ	0xFF2
 18509                           intcon2	equ	0xFF1
 18510                           intcon3	equ	0xFF0
 18511                           postinc0	equ	0xFEE
 18512                           fsr0h	equ	0xFEA
 18513                           fsr0l	equ	0xFE9
 18514                           wreg	equ	0xFE8
 18515                           postdec1	equ	0xFE5
 18516                           fsr1h	equ	0xFE2
 18517                           fsr1l	equ	0xFE1
 18518                           indf2	equ	0xFDF
 18519                           postinc2	equ	0xFDE
 18520                           postdec2	equ	0xFDD
 18521                           fsr2h	equ	0xFDA
 18522                           fsr2l	equ	0xFD9
 18523                           status	equ	0xFD8
 18524                           
 18525                           	psect	temp
 18526  00005E                     btemp:
 18527                           	opt stack 0
 18528  00005E                     	ds	1
 18529  0000                     int$flags	set	btemp
 18530                           tosu	equ	0xFFF
 18531                           tosh	equ	0xFFE
 18532                           tosl	equ	0xFFD
 18533                           pclatu	equ	0xFFB
 18534                           pclath	equ	0xFFA
 18535                           tblptru	equ	0xFF8
 18536                           tblptrh	equ	0xFF7
 18537                           tblptrl	equ	0xFF6
 18538                           tablat	equ	0xFF5
 18539                           prodh	equ	0xFF4
 18540                           prodl	equ	0xFF3
 18541                           intcon	equ	0xFF2
 18542                           intcon2	equ	0xFF1
 18543                           intcon3	equ	0xFF0
 18544                           postinc0	equ	0xFEE
 18545                           fsr0h	equ	0xFEA
 18546                           fsr0l	equ	0xFE9
 18547                           wreg	equ	0xFE8
 18548                           postdec1	equ	0xFE5
 18549                           fsr1h	equ	0xFE2
 18550                           fsr1l	equ	0xFE1
 18551                           indf2	equ	0xFDF
 18552                           postinc2	equ	0xFDE
 18553                           postdec2	equ	0xFDD
 18554                           fsr2h	equ	0xFDA
 18555                           fsr2l	equ	0xFD9
 18556                           status	equ	0xFD8


Data Sizes:
    Strings     120
    Constant    143
    Data        4
    BSS         24
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      93
    BANK0           160     86     112
    BANK1           256     89      89
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_6(CODE[11]), STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[11]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 53
		 -> STR_2(CODE[53]), STR_1(CODE[23]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> i2_putch(), putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> lcd_sendInt@displayString(COMRAM[10]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), printf@ap(COMRAM[2]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 53
		 -> STR_6(CODE[11]), STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[11]), 
		 -> STR_2(CODE[53]), STR_1(CODE[23]), 

    S999__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    S999__prbuf$ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 5
		 -> sprintf@pb(BANK1[4]), printf@pb(COMRAM[4]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 10
		 -> lcd_sendUInt@displayString(COMRAM[10]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> lcd_sendInt@displayString(COMRAM[10]), 

    lcd_sendString@a	PTR const unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), lcd_sendUInt@displayString(COMRAM[10]), lcd_sendInt@displayString(COMRAM[10]), main@cap_string(BANK1[16]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_TMR0_DefaultInterruptHandler
    _TMR0_DefaultInterruptHandler->_SetRange
    _INT1_ISR->_printf
    _INT0_ISR->_printf
    i2___ftdiv->i2___ftmul
    _printf->i2__doprnt
    i2__doprnt->i2___fttol
    i2_scale->i2___ftmul
    i2_putch->i2_EUSART1_Write
    i2_fround->i2___ftmul
    i2___wmul->i2___awdiv
    i2___ftmul->i2___ftadd
    i2___awdiv->i2___awmod
    i2___lltoft->i2___ftpack
    i2___llmod->i2___lldiv
    i2___fttol->i2_scale
    i2___ftsub->i2___ftadd
    i2___ftadd->i2___wmul
    ___lwtoft->i2___ftpack

Critical Paths under _main in BANK0

    __doprnt->_fround
    __doprnt->_scale
    _scale->___ftmul
    _putch->_EUSART1_Write
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftadd->_fround
    _lcd_sendString->_lcd_sendChar
    _lcd_sendChar->__lcd_Port
    _lcd_init->_lcd_sendCommand
    _lcd_clear->_lcd_sendCommand
    _lcd_sendCommand->__lcd_Port
    ___ftdiv->___ftpack
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INT1_ISR->_printf
    _INT0_ISR->_printf
    _printf->i2__doprnt

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->__doprnt
    __doprnt->___ftsub
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   77068
                                             73 BANK1     16    16      0
                  _SYSTEM_Initialize
                            ___ftdiv
                             ___ftge
                          _lcd_clear
                           _lcd_init
                     _lcd_sendString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             13     6      7   70609
                                             60 BANK1     13     6      7
                            ___ftdiv (ARG)
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             41    35      6   66641
                                             25 BANK1     35    29      6
                   Absolute function *
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch *
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               10     7      3   12970
                                             83 BANK0      3     0      3
                                              0 BANK1      4     4      0
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      44
                                             49 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      22
                                             48 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                             48 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              13    10      3   12691
                                             83 BANK0      3     0      3
                                              0 BANK1      7     7      0
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    3094
                                             62 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    5375
                                             68 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             48 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             54 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         15     9      6     431
                                             48 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          12     6      6     591
                                             48 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2655
                                             56 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     773
                                             61 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     750
                                             48 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     716
                                              4 BANK1     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    4628
                                             19 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    4150
                                              7 BANK1     12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     160
                                             48 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     904
                                             48 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_sendString                                       4     2      2     588
                                             52 BANK0      4     2      2
                       _lcd_sendChar
 ---------------------------------------------------------------------------------
 (2) _lcd_sendChar                                         3     3      0     178
                                             49 BANK0      3     3      0
                          __lcd_Port
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     198
                                             51 BANK0      1     1      0
                          __lcd_Port
                    _lcd_sendCommand
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0     110
                    _lcd_sendCommand
 ---------------------------------------------------------------------------------
 (2) _lcd_sendCommand                                      2     2      0     110
                                             49 BANK0      2     2      0
                          __lcd_Port
 ---------------------------------------------------------------------------------
 (3) __lcd_Port                                            1     1      0      88
                                             48 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    3345
                                             56 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2419
                                             48 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      86
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      86
                                             50 BANK0      2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      86
                                             48 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                          14    14      0   80804
                                             34 BANK0     14    14      0
                           _INT0_ISR
                           _INT1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0      44
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         1     1      0      44
                                             11 COMRAM     1     1      0
                           _SetRange
 ---------------------------------------------------------------------------------
 (7) _INT1_ISR                                             0     0      0   37271
                           _SetRange
                             _printf
 ---------------------------------------------------------------------------------
 (7) _INT0_ISR                                             0     0      0   43489
                           _SetRange
                     _TMR0_ReadTimer
                        _TMR0_Reload
                     _TMR0_StopTimer
                           ___lwtoft
                             _printf
                  i2_TMR0_StartTimer
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (8) i2___ftdiv                                           15     9      6     953
                                             47 COMRAM    15     9      6
                           ___lwtoft (ARG)
                          i2___ftadd (ARG)
                          i2___ftmul (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) i2_TMR0_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _printf                                              17     6     11   37227
                                             81 COMRAM     6     6      0
                                             23 BANK0     11     0     11
                          i2__doprnt
 ---------------------------------------------------------------------------------
 (9) i2__doprnt                                           41    35      6   34081
                                             69 COMRAM    12     6      6
                                              0 BANK0     23    23      0
                   Absolute function *
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch *
                            i2_scale
 ---------------------------------------------------------------------------------
 (10) i2_scale                                            13    10      3    4945
                                             47 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (10) i2_putch                                             1     1      0      44
                                              1 COMRAM     1     1      0
                    i2_EUSART1_Write
 ---------------------------------------------------------------------------------
 (11) i2_EUSART1_Write                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) i2_isdigit                                           3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (10) i2_fround                                           16    13      3    4747
                                             47 COMRAM    10     7      3
                          i2___awdiv
                          i2___awmod
                          i2___ftadd (ARG)
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (11) i2___wmul                                            6     2      4    1145
                                             14 COMRAM     6     2      4
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___ftmul                                          15     9      6    1727
                                             32 COMRAM    15     9      6
                           ___lwtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___ftadd (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___awmod                                           6     2      4     764
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (11) i2___awdiv                                           8     4      4     820
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (10) i2__tdiv_to_l_                                      15     9      6     355
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (10) i2__div_to_l_                                       12     6      6     481
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (10) i2___lltoft                                          9     5      4     716
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (10) i2___llmod                                           9     1      8     367
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___lldiv                                          13     5      8     318
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (10) i2___fttol                                          15    11      4     330
                                             54 COMRAM    15    11      4
                          i2___ftmul (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftsub                                           6     0      6    1736
                                             32 COMRAM     6     0      6
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___ftadd                                          12     6      6    1617
                                             20 COMRAM    12     6      6
                           ___lwtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftneg                                           3     0      3      71
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (10) i2___ftge                                            9     3      6     292
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (8) ___lwtoft                                             3     0      3     707
                                              8 COMRAM     3     0      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (12) i2___ftpack                                          8     3      5     621
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (8) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ReadTimer                                      10     8      2      69
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (9) _SetRange                                            11    11      0      44
                                              0 COMRAM    11    11      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _EXT_INT_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
   ___ftdiv
     ___ftpack
   ___ftge
   _lcd_clear
     _lcd_sendCommand
       __lcd_Port
   _lcd_init
     __lcd_Port
     _lcd_sendCommand
       __lcd_Port
   _lcd_sendString
     _lcd_sendChar
       __lcd_Port
   _sprintf
     ___ftdiv (ARG)
       ___ftpack
     __doprnt (ARG)
       Absolute function(Fake) *
       ___awdiv *
         ___awmod (ARG)
       ___ftadd *
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge *
       ___ftmul *
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg *
       ___ftsub *
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol *
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv *
       ___llmod *
         ___lldiv (ARG)
       ___lltoft *
         ___ftpack
       ___wmul *
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_ *
       __tdiv_to_l_ *
       _fround *
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit *
       _putch *
         _EUSART1_Write
       _scale *
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _INT0_ISR
     _SetRange
     _TMR0_ReadTimer
     _TMR0_Reload
     _TMR0_StopTimer
     ___lwtoft
       i2___ftpack
     _printf
       i2__doprnt
         Absolute function(Fake) *
         i2___awdiv *
           i2___awmod (ARG)
         i2___ftadd *
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftge *
         i2___ftmul *
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftadd (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg *
         i2___ftsub *
           i2___ftadd
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___lltoft (ARG)
             i2___ftpack
         i2___fttol *
           i2___ftmul (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftadd (ARG)
                 ___lwtoft (ARG)
                   i2___ftpack
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lldiv *
         i2___llmod *
           i2___lldiv (ARG)
         i2___lltoft *
           i2___ftpack
         i2___wmul *
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2__div_to_l_ *
         i2__tdiv_to_l_ *
         i2_fround *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftadd (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2_isdigit *
         i2_putch *
           i2_EUSART1_Write
         i2_scale *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
     i2_TMR0_StartTimer
     i2___ftadd
       ___lwtoft (ARG)
         i2___ftpack
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
       i2___ftpack (ARG)
       i2___ftpack (ARG)
       i2___wmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
     i2___ftdiv
       ___lwtoft (ARG)
         i2___ftpack
       i2___ftadd (ARG)
         ___lwtoft (ARG)
           i2___ftpack
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftmul (ARG)
         ___lwtoft (ARG)
           i2___ftpack
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftadd (ARG)
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftpack (ARG)
       i2___wmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
     i2___ftmul
       ___lwtoft (ARG)
         i2___ftpack
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
       i2___ftadd (ARG)
         ___lwtoft (ARG)
           i2___ftpack
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftpack (ARG)
       i2___wmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
     i2___wmul
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
   _INT1_ISR
     _SetRange
     _printf
       i2__doprnt
         Absolute function(Fake) *
         i2___awdiv *
           i2___awmod (ARG)
         i2___ftadd *
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftge *
         i2___ftmul *
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftadd (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg *
         i2___ftsub *
           i2___ftadd
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___lltoft (ARG)
             i2___ftpack
         i2___fttol *
           i2___ftmul (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftadd (ARG)
                 ___lwtoft (ARG)
                   i2___ftpack
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lldiv *
         i2___llmod *
           i2___lldiv (ARG)
         i2___lltoft *
           i2___ftpack
         i2___wmul *
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2__div_to_l_ *
         i2__tdiv_to_l_ *
         i2_fround *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftadd (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2_isdigit *
         i2_putch *
           i2_EUSART1_Write
         i2_scale *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
       _SetRange

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     59      59       6       34.8%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     56      70       4       70.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      5D       1       98.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     126       9        0.0%
DATA                 0      0     126      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Jan 23 20:40:01 2017

                           ?_lcd_sendChar 0001                              ___awdiv@sign 009B  
                     ___wmul@multiplicand 00A0                                i2___ftpack 49E2  
                         _timer0ReloadVal 005C                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                              ___ftadd@exp1 0112  
                            ___ftadd@exp2 0111                                i2___lltoft 4F92  
                             __CFG_LVP$ON 000000                              ___ftadd@sign 0110  
                         ?_lcd_sendString 0094                          ?_lcd_sendCommand 0001  
                                     l238 54BC                                       l414 0D52  
                                     l270 3B12                                       l343 52AA  
                                     l345 52B6                                       l347 52C2  
                                     l349 52CE                                       l481 0DE4  
                                     l466 0AA8                                       l805 3172  
                                     l814 319C                                       l735 3AE4  
                                     l832 3898                                       l825 3ED0  
                                     l833 38DC                                       l790 303A  
                                     l767 449E                                       l839 395C  
                                     l864 532A                                       l936 49D0  
                                     l794 3074                                       l946 4BBA  
                                     l796 309C                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                              ___awmod@sign 0095  
                                     tosl 000FFD                                       wreg 000FE8  
                            ___ftdiv@cntr 00A1                              ___ftdiv@sign 00A6  
                                    l6002 3082                                      l6030 312A  
                                    l4440 52C4                                      l4432 52AC  
                                    l6024 3102                                      l6008 3092  
                                    l6120 489A                                      l4512 53B8  
                                    l6026 3110                                      l6018 30D4  
                                    l4522 380A                                      l6130 48CA  
                                    l6114 4884                                      l4436 52B8  
                                    l6044 31C6                                      l6036 3158  
                                    l6028 311E                                      l6204 2F8A  
                                    l6054 3214                                      l6038 3166  
                                    l6302 4D6A                                      l4630 3ADA  
                                    l4622 3AAE                                      l4606 3A62  
                                    l6126 48B8                                      l6142 4908  
                                    l6070 3CD0                                      l6304 4D7A  
                                    l4528 3844                                      l6128 48C4  
                                    l6064 3C96                                      l6224 26C0  
                                    l6250 5062                                      l4714 4954  
                                    l4618 3A9A                                      l4570 3952  
                                    l4562 3926                                      l6146 491C  
                                    l6138 48FA                                      l6170 4AE2  
                                    l6162 4ABC                                      l6242 2910  
                                    l6218 25FA                                      l7212 3E8E  
                                    l4644 47E0                                      l6260 3F40  
                                    l4716 4964                                      l4628 3ACA  
                                    l6084 3D1E                                      l6236 284A  
                                    l6228 26E6                                      l4654 4864  
                                    l4726 49BE                                      l4718 496A  
                                    l4742 4BA8                                      l4734 4B4E  
                                    l4558 3912                                      l6182 4B28  
                                    l6174 4B06                                      l6166 4AD0  
                                    l6158 4AAC                                      l6094 3D5C  
                                    l4648 4820                                      l4736 4B5E  
                                    l4584 39BA                                      l4568 3942  
                                    l6168 4ADC                                      l6088 3D3C  
                                    l5802 5098                                      l6290 4012  
                                    l6282 3FE6                                      l4738 4B64  
                                    l4578 3994                                      l6178 4B14  
                                    l6098 3D7A                                      l6292 401C  
                                    l6196 2EA6                                      l5806 50B8  
                                    l6278 3FD2                                      l4598 3A0E  
                                    l7192 3E2E                                      l6296 4038  
                                    l6288 4002                                      l7186 3DF4  
                                    l5950 43E0                                      l5962 4452  
                                    l5954 43F4                                      l5972 44A8  
                                    l5964 4482                                      l5956 4402  
                                    l5966 4490                                      l5958 4432  
                                    l9502 00A8                                      l9600 0490  
                                    l9512 0122                                      l5978 44C4  
                                    l9602 04A6                                      l9514 0138  
                                    l5996 3048                                      l9612 0536  
                                    l9604 04D6                                      l9524 0172  
                                    l9532 01E8                                      l9508 00F4  
                                    l9710 0A06                                      l9630 0628  
                                    l9606 04EC                                      l9550 0282  
                                    l9542 0256                                      l9518 0142  
                                    l9720 0A76                                      l9632 062E  
                                    l9616 0564                                      l9552 0288  
                                    l9544 026C                                      l9722 0A8A  
                                    l9714 0A44                                      l9706 09D6  
                                    l9626 05C2                                      l9538 0210  
                                    l9812 0F1C                                      l9804 0EC4  
                                    l9708 09F8                                      l9660 0750  
                                    l9652 06EC                                      l9644 0674  
                                    l9572 0340                                      l9564 02EC  
                                    l9548 027C                                      l9556 028E  
                                    l9830 0FCA                                      l9750 0C4A  
                                    l9742 0B84                                      l9734 0B08  
                                    l9726 0AAC                                      l9718 0A6E  
                                    l9558 02D0                                      l9840 1038  
                                    l9832 0FD4                                      l9824 0F88  
                                    l9808 0EEC                                      l9760 0D12  
                                    l9752 0C78                                      l9680 0840  
                                    l9672 07E4                                      l9664 077C  
                                    l9648 06C4                                      l9850 10AC  
                                    l9826 0F92                                      l9818 0F50  
                                    l9754 0CC6                                      l9738 0B32  
                                    l9674 07EC                                      l9844 1062  
                                    l9772 0D90                                      l9764 0D3C  
                                    l9756 0CD4                                      l9684 086A  
                                    l9676 0802                                      l9668 07BA  
                                    l9596 0462                                      l9588 03F2  
                   __size_ofi2__div_to_l_ 0128                                      l9862 112A  
                                    l9854 10D6                                      l9790 0E78  
                                    l9782 0E1C                                      l9774 0DC4  
                                    l9766 0D44                                      l9694 08E4  
                                    l9686 0872                                      STR_1 7FBB  
                                    l9856 10E0                                      l9792 0E7E  
                                    l9784 0E52                                      l9696 0900  
                                    l9688 0886                                      STR_2 7F86  
                                    STR_3 7FF3                                      l9874 11C6  
                                    l9866 1154                                      l9858 10EC  
                                    l9698 0910                                      l9890 12E6  
                                    STR_4 7FDD                                      STR_5 7FE8  
                                    l9884 12A6                                      l9868 1168  
                                    l9892 1304                                      STR_6 7FD2  
                                    l9886 12C2                                      l9878 11E4  
                                    l9888 12D0                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    u5851 37E6                                      u5871 3820  
                                    u8451 2FE8                                      u8461 3006  
                                    u8661 3C72                                      u8921 3F1C  
                                    u8681 3CAC                                      u8940 3F66  
                                    u8945 3F5C                                      _WPUB 000F61  
                           _EUSART1_Write 54B8                                      _main 3AF6  
                             i2__doprnt@c 0076                              ___ftpack@arg 0090  
                             i2__doprnt@f 0048                              ___ftpack@exp 0093  
                         _TMR0_StartTimer 551E                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                                    btemp 005E                             __CFG_BORV$190 000000  
                            i2___ftadd@f1 0015                              i2___ftadd@f2 0018  
                                    pclat 000FFA                              i2___ftge@ff1 0001  
                            i2___ftge@ff2 0004                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00A0  
                           __CFG_IESO$OFF 000000                              i2___ftdiv@f1 0030  
                            i2___ftdiv@f2 0033                              i2___ftdiv@f3 003A  
                         __end_ofi2_scale 2D26                              i2___ftneg@f1 0001  
                         __end_ofi2_putch 5510                            ??_lcd_sendChar 0091  
                            ___ftmul@cntr 00B1                              i2___ftmul@f1 0021  
                            i2___ftmul@f2 0024                              ___param_bank 000010  
                            ___ftmul@sign 00B2                              i2___ftsub@f1 0021  
                            i2___ftsub@f2 0024                              i2___fttol@f1 0037  
                __size_ofi2_EUSART1_Write 000C                              ___fttol@exp1 0112  
                            i2___lltoft@c 0009                              ___fttol@lval 010E  
                 __end_of_TMR0_Initialize 515E                          __end_of_INT0_ISR 43C6  
                        __end_of_INT1_ISR 4F92            ??_TMR0_DefaultInterruptHandler 000C  
          __size_of_OSCILLATOR_Initialize 000E             __end_of_OSCILLATOR_Initialize 54E2  
                                   l10010 3C4A                                     l10002 3B86  
                                   l10008 3C22                                     ?_main 0001  
                         __end_of___awdiv 4926                           __end_of___ftadd 323A  
                         __end_of___awmod 4B32                 TMR0_ReadTimer@readValHigh 000A  
                         __end_of___ftdiv 3F06                           __end_of___ftneg 5338  
                         __end_of___lldiv 49E2                           __end_of___ftmul 3DBA  
                                   _T0CON 000FD5                           ___awdiv@divisor 0098  
                         __end_of___llmod 4BCC                           __end_of___ftsub 508C  
                         __end_of___fttol 404A                                     u10911 3DD0  
                                   u10931 3E0A                                     u16040 0386  
                                   u16045 037A                                     u17027 50FC  
                                   u16228 073A                                     u17037 5110  
                                   u16318 08CE                                     u17047 4DEC  
                                   u16248 07A4                                     u17057 4E04  
                                   u16418 0AF2                                     u16338 09BC  
                                   u17067 4E1C                                     u16380 0AA0  
                                   u17077 53DA                                     u16438 0C30  
                                   u16278 082A                            __CFG_DEBUG$OFF 000000  
                                   u16368 0A2E                                     u16708 1096  
                                   u16468 0CFC                                     u16808 128E  
                                   u16748 1114                                     u16678 1022  
                                   u15958 00DC                                     u16788 11B0  
                                   i2l113 0064                                     i2l107 004E  
                                   i2l109 005A                                     i2l238 54F2  
                                   i2l414 1F14                                     i2l175 5182  
                                   i2l481 1FA6                                     i2l466 1C78  
                                   i2l805 359E                                     i2l814 35BA  
                                   i2l735 4292                                     i2l832 40DC  
                                   i2l833 4104                                     i2l825 476E  
                                   i2l790 34C4                                     i2l767 4A70  
                                   i2l839 416A                                     i2l864 5424  
                                   i2l936 4D50                                     i2l794 34EE  
                                   i2l946 4F1C                           ___awdiv@counter 009A  
                                   _TMR0H 000FD7                                     _TMR0L 000FD6  
                            i2__div_to_l_ 417C                           __end_of__doprnt 1310  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94         __size_of_TMR0_SetInterruptHandler 000A  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                 ?_TMR0_SetInterruptHandler 0090  
                           __CFG_WRT3$OFF 000000                              ___lltoft@exp 00A0  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                          __end_of_TMR0_ISR 5398  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                              i2isdigit@c 0003                          __end_of_RSET_BIT 7F86  
                         __end_of_dpowers 7F1F                                i2scale@scl 0036  
                            i2__doprnt@ap 004A                              i2__doprnt@pb 0046  
                                   _scale 2488                                     _range 00CD  
                         __end_of_isdigit 53C2                        __CFG_MCLRE$EXTMCLR 000000  
                           ___ftpack@sign 0094                                     _putch 54A4  
                                   _units 00CA                            ?_EUSART1_Write 0001  
                                   pclath 000FFA                                     tablat 000FF5  
                        __end_ofi2___ftge 4C5C                          __end_ofi2___wmul 540E  
                                   status 000FD8                           __end_of_sprintf 5040  
                          __CFG_HFOFST$ON 000000                            __CFG_FOSC$HSMP 000000  
                        __end_ofi2_fround 3480                             i2___ftdiv@exp 003D  
                      __size_ofi2___awdiv 0084                        __size_ofi2___ftadd 01AC  
                      __size_ofi2___awmod 0070                            __CFG_PBADEN$ON 000000  
                      __size_ofi2___ftdiv 00E6                        __size_ofi2___ftneg 0024  
                      __size_ofi2___lldiv 0082                        __size_ofi2___ftmul 00F4  
                      __size_ofi2___llmod 0066                        __size_ofi2___ftsub 0040  
                      __size_ofi2___fttol 00F4                        __size_ofi2__doprnt 1178  
                         __initialization 51A2                         i2___lldiv@divisor 0005  
              __end_of_EUSART1_Initialize 54A4                              __end_of_main 3C5C  
                            _stored_range 00B8                         i2___lldiv@counter 000D  
                           i2___ftmul@exp 002A                        __size_ofi2_isdigit 001E  
             ?_INTERRUPT_InterruptManager 0001                               ?i2___ftpack 0001  
                           lcd_sendChar@a 0093                             lcd_sendChar@y 0092  
                             ?i2___lltoft 0009                                    ??_main 00B6  
                           ___fttol@sign1 010D                          __end_of_SetRange 37D0  
                           __activetblptr 000002                      __size_of__tdiv_to_l_ 019E  
                 __end_of_TMR0_StartTimer 5522                          ___llmod@dividend 009D  
                                  ?_scale 00B3                          ___awdiv@dividend 0096  
                                  _ANSELA 000F38                                    ?_putch 0001  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                        __end_of___ftpack 44D2                          __end_of___lltoft 4DDE  
                                  _R1_BIT 7F7C                                    i2l4202 422A  
                                  i2l4140 2A6A                                    i2l4310 523C  
                                  i2l4214 4258                                    i2l4126 3440  
                                  i2l4118 3380                                    i2l4150 2B32  
                          __CFG_WDTEN$OFF 000000                                    i2l4320 45F2  
                                  i2l4400 4EE6                                    i2l4224 4280  
                                  i2l4240 40A2                                    i2l4402 4EEA  
                                  i2l4226 428C                                    i2l4218 4268  
                                  i2l4234 4076                                    i2l4146 2B0E  
                                  i2l5202 5184                                    i2l4412 4F98  
                                  i2l4180 41B8                                    i2l4164 2D02  
                                  i2l3630 4A28                                    i2l3622 49F2  
                                  i2l4350 468C                                    i2l4342 4668  
                                  i2l4406 4F0E                                    i2l4414 4FA4  
                                  i2l4174 419A                                    i2l4270 4130  
                                  i2l4158 2C5E                                    i2l4352 4692  
                                  i2l4280 4158                                    i2l3720 4C96  
                                  i2l3634 4A3E                                    i2l3626 4A00  
                                  i2l3810 352C                                    i2l4338 4658  
                                  i2l4194 41FA                                    i2l4282 4164  
                                  i2l4274 4140                                    i2l3722 4C9E  
                                  i2l3714 4C80                                    i2l3636 4A5C  
                                  i2l3628 4A0A                                    i2l4292 4C2C  
                                  i2l3820 3562                                    i2l4356 46A8  
                                  i2l4348 4680                                    i2l4380 4D0E  
                                  i2l3740 4CD6                                    i2l3732 4CBE  
                                  i2l3724 4CA2                                    i2l3708 4C70  
                                  i2l3638 4A66                                    i2l3830 3596  
                                  i2l3822 356A                                    i2l4390 4D42  
                                  i2l4382 4D12                                    i2l4288 4BFC  
                                  i2l3816 354E                                    i2l3736 4CC8  
                                  i2l3760 4E86                                    i2l3752 4E6C  
                                  i2l4368 546C                                    i2l4298 4C58  
                                  i2l3818 3558                                    i2l4378 4D02  
                                  i2l3762 4E8E                                    i2l3836 35D6  
                                  i2l3828 358C                                    i2l3764 4E92  
                                  i2l3772 4EB0                                    i2l3756 4E78  
                                  i2l3846 3606                                    i2l4398 4EDA  
                                  i2l3862 4522                                    i2l3776 4EBE  
                                  i2l3768 4EA6                                    i2l3880 4564  
                                  i2l3856 44FA                                    i2l3794 34FC  
                                  i2l3890 458C                                    i2l3788 34D2  
                                  i2l3876 4554                                    i2l9100 1314  
                                  i2l3886 457C                                    i2l9110 138A  
                                  i2l5654 470A                                    i2l9200 16C6  
                                  i2l9112 13A0                                    i2l5648 46E2  
                                  i2l9210 174E                                    i2l9202 16F6  
                                  i2l9122 13D8                                    i2l9130 1438  
                                  i2l9106 135C                                    i2l5674 4748  
                                  i2l9204 170C                                    i2l9140 1498  
                                  i2l9116 13A8                                    i2l9230 183E  
                                  i2l9214 1774                                    i2l9150 14CA  
                                  i2l9142 14AE                                    i2l9320 1C5A  
                                  i2l9312 1C14                                    i2l9304 1BAA  
                                  i2l9224 17D2                                    i2l9136 145E  
                           i2putch@txData 0002                                    i2l9410 20D6  
                                  i2l9402 2086                                    i2l9306 1BCC  
                                  i2l9250 18E6                                    i2l9242 1884  
                                  i2l9170 1580                                    i2l9162 152C  
                                  i2l9146 14BE                                    i2l9154 14D0  
                                  i2l9340 1D50                                    i2l9332 1CD4  
                                  i2l9324 1C7C                                    i2l9316 1C3E  
                                  i2l9308 1BDA                                    i2l9228 1838  
                                  i2l9156 1510                                    i2l9148 14C4  
                                  i2l9430 217E                                    i2l9422 2136  
                                  i2l9406 20AA                                    i2l9350 1E3E  
                                  i2l9318 1C46                                    i2l9270 19CE  
                                  i2l9262 196A                                    i2l9246 18C6  
                                  i2l9424 2140                                    i2l9416 2102  
                                  i2l9352 1E8C                                    i2l9336 1CFE  
                                  i2l9272 19D6                                    i2l9442 2200  
                                  i2l9370 1F52                                    i2l9362 1EFE  
                                  i2l9354 1E9A                                    i2l9282 1A50  
                                  i2l9274 19EC                                    i2l9266 19A4  
                                  i2l9258 193E                                    i2l9194 168A  
                                  i2l9186 1622                                    i2l9460 22C0  
                                  i2l9452 2270                                    i2l9428 2174  
                                  i2l9380 1FDE                                    i2l9372 1F86  
                                  i2l9364 1F06                                    i2l9348 1E10  
                                  i2l9292 1ABE                                    i2l9284 1A58  
                                  i2l9438 21D6                                    i2l9454 227A  
                                  i2l9390 2040                                    i2l9382 2014  
                                  i2l9358 1ED4                                    i2l9294 1ADA  
                                  i2l9286 1A6C                                    i2l9278 1A26  
                                  i2l9198 16B0                                    i2l9472 2350  
                                  i2l9464 22EA                                    i2l9456 2286  
                                  i2l9448 2246                                    i2l9296 1AEA  
                                  i2l9482 2422                                    i2l9466 22FE  
                                  i2l9490 247E                                    i2l9484 243E  
                                  i2l9476 236E                                    i2l9388 203A  
                                  i2l9486 244C                                    i2l9902 4F40  
                                  i2l9488 2462                                    i2l9922 42AE  
                                  i2l9914 4F6E                                    i2l9906 4F4E  
                                  i2l9908 4F54                                    i2l9942 43B8  
                                  _RCREG1 000FAE                                 ??i2_scale 0033  
                        __end_of___lwtoft 5456                                    u450_41 34A4  
                                  u530_41 405A                                    u532_41 4086  
                                  u470_41 44E2                                    _RCSTA1 000FAB  
                                  u544_41 45D6                                    u472_41 450A  
                                  u449_41 3490                                    _OSCCON 000FD3  
                                  u805_41 46CA                                    u807_41 46F2  
                                  _SPBRG1 000FAF                                 ??i2_putch 0002  
                                  _TXREG1 000FAD                                    _TXSTA1 000FAC  
                  __size_ofi2__tdiv_to_l_ 0132                              __doprnt$1745 0125  
                          __CFG_XINST$OFF 000000                              i2_scale$1926 0033  
                        __end_of__powers_ 7F6D                          __end_of_lcd_init 4E58  
                            ?_TMR0_Reload 0001                                    ___ftge 47A0  
                        lcd_sendChar@temp 0091                                    ___wmul 5266  
                               ??___awdiv 009A                                 ??___ftadd 010D  
                          __CFG_STVREN$ON 000000                                 ??___awmod 0094  
                               ??___ftdiv 009E                                 ??___ftneg 0093  
                               ??___lldiv 0098                                 ??___ftmul 00AA  
                               ??___llmod 00A5                                 ??___ftsub 00B6  
                               ??___fttol 0108                                 ??__doprnt 011F  
                        ?_TMR0_Initialize 0001                                    _fround 2D26  
                           i2__doprnt@exp 0063                             i2__doprnt@val 0065  
                                  clear_0 51C8                          ___awdiv@quotient 009C  
                         ___awmod@divisor 0092                                    _result 0058  
                            __doprnt@flag 0137                           ___awmod@counter 0094  
                                  _printf 52D2                              __doprnt@fval 0134  
                            __doprnt@prec 0139                            i2___awdiv@sign 000C  
                   ___ftmul@f3_as_product 00AE                         ??i2_EUSART1_Write 0001  
                               ??_isdigit 0090                         __end_ofi2___awdiv 4CE0  
                       __end_ofi2___ftadd 362C                         __end_ofi2___awmod 4EC8  
                       __end_ofi2___ftdiv 47A0                            i2___ftadd@exp1 0020  
                          i2___ftadd@exp2 001F                         __end_ofi2___ftneg 5432  
                       __end_ofi2___lldiv 4D62                         __end_ofi2___ftmul 45C6  
                       __end_ofi2___llmod 4F2E                         __end_ofi2___ftsub 5266  
                       __end_ofi2___fttol 46BA                            i2___ftadd@sign 001E  
                            __mediumconst 7EF6                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                       __end_ofi2__doprnt 2488                      __end_of_lcd_sendChar 511A  
                        lcd_sendCommand@a 0092                            i2___awmod@sign 0006  
                         ??_EUSART1_Write 0090  TMR0_SetInterruptHandler@InterruptHandler 0090  
                               ??_sprintf 00B6             __size_of_INTERRUPT_Initialize 0004  
                       __end_ofi2_isdigit 5474                         _SYSTEM_Initialize 5474  
                          i2___ftdiv@cntr 0039                                __accesstop 0060  
                 __end_of__initialization 51D6                            i2___ftdiv@sign 003E  
                               ?_INT0_ISR 0001                                 ?_INT1_ISR 0001  
                              ___ftadd@f1 0107                                ___ftadd@f2 010A  
                     __size_ofi2___ftpack 00AE                                ___ftge@ff1 0090  
                              ___ftge@ff2 0093                        ?_SYSTEM_Initialize 0001  
                     __size_ofi2___lltoft 005C                             ___rparam_used 000001  
                              ___ftdiv@f1 0098                                ___ftdiv@f2 009B  
                              ___ftdiv@f3 00A2                                ___ftneg@f1 0090  
                      __size_of__lcd_Port 0036                            i2___ftpack@arg 0001  
                      i2__tdiv_to_l_@exp1 000F                         i2___llmod@divisor 0012  
                          i2___ftpack@exp 0004                        i2__tdiv_to_l_@cntr 000E  
                       i2___llmod@counter 0016                        i2__tdiv_to_l_@quot 000A  
                              ___ftmul@f1 00A4                                ___ftmul@f2 00A7  
                              ___ftsub@f1 0113                                ___ftsub@f2 0116  
                              ___fttol@f1 0104                            __pcstackCOMRAM 0001  
                      i2___lldiv@dividend 0001                              __pidataBANK0 551A  
                     ??_SYSTEM_Initialize 0094                          ??_lcd_sendString 0096  
                               ?_TMR0_ISR 0001                                ___lltoft@c 0098  
                          i2___ftmul@cntr 002E                             __end_of_scale 2936  
                          i2___ftmul@sign 002F                             __end_of_putch 54B8  
                 __size_of_TMR0_ReadTimer 0042                            main@cap_string 0149  
                          i2___fttol@exp1 0045                                ___lwtoft@c 0009  
                          i2___fttol@lval 0041                                 ?i2___ftge 0001  
                               ?i2___wmul 000F                             i2__tdiv_to_l_ 404A  
             __size_of_EXT_INT_Initialize 000E                                __div_to_l_ 396E  
                               ?i2_fround 0030                        __size_of_lcd_clear 000E  
                              __doprnt@ap 011D                                __doprnt@pb 0119  
                   i2EUSART1_Write@txData 0001                           __div_to_l_@exp1 009B  
                        ?_TMR0_StartTimer 0001                           __div_to_l_@cntr 009A  
                                 ??_scale 00B6                 __end_of_SYSTEM_Initialize 548E  
                          i2___lltoft@exp 0011                           __div_to_l_@quot 0096  
                                 ??_putch 0091                        i2___lldiv@quotient 0009  
                              __pbssBANK0 00B6                          i2__tdiv_to_l_@f1 0001  
                        i2__tdiv_to_l_@f2 0004                           __CFG_PLLCFG$OFF 000000  
                              ??_INT0_ISR 0058                                ??_INT1_ISR 0058  
                              __pnvCOMRAM 005C                             __div_to_l_@f1 0090  
                           __div_to_l_@f2 0093                                 ?_SetRange 0001  
                      __CFG_CCP2MX$PORTC1 000000                                   ?___ftge 0090  
        __end_of_TMR0_SetInterruptHandler 5506                   __size_of_TMR0_StopTimer 0004  
                                 ?___wmul 009E                                ??_TMR0_ISR 000D  
                      __CFG_CCP3MX$PORTB5 000000                                   ?_fround 00B3  
                               ?___ftpack 0090                                   ?_printf 0077  
                               ?___lltoft 0098                            ?i2__tdiv_to_l_ 0001  
                              ??i2___ftge 0007                                 ?___lwtoft 0009  
                              ??i2___wmul 0013                         __end_of__lcd_Port 52D2  
                              ??i2_fround 0033                                   _OSCCON2 000FD2  
                                 _OSCTUNE 000F9B                                   _SPBRGH1 000FB0  
                __size_of_lcd_sendCommand 0026                                 ?_lcd_init 0001  
                                 i2_scale 2936                                   i2_putch 5506  
                              ??_SetRange 0001                                _auto_range 00CC  
                         __CFG_PWRTEN$OFF 000000                         __end_of__npowers_ 7F46  
                                 __Hparam 0000                                _scale$1744 0100  
                                 __Lparam 0000                         __end_of_lcd_clear 54D4  
                         __size_of___ftge 00C8                                   ___awdiv 4868  
                                 ___ftadd 2FD2                            i2__doprnt$1927 0060  
                                 ___awmod 4A90                                   ___ftdiv 3DBA  
                                 ___ftneg 5308                                   ___lldiv 4926  
                         __size_of___wmul 0036                                   ___ftmul 3C5C  
                                 ___llmod 4B32                                   ___ftsub 5040  
                                 ___fttol 3F06                      __size_of_TMR0_Reload 000A  
                                 __doprnt 00A4                                   __pcinit 51A2  
                            ??i2___ftpack 0006                                ??___ftpack 0095  
                         __size_of_fround 02AC                   i2___ftmul@f3_as_product 002B  
                                 __ramtop 0600                              ??i2___lltoft 000D  
                              ??___lltoft 009C                                   __ptext0 3AF6  
                                 __ptext1 4FEE                                   __ptext2 00A4  
                                 __ptext3 2488                                   __ptext4 54A4  
                                 __ptext5 54B8                                   __ptext6 5398  
                                 __ptext7 2D26                                   __ptext8 5266  
                                 __ptext9 3C5C                           __size_of_printf 0036  
                   __size_of_lcd_sendChar 0046                                ??___lwtoft 000C  
                               _T0CONbits 000FD5                             i2_fround$1924 0036  
                           i2_fround$1925 0033                               ?__div_to_l_ 0090  
                                 _dpowers 7EF7                     _OSCILLATOR_Initialize 54D4  
                            i2fround@prec 0039                                   _isdigit 5398  
                          i2__doprnt@flag 0072                                   _reading 00B6  
                          i2__doprnt@fval 006D                          ___awmod@dividend 0090  
                          i2__doprnt@prec 0074                        _EUSART1_Initialize 548E  
                ??_PIN_MANAGER_Initialize 0090                __size_of_SYSTEM_Initialize 001A  
                                 _sprintf 4FEE                             __doprnt@width 0132  
                              ??_lcd_init 0093                      end_of_initialization 51D6  
                                 ftoa@buf 00B9                       ?_EUSART1_Initialize 0001  
                           __Lmediumconst 7EF6                       i2___wmul@multiplier 000F  
                      __end_ofi2___ftpack 4A90                                 i2u1514_40 15C0  
                               i2u1505_48 1344                                 i2u1514_45 15B6  
                               i2u1532_48 1928                                 i2u1541_48 1AA8  
                               i2u1534_48 198E                                 i2u1551_48 1CBE  
                               i2u1543_48 1B90                                 i2u1553_48 1DF6  
                               i2u1537_48 1A10                                 i2u1546_48 1BFE  
                               i2u1548_40 1C70                                 i2u1580_48 2230  
                               i2u1556_48 1EBE                                 i2u1590_48 240A  
                               i2u1584_48 22AA                                 i2u1577_48 21C0  
                               i2u1588_48 233A                                 i2u1692_48 5382  
                      __end_ofi2___lltoft 4FEE                           ___lldiv@divisor 0094  
                         ___lldiv@counter 009C                           i2_EUSART1_Write 54F0  
                   TMR0_ReadTimer@readVal 0007                                   printf@f 0077  
                            _lcd_sendChar 50D4                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                            __tdiv_to_l_@f1 0090  
                          __tdiv_to_l_@f2 0093                            _TMR0_ReadTimer 51E4  
                    ??_EUSART1_Initialize 0090                           ??i2__tdiv_to_l_ 0007  
                     __end_of_cal_current 7F7C                             ??__tdiv_to_l_ 0096  
                _TMR0_SetInterruptHandler 54FC                                 i2___awdiv 4C5C  
                     EUSART1_Write@txData 0090                                 i2___ftadd 3480  
                               i2___awmod 4E58                                 i2___ftdiv 46BA  
                               i2___ftneg 540E                                 i2___lldiv 4CE0  
                               i2___ftmul 44D2                                 i2___llmod 4EC8  
                               i2___ftsub 5226                                 i2___fttol 45C6  
                               i2__doprnt 1310                            __end_of_R1_BIT 7F81  
                             ___ftdiv@exp 00A5                        i2___llmod@dividend 000E  
                      i2___awdiv@dividend 0007                         ??_lcd_sendCommand 0091  
                         i2___ftpack@sign 0005                                 i2_isdigit 5456  
                       __size_of_INT0_ISR 0122                       __size_of__div_to_l_ 0188  
                       __size_of_INT1_ISR 0064                               ___ftmul@exp 00AD  
                          _TMR0_StopTimer 552A                    __end_of_TMR0_ReadTimer 5226  
                       SetRange@new_range 000B              __end_of_INTERRUPT_Initialize 5526  
                          __end_of___ftge 4868                            __end_of___wmul 529C  
                       __size_of_TMR0_ISR 0030                    ?_OSCILLATOR_Initialize 0001  
                          __end_of_fround 2FD2                          i2___wmul@product 0013  
                          __end_of_printf 5308                       start_initialization 51A2  
                       __size_ofi2___ftge 0090                        i2___awdiv@quotient 000D  
                       __size_ofi2___wmul 0026                  __size_of_TMR0_Initialize 0044  
         __size_of_PIN_MANAGER_Initialize 0030                       __end_of__tdiv_to_l_ 396E  
                             __lcd_Port@a 0090                           i2___fttol@sign1 0040  
                       __size_ofi2_fround 0246                                ?i2___awdiv 0007  
                              ?i2___ftadd 0015                                ?i2___awmod 0001  
                              ?i2___ftdiv 0030                                ?i2___ftneg 0001  
                              ?i2___lldiv 0001                                ?i2___ftmul 0021  
                              ?i2___llmod 000E                                ?i2___ftsub 0021  
                              ?i2___fttol 0037                               putch@txData 0091  
                   __end_of_EUSART1_Write 54C6                                ?i2__doprnt 0046  
                 __end_ofi2_EUSART1_Write 54FC                           ___llmod@divisor 00A1  
                         ___llmod@counter 00A5                    __end_of_TMR0_StopTimer 552E  
                              ?i2_isdigit 0001                               _cal_current 7F6D  
                                ??___ftge 0096                         __size_of_SetRange 01A4  
                         ?_TMR0_ReadTimer 0001                                  ??___wmul 00A2  
                             __doprnt@exp 0128                               __doprnt@val 012A  
                             __pdataBANK0 00CA                                  ??_fround 00B6  
              __end_of_EXT_INT_Initialize 54F0                                  ??_printf 0052  
                              fround@prec 0106                             ?i2__div_to_l_ 0001  
                       __size_of___ftpack 010C                         __size_of___lltoft 007C  
                             __pbssCOMRAM 0058                         __size_of___lwtoft 0024  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                            _isdigit$1291 0091                                 __lcd_Port 529C  
                                ?i2_scale 0030                         __size_of_lcd_init 007A  
                                ?i2_putch 0001                                 __doprnt@c 013B  
                               __doprnt@f 011B                     _TMR0_InterruptHandler 00CE  
                               __pnvBANK0 00CE                  __size_of_TMR0_StartTimer 0004  
                         lcd_sendString@a 0094                           lcd_sendString@i 0096  
                         ?_TMR0_StopTimer 0001                    _PIN_MANAGER_Initialize 5338  
                               __pintcode 0008                             __pmediumconst 7EF6  
                                ?___awdiv 0096                                  ?___ftadd 0107  
                                ?___awmod 0090                                  ?___ftdiv 0098  
                                ?___ftneg 0090                                  ?___lldiv 0090  
                                ?___ftmul 00A4                                  ?___llmod 009D  
                                ?___ftsub 0113                                 __npowers_ 7F1F  
                                ?___fttol 0104                                  ?__doprnt 0119  
                               _lcd_clear 54C6              ??_INTERRUPT_InterruptManager 0082  
                        __CFG_PRICLKEN$ON 000000                               __tdiv_to_l_ 37D0  
                          ??i2__div_to_l_ 0007                              ??__div_to_l_ 0096  
                                _BAUDCON1 000FB8                                  ?_isdigit 0001  
                 __size_of_lcd_sendString 0048                               ??i2___awdiv 000B  
                             ??i2___ftadd 001B                               ??i2___awmod 0005  
                                ?_sprintf 013C                               ??i2___ftdiv 0036  
                             ??i2___ftneg 0004                               ??i2___lldiv 0009  
                             ??i2___ftmul 0027                            __size_of_scale 04AE  
                             ??i2___llmod 0016                               ??i2___ftsub 0027  
                             ??i2___fttol 003B                                ?__lcd_Port 0001  
                          __size_of_putch 0014                      _INTERRUPT_Initialize 5522  
                             ??i2__doprnt 004C                         ??_TMR0_Initialize 0092  
                                _INT0_ISR 42A4                          ?i2_EUSART1_Write 0001  
                                _INT1_ISR 4F2E                            ___wmul@product 00A2  
                        i2__doprnt@tmpval 0069                                  _LATAbits 000F89  
                                _LATCbits 000F8B                               ??i2_isdigit 0001  
                       i2_TMR0_StartTimer 5526       __size_of_INTERRUPT_InterruptManager 0098  
              ??_TMR0_SetInterruptHandler 0092                                  _PIR1bits 000F9E  
                      __end_of__div_to_l_ 3AF6                                  i2u712_40 516C  
                                i2u712_46 516E                                  i2u561_44 3648  
                                i2u561_45 3644                                  i2u546_40 4610  
                                i2u570_44 3786                                  i2u562_44 3666  
                                i2u570_45 3782                                  i2u562_45 3662  
                                i2u546_45 4608                                  i2u571_44 37C4  
                                i2u563_44 3684                                  i2u571_45 37C0  
                                i2u563_45 3680                                  i2u564_44 36A2  
                                i2u564_45 369E                                  i2u565_44 36C0  
                                i2u565_45 36BC                                  i2u566_44 36EA  
                                i2u566_45 36E6                                  i2u567_44 3708  
                                i2u567_45 3704                                  i2u568_44 3726  
                                i2u568_45 3722                                  i2u569_44 3744  
                                i2u569_45 3740                             ??_TMR0_Reload 0001  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                      ?i2_TMR0_StartTimer 0001                                  _TMR0_ISR 5368  
                         i2__div_to_l_@f1 0001                           i2__div_to_l_@f2 0004  
                                _RSET_BIT 7F81                                ?_lcd_clear 0001  
                TMR0_ReadTimer@readValLow 0009                       ??i2_TMR0_StartTimer 0001  
                       ___wmul@multiplier 009E                                  i2___ftge 4BCC  
                                i2___wmul 53E8                         i2___awdiv@divisor 0009  
                                i2_fround 323A                         i2___awdiv@counter 000B  
                         _lcd_sendCommand 53C2                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                                 copy_data0 51B6  
                   ?_INTERRUPT_Initialize 0001                        i2___awmod@dividend 0001  
                        __size_ofi2_scale 03F0                 __end_ofi2_TMR0_StartTimer 552A  
                        __size_ofi2_putch 000A                                  _SetRange 362C  
                                __Hrparam 0000                                  __Lrparam 0000  
                      __CFG_BOREN$SBORDIS 000000                         __CFG_P2BMX$PORTB5 000000  
                 ??_OSCILLATOR_Initialize 0090                         ??_TMR0_StartTimer 0090  
                        __size_of___awdiv 00BE                          __size_of___ftadd 0268  
                        __size_of___awmod 00A2                          __size_of___ftdiv 014C  
                        __size_of___ftneg 0030                     i2___wmul@multiplicand 0011  
                        __size_of___lldiv 00BC                          __size_of___ftmul 015E  
                        __size_of___llmod 009A                          __size_of___ftsub 004C  
                        __size_of___fttol 0144               __size_of_EUSART1_Initialize 0016  
                                ___ftpack 43C6                          __size_of__doprnt 126C  
                             _fround$1742 0103                               _fround$1743 0100  
                                ___lltoft 4D62                     __end_ofi2__tdiv_to_l_ 417C  
                     __end_of_TMR0_Reload 551A                           _putch$intlevel0 54AA  
                                ___lwtoft 5432                                  _cal_mode 005B  
                        __size_of_isdigit 002A                                  __ptext10 4A90  
                                __ptext11 4868                                  __ptext20 5308  
                                __ptext12 37D0                                  __ptext21 47A0  
                                __ptext13 396E                                  __ptext30 5474  
                                __ptext22 508C                                  __ptext14 4D62  
                                __ptext31 511A                                  __ptext23 50D4  
                                __ptext15 4B32                                  __ptext40 5368  
                                __ptext32 551E                                  __ptext24 4DDE  
                                __ptext16 4926                                  __ptext41 515E  
                                __ptext33 54FC                                  __ptext25 54C6  
                                __ptext17 3F06                                  __ptext50 54F0  
                                __ptext42 4F2E                                  __ptext34 5338  
                                __ptext26 53C2                                  __ptext18 5040  
                                __ptext51 5456                                  __ptext43 42A4  
                                __ptext35 54D4                                  __ptext27 529C  
                                __ptext19 2FD2                                  __ptext60 4EC8  
                                __ptext52 323A                                  __ptext44 46BA  
                                __ptext36 5522                                  __ptext28 3DBA  
                                __ptext61 4CE0                                  __ptext53 53E8  
                                __ptext45 5526                                  __ptext37 54E2  
                                __ptext29 43C6                                  __ptext70 5510  
                                __ptext62 45C6                                  __ptext54 44D2  
                                __ptext46 52D2                                  __ptext38 548E  
                                __ptext71 51E4                                  __ptext63 5226  
                                __ptext55 4E58                                  __ptext47 1310  
                                __ptext72 362C                                  __ptext64 3480  
                                __ptext56 4C5C                                  __ptext48 2936  
                                __ptext73 0000                                  __ptext65 540E  
                                __ptext57 404A                                  __ptext49 5506  
                                __ptext66 4BCC                                  __ptext58 417C  
                                __ptext67 5432                                  __ptext59 4F92  
                                __ptext68 49E2                                  __ptext69 552A  
                                __powers_ 7F46                                  _lcd_init 4DDE  
                             ??__lcd_Port 0090                          __size_of_sprintf 0052  
                          i2_isdigit$1291 0002                             __size_of_main 0166  
                        ??_TMR0_ReadTimer 0003                      __end_ofi2__div_to_l_ 42A4  
    __end_of_TMR0_DefaultInterruptHandler 51A2     __size_of_TMR0_DefaultInterruptHandler 0044  
            _TMR0_DefaultInterruptHandler 515E                           i2__doprnt@width 0070  
                                int$flags 005E        __end_of_INTERRUPT_InterruptManager 00A0  
              _INTERRUPT_InterruptManager 0008                               ??_lcd_clear 0093  
                          __doprnt@tmpval 012E                   __end_of_lcd_sendCommand 53E8  
                       i2___awmod@divisor 0003                         i2___awmod@counter 0005  
                              _INTCONbits 000FF2                            _lcd_sendString 508C  
                                isdigit@c 0092                    ??_INTERRUPT_Initialize 0090  
                                scale@scl 0103                        _EXT_INT_Initialize 54E2  
                                intlevel2 0000                                 sprintf@ap 0143  
                               sprintf@pb 0145                          ??_TMR0_StopTimer 0001  
                        __tdiv_to_l_@exp1 009E                          __tdiv_to_l_@cntr 009D  
                               sprintf@wh 013C                          __tdiv_to_l_@quot 0099  
                        ___lldiv@dividend 0090                   ?_PIN_MANAGER_Initialize 0001  
              __size_ofi2_TMR0_StartTimer 0004                       ?_EXT_INT_Initialize 0001  
                              _RCSTA1bits 000FAB             ?_TMR0_DefaultInterruptHandler 0001  
                             _TMR0_Reload 5510                                  printf@ap 0052  
                                printf@pb 0054                    __size_of_EUSART1_Write 000E  
                            ?__tdiv_to_l_ 0090                    __end_of_lcd_sendString 50D4  
                    ??_EXT_INT_Initialize 0090                                  sprintf@f 013E  
                        ___lldiv@quotient 0098                           _TMR0_Initialize 511A  
                       __CFG_T3CMX$PORTC0 000000            __end_of_PIN_MANAGER_Initialize 5368  
                       i2__div_to_l_@exp1 000C                         i2__div_to_l_@cntr 000B  
                       i2__div_to_l_@quot 0007  
