

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sun Jan 15 18:24:48 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1
    67                           	psect	text55,global,reloc=2,class=CODE,delta=1
    68                           	psect	text56,global,reloc=2,class=CODE,delta=1
    69                           	psect	text57,global,reloc=2,class=CODE,delta=1
    70                           	psect	text58,global,reloc=2,class=CODE,delta=1
    71                           	psect	text59,global,reloc=2,class=CODE,delta=1
    72                           	psect	text60,global,reloc=2,class=CODE,delta=1
    73                           	psect	text61,global,reloc=2,class=CODE,delta=1
    74                           	psect	text62,global,reloc=2,class=CODE,delta=1
    75                           	psect	text63,global,reloc=2,class=CODE,delta=1
    76                           	psect	text64,global,reloc=2,class=CODE,delta=1
    77                           	psect	text65,global,reloc=2,class=CODE,delta=1
    78                           	psect	text66,global,reloc=2,class=CODE,delta=1
    79                           	psect	text67,global,reloc=2,class=CODE,delta=1
    80                           	psect	text68,global,reloc=2,class=CODE,delta=1
    81                           	psect	text69,global,reloc=2,class=CODE,delta=1
    82                           	psect	text70,global,reloc=2,class=CODE,delta=1
    83                           	psect	text71,global,reloc=2,class=CODE,delta=1
    84                           	psect	text72,global,reloc=2,class=CODE,delta=1
    85                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    86                           	psect	text73,global,reloc=2,class=CODE,delta=1
    87                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    88                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    89  0000                     
    90 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
    91  0000                     
    92                           	psect	smallconst
    93  000600                     __psmallconst:
    94                           	opt stack 0
    95  000600  00                 	db	0
    96  000601                     _dpowers:
    97                           	opt stack 0
    98  000601  0001               	dw	1
    99  000603  0000               	dw	0
   100  000605  000A               	dw	10
   101  000607  0000               	dw	0
   102  000609  0064               	dw	100
   103  00060B  0000               	dw	0
   104  00060D  03E8               	dw	1000
   105  00060F  0000               	dw	0
   106  000611  2710               	dw	10000
   107  000613  0000               	dw	0
   108  000615  86A0               	dw	34464
   109  000617  0001               	dw	1
   110  000619  4240               	dw	16960
   111  00061B  000F               	dw	15
   112  00061D  9680               	dw	38528
   113  00061F  0098               	dw	152
   114  000621  E100               	dw	57600
   115  000623  05F5               	dw	1525
   116  000625  CA00               	dw	51712
   117  000627  3B9A               	dw	15258
   118  000629                     __end_of_dpowers:
   119                           	opt stack 0
   120  000629                     __npowers_:
   121                           	opt stack 0
   122  000629  00                 	db	0
   123  00062A  80                 	db	128
   124  00062B  3F                 	db	63
   125  00062C  CD                 	db	205
   126  00062D  CC                 	db	204
   127  00062E  3D                 	db	61
   128  00062F  D7                 	db	215
   129  000630  23                 	db	35
   130  000631  3C                 	db	60
   131  000632  12                 	db	18
   132  000633  83                 	db	131
   133  000634  3A                 	db	58
   134  000635  B7                 	db	183
   135  000636  D1                 	db	209
   136  000637  38                 	db	56
   137  000638  C6                 	db	198
   138  000639  27                 	db	39
   139  00063A  37                 	db	55
   140  00063B  38                 	db	56
   141  00063C  86                 	db	134
   142  00063D  35                 	db	53
   143  00063E  C0                 	db	192
   144  00063F  D6                 	db	214
   145  000640  33                 	db	51
   146  000641  CC                 	db	204
   147  000642  2B                 	db	43
   148  000643  32                 	db	50
   149  000644  70                 	db	112
   150  000645  89                 	db	137
   151  000646  30                 	db	48
   152  000647  E7                 	db	231
   153  000648  DB                 	db	219
   154  000649  2E                 	db	46
   155  00064A  E5                 	db	229
   156  00064B  3C                 	db	60
   157  00064C  1E                 	db	30
   158  00064D  42                 	db	66
   159  00064E  A2                 	db	162
   160  00064F  0D                 	db	13
   161  000650                     __end_of__npowers_:
   162                           	opt stack 0
   163  000650                     __powers_:
   164                           	opt stack 0
   165  000650  00                 	db	0
   166  000651  80                 	db	128
   167  000652  3F                 	db	63
   168  000653  00                 	db	0
   169  000654  20                 	db	32
   170  000655  41                 	db	65
   171  000656  00                 	db	0
   172  000657  C8                 	db	200
   173  000658  42                 	db	66
   174  000659  00                 	db	0
   175  00065A  7A                 	db	122
   176  00065B  44                 	db	68
   177  00065C  40                 	db	64
   178  00065D  1C                 	db	28
   179  00065E  46                 	db	70
   180  00065F  50                 	db	80
   181  000660  C3                 	db	195
   182  000661  47                 	db	71
   183  000662  24                 	db	36
   184  000663  74                 	db	116
   185  000664  49                 	db	73
   186  000665  97                 	db	151
   187  000666  18                 	db	24
   188  000667  4B                 	db	75
   189  000668  BC                 	db	188
   190  000669  BE                 	db	190
   191  00066A  4C                 	db	76
   192  00066B  6B                 	db	107
   193  00066C  6E                 	db	110
   194  00066D  4E                 	db	78
   195  00066E  03                 	db	3
   196  00066F  15                 	db	21
   197  000670  50                 	db	80
   198  000671  79                 	db	121
   199  000672  AD                 	db	173
   200  000673  60                 	db	96
   201  000674  F3                 	db	243
   202  000675  49                 	db	73
   203  000676  71                 	db	113
   204  000677                     __end_of__powers_:
   205                           	opt stack 0
   206  000677                     STR_1:
   207  000677  43                 	db	67	;'C'
   208  000678  61                 	db	97	;'a'
   209  000679  70                 	db	112	;'p'
   210  00067A  61                 	db	97	;'a'
   211  00067B  63                 	db	99	;'c'
   212  00067C  69                 	db	105	;'i'
   213  00067D  74                 	db	116	;'t'
   214  00067E  61                 	db	97	;'a'
   215  00067F  6E                 	db	110	;'n'
   216  000680  63                 	db	99	;'c'
   217  000681  65                 	db	101	;'e'
   218  000682  3A                 	db	58	;':'
   219  000683  20                 	db	32
   220  000684  25                 	db	37
   221  000685  30                 	db	48	;'0'
   222  000686  2E                 	db	46
   223  000687  32                 	db	50	;'2'
   224  000688  66                 	db	102	;'f'
   225  000689  20                 	db	32
   226  00068A  70                 	db	112	;'p'
   227  00068B  46                 	db	70	;'F'
   228  00068C  20                 	db	32
   229  00068D  28                 	db	40
   230  00068E  43                 	db	67	;'C'
   231  00068F  6F                 	db	111	;'o'
   232  000690  75                 	db	117	;'u'
   233  000691  6E                 	db	110	;'n'
   234  000692  74                 	db	116	;'t'
   235  000693  3A                 	db	58	;':'
   236  000694  20                 	db	32
   237  000695  25                 	db	37
   238  000696  75                 	db	117	;'u'
   239  000697  29                 	db	41
   240  000698  0D                 	db	13
   241  000699  0A                 	db	10
   242  00069A  00                 	db	0
   243  00069B  25                 	db	37
   244  00069C  6C                 	db	108	;'l'
   245  00069D  75                 	db	117	;'u'
   246  00069E  2E                 	db	46
   247  00069F  25                 	db	37
   248  0006A0  36                 	db	54	;'6'
   249  0006A1  2E                 	db	46
   250  0006A2  36                 	db	54	;'6'
   251  0006A3  6C                 	db	108	;'l'
   252  0006A4  75                 	db	117	;'u'
   253  0006A5  00                 	db	0
   254  0006A6                     STR_2:
   255  0006A6  43                 	db	67	;'C'
   256  0006A7  3A                 	db	58	;':'
   257  0006A8  25                 	db	37
   258  0006A9  31                 	db	49	;'1'
   259  0006AA  32                 	db	50	;'2'
   260  0006AB  2E                 	db	46
   261  0006AC  30                 	db	48	;'0'
   262  0006AD  66                 	db	102	;'f'
   263  0006AE  70                 	db	112	;'p'
   264  0006AF  46                 	db	70	;'F'
   265  0006B0  00                 	db	0
   266                           
   267                           ; #config settings
   268  0006B1  00                 	db	0	; dummy byte at the end
   269  0000                     
   270                           	psect	nvBANK0
   271  0000D4                     __pnvBANK0:
   272                           	opt stack 0
   273  0000D4                     _INT0_InterruptHandler:
   274                           	opt stack 0
   275  0000D4                     	ds	2
   276  0000D6                     _TMR0_InterruptHandler:
   277                           	opt stack 0
   278  0000D6                     	ds	2
   279  0000D8                     _timer0ReloadVal:
   280                           	opt stack 0
   281  0000D8                     	ds	2
   282  0000                     _ANSELA	set	3896
   283  0000                     _ANSELB	set	3897
   284  0000                     _ANSELC	set	3898
   285  0000                     _BAUDCON1	set	4024
   286  0000                     _INTCON2bits	set	4081
   287  0000                     _INTCONbits	set	4082
   288  0000                     _LATA	set	3977
   289  0000                     _LATAbits	set	3977
   290  0000                     _LATB	set	3978
   291  0000                     _LATBbits	set	3978
   292  0000                     _LATC	set	3979
   293  0000                     _OSCCON	set	4051
   294  0000                     _OSCCON2	set	4050
   295  0000                     _OSCTUNE	set	3995
   296  0000                     _PIR1bits	set	3998
   297  0000                     _RCONbits	set	4048
   298  0000                     _RCREG1	set	4014
   299  0000                     _RCSTA1	set	4011
   300  0000                     _RCSTA1bits	set	4011
   301  0000                     _SPBRG1	set	4015
   302  0000                     _SPBRGH1	set	4016
   303  0000                     _T0CON	set	4053
   304  0000                     _T0CONbits	set	4053
   305  0000                     _TMR0H	set	4055
   306  0000                     _TMR0L	set	4054
   307  0000                     _TRISA	set	3986
   308  0000                     _TRISB	set	3987
   309  0000                     _TRISC	set	3988
   310  0000                     _TXREG1	set	4013
   311  0000                     _TXSTA1	set	4012
   312  0000                     _WPUB	set	3937
   313                           
   314                           	psect	cinit
   315  005498                     __pcinit:
   316                           	opt stack 0
   317  005498                     start_initialization:
   318                           	opt stack 0
   319  005498                     __initialization:
   320                           	opt stack 0
   321                           
   322                           ; Clear objects allocated to BANK0 (22 bytes)
   323  005498  EE00  F0BE         	lfsr	0,__pbssBANK0
   324  00549C  0E16               	movlw	22
   325  00549E                     clear_0:
   326  00549E  6AEE               	clrf	postinc0,c
   327  0054A0  06E8               	decf	wreg,f,c
   328  0054A2  E1FD               	bnz	clear_0
   329  0054A4                     end_of_initialization:
   330                           	opt stack 0
   331  0054A4                     __end_of__initialization:
   332                           	opt stack 0
   333  0054A4  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   334  0054A6  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   335  0054A8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   336  0054AA  6EF8               	movwf	tblptru,c
   337  0054AC  0100               	movlb	0
   338  0054AE  EF03  F028         	goto	_main	;jump to C main() function
   339                           tblptru	equ	0xFF8
   340                           postinc0	equ	0xFEE
   341                           wreg	equ	0xFE8
   342                           
   343                           	psect	bssBANK0
   344  0000BE                     __pbssBANK0:
   345                           	opt stack 0
   346  0000BE                     _result:
   347                           	opt stack 0
   348  0000BE                     	ds	3
   349  0000C1                     ftoa@buf:
   350                           	opt stack 0
   351  0000C1                     	ds	17
   352  0000D2                     _reading:
   353                           	opt stack 0
   354  0000D2                     	ds	2
   355                           tblptru	equ	0xFF8
   356                           postinc0	equ	0xFEE
   357                           wreg	equ	0xFE8
   358                           
   359                           	psect	cstackBANK1
   360  000100                     __pcstackBANK1:
   361                           	opt stack 0
   362  000100                     ?___ftsub:
   363                           	opt stack 0
   364  000100                     ___ftsub@f1:
   365                           	opt stack 0
   366                           
   367                           ; 3 bytes @ 0x0
   368  000100                     	ds	3
   369  000103                     ___ftsub@f2:
   370                           	opt stack 0
   371                           
   372                           ; 3 bytes @ 0x3
   373  000103                     	ds	3
   374  000106                     ?__doprnt:
   375                           	opt stack 0
   376  000106                     __doprnt@pb:
   377                           	opt stack 0
   378                           
   379                           ; 2 bytes @ 0x6
   380  000106                     	ds	2
   381  000108                     __doprnt@f:
   382                           	opt stack 0
   383                           
   384                           ; 2 bytes @ 0x8
   385  000108                     	ds	2
   386  00010A                     __doprnt@ap:
   387                           	opt stack 0
   388                           
   389                           ; 2 bytes @ 0xA
   390  00010A                     	ds	2
   391  00010C                     ??__doprnt:
   392                           
   393                           ; 1 bytes @ 0xC
   394  00010C                     	ds	6
   395  000112                     __doprnt$1621:
   396                           	opt stack 0
   397                           
   398                           ; 3 bytes @ 0x12
   399  000112                     	ds	3
   400  000115                     __doprnt@val:
   401                           	opt stack 0
   402                           
   403                           ; 4 bytes @ 0x15
   404  000115                     	ds	4
   405  000119                     __doprnt@exp:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x19
   409  000119                     	ds	2
   410  00011B                     __doprnt@tmpval:
   411                           	opt stack 0
   412                           
   413                           ; 4 bytes @ 0x1B
   414  00011B                     	ds	4
   415  00011F                     __doprnt@flag:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x1F
   419  00011F                     	ds	2
   420  000121                     __doprnt@width:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x21
   424  000121                     	ds	2
   425  000123                     __doprnt@fval:
   426                           	opt stack 0
   427                           
   428                           ; 3 bytes @ 0x23
   429  000123                     	ds	3
   430  000126                     __doprnt@prec:
   431                           	opt stack 0
   432                           
   433                           ; 2 bytes @ 0x26
   434  000126                     	ds	2
   435  000128                     __doprnt@c:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0x28
   439  000128                     	ds	1
   440  000129                     ?_sprintf:
   441                           	opt stack 0
   442  000129                     sprintf@wh:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0x29
   446  000129                     	ds	2
   447  00012B                     sprintf@f:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x2B
   451  00012B                     	ds	5
   452  000130                     sprintf@ap:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0x30
   456  000130                     	ds	2
   457  000132                     sprintf@pb:
   458                           	opt stack 0
   459                           
   460                           ; 4 bytes @ 0x32
   461  000132                     	ds	4
   462  000136                     main@cap_string:
   463                           	opt stack 0
   464                           
   465                           ; 16 bytes @ 0x36
   466  000136                     	ds	16
   467                           tblptru	equ	0xFF8
   468                           postinc0	equ	0xFEE
   469                           wreg	equ	0xFE8
   470                           
   471                           	psect	cstackBANK0
   472  000060                     __pcstackBANK0:
   473                           	opt stack 0
   474  000060                     i2__doprnt$1793:
   475                           	opt stack 0
   476                           
   477                           ; 3 bytes @ 0x0
   478  000060                     	ds	3
   479  000063                     i2__doprnt@val:
   480                           	opt stack 0
   481                           
   482                           ; 4 bytes @ 0x3
   483  000063                     	ds	4
   484  000067                     i2__doprnt@exp:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x7
   488  000067                     	ds	2
   489  000069                     i2__doprnt@tmpval:
   490                           	opt stack 0
   491                           
   492                           ; 4 bytes @ 0x9
   493  000069                     	ds	4
   494  00006D                     i2__doprnt@fval:
   495                           	opt stack 0
   496                           
   497                           ; 3 bytes @ 0xD
   498  00006D                     	ds	3
   499  000070                     i2__doprnt@flag:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x10
   503  000070                     	ds	2
   504  000072                     i2__doprnt@width:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x12
   508  000072                     	ds	2
   509  000074                     i2__doprnt@prec:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0x14
   513  000074                     	ds	2
   514  000076                     i2__doprnt@c:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x16
   518  000076                     	ds	1
   519  000077                     ??_INTERRUPT_InterruptManager:
   520                           
   521                           ; 1 bytes @ 0x17
   522  000077                     	ds	14
   523  000085                     ??_isdigit:
   524  000085                     ?___awmod:
   525                           	opt stack 0
   526  000085                     ?___ftpack:
   527                           	opt stack 0
   528  000085                     ?___ftneg:
   529                           	opt stack 0
   530  000085                     ?__tdiv_to_l_:
   531                           	opt stack 0
   532  000085                     ?__div_to_l_:
   533                           	opt stack 0
   534  000085                     ?___lldiv:
   535                           	opt stack 0
   536  000085                     EUSART1_Write@txData:
   537                           	opt stack 0
   538  000085                     __lcd_Port@a:
   539                           	opt stack 0
   540  000085                     INT0_SetInterruptHandler@InterruptHandler:
   541                           	opt stack 0
   542  000085                     TMR0_SetInterruptHandler@InterruptHandler:
   543                           	opt stack 0
   544  000085                     ___awmod@dividend:
   545                           	opt stack 0
   546  000085                     __div_to_l_@f1:
   547                           	opt stack 0
   548  000085                     ___ftpack@arg:
   549                           	opt stack 0
   550  000085                     __tdiv_to_l_@f1:
   551                           	opt stack 0
   552  000085                     ___ftge@ff1:
   553                           	opt stack 0
   554  000085                     ___ftneg@f1:
   555                           	opt stack 0
   556  000085                     ___lldiv@dividend:
   557                           	opt stack 0
   558                           
   559                           ; 4 bytes @ 0x25
   560  000085                     	ds	1
   561  000086                     ??_lcd_sendCommand:
   562  000086                     putch@txData:
   563                           	opt stack 0
   564  000086                     lcd_sendChar@temp:
   565                           	opt stack 0
   566  000086                     _isdigit$1164:
   567                           	opt stack 0
   568                           
   569                           ; 1 bytes @ 0x26
   570  000086                     	ds	1
   571  000087                     ??_TMR0_Initialize:
   572  000087                     lcd_sendCommand@a:
   573                           	opt stack 0
   574  000087                     lcd_sendChar@y:
   575                           	opt stack 0
   576  000087                     isdigit@c:
   577                           	opt stack 0
   578  000087                     ___awmod@divisor:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0x27
   582  000087                     	ds	1
   583  000088                     ??_lcd_init:
   584  000088                     lcd_setPosition@y:
   585                           	opt stack 0
   586  000088                     lcd_sendChar@a:
   587                           	opt stack 0
   588  000088                     ___ftpack@exp:
   589                           	opt stack 0
   590  000088                     __div_to_l_@f2:
   591                           	opt stack 0
   592  000088                     __tdiv_to_l_@f2:
   593                           	opt stack 0
   594  000088                     ___ftge@ff2:
   595                           	opt stack 0
   596                           
   597                           ; 3 bytes @ 0x28
   598  000088                     	ds	1
   599  000089                     lcd_setPosition@x:
   600                           	opt stack 0
   601  000089                     ___awmod@counter:
   602                           	opt stack 0
   603  000089                     ___ftpack@sign:
   604                           	opt stack 0
   605  000089                     lcd_sendString@a:
   606                           	opt stack 0
   607  000089                     ___lldiv@divisor:
   608                           	opt stack 0
   609                           
   610                           ; 4 bytes @ 0x29
   611  000089                     	ds	1
   612  00008A                     ??___ftpack:
   613  00008A                     lcd_setPosition@i:
   614                           	opt stack 0
   615  00008A                     ___awmod@sign:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0x2A
   619  00008A                     	ds	1
   620  00008B                     ??__tdiv_to_l_:
   621  00008B                     ??___ftge:
   622  00008B                     ?___awdiv:
   623                           	opt stack 0
   624  00008B                     lcd_setPosition@j:
   625                           	opt stack 0
   626  00008B                     lcd_sendString@i:
   627                           	opt stack 0
   628  00008B                     ___awdiv@dividend:
   629                           	opt stack 0
   630  00008B                     __div_to_l_@quot:
   631                           	opt stack 0
   632                           
   633                           ; 4 bytes @ 0x2B
   634  00008B                     	ds	1
   635  00008C                     lcd_setPosition@temp:
   636                           	opt stack 0
   637                           
   638                           ; 1 bytes @ 0x2C
   639  00008C                     	ds	1
   640  00008D                     ?___lltoft:
   641                           	opt stack 0
   642  00008D                     lcd_sendStringToPos@y:
   643                           	opt stack 0
   644  00008D                     ___awdiv@divisor:
   645                           	opt stack 0
   646  00008D                     ___lldiv@quotient:
   647                           	opt stack 0
   648  00008D                     ___lltoft@c:
   649                           	opt stack 0
   650                           
   651                           ; 4 bytes @ 0x2D
   652  00008D                     	ds	1
   653  00008E                     lcd_sendStringToPos@charString:
   654                           	opt stack 0
   655  00008E                     __tdiv_to_l_@quot:
   656                           	opt stack 0
   657                           
   658                           ; 4 bytes @ 0x2E
   659  00008E                     	ds	1
   660  00008F                     ___awdiv@counter:
   661                           	opt stack 0
   662  00008F                     __div_to_l_@cntr:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x2F
   666  00008F                     	ds	1
   667  000090                     lcd_sendStringToPos@x:
   668                           	opt stack 0
   669  000090                     ___awdiv@sign:
   670                           	opt stack 0
   671  000090                     __div_to_l_@exp1:
   672                           	opt stack 0
   673                           
   674                           ; 1 bytes @ 0x30
   675  000090                     	ds	1
   676  000091                     ??___lltoft:
   677  000091                     ___lldiv@counter:
   678                           	opt stack 0
   679  000091                     ___awdiv@quotient:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0x31
   683  000091                     	ds	1
   684  000092                     ?___llmod:
   685                           	opt stack 0
   686  000092                     __tdiv_to_l_@cntr:
   687                           	opt stack 0
   688  000092                     ___llmod@dividend:
   689                           	opt stack 0
   690                           
   691                           ; 4 bytes @ 0x32
   692  000092                     	ds	1
   693  000093                     ?___wmul:
   694                           	opt stack 0
   695  000093                     __tdiv_to_l_@exp1:
   696                           	opt stack 0
   697  000093                     ___wmul@multiplier:
   698                           	opt stack 0
   699                           
   700                           ; 2 bytes @ 0x33
   701  000093                     	ds	2
   702  000095                     ___lltoft@exp:
   703                           	opt stack 0
   704  000095                     ___wmul@multiplicand:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x35
   708  000095                     	ds	1
   709  000096                     ___llmod@divisor:
   710                           	opt stack 0
   711                           
   712                           ; 4 bytes @ 0x36
   713  000096                     	ds	1
   714  000097                     ___wmul@product:
   715                           	opt stack 0
   716                           
   717                           ; 2 bytes @ 0x37
   718  000097                     	ds	2
   719  000099                     ?___ftmul:
   720                           	opt stack 0
   721  000099                     ___ftmul@f1:
   722                           	opt stack 0
   723                           
   724                           ; 3 bytes @ 0x39
   725  000099                     	ds	1
   726  00009A                     ___llmod@counter:
   727                           	opt stack 0
   728                           
   729                           ; 1 bytes @ 0x3A
   730  00009A                     	ds	2
   731  00009C                     ___ftmul@f2:
   732                           	opt stack 0
   733                           
   734                           ; 3 bytes @ 0x3C
   735  00009C                     	ds	3
   736  00009F                     ??___ftmul:
   737                           
   738                           ; 1 bytes @ 0x3F
   739  00009F                     	ds	3
   740  0000A2                     ___ftmul@exp:
   741                           	opt stack 0
   742                           
   743                           ; 1 bytes @ 0x42
   744  0000A2                     	ds	1
   745  0000A3                     ___ftmul@f3_as_product:
   746                           	opt stack 0
   747                           
   748                           ; 3 bytes @ 0x43
   749  0000A3                     	ds	3
   750  0000A6                     ___ftmul@cntr:
   751                           	opt stack 0
   752                           
   753                           ; 1 bytes @ 0x46
   754  0000A6                     	ds	1
   755  0000A7                     ___ftmul@sign:
   756                           	opt stack 0
   757                           
   758                           ; 1 bytes @ 0x47
   759  0000A7                     	ds	1
   760  0000A8                     ?_fround:
   761                           	opt stack 0
   762  0000A8                     ?_scale:
   763                           	opt stack 0
   764                           
   765                           ; 3 bytes @ 0x48
   766  0000A8                     	ds	3
   767  0000AB                     _fround$1619:
   768                           	opt stack 0
   769  0000AB                     _scale$1620:
   770                           	opt stack 0
   771                           
   772                           ; 3 bytes @ 0x4B
   773  0000AB                     	ds	3
   774  0000AE                     scale@scl:
   775                           	opt stack 0
   776  0000AE                     _fround$1618:
   777                           	opt stack 0
   778                           
   779                           ; 3 bytes @ 0x4E
   780  0000AE                     	ds	1
   781  0000AF                     ?___fttol:
   782                           	opt stack 0
   783  0000AF                     ___fttol@f1:
   784                           	opt stack 0
   785                           
   786                           ; 3 bytes @ 0x4F
   787  0000AF                     	ds	2
   788  0000B1                     fround@prec:
   789                           	opt stack 0
   790                           
   791                           ; 1 bytes @ 0x51
   792  0000B1                     	ds	1
   793  0000B2                     ?___ftadd:
   794                           	opt stack 0
   795  0000B2                     ___ftadd@f1:
   796                           	opt stack 0
   797                           
   798                           ; 3 bytes @ 0x52
   799  0000B2                     	ds	1
   800  0000B3                     ??___fttol:
   801                           
   802                           ; 1 bytes @ 0x53
   803  0000B3                     	ds	2
   804  0000B5                     ___ftadd@f2:
   805                           	opt stack 0
   806                           
   807                           ; 3 bytes @ 0x55
   808  0000B5                     	ds	3
   809  0000B8                     ??___ftadd:
   810  0000B8                     ___fttol@sign1:
   811                           	opt stack 0
   812                           
   813                           ; 1 bytes @ 0x58
   814  0000B8                     	ds	1
   815  0000B9                     ___fttol@lval:
   816                           	opt stack 0
   817                           
   818                           ; 4 bytes @ 0x59
   819  0000B9                     	ds	2
   820  0000BB                     ___ftadd@sign:
   821                           	opt stack 0
   822                           
   823                           ; 1 bytes @ 0x5B
   824  0000BB                     	ds	1
   825  0000BC                     ___ftadd@exp2:
   826                           	opt stack 0
   827                           
   828                           ; 1 bytes @ 0x5C
   829  0000BC                     	ds	1
   830  0000BD                     ___ftadd@exp1:
   831                           	opt stack 0
   832  0000BD                     ___fttol@exp1:
   833                           	opt stack 0
   834                           
   835                           ; 1 bytes @ 0x5D
   836  0000BD                     	ds	1
   837  0000BE                     tblptru	equ	0xFF8
   838                           postinc0	equ	0xFEE
   839                           wreg	equ	0xFE8
   840                           
   841                           ; 1 bytes @ 0x5E
   842                           
   843                           	psect	cstackCOMRAM
   844  000001                     __pcstackCOMRAM:
   845                           	opt stack 0
   846  000001                     ??_TMR0_DefaultInterruptHandler:
   847  000001                     ??i2_isdigit:
   848  000001                     ?_TMR0_ReadTimer:
   849                           	opt stack 0
   850  000001                     ?i2___awmod:
   851                           	opt stack 0
   852  000001                     ?i2___ftpack:
   853                           	opt stack 0
   854  000001                     ?i2___ftneg:
   855                           	opt stack 0
   856  000001                     ?i2__div_to_l_:
   857                           	opt stack 0
   858  000001                     ?i2__tdiv_to_l_:
   859                           	opt stack 0
   860  000001                     ?i2___lldiv:
   861                           	opt stack 0
   862  000001                     i2EUSART1_Write@txData:
   863                           	opt stack 0
   864  000001                     i2___awmod@dividend:
   865                           	opt stack 0
   866  000001                     i2__div_to_l_@f1:
   867                           	opt stack 0
   868  000001                     i2___ftpack@arg:
   869                           	opt stack 0
   870  000001                     i2__tdiv_to_l_@f1:
   871                           	opt stack 0
   872  000001                     i2___ftge@ff1:
   873                           	opt stack 0
   874  000001                     i2___ftneg@f1:
   875                           	opt stack 0
   876  000001                     i2___lldiv@dividend:
   877                           	opt stack 0
   878                           
   879                           ; 4 bytes @ 0x0
   880  000001                     	ds	1
   881  000002                     i2putch@txData:
   882                           	opt stack 0
   883  000002                     i2_isdigit$1164:
   884                           	opt stack 0
   885                           
   886                           ; 1 bytes @ 0x1
   887  000002                     	ds	1
   888  000003                     ??_TMR0_ReadTimer:
   889  000003                     i2isdigit@c:
   890                           	opt stack 0
   891  000003                     i2___awmod@divisor:
   892                           	opt stack 0
   893                           
   894                           ; 2 bytes @ 0x2
   895  000003                     	ds	1
   896  000004                     i2___ftpack@exp:
   897                           	opt stack 0
   898  000004                     i2__div_to_l_@f2:
   899                           	opt stack 0
   900  000004                     i2__tdiv_to_l_@f2:
   901                           	opt stack 0
   902  000004                     i2___ftge@ff2:
   903                           	opt stack 0
   904                           
   905                           ; 3 bytes @ 0x3
   906  000004                     	ds	1
   907  000005                     i2___awmod@counter:
   908                           	opt stack 0
   909  000005                     i2___ftpack@sign:
   910                           	opt stack 0
   911  000005                     i2___lldiv@divisor:
   912                           	opt stack 0
   913                           
   914                           ; 4 bytes @ 0x4
   915  000005                     	ds	1
   916  000006                     ??i2___ftpack:
   917  000006                     i2___awmod@sign:
   918                           	opt stack 0
   919                           
   920                           ; 1 bytes @ 0x5
   921  000006                     	ds	1
   922  000007                     ??i2__tdiv_to_l_:
   923  000007                     ??i2___ftge:
   924  000007                     ?i2___awdiv:
   925                           	opt stack 0
   926  000007                     TMR0_ReadTimer@readVal:
   927                           	opt stack 0
   928  000007                     i2___awdiv@dividend:
   929                           	opt stack 0
   930  000007                     i2__div_to_l_@quot:
   931                           	opt stack 0
   932                           
   933                           ; 4 bytes @ 0x6
   934  000007                     	ds	2
   935  000009                     ?___lwtoft:
   936                           	opt stack 0
   937  000009                     ?i2___lltoft:
   938                           	opt stack 0
   939  000009                     TMR0_ReadTimer@readValLow:
   940                           	opt stack 0
   941  000009                     ___lwtoft@c:
   942                           	opt stack 0
   943  000009                     i2___awdiv@divisor:
   944                           	opt stack 0
   945  000009                     i2___lldiv@quotient:
   946                           	opt stack 0
   947  000009                     i2___lltoft@c:
   948                           	opt stack 0
   949                           
   950                           ; 4 bytes @ 0x8
   951  000009                     	ds	1
   952  00000A                     TMR0_ReadTimer@readValHigh:
   953                           	opt stack 0
   954  00000A                     i2__tdiv_to_l_@quot:
   955                           	opt stack 0
   956                           
   957                           ; 4 bytes @ 0x9
   958  00000A                     	ds	1
   959  00000B                     i2___awdiv@counter:
   960                           	opt stack 0
   961  00000B                     i2__div_to_l_@cntr:
   962                           	opt stack 0
   963                           
   964                           ; 1 bytes @ 0xA
   965  00000B                     	ds	1
   966  00000C                     i2___awdiv@sign:
   967                           	opt stack 0
   968  00000C                     i2__div_to_l_@exp1:
   969                           	opt stack 0
   970                           
   971                           ; 1 bytes @ 0xB
   972  00000C                     	ds	1
   973  00000D                     ??i2___lltoft:
   974  00000D                     i2___lldiv@counter:
   975                           	opt stack 0
   976  00000D                     i2___awdiv@quotient:
   977                           	opt stack 0
   978                           
   979                           ; 2 bytes @ 0xC
   980  00000D                     	ds	1
   981  00000E                     ?i2___llmod:
   982                           	opt stack 0
   983  00000E                     i2__tdiv_to_l_@cntr:
   984                           	opt stack 0
   985  00000E                     i2___llmod@dividend:
   986                           	opt stack 0
   987                           
   988                           ; 4 bytes @ 0xD
   989  00000E                     	ds	1
   990  00000F                     ?i2___wmul:
   991                           	opt stack 0
   992  00000F                     i2__tdiv_to_l_@exp1:
   993                           	opt stack 0
   994  00000F                     i2___wmul@multiplier:
   995                           	opt stack 0
   996                           
   997                           ; 2 bytes @ 0xE
   998  00000F                     	ds	2
   999  000011                     i2___lltoft@exp:
  1000                           	opt stack 0
  1001  000011                     i2___wmul@multiplicand:
  1002                           	opt stack 0
  1003                           
  1004                           ; 2 bytes @ 0x10
  1005  000011                     	ds	1
  1006  000012                     i2___llmod@divisor:
  1007                           	opt stack 0
  1008                           
  1009                           ; 4 bytes @ 0x11
  1010  000012                     	ds	1
  1011  000013                     i2___wmul@product:
  1012                           	opt stack 0
  1013                           
  1014                           ; 2 bytes @ 0x12
  1015  000013                     	ds	2
  1016  000015                     ?i2___ftadd:
  1017                           	opt stack 0
  1018  000015                     i2___ftadd@f1:
  1019                           	opt stack 0
  1020                           
  1021                           ; 3 bytes @ 0x14
  1022  000015                     	ds	1
  1023  000016                     i2___llmod@counter:
  1024                           	opt stack 0
  1025                           
  1026                           ; 1 bytes @ 0x15
  1027  000016                     	ds	2
  1028  000018                     i2___ftadd@f2:
  1029                           	opt stack 0
  1030                           
  1031                           ; 3 bytes @ 0x17
  1032  000018                     	ds	3
  1033  00001B                     ??i2___ftadd:
  1034                           
  1035                           ; 1 bytes @ 0x1A
  1036  00001B                     	ds	3
  1037  00001E                     i2___ftadd@sign:
  1038                           	opt stack 0
  1039                           
  1040                           ; 1 bytes @ 0x1D
  1041  00001E                     	ds	1
  1042  00001F                     i2___ftadd@exp2:
  1043                           	opt stack 0
  1044                           
  1045                           ; 1 bytes @ 0x1E
  1046  00001F                     	ds	1
  1047  000020                     i2___ftadd@exp1:
  1048                           	opt stack 0
  1049                           
  1050                           ; 1 bytes @ 0x1F
  1051  000020                     	ds	1
  1052  000021                     ?i2___ftmul:
  1053                           	opt stack 0
  1054  000021                     ?i2___ftsub:
  1055                           	opt stack 0
  1056  000021                     i2___ftmul@f1:
  1057                           	opt stack 0
  1058  000021                     i2___ftsub@f1:
  1059                           	opt stack 0
  1060                           
  1061                           ; 3 bytes @ 0x20
  1062  000021                     	ds	3
  1063  000024                     i2___ftmul@f2:
  1064                           	opt stack 0
  1065  000024                     i2___ftsub@f2:
  1066                           	opt stack 0
  1067                           
  1068                           ; 3 bytes @ 0x23
  1069  000024                     	ds	3
  1070  000027                     ??i2___ftmul:
  1071  000027                     
  1072                           ; 1 bytes @ 0x26
  1073  000027                     	ds	3
  1074  00002A                     i2___ftmul@exp:
  1075                           	opt stack 0
  1076                           
  1077                           ; 1 bytes @ 0x29
  1078  00002A                     	ds	1
  1079  00002B                     i2___ftmul@f3_as_product:
  1080                           	opt stack 0
  1081                           
  1082                           ; 3 bytes @ 0x2A
  1083  00002B                     	ds	3
  1084  00002E                     i2___ftmul@cntr:
  1085                           	opt stack 0
  1086                           
  1087                           ; 1 bytes @ 0x2D
  1088  00002E                     	ds	1
  1089  00002F                     i2___ftmul@sign:
  1090                           	opt stack 0
  1091                           
  1092                           ; 1 bytes @ 0x2E
  1093  00002F                     	ds	1
  1094  000030                     ?___ftdiv:
  1095                           	opt stack 0
  1096  000030                     ?i2_fround:
  1097                           	opt stack 0
  1098  000030                     ?i2_scale:
  1099                           	opt stack 0
  1100  000030                     ___ftdiv@f1:
  1101                           	opt stack 0
  1102                           
  1103                           ; 3 bytes @ 0x2F
  1104  000030                     	ds	3
  1105  000033                     ___ftdiv@f2:
  1106                           	opt stack 0
  1107  000033                     i2_fround$1791:
  1108                           	opt stack 0
  1109  000033                     i2_scale$1792:
  1110                           	opt stack 0
  1111                           
  1112                           ; 3 bytes @ 0x32
  1113  000033                     	ds	3
  1114  000036                     ??___ftdiv:
  1115  000036                     i2scale@scl:
  1116                           	opt stack 0
  1117  000036                     i2_fround$1790:
  1118                           	opt stack 0
  1119                           
  1120                           ; 3 bytes @ 0x35
  1121  000036                     	ds	1
  1122  000037                     ?i2___fttol:
  1123                           	opt stack 0
  1124  000037                     i2___fttol@f1:
  1125                           	opt stack 0
  1126                           
  1127                           ; 3 bytes @ 0x36
  1128  000037                     	ds	2
  1129  000039                     ___ftdiv@cntr:
  1130                           	opt stack 0
  1131  000039                     i2fround@prec:
  1132                           	opt stack 0
  1133                           
  1134                           ; 1 bytes @ 0x38
  1135  000039                     	ds	1
  1136  00003A                     ___ftdiv@f3:
  1137                           	opt stack 0
  1138                           
  1139                           ; 3 bytes @ 0x39
  1140  00003A                     	ds	1
  1141  00003B                     ??i2___fttol:
  1142                           
  1143                           ; 1 bytes @ 0x3A
  1144  00003B                     	ds	2
  1145  00003D                     ___ftdiv@exp:
  1146                           	opt stack 0
  1147                           
  1148                           ; 1 bytes @ 0x3C
  1149  00003D                     	ds	1
  1150  00003E                     ___ftdiv@sign:
  1151                           	opt stack 0
  1152                           
  1153                           ; 1 bytes @ 0x3D
  1154  00003E                     	ds	2
  1155  000040                     i2___fttol@sign1:
  1156                           	opt stack 0
  1157                           
  1158                           ; 1 bytes @ 0x3F
  1159  000040                     	ds	1
  1160  000041                     i2___fttol@lval:
  1161                           	opt stack 0
  1162                           
  1163                           ; 4 bytes @ 0x40
  1164  000041                     	ds	4
  1165  000045                     i2___fttol@exp1:
  1166                           	opt stack 0
  1167                           
  1168                           ; 1 bytes @ 0x44
  1169  000045                     	ds	1
  1170  000046                     ?i2__doprnt:
  1171                           	opt stack 0
  1172  000046                     i2__doprnt@pb:
  1173                           	opt stack 0
  1174                           
  1175                           ; 2 bytes @ 0x45
  1176  000046                     	ds	2
  1177  000048                     i2__doprnt@f:
  1178                           	opt stack 0
  1179                           
  1180                           ; 2 bytes @ 0x47
  1181  000048                     	ds	2
  1182  00004A                     i2__doprnt@ap:
  1183                           	opt stack 0
  1184                           
  1185                           ; 2 bytes @ 0x49
  1186  00004A                     	ds	2
  1187  00004C                     ??i2__doprnt:
  1188                           
  1189                           ; 1 bytes @ 0x4B
  1190  00004C                     	ds	6
  1191  000052                     ?_printf:
  1192                           	opt stack 0
  1193  000052                     printf@f:
  1194                           	opt stack 0
  1195                           
  1196                           ; 2 bytes @ 0x51
  1197  000052                     	ds	7
  1198  000059                     printf@ap:
  1199                           	opt stack 0
  1200                           
  1201                           ; 2 bytes @ 0x58
  1202  000059                     	ds	2
  1203  00005B                     printf@pb:
  1204                           	opt stack 0
  1205                           
  1206                           ; 4 bytes @ 0x5A
  1207  00005B                     	ds	4
  1208  00005F                     tblptru	equ	0xFF8
  1209                           postinc0	equ	0xFEE
  1210                           wreg	equ	0xFE8
  1211                           
  1212                           ; 1 bytes @ 0x5E
  1213 ;;
  1214 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1215 ;;
  1216 ;; *************** function _main *****************
  1217 ;; Defined at:
  1218 ;;		line 7 in file "main.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;		None
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;  cap_string     16   54[BANK1 ] unsigned char [16]
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1232 ;;      Params:         0       0       0       0       0       0       0
  1233 ;;      Locals:         0       0      16       0       0       0       0
  1234 ;;      Temps:          0       0       0       0       0       0       0
  1235 ;;      Totals:         0       0      16       0       0       0       0
  1236 ;;Total ram usage:       16 bytes
  1237 ;; Hardware stack levels required when called:   12
  1238 ;; This function calls:
  1239 ;;		_SYSTEM_Initialize
  1240 ;;		_lcd_clear
  1241 ;;		_lcd_init
  1242 ;;		_lcd_sendStringToPos
  1243 ;;		_sprintf
  1244 ;; This function is called by:
  1245 ;;		Startup code after reset
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           	psect	text0
  1250  005006                     __ptext0:
  1251                           	opt stack 0
  1252  005006                     _main:
  1253                           	opt stack 19
  1254                           
  1255                           ;main.c: 10: SYSTEM_Initialize();
  1256                           
  1257                           ;incstack = 0
  1258  005006  EC59  F02A         	call	_SYSTEM_Initialize	;wreg free
  1259                           
  1260                           ;main.c: 29: (INTCONbits.GIE = 1);
  1261  00500A  8EF2               	bsf	intcon,7,c	;volatile
  1262                           
  1263                           ;main.c: 32: (INTCONbits.PEIE = 1);
  1264  00500C  8CF2               	bsf	intcon,6,c	;volatile
  1265                           
  1266                           ;main.c: 40: lcd_init();
  1267  00500E  ECF2  F026         	call	_lcd_init	;wreg free
  1268                           
  1269                           ;main.c: 41: lcd_clear();
  1270  005012  EC8E  F02A         	call	_lcd_clear	;wreg free
  1271  005016                     l8958:
  1272                           
  1273                           ;main.c: 44: {
  1274                           ;main.c: 46: char cap_string[16];
  1275                           ;main.c: 47: sprintf(cap_string, "C:%12.0fpF", result);
  1276  005016  0E36               	movlw	low main@cap_string
  1277  005018  0101               	movlb	1	; () banked
  1278  00501A  6F29               	movwf	sprintf@wh& (0+255),b
  1279  00501C  0E01               	movlw	high main@cap_string
  1280  00501E  0101               	movlb	1	; () banked
  1281  005020  6F2A               	movwf	(sprintf@wh+1)& (0+255),b
  1282  005022  0EA6               	movlw	low STR_2
  1283  005024  0101               	movlb	1	; () banked
  1284  005026  6F2B               	movwf	sprintf@f& (0+255),b
  1285  005028  0E06               	movlw	high STR_2
  1286  00502A  0101               	movlb	1	; () banked
  1287  00502C  6F2C               	movwf	(sprintf@f+1)& (0+255),b
  1288  00502E  C0BE  F12D         	movff	_result,?_sprintf+4
  1289  005032  C0BF  F12E         	movff	_result+1,?_sprintf+5
  1290  005036  C0C0  F12F         	movff	_result+2,?_sprintf+6
  1291  00503A  EC2C  F028         	call	_sprintf	;wreg free
  1292                           
  1293                           ;main.c: 48: lcd_sendStringToPos(1, 1, cap_string);
  1294  00503E  0E01               	movlw	1
  1295  005040  0100               	movlb	0	; () banked
  1296  005042  6F8D               	movwf	lcd_sendStringToPos@y& (0+255),b
  1297  005044  0E36               	movlw	low main@cap_string
  1298  005046  0100               	movlb	0	; () banked
  1299  005048  6F8E               	movwf	lcd_sendStringToPos@charString& (0+255),b
  1300  00504A  0E01               	movlw	high main@cap_string
  1301  00504C  0100               	movlb	0	; () banked
  1302  00504E  6F8F               	movwf	(lcd_sendStringToPos@charString+1)& (0+255),b
  1303  005050  0E01               	movlw	1
  1304  005052  EC20  F02A         	call	_lcd_sendStringToPos
  1305  005056  D7DF               	goto	l8958
  1306  005058                     __end_of_main:
  1307                           	opt stack 0
  1308                           tblptru	equ	0xFF8
  1309                           intcon	equ	0xFF2
  1310                           postinc0	equ	0xFEE
  1311                           wreg	equ	0xFE8
  1312                           
  1313 ;; *************** function _sprintf *****************
  1314 ;; Defined at:
  1315 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprintf.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;  wh              2   41[BANK1 ] PTR unsigned char 
  1318 ;;		 -> ftoa@buf(17), main@cap_string(16), 
  1319 ;;  f               2   43[BANK1 ] PTR const unsigned char 
  1320 ;;		 -> STR_3(11), STR_2(11), 
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;  pb              4   50[BANK1 ] struct __prbuf
  1323 ;;  ap              2   48[BANK1 ] PTR void [1]
  1324 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  2   41[BANK1 ] int 
  1327 ;; Registers used:
  1328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1334 ;;      Params:         0       0       7       0       0       0       0
  1335 ;;      Locals:         0       0       6       0       0       0       0
  1336 ;;      Temps:          0       0       0       0       0       0       0
  1337 ;;      Totals:         0       0      13       0       0       0       0
  1338 ;;Total ram usage:       13 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; Hardware stack levels required when called:   11
  1341 ;; This function calls:
  1342 ;;		__doprnt
  1343 ;; This function is called by:
  1344 ;;		_main
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           	psect	text1
  1349  005058                     __ptext1:
  1350                           	opt stack 0
  1351  005058                     _sprintf:
  1352                           	opt stack 19
  1353                           
  1354                           ;incstack = 0
  1355  005058  C129  F132         	movff	sprintf@wh,sprintf@pb
  1356  00505C  C12A  F133         	movff	sprintf@wh+1,sprintf@pb+1
  1357  005060  0E00               	movlw	0
  1358  005062  0101               	movlb	1	; () banked
  1359  005064  6F34               	movwf	(sprintf@pb+2)& (0+255),b
  1360  005066  0E00               	movlw	0
  1361  005068  0101               	movlb	1	; () banked
  1362  00506A  6F35               	movwf	(sprintf@pb+3)& (0+255),b
  1363  00506C  0E2D               	movlw	low (?_sprintf+4)
  1364  00506E  0101               	movlb	1	; () banked
  1365  005070  6F30               	movwf	sprintf@ap& (0+255),b
  1366  005072  0E01               	movlw	high (?_sprintf+4)
  1367  005074  0101               	movlb	1	; () banked
  1368  005076  6F31               	movwf	(sprintf@ap+1)& (0+255),b
  1369                           
  1370                           ; BSR set to: 1
  1371  005078  0E32               	movlw	low sprintf@pb
  1372  00507A  0101               	movlb	1	; () banked
  1373  00507C  6F06               	movwf	__doprnt@pb& (0+255),b
  1374  00507E  0E01               	movlw	high sprintf@pb
  1375  005080  0101               	movlb	1	; () banked
  1376  005082  6F07               	movwf	(__doprnt@pb+1)& (0+255),b
  1377  005084  C12B  F108         	movff	sprintf@f,__doprnt@f
  1378  005088  C12C  F109         	movff	sprintf@f+1,__doprnt@f+1
  1379  00508C  0E30               	movlw	low sprintf@ap
  1380  00508E  0101               	movlb	1	; () banked
  1381  005090  6F0A               	movwf	__doprnt@ap& (0+255),b
  1382  005092  0E01               	movlw	high sprintf@ap
  1383  005094  0101               	movlb	1	; () banked
  1384  005096  6F0B               	movwf	(__doprnt@ap+1)& (0+255),b
  1385  005098  EC59  F003         	call	__doprnt	;wreg free
  1386  00509C  C132  FFD9         	movff	sprintf@pb,fsr2l
  1387  0050A0  C133  FFDA         	movff	sprintf@pb+1,fsr2h
  1388  0050A4  0E00               	movlw	0
  1389  0050A6  6EDF               	movwf	indf2,c
  1390  0050A8  0012               	return	
  1391  0050AA                     __end_of_sprintf:
  1392                           	opt stack 0
  1393                           tblptru	equ	0xFF8
  1394                           intcon	equ	0xFF2
  1395                           postinc0	equ	0xFEE
  1396                           wreg	equ	0xFE8
  1397                           indf2	equ	0xFDF
  1398                           fsr2h	equ	0xFDA
  1399                           fsr2l	equ	0xFD9
  1400                           
  1401 ;; *************** function __doprnt *****************
  1402 ;; Defined at:
  1403 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  pb              2    6[BANK1 ] PTR struct __prbuf
  1406 ;;		 -> sprintf@pb(4), printf@pb(4), 
  1407 ;;  f               2    8[BANK1 ] PTR const unsigned char 
  1408 ;;		 -> STR_3(11), STR_2(11), STR_1(36), 
  1409 ;;  ap              2   10[BANK1 ] PTR PTR void 
  1410 ;;		 -> sprintf@ap(2), printf@ap(2), 
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;  tmpval          4   27[BANK1 ] struct .
  1413 ;;  val             4   21[BANK1 ] unsigned long 
  1414 ;;  fval            3   35[BANK1 ] unsigned long 
  1415 ;;  cp              3    0        PTR const unsigned char 
  1416 ;;  prec            2   38[BANK1 ] int 
  1417 ;;  width           2   33[BANK1 ] int 
  1418 ;;  flag            2   31[BANK1 ] unsigned short 
  1419 ;;  exp             2   25[BANK1 ] int 
  1420 ;;  len             2    0        unsigned int 
  1421 ;;  c               1   40[BANK1 ] char 
  1422 ;;  d               1    0        unsigned char 
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  2    6[BANK1 ] int 
  1425 ;; Registers used:
  1426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1432 ;;      Params:         0       0       6       0       0       0       0
  1433 ;;      Locals:         0       0      23       0       0       0       0
  1434 ;;      Temps:          0       0       6       0       0       0       0
  1435 ;;      Totals:         0       0      35       0       0       0       0
  1436 ;;Total ram usage:       35 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; Hardware stack levels required when called:   10
  1439 ;; This function calls:
  1440 ;;		Absolute function
  1441 ;;		___awdiv
  1442 ;;		___ftadd
  1443 ;;		___ftge
  1444 ;;		___ftmul
  1445 ;;		___ftneg
  1446 ;;		___ftsub
  1447 ;;		___fttol
  1448 ;;		___lldiv
  1449 ;;		___llmod
  1450 ;;		___lltoft
  1451 ;;		___wmul
  1452 ;;		__div_to_l_
  1453 ;;		__tdiv_to_l_
  1454 ;;		_fround
  1455 ;;		_isdigit
  1456 ;;		_putch
  1457 ;;		_scale
  1458 ;; This function is called by:
  1459 ;;		_sprintf
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           	psect	text2
  1464  0006B2                     __ptext2:
  1465                           	opt stack 0
  1466  0006B2                     __doprnt:
  1467                           	opt stack 19
  1468                           
  1469                           ;doprnt.c: 499: signed char c;
  1470                           ;doprnt.c: 501: int width;
  1471                           ;doprnt.c: 504: int prec;
  1472                           ;doprnt.c: 508: unsigned short flag;
  1473                           ;doprnt.c: 515: char d;
  1474                           ;doprnt.c: 516: double fval;
  1475                           ;doprnt.c: 517: int exp;
  1476                           ;doprnt.c: 523: union {
  1477                           ;doprnt.c: 524: unsigned long vd;
  1478                           ;doprnt.c: 525: double integ;
  1479                           ;doprnt.c: 526: } tmpval;
  1480                           ;doprnt.c: 528: unsigned long val;
  1481                           ;doprnt.c: 529: unsigned len;
  1482                           ;doprnt.c: 530: const char * cp;
  1483                           ;doprnt.c: 536: while(c = *f++) {
  1484                           
  1485                           ;incstack = 0
  1486  0006B2  EF2C  F00C         	goto	l8896
  1487  0006B6                     l8520:
  1488                           
  1489                           ;doprnt.c: 538: if(c != '%')
  1490  0006B6  0E25               	movlw	37
  1491  0006B8  0101               	movlb	1	; () banked
  1492  0006BA  1928               	xorwf	__doprnt@c& (0+255),w,b
  1493  0006BC  B4D8               	btfsc	status,2,c
  1494  0006BE  D038               	goto	l8530
  1495                           
  1496                           ; BSR set to: 1
  1497                           ;doprnt.c: 540: {
  1498                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  1499  0006C0  0101               	movlb	1	; () banked
  1500  0006C2  EE20 F002          	lfsr	2,2
  1501  0006C6  5106               	movf	__doprnt@pb& (0+255),w,b
  1502  0006C8  26D9               	addwf	fsr2l,f,c
  1503  0006CA  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  1504  0006CC  22DA               	addwfc	fsr2h,f,c
  1505  0006CE  50DE               	movf	postinc2,w,c
  1506  0006D0  10DE               	iorwf	postinc2,w,c
  1507  0006D2  B4D8               	btfsc	status,2,c
  1508  0006D4  D016               	goto	l8526
  1509                           
  1510                           ; BSR set to: 1
  1511  0006D6  0101               	movlb	1	; () banked
  1512  0006D8  EE20 F002          	lfsr	2,2
  1513  0006DC  5106               	movf	__doprnt@pb& (0+255),w,b
  1514  0006DE  26D9               	addwf	fsr2l,f,c
  1515  0006E0  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  1516  0006E2  22DA               	addwfc	fsr2h,f,c
  1517  0006E4  D802               	call	u14018
  1518  0006E6  EF2C  F00C         	goto	l8896
  1519  0006EA                     u14018:
  1520  0006EA  0005               	push	
  1521  0006EC  6EFA               	movwf	pclath,c
  1522  0006EE  50DE               	movf	postinc2,w,c
  1523  0006F0  6EFD               	movwf	tosl,c
  1524  0006F2  50DE               	movf	postinc2,w,c
  1525  0006F4  6EFE               	movwf	tosh,c
  1526  0006F6  50F8               	movf	tblptru,w,c
  1527  0006F8  6EFF               	movwf	tosu,c
  1528  0006FA  50FA               	movf	pclath,w,c
  1529  0006FC  0101               	movlb	1	; () banked
  1530  0006FE  5128               	movf	__doprnt@c& (0+255),w,b
  1531  000700  0012               	return		;indir
  1532  000702                     l8526:
  1533  000702  C106  FFD9         	movff	__doprnt@pb,fsr2l
  1534  000706  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  1535  00070A  CFDE F10C          	movff	postinc2,??__doprnt
  1536  00070E  CFDD F10D          	movff	postdec2,??__doprnt+1
  1537  000712  C10C  FFD9         	movff	??__doprnt,fsr2l
  1538  000716  C10D  FFDA         	movff	??__doprnt+1,fsr2h
  1539  00071A  C128  FFDF         	movff	__doprnt@c,indf2
  1540  00071E  C106  FFD9         	movff	__doprnt@pb,fsr2l
  1541  000722  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  1542  000726  2ADE               	incf	postinc2,f,c
  1543  000728  0E00               	movlw	0
  1544  00072A  22DD               	addwfc	postdec2,f,c
  1545                           
  1546                           ;doprnt.c: 542: continue;
  1547  00072C  EF2C  F00C         	goto	l8896
  1548  000730                     l8530:
  1549                           
  1550                           ;doprnt.c: 543: }
  1551                           ;doprnt.c: 546: width = 0;
  1552  000730  0E00               	movlw	0
  1553  000732  0101               	movlb	1	; () banked
  1554  000734  6F22               	movwf	(__doprnt@width+1)& (0+255),b
  1555  000736  0E00               	movlw	0
  1556  000738  6F21               	movwf	__doprnt@width& (0+255),b
  1557                           
  1558                           ;doprnt.c: 548: flag = 0;
  1559  00073A  0E00               	movlw	0
  1560  00073C  0101               	movlb	1	; () banked
  1561  00073E  6F20               	movwf	(__doprnt@flag+1)& (0+255),b
  1562  000740  0E00               	movlw	0
  1563  000742  6F1F               	movwf	__doprnt@flag& (0+255),b
  1564                           
  1565                           ; BSR set to: 1
  1566                           ;doprnt.c: 551: switch(*f) {
  1567                           
  1568                           ;doprnt.c: 550: for(;;) {
  1569  000744  D005               	goto	l8536
  1570  000746                     l8532:
  1571                           
  1572                           ;doprnt.c: 580: flag |= 0x04;
  1573  000746  0101               	movlb	1	; () banked
  1574  000748  851F               	bsf	__doprnt@flag& (0+255),2,b
  1575                           
  1576                           ;doprnt.c: 581: f++;
  1577  00074A  0101               	movlb	1	; () banked
  1578  00074C  4B08               	infsnz	__doprnt@f& (0+255),f,b
  1579  00074E  2B09               	incf	(__doprnt@f+1)& (0+255),f,b
  1580  000750                     l8536:
  1581  000750  C108  FFF6         	movff	__doprnt@f,tblptrl
  1582  000754  C109  FFF7         	movff	__doprnt@f+1,tblptrh
  1583  000758                     	if	0	;tblptru may be non-zero
  1584  000758                     	endif
  1585  000758                     	if	0	;tblptru may be non-zero
  1586  000758                     	endif
  1587  000758  0008               	tblrd		*
  1588  00075A  50F5               	movf	tablat,w,c
  1589                           
  1590                           ; Switch size 1, requested type "space"
  1591                           ; Number of cases is 1, Range of values is 48 to 48
  1592                           ; switch strategies available:
  1593                           ; Name         Instructions Cycles
  1594                           ; simple_byte            4     3 (average)
  1595                           ;	Chosen strategy is simple_byte
  1596  00075C  0A30               	xorlw	48	; case 48
  1597  00075E  B4D8               	btfsc	status,2,c
  1598  000760  D7F2               	goto	l8532
  1599                           
  1600                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1601                           
  1602                           ;doprnt.c: 586: }
  1603                           
  1604                           ;doprnt.c: 585: break;
  1605  000762  C108  FFF6         	movff	__doprnt@f,tblptrl
  1606  000766  C109  FFF7         	movff	__doprnt@f+1,tblptrh
  1607  00076A                     	if	0	;tblptru may be non-zero
  1608  00076A                     	endif
  1609  00076A                     	if	0	;tblptru may be non-zero
  1610  00076A                     	endif
  1611  00076A  0008               	tblrd		*
  1612  00076C  50F5               	movf	tablat,w,c
  1613  00076E  ECC1  F029         	call	_isdigit
  1614  000772  A0D8               	btfss	status,0,c
  1615  000774  D040               	goto	l8550
  1616                           
  1617                           ;doprnt.c: 598: width = 0;
  1618  000776  0E00               	movlw	0
  1619  000778  0101               	movlb	1	; () banked
  1620  00077A  6F22               	movwf	(__doprnt@width+1)& (0+255),b
  1621  00077C  0E00               	movlw	0
  1622  00077E  6F21               	movwf	__doprnt@width& (0+255),b
  1623  000780                     l8542:
  1624                           
  1625                           ;doprnt.c: 600: width *= 10;
  1626  000780  C121  F093         	movff	__doprnt@width,___wmul@multiplier
  1627  000784  C122  F094         	movff	__doprnt@width+1,___wmul@multiplier+1
  1628  000788  0E00               	movlw	0
  1629  00078A  0100               	movlb	0	; () banked
  1630  00078C  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1631  00078E  0E0A               	movlw	10
  1632  000790  6F95               	movwf	___wmul@multiplicand& (0+255),b
  1633  000792  EC27  F029         	call	___wmul	;wreg free
  1634  000796  C093  F121         	movff	?___wmul,__doprnt@width
  1635  00079A  C094  F122         	movff	?___wmul+1,__doprnt@width+1
  1636                           
  1637                           ;doprnt.c: 601: width += *f++ - '0';
  1638  00079E  0ED0               	movlw	208
  1639  0007A0  0101               	movlb	1	; () banked
  1640  0007A2  6F0C               	movwf	??__doprnt& (0+255),b
  1641  0007A4  0EFF               	movlw	255
  1642  0007A6  0101               	movlb	1	; () banked
  1643  0007A8  6F0D               	movwf	(??__doprnt+1)& (0+255),b
  1644  0007AA  C108  FFF6         	movff	__doprnt@f,tblptrl
  1645  0007AE  C109  FFF7         	movff	__doprnt@f+1,tblptrh
  1646  0007B2                     	if	0	;tblptru may be non-zero
  1647  0007B2                     	endif
  1648  0007B2                     	if	0	;tblptru may be non-zero
  1649  0007B2                     	endif
  1650  0007B2  0008               	tblrd		*
  1651  0007B4  50F5               	movf	tablat,w,c
  1652  0007B6  0101               	movlb	1	; () banked
  1653  0007B8  6F0E               	movwf	(??__doprnt+2)& (0+255),b
  1654  0007BA  6B0F               	clrf	(??__doprnt+3)& (0+255),b
  1655  0007BC  0101               	movlb	1	; () banked
  1656  0007BE  510C               	movf	??__doprnt& (0+255),w,b
  1657  0007C0  0101               	movlb	1	; () banked
  1658  0007C2  270E               	addwf	(??__doprnt+2)& (0+255),f,b
  1659  0007C4  0101               	movlb	1	; () banked
  1660  0007C6  510D               	movf	(??__doprnt+1)& (0+255),w,b
  1661  0007C8  0101               	movlb	1	; () banked
  1662  0007CA  230F               	addwfc	(??__doprnt+3)& (0+255),f,b
  1663  0007CC  0101               	movlb	1	; () banked
  1664  0007CE  510E               	movf	(??__doprnt+2)& (0+255),w,b
  1665  0007D0  0101               	movlb	1	; () banked
  1666  0007D2  2721               	addwf	__doprnt@width& (0+255),f,b
  1667  0007D4  0101               	movlb	1	; () banked
  1668  0007D6  510F               	movf	(??__doprnt+3)& (0+255),w,b
  1669  0007D8  0101               	movlb	1	; () banked
  1670  0007DA  2322               	addwfc	(__doprnt@width+1)& (0+255),f,b
  1671                           
  1672                           ; BSR set to: 1
  1673  0007DC  0101               	movlb	1	; () banked
  1674  0007DE  4B08               	infsnz	__doprnt@f& (0+255),f,b
  1675  0007E0  2B09               	incf	(__doprnt@f+1)& (0+255),f,b
  1676                           
  1677                           ; BSR set to: 1
  1678                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1679  0007E2  C108  FFF6         	movff	__doprnt@f,tblptrl
  1680  0007E6  C109  FFF7         	movff	__doprnt@f+1,tblptrh
  1681  0007EA                     	if	0	;tblptru may be non-zero
  1682  0007EA                     	endif
  1683  0007EA                     	if	0	;tblptru may be non-zero
  1684  0007EA                     	endif
  1685  0007EA  0008               	tblrd		*
  1686  0007EC  50F5               	movf	tablat,w,c
  1687  0007EE  ECC1  F029         	call	_isdigit
  1688  0007F2  B0D8               	btfsc	status,0,c
  1689  0007F4  D7C5               	goto	l8542
  1690  0007F6                     l8550:
  1691                           
  1692                           ;doprnt.c: 608: }
  1693                           ;doprnt.c: 611: if(*f == '.') {
  1694  0007F6  C108  FFF6         	movff	__doprnt@f,tblptrl
  1695  0007FA  C109  FFF7         	movff	__doprnt@f+1,tblptrh
  1696  0007FE                     	if	0	;tblptru may be non-zero
  1697  0007FE                     	endif
  1698  0007FE                     	if	0	;tblptru may be non-zero
  1699  0007FE                     	endif
  1700  0007FE  0008               	tblrd		*
  1701  000800  50F5               	movf	tablat,w,c
  1702  000802  0A2E               	xorlw	46
  1703  000804  A4D8               	btfss	status,2,c
  1704  000806  D039               	goto	l8562
  1705                           
  1706                           ;doprnt.c: 612: flag |= 0x4000;
  1707  000808  0101               	movlb	1	; () banked
  1708  00080A  8D20               	bsf	(__doprnt@flag+1)& (0+255),6,b
  1709                           
  1710                           ;doprnt.c: 613: f++;
  1711  00080C  0101               	movlb	1	; () banked
  1712  00080E  4B08               	infsnz	__doprnt@f& (0+255),f,b
  1713  000810  2B09               	incf	(__doprnt@f+1)& (0+255),f,b
  1714                           
  1715                           ; BSR set to: 1
  1716                           ;doprnt.c: 620: {
  1717                           ;doprnt.c: 621: prec = 0;
  1718  000812  0E00               	movlw	0
  1719  000814  0101               	movlb	1	; () banked
  1720  000816  6F27               	movwf	(__doprnt@prec+1)& (0+255),b
  1721  000818  0E00               	movlw	0
  1722  00081A  6F26               	movwf	__doprnt@prec& (0+255),b
  1723                           
  1724                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  1725  00081C  D023               	goto	l8560
  1726  00081E                     l8556:
  1727                           
  1728                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  1729  00081E  C126  F093         	movff	__doprnt@prec,___wmul@multiplier
  1730  000822  C127  F094         	movff	__doprnt@prec+1,___wmul@multiplier+1
  1731  000826  0E00               	movlw	0
  1732  000828  0100               	movlb	0	; () banked
  1733  00082A  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1734  00082C  0E0A               	movlw	10
  1735  00082E  6F95               	movwf	___wmul@multiplicand& (0+255),b
  1736  000830  EC27  F029         	call	___wmul	;wreg free
  1737  000834  C108  FFF6         	movff	__doprnt@f,tblptrl
  1738  000838  C109  FFF7         	movff	__doprnt@f+1,tblptrh
  1739  00083C                     	if	0	;tblptru may be non-zero
  1740  00083C                     	endif
  1741  00083C                     	if	0	;tblptru may be non-zero
  1742  00083C                     	endif
  1743  00083C  0008               	tblrd		*
  1744  00083E  50F5               	movf	tablat,w,c
  1745  000840  0100               	movlb	0	; () banked
  1746  000842  2793               	addwf	?___wmul& (0+255),f,b
  1747  000844  0E00               	movlw	0
  1748  000846  0100               	movlb	0	; () banked
  1749  000848  2394               	addwfc	(?___wmul+1)& (0+255),f,b
  1750  00084A  0ED0               	movlw	208
  1751  00084C  0100               	movlb	0	; () banked
  1752  00084E  2593               	addwf	?___wmul& (0+255),w,b
  1753  000850  0101               	movlb	1	; () banked
  1754  000852  6F26               	movwf	__doprnt@prec& (0+255),b
  1755  000854  0EFF               	movlw	255
  1756  000856  0100               	movlb	0	; () banked
  1757  000858  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  1758  00085A  0101               	movlb	1	; () banked
  1759  00085C  6F27               	movwf	(__doprnt@prec+1)& (0+255),b
  1760                           
  1761                           ; BSR set to: 1
  1762  00085E  0101               	movlb	1	; () banked
  1763  000860  4B08               	infsnz	__doprnt@f& (0+255),f,b
  1764  000862  2B09               	incf	(__doprnt@f+1)& (0+255),f,b
  1765  000864                     l8560:
  1766                           
  1767                           ; BSR set to: 1
  1768  000864  C108  FFF6         	movff	__doprnt@f,tblptrl
  1769  000868  C109  FFF7         	movff	__doprnt@f+1,tblptrh
  1770  00086C                     	if	0	;tblptru may be non-zero
  1771  00086C                     	endif
  1772  00086C                     	if	0	;tblptru may be non-zero
  1773  00086C                     	endif
  1774  00086C  0008               	tblrd		*
  1775  00086E  50F5               	movf	tablat,w,c
  1776  000870  ECC1  F029         	call	_isdigit
  1777  000874  A0D8               	btfss	status,0,c
  1778  000876  D013               	goto	l8574
  1779  000878  D7D2               	goto	l8556
  1780  00087A                     l8562:
  1781                           
  1782                           ;doprnt.c: 626: prec = 0;
  1783  00087A  0E00               	movlw	0
  1784  00087C  0101               	movlb	1	; () banked
  1785  00087E  6F27               	movwf	(__doprnt@prec+1)& (0+255),b
  1786  000880  0E00               	movlw	0
  1787  000882  6F26               	movwf	__doprnt@prec& (0+255),b
  1788                           
  1789                           ; BSR set to: 1
  1790                           ;doprnt.c: 628: flag |= 0x1000;
  1791  000884  0101               	movlb	1	; () banked
  1792  000886  8920               	bsf	(__doprnt@flag+1)& (0+255),4,b
  1793                           
  1794                           ; BSR set to: 1
  1795                           ;doprnt.c: 635: switch(c = *f++) {
  1796                           
  1797                           ;doprnt.c: 630: }
  1798                           ;doprnt.c: 633: loop:
  1799                           
  1800                           ; BSR set to: 1
  1801  000888  D00A               	goto	l8574
  1802  00088A                     l8566:
  1803                           
  1804                           ; BSR set to: 1
  1805                           ;doprnt.c: 643: flag |= 0x10;
  1806  00088A  0101               	movlb	1	; () banked
  1807  00088C  891F               	bsf	__doprnt@flag& (0+255),4,b
  1808                           
  1809                           ;doprnt.c: 644: goto loop;
  1810  00088E  D007               	goto	l8574
  1811  000890                     l8568:
  1812                           
  1813                           ; BSR set to: 1
  1814                           ;doprnt.c: 663: flag |= 0x400;
  1815  000890  0101               	movlb	1	; () banked
  1816  000892  8520               	bsf	(__doprnt@flag+1)& (0+255),2,b
  1817                           
  1818                           ;doprnt.c: 664: break;
  1819  000894  D01F               	goto	l8576
  1820  000896                     l8570:
  1821                           
  1822                           ; BSR set to: 1
  1823                           ;doprnt.c: 818: flag |= 0xC0;
  1824  000896  0EC0               	movlw	192
  1825  000898  0101               	movlb	1	; () banked
  1826  00089A  131F               	iorwf	__doprnt@flag& (0+255),f,b
  1827                           
  1828                           ; BSR set to: 1
  1829                           ;doprnt.c: 822: }
  1830                           
  1831                           ;doprnt.c: 819: break;
  1832  00089C  D01B               	goto	l8576
  1833  00089E                     l8574:
  1834  00089E  C108  FFF6         	movff	__doprnt@f,tblptrl
  1835  0008A2  C109  FFF7         	movff	__doprnt@f+1,tblptrh
  1836  0008A6  0101               	movlb	1	; () banked
  1837  0008A8  4B08               	infsnz	__doprnt@f& (0+255),f,b
  1838  0008AA  2B09               	incf	(__doprnt@f+1)& (0+255),f,b
  1839  0008AC                     	if	0	;tblptru may be non-zero
  1840  0008AC                     	endif
  1841  0008AC                     	if	0	;tblptru may be non-zero
  1842  0008AC                     	endif
  1843  0008AC  0008               	tblrd		*
  1844  0008AE  CFF5 F128          	movff	tablat,__doprnt@c
  1845  0008B2  0101               	movlb	1	; () banked
  1846  0008B4  5128               	movf	__doprnt@c& (0+255),w,b
  1847                           
  1848                           ; Switch size 1, requested type "space"
  1849                           ; Number of cases is 4, Range of values is 0 to 117
  1850                           ; switch strategies available:
  1851                           ; Name         Instructions Cycles
  1852                           ; simple_byte           13     7 (average)
  1853                           ;	Chosen strategy is simple_byte
  1854  0008B6  0A00               	xorlw	0	; case 0
  1855  0008B8  B4D8               	btfsc	status,2,c
  1856  0008BA  EF3B  F00C         	goto	l8898
  1857  0008BE  0A66               	xorlw	102	; case 102
  1858  0008C0  B4D8               	btfsc	status,2,c
  1859  0008C2  D7E6               	goto	l8568
  1860  0008C4  0A0A               	xorlw	10	; case 108
  1861  0008C6  B4D8               	btfsc	status,2,c
  1862  0008C8  D7E0               	goto	l8566
  1863  0008CA  0A19               	xorlw	25	; case 117
  1864  0008CC  B4D8               	btfsc	status,2,c
  1865  0008CE  D7E3               	goto	l8570
  1866  0008D0  EF2C  F00C         	goto	l8896
  1867  0008D4                     l8576:
  1868                           
  1869                           ; BSR set to: 1
  1870                           ;doprnt.c: 825: if(flag & (0x700)) {
  1871  0008D4  0E07               	movlw	7
  1872  0008D6  0101               	movlb	1	; () banked
  1873  0008D8  1520               	andwf	(__doprnt@flag+1)& (0+255),w,b
  1874  0008DA  B4D8               	btfsc	status,2,c
  1875  0008DC  EFAB  F009         	goto	l351
  1876                           
  1877                           ; BSR set to: 1
  1878                           ;doprnt.c: 827: if(flag & 0x1000)
  1879  0008E0  0101               	movlb	1	; () banked
  1880  0008E2  A920               	btfss	(__doprnt@flag+1)& (0+255),4,b
  1881  0008E4  D005               	goto	l8582
  1882                           
  1883                           ; BSR set to: 1
  1884                           ;doprnt.c: 829: prec = 6;
  1885  0008E6  0E00               	movlw	0
  1886  0008E8  0101               	movlb	1	; () banked
  1887  0008EA  6F27               	movwf	(__doprnt@prec+1)& (0+255),b
  1888  0008EC  0E06               	movlw	6
  1889  0008EE  6F26               	movwf	__doprnt@prec& (0+255),b
  1890  0008F0                     l8582:
  1891                           
  1892                           ; BSR set to: 1
  1893                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1894  0008F0  C10A  FFD9         	movff	__doprnt@ap,fsr2l
  1895  0008F4  C10B  FFDA         	movff	__doprnt@ap+1,fsr2h
  1896  0008F8  CFDF F10C          	movff	indf2,??__doprnt
  1897  0008FC  0E03               	movlw	3
  1898  0008FE  26DE               	addwf	postinc2,f,c
  1899  000900  CFDF F10D          	movff	indf2,??__doprnt+1
  1900  000904  0E00               	movlw	0
  1901  000906  22DD               	addwfc	postdec2,f,c
  1902  000908  C10C  FFD9         	movff	??__doprnt,fsr2l
  1903  00090C  C10D  FFDA         	movff	??__doprnt+1,fsr2h
  1904  000910  CFDE F123          	movff	postinc2,__doprnt@fval
  1905  000914  CFDE F124          	movff	postinc2,__doprnt@fval+1
  1906  000918  CFDD F125          	movff	postdec2,__doprnt@fval+2
  1907                           
  1908                           ; BSR set to: 1
  1909                           ;doprnt.c: 831: if(fval < 0.0) {
  1910  00091C  0101               	movlb	1	; () banked
  1911  00091E  AF25               	btfss	(__doprnt@fval+2)& (0+255),7,b
  1912  000920  D011               	goto	l8590
  1913                           
  1914                           ; BSR set to: 1
  1915                           ;doprnt.c: 832: fval = -fval;
  1916  000922  C123  F085         	movff	__doprnt@fval,___ftneg@f1
  1917  000926  C124  F086         	movff	__doprnt@fval+1,___ftneg@f1+1
  1918  00092A  C125  F087         	movff	__doprnt@fval+2,___ftneg@f1+2
  1919  00092E  EC91  F029         	call	___ftneg	;wreg free
  1920  000932  C085  F123         	movff	?___ftneg,__doprnt@fval
  1921  000936  C086  F124         	movff	?___ftneg+1,__doprnt@fval+1
  1922  00093A  C087  F125         	movff	?___ftneg+2,__doprnt@fval+2
  1923                           
  1924                           ;doprnt.c: 833: flag |= 0x03;
  1925  00093E  0E03               	movlw	3
  1926  000940  0101               	movlb	1	; () banked
  1927  000942  131F               	iorwf	__doprnt@flag& (0+255),f,b
  1928  000944                     l8590:
  1929                           
  1930                           ; BSR set to: 1
  1931                           ;doprnt.c: 834: }
  1932                           ;doprnt.c: 835: exp = 0;
  1933  000944  0E00               	movlw	0
  1934  000946  0101               	movlb	1	; () banked
  1935  000948  6F1A               	movwf	(__doprnt@exp+1)& (0+255),b
  1936  00094A  0E00               	movlw	0
  1937  00094C  6F19               	movwf	__doprnt@exp& (0+255),b
  1938                           
  1939                           ; BSR set to: 1
  1940                           ;doprnt.c: 836: if( fval!=0) {
  1941  00094E  0101               	movlb	1	; () banked
  1942  000950  5123               	movf	__doprnt@fval& (0+255),w,b
  1943  000952  0101               	movlb	1	; () banked
  1944  000954  1124               	iorwf	(__doprnt@fval+1)& (0+255),w,b
  1945  000956  0101               	movlb	1	; () banked
  1946  000958  1125               	iorwf	(__doprnt@fval+2)& (0+255),w,b
  1947  00095A  B4D8               	btfsc	status,2,c
  1948  00095C  D09B               	goto	l8618
  1949                           
  1950                           ; BSR set to: 1
  1951                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1952  00095E  0E82               	movlw	130
  1953  000960  0101               	movlb	1	; () banked
  1954  000962  6F0C               	movwf	??__doprnt& (0+255),b
  1955  000964  0EFF               	movlw	255
  1956  000966  0101               	movlb	1	; () banked
  1957  000968  6F0D               	movwf	(??__doprnt+1)& (0+255),b
  1958  00096A  C123  F10E         	movff	__doprnt@fval,??__doprnt+2
  1959  00096E  C124  F10F         	movff	__doprnt@fval+1,??__doprnt+3
  1960  000972  C125  F110         	movff	__doprnt@fval+2,??__doprnt+4
  1961  000976  C126  F111         	movff	__doprnt@fval+3,??__doprnt+5
  1962  00097A  0E10               	movlw	16
  1963  00097C  D006               	goto	u14100
  1964  00097E                     u14105:
  1965  00097E  0101               	movlb	1	; () banked
  1966  000980  90D8               	bcf	status,0,c
  1967  000982  3311               	rrcf	(??__doprnt+5)& (0+255),f,b
  1968  000984  3310               	rrcf	(??__doprnt+4)& (0+255),f,b
  1969  000986  330F               	rrcf	(??__doprnt+3)& (0+255),f,b
  1970  000988  330E               	rrcf	(??__doprnt+2)& (0+255),f,b
  1971  00098A                     u14100:
  1972  00098A  2EE8               	decfsz	wreg,f,c
  1973  00098C  D7F8               	goto	u14105
  1974  00098E  0101               	movlb	1	; () banked
  1975  000990  510E               	movf	(??__doprnt+2)& (0+255),w,b
  1976  000992  0101               	movlb	1	; () banked
  1977  000994  250C               	addwf	??__doprnt& (0+255),w,b
  1978  000996  0101               	movlb	1	; () banked
  1979  000998  6F19               	movwf	__doprnt@exp& (0+255),b
  1980  00099A  0E00               	movlw	0
  1981  00099C  0101               	movlb	1	; () banked
  1982  00099E  210D               	addwfc	(??__doprnt+1)& (0+255),w,b
  1983  0009A0  0101               	movlb	1	; () banked
  1984  0009A2  6F1A               	movwf	(__doprnt@exp+1)& (0+255),b
  1985                           
  1986                           ; BSR set to: 1
  1987                           ;doprnt.c: 838: exp--;
  1988  0009A4  0101               	movlb	1	; () banked
  1989  0009A6  0719               	decf	__doprnt@exp& (0+255),f,b
  1990  0009A8  A0D8               	btfss	status,0,c
  1991  0009AA  071A               	decf	(__doprnt@exp+1)& (0+255),f,b
  1992                           
  1993                           ; BSR set to: 1
  1994                           ;doprnt.c: 839: exp *= 3;
  1995  0009AC  C119  F093         	movff	__doprnt@exp,___wmul@multiplier
  1996  0009B0  C11A  F094         	movff	__doprnt@exp+1,___wmul@multiplier+1
  1997  0009B4  0E00               	movlw	0
  1998  0009B6  0100               	movlb	0	; () banked
  1999  0009B8  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2000  0009BA  0E03               	movlw	3
  2001  0009BC  6F95               	movwf	___wmul@multiplicand& (0+255),b
  2002  0009BE  EC27  F029         	call	___wmul	;wreg free
  2003  0009C2  C093  F119         	movff	?___wmul,__doprnt@exp
  2004  0009C6  C094  F11A         	movff	?___wmul+1,__doprnt@exp+1
  2005                           
  2006                           ;doprnt.c: 840: exp /= 10;
  2007  0009CA  C119  F08B         	movff	__doprnt@exp,___awdiv@dividend
  2008  0009CE  C11A  F08C         	movff	__doprnt@exp+1,___awdiv@dividend+1
  2009  0009D2  0E00               	movlw	0
  2010  0009D4  0100               	movlb	0	; () banked
  2011  0009D6  6F8E               	movwf	(___awdiv@divisor+1)& (0+255),b
  2012  0009D8  0E0A               	movlw	10
  2013  0009DA  6F8D               	movwf	___awdiv@divisor& (0+255),b
  2014  0009DC  ECE3  F023         	call	___awdiv	;wreg free
  2015  0009E0  C08B  F119         	movff	?___awdiv,__doprnt@exp
  2016  0009E4  C08C  F11A         	movff	?___awdiv+1,__doprnt@exp+1
  2017                           
  2018                           ;doprnt.c: 841: if(exp < 0)
  2019  0009E8  0101               	movlb	1	; () banked
  2020  0009EA  AF1A               	btfss	(__doprnt@exp+1)& (0+255),7,b
  2021  0009EC  D004               	goto	l8606
  2022                           
  2023                           ; BSR set to: 1
  2024                           ;doprnt.c: 842: exp--;
  2025  0009EE  0101               	movlb	1	; () banked
  2026  0009F0  0719               	decf	__doprnt@exp& (0+255),f,b
  2027  0009F2  A0D8               	btfss	status,0,c
  2028  0009F4  071A               	decf	(__doprnt@exp+1)& (0+255),f,b
  2029  0009F6                     l8606:
  2030                           
  2031                           ; BSR set to: 1
  2032                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2033  0009F6  0101               	movlb	1	; () banked
  2034  0009F8  5119               	movf	__doprnt@exp& (0+255),w,b
  2035  0009FA  0800               	sublw	0
  2036  0009FC  ECAF  F014         	call	_scale
  2037  000A00  C0A8  F11B         	movff	?_scale,__doprnt@tmpval
  2038  000A04  C0A9  F11C         	movff	?_scale+1,__doprnt@tmpval+1
  2039  000A08  C0AA  F11D         	movff	?_scale+2,__doprnt@tmpval+2
  2040                           
  2041                           ;doprnt.c: 847: tmpval.integ *= fval;
  2042  000A0C  C11B  F099         	movff	__doprnt@tmpval,___ftmul@f1
  2043  000A10  C11C  F09A         	movff	__doprnt@tmpval+1,___ftmul@f1+1
  2044  000A14  C11D  F09B         	movff	__doprnt@tmpval+2,___ftmul@f1+2
  2045  000A18  C123  F09C         	movff	__doprnt@fval,___ftmul@f2
  2046  000A1C  C124  F09D         	movff	__doprnt@fval+1,___ftmul@f2+1
  2047  000A20  C125  F09E         	movff	__doprnt@fval+2,___ftmul@f2+2
  2048  000A24  EC14  F01F         	call	___ftmul	;wreg free
  2049  000A28  C099  F11B         	movff	?___ftmul,__doprnt@tmpval
  2050  000A2C  C09A  F11C         	movff	?___ftmul+1,__doprnt@tmpval+1
  2051  000A30  C09B  F11D         	movff	?___ftmul+2,__doprnt@tmpval+2
  2052                           
  2053                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2054  000A34  C11B  F085         	movff	__doprnt@tmpval,___ftge@ff1
  2055  000A38  C11C  F086         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  2056  000A3C  C11D  F087         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  2057  000A40  0E00               	movlw	0
  2058  000A42  0100               	movlb	0	; () banked
  2059  000A44  6F88               	movwf	___ftge@ff2& (0+255),b
  2060  000A46  0E80               	movlw	128
  2061  000A48  0100               	movlb	0	; () banked
  2062  000A4A  6F89               	movwf	(___ftge@ff2+1)& (0+255),b
  2063  000A4C  0E3F               	movlw	63
  2064  000A4E  0100               	movlb	0	; () banked
  2065  000A50  6F8A               	movwf	(___ftge@ff2+2)& (0+255),b
  2066  000A52  EC7F  F023         	call	___ftge	;wreg free
  2067  000A56  0100               	movlb	0	; () banked
  2068  000A58  B0D8               	btfsc	status,0,c
  2069  000A5A  D005               	goto	l8614
  2070                           
  2071                           ; BSR set to: 0
  2072                           ;doprnt.c: 849: exp--;
  2073  000A5C  0101               	movlb	1	; () banked
  2074  000A5E  0719               	decf	__doprnt@exp& (0+255),f,b
  2075  000A60  A0D8               	btfss	status,0,c
  2076  000A62  071A               	decf	(__doprnt@exp+1)& (0+255),f,b
  2077  000A64  D017               	goto	l8618
  2078  000A66                     l8614:
  2079                           
  2080                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2081  000A66  C11B  F085         	movff	__doprnt@tmpval,___ftge@ff1
  2082  000A6A  C11C  F086         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  2083  000A6E  C11D  F087         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  2084  000A72  0E00               	movlw	0
  2085  000A74  0100               	movlb	0	; () banked
  2086  000A76  6F88               	movwf	___ftge@ff2& (0+255),b
  2087  000A78  0E20               	movlw	32
  2088  000A7A  0100               	movlb	0	; () banked
  2089  000A7C  6F89               	movwf	(___ftge@ff2+1)& (0+255),b
  2090  000A7E  0E41               	movlw	65
  2091  000A80  0100               	movlb	0	; () banked
  2092  000A82  6F8A               	movwf	(___ftge@ff2+2)& (0+255),b
  2093  000A84  EC7F  F023         	call	___ftge	;wreg free
  2094  000A88  0100               	movlb	0	; () banked
  2095  000A8A  A0D8               	btfss	status,0,c
  2096  000A8C  D003               	goto	l8618
  2097                           
  2098                           ; BSR set to: 0
  2099                           ;doprnt.c: 851: exp++;
  2100  000A8E  0101               	movlb	1	; () banked
  2101  000A90  4B19               	infsnz	__doprnt@exp& (0+255),f,b
  2102  000A92  2B1A               	incf	(__doprnt@exp+1)& (0+255),f,b
  2103  000A94                     l8618:
  2104                           
  2105                           ;doprnt.c: 852: }
  2106                           ;doprnt.c: 1112: if(prec <= 12)
  2107  000A94  0101               	movlb	1	; () banked
  2108  000A96  BF27               	btfsc	(__doprnt@prec+1)& (0+255),7,b
  2109  000A98  D008               	goto	l8620
  2110  000A9A  0101               	movlb	1	; () banked
  2111  000A9C  5127               	movf	(__doprnt@prec+1)& (0+255),w,b
  2112  000A9E  E11D               	bnz	l8622
  2113  000AA0  0E0D               	movlw	13
  2114  000AA2  0101               	movlb	1	; () banked
  2115  000AA4  5D26               	subwf	__doprnt@prec& (0+255),w,b
  2116  000AA6  B0D8               	btfsc	status,0,c
  2117  000AA8  D018               	goto	l8622
  2118  000AAA                     l8620:
  2119                           
  2120                           ; BSR set to: 1
  2121                           ;doprnt.c: 1113: fval += fround(prec);
  2122  000AAA  C123  F0B2         	movff	__doprnt@fval,___ftadd@f1
  2123  000AAE  C124  F0B3         	movff	__doprnt@fval+1,___ftadd@f1+1
  2124  000AB2  C125  F0B4         	movff	__doprnt@fval+2,___ftadd@f1+2
  2125  000AB6  0101               	movlb	1	; () banked
  2126  000AB8  5126               	movf	__doprnt@prec& (0+255),w,b
  2127  000ABA  ECFE  F018         	call	_fround
  2128  000ABE  C0A8  F0B5         	movff	?_fround,___ftadd@f2
  2129  000AC2  C0A9  F0B6         	movff	?_fround+1,___ftadd@f2+1
  2130  000AC6  C0AA  F0B7         	movff	?_fround+2,___ftadd@f2+2
  2131  000ACA  EC54  F01A         	call	___ftadd	;wreg free
  2132  000ACE  C0B2  F123         	movff	?___ftadd,__doprnt@fval
  2133  000AD2  C0B3  F124         	movff	?___ftadd+1,__doprnt@fval+1
  2134  000AD6  C0B4  F125         	movff	?___ftadd+2,__doprnt@fval+2
  2135  000ADA                     l8622:
  2136                           
  2137                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2138  000ADA  0101               	movlb	1	; () banked
  2139  000ADC  BF1A               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  2140  000ADE  D008               	goto	l8624
  2141  000AE0  0101               	movlb	1	; () banked
  2142  000AE2  511A               	movf	(__doprnt@exp+1)& (0+255),w,b
  2143  000AE4  E12A               	bnz	l8630
  2144  000AE6  0E0A               	movlw	10
  2145  000AE8  0101               	movlb	1	; () banked
  2146  000AEA  5D19               	subwf	__doprnt@exp& (0+255),w,b
  2147  000AEC  B0D8               	btfsc	status,0,c
  2148  000AEE  D025               	goto	l8630
  2149  000AF0                     l8624:
  2150                           
  2151                           ; BSR set to: 1
  2152  000AF0  0101               	movlb	1	; () banked
  2153  000AF2  5123               	movf	__doprnt@fval& (0+255),w,b
  2154  000AF4  0101               	movlb	1	; () banked
  2155  000AF6  1124               	iorwf	(__doprnt@fval+1)& (0+255),w,b
  2156  000AF8  0101               	movlb	1	; () banked
  2157  000AFA  1125               	iorwf	(__doprnt@fval+2)& (0+255),w,b
  2158  000AFC  B4D8               	btfsc	status,2,c
  2159  000AFE  D063               	goto	l8644
  2160                           
  2161                           ; BSR set to: 1
  2162  000B00  C123  F0AF         	movff	__doprnt@fval,___fttol@f1
  2163  000B04  C124  F0B0         	movff	__doprnt@fval+1,___fttol@f1+1
  2164  000B08  C125  F0B1         	movff	__doprnt@fval+2,___fttol@f1+2
  2165  000B0C  ECC3  F01F         	call	___fttol	;wreg free
  2166  000B10  0100               	movlb	0	; () banked
  2167  000B12  51AF               	movf	?___fttol& (0+255),w,b
  2168  000B14  0100               	movlb	0	; () banked
  2169  000B16  11B0               	iorwf	(?___fttol+1)& (0+255),w,b
  2170  000B18  0100               	movlb	0	; () banked
  2171  000B1A  11B1               	iorwf	(?___fttol+2)& (0+255),w,b
  2172  000B1C  0100               	movlb	0	; () banked
  2173  000B1E  11B2               	iorwf	(?___fttol+3)& (0+255),w,b
  2174  000B20  A4D8               	btfss	status,2,c
  2175  000B22  D051               	goto	l8644
  2176                           
  2177                           ; BSR set to: 0
  2178  000B24  0101               	movlb	1	; () banked
  2179  000B26  BF1A               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  2180  000B28  D04E               	goto	l8644
  2181  000B2A  0101               	movlb	1	; () banked
  2182  000B2C  511A               	movf	(__doprnt@exp+1)& (0+255),w,b
  2183  000B2E  E105               	bnz	l8630
  2184  000B30  0E02               	movlw	2
  2185  000B32  0101               	movlb	1	; () banked
  2186  000B34  5D19               	subwf	__doprnt@exp& (0+255),w,b
  2187  000B36  A0D8               	btfss	status,0,c
  2188  000B38  D046               	goto	l8644
  2189  000B3A                     l8630:
  2190                           
  2191                           ; BSR set to: 1
  2192                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  2193  000B3A  C11B  F085         	movff	__doprnt@tmpval,___ftge@ff1
  2194  000B3E  C11C  F086         	movff	__doprnt@tmpval+1,___ftge@ff1+1
  2195  000B42  C11D  F087         	movff	__doprnt@tmpval+2,___ftge@ff1+2
  2196  000B46  0E70               	movlw	112
  2197  000B48  0100               	movlb	0	; () banked
  2198  000B4A  6F88               	movwf	___ftge@ff2& (0+255),b
  2199  000B4C  0E89               	movlw	137
  2200  000B4E  0100               	movlb	0	; () banked
  2201  000B50  6F89               	movwf	(___ftge@ff2+1)& (0+255),b
  2202  000B52  0E40               	movlw	64
  2203  000B54  0100               	movlb	0	; () banked
  2204  000B56  6F8A               	movwf	(___ftge@ff2+2)& (0+255),b
  2205  000B58  EC7F  F023         	call	___ftge	;wreg free
  2206  000B5C  0100               	movlb	0	; () banked
  2207  000B5E  B0D8               	btfsc	status,0,c
  2208  000B60  D003               	goto	l8634
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2212  000B62  0101               	movlb	1	; () banked
  2213  000B64  0EF7               	movlw	247
  2214  000B66  D002               	goto	L1
  2215  000B68                     l8634:
  2216                           
  2217                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2218  000B68  0101               	movlb	1	; () banked
  2219  000B6A  0EF8               	movlw	248
  2220  000B6C                     L1:
  2221  000B6C  2719               	addwf	__doprnt@exp& (0+255),f,b
  2222  000B6E  0EFF               	movlw	255
  2223  000B70  231A               	addwfc	(__doprnt@exp+1)& (0+255),f,b
  2224                           
  2225                           ; BSR set to: 1
  2226                           ;doprnt.c: 1124: }
  2227                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  2228                           
  2229                           ; BSR set to: 1
  2230  000B72  0101               	movlb	1	; () banked
  2231  000B74  5119               	movf	__doprnt@exp& (0+255),w,b
  2232  000B76  ECAF  F014         	call	_scale
  2233  000B7A  C0A8  F11B         	movff	?_scale,__doprnt@tmpval
  2234  000B7E  C0A9  F11C         	movff	?_scale+1,__doprnt@tmpval+1
  2235  000B82  C0AA  F11D         	movff	?_scale+2,__doprnt@tmpval+2
  2236                           
  2237                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2238  000B86  C123  F085         	movff	__doprnt@fval,__tdiv_to_l_@f1
  2239  000B8A  C124  F086         	movff	__doprnt@fval+1,__tdiv_to_l_@f1+1
  2240  000B8E  C125  F087         	movff	__doprnt@fval+2,__tdiv_to_l_@f1+2
  2241  000B92  C11B  F088         	movff	__doprnt@tmpval,__tdiv_to_l_@f2
  2242  000B96  C11C  F089         	movff	__doprnt@tmpval+1,__tdiv_to_l_@f2+1
  2243  000B9A  C11D  F08A         	movff	__doprnt@tmpval+2,__tdiv_to_l_@f2+2
  2244  000B9E  EC81  F01D         	call	__tdiv_to_l_	;wreg free
  2245  000BA2  C085  F115         	movff	?__tdiv_to_l_,__doprnt@val
  2246  000BA6  C086  F116         	movff	?__tdiv_to_l_+1,__doprnt@val+1
  2247  000BAA  C087  F117         	movff	?__tdiv_to_l_+2,__doprnt@val+2
  2248  000BAE  C088  F118         	movff	?__tdiv_to_l_+3,__doprnt@val+3
  2249                           
  2250                           ;doprnt.c: 1129: fval = 0.0;
  2251  000BB2  0E00               	movlw	0
  2252  000BB4  0101               	movlb	1	; () banked
  2253  000BB6  6F23               	movwf	__doprnt@fval& (0+255),b
  2254  000BB8  0E00               	movlw	0
  2255  000BBA  0101               	movlb	1	; () banked
  2256  000BBC  6F24               	movwf	(__doprnt@fval+1)& (0+255),b
  2257  000BBE  0E00               	movlw	0
  2258  000BC0  0101               	movlb	1	; () banked
  2259  000BC2  6F25               	movwf	(__doprnt@fval+2)& (0+255),b
  2260                           
  2261                           ;doprnt.c: 1130: } else {
  2262  000BC4  D033               	goto	l8648
  2263  000BC6                     l8644:
  2264                           
  2265                           ;doprnt.c: 1131: val = (unsigned long)fval;
  2266  000BC6  C123  F0AF         	movff	__doprnt@fval,___fttol@f1
  2267  000BCA  C124  F0B0         	movff	__doprnt@fval+1,___fttol@f1+1
  2268  000BCE  C125  F0B1         	movff	__doprnt@fval+2,___fttol@f1+2
  2269  000BD2  ECC3  F01F         	call	___fttol	;wreg free
  2270  000BD6  C0AF  F115         	movff	?___fttol,__doprnt@val
  2271  000BDA  C0B0  F116         	movff	?___fttol+1,__doprnt@val+1
  2272  000BDE  C0B1  F117         	movff	?___fttol+2,__doprnt@val+2
  2273  000BE2  C0B2  F118         	movff	?___fttol+3,__doprnt@val+3
  2274                           
  2275                           ;doprnt.c: 1132: fval -= (double)val;
  2276  000BE6  C123  F100         	movff	__doprnt@fval,___ftsub@f1
  2277  000BEA  C124  F101         	movff	__doprnt@fval+1,___ftsub@f1+1
  2278  000BEE  C125  F102         	movff	__doprnt@fval+2,___ftsub@f1+2
  2279  000BF2  C115  F08D         	movff	__doprnt@val,___lltoft@c
  2280  000BF6  C116  F08E         	movff	__doprnt@val+1,___lltoft@c+1
  2281  000BFA  C117  F08F         	movff	__doprnt@val+2,___lltoft@c+2
  2282  000BFE  C118  F090         	movff	__doprnt@val+3,___lltoft@c+3
  2283  000C02  ECB4  F026         	call	___lltoft	;wreg free
  2284  000C06  C08D  F103         	movff	?___lltoft,___ftsub@f2
  2285  000C0A  C08E  F104         	movff	?___lltoft+1,___ftsub@f2+1
  2286  000C0E  C08F  F105         	movff	?___lltoft+2,___ftsub@f2+2
  2287  000C12  EC55  F028         	call	___ftsub	;wreg free
  2288  000C16  C100  F123         	movff	?___ftsub,__doprnt@fval
  2289  000C1A  C101  F124         	movff	?___ftsub+1,__doprnt@fval+1
  2290  000C1E  C102  F125         	movff	?___ftsub+2,__doprnt@fval+2
  2291                           
  2292                           ;doprnt.c: 1133: exp = 0;
  2293  000C22  0E00               	movlw	0
  2294  000C24  0101               	movlb	1	; () banked
  2295  000C26  6F1A               	movwf	(__doprnt@exp+1)& (0+255),b
  2296  000C28  0E00               	movlw	0
  2297  000C2A  6F19               	movwf	__doprnt@exp& (0+255),b
  2298  000C2C                     l8648:
  2299                           
  2300                           ; BSR set to: 1
  2301                           ;doprnt.c: 1134: }
  2302                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2303  000C2C  0E01               	movlw	1
  2304  000C2E  0101               	movlb	1	; () banked
  2305  000C30  6F28               	movwf	__doprnt@c& (0+255),b
  2306  000C32                     l8650:
  2307                           
  2308                           ; BSR set to: 1
  2309  000C32  0E0A               	movlw	10
  2310  000C34  0101               	movlb	1	; () banked
  2311  000C36  1928               	xorwf	__doprnt@c& (0+255),w,b
  2312  000C38  B4D8               	btfsc	status,2,c
  2313  000C3A  D01E               	goto	l8662
  2314                           
  2315                           ; BSR set to: 1
  2316                           ;doprnt.c: 1137: if(val < dpowers[c])
  2317                           
  2318                           ; BSR set to: 1
  2319                           
  2320                           ; BSR set to: 1
  2321  000C3C  0101               	movlb	1	; () banked
  2322  000C3E  5128               	movf	__doprnt@c& (0+255),w,b
  2323  000C40  0D04               	mullw	4
  2324  000C42  0E01               	movlw	low _dpowers
  2325  000C44  24F3               	addwf	prodl,w,c
  2326  000C46  6EF6               	movwf	tblptrl,c
  2327  000C48  0E06               	movlw	high _dpowers
  2328  000C4A  20F4               	addwfc	prodh,w,c
  2329  000C4C  6EF7               	movwf	tblptrh,c
  2330  000C4E                     	if	0	;There are less than 3 active tblptr bytes
  2331  000C4E                     	endif
  2332  000C4E  0009               	tblrd		*+
  2333  000C50  50F5               	movf	tablat,w,c
  2334  000C52  0101               	movlb	1	; () banked
  2335  000C54  5D15               	subwf	__doprnt@val& (0+255),w,b
  2336  000C56  0009               	tblrd		*+
  2337  000C58  50F5               	movf	tablat,w,c
  2338  000C5A  0101               	movlb	1	; () banked
  2339  000C5C  5916               	subwfb	(__doprnt@val+1)& (0+255),w,b
  2340  000C5E  0009               	tblrd		*+
  2341  000C60  50F5               	movf	tablat,w,c
  2342  000C62  0101               	movlb	1	; () banked
  2343  000C64  5917               	subwfb	(__doprnt@val+2)& (0+255),w,b
  2344  000C66  0009               	tblrd		*+
  2345  000C68  50F5               	movf	tablat,w,c
  2346  000C6A  0101               	movlb	1	; () banked
  2347  000C6C  5918               	subwfb	(__doprnt@val+3)& (0+255),w,b
  2348  000C6E  A0D8               	btfss	status,0,c
  2349  000C70  D003               	goto	l8662
  2350                           
  2351                           ; BSR set to: 1
  2352                           
  2353                           ; BSR set to: 1
  2354                           
  2355                           ; BSR set to: 1
  2356                           ;doprnt.c: 1138: break;
  2357  000C72  0101               	movlb	1	; () banked
  2358  000C74  2B28               	incf	__doprnt@c& (0+255),f,b
  2359  000C76  D7DD               	goto	l8650
  2360  000C78                     l8662:
  2361                           
  2362                           ; BSR set to: 1
  2363                           ;doprnt.c: 1142: width -= prec + c + exp;
  2364  000C78  C128  F10C         	movff	__doprnt@c,??__doprnt
  2365  000C7C  0101               	movlb	1	; () banked
  2366  000C7E  6B0D               	clrf	(??__doprnt+1)& (0+255),b
  2367  000C80  BF0C               	btfsc	??__doprnt& (0+255),7,b
  2368  000C82  070D               	decf	(??__doprnt+1)& (0+255),f,b
  2369  000C84  0101               	movlb	1	; () banked
  2370  000C86  5126               	movf	__doprnt@prec& (0+255),w,b
  2371  000C88  0101               	movlb	1	; () banked
  2372  000C8A  270C               	addwf	??__doprnt& (0+255),f,b
  2373  000C8C  0101               	movlb	1	; () banked
  2374  000C8E  5127               	movf	(__doprnt@prec+1)& (0+255),w,b
  2375  000C90  0101               	movlb	1	; () banked
  2376  000C92  230D               	addwfc	(??__doprnt+1)& (0+255),f,b
  2377  000C94  0101               	movlb	1	; () banked
  2378  000C96  5119               	movf	__doprnt@exp& (0+255),w,b
  2379  000C98  0101               	movlb	1	; () banked
  2380  000C9A  270C               	addwf	??__doprnt& (0+255),f,b
  2381  000C9C  0101               	movlb	1	; () banked
  2382  000C9E  511A               	movf	(__doprnt@exp+1)& (0+255),w,b
  2383  000CA0  0101               	movlb	1	; () banked
  2384  000CA2  230D               	addwfc	(??__doprnt+1)& (0+255),f,b
  2385  000CA4  0101               	movlb	1	; () banked
  2386  000CA6  510C               	movf	??__doprnt& (0+255),w,b
  2387  000CA8  0101               	movlb	1	; () banked
  2388  000CAA  5F21               	subwf	__doprnt@width& (0+255),f,b
  2389  000CAC  0101               	movlb	1	; () banked
  2390  000CAE  510D               	movf	(??__doprnt+1)& (0+255),w,b
  2391  000CB0  0101               	movlb	1	; () banked
  2392  000CB2  5B22               	subwfb	(__doprnt@width+1)& (0+255),f,b
  2393                           
  2394                           ;doprnt.c: 1143: if(
  2395                           ;doprnt.c: 1147: prec)
  2396  000CB4  0101               	movlb	1	; () banked
  2397  000CB6  5126               	movf	__doprnt@prec& (0+255),w,b
  2398  000CB8  0101               	movlb	1	; () banked
  2399  000CBA  1127               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  2400  000CBC  B4D8               	btfsc	status,2,c
  2401  000CBE  D004               	goto	l8666
  2402                           
  2403                           ; BSR set to: 1
  2404                           ;doprnt.c: 1148: width--;
  2405  000CC0  0101               	movlb	1	; () banked
  2406  000CC2  0721               	decf	__doprnt@width& (0+255),f,b
  2407  000CC4  A0D8               	btfss	status,0,c
  2408  000CC6  0722               	decf	(__doprnt@width+1)& (0+255),f,b
  2409  000CC8                     l8666:
  2410                           
  2411                           ; BSR set to: 1
  2412                           ;doprnt.c: 1149: if(flag & 0x03)
  2413  000CC8  0E03               	movlw	3
  2414  000CCA  0101               	movlb	1	; () banked
  2415  000CCC  151F               	andwf	__doprnt@flag& (0+255),w,b
  2416  000CCE  0101               	movlb	1	; () banked
  2417  000CD0  6F0C               	movwf	??__doprnt& (0+255),b
  2418  000CD2  0E00               	movlw	0
  2419  000CD4  0101               	movlb	1	; () banked
  2420  000CD6  1520               	andwf	(__doprnt@flag+1)& (0+255),w,b
  2421  000CD8  0101               	movlb	1	; () banked
  2422  000CDA  6F0D               	movwf	(??__doprnt+1)& (0+255),b
  2423  000CDC  0101               	movlb	1	; () banked
  2424  000CDE  510C               	movf	??__doprnt& (0+255),w,b
  2425  000CE0  0101               	movlb	1	; () banked
  2426  000CE2  110D               	iorwf	(??__doprnt+1)& (0+255),w,b
  2427  000CE4  B4D8               	btfsc	status,2,c
  2428  000CE6  D004               	goto	l8670
  2429                           
  2430                           ; BSR set to: 1
  2431                           ;doprnt.c: 1150: width--;
  2432  000CE8  0101               	movlb	1	; () banked
  2433  000CEA  0721               	decf	__doprnt@width& (0+255),f,b
  2434  000CEC  A0D8               	btfss	status,0,c
  2435  000CEE  0722               	decf	(__doprnt@width+1)& (0+255),f,b
  2436  000CF0                     l8670:
  2437                           
  2438                           ; BSR set to: 1
  2439                           ;doprnt.c: 1153: if(flag & 0x04) {
  2440  000CF0  0101               	movlb	1	; () banked
  2441  000CF2  A51F               	btfss	__doprnt@flag& (0+255),2,b
  2442  000CF4  D0C0               	goto	l8704
  2443                           
  2444                           ; BSR set to: 1
  2445                           ;doprnt.c: 1157: if(flag & 0x03)
  2446  000CF6  0E03               	movlw	3
  2447  000CF8  0101               	movlb	1	; () banked
  2448  000CFA  151F               	andwf	__doprnt@flag& (0+255),w,b
  2449  000CFC  0101               	movlb	1	; () banked
  2450  000CFE  6F0C               	movwf	??__doprnt& (0+255),b
  2451  000D00  0E00               	movlw	0
  2452  000D02  0101               	movlb	1	; () banked
  2453  000D04  1520               	andwf	(__doprnt@flag+1)& (0+255),w,b
  2454  000D06  0101               	movlb	1	; () banked
  2455  000D08  6F0D               	movwf	(??__doprnt+1)& (0+255),b
  2456  000D0A  0101               	movlb	1	; () banked
  2457  000D0C  510C               	movf	??__doprnt& (0+255),w,b
  2458  000D0E  0101               	movlb	1	; () banked
  2459  000D10  110D               	iorwf	(??__doprnt+1)& (0+255),w,b
  2460  000D12  B4D8               	btfsc	status,2,c
  2461  000D14  D06D               	goto	l8692
  2462                           
  2463                           ; BSR set to: 1
  2464                           ;doprnt.c: 1159: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  2465  000D16  0101               	movlb	1	; () banked
  2466  000D18  EE20 F002          	lfsr	2,2
  2467  000D1C  5106               	movf	__doprnt@pb& (0+255),w,b
  2468  000D1E  26D9               	addwf	fsr2l,f,c
  2469  000D20  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  2470  000D22  22DA               	addwfc	fsr2h,f,c
  2471  000D24  50DE               	movf	postinc2,w,c
  2472  000D26  10DE               	iorwf	postinc2,w,c
  2473  000D28  B4D8               	btfsc	status,2,c
  2474  000D2A  D014               	goto	l8678
  2475                           
  2476                           ; BSR set to: 1
  2477  000D2C  0101               	movlb	1	; () banked
  2478  000D2E  EE20 F002          	lfsr	2,2
  2479  000D32  5106               	movf	__doprnt@pb& (0+255),w,b
  2480  000D34  26D9               	addwf	fsr2l,f,c
  2481  000D36  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  2482  000D38  22DA               	addwfc	fsr2h,f,c
  2483  000D3A  D801               	call	u14288
  2484  000D3C  D059               	goto	l8692
  2485  000D3E                     u14288:
  2486  000D3E  0005               	push	
  2487  000D40  6EFA               	movwf	pclath,c
  2488  000D42  50DE               	movf	postinc2,w,c
  2489  000D44  6EFD               	movwf	tosl,c
  2490  000D46  50DE               	movf	postinc2,w,c
  2491  000D48  6EFE               	movwf	tosh,c
  2492  000D4A  50F8               	movf	tblptru,w,c
  2493  000D4C  6EFF               	movwf	tosu,c
  2494  000D4E  50FA               	movf	pclath,w,c
  2495  000D50  0E2D               	movlw	45
  2496  000D52  0012               	return		;indir
  2497  000D54                     l8678:
  2498  000D54  C106  FFD9         	movff	__doprnt@pb,fsr2l
  2499  000D58  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  2500  000D5C  CFDE F10C          	movff	postinc2,??__doprnt
  2501  000D60  CFDD F10D          	movff	postdec2,??__doprnt+1
  2502  000D64  C10C  FFD9         	movff	??__doprnt,fsr2l
  2503  000D68  C10D  FFDA         	movff	??__doprnt+1,fsr2h
  2504  000D6C  0E2D               	movlw	45
  2505  000D6E  6EDF               	movwf	indf2,c
  2506  000D70  C106  FFD9         	movff	__doprnt@pb,fsr2l
  2507  000D74  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  2508  000D78  2ADE               	incf	postinc2,f,c
  2509  000D7A  0E00               	movlw	0
  2510  000D7C  22DD               	addwfc	postdec2,f,c
  2511                           
  2512                           ;doprnt.c: 1168: while(width > 0) {
  2513  000D7E  D038               	goto	l8692
  2514  000D80                     l8682:
  2515                           
  2516                           ;doprnt.c: 1169: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  2517  000D80  0101               	movlb	1	; () banked
  2518  000D82  EE20 F002          	lfsr	2,2
  2519  000D86  5106               	movf	__doprnt@pb& (0+255),w,b
  2520  000D88  26D9               	addwf	fsr2l,f,c
  2521  000D8A  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  2522  000D8C  22DA               	addwfc	fsr2h,f,c
  2523  000D8E  50DE               	movf	postinc2,w,c
  2524  000D90  10DE               	iorwf	postinc2,w,c
  2525  000D92  B4D8               	btfsc	status,2,c
  2526  000D94  D014               	goto	l8686
  2527                           
  2528                           ; BSR set to: 1
  2529  000D96  0101               	movlb	1	; () banked
  2530  000D98  EE20 F002          	lfsr	2,2
  2531  000D9C  5106               	movf	__doprnt@pb& (0+255),w,b
  2532  000D9E  26D9               	addwf	fsr2l,f,c
  2533  000DA0  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  2534  000DA2  22DA               	addwfc	fsr2h,f,c
  2535  000DA4  D801               	call	u14308
  2536  000DA6  D020               	goto	l8690
  2537  000DA8                     u14308:
  2538  000DA8  0005               	push	
  2539  000DAA  6EFA               	movwf	pclath,c
  2540  000DAC  50DE               	movf	postinc2,w,c
  2541  000DAE  6EFD               	movwf	tosl,c
  2542  000DB0  50DE               	movf	postinc2,w,c
  2543  000DB2  6EFE               	movwf	tosh,c
  2544  000DB4  50F8               	movf	tblptru,w,c
  2545  000DB6  6EFF               	movwf	tosu,c
  2546  000DB8  50FA               	movf	pclath,w,c
  2547  000DBA  0E30               	movlw	48
  2548  000DBC  0012               	return		;indir
  2549  000DBE                     l8686:
  2550  000DBE  C106  FFD9         	movff	__doprnt@pb,fsr2l
  2551  000DC2  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  2552  000DC6  CFDE F10C          	movff	postinc2,??__doprnt
  2553  000DCA  CFDD F10D          	movff	postdec2,??__doprnt+1
  2554  000DCE  C10C  FFD9         	movff	??__doprnt,fsr2l
  2555  000DD2  C10D  FFDA         	movff	??__doprnt+1,fsr2h
  2556  000DD6  0E30               	movlw	48
  2557  000DD8  6EDF               	movwf	indf2,c
  2558  000DDA  C106  FFD9         	movff	__doprnt@pb,fsr2l
  2559  000DDE  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  2560  000DE2  2ADE               	incf	postinc2,f,c
  2561  000DE4  0E00               	movlw	0
  2562  000DE6  22DD               	addwfc	postdec2,f,c
  2563  000DE8                     l8690:
  2564                           
  2565                           ;doprnt.c: 1170: width--;
  2566  000DE8  0101               	movlb	1	; () banked
  2567  000DEA  0721               	decf	__doprnt@width& (0+255),f,b
  2568  000DEC  A0D8               	btfss	status,0,c
  2569  000DEE  0722               	decf	(__doprnt@width+1)& (0+255),f,b
  2570  000DF0                     l8692:
  2571  000DF0  0101               	movlb	1	; () banked
  2572  000DF2  BF22               	btfsc	(__doprnt@width+1)& (0+255),7,b
  2573  000DF4  D103               	goto	l8726
  2574  000DF6  0101               	movlb	1	; () banked
  2575  000DF8  5122               	movf	(__doprnt@width+1)& (0+255),w,b
  2576  000DFA  E1C2               	bnz	l8682
  2577  000DFC  0101               	movlb	1	; () banked
  2578  000DFE  0521               	decf	__doprnt@width& (0+255),w,b
  2579  000E00  A0D8               	btfss	status,0,c
  2580  000E02  D0FC               	goto	l8726
  2581  000E04  D7BD               	goto	l8682
  2582  000E06                     l8694:
  2583                           
  2584                           ; BSR set to: 1
  2585                           ;doprnt.c: 1181: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  2586  000E06  0101               	movlb	1	; () banked
  2587  000E08  EE20 F002          	lfsr	2,2
  2588  000E0C  5106               	movf	__doprnt@pb& (0+255),w,b
  2589  000E0E  26D9               	addwf	fsr2l,f,c
  2590  000E10  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  2591  000E12  22DA               	addwfc	fsr2h,f,c
  2592  000E14  50DE               	movf	postinc2,w,c
  2593  000E16  10DE               	iorwf	postinc2,w,c
  2594  000E18  B4D8               	btfsc	status,2,c
  2595  000E1A  D014               	goto	l8698
  2596                           
  2597                           ; BSR set to: 1
  2598  000E1C  0101               	movlb	1	; () banked
  2599  000E1E  EE20 F002          	lfsr	2,2
  2600  000E22  5106               	movf	__doprnt@pb& (0+255),w,b
  2601  000E24  26D9               	addwf	fsr2l,f,c
  2602  000E26  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  2603  000E28  22DA               	addwfc	fsr2h,f,c
  2604  000E2A  D801               	call	u14338
  2605  000E2C  D020               	goto	l8702
  2606  000E2E                     u14338:
  2607  000E2E  0005               	push	
  2608  000E30  6EFA               	movwf	pclath,c
  2609  000E32  50DE               	movf	postinc2,w,c
  2610  000E34  6EFD               	movwf	tosl,c
  2611  000E36  50DE               	movf	postinc2,w,c
  2612  000E38  6EFE               	movwf	tosh,c
  2613  000E3A  50F8               	movf	tblptru,w,c
  2614  000E3C  6EFF               	movwf	tosu,c
  2615  000E3E  50FA               	movf	pclath,w,c
  2616  000E40  0E20               	movlw	32
  2617  000E42  0012               	return		;indir
  2618  000E44                     l8698:
  2619  000E44  C106  FFD9         	movff	__doprnt@pb,fsr2l
  2620  000E48  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  2621  000E4C  CFDE F10C          	movff	postinc2,??__doprnt
  2622  000E50  CFDD F10D          	movff	postdec2,??__doprnt+1
  2623  000E54  C10C  FFD9         	movff	??__doprnt,fsr2l
  2624  000E58  C10D  FFDA         	movff	??__doprnt+1,fsr2h
  2625  000E5C  0E20               	movlw	32
  2626  000E5E  6EDF               	movwf	indf2,c
  2627  000E60  C106  FFD9         	movff	__doprnt@pb,fsr2l
  2628  000E64  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  2629  000E68  2ADE               	incf	postinc2,f,c
  2630  000E6A  0E00               	movlw	0
  2631  000E6C  22DD               	addwfc	postdec2,f,c
  2632  000E6E                     l8702:
  2633                           
  2634                           ;doprnt.c: 1182: width--;
  2635  000E6E  0101               	movlb	1	; () banked
  2636  000E70  0721               	decf	__doprnt@width& (0+255),f,b
  2637  000E72  A0D8               	btfss	status,0,c
  2638  000E74  0722               	decf	(__doprnt@width+1)& (0+255),f,b
  2639  000E76                     l8704:
  2640                           
  2641                           ; BSR set to: 1
  2642  000E76  0101               	movlb	1	; () banked
  2643  000E78  BF22               	btfsc	(__doprnt@width+1)& (0+255),7,b
  2644  000E7A  D007               	goto	l8706
  2645  000E7C  0101               	movlb	1	; () banked
  2646  000E7E  5122               	movf	(__doprnt@width+1)& (0+255),w,b
  2647  000E80  E1C2               	bnz	l8694
  2648  000E82  0101               	movlb	1	; () banked
  2649  000E84  0521               	decf	__doprnt@width& (0+255),w,b
  2650  000E86  B0D8               	btfsc	status,0,c
  2651  000E88  D7BE               	goto	l8694
  2652  000E8A                     l8706:
  2653                           
  2654                           ; BSR set to: 1
  2655                           ;doprnt.c: 1183: }
  2656                           ;doprnt.c: 1188: if(flag & 0x03)
  2657  000E8A  0E03               	movlw	3
  2658  000E8C  0101               	movlb	1	; () banked
  2659  000E8E  151F               	andwf	__doprnt@flag& (0+255),w,b
  2660  000E90  0101               	movlb	1	; () banked
  2661  000E92  6F0C               	movwf	??__doprnt& (0+255),b
  2662  000E94  0E00               	movlw	0
  2663  000E96  0101               	movlb	1	; () banked
  2664  000E98  1520               	andwf	(__doprnt@flag+1)& (0+255),w,b
  2665  000E9A  0101               	movlb	1	; () banked
  2666  000E9C  6F0D               	movwf	(??__doprnt+1)& (0+255),b
  2667  000E9E  0101               	movlb	1	; () banked
  2668  000EA0  510C               	movf	??__doprnt& (0+255),w,b
  2669  000EA2  0101               	movlb	1	; () banked
  2670  000EA4  110D               	iorwf	(??__doprnt+1)& (0+255),w,b
  2671  000EA6  B4D8               	btfsc	status,2,c
  2672  000EA8  D0A9               	goto	l8726
  2673                           
  2674                           ; BSR set to: 1
  2675                           ;doprnt.c: 1190: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  2676  000EAA  0101               	movlb	1	; () banked
  2677  000EAC  EE20 F002          	lfsr	2,2
  2678  000EB0  5106               	movf	__doprnt@pb& (0+255),w,b
  2679  000EB2  26D9               	addwf	fsr2l,f,c
  2680  000EB4  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  2681  000EB6  22DA               	addwfc	fsr2h,f,c
  2682  000EB8  50DE               	movf	postinc2,w,c
  2683  000EBA  10DE               	iorwf	postinc2,w,c
  2684  000EBC  B4D8               	btfsc	status,2,c
  2685  000EBE  D014               	goto	l8712
  2686                           
  2687                           ; BSR set to: 1
  2688  000EC0  0101               	movlb	1	; () banked
  2689  000EC2  EE20 F002          	lfsr	2,2
  2690  000EC6  5106               	movf	__doprnt@pb& (0+255),w,b
  2691  000EC8  26D9               	addwf	fsr2l,f,c
  2692  000ECA  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  2693  000ECC  22DA               	addwfc	fsr2h,f,c
  2694  000ECE  D801               	call	u14378
  2695  000ED0  D095               	goto	l8726
  2696  000ED2                     u14378:
  2697  000ED2  0005               	push	
  2698  000ED4  6EFA               	movwf	pclath,c
  2699  000ED6  50DE               	movf	postinc2,w,c
  2700  000ED8  6EFD               	movwf	tosl,c
  2701  000EDA  50DE               	movf	postinc2,w,c
  2702  000EDC  6EFE               	movwf	tosh,c
  2703  000EDE  50F8               	movf	tblptru,w,c
  2704  000EE0  6EFF               	movwf	tosu,c
  2705  000EE2  50FA               	movf	pclath,w,c
  2706  000EE4  0E2D               	movlw	45
  2707  000EE6  0012               	return		;indir
  2708  000EE8                     l8712:
  2709  000EE8  C106  FFD9         	movff	__doprnt@pb,fsr2l
  2710  000EEC  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  2711  000EF0  CFDE F10C          	movff	postinc2,??__doprnt
  2712  000EF4  CFDD F10D          	movff	postdec2,??__doprnt+1
  2713  000EF8  C10C  FFD9         	movff	??__doprnt,fsr2l
  2714  000EFC  C10D  FFDA         	movff	??__doprnt+1,fsr2h
  2715  000F00  0E2D               	movlw	45
  2716  000F02  D07A               	goto	L2
  2717  000F04                     l8714:
  2718  000F04  C106  FFD9         	movff	__doprnt@pb,fsr2l
  2719  000F08  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  2720  000F0C  2ADE               	incf	postinc2,f,c
  2721  000F0E  0E00               	movlw	0
  2722  000F10  22DD               	addwfc	postdec2,f,c
  2723                           
  2724                           ;doprnt.c: 1195: }
  2725                           ;doprnt.c: 1196: while(c--) {
  2726  000F12  D074               	goto	l8726
  2727  000F14                     l8716:
  2728                           
  2729                           ;doprnt.c: 1200: {
  2730                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  2731  000F14  C115  F085         	movff	__doprnt@val,___lldiv@dividend
  2732  000F18  C116  F086         	movff	__doprnt@val+1,___lldiv@dividend+1
  2733  000F1C  C117  F087         	movff	__doprnt@val+2,___lldiv@dividend+2
  2734  000F20  C118  F088         	movff	__doprnt@val+3,___lldiv@dividend+3
  2735  000F24  0101               	movlb	1	; () banked
  2736  000F26  5128               	movf	__doprnt@c& (0+255),w,b
  2737  000F28  0D04               	mullw	4
  2738  000F2A  0E01               	movlw	low _dpowers
  2739  000F2C  24F3               	addwf	prodl,w,c
  2740  000F2E  6EF6               	movwf	tblptrl,c
  2741  000F30  0E06               	movlw	high _dpowers
  2742  000F32  20F4               	addwfc	prodh,w,c
  2743  000F34  6EF7               	movwf	tblptrh,c
  2744  000F36                     	if	0	;There are less than 3 active tblptr bytes
  2745  000F36                     	endif
  2746  000F36  0009               	tblrd		*+
  2747  000F38  CFF5 F089          	movff	tablat,___lldiv@divisor
  2748  000F3C  0009               	tblrd		*+
  2749  000F3E  CFF5 F08A          	movff	tablat,___lldiv@divisor+1
  2750  000F42  0009               	tblrd		*+
  2751  000F44  CFF5 F08B          	movff	tablat,___lldiv@divisor+2
  2752  000F48  000A               	tblrd		*-
  2753  000F4A  CFF5 F08C          	movff	tablat,___lldiv@divisor+3
  2754  000F4E  EC42  F024         	call	___lldiv
  2755  000F52  C085  F11B         	movff	?___lldiv,__doprnt@tmpval
  2756  000F56  C086  F11C         	movff	?___lldiv+1,__doprnt@tmpval+1
  2757  000F5A  C087  F11D         	movff	?___lldiv+2,__doprnt@tmpval+2
  2758  000F5E  C088  F11E         	movff	?___lldiv+3,__doprnt@tmpval+3
  2759                           
  2760                           ;doprnt.c: 1202: tmpval.vd %= 10;
  2761  000F62  C11B  F092         	movff	__doprnt@tmpval,___llmod@dividend
  2762  000F66  C11C  F093         	movff	__doprnt@tmpval+1,___llmod@dividend+1
  2763  000F6A  C11D  F094         	movff	__doprnt@tmpval+2,___llmod@dividend+2
  2764  000F6E  C11E  F095         	movff	__doprnt@tmpval+3,___llmod@dividend+3
  2765  000F72  0E0A               	movlw	10
  2766  000F74  0100               	movlb	0	; () banked
  2767  000F76  6F96               	movwf	___llmod@divisor& (0+255),b
  2768  000F78  0E00               	movlw	0
  2769  000F7A  6F97               	movwf	(___llmod@divisor+1)& (0+255),b
  2770  000F7C  0E00               	movlw	0
  2771  000F7E  6F98               	movwf	(___llmod@divisor+2)& (0+255),b
  2772  000F80  0E00               	movlw	0
  2773  000F82  6F99               	movwf	(___llmod@divisor+3)& (0+255),b
  2774  000F84  EC9C  F025         	call	___llmod	;wreg free
  2775  000F88  C092  F11B         	movff	?___llmod,__doprnt@tmpval
  2776  000F8C  C093  F11C         	movff	?___llmod+1,__doprnt@tmpval+1
  2777  000F90  C094  F11D         	movff	?___llmod+2,__doprnt@tmpval+2
  2778  000F94  C095  F11E         	movff	?___llmod+3,__doprnt@tmpval+3
  2779                           
  2780                           ;doprnt.c: 1203: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
  2781  000F98  0101               	movlb	1	; () banked
  2782  000F9A  EE20 F002          	lfsr	2,2
  2783  000F9E  5106               	movf	__doprnt@pb& (0+255),w,b
  2784  000FA0  26D9               	addwf	fsr2l,f,c
  2785  000FA2  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  2786  000FA4  22DA               	addwfc	fsr2h,f,c
  2787  000FA6  50DE               	movf	postinc2,w,c
  2788  000FA8  10DE               	iorwf	postinc2,w,c
  2789  000FAA  B4D8               	btfsc	status,2,c
  2790  000FAC  D016               	goto	l8724
  2791                           
  2792                           ; BSR set to: 1
  2793  000FAE  0101               	movlb	1	; () banked
  2794  000FB0  EE20 F002          	lfsr	2,2
  2795  000FB4  5106               	movf	__doprnt@pb& (0+255),w,b
  2796  000FB6  26D9               	addwf	fsr2l,f,c
  2797  000FB8  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  2798  000FBA  22DA               	addwfc	fsr2h,f,c
  2799  000FBC  D801               	call	u14398
  2800  000FBE  D01E               	goto	l8726
  2801  000FC0                     u14398:
  2802  000FC0  0005               	push	
  2803  000FC2  6EFA               	movwf	pclath,c
  2804  000FC4  50DE               	movf	postinc2,w,c
  2805  000FC6  6EFD               	movwf	tosl,c
  2806  000FC8  50DE               	movf	postinc2,w,c
  2807  000FCA  6EFE               	movwf	tosh,c
  2808  000FCC  50F8               	movf	tblptru,w,c
  2809  000FCE  6EFF               	movwf	tosu,c
  2810  000FD0  50FA               	movf	pclath,w,c
  2811  000FD2  0101               	movlb	1	; () banked
  2812  000FD4  511B               	movf	__doprnt@tmpval& (0+255),w,b
  2813  000FD6  0F30               	addlw	48
  2814  000FD8  0012               	return		;indir
  2815  000FDA                     l8724:
  2816  000FDA  0101               	movlb	1	; () banked
  2817  000FDC  511B               	movf	__doprnt@tmpval& (0+255),w,b
  2818  000FDE  0F30               	addlw	48
  2819  000FE0  C106  FFD9         	movff	__doprnt@pb,fsr2l
  2820  000FE4  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  2821  000FE8  CFDE F10C          	movff	postinc2,??__doprnt
  2822  000FEC  CFDD F10D          	movff	postdec2,??__doprnt+1
  2823  000FF0  C10C  FFD9         	movff	??__doprnt,fsr2l
  2824  000FF4  C10D  FFDA         	movff	??__doprnt+1,fsr2h
  2825  000FF8                     L2:
  2826  000FF8  6EDF               	movwf	indf2,c
  2827  000FFA  D784               	goto	l8714
  2828  000FFC                     l8726:
  2829  000FFC  0101               	movlb	1	; () banked
  2830  000FFE  0728               	decf	__doprnt@c& (0+255),f,b
  2831  001000  0101               	movlb	1	; () banked
  2832  001002  2928               	incf	__doprnt@c& (0+255),w,b
  2833  001004  B4D8               	btfsc	status,2,c
  2834  001006  D039               	goto	l8738
  2835  001008  D785               	goto	l8716
  2836  00100A                     l8728:
  2837                           
  2838                           ; BSR set to: 1
  2839                           ;doprnt.c: 1208: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  2840  00100A  0101               	movlb	1	; () banked
  2841  00100C  EE20 F002          	lfsr	2,2
  2842  001010  5106               	movf	__doprnt@pb& (0+255),w,b
  2843  001012  26D9               	addwf	fsr2l,f,c
  2844  001014  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  2845  001016  22DA               	addwfc	fsr2h,f,c
  2846  001018  50DE               	movf	postinc2,w,c
  2847  00101A  10DE               	iorwf	postinc2,w,c
  2848  00101C  B4D8               	btfsc	status,2,c
  2849  00101E  D014               	goto	l8732
  2850                           
  2851                           ; BSR set to: 1
  2852  001020  0101               	movlb	1	; () banked
  2853  001022  EE20 F002          	lfsr	2,2
  2854  001026  5106               	movf	__doprnt@pb& (0+255),w,b
  2855  001028  26D9               	addwf	fsr2l,f,c
  2856  00102A  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  2857  00102C  22DA               	addwfc	fsr2h,f,c
  2858  00102E  D801               	call	u14428
  2859  001030  D020               	goto	l8736
  2860  001032                     u14428:
  2861  001032  0005               	push	
  2862  001034  6EFA               	movwf	pclath,c
  2863  001036  50DE               	movf	postinc2,w,c
  2864  001038  6EFD               	movwf	tosl,c
  2865  00103A  50DE               	movf	postinc2,w,c
  2866  00103C  6EFE               	movwf	tosh,c
  2867  00103E  50F8               	movf	tblptru,w,c
  2868  001040  6EFF               	movwf	tosu,c
  2869  001042  50FA               	movf	pclath,w,c
  2870  001044  0E30               	movlw	48
  2871  001046  0012               	return		;indir
  2872  001048                     l8732:
  2873  001048  C106  FFD9         	movff	__doprnt@pb,fsr2l
  2874  00104C  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  2875  001050  CFDE F10C          	movff	postinc2,??__doprnt
  2876  001054  CFDD F10D          	movff	postdec2,??__doprnt+1
  2877  001058  C10C  FFD9         	movff	??__doprnt,fsr2l
  2878  00105C  C10D  FFDA         	movff	??__doprnt+1,fsr2h
  2879  001060  0E30               	movlw	48
  2880  001062  6EDF               	movwf	indf2,c
  2881  001064  C106  FFD9         	movff	__doprnt@pb,fsr2l
  2882  001068  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  2883  00106C  2ADE               	incf	postinc2,f,c
  2884  00106E  0E00               	movlw	0
  2885  001070  22DD               	addwfc	postdec2,f,c
  2886  001072                     l8736:
  2887                           
  2888                           ;doprnt.c: 1209: exp--;
  2889  001072  0101               	movlb	1	; () banked
  2890  001074  0719               	decf	__doprnt@exp& (0+255),f,b
  2891  001076  A0D8               	btfss	status,0,c
  2892  001078  071A               	decf	(__doprnt@exp+1)& (0+255),f,b
  2893  00107A                     l8738:
  2894                           
  2895                           ; BSR set to: 1
  2896  00107A  0101               	movlb	1	; () banked
  2897  00107C  BF1A               	btfsc	(__doprnt@exp+1)& (0+255),7,b
  2898  00107E  D007               	goto	l8740
  2899  001080  0101               	movlb	1	; () banked
  2900  001082  511A               	movf	(__doprnt@exp+1)& (0+255),w,b
  2901  001084  E1C2               	bnz	l8728
  2902  001086  0101               	movlb	1	; () banked
  2903  001088  0519               	decf	__doprnt@exp& (0+255),w,b
  2904  00108A  B0D8               	btfsc	status,0,c
  2905  00108C  D7BE               	goto	l8728
  2906  00108E                     l8740:
  2907                           
  2908                           ; BSR set to: 1
  2909                           ;doprnt.c: 1210: }
  2910                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2911  00108E  0101               	movlb	1	; () banked
  2912  001090  BF27               	btfsc	(__doprnt@prec+1)& (0+255),7,b
  2913  001092  D00C               	goto	l403
  2914  001094  0101               	movlb	1	; () banked
  2915  001096  5127               	movf	(__doprnt@prec+1)& (0+255),w,b
  2916  001098  E105               	bnz	u14440
  2917  00109A  0E09               	movlw	9
  2918  00109C  0101               	movlb	1	; () banked
  2919  00109E  5D26               	subwf	__doprnt@prec& (0+255),w,b
  2920  0010A0  A0D8               	btfss	status,0,c
  2921  0010A2  D004               	goto	l403
  2922  0010A4                     u14440:
  2923                           
  2924                           ; BSR set to: 1
  2925                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2926  0010A4  0E08               	movlw	8
  2927  0010A6  0101               	movlb	1	; () banked
  2928  0010A8  6F28               	movwf	__doprnt@c& (0+255),b
  2929  0010AA  D002               	goto	l8744
  2930  0010AC                     l403:
  2931                           
  2932                           ; BSR set to: 1
  2933                           ;doprnt.c: 1213: else
  2934                           ;doprnt.c: 1214: c = prec;
  2935  0010AC  C126  F128         	movff	__doprnt@prec,__doprnt@c
  2936  0010B0                     l8744:
  2937                           
  2938                           ; BSR set to: 1
  2939                           ;doprnt.c: 1215: prec -= c;
  2940  0010B0  0101               	movlb	1	; () banked
  2941  0010B2  5128               	movf	__doprnt@c& (0+255),w,b
  2942  0010B4  0101               	movlb	1	; () banked
  2943  0010B6  5F26               	subwf	__doprnt@prec& (0+255),f,b
  2944  0010B8  0E00               	movlw	0
  2945  0010BA  0101               	movlb	1	; () banked
  2946  0010BC  BF28               	btfsc	__doprnt@c& (0+255),7,b
  2947  0010BE  0EFF               	movlw	255
  2948  0010C0  0101               	movlb	1	; () banked
  2949  0010C2  5B27               	subwfb	(__doprnt@prec+1)& (0+255),f,b
  2950                           
  2951                           ; BSR set to: 1
  2952                           ;doprnt.c: 1219: if(c)
  2953  0010C4  0101               	movlb	1	; () banked
  2954  0010C6  5128               	movf	__doprnt@c& (0+255),w,b
  2955  0010C8  0101               	movlb	1	; () banked
  2956  0010CA  B4D8               	btfsc	status,2,c
  2957  0010CC  D034               	goto	l8756
  2958                           
  2959                           ; BSR set to: 1
  2960                           ;doprnt.c: 1221: if(pb->func) (pb->func('.')); else ((*pb->ptr++ = '.'));
  2961  0010CE  0101               	movlb	1	; () banked
  2962  0010D0  EE20 F002          	lfsr	2,2
  2963  0010D4  5106               	movf	__doprnt@pb& (0+255),w,b
  2964  0010D6  26D9               	addwf	fsr2l,f,c
  2965  0010D8  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  2966  0010DA  22DA               	addwfc	fsr2h,f,c
  2967  0010DC  50DE               	movf	postinc2,w,c
  2968  0010DE  10DE               	iorwf	postinc2,w,c
  2969  0010E0  B4D8               	btfsc	status,2,c
  2970  0010E2  D014               	goto	l8752
  2971                           
  2972                           ; BSR set to: 1
  2973  0010E4  0101               	movlb	1	; () banked
  2974  0010E6  EE20 F002          	lfsr	2,2
  2975  0010EA  5106               	movf	__doprnt@pb& (0+255),w,b
  2976  0010EC  26D9               	addwf	fsr2l,f,c
  2977  0010EE  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  2978  0010F0  22DA               	addwfc	fsr2h,f,c
  2979  0010F2  D801               	call	u14478
  2980  0010F4  D020               	goto	l8756
  2981  0010F6                     u14478:
  2982  0010F6  0005               	push	
  2983  0010F8  6EFA               	movwf	pclath,c
  2984  0010FA  50DE               	movf	postinc2,w,c
  2985  0010FC  6EFD               	movwf	tosl,c
  2986  0010FE  50DE               	movf	postinc2,w,c
  2987  001100  6EFE               	movwf	tosh,c
  2988  001102  50F8               	movf	tblptru,w,c
  2989  001104  6EFF               	movwf	tosu,c
  2990  001106  50FA               	movf	pclath,w,c
  2991  001108  0E2E               	movlw	46
  2992  00110A  0012               	return		;indir
  2993  00110C                     l8752:
  2994  00110C  C106  FFD9         	movff	__doprnt@pb,fsr2l
  2995  001110  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  2996  001114  CFDE F10C          	movff	postinc2,??__doprnt
  2997  001118  CFDD F10D          	movff	postdec2,??__doprnt+1
  2998  00111C  C10C  FFD9         	movff	??__doprnt,fsr2l
  2999  001120  C10D  FFDA         	movff	??__doprnt+1,fsr2h
  3000  001124  0E2E               	movlw	46
  3001  001126  6EDF               	movwf	indf2,c
  3002  001128  C106  FFD9         	movff	__doprnt@pb,fsr2l
  3003  00112C  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  3004  001130  2ADE               	incf	postinc2,f,c
  3005  001132  0E00               	movlw	0
  3006  001134  22DD               	addwfc	postdec2,f,c
  3007  001136                     l8756:
  3008                           
  3009                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3010  001136  0101               	movlb	1	; () banked
  3011  001138  5128               	movf	__doprnt@c& (0+255),w,b
  3012  00113A  ECAF  F014         	call	_scale
  3013  00113E  C0A8  F112         	movff	?_scale,__doprnt$1621
  3014  001142  C0A9  F113         	movff	?_scale+1,__doprnt$1621+1
  3015  001146  C0AA  F114         	movff	?_scale+2,__doprnt$1621+2
  3016                           
  3017                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3018  00114A  C123  F09C         	movff	__doprnt@fval,___ftmul@f2
  3019  00114E  C124  F09D         	movff	__doprnt@fval+1,___ftmul@f2+1
  3020  001152  C125  F09E         	movff	__doprnt@fval+2,___ftmul@f2+2
  3021  001156  C112  F099         	movff	__doprnt$1621,___ftmul@f1
  3022  00115A  C113  F09A         	movff	__doprnt$1621+1,___ftmul@f1+1
  3023  00115E  C114  F09B         	movff	__doprnt$1621+2,___ftmul@f1+2
  3024  001162  EC14  F01F         	call	___ftmul	;wreg free
  3025  001166  C099  F0AF         	movff	?___ftmul,___fttol@f1
  3026  00116A  C09A  F0B0         	movff	?___ftmul+1,___fttol@f1+1
  3027  00116E  C09B  F0B1         	movff	?___ftmul+2,___fttol@f1+2
  3028  001172  ECC3  F01F         	call	___fttol	;wreg free
  3029  001176  C0AF  F115         	movff	?___fttol,__doprnt@val
  3030  00117A  C0B0  F116         	movff	?___fttol+1,__doprnt@val+1
  3031  00117E  C0B1  F117         	movff	?___fttol+2,__doprnt@val+2
  3032  001182  C0B2  F118         	movff	?___fttol+3,__doprnt@val+3
  3033                           
  3034                           ;doprnt.c: 1228: while(c--) {
  3035  001186  D0A1               	goto	l8772
  3036  001188                     l8760:
  3037                           
  3038                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3039  001188  C115  F085         	movff	__doprnt@val,___lldiv@dividend
  3040  00118C  C116  F086         	movff	__doprnt@val+1,___lldiv@dividend+1
  3041  001190  C117  F087         	movff	__doprnt@val+2,___lldiv@dividend+2
  3042  001194  C118  F088         	movff	__doprnt@val+3,___lldiv@dividend+3
  3043  001198  0101               	movlb	1	; () banked
  3044  00119A  5128               	movf	__doprnt@c& (0+255),w,b
  3045  00119C  0D04               	mullw	4
  3046  00119E  0E01               	movlw	low _dpowers
  3047  0011A0  24F3               	addwf	prodl,w,c
  3048  0011A2  6EF6               	movwf	tblptrl,c
  3049  0011A4  0E06               	movlw	high _dpowers
  3050  0011A6  20F4               	addwfc	prodh,w,c
  3051  0011A8  6EF7               	movwf	tblptrh,c
  3052  0011AA                     	if	0	;There are less than 3 active tblptr bytes
  3053  0011AA                     	endif
  3054  0011AA  0009               	tblrd		*+
  3055  0011AC  CFF5 F089          	movff	tablat,___lldiv@divisor
  3056  0011B0  0009               	tblrd		*+
  3057  0011B2  CFF5 F08A          	movff	tablat,___lldiv@divisor+1
  3058  0011B6  0009               	tblrd		*+
  3059  0011B8  CFF5 F08B          	movff	tablat,___lldiv@divisor+2
  3060  0011BC  000A               	tblrd		*-
  3061  0011BE  CFF5 F08C          	movff	tablat,___lldiv@divisor+3
  3062  0011C2  EC42  F024         	call	___lldiv	;wreg free
  3063  0011C6  C085  F11B         	movff	?___lldiv,__doprnt@tmpval
  3064  0011CA  C086  F11C         	movff	?___lldiv+1,__doprnt@tmpval+1
  3065  0011CE  C087  F11D         	movff	?___lldiv+2,__doprnt@tmpval+2
  3066  0011D2  C088  F11E         	movff	?___lldiv+3,__doprnt@tmpval+3
  3067                           
  3068                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3069  0011D6  C11B  F092         	movff	__doprnt@tmpval,___llmod@dividend
  3070  0011DA  C11C  F093         	movff	__doprnt@tmpval+1,___llmod@dividend+1
  3071  0011DE  C11D  F094         	movff	__doprnt@tmpval+2,___llmod@dividend+2
  3072  0011E2  C11E  F095         	movff	__doprnt@tmpval+3,___llmod@dividend+3
  3073  0011E6  0E0A               	movlw	10
  3074  0011E8  0100               	movlb	0	; () banked
  3075  0011EA  6F96               	movwf	___llmod@divisor& (0+255),b
  3076  0011EC  0E00               	movlw	0
  3077  0011EE  6F97               	movwf	(___llmod@divisor+1)& (0+255),b
  3078  0011F0  0E00               	movlw	0
  3079  0011F2  6F98               	movwf	(___llmod@divisor+2)& (0+255),b
  3080  0011F4  0E00               	movlw	0
  3081  0011F6  6F99               	movwf	(___llmod@divisor+3)& (0+255),b
  3082  0011F8  EC9C  F025         	call	___llmod	;wreg free
  3083  0011FC  C092  F11B         	movff	?___llmod,__doprnt@tmpval
  3084  001200  C093  F11C         	movff	?___llmod+1,__doprnt@tmpval+1
  3085  001204  C094  F11D         	movff	?___llmod+2,__doprnt@tmpval+2
  3086  001208  C095  F11E         	movff	?___llmod+3,__doprnt@tmpval+3
  3087                           
  3088                           ;doprnt.c: 1231: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
  3089  00120C  0101               	movlb	1	; () banked
  3090  00120E  EE20 F002          	lfsr	2,2
  3091  001212  5106               	movf	__doprnt@pb& (0+255),w,b
  3092  001214  26D9               	addwf	fsr2l,f,c
  3093  001216  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  3094  001218  22DA               	addwfc	fsr2h,f,c
  3095  00121A  50DE               	movf	postinc2,w,c
  3096  00121C  10DE               	iorwf	postinc2,w,c
  3097  00121E  B4D8               	btfsc	status,2,c
  3098  001220  D016               	goto	l8768
  3099                           
  3100                           ; BSR set to: 1
  3101  001222  0101               	movlb	1	; () banked
  3102  001224  EE20 F002          	lfsr	2,2
  3103  001228  5106               	movf	__doprnt@pb& (0+255),w,b
  3104  00122A  26D9               	addwf	fsr2l,f,c
  3105  00122C  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  3106  00122E  22DA               	addwfc	fsr2h,f,c
  3107  001230  D801               	call	u14498
  3108  001232  D024               	goto	l8770
  3109  001234                     u14498:
  3110  001234  0005               	push	
  3111  001236  6EFA               	movwf	pclath,c
  3112  001238  50DE               	movf	postinc2,w,c
  3113  00123A  6EFD               	movwf	tosl,c
  3114  00123C  50DE               	movf	postinc2,w,c
  3115  00123E  6EFE               	movwf	tosh,c
  3116  001240  50F8               	movf	tblptru,w,c
  3117  001242  6EFF               	movwf	tosu,c
  3118  001244  50FA               	movf	pclath,w,c
  3119  001246  0101               	movlb	1	; () banked
  3120  001248  511B               	movf	__doprnt@tmpval& (0+255),w,b
  3121  00124A  0F30               	addlw	48
  3122  00124C  0012               	return		;indir
  3123  00124E                     l8768:
  3124  00124E  0101               	movlb	1	; () banked
  3125  001250  511B               	movf	__doprnt@tmpval& (0+255),w,b
  3126  001252  0F30               	addlw	48
  3127  001254  C106  FFD9         	movff	__doprnt@pb,fsr2l
  3128  001258  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  3129  00125C  CFDE F10C          	movff	postinc2,??__doprnt
  3130  001260  CFDD F10D          	movff	postdec2,??__doprnt+1
  3131  001264  C10C  FFD9         	movff	??__doprnt,fsr2l
  3132  001268  C10D  FFDA         	movff	??__doprnt+1,fsr2h
  3133  00126C  6EDF               	movwf	indf2,c
  3134  00126E  C106  FFD9         	movff	__doprnt@pb,fsr2l
  3135  001272  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  3136  001276  2ADE               	incf	postinc2,f,c
  3137  001278  0E00               	movlw	0
  3138  00127A  22DD               	addwfc	postdec2,f,c
  3139  00127C                     l8770:
  3140                           
  3141                           ;doprnt.c: 1232: val %= dpowers[c];
  3142  00127C  C115  F092         	movff	__doprnt@val,___llmod@dividend
  3143  001280  C116  F093         	movff	__doprnt@val+1,___llmod@dividend+1
  3144  001284  C117  F094         	movff	__doprnt@val+2,___llmod@dividend+2
  3145  001288  C118  F095         	movff	__doprnt@val+3,___llmod@dividend+3
  3146  00128C  0101               	movlb	1	; () banked
  3147  00128E  5128               	movf	__doprnt@c& (0+255),w,b
  3148  001290  0D04               	mullw	4
  3149  001292  0E01               	movlw	low _dpowers
  3150  001294  24F3               	addwf	prodl,w,c
  3151  001296  6EF6               	movwf	tblptrl,c
  3152  001298  0E06               	movlw	high _dpowers
  3153  00129A  20F4               	addwfc	prodh,w,c
  3154  00129C  6EF7               	movwf	tblptrh,c
  3155  00129E                     	if	0	;There are less than 3 active tblptr bytes
  3156  00129E                     	endif
  3157  00129E  0009               	tblrd		*+
  3158  0012A0  CFF5 F096          	movff	tablat,___llmod@divisor
  3159  0012A4  0009               	tblrd		*+
  3160  0012A6  CFF5 F097          	movff	tablat,___llmod@divisor+1
  3161  0012AA  0009               	tblrd		*+
  3162  0012AC  CFF5 F098          	movff	tablat,___llmod@divisor+2
  3163  0012B0  000A               	tblrd		*-
  3164  0012B2  CFF5 F099          	movff	tablat,___llmod@divisor+3
  3165  0012B6  EC9C  F025         	call	___llmod
  3166  0012BA  C092  F115         	movff	?___llmod,__doprnt@val
  3167  0012BE  C093  F116         	movff	?___llmod+1,__doprnt@val+1
  3168  0012C2  C094  F117         	movff	?___llmod+2,__doprnt@val+2
  3169  0012C6  C095  F118         	movff	?___llmod+3,__doprnt@val+3
  3170  0012CA                     l8772:
  3171  0012CA  0101               	movlb	1	; () banked
  3172  0012CC  0728               	decf	__doprnt@c& (0+255),f,b
  3173  0012CE  0101               	movlb	1	; () banked
  3174  0012D0  2928               	incf	__doprnt@c& (0+255),w,b
  3175  0012D2  B4D8               	btfsc	status,2,c
  3176  0012D4  D039               	goto	l8784
  3177  0012D6  D758               	goto	l8760
  3178  0012D8                     l8774:
  3179                           
  3180                           ; BSR set to: 1
  3181                           ;doprnt.c: 1236: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  3182  0012D8  0101               	movlb	1	; () banked
  3183  0012DA  EE20 F002          	lfsr	2,2
  3184  0012DE  5106               	movf	__doprnt@pb& (0+255),w,b
  3185  0012E0  26D9               	addwf	fsr2l,f,c
  3186  0012E2  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  3187  0012E4  22DA               	addwfc	fsr2h,f,c
  3188  0012E6  50DE               	movf	postinc2,w,c
  3189  0012E8  10DE               	iorwf	postinc2,w,c
  3190  0012EA  B4D8               	btfsc	status,2,c
  3191  0012EC  D014               	goto	l8778
  3192                           
  3193                           ; BSR set to: 1
  3194  0012EE  0101               	movlb	1	; () banked
  3195  0012F0  EE20 F002          	lfsr	2,2
  3196  0012F4  5106               	movf	__doprnt@pb& (0+255),w,b
  3197  0012F6  26D9               	addwf	fsr2l,f,c
  3198  0012F8  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  3199  0012FA  22DA               	addwfc	fsr2h,f,c
  3200  0012FC  D801               	call	u14528
  3201  0012FE  D020               	goto	l8782
  3202  001300                     u14528:
  3203  001300  0005               	push	
  3204  001302  6EFA               	movwf	pclath,c
  3205  001304  50DE               	movf	postinc2,w,c
  3206  001306  6EFD               	movwf	tosl,c
  3207  001308  50DE               	movf	postinc2,w,c
  3208  00130A  6EFE               	movwf	tosh,c
  3209  00130C  50F8               	movf	tblptru,w,c
  3210  00130E  6EFF               	movwf	tosu,c
  3211  001310  50FA               	movf	pclath,w,c
  3212  001312  0E30               	movlw	48
  3213  001314  0012               	return		;indir
  3214  001316                     l8778:
  3215  001316  C106  FFD9         	movff	__doprnt@pb,fsr2l
  3216  00131A  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  3217  00131E  CFDE F10C          	movff	postinc2,??__doprnt
  3218  001322  CFDD F10D          	movff	postdec2,??__doprnt+1
  3219  001326  C10C  FFD9         	movff	??__doprnt,fsr2l
  3220  00132A  C10D  FFDA         	movff	??__doprnt+1,fsr2h
  3221  00132E  0E30               	movlw	48
  3222  001330  6EDF               	movwf	indf2,c
  3223  001332  C106  FFD9         	movff	__doprnt@pb,fsr2l
  3224  001336  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  3225  00133A  2ADE               	incf	postinc2,f,c
  3226  00133C  0E00               	movlw	0
  3227  00133E  22DD               	addwfc	postdec2,f,c
  3228  001340                     l8782:
  3229                           
  3230                           ;doprnt.c: 1237: prec--;
  3231  001340  0101               	movlb	1	; () banked
  3232  001342  0726               	decf	__doprnt@prec& (0+255),f,b
  3233  001344  A0D8               	btfss	status,0,c
  3234  001346  0727               	decf	(__doprnt@prec+1)& (0+255),f,b
  3235  001348                     l8784:
  3236                           
  3237                           ; BSR set to: 1
  3238  001348  0101               	movlb	1	; () banked
  3239  00134A  5126               	movf	__doprnt@prec& (0+255),w,b
  3240  00134C  0101               	movlb	1	; () banked
  3241  00134E  1127               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  3242  001350  B4D8               	btfsc	status,2,c
  3243  001352  D282               	goto	l8896
  3244  001354  D7C1               	goto	l8774
  3245  001356                     l351:
  3246                           
  3247                           ; BSR set to: 1
  3248                           ;doprnt.c: 1246: }
  3249                           ;doprnt.c: 1273: {
  3250                           ;doprnt.c: 1281: if(flag & 0x10)
  3251  001356  0101               	movlb	1	; () banked
  3252  001358  A91F               	btfss	__doprnt@flag& (0+255),4,b
  3253  00135A  D019               	goto	l8788
  3254                           
  3255                           ; BSR set to: 1
  3256                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  3257  00135C  C10A  FFD9         	movff	__doprnt@ap,fsr2l
  3258  001360  C10B  FFDA         	movff	__doprnt@ap+1,fsr2h
  3259  001364  CFDF F10C          	movff	indf2,??__doprnt
  3260  001368  0E04               	movlw	4
  3261  00136A  26DE               	addwf	postinc2,f,c
  3262  00136C  CFDF F10D          	movff	indf2,??__doprnt+1
  3263  001370  0E00               	movlw	0
  3264  001372  22DD               	addwfc	postdec2,f,c
  3265  001374  C10C  FFD9         	movff	??__doprnt,fsr2l
  3266  001378  C10D  FFDA         	movff	??__doprnt+1,fsr2h
  3267  00137C  CFDE F115          	movff	postinc2,__doprnt@val
  3268  001380  CFDE F116          	movff	postinc2,__doprnt@val+1
  3269  001384  CFDE F117          	movff	postinc2,__doprnt@val+2
  3270  001388  CFDE F118          	movff	postinc2,__doprnt@val+3
  3271  00138C  D01B               	goto	l8790
  3272  00138E                     l8788:
  3273                           
  3274                           ; BSR set to: 1
  3275                           ;doprnt.c: 1283: else
  3276                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3277  00138E  C10A  FFD9         	movff	__doprnt@ap,fsr2l
  3278  001392  C10B  FFDA         	movff	__doprnt@ap+1,fsr2h
  3279  001396  CFDF F10C          	movff	indf2,??__doprnt
  3280  00139A  0E02               	movlw	2
  3281  00139C  26DE               	addwf	postinc2,f,c
  3282  00139E  CFDF F10D          	movff	indf2,??__doprnt+1
  3283  0013A2  0E00               	movlw	0
  3284  0013A4  22DD               	addwfc	postdec2,f,c
  3285  0013A6  C10C  FFD9         	movff	??__doprnt,fsr2l
  3286  0013AA  C10D  FFDA         	movff	??__doprnt+1,fsr2h
  3287  0013AE  CFDE F10E          	movff	postinc2,??__doprnt+2
  3288  0013B2  CFDD F10F          	movff	postdec2,??__doprnt+3
  3289  0013B6  C10E  F115         	movff	??__doprnt+2,__doprnt@val
  3290  0013BA  C10F  F116         	movff	??__doprnt+3,__doprnt@val+1
  3291  0013BE  0101               	movlb	1	; () banked
  3292  0013C0  6B17               	clrf	(__doprnt@val+2)& (0+255),b
  3293  0013C2  6B18               	clrf	(__doprnt@val+3)& (0+255),b
  3294  0013C4                     l8790:
  3295                           
  3296                           ; BSR set to: 1
  3297                           ;doprnt.c: 1287: }
  3298                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3299  0013C4  0101               	movlb	1	; () banked
  3300  0013C6  5126               	movf	__doprnt@prec& (0+255),w,b
  3301  0013C8  0101               	movlb	1	; () banked
  3302  0013CA  1127               	iorwf	(__doprnt@prec+1)& (0+255),w,b
  3303  0013CC  A4D8               	btfss	status,2,c
  3304  0013CE  D00D               	goto	l8796
  3305                           
  3306                           ; BSR set to: 1
  3307  0013D0  0101               	movlb	1	; () banked
  3308  0013D2  5115               	movf	__doprnt@val& (0+255),w,b
  3309  0013D4  0101               	movlb	1	; () banked
  3310  0013D6  1116               	iorwf	(__doprnt@val+1)& (0+255),w,b
  3311  0013D8  0101               	movlb	1	; () banked
  3312  0013DA  1117               	iorwf	(__doprnt@val+2)& (0+255),w,b
  3313  0013DC  0101               	movlb	1	; () banked
  3314  0013DE  1118               	iorwf	(__doprnt@val+3)& (0+255),w,b
  3315  0013E0  A4D8               	btfss	status,2,c
  3316  0013E2  D003               	goto	l8796
  3317                           
  3318                           ; BSR set to: 1
  3319                           ;doprnt.c: 1291: prec++;
  3320  0013E4  0101               	movlb	1	; () banked
  3321  0013E6  4B26               	infsnz	__doprnt@prec& (0+255),f,b
  3322  0013E8  2B27               	incf	(__doprnt@prec+1)& (0+255),f,b
  3323  0013EA                     l8796:
  3324                           
  3325                           ; BSR set to: 1
  3326                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3327  0013EA  0E01               	movlw	1
  3328  0013EC  0101               	movlb	1	; () banked
  3329  0013EE  6F28               	movwf	__doprnt@c& (0+255),b
  3330  0013F0                     l8798:
  3331                           
  3332                           ; BSR set to: 1
  3333  0013F0  0E0A               	movlw	10
  3334  0013F2  0101               	movlb	1	; () banked
  3335  0013F4  1928               	xorwf	__doprnt@c& (0+255),w,b
  3336  0013F6  B4D8               	btfsc	status,2,c
  3337  0013F8  D01E               	goto	l8810
  3338                           
  3339                           ; BSR set to: 1
  3340                           ;doprnt.c: 1306: if(val < dpowers[c])
  3341                           
  3342                           ; BSR set to: 1
  3343                           
  3344                           ; BSR set to: 1
  3345  0013FA  0101               	movlb	1	; () banked
  3346  0013FC  5128               	movf	__doprnt@c& (0+255),w,b
  3347  0013FE  0D04               	mullw	4
  3348  001400  0E01               	movlw	low _dpowers
  3349  001402  24F3               	addwf	prodl,w,c
  3350  001404  6EF6               	movwf	tblptrl,c
  3351  001406  0E06               	movlw	high _dpowers
  3352  001408  20F4               	addwfc	prodh,w,c
  3353  00140A  6EF7               	movwf	tblptrh,c
  3354  00140C                     	if	0	;There are less than 3 active tblptr bytes
  3355  00140C                     	endif
  3356  00140C  0009               	tblrd		*+
  3357  00140E  50F5               	movf	tablat,w,c
  3358  001410  0101               	movlb	1	; () banked
  3359  001412  5D15               	subwf	__doprnt@val& (0+255),w,b
  3360  001414  0009               	tblrd		*+
  3361  001416  50F5               	movf	tablat,w,c
  3362  001418  0101               	movlb	1	; () banked
  3363  00141A  5916               	subwfb	(__doprnt@val+1)& (0+255),w,b
  3364  00141C  0009               	tblrd		*+
  3365  00141E  50F5               	movf	tablat,w,c
  3366  001420  0101               	movlb	1	; () banked
  3367  001422  5917               	subwfb	(__doprnt@val+2)& (0+255),w,b
  3368  001424  0009               	tblrd		*+
  3369  001426  50F5               	movf	tablat,w,c
  3370  001428  0101               	movlb	1	; () banked
  3371  00142A  5918               	subwfb	(__doprnt@val+3)& (0+255),w,b
  3372  00142C  A0D8               	btfss	status,0,c
  3373  00142E  D003               	goto	l8810
  3374                           
  3375                           ; BSR set to: 1
  3376                           
  3377                           ; BSR set to: 1
  3378                           
  3379                           ; BSR set to: 1
  3380                           ;doprnt.c: 1307: break;
  3381  001430  0101               	movlb	1	; () banked
  3382  001432  2B28               	incf	__doprnt@c& (0+255),f,b
  3383  001434  D7DD               	goto	l8798
  3384  001436                     l8810:
  3385                           
  3386                           ; BSR set to: 1
  3387                           ;doprnt.c: 1339: if(c < prec)
  3388  001436  0E80               	movlw	128
  3389  001438  0101               	movlb	1	; () banked
  3390  00143A  BF28               	btfsc	__doprnt@c& (0+255),7,b
  3391  00143C  0E7F               	movlw	127
  3392  00143E  0101               	movlb	1	; () banked
  3393  001440  6F0C               	movwf	??__doprnt& (0+255),b
  3394  001442  0101               	movlb	1	; () banked
  3395  001444  5126               	movf	__doprnt@prec& (0+255),w,b
  3396  001446  0101               	movlb	1	; () banked
  3397  001448  5D28               	subwf	__doprnt@c& (0+255),w,b
  3398  00144A  0101               	movlb	1	; () banked
  3399  00144C  5127               	movf	(__doprnt@prec+1)& (0+255),w,b
  3400  00144E  0A80               	xorlw	128
  3401  001450  0101               	movlb	1	; () banked
  3402  001452  590C               	subwfb	??__doprnt& (0+255),w,b
  3403  001454  B0D8               	btfsc	status,0,c
  3404  001456  D003               	goto	l8814
  3405                           
  3406                           ; BSR set to: 1
  3407                           ;doprnt.c: 1340: c = prec;
  3408  001458  C126  F128         	movff	__doprnt@prec,__doprnt@c
  3409  00145C  D018               	goto	l8818
  3410  00145E                     l8814:
  3411                           
  3412                           ; BSR set to: 1
  3413                           ;doprnt.c: 1341: else if(prec < c)
  3414  00145E  0101               	movlb	1	; () banked
  3415  001460  5127               	movf	(__doprnt@prec+1)& (0+255),w,b
  3416  001462  0A80               	xorlw	128
  3417  001464  0101               	movlb	1	; () banked
  3418  001466  6F0C               	movwf	??__doprnt& (0+255),b
  3419  001468  0101               	movlb	1	; () banked
  3420  00146A  5128               	movf	__doprnt@c& (0+255),w,b
  3421  00146C  0101               	movlb	1	; () banked
  3422  00146E  5D26               	subwf	__doprnt@prec& (0+255),w,b
  3423  001470  0E80               	movlw	128
  3424  001472  0101               	movlb	1	; () banked
  3425  001474  BF28               	btfsc	__doprnt@c& (0+255),7,b
  3426  001476  0E7F               	movlw	127
  3427  001478  0101               	movlb	1	; () banked
  3428  00147A  590C               	subwfb	??__doprnt& (0+255),w,b
  3429  00147C  B0D8               	btfsc	status,0,c
  3430  00147E  D007               	goto	l8818
  3431                           
  3432                           ; BSR set to: 1
  3433                           ;doprnt.c: 1342: prec = c;
  3434  001480  0101               	movlb	1	; () banked
  3435  001482  5128               	movf	__doprnt@c& (0+255),w,b
  3436  001484  0101               	movlb	1	; () banked
  3437  001486  6F26               	movwf	__doprnt@prec& (0+255),b
  3438  001488  6B27               	clrf	(__doprnt@prec+1)& (0+255),b
  3439  00148A  BF26               	btfsc	__doprnt@prec& (0+255),7,b
  3440  00148C  0727               	decf	(__doprnt@prec+1)& (0+255),f,b
  3441  00148E                     l8818:
  3442                           
  3443                           ; BSR set to: 1
  3444                           ;doprnt.c: 1345: if(width && flag & 0x03)
  3445  00148E  0101               	movlb	1	; () banked
  3446  001490  5121               	movf	__doprnt@width& (0+255),w,b
  3447  001492  0101               	movlb	1	; () banked
  3448  001494  1122               	iorwf	(__doprnt@width+1)& (0+255),w,b
  3449  001496  B4D8               	btfsc	status,2,c
  3450  001498  D014               	goto	l8824
  3451                           
  3452                           ; BSR set to: 1
  3453  00149A  0E03               	movlw	3
  3454  00149C  0101               	movlb	1	; () banked
  3455  00149E  151F               	andwf	__doprnt@flag& (0+255),w,b
  3456  0014A0  0101               	movlb	1	; () banked
  3457  0014A2  6F0C               	movwf	??__doprnt& (0+255),b
  3458  0014A4  0E00               	movlw	0
  3459  0014A6  0101               	movlb	1	; () banked
  3460  0014A8  1520               	andwf	(__doprnt@flag+1)& (0+255),w,b
  3461  0014AA  0101               	movlb	1	; () banked
  3462  0014AC  6F0D               	movwf	(??__doprnt+1)& (0+255),b
  3463  0014AE  0101               	movlb	1	; () banked
  3464  0014B0  510C               	movf	??__doprnt& (0+255),w,b
  3465  0014B2  0101               	movlb	1	; () banked
  3466  0014B4  110D               	iorwf	(??__doprnt+1)& (0+255),w,b
  3467  0014B6  B4D8               	btfsc	status,2,c
  3468  0014B8  D004               	goto	l8824
  3469                           
  3470                           ; BSR set to: 1
  3471                           ;doprnt.c: 1346: width--;
  3472  0014BA  0101               	movlb	1	; () banked
  3473  0014BC  0721               	decf	__doprnt@width& (0+255),f,b
  3474  0014BE  A0D8               	btfss	status,0,c
  3475  0014C0  0722               	decf	(__doprnt@width+1)& (0+255),f,b
  3476  0014C2                     l8824:
  3477                           
  3478                           ; BSR set to: 1
  3479                           ;doprnt.c: 1348: if(flag & 0x4000) {
  3480  0014C2  0101               	movlb	1	; () banked
  3481  0014C4  AD20               	btfss	(__doprnt@flag+1)& (0+255),6,b
  3482  0014C6  D01E               	goto	l8832
  3483                           
  3484                           ; BSR set to: 1
  3485                           ;doprnt.c: 1349: if(width > prec)
  3486  0014C8  0101               	movlb	1	; () banked
  3487  0014CA  5121               	movf	__doprnt@width& (0+255),w,b
  3488  0014CC  0101               	movlb	1	; () banked
  3489  0014CE  5D26               	subwf	__doprnt@prec& (0+255),w,b
  3490  0014D0  0101               	movlb	1	; () banked
  3491  0014D2  5127               	movf	(__doprnt@prec+1)& (0+255),w,b
  3492  0014D4  0A80               	xorlw	128
  3493  0014D6  0101               	movlb	1	; () banked
  3494  0014D8  6F0C               	movwf	??__doprnt& (0+255),b
  3495  0014DA  0101               	movlb	1	; () banked
  3496  0014DC  5122               	movf	(__doprnt@width+1)& (0+255),w,b
  3497  0014DE  0A80               	xorlw	128
  3498  0014E0  0101               	movlb	1	; () banked
  3499  0014E2  590C               	subwfb	??__doprnt& (0+255),w,b
  3500  0014E4  B0D8               	btfsc	status,0,c
  3501  0014E6  D009               	goto	l8830
  3502                           
  3503                           ; BSR set to: 1
  3504                           ;doprnt.c: 1350: width -= prec;
  3505  0014E8  0101               	movlb	1	; () banked
  3506  0014EA  5126               	movf	__doprnt@prec& (0+255),w,b
  3507  0014EC  0101               	movlb	1	; () banked
  3508  0014EE  5F21               	subwf	__doprnt@width& (0+255),f,b
  3509  0014F0  0101               	movlb	1	; () banked
  3510  0014F2  5127               	movf	(__doprnt@prec+1)& (0+255),w,b
  3511  0014F4  0101               	movlb	1	; () banked
  3512  0014F6  5B22               	subwfb	(__doprnt@width+1)& (0+255),f,b
  3513  0014F8  D005               	goto	l8832
  3514  0014FA                     l8830:
  3515                           
  3516                           ; BSR set to: 1
  3517                           ;doprnt.c: 1351: else
  3518                           ;doprnt.c: 1352: width = 0;
  3519  0014FA  0E00               	movlw	0
  3520  0014FC  0101               	movlb	1	; () banked
  3521  0014FE  6F22               	movwf	(__doprnt@width+1)& (0+255),b
  3522  001500  0E00               	movlw	0
  3523  001502  6F21               	movwf	__doprnt@width& (0+255),b
  3524  001504                     l8832:
  3525                           
  3526                           ; BSR set to: 1
  3527                           ;doprnt.c: 1353: }
  3528                           ;doprnt.c: 1381: if(width > c)
  3529  001504  0E80               	movlw	128
  3530  001506  0101               	movlb	1	; () banked
  3531  001508  BF28               	btfsc	__doprnt@c& (0+255),7,b
  3532  00150A  0E7F               	movlw	127
  3533  00150C  0101               	movlb	1	; () banked
  3534  00150E  6F0C               	movwf	??__doprnt& (0+255),b
  3535  001510  0101               	movlb	1	; () banked
  3536  001512  5121               	movf	__doprnt@width& (0+255),w,b
  3537  001514  0101               	movlb	1	; () banked
  3538  001516  5D28               	subwf	__doprnt@c& (0+255),w,b
  3539  001518  0101               	movlb	1	; () banked
  3540  00151A  5122               	movf	(__doprnt@width+1)& (0+255),w,b
  3541  00151C  0A80               	xorlw	128
  3542  00151E  0101               	movlb	1	; () banked
  3543  001520  590C               	subwfb	??__doprnt& (0+255),w,b
  3544  001522  B0D8               	btfsc	status,0,c
  3545  001524  D00B               	goto	l8836
  3546                           
  3547                           ; BSR set to: 1
  3548                           ;doprnt.c: 1382: width -= c;
  3549  001526  0101               	movlb	1	; () banked
  3550  001528  5128               	movf	__doprnt@c& (0+255),w,b
  3551  00152A  0101               	movlb	1	; () banked
  3552  00152C  5F21               	subwf	__doprnt@width& (0+255),f,b
  3553  00152E  0E00               	movlw	0
  3554  001530  0101               	movlb	1	; () banked
  3555  001532  BF28               	btfsc	__doprnt@c& (0+255),7,b
  3556  001534  0EFF               	movlw	255
  3557  001536  0101               	movlb	1	; () banked
  3558  001538  5B22               	subwfb	(__doprnt@width+1)& (0+255),f,b
  3559  00153A  D005               	goto	l8838
  3560  00153C                     l8836:
  3561                           
  3562                           ; BSR set to: 1
  3563                           ;doprnt.c: 1383: else
  3564                           ;doprnt.c: 1384: width = 0;
  3565  00153C  0E00               	movlw	0
  3566  00153E  0101               	movlb	1	; () banked
  3567  001540  6F22               	movwf	(__doprnt@width+1)& (0+255),b
  3568  001542  0E00               	movlw	0
  3569  001544  6F21               	movwf	__doprnt@width& (0+255),b
  3570  001546                     l8838:
  3571                           
  3572                           ; BSR set to: 1
  3573                           ;doprnt.c: 1387: if(flag & 0x04) {
  3574  001546  0101               	movlb	1	; () banked
  3575  001548  A51F               	btfss	__doprnt@flag& (0+255),2,b
  3576  00154A  D083               	goto	l8862
  3577                           
  3578                           ; BSR set to: 1
  3579                           ;doprnt.c: 1392: if(flag & 0x03)
  3580  00154C  0E03               	movlw	3
  3581  00154E  0101               	movlb	1	; () banked
  3582  001550  151F               	andwf	__doprnt@flag& (0+255),w,b
  3583  001552  0101               	movlb	1	; () banked
  3584  001554  6F0C               	movwf	??__doprnt& (0+255),b
  3585  001556  0E00               	movlw	0
  3586  001558  0101               	movlb	1	; () banked
  3587  00155A  1520               	andwf	(__doprnt@flag+1)& (0+255),w,b
  3588  00155C  0101               	movlb	1	; () banked
  3589  00155E  6F0D               	movwf	(??__doprnt+1)& (0+255),b
  3590  001560  0101               	movlb	1	; () banked
  3591  001562  510C               	movf	??__doprnt& (0+255),w,b
  3592  001564  0101               	movlb	1	; () banked
  3593  001566  110D               	iorwf	(??__doprnt+1)& (0+255),w,b
  3594  001568  B4D8               	btfsc	status,2,c
  3595  00156A  D034               	goto	l8850
  3596                           
  3597                           ; BSR set to: 1
  3598                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  3599  00156C  0101               	movlb	1	; () banked
  3600  00156E  EE20 F002          	lfsr	2,2
  3601  001572  5106               	movf	__doprnt@pb& (0+255),w,b
  3602  001574  26D9               	addwf	fsr2l,f,c
  3603  001576  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  3604  001578  22DA               	addwfc	fsr2h,f,c
  3605  00157A  50DE               	movf	postinc2,w,c
  3606  00157C  10DE               	iorwf	postinc2,w,c
  3607  00157E  B4D8               	btfsc	status,2,c
  3608  001580  D014               	goto	l8846
  3609                           
  3610                           ; BSR set to: 1
  3611  001582  0101               	movlb	1	; () banked
  3612  001584  EE20 F002          	lfsr	2,2
  3613  001588  5106               	movf	__doprnt@pb& (0+255),w,b
  3614  00158A  26D9               	addwf	fsr2l,f,c
  3615  00158C  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  3616  00158E  22DA               	addwfc	fsr2h,f,c
  3617  001590  D801               	call	u14708
  3618  001592  D020               	goto	l8850
  3619  001594                     u14708:
  3620  001594  0005               	push	
  3621  001596  6EFA               	movwf	pclath,c
  3622  001598  50DE               	movf	postinc2,w,c
  3623  00159A  6EFD               	movwf	tosl,c
  3624  00159C  50DE               	movf	postinc2,w,c
  3625  00159E  6EFE               	movwf	tosh,c
  3626  0015A0  50F8               	movf	tblptru,w,c
  3627  0015A2  6EFF               	movwf	tosu,c
  3628  0015A4  50FA               	movf	pclath,w,c
  3629  0015A6  0E2D               	movlw	45
  3630  0015A8  0012               	return		;indir
  3631  0015AA                     l8846:
  3632  0015AA  C106  FFD9         	movff	__doprnt@pb,fsr2l
  3633  0015AE  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  3634  0015B2  CFDE F10C          	movff	postinc2,??__doprnt
  3635  0015B6  CFDD F10D          	movff	postdec2,??__doprnt+1
  3636  0015BA  C10C  FFD9         	movff	??__doprnt,fsr2l
  3637  0015BE  C10D  FFDA         	movff	??__doprnt+1,fsr2h
  3638  0015C2  0E2D               	movlw	45
  3639  0015C4  6EDF               	movwf	indf2,c
  3640  0015C6  C106  FFD9         	movff	__doprnt@pb,fsr2l
  3641  0015CA  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  3642  0015CE  2ADE               	incf	postinc2,f,c
  3643  0015D0  0E00               	movlw	0
  3644  0015D2  22DD               	addwfc	postdec2,f,c
  3645  0015D4                     l8850:
  3646                           
  3647                           ;doprnt.c: 1415: if(width)
  3648  0015D4  0101               	movlb	1	; () banked
  3649  0015D6  5121               	movf	__doprnt@width& (0+255),w,b
  3650  0015D8  0101               	movlb	1	; () banked
  3651  0015DA  1122               	iorwf	(__doprnt@width+1)& (0+255),w,b
  3652  0015DC  B4D8               	btfsc	status,2,c
  3653  0015DE  D131               	goto	l8894
  3654                           
  3655                           ; BSR set to: 1
  3656                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
  3657                           
  3658                           ; BSR set to: 1
  3659                           
  3660                           ;doprnt.c: 1416: do
  3661  0015E0  0101               	movlb	1	; () banked
  3662  0015E2  EE20 F002          	lfsr	2,2
  3663  0015E6  5106               	movf	__doprnt@pb& (0+255),w,b
  3664  0015E8  26D9               	addwf	fsr2l,f,c
  3665  0015EA  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  3666  0015EC  22DA               	addwfc	fsr2h,f,c
  3667  0015EE  50DE               	movf	postinc2,w,c
  3668  0015F0  10DE               	iorwf	postinc2,w,c
  3669  0015F2  B4D8               	btfsc	status,2,c
  3670  0015F4  D014               	goto	l8856
  3671                           
  3672                           ; BSR set to: 1
  3673  0015F6  0101               	movlb	1	; () banked
  3674  0015F8  EE20 F002          	lfsr	2,2
  3675  0015FC  5106               	movf	__doprnt@pb& (0+255),w,b
  3676  0015FE  26D9               	addwf	fsr2l,f,c
  3677  001600  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  3678  001602  22DA               	addwfc	fsr2h,f,c
  3679  001604  D801               	call	u14738
  3680  001606  D020               	goto	l8860
  3681  001608                     u14738:
  3682  001608  0005               	push	
  3683  00160A  6EFA               	movwf	pclath,c
  3684  00160C  50DE               	movf	postinc2,w,c
  3685  00160E  6EFD               	movwf	tosl,c
  3686  001610  50DE               	movf	postinc2,w,c
  3687  001612  6EFE               	movwf	tosh,c
  3688  001614  50F8               	movf	tblptru,w,c
  3689  001616  6EFF               	movwf	tosu,c
  3690  001618  50FA               	movf	pclath,w,c
  3691  00161A  0E30               	movlw	48
  3692  00161C  0012               	return		;indir
  3693  00161E                     l8856:
  3694  00161E  C106  FFD9         	movff	__doprnt@pb,fsr2l
  3695  001622  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  3696  001626  CFDE F10C          	movff	postinc2,??__doprnt
  3697  00162A  CFDD F10D          	movff	postdec2,??__doprnt+1
  3698  00162E  C10C  FFD9         	movff	??__doprnt,fsr2l
  3699  001632  C10D  FFDA         	movff	??__doprnt+1,fsr2h
  3700  001636  0E30               	movlw	48
  3701  001638  6EDF               	movwf	indf2,c
  3702  00163A  C106  FFD9         	movff	__doprnt@pb,fsr2l
  3703  00163E  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  3704  001642  2ADE               	incf	postinc2,f,c
  3705  001644  0E00               	movlw	0
  3706  001646  22DD               	addwfc	postdec2,f,c
  3707  001648                     l8860:
  3708                           
  3709                           ;doprnt.c: 1418: while(--width);
  3710  001648  0101               	movlb	1	; () banked
  3711  00164A  0721               	decf	__doprnt@width& (0+255),f,b
  3712  00164C  A0D8               	btfss	status,0,c
  3713  00164E  0722               	decf	(__doprnt@width+1)& (0+255),f,b
  3714  001650  D7C1               	goto	l8850
  3715  001652                     l8862:
  3716                           
  3717                           ; BSR set to: 1
  3718                           ;doprnt.c: 1422: {
  3719                           ;doprnt.c: 1424: if(width
  3720                           ;doprnt.c: 1428: )
  3721  001652  0101               	movlb	1	; () banked
  3722  001654  5121               	movf	__doprnt@width& (0+255),w,b
  3723  001656  0101               	movlb	1	; () banked
  3724  001658  1122               	iorwf	(__doprnt@width+1)& (0+255),w,b
  3725  00165A  B4D8               	btfsc	status,2,c
  3726  00165C  D03E               	goto	l8874
  3727  00165E                     l8864:
  3728                           
  3729                           ; BSR set to: 1
  3730                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
  3731  00165E  0101               	movlb	1	; () banked
  3732  001660  EE20 F002          	lfsr	2,2
  3733  001664  5106               	movf	__doprnt@pb& (0+255),w,b
  3734  001666  26D9               	addwf	fsr2l,f,c
  3735  001668  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  3736  00166A  22DA               	addwfc	fsr2h,f,c
  3737  00166C  50DE               	movf	postinc2,w,c
  3738  00166E  10DE               	iorwf	postinc2,w,c
  3739  001670  B4D8               	btfsc	status,2,c
  3740  001672  D014               	goto	l8868
  3741                           
  3742                           ; BSR set to: 1
  3743  001674  0101               	movlb	1	; () banked
  3744  001676  EE20 F002          	lfsr	2,2
  3745  00167A  5106               	movf	__doprnt@pb& (0+255),w,b
  3746  00167C  26D9               	addwf	fsr2l,f,c
  3747  00167E  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  3748  001680  22DA               	addwfc	fsr2h,f,c
  3749  001682  D801               	call	u14778
  3750  001684  D020               	goto	l8872
  3751  001686                     u14778:
  3752  001686  0005               	push	
  3753  001688  6EFA               	movwf	pclath,c
  3754  00168A  50DE               	movf	postinc2,w,c
  3755  00168C  6EFD               	movwf	tosl,c
  3756  00168E  50DE               	movf	postinc2,w,c
  3757  001690  6EFE               	movwf	tosh,c
  3758  001692  50F8               	movf	tblptru,w,c
  3759  001694  6EFF               	movwf	tosu,c
  3760  001696  50FA               	movf	pclath,w,c
  3761  001698  0E20               	movlw	32
  3762  00169A  0012               	return		;indir
  3763  00169C                     l8868:
  3764  00169C  C106  FFD9         	movff	__doprnt@pb,fsr2l
  3765  0016A0  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  3766  0016A4  CFDE F10C          	movff	postinc2,??__doprnt
  3767  0016A8  CFDD F10D          	movff	postdec2,??__doprnt+1
  3768  0016AC  C10C  FFD9         	movff	??__doprnt,fsr2l
  3769  0016B0  C10D  FFDA         	movff	??__doprnt+1,fsr2h
  3770  0016B4  0E20               	movlw	32
  3771  0016B6  6EDF               	movwf	indf2,c
  3772  0016B8  C106  FFD9         	movff	__doprnt@pb,fsr2l
  3773  0016BC  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  3774  0016C0  2ADE               	incf	postinc2,f,c
  3775  0016C2  0E00               	movlw	0
  3776  0016C4  22DD               	addwfc	postdec2,f,c
  3777  0016C6                     l8872:
  3778                           
  3779                           ;doprnt.c: 1431: while(--width);
  3780  0016C6  0101               	movlb	1	; () banked
  3781  0016C8  0721               	decf	__doprnt@width& (0+255),f,b
  3782  0016CA  A0D8               	btfss	status,0,c
  3783  0016CC  0722               	decf	(__doprnt@width+1)& (0+255),f,b
  3784  0016CE  0101               	movlb	1	; () banked
  3785  0016D0  5121               	movf	__doprnt@width& (0+255),w,b
  3786  0016D2  0101               	movlb	1	; () banked
  3787  0016D4  1122               	iorwf	(__doprnt@width+1)& (0+255),w,b
  3788  0016D6  A4D8               	btfss	status,2,c
  3789  0016D8  D7C2               	goto	l8864
  3790  0016DA                     l8874:
  3791                           
  3792                           ; BSR set to: 1
  3793                           ;doprnt.c: 1438: if(flag & 0x03)
  3794  0016DA  0E03               	movlw	3
  3795  0016DC  0101               	movlb	1	; () banked
  3796  0016DE  151F               	andwf	__doprnt@flag& (0+255),w,b
  3797  0016E0  0101               	movlb	1	; () banked
  3798  0016E2  6F0C               	movwf	??__doprnt& (0+255),b
  3799  0016E4  0E00               	movlw	0
  3800  0016E6  0101               	movlb	1	; () banked
  3801  0016E8  1520               	andwf	(__doprnt@flag+1)& (0+255),w,b
  3802  0016EA  0101               	movlb	1	; () banked
  3803  0016EC  6F0D               	movwf	(??__doprnt+1)& (0+255),b
  3804  0016EE  0101               	movlb	1	; () banked
  3805  0016F0  510C               	movf	??__doprnt& (0+255),w,b
  3806  0016F2  0101               	movlb	1	; () banked
  3807  0016F4  110D               	iorwf	(??__doprnt+1)& (0+255),w,b
  3808  0016F6  B4D8               	btfsc	status,2,c
  3809  0016F8  D0A4               	goto	l8894
  3810                           
  3811                           ; BSR set to: 1
  3812                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  3813  0016FA  0101               	movlb	1	; () banked
  3814  0016FC  EE20 F002          	lfsr	2,2
  3815  001700  5106               	movf	__doprnt@pb& (0+255),w,b
  3816  001702  26D9               	addwf	fsr2l,f,c
  3817  001704  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  3818  001706  22DA               	addwfc	fsr2h,f,c
  3819  001708  50DE               	movf	postinc2,w,c
  3820  00170A  10DE               	iorwf	postinc2,w,c
  3821  00170C  B4D8               	btfsc	status,2,c
  3822  00170E  D014               	goto	l8880
  3823                           
  3824                           ; BSR set to: 1
  3825  001710  0101               	movlb	1	; () banked
  3826  001712  EE20 F002          	lfsr	2,2
  3827  001716  5106               	movf	__doprnt@pb& (0+255),w,b
  3828  001718  26D9               	addwf	fsr2l,f,c
  3829  00171A  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  3830  00171C  22DA               	addwfc	fsr2h,f,c
  3831  00171E  D801               	call	u14818
  3832  001720  D090               	goto	l8894
  3833  001722                     u14818:
  3834  001722  0005               	push	
  3835  001724  6EFA               	movwf	pclath,c
  3836  001726  50DE               	movf	postinc2,w,c
  3837  001728  6EFD               	movwf	tosl,c
  3838  00172A  50DE               	movf	postinc2,w,c
  3839  00172C  6EFE               	movwf	tosh,c
  3840  00172E  50F8               	movf	tblptru,w,c
  3841  001730  6EFF               	movwf	tosu,c
  3842  001732  50FA               	movf	pclath,w,c
  3843  001734  0E2D               	movlw	45
  3844  001736  0012               	return		;indir
  3845  001738                     l8880:
  3846  001738  C106  FFD9         	movff	__doprnt@pb,fsr2l
  3847  00173C  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  3848  001740  CFDE F10C          	movff	postinc2,??__doprnt
  3849  001744  CFDD F10D          	movff	postdec2,??__doprnt+1
  3850  001748  C10C  FFD9         	movff	??__doprnt,fsr2l
  3851  00174C  C10D  FFDA         	movff	??__doprnt+1,fsr2h
  3852  001750  0E2D               	movlw	45
  3853  001752  6EDF               	movwf	indf2,c
  3854  001754  D06F               	goto	l8892
  3855  001756                     l8884:
  3856                           
  3857                           ;doprnt.c: 1478: {
  3858                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3859  001756  C126  F10C         	movff	__doprnt@prec,??__doprnt
  3860  00175A  C127  F10D         	movff	__doprnt@prec+1,??__doprnt+1
  3861  00175E  0101               	movlb	1	; () banked
  3862  001760  90D8               	bcf	status,0,c
  3863  001762  370C               	rlcf	??__doprnt& (0+255),f,b
  3864  001764  370D               	rlcf	(??__doprnt+1)& (0+255),f,b
  3865  001766  0101               	movlb	1	; () banked
  3866  001768  90D8               	bcf	status,0,c
  3867  00176A  370C               	rlcf	??__doprnt& (0+255),f,b
  3868  00176C  370D               	rlcf	(??__doprnt+1)& (0+255),f,b
  3869  00176E  0E01               	movlw	low _dpowers
  3870  001770  0101               	movlb	1	; () banked
  3871  001772  250C               	addwf	??__doprnt& (0+255),w,b
  3872  001774  6EF6               	movwf	tblptrl,c
  3873  001776  0E06               	movlw	high _dpowers
  3874  001778  210D               	addwfc	(??__doprnt+1)& (0+255),w,b
  3875  00177A  6EF7               	movwf	tblptrh,c
  3876  00177C                     	if	0	;There are less than 3 active tblptr bytes
  3877  00177C                     	endif
  3878  00177C  0009               	tblrd		*+
  3879  00177E  CFF5 F089          	movff	tablat,___lldiv@divisor
  3880  001782  0009               	tblrd		*+
  3881  001784  CFF5 F08A          	movff	tablat,___lldiv@divisor+1
  3882  001788  0009               	tblrd		*+
  3883  00178A  CFF5 F08B          	movff	tablat,___lldiv@divisor+2
  3884  00178E  000A               	tblrd		*-
  3885  001790  CFF5 F08C          	movff	tablat,___lldiv@divisor+3
  3886  001794  C115  F085         	movff	__doprnt@val,___lldiv@dividend
  3887  001798  C116  F086         	movff	__doprnt@val+1,___lldiv@dividend+1
  3888  00179C  C117  F087         	movff	__doprnt@val+2,___lldiv@dividend+2
  3889  0017A0  C118  F088         	movff	__doprnt@val+3,___lldiv@dividend+3
  3890  0017A4  EC42  F024         	call	___lldiv
  3891  0017A8  C085  F092         	movff	?___lldiv,___llmod@dividend
  3892  0017AC  C086  F093         	movff	?___lldiv+1,___llmod@dividend+1
  3893  0017B0  C087  F094         	movff	?___lldiv+2,___llmod@dividend+2
  3894  0017B4  C088  F095         	movff	?___lldiv+3,___llmod@dividend+3
  3895  0017B8  0E0A               	movlw	10
  3896  0017BA  0100               	movlb	0	; () banked
  3897  0017BC  6F96               	movwf	___llmod@divisor& (0+255),b
  3898  0017BE  0E00               	movlw	0
  3899  0017C0  6F97               	movwf	(___llmod@divisor+1)& (0+255),b
  3900  0017C2  0E00               	movlw	0
  3901  0017C4  6F98               	movwf	(___llmod@divisor+2)& (0+255),b
  3902  0017C6  0E00               	movlw	0
  3903  0017C8  6F99               	movwf	(___llmod@divisor+3)& (0+255),b
  3904  0017CA  EC9C  F025         	call	___llmod	;wreg free
  3905  0017CE  0100               	movlb	0	; () banked
  3906  0017D0  5192               	movf	?___llmod& (0+255),w,b
  3907  0017D2  0F30               	addlw	48
  3908  0017D4  0101               	movlb	1	; () banked
  3909  0017D6  6F28               	movwf	__doprnt@c& (0+255),b
  3910                           
  3911                           ; BSR set to: 1
  3912                           ;doprnt.c: 1523: }
  3913                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  3914  0017D8  0101               	movlb	1	; () banked
  3915  0017DA  EE20 F002          	lfsr	2,2
  3916  0017DE  5106               	movf	__doprnt@pb& (0+255),w,b
  3917  0017E0  26D9               	addwf	fsr2l,f,c
  3918  0017E2  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  3919  0017E4  22DA               	addwfc	fsr2h,f,c
  3920  0017E6  50DE               	movf	postinc2,w,c
  3921  0017E8  10DE               	iorwf	postinc2,w,c
  3922  0017EA  B4D8               	btfsc	status,2,c
  3923  0017EC  D015               	goto	l8890
  3924                           
  3925                           ; BSR set to: 1
  3926  0017EE  0101               	movlb	1	; () banked
  3927  0017F0  EE20 F002          	lfsr	2,2
  3928  0017F4  5106               	movf	__doprnt@pb& (0+255),w,b
  3929  0017F6  26D9               	addwf	fsr2l,f,c
  3930  0017F8  5107               	movf	(__doprnt@pb+1)& (0+255),w,b
  3931  0017FA  22DA               	addwfc	fsr2h,f,c
  3932  0017FC  D801               	call	u14838
  3933  0017FE  D021               	goto	l8894
  3934  001800                     u14838:
  3935  001800  0005               	push	
  3936  001802  6EFA               	movwf	pclath,c
  3937  001804  50DE               	movf	postinc2,w,c
  3938  001806  6EFD               	movwf	tosl,c
  3939  001808  50DE               	movf	postinc2,w,c
  3940  00180A  6EFE               	movwf	tosh,c
  3941  00180C  50F8               	movf	tblptru,w,c
  3942  00180E  6EFF               	movwf	tosu,c
  3943  001810  50FA               	movf	pclath,w,c
  3944  001812  0101               	movlb	1	; () banked
  3945  001814  5128               	movf	__doprnt@c& (0+255),w,b
  3946  001816  0012               	return		;indir
  3947  001818                     l8890:
  3948  001818  C106  FFD9         	movff	__doprnt@pb,fsr2l
  3949  00181C  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  3950  001820  CFDE F10C          	movff	postinc2,??__doprnt
  3951  001824  CFDD F10D          	movff	postdec2,??__doprnt+1
  3952  001828  C10C  FFD9         	movff	??__doprnt,fsr2l
  3953  00182C  C10D  FFDA         	movff	??__doprnt+1,fsr2h
  3954  001830  C128  FFDF         	movff	__doprnt@c,indf2
  3955  001834                     l8892:
  3956  001834  C106  FFD9         	movff	__doprnt@pb,fsr2l
  3957  001838  C107  FFDA         	movff	__doprnt@pb+1,fsr2h
  3958  00183C  2ADE               	incf	postinc2,f,c
  3959  00183E  0E00               	movlw	0
  3960  001840  22DD               	addwfc	postdec2,f,c
  3961  001842                     l8894:
  3962  001842  0101               	movlb	1	; () banked
  3963  001844  0726               	decf	__doprnt@prec& (0+255),f,b
  3964  001846  A0D8               	btfss	status,0,c
  3965  001848  0727               	decf	(__doprnt@prec+1)& (0+255),f,b
  3966  00184A  0101               	movlb	1	; () banked
  3967  00184C  2926               	incf	__doprnt@prec& (0+255),w,b
  3968  00184E  E183               	bnz	l8884
  3969  001850  0101               	movlb	1	; () banked
  3970  001852  2927               	incf	(__doprnt@prec+1)& (0+255),w,b
  3971  001854  A4D8               	btfss	status,2,c
  3972  001856  D77F               	goto	l8884
  3973  001858                     l8896:
  3974  001858  C108  FFF6         	movff	__doprnt@f,tblptrl
  3975  00185C  C109  FFF7         	movff	__doprnt@f+1,tblptrh
  3976  001860  0101               	movlb	1	; () banked
  3977  001862  4B08               	infsnz	__doprnt@f& (0+255),f,b
  3978  001864  2B09               	incf	(__doprnt@f+1)& (0+255),f,b
  3979  001866                     	if	0	;tblptru may be non-zero
  3980  001866                     	endif
  3981  001866                     	if	0	;tblptru may be non-zero
  3982  001866                     	endif
  3983  001866  0008               	tblrd		*
  3984  001868  CFF5 F128          	movff	tablat,__doprnt@c
  3985  00186C  0101               	movlb	1	; () banked
  3986  00186E  5128               	movf	__doprnt@c& (0+255),w,b
  3987  001870  A4D8               	btfss	status,2,c
  3988  001872  EF5B  F003         	goto	l8520
  3989  001876                     l8898:
  3990                           
  3991                           ; BSR set to: 1
  3992                           ;doprnt.c: 1540: return 0;
  3993  001876  0E00               	movlw	0
  3994  001878  0101               	movlb	1	; () banked
  3995  00187A  6F07               	movwf	(?__doprnt+1)& (0+255),b
  3996  00187C  0E00               	movlw	0
  3997  00187E  6F06               	movwf	?__doprnt& (0+255),b
  3998  001880  0012               	return	
  3999  001882                     __end_of__doprnt:
  4000                           	opt stack 0
  4001                           tosu	equ	0xFFF
  4002                           tosh	equ	0xFFE
  4003                           tosl	equ	0xFFD
  4004                           pclath	equ	0xFFA
  4005                           tblptru	equ	0xFF8
  4006                           tblptrh	equ	0xFF7
  4007                           tblptrl	equ	0xFF6
  4008                           tablat	equ	0xFF5
  4009                           prodh	equ	0xFF4
  4010                           prodl	equ	0xFF3
  4011                           intcon	equ	0xFF2
  4012                           postinc0	equ	0xFEE
  4013                           wreg	equ	0xFE8
  4014                           indf2	equ	0xFDF
  4015                           postinc2	equ	0xFDE
  4016                           postdec2	equ	0xFDD
  4017                           fsr2h	equ	0xFDA
  4018                           fsr2l	equ	0xFD9
  4019                           status	equ	0xFD8
  4020                           
  4021 ;; *************** function _scale *****************
  4022 ;; Defined at:
  4023 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;  scl             1    wreg     char 
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;  scl             1   78[BANK0 ] char 
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  3   72[BANK0 ] char 
  4030 ;; Registers used:
  4031 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4037 ;;      Params:         0       3       0       0       0       0       0
  4038 ;;      Locals:         0       4       0       0       0       0       0
  4039 ;;      Temps:          0       0       0       0       0       0       0
  4040 ;;      Totals:         0       7       0       0       0       0       0
  4041 ;;Total ram usage:        7 bytes
  4042 ;; Hardware stack levels used:    1
  4043 ;; Hardware stack levels required when called:    9
  4044 ;; This function calls:
  4045 ;;		___awdiv
  4046 ;;		___awmod
  4047 ;;		___ftmul
  4048 ;;		___wmul
  4049 ;; This function is called by:
  4050 ;;		__doprnt
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           	psect	text3
  4055  00295E                     __ptext3:
  4056                           	opt stack 0
  4057  00295E                     _scale:
  4058                           	opt stack 19
  4059                           
  4060                           ; BSR set to: 1
  4061                           ;incstack = 0
  4062                           ;scale@scl stored from wreg
  4063  00295E  0100               	movlb	0	; () banked
  4064  002960  6FAE               	movwf	scale@scl& (0+255),b
  4065                           
  4066                           ;doprnt.c: 428: if(scl < 0) {
  4067  002962  0100               	movlb	0	; () banked
  4068  002964  AFAE               	btfss	scale@scl& (0+255),7,b
  4069  002966  D12A               	goto	l4318
  4070                           
  4071                           ; BSR set to: 0
  4072                           ;doprnt.c: 429: scl = -scl;
  4073  002968  0100               	movlb	0	; () banked
  4074  00296A  6DAE               	negf	scale@scl& (0+255),b
  4075                           
  4076                           ;doprnt.c: 430: if(scl>=110)
  4077  00296C  0100               	movlb	0	; () banked
  4078  00296E  51AE               	movf	scale@scl& (0+255),w,b
  4079  002970  0A80               	xorlw	128
  4080  002972  0F12               	addlw	-238
  4081  002974  A0D8               	btfss	status,0,c
  4082  002976  D0AC               	goto	l4308
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4086  002978  0E00               	movlw	0
  4087  00297A  0100               	movlb	0	; () banked
  4088  00297C  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4089  00297E  0E03               	movlw	3
  4090  002980  6F95               	movwf	___wmul@multiplicand& (0+255),b
  4091  002982  0E00               	movlw	0
  4092  002984  0100               	movlb	0	; () banked
  4093  002986  6F8E               	movwf	(___awdiv@divisor+1)& (0+255),b
  4094  002988  0E0A               	movlw	10
  4095  00298A  6F8D               	movwf	___awdiv@divisor& (0+255),b
  4096  00298C  0E00               	movlw	0
  4097  00298E  0100               	movlb	0	; () banked
  4098  002990  6F88               	movwf	(___awmod@divisor+1)& (0+255),b
  4099  002992  0E64               	movlw	100
  4100  002994  6F87               	movwf	___awmod@divisor& (0+255),b
  4101  002996  0100               	movlb	0	; () banked
  4102  002998  51AE               	movf	scale@scl& (0+255),w,b
  4103  00299A  0100               	movlb	0	; () banked
  4104  00299C  6F85               	movwf	___awmod@dividend& (0+255),b
  4105  00299E  6B86               	clrf	(___awmod@dividend+1)& (0+255),b
  4106  0029A0  BF85               	btfsc	___awmod@dividend& (0+255),7,b
  4107  0029A2  0786               	decf	(___awmod@dividend+1)& (0+255),f,b
  4108  0029A4  EC4B  F025         	call	___awmod
  4109  0029A8  C085  F08B         	movff	?___awmod,___awdiv@dividend
  4110  0029AC  C086  F08C         	movff	?___awmod+1,___awdiv@dividend+1
  4111  0029B0  ECE3  F023         	call	___awdiv	;wreg free
  4112  0029B4  0E09               	movlw	9
  4113  0029B6  0100               	movlb	0	; () banked
  4114  0029B8  258B               	addwf	?___awdiv& (0+255),w,b
  4115  0029BA  0100               	movlb	0	; () banked
  4116  0029BC  6F93               	movwf	___wmul@multiplier& (0+255),b
  4117  0029BE  0E00               	movlw	0
  4118  0029C0  0100               	movlb	0	; () banked
  4119  0029C2  218C               	addwfc	(?___awdiv+1)& (0+255),w,b
  4120  0029C4  0100               	movlb	0	; () banked
  4121  0029C6  6F94               	movwf	(___wmul@multiplier+1)& (0+255),b
  4122  0029C8  EC27  F029         	call	___wmul	;wreg free
  4123  0029CC  0E29               	movlw	low __npowers_
  4124  0029CE  0100               	movlb	0	; () banked
  4125  0029D0  2593               	addwf	?___wmul& (0+255),w,b
  4126  0029D2  6EF6               	movwf	tblptrl,c
  4127  0029D4  0E06               	movlw	high __npowers_
  4128  0029D6  0100               	movlb	0	; () banked
  4129  0029D8  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  4130  0029DA  6EF7               	movwf	tblptrh,c
  4131  0029DC                     	if	0	;There are less than 3 active tblptr bytes
  4132  0029DC                     	endif
  4133  0029DC  0009               	tblrd		*+
  4134  0029DE  CFF5 F09C          	movff	tablat,___ftmul@f2
  4135  0029E2  0009               	tblrd		*+
  4136  0029E4  CFF5 F09D          	movff	tablat,___ftmul@f2+1
  4137  0029E8  000A               	tblrd		*-
  4138  0029EA  CFF5 F09E          	movff	tablat,___ftmul@f2+2
  4139  0029EE  0E00               	movlw	0
  4140  0029F0  0100               	movlb	0	; () banked
  4141  0029F2  6F8E               	movwf	(___awdiv@divisor+1)& (0+255),b
  4142  0029F4  0E64               	movlw	100
  4143  0029F6  6F8D               	movwf	___awdiv@divisor& (0+255),b
  4144  0029F8  0100               	movlb	0	; () banked
  4145  0029FA  51AE               	movf	scale@scl& (0+255),w,b
  4146  0029FC  0100               	movlb	0	; () banked
  4147  0029FE  6F8B               	movwf	___awdiv@dividend& (0+255),b
  4148  002A00  6B8C               	clrf	(___awdiv@dividend+1)& (0+255),b
  4149  002A02  BF8B               	btfsc	___awdiv@dividend& (0+255),7,b
  4150  002A04  078C               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4151  002A06  ECE3  F023         	call	___awdiv	;wreg free
  4152  002A0A  0E12               	movlw	18
  4153  002A0C  0100               	movlb	0	; () banked
  4154  002A0E  258B               	addwf	?___awdiv& (0+255),w,b
  4155  002A10  0100               	movlb	0	; () banked
  4156  002A12  6F93               	movwf	___wmul@multiplier& (0+255),b
  4157  002A14  0E00               	movlw	0
  4158  002A16  0100               	movlb	0	; () banked
  4159  002A18  218C               	addwfc	(?___awdiv+1)& (0+255),w,b
  4160  002A1A  0100               	movlb	0	; () banked
  4161  002A1C  6F94               	movwf	(___wmul@multiplier+1)& (0+255),b
  4162  002A1E  0E00               	movlw	0
  4163  002A20  0100               	movlb	0	; () banked
  4164  002A22  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4165  002A24  0E03               	movlw	3
  4166  002A26  6F95               	movwf	___wmul@multiplicand& (0+255),b
  4167  002A28  EC27  F029         	call	___wmul	;wreg free
  4168  002A2C  0E29               	movlw	low __npowers_
  4169  002A2E  0100               	movlb	0	; () banked
  4170  002A30  2593               	addwf	?___wmul& (0+255),w,b
  4171  002A32  6EF6               	movwf	tblptrl,c
  4172  002A34  0E06               	movlw	high __npowers_
  4173  002A36  0100               	movlb	0	; () banked
  4174  002A38  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  4175  002A3A  6EF7               	movwf	tblptrh,c
  4176  002A3C                     	if	0	;There are less than 3 active tblptr bytes
  4177  002A3C                     	endif
  4178  002A3C  0009               	tblrd		*+
  4179  002A3E  CFF5 F099          	movff	tablat,___ftmul@f1
  4180  002A42  0009               	tblrd		*+
  4181  002A44  CFF5 F09A          	movff	tablat,___ftmul@f1+1
  4182  002A48  000A               	tblrd		*-
  4183  002A4A  CFF5 F09B          	movff	tablat,___ftmul@f1+2
  4184  002A4E  EC14  F01F         	call	___ftmul	;wreg free
  4185  002A52  C099  F0AB         	movff	?___ftmul,_scale$1620
  4186  002A56  C09A  F0AC         	movff	?___ftmul+1,_scale$1620+1
  4187  002A5A  C09B  F0AD         	movff	?___ftmul+2,_scale$1620+2
  4188                           
  4189                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4190  002A5E  C0AB  F099         	movff	_scale$1620,___ftmul@f1
  4191  002A62  C0AC  F09A         	movff	_scale$1620+1,___ftmul@f1+1
  4192  002A66  C0AD  F09B         	movff	_scale$1620+2,___ftmul@f1+2
  4193  002A6A  0E00               	movlw	0
  4194  002A6C  0100               	movlb	0	; () banked
  4195  002A6E  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4196  002A70  0E03               	movlw	3
  4197  002A72  6F95               	movwf	___wmul@multiplicand& (0+255),b
  4198  002A74  0E00               	movlw	0
  4199  002A76  0100               	movlb	0	; () banked
  4200  002A78  6F88               	movwf	(___awmod@divisor+1)& (0+255),b
  4201  002A7A  0E0A               	movlw	10
  4202  002A7C  6F87               	movwf	___awmod@divisor& (0+255),b
  4203  002A7E  0100               	movlb	0	; () banked
  4204  002A80  51AE               	movf	scale@scl& (0+255),w,b
  4205  002A82  0100               	movlb	0	; () banked
  4206  002A84  6F85               	movwf	___awmod@dividend& (0+255),b
  4207  002A86  6B86               	clrf	(___awmod@dividend+1)& (0+255),b
  4208  002A88  BF85               	btfsc	___awmod@dividend& (0+255),7,b
  4209  002A8A  0786               	decf	(___awmod@dividend+1)& (0+255),f,b
  4210  002A8C  EC4B  F025         	call	___awmod	;wreg free
  4211  002A90  C085  F093         	movff	?___awmod,___wmul@multiplier
  4212  002A94  C086  F094         	movff	?___awmod+1,___wmul@multiplier+1
  4213  002A98  EC27  F029         	call	___wmul	;wreg free
  4214  002A9C  0E29               	movlw	low __npowers_
  4215  002A9E  0100               	movlb	0	; () banked
  4216  002AA0  2593               	addwf	?___wmul& (0+255),w,b
  4217  002AA2  6EF6               	movwf	tblptrl,c
  4218  002AA4  0E06               	movlw	high __npowers_
  4219  002AA6  0100               	movlb	0	; () banked
  4220  002AA8  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  4221  002AAA  6EF7               	movwf	tblptrh,c
  4222  002AAC                     	if	0	;There are less than 3 active tblptr bytes
  4223  002AAC                     	endif
  4224  002AAC  0009               	tblrd		*+
  4225  002AAE  CFF5 F09C          	movff	tablat,___ftmul@f2
  4226  002AB2  0009               	tblrd		*+
  4227  002AB4  CFF5 F09D          	movff	tablat,___ftmul@f2+1
  4228  002AB8  000A               	tblrd		*-
  4229  002ABA  CFF5 F09E          	movff	tablat,___ftmul@f2+2
  4230  002ABE  EC14  F01F         	call	___ftmul	;wreg free
  4231  002AC2  C099  F0A8         	movff	?___ftmul,?_scale
  4232  002AC6  C09A  F0A9         	movff	?___ftmul+1,?_scale+1
  4233  002ACA  C09B  F0AA         	movff	?___ftmul+2,?_scale+2
  4234  002ACE  0012               	return	
  4235  002AD0                     l4308:
  4236                           
  4237                           ;doprnt.c: 432: else if(scl > 10)
  4238  002AD0  0100               	movlb	0	; () banked
  4239  002AD2  51AE               	movf	scale@scl& (0+255),w,b
  4240  002AD4  0A80               	xorlw	128
  4241  002AD6  0F75               	addlw	-139
  4242  002AD8  A0D8               	btfss	status,0,c
  4243  002ADA  D05D               	goto	l4314
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4247  002ADC  0E00               	movlw	0
  4248  002ADE  0100               	movlb	0	; () banked
  4249  002AE0  6F8E               	movwf	(___awdiv@divisor+1)& (0+255),b
  4250  002AE2  0E0A               	movlw	10
  4251  002AE4  6F8D               	movwf	___awdiv@divisor& (0+255),b
  4252  002AE6  0100               	movlb	0	; () banked
  4253  002AE8  51AE               	movf	scale@scl& (0+255),w,b
  4254  002AEA  0100               	movlb	0	; () banked
  4255  002AEC  6F8B               	movwf	___awdiv@dividend& (0+255),b
  4256  002AEE  6B8C               	clrf	(___awdiv@dividend+1)& (0+255),b
  4257  002AF0  BF8B               	btfsc	___awdiv@dividend& (0+255),7,b
  4258  002AF2  078C               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4259  002AF4  ECE3  F023         	call	___awdiv	;wreg free
  4260  002AF8  0E09               	movlw	9
  4261  002AFA  0100               	movlb	0	; () banked
  4262  002AFC  258B               	addwf	?___awdiv& (0+255),w,b
  4263  002AFE  0100               	movlb	0	; () banked
  4264  002B00  6F93               	movwf	___wmul@multiplier& (0+255),b
  4265  002B02  0E00               	movlw	0
  4266  002B04  0100               	movlb	0	; () banked
  4267  002B06  218C               	addwfc	(?___awdiv+1)& (0+255),w,b
  4268  002B08  0100               	movlb	0	; () banked
  4269  002B0A  6F94               	movwf	(___wmul@multiplier+1)& (0+255),b
  4270  002B0C  0E00               	movlw	0
  4271  002B0E  0100               	movlb	0	; () banked
  4272  002B10  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4273  002B12  0E03               	movlw	3
  4274  002B14  6F95               	movwf	___wmul@multiplicand& (0+255),b
  4275  002B16  EC27  F029         	call	___wmul	;wreg free
  4276  002B1A  0E29               	movlw	low __npowers_
  4277  002B1C  0100               	movlb	0	; () banked
  4278  002B1E  2593               	addwf	?___wmul& (0+255),w,b
  4279  002B20  6EF6               	movwf	tblptrl,c
  4280  002B22  0E06               	movlw	high __npowers_
  4281  002B24  0100               	movlb	0	; () banked
  4282  002B26  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  4283  002B28  6EF7               	movwf	tblptrh,c
  4284  002B2A                     	if	0	;There are less than 3 active tblptr bytes
  4285  002B2A                     	endif
  4286  002B2A  0009               	tblrd		*+
  4287  002B2C  CFF5 F099          	movff	tablat,___ftmul@f1
  4288  002B30  0009               	tblrd		*+
  4289  002B32  CFF5 F09A          	movff	tablat,___ftmul@f1+1
  4290  002B36  000A               	tblrd		*-
  4291  002B38  CFF5 F09B          	movff	tablat,___ftmul@f1+2
  4292  002B3C  0E00               	movlw	0
  4293  002B3E  0100               	movlb	0	; () banked
  4294  002B40  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4295  002B42  0E03               	movlw	3
  4296  002B44  6F95               	movwf	___wmul@multiplicand& (0+255),b
  4297  002B46  0E00               	movlw	0
  4298  002B48  0100               	movlb	0	; () banked
  4299  002B4A  6F88               	movwf	(___awmod@divisor+1)& (0+255),b
  4300  002B4C  0E0A               	movlw	10
  4301  002B4E  6F87               	movwf	___awmod@divisor& (0+255),b
  4302  002B50  0100               	movlb	0	; () banked
  4303  002B52  51AE               	movf	scale@scl& (0+255),w,b
  4304  002B54  0100               	movlb	0	; () banked
  4305  002B56  6F85               	movwf	___awmod@dividend& (0+255),b
  4306  002B58  6B86               	clrf	(___awmod@dividend+1)& (0+255),b
  4307  002B5A  BF85               	btfsc	___awmod@dividend& (0+255),7,b
  4308  002B5C  0786               	decf	(___awmod@dividend+1)& (0+255),f,b
  4309  002B5E  EC4B  F025         	call	___awmod	;wreg free
  4310  002B62  C085  F093         	movff	?___awmod,___wmul@multiplier
  4311  002B66  C086  F094         	movff	?___awmod+1,___wmul@multiplier+1
  4312  002B6A  EC27  F029         	call	___wmul	;wreg free
  4313  002B6E  0E29               	movlw	low __npowers_
  4314  002B70  0100               	movlb	0	; () banked
  4315  002B72  2593               	addwf	?___wmul& (0+255),w,b
  4316  002B74  6EF6               	movwf	tblptrl,c
  4317  002B76  0E06               	movlw	high __npowers_
  4318  002B78  0100               	movlb	0	; () banked
  4319  002B7A  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  4320  002B7C  6EF7               	movwf	tblptrh,c
  4321  002B7E                     	if	0	;There are less than 3 active tblptr bytes
  4322  002B7E                     	endif
  4323  002B7E  0009               	tblrd		*+
  4324  002B80  CFF5 F09C          	movff	tablat,___ftmul@f2
  4325  002B84  0009               	tblrd		*+
  4326  002B86  CFF5 F09D          	movff	tablat,___ftmul@f2+1
  4327  002B8A  000A               	tblrd		*-
  4328  002B8C  CFF5 F09E          	movff	tablat,___ftmul@f2+2
  4329  002B90  EC14  F01F         	call	___ftmul	;wreg free
  4330  002B94  D796               	goto	L3
  4331  002B96                     l4314:
  4332                           
  4333                           ;doprnt.c: 434: return _npowers_[scl];
  4334  002B96  0100               	movlb	0	; () banked
  4335  002B98  51AE               	movf	scale@scl& (0+255),w,b
  4336  002B9A  0D03               	mullw	3
  4337  002B9C  0E29               	movlw	low __npowers_
  4338  002B9E  24F3               	addwf	prodl,w,c
  4339  002BA0  6EF6               	movwf	tblptrl,c
  4340  002BA2  0E06               	movlw	high __npowers_
  4341  002BA4  20F4               	addwfc	prodh,w,c
  4342  002BA6  6EF7               	movwf	tblptrh,c
  4343  002BA8                     	if	0	;There are less than 3 active tblptr bytes
  4344  002BA8                     	endif
  4345  002BA8  0009               	tblrd		*+
  4346  002BAA  CFF5 F0A8          	movff	tablat,?_scale
  4347  002BAE  0009               	tblrd		*+
  4348  002BB0  CFF5 F0A9          	movff	tablat,?_scale+1
  4349  002BB4  000A               	tblrd		*-
  4350  002BB6  CFF5 F0AA          	movff	tablat,?_scale+2
  4351                           
  4352                           ; BSR set to: 0
  4353  002BBA  0012               	return	
  4354  002BBC                     l4318:
  4355                           
  4356                           ; BSR set to: 0
  4357                           ;doprnt.c: 435: }
  4358                           ;doprnt.c: 436: if(scl>=110)
  4359  002BBC  0100               	movlb	0	; () banked
  4360  002BBE  51AE               	movf	scale@scl& (0+255),w,b
  4361  002BC0  0A80               	xorlw	128
  4362  002BC2  0F12               	addlw	-238
  4363  002BC4  A0D8               	btfss	status,0,c
  4364  002BC6  D0AC               	goto	l4326
  4365                           
  4366                           ; BSR set to: 0
  4367                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4368  002BC8  0E00               	movlw	0
  4369  002BCA  0100               	movlb	0	; () banked
  4370  002BCC  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4371  002BCE  0E03               	movlw	3
  4372  002BD0  6F95               	movwf	___wmul@multiplicand& (0+255),b
  4373  002BD2  0E00               	movlw	0
  4374  002BD4  0100               	movlb	0	; () banked
  4375  002BD6  6F8E               	movwf	(___awdiv@divisor+1)& (0+255),b
  4376  002BD8  0E0A               	movlw	10
  4377  002BDA  6F8D               	movwf	___awdiv@divisor& (0+255),b
  4378  002BDC  0E00               	movlw	0
  4379  002BDE  0100               	movlb	0	; () banked
  4380  002BE0  6F88               	movwf	(___awmod@divisor+1)& (0+255),b
  4381  002BE2  0E64               	movlw	100
  4382  002BE4  6F87               	movwf	___awmod@divisor& (0+255),b
  4383  002BE6  0100               	movlb	0	; () banked
  4384  002BE8  51AE               	movf	scale@scl& (0+255),w,b
  4385  002BEA  0100               	movlb	0	; () banked
  4386  002BEC  6F85               	movwf	___awmod@dividend& (0+255),b
  4387  002BEE  6B86               	clrf	(___awmod@dividend+1)& (0+255),b
  4388  002BF0  BF85               	btfsc	___awmod@dividend& (0+255),7,b
  4389  002BF2  0786               	decf	(___awmod@dividend+1)& (0+255),f,b
  4390  002BF4  EC4B  F025         	call	___awmod	;wreg free
  4391  002BF8  C085  F08B         	movff	?___awmod,___awdiv@dividend
  4392  002BFC  C086  F08C         	movff	?___awmod+1,___awdiv@dividend+1
  4393  002C00  ECE3  F023         	call	___awdiv	;wreg free
  4394  002C04  0E09               	movlw	9
  4395  002C06  0100               	movlb	0	; () banked
  4396  002C08  258B               	addwf	?___awdiv& (0+255),w,b
  4397  002C0A  0100               	movlb	0	; () banked
  4398  002C0C  6F93               	movwf	___wmul@multiplier& (0+255),b
  4399  002C0E  0E00               	movlw	0
  4400  002C10  0100               	movlb	0	; () banked
  4401  002C12  218C               	addwfc	(?___awdiv+1)& (0+255),w,b
  4402  002C14  0100               	movlb	0	; () banked
  4403  002C16  6F94               	movwf	(___wmul@multiplier+1)& (0+255),b
  4404  002C18  EC27  F029         	call	___wmul	;wreg free
  4405  002C1C  0E50               	movlw	low __powers_
  4406  002C1E  0100               	movlb	0	; () banked
  4407  002C20  2593               	addwf	?___wmul& (0+255),w,b
  4408  002C22  6EF6               	movwf	tblptrl,c
  4409  002C24  0E06               	movlw	high __powers_
  4410  002C26  0100               	movlb	0	; () banked
  4411  002C28  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  4412  002C2A  6EF7               	movwf	tblptrh,c
  4413  002C2C                     	if	0	;There are less than 3 active tblptr bytes
  4414  002C2C                     	endif
  4415  002C2C  0009               	tblrd		*+
  4416  002C2E  CFF5 F09C          	movff	tablat,___ftmul@f2
  4417  002C32  0009               	tblrd		*+
  4418  002C34  CFF5 F09D          	movff	tablat,___ftmul@f2+1
  4419  002C38  000A               	tblrd		*-
  4420  002C3A  CFF5 F09E          	movff	tablat,___ftmul@f2+2
  4421  002C3E  0E00               	movlw	0
  4422  002C40  0100               	movlb	0	; () banked
  4423  002C42  6F8E               	movwf	(___awdiv@divisor+1)& (0+255),b
  4424  002C44  0E64               	movlw	100
  4425  002C46  6F8D               	movwf	___awdiv@divisor& (0+255),b
  4426  002C48  0100               	movlb	0	; () banked
  4427  002C4A  51AE               	movf	scale@scl& (0+255),w,b
  4428  002C4C  0100               	movlb	0	; () banked
  4429  002C4E  6F8B               	movwf	___awdiv@dividend& (0+255),b
  4430  002C50  6B8C               	clrf	(___awdiv@dividend+1)& (0+255),b
  4431  002C52  BF8B               	btfsc	___awdiv@dividend& (0+255),7,b
  4432  002C54  078C               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4433  002C56  ECE3  F023         	call	___awdiv	;wreg free
  4434  002C5A  0E12               	movlw	18
  4435  002C5C  0100               	movlb	0	; () banked
  4436  002C5E  258B               	addwf	?___awdiv& (0+255),w,b
  4437  002C60  0100               	movlb	0	; () banked
  4438  002C62  6F93               	movwf	___wmul@multiplier& (0+255),b
  4439  002C64  0E00               	movlw	0
  4440  002C66  0100               	movlb	0	; () banked
  4441  002C68  218C               	addwfc	(?___awdiv+1)& (0+255),w,b
  4442  002C6A  0100               	movlb	0	; () banked
  4443  002C6C  6F94               	movwf	(___wmul@multiplier+1)& (0+255),b
  4444  002C6E  0E00               	movlw	0
  4445  002C70  0100               	movlb	0	; () banked
  4446  002C72  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4447  002C74  0E03               	movlw	3
  4448  002C76  6F95               	movwf	___wmul@multiplicand& (0+255),b
  4449  002C78  EC27  F029         	call	___wmul	;wreg free
  4450  002C7C  0E50               	movlw	low __powers_
  4451  002C7E  0100               	movlb	0	; () banked
  4452  002C80  2593               	addwf	?___wmul& (0+255),w,b
  4453  002C82  6EF6               	movwf	tblptrl,c
  4454  002C84  0E06               	movlw	high __powers_
  4455  002C86  0100               	movlb	0	; () banked
  4456  002C88  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  4457  002C8A  6EF7               	movwf	tblptrh,c
  4458  002C8C                     	if	0	;There are less than 3 active tblptr bytes
  4459  002C8C                     	endif
  4460  002C8C  0009               	tblrd		*+
  4461  002C8E  CFF5 F099          	movff	tablat,___ftmul@f1
  4462  002C92  0009               	tblrd		*+
  4463  002C94  CFF5 F09A          	movff	tablat,___ftmul@f1+1
  4464  002C98  000A               	tblrd		*-
  4465  002C9A  CFF5 F09B          	movff	tablat,___ftmul@f1+2
  4466  002C9E  EC14  F01F         	call	___ftmul	;wreg free
  4467  002CA2  C099  F0AB         	movff	?___ftmul,_scale$1620
  4468  002CA6  C09A  F0AC         	movff	?___ftmul+1,_scale$1620+1
  4469  002CAA  C09B  F0AD         	movff	?___ftmul+2,_scale$1620+2
  4470                           
  4471                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4472  002CAE  C0AB  F099         	movff	_scale$1620,___ftmul@f1
  4473  002CB2  C0AC  F09A         	movff	_scale$1620+1,___ftmul@f1+1
  4474  002CB6  C0AD  F09B         	movff	_scale$1620+2,___ftmul@f1+2
  4475  002CBA  0E00               	movlw	0
  4476  002CBC  0100               	movlb	0	; () banked
  4477  002CBE  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4478  002CC0  0E03               	movlw	3
  4479  002CC2  6F95               	movwf	___wmul@multiplicand& (0+255),b
  4480  002CC4  0E00               	movlw	0
  4481  002CC6  0100               	movlb	0	; () banked
  4482  002CC8  6F88               	movwf	(___awmod@divisor+1)& (0+255),b
  4483  002CCA  0E0A               	movlw	10
  4484  002CCC  6F87               	movwf	___awmod@divisor& (0+255),b
  4485  002CCE  0100               	movlb	0	; () banked
  4486  002CD0  51AE               	movf	scale@scl& (0+255),w,b
  4487  002CD2  0100               	movlb	0	; () banked
  4488  002CD4  6F85               	movwf	___awmod@dividend& (0+255),b
  4489  002CD6  6B86               	clrf	(___awmod@dividend+1)& (0+255),b
  4490  002CD8  BF85               	btfsc	___awmod@dividend& (0+255),7,b
  4491  002CDA  0786               	decf	(___awmod@dividend+1)& (0+255),f,b
  4492  002CDC  EC4B  F025         	call	___awmod	;wreg free
  4493  002CE0  C085  F093         	movff	?___awmod,___wmul@multiplier
  4494  002CE4  C086  F094         	movff	?___awmod+1,___wmul@multiplier+1
  4495  002CE8  EC27  F029         	call	___wmul	;wreg free
  4496  002CEC  0E50               	movlw	low __powers_
  4497  002CEE  0100               	movlb	0	; () banked
  4498  002CF0  2593               	addwf	?___wmul& (0+255),w,b
  4499  002CF2  6EF6               	movwf	tblptrl,c
  4500  002CF4  0E06               	movlw	high __powers_
  4501  002CF6  0100               	movlb	0	; () banked
  4502  002CF8  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  4503  002CFA  6EF7               	movwf	tblptrh,c
  4504  002CFC                     	if	0	;There are less than 3 active tblptr bytes
  4505  002CFC                     	endif
  4506  002CFC  0009               	tblrd		*+
  4507  002CFE  CFF5 F09C          	movff	tablat,___ftmul@f2
  4508  002D02  0009               	tblrd		*+
  4509  002D04  CFF5 F09D          	movff	tablat,___ftmul@f2+1
  4510  002D08  000A               	tblrd		*-
  4511  002D0A  CFF5 F09E          	movff	tablat,___ftmul@f2+2
  4512  002D0E  EC14  F01F         	call	___ftmul	;wreg free
  4513  002D12  C099  F0A8         	movff	?___ftmul,?_scale
  4514  002D16  C09A  F0A9         	movff	?___ftmul+1,?_scale+1
  4515  002D1A  C09B  F0AA         	movff	?___ftmul+2,?_scale+2
  4516  002D1E  0012               	return	
  4517  002D20                     l4326:
  4518                           
  4519                           ;doprnt.c: 438: else if(scl > 10)
  4520  002D20  0100               	movlb	0	; () banked
  4521  002D22  51AE               	movf	scale@scl& (0+255),w,b
  4522  002D24  0A80               	xorlw	128
  4523  002D26  0F75               	addlw	-139
  4524  002D28  A0D8               	btfss	status,0,c
  4525  002D2A  D05D               	goto	l4332
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4529  002D2C  0E00               	movlw	0
  4530  002D2E  0100               	movlb	0	; () banked
  4531  002D30  6F8E               	movwf	(___awdiv@divisor+1)& (0+255),b
  4532  002D32  0E0A               	movlw	10
  4533  002D34  6F8D               	movwf	___awdiv@divisor& (0+255),b
  4534  002D36  0100               	movlb	0	; () banked
  4535  002D38  51AE               	movf	scale@scl& (0+255),w,b
  4536  002D3A  0100               	movlb	0	; () banked
  4537  002D3C  6F8B               	movwf	___awdiv@dividend& (0+255),b
  4538  002D3E  6B8C               	clrf	(___awdiv@dividend+1)& (0+255),b
  4539  002D40  BF8B               	btfsc	___awdiv@dividend& (0+255),7,b
  4540  002D42  078C               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4541  002D44  ECE3  F023         	call	___awdiv	;wreg free
  4542  002D48  0E09               	movlw	9
  4543  002D4A  0100               	movlb	0	; () banked
  4544  002D4C  258B               	addwf	?___awdiv& (0+255),w,b
  4545  002D4E  0100               	movlb	0	; () banked
  4546  002D50  6F93               	movwf	___wmul@multiplier& (0+255),b
  4547  002D52  0E00               	movlw	0
  4548  002D54  0100               	movlb	0	; () banked
  4549  002D56  218C               	addwfc	(?___awdiv+1)& (0+255),w,b
  4550  002D58  0100               	movlb	0	; () banked
  4551  002D5A  6F94               	movwf	(___wmul@multiplier+1)& (0+255),b
  4552  002D5C  0E00               	movlw	0
  4553  002D5E  0100               	movlb	0	; () banked
  4554  002D60  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4555  002D62  0E03               	movlw	3
  4556  002D64  6F95               	movwf	___wmul@multiplicand& (0+255),b
  4557  002D66  EC27  F029         	call	___wmul	;wreg free
  4558  002D6A  0E50               	movlw	low __powers_
  4559  002D6C  0100               	movlb	0	; () banked
  4560  002D6E  2593               	addwf	?___wmul& (0+255),w,b
  4561  002D70  6EF6               	movwf	tblptrl,c
  4562  002D72  0E06               	movlw	high __powers_
  4563  002D74  0100               	movlb	0	; () banked
  4564  002D76  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  4565  002D78  6EF7               	movwf	tblptrh,c
  4566  002D7A                     	if	0	;There are less than 3 active tblptr bytes
  4567  002D7A                     	endif
  4568  002D7A  0009               	tblrd		*+
  4569  002D7C  CFF5 F099          	movff	tablat,___ftmul@f1
  4570  002D80  0009               	tblrd		*+
  4571  002D82  CFF5 F09A          	movff	tablat,___ftmul@f1+1
  4572  002D86  000A               	tblrd		*-
  4573  002D88  CFF5 F09B          	movff	tablat,___ftmul@f1+2
  4574  002D8C  0E00               	movlw	0
  4575  002D8E  0100               	movlb	0	; () banked
  4576  002D90  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4577  002D92  0E03               	movlw	3
  4578  002D94  6F95               	movwf	___wmul@multiplicand& (0+255),b
  4579  002D96  0E00               	movlw	0
  4580  002D98  0100               	movlb	0	; () banked
  4581  002D9A  6F88               	movwf	(___awmod@divisor+1)& (0+255),b
  4582  002D9C  0E0A               	movlw	10
  4583  002D9E  6F87               	movwf	___awmod@divisor& (0+255),b
  4584  002DA0  0100               	movlb	0	; () banked
  4585  002DA2  51AE               	movf	scale@scl& (0+255),w,b
  4586  002DA4  0100               	movlb	0	; () banked
  4587  002DA6  6F85               	movwf	___awmod@dividend& (0+255),b
  4588  002DA8  6B86               	clrf	(___awmod@dividend+1)& (0+255),b
  4589  002DAA  BF85               	btfsc	___awmod@dividend& (0+255),7,b
  4590  002DAC  0786               	decf	(___awmod@dividend+1)& (0+255),f,b
  4591  002DAE  EC4B  F025         	call	___awmod	;wreg free
  4592  002DB2  C085  F093         	movff	?___awmod,___wmul@multiplier
  4593  002DB6  C086  F094         	movff	?___awmod+1,___wmul@multiplier+1
  4594  002DBA  EC27  F029         	call	___wmul	;wreg free
  4595  002DBE  0E50               	movlw	low __powers_
  4596  002DC0  0100               	movlb	0	; () banked
  4597  002DC2  2593               	addwf	?___wmul& (0+255),w,b
  4598  002DC4  6EF6               	movwf	tblptrl,c
  4599  002DC6  0E06               	movlw	high __powers_
  4600  002DC8  0100               	movlb	0	; () banked
  4601  002DCA  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  4602  002DCC  6EF7               	movwf	tblptrh,c
  4603  002DCE                     	if	0	;There are less than 3 active tblptr bytes
  4604  002DCE                     	endif
  4605  002DCE  0009               	tblrd		*+
  4606  002DD0  CFF5 F09C          	movff	tablat,___ftmul@f2
  4607  002DD4  0009               	tblrd		*+
  4608  002DD6  CFF5 F09D          	movff	tablat,___ftmul@f2+1
  4609  002DDA  000A               	tblrd		*-
  4610  002DDC  CFF5 F09E          	movff	tablat,___ftmul@f2+2
  4611  002DE0  EC14  F01F         	call	___ftmul	;wreg free
  4612  002DE4  D796               	goto	L4
  4613  002DE6                     l4332:
  4614                           
  4615                           ;doprnt.c: 440: return _powers_[scl];
  4616  002DE6  0100               	movlb	0	; () banked
  4617  002DE8  51AE               	movf	scale@scl& (0+255),w,b
  4618  002DEA  0D03               	mullw	3
  4619  002DEC  0E50               	movlw	low __powers_
  4620  002DEE  24F3               	addwf	prodl,w,c
  4621  002DF0  6EF6               	movwf	tblptrl,c
  4622  002DF2  0E06               	movlw	high __powers_
  4623  002DF4  20F4               	addwfc	prodh,w,c
  4624  002DF6  6EF7               	movwf	tblptrh,c
  4625  002DF8                     	if	0	;There are less than 3 active tblptr bytes
  4626  002DF8                     	endif
  4627  002DF8  0009               	tblrd		*+
  4628  002DFA  CFF5 F0A8          	movff	tablat,?_scale
  4629  002DFE  0009               	tblrd		*+
  4630  002E00  CFF5 F0A9          	movff	tablat,?_scale+1
  4631  002E04  000A               	tblrd		*-
  4632  002E06  CFF5 F0AA          	movff	tablat,?_scale+2
  4633  002E0A  0012               	return	
  4634  002E0C                     __end_of_scale:
  4635                           	opt stack 0
  4636                           tosu	equ	0xFFF
  4637                           tosh	equ	0xFFE
  4638                           tosl	equ	0xFFD
  4639                           pclath	equ	0xFFA
  4640                           tblptru	equ	0xFF8
  4641                           tblptrh	equ	0xFF7
  4642                           tblptrl	equ	0xFF6
  4643                           tablat	equ	0xFF5
  4644                           prodh	equ	0xFF4
  4645                           prodl	equ	0xFF3
  4646                           intcon	equ	0xFF2
  4647                           postinc0	equ	0xFEE
  4648                           wreg	equ	0xFE8
  4649                           indf2	equ	0xFDF
  4650                           postinc2	equ	0xFDE
  4651                           postdec2	equ	0xFDD
  4652                           fsr2h	equ	0xFDA
  4653                           fsr2l	equ	0xFD9
  4654                           status	equ	0xFD8
  4655                           
  4656 ;; *************** function _putch *****************
  4657 ;; Defined at:
  4658 ;;		line 111 in file "mcc_generated_files/eusart1.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;  txData          1    wreg     unsigned char 
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;  txData          1   38[BANK0 ] unsigned char 
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  1    wreg      void 
  4665 ;; Registers used:
  4666 ;;		wreg, status,2, cstack
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4672 ;;      Params:         0       0       0       0       0       0       0
  4673 ;;      Locals:         0       1       0       0       0       0       0
  4674 ;;      Temps:          0       0       0       0       0       0       0
  4675 ;;      Totals:         0       1       0       0       0       0       0
  4676 ;;Total ram usage:        1 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; Hardware stack levels required when called:    8
  4679 ;; This function calls:
  4680 ;;		_EUSART1_Write
  4681 ;; This function is called by:
  4682 ;;		i2__doprnt
  4683 ;;		__doprnt
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           	psect	text4
  4688  0054FA                     __ptext4:
  4689                           	opt stack 0
  4690  0054FA                     _putch:
  4691                           	opt stack 0
  4692                           
  4693                           ;Skip over the trampoline to the duplicate function for level 2
  4694  0054FA  B25F               	btfsc	btemp,1,c
  4695  0054FC  EFB2  F02A         	goto	i2_putch
  4696  005500                     _putch$intlevel0:
  4697                           	opt stack 20
  4698                           
  4699                           ;incstack = 0
  4700                           ;putch@txData stored from wreg
  4701  005500  0100               	movlb	0	; () banked
  4702  005502  6F86               	movwf	putch@txData& (0+255),b
  4703                           
  4704                           ;eusart1.c: 113: EUSART1_Write(txData);
  4705  005504  0100               	movlb	0	; () banked
  4706  005506  5186               	movf	putch@txData& (0+255),w,b
  4707  005508  EC87  F02A         	call	_EUSART1_Write
  4708  00550C  0012               	return		;funcret
  4709  00550E                     __end_of_putch:
  4710                           	opt stack 0
  4711                           tosu	equ	0xFFF
  4712                           tosh	equ	0xFFE
  4713                           tosl	equ	0xFFD
  4714                           pclath	equ	0xFFA
  4715                           tblptru	equ	0xFF8
  4716                           tblptrh	equ	0xFF7
  4717                           tblptrl	equ	0xFF6
  4718                           tablat	equ	0xFF5
  4719                           prodh	equ	0xFF4
  4720                           prodl	equ	0xFF3
  4721                           intcon	equ	0xFF2
  4722                           postinc0	equ	0xFEE
  4723                           wreg	equ	0xFE8
  4724                           indf2	equ	0xFDF
  4725                           postinc2	equ	0xFDE
  4726                           postdec2	equ	0xFDD
  4727                           fsr2h	equ	0xFDA
  4728                           fsr2l	equ	0xFD9
  4729                           status	equ	0xFD8
  4730                           
  4731 ;; *************** function _EUSART1_Write *****************
  4732 ;; Defined at:
  4733 ;;		line 97 in file "mcc_generated_files/eusart1.c"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;  txData          1    wreg     unsigned char 
  4736 ;; Auto vars:     Size  Location     Type
  4737 ;;  txData          1   37[BANK0 ] unsigned char 
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  1    wreg      void 
  4740 ;; Registers used:
  4741 ;;		wreg
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4747 ;;      Params:         0       0       0       0       0       0       0
  4748 ;;      Locals:         0       1       0       0       0       0       0
  4749 ;;      Temps:          0       0       0       0       0       0       0
  4750 ;;      Totals:         0       1       0       0       0       0       0
  4751 ;;Total ram usage:        1 bytes
  4752 ;; Hardware stack levels used:    1
  4753 ;; Hardware stack levels required when called:    7
  4754 ;; This function calls:
  4755 ;;		Nothing
  4756 ;; This function is called by:
  4757 ;;		_putch
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           	psect	text5
  4762  00550E                     __ptext5:
  4763                           	opt stack 0
  4764  00550E                     _EUSART1_Write:
  4765                           	opt stack 20
  4766                           
  4767                           ;incstack = 0
  4768                           ;EUSART1_Write@txData stored from wreg
  4769  00550E  0100               	movlb	0	; () banked
  4770  005510  6F85               	movwf	EUSART1_Write@txData& (0+255),b
  4771  005512                     l207:
  4772  005512  A89E               	btfss	3998,4,c	;volatile
  4773  005514  D7FE               	goto	l207
  4774                           
  4775                           ;eusart1.c: 101: }
  4776                           ;eusart1.c: 103: TXREG1 = txData;
  4777  005516  C085  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4778  00551A  0012               	return		;funcret
  4779  00551C                     __end_of_EUSART1_Write:
  4780                           	opt stack 0
  4781                           tosu	equ	0xFFF
  4782                           tosh	equ	0xFFE
  4783                           tosl	equ	0xFFD
  4784                           pclath	equ	0xFFA
  4785                           tblptru	equ	0xFF8
  4786                           tblptrh	equ	0xFF7
  4787                           tblptrl	equ	0xFF6
  4788                           tablat	equ	0xFF5
  4789                           prodh	equ	0xFF4
  4790                           prodl	equ	0xFF3
  4791                           intcon	equ	0xFF2
  4792                           postinc0	equ	0xFEE
  4793                           wreg	equ	0xFE8
  4794                           indf2	equ	0xFDF
  4795                           postinc2	equ	0xFDE
  4796                           postdec2	equ	0xFDD
  4797                           fsr2h	equ	0xFDA
  4798                           fsr2l	equ	0xFD9
  4799                           status	equ	0xFD8
  4800                           
  4801 ;; *************** function _isdigit *****************
  4802 ;; Defined at:
  4803 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;  c               1    wreg     unsigned char 
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;  c               1   39[BANK0 ] unsigned char 
  4808 ;; Return value:  Size  Location     Type
  4809 ;;		None               void
  4810 ;; Registers used:
  4811 ;;		wreg, status,2, status,0
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4817 ;;      Params:         0       0       0       0       0       0       0
  4818 ;;      Locals:         0       2       0       0       0       0       0
  4819 ;;      Temps:          0       1       0       0       0       0       0
  4820 ;;      Totals:         0       3       0       0       0       0       0
  4821 ;;Total ram usage:        3 bytes
  4822 ;; Hardware stack levels used:    1
  4823 ;; Hardware stack levels required when called:    7
  4824 ;; This function calls:
  4825 ;;		Nothing
  4826 ;; This function is called by:
  4827 ;;		__doprnt
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831                           	psect	text6
  4832  005382                     __ptext6:
  4833                           	opt stack 0
  4834  005382                     _isdigit:
  4835                           	opt stack 21
  4836                           
  4837                           ;incstack = 0
  4838                           ;isdigit@c stored from wreg
  4839  005382  0100               	movlb	0	; () banked
  4840  005384  6F87               	movwf	isdigit@c& (0+255),b
  4841  005386  0E00               	movlw	0
  4842  005388  0100               	movlb	0	; () banked
  4843  00538A  6F86               	movwf	_isdigit$1164& (0+255),b
  4844                           
  4845                           ; BSR set to: 0
  4846  00538C  0E3A               	movlw	58
  4847  00538E  0100               	movlb	0	; () banked
  4848  005390  6187               	cpfslt	isdigit@c& (0+255),b
  4849  005392  D007               	goto	l4344
  4850                           
  4851                           ; BSR set to: 0
  4852  005394  0E2F               	movlw	47
  4853  005396  0100               	movlb	0	; () banked
  4854  005398  6587               	cpfsgt	isdigit@c& (0+255),b
  4855  00539A  D003               	goto	l4344
  4856                           
  4857                           ; BSR set to: 0
  4858  00539C  0E01               	movlw	1
  4859  00539E  0100               	movlb	0	; () banked
  4860  0053A0  6F86               	movwf	_isdigit$1164& (0+255),b
  4861  0053A2                     l4344:
  4862                           
  4863                           ; BSR set to: 0
  4864  0053A2  C086  F085         	movff	_isdigit$1164,??_isdigit
  4865  0053A6  0100               	movlb	0	; () banked
  4866  0053A8  3185               	rrcf	??_isdigit& (0+255),w,b
  4867  0053AA  0012               	return	
  4868  0053AC                     __end_of_isdigit:
  4869                           	opt stack 0
  4870                           tosu	equ	0xFFF
  4871                           tosh	equ	0xFFE
  4872                           tosl	equ	0xFFD
  4873                           pclath	equ	0xFFA
  4874                           tblptru	equ	0xFF8
  4875                           tblptrh	equ	0xFF7
  4876                           tblptrl	equ	0xFF6
  4877                           tablat	equ	0xFF5
  4878                           prodh	equ	0xFF4
  4879                           prodl	equ	0xFF3
  4880                           intcon	equ	0xFF2
  4881                           postinc0	equ	0xFEE
  4882                           wreg	equ	0xFE8
  4883                           indf2	equ	0xFDF
  4884                           postinc2	equ	0xFDE
  4885                           postdec2	equ	0xFDD
  4886                           fsr2h	equ	0xFDA
  4887                           fsr2l	equ	0xFD9
  4888                           status	equ	0xFD8
  4889                           
  4890 ;; *************** function _fround *****************
  4891 ;; Defined at:
  4892 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;  prec            1    wreg     unsigned char 
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;  prec            1   81[BANK0 ] unsigned char 
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  3   72[BANK0 ] unsigned char 
  4899 ;; Registers used:
  4900 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4906 ;;      Params:         0       3       0       0       0       0       0
  4907 ;;      Locals:         0       7       0       0       0       0       0
  4908 ;;      Temps:          0       0       0       0       0       0       0
  4909 ;;      Totals:         0      10       0       0       0       0       0
  4910 ;;Total ram usage:       10 bytes
  4911 ;; Hardware stack levels used:    1
  4912 ;; Hardware stack levels required when called:    9
  4913 ;; This function calls:
  4914 ;;		___awdiv
  4915 ;;		___awmod
  4916 ;;		___ftmul
  4917 ;;		___wmul
  4918 ;; This function is called by:
  4919 ;;		__doprnt
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text7
  4924  0031FC                     __ptext7:
  4925                           	opt stack 0
  4926  0031FC                     _fround:
  4927                           	opt stack 19
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;incstack = 0
  4931                           ;fround@prec stored from wreg
  4932  0031FC  0100               	movlb	0	; () banked
  4933  0031FE  6FB1               	movwf	fround@prec& (0+255),b
  4934                           
  4935                           ;doprnt.c: 413: if(prec>=110)
  4936  003200  0E6D               	movlw	109
  4937  003202  0100               	movlb	0	; () banked
  4938  003204  65B1               	cpfsgt	fround@prec& (0+255),b
  4939  003206  D0BA               	goto	l4286
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4943  003208  0E00               	movlw	0
  4944  00320A  0100               	movlb	0	; () banked
  4945  00320C  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4946  00320E  0E03               	movlw	3
  4947  003210  6F95               	movwf	___wmul@multiplicand& (0+255),b
  4948  003212  0E00               	movlw	0
  4949  003214  0100               	movlb	0	; () banked
  4950  003216  6F8E               	movwf	(___awdiv@divisor+1)& (0+255),b
  4951  003218  0E0A               	movlw	10
  4952  00321A  6F8D               	movwf	___awdiv@divisor& (0+255),b
  4953  00321C  0E00               	movlw	0
  4954  00321E  0100               	movlb	0	; () banked
  4955  003220  6F88               	movwf	(___awmod@divisor+1)& (0+255),b
  4956  003222  0E64               	movlw	100
  4957  003224  6F87               	movwf	___awmod@divisor& (0+255),b
  4958  003226  C0B1  F085         	movff	fround@prec,___awmod@dividend
  4959  00322A  0100               	movlb	0	; () banked
  4960  00322C  6B86               	clrf	(___awmod@dividend+1)& (0+255),b
  4961  00322E  EC4B  F025         	call	___awmod	;wreg free
  4962  003232  C085  F08B         	movff	?___awmod,___awdiv@dividend
  4963  003236  C086  F08C         	movff	?___awmod+1,___awdiv@dividend+1
  4964  00323A  ECE3  F023         	call	___awdiv	;wreg free
  4965  00323E  0E09               	movlw	9
  4966  003240  0100               	movlb	0	; () banked
  4967  003242  258B               	addwf	?___awdiv& (0+255),w,b
  4968  003244  0100               	movlb	0	; () banked
  4969  003246  6F93               	movwf	___wmul@multiplier& (0+255),b
  4970  003248  0E00               	movlw	0
  4971  00324A  0100               	movlb	0	; () banked
  4972  00324C  218C               	addwfc	(?___awdiv+1)& (0+255),w,b
  4973  00324E  0100               	movlb	0	; () banked
  4974  003250  6F94               	movwf	(___wmul@multiplier+1)& (0+255),b
  4975  003252  EC27  F029         	call	___wmul	;wreg free
  4976  003256  0E29               	movlw	low __npowers_
  4977  003258  0100               	movlb	0	; () banked
  4978  00325A  2593               	addwf	?___wmul& (0+255),w,b
  4979  00325C  6EF6               	movwf	tblptrl,c
  4980  00325E  0E06               	movlw	high __npowers_
  4981  003260  0100               	movlb	0	; () banked
  4982  003262  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  4983  003264  6EF7               	movwf	tblptrh,c
  4984  003266                     	if	0	;There are less than 3 active tblptr bytes
  4985  003266                     	endif
  4986  003266  0009               	tblrd		*+
  4987  003268  CFF5 F09C          	movff	tablat,___ftmul@f2
  4988  00326C  0009               	tblrd		*+
  4989  00326E  CFF5 F09D          	movff	tablat,___ftmul@f2+1
  4990  003272  000A               	tblrd		*-
  4991  003274  CFF5 F09E          	movff	tablat,___ftmul@f2+2
  4992  003278  0E00               	movlw	0
  4993  00327A  0100               	movlb	0	; () banked
  4994  00327C  6F8E               	movwf	(___awdiv@divisor+1)& (0+255),b
  4995  00327E  0E64               	movlw	100
  4996  003280  6F8D               	movwf	___awdiv@divisor& (0+255),b
  4997  003282  C0B1  F08B         	movff	fround@prec,___awdiv@dividend
  4998  003286  0100               	movlb	0	; () banked
  4999  003288  6B8C               	clrf	(___awdiv@dividend+1)& (0+255),b
  5000  00328A  ECE3  F023         	call	___awdiv	;wreg free
  5001  00328E  0E12               	movlw	18
  5002  003290  0100               	movlb	0	; () banked
  5003  003292  258B               	addwf	?___awdiv& (0+255),w,b
  5004  003294  0100               	movlb	0	; () banked
  5005  003296  6F93               	movwf	___wmul@multiplier& (0+255),b
  5006  003298  0E00               	movlw	0
  5007  00329A  0100               	movlb	0	; () banked
  5008  00329C  218C               	addwfc	(?___awdiv+1)& (0+255),w,b
  5009  00329E  0100               	movlb	0	; () banked
  5010  0032A0  6F94               	movwf	(___wmul@multiplier+1)& (0+255),b
  5011  0032A2  0E00               	movlw	0
  5012  0032A4  0100               	movlb	0	; () banked
  5013  0032A6  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5014  0032A8  0E03               	movlw	3
  5015  0032AA  6F95               	movwf	___wmul@multiplicand& (0+255),b
  5016  0032AC  EC27  F029         	call	___wmul	;wreg free
  5017  0032B0  0E29               	movlw	low __npowers_
  5018  0032B2  0100               	movlb	0	; () banked
  5019  0032B4  2593               	addwf	?___wmul& (0+255),w,b
  5020  0032B6  6EF6               	movwf	tblptrl,c
  5021  0032B8  0E06               	movlw	high __npowers_
  5022  0032BA  0100               	movlb	0	; () banked
  5023  0032BC  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  5024  0032BE  6EF7               	movwf	tblptrh,c
  5025  0032C0                     	if	0	;There are less than 3 active tblptr bytes
  5026  0032C0                     	endif
  5027  0032C0  0009               	tblrd		*+
  5028  0032C2  CFF5 F099          	movff	tablat,___ftmul@f1
  5029  0032C6  0009               	tblrd		*+
  5030  0032C8  CFF5 F09A          	movff	tablat,___ftmul@f1+1
  5031  0032CC  000A               	tblrd		*-
  5032  0032CE  CFF5 F09B          	movff	tablat,___ftmul@f1+2
  5033  0032D2  EC14  F01F         	call	___ftmul	;wreg free
  5034  0032D6  C099  F0AE         	movff	?___ftmul,_fround$1618
  5035  0032DA  C09A  F0AF         	movff	?___ftmul+1,_fround$1618+1
  5036  0032DE  C09B  F0B0         	movff	?___ftmul+2,_fround$1618+2
  5037                           
  5038                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5039  0032E2  0E00               	movlw	0
  5040  0032E4  0100               	movlb	0	; () banked
  5041  0032E6  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5042  0032E8  0E03               	movlw	3
  5043  0032EA  6F95               	movwf	___wmul@multiplicand& (0+255),b
  5044  0032EC  0E00               	movlw	0
  5045  0032EE  0100               	movlb	0	; () banked
  5046  0032F0  6F88               	movwf	(___awmod@divisor+1)& (0+255),b
  5047  0032F2  0E0A               	movlw	10
  5048  0032F4  6F87               	movwf	___awmod@divisor& (0+255),b
  5049  0032F6  C0B1  F085         	movff	fround@prec,___awmod@dividend
  5050  0032FA  0100               	movlb	0	; () banked
  5051  0032FC  6B86               	clrf	(___awmod@dividend+1)& (0+255),b
  5052  0032FE  EC4B  F025         	call	___awmod	;wreg free
  5053  003302  C085  F093         	movff	?___awmod,___wmul@multiplier
  5054  003306  C086  F094         	movff	?___awmod+1,___wmul@multiplier+1
  5055  00330A  EC27  F029         	call	___wmul	;wreg free
  5056  00330E  0E29               	movlw	low __npowers_
  5057  003310  0100               	movlb	0	; () banked
  5058  003312  2593               	addwf	?___wmul& (0+255),w,b
  5059  003314  6EF6               	movwf	tblptrl,c
  5060  003316  0E06               	movlw	high __npowers_
  5061  003318  0100               	movlb	0	; () banked
  5062  00331A  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  5063  00331C  6EF7               	movwf	tblptrh,c
  5064  00331E                     	if	0	;There are less than 3 active tblptr bytes
  5065  00331E                     	endif
  5066  00331E  0009               	tblrd		*+
  5067  003320  CFF5 F09C          	movff	tablat,___ftmul@f2
  5068  003324  0009               	tblrd		*+
  5069  003326  CFF5 F09D          	movff	tablat,___ftmul@f2+1
  5070  00332A  000A               	tblrd		*-
  5071  00332C  CFF5 F09E          	movff	tablat,___ftmul@f2+2
  5072  003330  C0AE  F099         	movff	_fround$1618,___ftmul@f1
  5073  003334  C0AF  F09A         	movff	_fround$1618+1,___ftmul@f1+1
  5074  003338  C0B0  F09B         	movff	_fround$1618+2,___ftmul@f1+2
  5075  00333C  EC14  F01F         	call	___ftmul	;wreg free
  5076  003340  C099  F0AB         	movff	?___ftmul,_fround$1619
  5077  003344  C09A  F0AC         	movff	?___ftmul+1,_fround$1619+1
  5078  003348  C09B  F0AD         	movff	?___ftmul+2,_fround$1619+2
  5079                           
  5080                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5081  00334C  C0AB  F099         	movff	_fround$1619,___ftmul@f1
  5082  003350  C0AC  F09A         	movff	_fround$1619+1,___ftmul@f1+1
  5083  003354  C0AD  F09B         	movff	_fround$1619+2,___ftmul@f1+2
  5084  003358  0E00               	movlw	0
  5085  00335A  0100               	movlb	0	; () banked
  5086  00335C  6F9C               	movwf	___ftmul@f2& (0+255),b
  5087  00335E  0E00               	movlw	0
  5088  003360  0100               	movlb	0	; () banked
  5089  003362  6F9D               	movwf	(___ftmul@f2+1)& (0+255),b
  5090  003364  0E3F               	movlw	63
  5091  003366  0100               	movlb	0	; () banked
  5092  003368  6F9E               	movwf	(___ftmul@f2+2)& (0+255),b
  5093  00336A  EC14  F01F         	call	___ftmul	;wreg free
  5094  00336E  C099  F0A8         	movff	?___ftmul,?_fround
  5095  003372  C09A  F0A9         	movff	?___ftmul+1,?_fround+1
  5096  003376  C09B  F0AA         	movff	?___ftmul+2,?_fround+2
  5097  00337A  0012               	return	
  5098  00337C                     l4286:
  5099                           
  5100                           ;doprnt.c: 415: else if(prec > 10)
  5101  00337C  0E0A               	movlw	10
  5102  00337E  0100               	movlb	0	; () banked
  5103  003380  65B1               	cpfsgt	fround@prec& (0+255),b
  5104  003382  D06E               	goto	l4294
  5105                           
  5106                           ; BSR set to: 0
  5107                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5108  003384  0E00               	movlw	0
  5109  003386  0100               	movlb	0	; () banked
  5110  003388  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5111  00338A  0E03               	movlw	3
  5112  00338C  6F95               	movwf	___wmul@multiplicand& (0+255),b
  5113  00338E  0E00               	movlw	0
  5114  003390  0100               	movlb	0	; () banked
  5115  003392  6F88               	movwf	(___awmod@divisor+1)& (0+255),b
  5116  003394  0E0A               	movlw	10
  5117  003396  6F87               	movwf	___awmod@divisor& (0+255),b
  5118  003398  C0B1  F085         	movff	fround@prec,___awmod@dividend
  5119  00339C  0100               	movlb	0	; () banked
  5120  00339E  6B86               	clrf	(___awmod@dividend+1)& (0+255),b
  5121  0033A0  EC4B  F025         	call	___awmod	;wreg free
  5122  0033A4  C085  F093         	movff	?___awmod,___wmul@multiplier
  5123  0033A8  C086  F094         	movff	?___awmod+1,___wmul@multiplier+1
  5124  0033AC  EC27  F029         	call	___wmul	;wreg free
  5125  0033B0  0E29               	movlw	low __npowers_
  5126  0033B2  0100               	movlb	0	; () banked
  5127  0033B4  2593               	addwf	?___wmul& (0+255),w,b
  5128  0033B6  6EF6               	movwf	tblptrl,c
  5129  0033B8  0E06               	movlw	high __npowers_
  5130  0033BA  0100               	movlb	0	; () banked
  5131  0033BC  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  5132  0033BE  6EF7               	movwf	tblptrh,c
  5133  0033C0                     	if	0	;There are less than 3 active tblptr bytes
  5134  0033C0                     	endif
  5135  0033C0  0009               	tblrd		*+
  5136  0033C2  CFF5 F09C          	movff	tablat,___ftmul@f2
  5137  0033C6  0009               	tblrd		*+
  5138  0033C8  CFF5 F09D          	movff	tablat,___ftmul@f2+1
  5139  0033CC  000A               	tblrd		*-
  5140  0033CE  CFF5 F09E          	movff	tablat,___ftmul@f2+2
  5141  0033D2  0E00               	movlw	0
  5142  0033D4  0100               	movlb	0	; () banked
  5143  0033D6  6F8E               	movwf	(___awdiv@divisor+1)& (0+255),b
  5144  0033D8  0E0A               	movlw	10
  5145  0033DA  6F8D               	movwf	___awdiv@divisor& (0+255),b
  5146  0033DC  C0B1  F08B         	movff	fround@prec,___awdiv@dividend
  5147  0033E0  0100               	movlb	0	; () banked
  5148  0033E2  6B8C               	clrf	(___awdiv@dividend+1)& (0+255),b
  5149  0033E4  ECE3  F023         	call	___awdiv	;wreg free
  5150  0033E8  0E09               	movlw	9
  5151  0033EA  0100               	movlb	0	; () banked
  5152  0033EC  258B               	addwf	?___awdiv& (0+255),w,b
  5153  0033EE  0100               	movlb	0	; () banked
  5154  0033F0  6F93               	movwf	___wmul@multiplier& (0+255),b
  5155  0033F2  0E00               	movlw	0
  5156  0033F4  0100               	movlb	0	; () banked
  5157  0033F6  218C               	addwfc	(?___awdiv+1)& (0+255),w,b
  5158  0033F8  0100               	movlb	0	; () banked
  5159  0033FA  6F94               	movwf	(___wmul@multiplier+1)& (0+255),b
  5160  0033FC  0E00               	movlw	0
  5161  0033FE  0100               	movlb	0	; () banked
  5162  003400  6F96               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5163  003402  0E03               	movlw	3
  5164  003404  6F95               	movwf	___wmul@multiplicand& (0+255),b
  5165  003406  EC27  F029         	call	___wmul	;wreg free
  5166  00340A  0E29               	movlw	low __npowers_
  5167  00340C  0100               	movlb	0	; () banked
  5168  00340E  2593               	addwf	?___wmul& (0+255),w,b
  5169  003410  6EF6               	movwf	tblptrl,c
  5170  003412  0E06               	movlw	high __npowers_
  5171  003414  0100               	movlb	0	; () banked
  5172  003416  2194               	addwfc	(?___wmul+1)& (0+255),w,b
  5173  003418  6EF7               	movwf	tblptrh,c
  5174  00341A                     	if	0	;There are less than 3 active tblptr bytes
  5175  00341A                     	endif
  5176  00341A  0009               	tblrd		*+
  5177  00341C  CFF5 F099          	movff	tablat,___ftmul@f1
  5178  003420  0009               	tblrd		*+
  5179  003422  CFF5 F09A          	movff	tablat,___ftmul@f1+1
  5180  003426  000A               	tblrd		*-
  5181  003428  CFF5 F09B          	movff	tablat,___ftmul@f1+2
  5182  00342C  EC14  F01F         	call	___ftmul	;wreg free
  5183  003430  C099  F0AE         	movff	?___ftmul,_fround$1618
  5184  003434  C09A  F0AF         	movff	?___ftmul+1,_fround$1618+1
  5185  003438  C09B  F0B0         	movff	?___ftmul+2,_fround$1618+2
  5186                           
  5187                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5188  00343C  C0AE  F099         	movff	_fround$1618,___ftmul@f1
  5189  003440  C0AF  F09A         	movff	_fround$1618+1,___ftmul@f1+1
  5190  003444  C0B0  F09B         	movff	_fround$1618+2,___ftmul@f1+2
  5191  003448  0E00               	movlw	0
  5192  00344A  0100               	movlb	0	; () banked
  5193  00344C  6F9C               	movwf	___ftmul@f2& (0+255),b
  5194  00344E  0E00               	movlw	0
  5195  003450  0100               	movlb	0	; () banked
  5196  003452  6F9D               	movwf	(___ftmul@f2+1)& (0+255),b
  5197  003454  0E3F               	movlw	63
  5198  003456  0100               	movlb	0	; () banked
  5199  003458  6F9E               	movwf	(___ftmul@f2+2)& (0+255),b
  5200  00345A  EC14  F01F         	call	___ftmul	;wreg free
  5201  00345E  D787               	goto	L5
  5202  003460                     l4294:
  5203                           
  5204                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5205  003460  0100               	movlb	0	; () banked
  5206  003462  51B1               	movf	fround@prec& (0+255),w,b
  5207  003464  0D03               	mullw	3
  5208  003466  0E29               	movlw	low __npowers_
  5209  003468  24F3               	addwf	prodl,w,c
  5210  00346A  6EF6               	movwf	tblptrl,c
  5211  00346C  0E06               	movlw	high __npowers_
  5212  00346E  20F4               	addwfc	prodh,w,c
  5213  003470  6EF7               	movwf	tblptrh,c
  5214  003472                     	if	0	;There are less than 3 active tblptr bytes
  5215  003472                     	endif
  5216  003472  0009               	tblrd		*+
  5217  003474  CFF5 F099          	movff	tablat,___ftmul@f1
  5218  003478  0009               	tblrd		*+
  5219  00347A  CFF5 F09A          	movff	tablat,___ftmul@f1+1
  5220  00347E  000A               	tblrd		*-
  5221  003480  CFF5 F09B          	movff	tablat,___ftmul@f1+2
  5222  003484  0E00               	movlw	0
  5223  003486  0100               	movlb	0	; () banked
  5224  003488  6F9C               	movwf	___ftmul@f2& (0+255),b
  5225  00348A  0E00               	movlw	0
  5226  00348C  0100               	movlb	0	; () banked
  5227  00348E  6F9D               	movwf	(___ftmul@f2+1)& (0+255),b
  5228  003490  0E3F               	movlw	63
  5229  003492  0100               	movlb	0	; () banked
  5230  003494  6F9E               	movwf	(___ftmul@f2+2)& (0+255),b
  5231  003496  EC14  F01F         	call	___ftmul	;wreg free
  5232  00349A  C099  F0A8         	movff	?___ftmul,?_fround
  5233  00349E  C09A  F0A9         	movff	?___ftmul+1,?_fround+1
  5234  0034A2  C09B  F0AA         	movff	?___ftmul+2,?_fround+2
  5235  0034A6  0012               	return	
  5236  0034A8                     __end_of_fround:
  5237                           	opt stack 0
  5238                           tosu	equ	0xFFF
  5239                           tosh	equ	0xFFE
  5240                           tosl	equ	0xFFD
  5241                           pclath	equ	0xFFA
  5242                           tblptru	equ	0xFF8
  5243                           tblptrh	equ	0xFF7
  5244                           tblptrl	equ	0xFF6
  5245                           tablat	equ	0xFF5
  5246                           prodh	equ	0xFF4
  5247                           prodl	equ	0xFF3
  5248                           intcon	equ	0xFF2
  5249                           postinc0	equ	0xFEE
  5250                           wreg	equ	0xFE8
  5251                           indf2	equ	0xFDF
  5252                           postinc2	equ	0xFDE
  5253                           postdec2	equ	0xFDD
  5254                           fsr2h	equ	0xFDA
  5255                           fsr2l	equ	0xFD9
  5256                           status	equ	0xFD8
  5257                           
  5258 ;; *************** function ___wmul *****************
  5259 ;; Defined at:
  5260 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;  multiplier      2   51[BANK0 ] unsigned int 
  5263 ;;  multiplicand    2   53[BANK0 ] unsigned int 
  5264 ;; Auto vars:     Size  Location     Type
  5265 ;;  product         2   55[BANK0 ] unsigned int 
  5266 ;; Return value:  Size  Location     Type
  5267 ;;                  2   51[BANK0 ] unsigned int 
  5268 ;; Registers used:
  5269 ;;		wreg, status,2, status,0, prodl, prodh
  5270 ;; Tracked objects:
  5271 ;;		On entry : 0/0
  5272 ;;		On exit  : 0/0
  5273 ;;		Unchanged: 0/0
  5274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5275 ;;      Params:         0       4       0       0       0       0       0
  5276 ;;      Locals:         0       2       0       0       0       0       0
  5277 ;;      Temps:          0       0       0       0       0       0       0
  5278 ;;      Totals:         0       6       0       0       0       0       0
  5279 ;;Total ram usage:        6 bytes
  5280 ;; Hardware stack levels used:    1
  5281 ;; Hardware stack levels required when called:    7
  5282 ;; This function calls:
  5283 ;;		Nothing
  5284 ;; This function is called by:
  5285 ;;		_fround
  5286 ;;		_scale
  5287 ;;		__doprnt
  5288 ;; This function uses a non-reentrant model
  5289 ;;
  5290                           
  5291                           	psect	text8
  5292  00524E                     __ptext8:
  5293                           	opt stack 0
  5294  00524E                     ___wmul:
  5295                           	opt stack 20
  5296                           
  5297                           ;incstack = 0
  5298  00524E  0100               	movlb	0	; () banked
  5299  005250  5193               	movf	___wmul@multiplier& (0+255),w,b
  5300  005252  0100               	movlb	0	; () banked
  5301  005254  0395               	mulwf	___wmul@multiplicand& (0+255),b
  5302  005256  CFF3 F097          	movff	prodl,___wmul@product
  5303  00525A  CFF4 F098          	movff	prodh,___wmul@product+1
  5304  00525E  0100               	movlb	0	; () banked
  5305  005260  5193               	movf	___wmul@multiplier& (0+255),w,b
  5306  005262  0100               	movlb	0	; () banked
  5307  005264  0396               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5308  005266  50F3               	movf	prodl,w,c
  5309  005268  0100               	movlb	0	; () banked
  5310  00526A  2798               	addwf	(___wmul@product+1)& (0+255),f,b
  5311  00526C  0100               	movlb	0	; () banked
  5312  00526E  5194               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5313  005270  0100               	movlb	0	; () banked
  5314  005272  0395               	mulwf	___wmul@multiplicand& (0+255),b
  5315  005274  50F3               	movf	prodl,w,c
  5316  005276  0100               	movlb	0	; () banked
  5317  005278  2798               	addwf	(___wmul@product+1)& (0+255),f,b
  5318                           
  5319                           ; BSR set to: 0
  5320  00527A  C097  F093         	movff	___wmul@product,?___wmul
  5321  00527E  C098  F094         	movff	___wmul@product+1,?___wmul+1
  5322  005282  0012               	return	
  5323  005284                     __end_of___wmul:
  5324                           	opt stack 0
  5325                           tosu	equ	0xFFF
  5326                           tosh	equ	0xFFE
  5327                           tosl	equ	0xFFD
  5328                           pclath	equ	0xFFA
  5329                           tblptru	equ	0xFF8
  5330                           tblptrh	equ	0xFF7
  5331                           tblptrl	equ	0xFF6
  5332                           tablat	equ	0xFF5
  5333                           prodh	equ	0xFF4
  5334                           prodl	equ	0xFF3
  5335                           intcon	equ	0xFF2
  5336                           postinc0	equ	0xFEE
  5337                           wreg	equ	0xFE8
  5338                           indf2	equ	0xFDF
  5339                           postinc2	equ	0xFDE
  5340                           postdec2	equ	0xFDD
  5341                           fsr2h	equ	0xFDA
  5342                           fsr2l	equ	0xFD9
  5343                           status	equ	0xFD8
  5344                           
  5345 ;; *************** function ___ftmul *****************
  5346 ;; Defined at:
  5347 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;  f1              3   57[BANK0 ] float 
  5350 ;;  f2              3   60[BANK0 ] float 
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;  f3_as_produc    3   67[BANK0 ] unsigned um
  5353 ;;  sign            1   71[BANK0 ] unsigned char 
  5354 ;;  cntr            1   70[BANK0 ] unsigned char 
  5355 ;;  exp             1   66[BANK0 ] unsigned char 
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  3   57[BANK0 ] float 
  5358 ;; Registers used:
  5359 ;;		wreg, status,2, status,0, cstack
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5365 ;;      Params:         0       6       0       0       0       0       0
  5366 ;;      Locals:         0       6       0       0       0       0       0
  5367 ;;      Temps:          0       3       0       0       0       0       0
  5368 ;;      Totals:         0      15       0       0       0       0       0
  5369 ;;Total ram usage:       15 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; Hardware stack levels required when called:    8
  5372 ;; This function calls:
  5373 ;;		___ftpack
  5374 ;; This function is called by:
  5375 ;;		_fround
  5376 ;;		_scale
  5377 ;;		__doprnt
  5378 ;; This function uses a non-reentrant model
  5379 ;;
  5380                           
  5381                           	psect	text9
  5382  003E28                     __ptext9:
  5383                           	opt stack 0
  5384  003E28                     ___ftmul:
  5385                           	opt stack 19
  5386                           
  5387                           ; BSR set to: 0
  5388                           ;incstack = 0
  5389  003E28  C09B  F09F         	movff	___ftmul@f1+2,??___ftmul
  5390  003E2C  0100               	movlb	0	; () banked
  5391  003E2E  6BA0               	clrf	(??___ftmul+1)& (0+255),b
  5392  003E30  6BA1               	clrf	(??___ftmul+2)& (0+255),b
  5393  003E32  0100               	movlb	0	; () banked
  5394  003E34  359A               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  5395  003E36  0100               	movlb	0	; () banked
  5396  003E38  379F               	rlcf	??___ftmul& (0+255),f,b
  5397  003E3A  E301               	bnc	u4661
  5398  003E3C  81A0               	bsf	(??___ftmul+1)& (0+255),0,b
  5399  003E3E                     u4661:
  5400  003E3E  0100               	movlb	0	; () banked
  5401  003E40  519F               	movf	??___ftmul& (0+255),w,b
  5402  003E42  0100               	movlb	0	; () banked
  5403  003E44  6FA2               	movwf	___ftmul@exp& (0+255),b
  5404  003E46  0100               	movlb	0	; () banked
  5405  003E48  51A2               	movf	___ftmul@exp& (0+255),w,b
  5406  003E4A  A4D8               	btfss	status,2,c
  5407  003E4C  D00A               	goto	l3802
  5408                           
  5409                           ; BSR set to: 0
  5410  003E4E  0E00               	movlw	0
  5411  003E50  0100               	movlb	0	; () banked
  5412  003E52  6F99               	movwf	?___ftmul& (0+255),b
  5413  003E54  0E00               	movlw	0
  5414  003E56  0100               	movlb	0	; () banked
  5415  003E58  6F9A               	movwf	(?___ftmul+1)& (0+255),b
  5416  003E5A  0E00               	movlw	0
  5417  003E5C  0100               	movlb	0	; () banked
  5418  003E5E  6F9B               	movwf	(?___ftmul+2)& (0+255),b
  5419                           
  5420                           ; BSR set to: 0
  5421  003E60  0012               	return	
  5422  003E62                     l3802:
  5423                           
  5424                           ; BSR set to: 0
  5425  003E62  C09E  F09F         	movff	___ftmul@f2+2,??___ftmul
  5426  003E66  0100               	movlb	0	; () banked
  5427  003E68  6BA0               	clrf	(??___ftmul+1)& (0+255),b
  5428  003E6A  6BA1               	clrf	(??___ftmul+2)& (0+255),b
  5429  003E6C  0100               	movlb	0	; () banked
  5430  003E6E  359D               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  5431  003E70  0100               	movlb	0	; () banked
  5432  003E72  379F               	rlcf	??___ftmul& (0+255),f,b
  5433  003E74  E301               	bnc	u4681
  5434  003E76  81A0               	bsf	(??___ftmul+1)& (0+255),0,b
  5435  003E78                     u4681:
  5436  003E78  0100               	movlb	0	; () banked
  5437  003E7A  519F               	movf	??___ftmul& (0+255),w,b
  5438  003E7C  0100               	movlb	0	; () banked
  5439  003E7E  6FA7               	movwf	___ftmul@sign& (0+255),b
  5440  003E80  0100               	movlb	0	; () banked
  5441  003E82  51A7               	movf	___ftmul@sign& (0+255),w,b
  5442  003E84  A4D8               	btfss	status,2,c
  5443  003E86  D00A               	goto	l3808
  5444                           
  5445                           ; BSR set to: 0
  5446  003E88  0E00               	movlw	0
  5447  003E8A  0100               	movlb	0	; () banked
  5448  003E8C  6F99               	movwf	?___ftmul& (0+255),b
  5449  003E8E  0E00               	movlw	0
  5450  003E90  0100               	movlb	0	; () banked
  5451  003E92  6F9A               	movwf	(?___ftmul+1)& (0+255),b
  5452  003E94  0E00               	movlw	0
  5453  003E96  0100               	movlb	0	; () banked
  5454  003E98  6F9B               	movwf	(?___ftmul+2)& (0+255),b
  5455                           
  5456                           ; BSR set to: 0
  5457  003E9A  0012               	return	
  5458  003E9C                     l3808:
  5459                           
  5460                           ; BSR set to: 0
  5461  003E9C  0100               	movlb	0	; () banked
  5462  003E9E  51A7               	movf	___ftmul@sign& (0+255),w,b
  5463  003EA0  0F7B               	addlw	123
  5464  003EA2  0100               	movlb	0	; () banked
  5465  003EA4  27A2               	addwf	___ftmul@exp& (0+255),f,b
  5466                           
  5467                           ; BSR set to: 0
  5468  003EA6  C09B  F0A7         	movff	___ftmul@f1+2,___ftmul@sign
  5469  003EAA  0100               	movlb	0	; () banked
  5470  003EAC  519E               	movf	(___ftmul@f2+2)& (0+255),w,b
  5471  003EAE  0100               	movlb	0	; () banked
  5472  003EB0  1BA7               	xorwf	___ftmul@sign& (0+255),f,b
  5473  003EB2  0E80               	movlw	128
  5474  003EB4  0100               	movlb	0	; () banked
  5475  003EB6  17A7               	andwf	___ftmul@sign& (0+255),f,b
  5476                           
  5477                           ; BSR set to: 0
  5478  003EB8  0100               	movlb	0	; () banked
  5479  003EBA  8F9A               	bsf	(___ftmul@f1+1)& (0+255),7,b
  5480                           
  5481                           ; BSR set to: 0
  5482  003EBC  0100               	movlb	0	; () banked
  5483  003EBE  8F9D               	bsf	(___ftmul@f2+1)& (0+255),7,b
  5484                           
  5485                           ; BSR set to: 0
  5486  003EC0  0EFF               	movlw	255
  5487  003EC2  0100               	movlb	0	; () banked
  5488  003EC4  179C               	andwf	___ftmul@f2& (0+255),f,b
  5489  003EC6  0EFF               	movlw	255
  5490  003EC8  0100               	movlb	0	; () banked
  5491  003ECA  179D               	andwf	(___ftmul@f2+1)& (0+255),f,b
  5492  003ECC  0E00               	movlw	0
  5493  003ECE  0100               	movlb	0	; () banked
  5494  003ED0  179E               	andwf	(___ftmul@f2+2)& (0+255),f,b
  5495                           
  5496                           ; BSR set to: 0
  5497  003ED2  0E00               	movlw	0
  5498  003ED4  0100               	movlb	0	; () banked
  5499  003ED6  6FA3               	movwf	___ftmul@f3_as_product& (0+255),b
  5500  003ED8  0E00               	movlw	0
  5501  003EDA  0100               	movlb	0	; () banked
  5502  003EDC  6FA4               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  5503  003EDE  0E00               	movlw	0
  5504  003EE0  0100               	movlb	0	; () banked
  5505  003EE2  6FA5               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  5506                           
  5507                           ; BSR set to: 0
  5508  003EE4  0E07               	movlw	7
  5509  003EE6  0100               	movlb	0	; () banked
  5510  003EE8  6FA6               	movwf	___ftmul@cntr& (0+255),b
  5511  003EEA                     l3822:
  5512                           
  5513                           ; BSR set to: 0
  5514  003EEA  0100               	movlb	0	; () banked
  5515  003EEC  A199               	btfss	___ftmul@f1& (0+255),0,b
  5516  003EEE  D00C               	goto	l3826
  5517                           
  5518                           ; BSR set to: 0
  5519  003EF0  0100               	movlb	0	; () banked
  5520  003EF2  519C               	movf	___ftmul@f2& (0+255),w,b
  5521  003EF4  0100               	movlb	0	; () banked
  5522  003EF6  27A3               	addwf	___ftmul@f3_as_product& (0+255),f,b
  5523  003EF8  0100               	movlb	0	; () banked
  5524  003EFA  519D               	movf	(___ftmul@f2+1)& (0+255),w,b
  5525  003EFC  0100               	movlb	0	; () banked
  5526  003EFE  23A4               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  5527  003F00  0100               	movlb	0	; () banked
  5528  003F02  519E               	movf	(___ftmul@f2+2)& (0+255),w,b
  5529  003F04  0100               	movlb	0	; () banked
  5530  003F06  23A5               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  5531  003F08                     l3826:
  5532                           
  5533                           ; BSR set to: 0
  5534  003F08  0100               	movlb	0	; () banked
  5535  003F0A  90D8               	bcf	status,0,c
  5536  003F0C  339B               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  5537  003F0E  339A               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  5538  003F10  3399               	rrcf	___ftmul@f1& (0+255),f,b
  5539  003F12  0100               	movlb	0	; () banked
  5540  003F14  90D8               	bcf	status,0,c
  5541  003F16  379C               	rlcf	___ftmul@f2& (0+255),f,b
  5542  003F18  379D               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  5543  003F1A  379E               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  5544                           
  5545                           ; BSR set to: 0
  5546  003F1C  0100               	movlb	0	; () banked
  5547  003F1E  2FA6               	decfsz	___ftmul@cntr& (0+255),f,b
  5548  003F20  D7E4               	goto	l3822
  5549                           
  5550                           ; BSR set to: 0
  5551                           
  5552                           ; BSR set to: 0
  5553  003F22  0E09               	movlw	9
  5554  003F24  0100               	movlb	0	; () banked
  5555  003F26  6FA6               	movwf	___ftmul@cntr& (0+255),b
  5556  003F28                     l3832:
  5557                           
  5558                           ; BSR set to: 0
  5559  003F28  0100               	movlb	0	; () banked
  5560  003F2A  A199               	btfss	___ftmul@f1& (0+255),0,b
  5561  003F2C  D00C               	goto	l3836
  5562                           
  5563                           ; BSR set to: 0
  5564  003F2E  0100               	movlb	0	; () banked
  5565  003F30  519C               	movf	___ftmul@f2& (0+255),w,b
  5566  003F32  0100               	movlb	0	; () banked
  5567  003F34  27A3               	addwf	___ftmul@f3_as_product& (0+255),f,b
  5568  003F36  0100               	movlb	0	; () banked
  5569  003F38  519D               	movf	(___ftmul@f2+1)& (0+255),w,b
  5570  003F3A  0100               	movlb	0	; () banked
  5571  003F3C  23A4               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  5572  003F3E  0100               	movlb	0	; () banked
  5573  003F40  519E               	movf	(___ftmul@f2+2)& (0+255),w,b
  5574  003F42  0100               	movlb	0	; () banked
  5575  003F44  23A5               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  5576  003F46                     l3836:
  5577                           
  5578                           ; BSR set to: 0
  5579  003F46  0100               	movlb	0	; () banked
  5580  003F48  90D8               	bcf	status,0,c
  5581  003F4A  339B               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  5582  003F4C  339A               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  5583  003F4E  3399               	rrcf	___ftmul@f1& (0+255),f,b
  5584  003F50  0100               	movlb	0	; () banked
  5585  003F52  90D8               	bcf	status,0,c
  5586  003F54  33A5               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  5587  003F56  33A4               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  5588  003F58  33A3               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  5589                           
  5590                           ; BSR set to: 0
  5591  003F5A  0100               	movlb	0	; () banked
  5592  003F5C  2FA6               	decfsz	___ftmul@cntr& (0+255),f,b
  5593  003F5E  D7E4               	goto	l3832
  5594                           
  5595                           ; BSR set to: 0
  5596                           
  5597                           ; BSR set to: 0
  5598  003F60  C0A3  F085         	movff	___ftmul@f3_as_product,___ftpack@arg
  5599  003F64  C0A4  F086         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5600  003F68  C0A5  F087         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5601  003F6C  C0A2  F088         	movff	___ftmul@exp,___ftpack@exp
  5602  003F70  C0A7  F089         	movff	___ftmul@sign,___ftpack@sign
  5603  003F74  EC92  F021         	call	___ftpack	;wreg free
  5604  003F78  C085  F099         	movff	?___ftpack,?___ftmul
  5605  003F7C  C086  F09A         	movff	?___ftpack+1,?___ftmul+1
  5606  003F80  C087  F09B         	movff	?___ftpack+2,?___ftmul+2
  5607  003F84  0012               	return	
  5608  003F86                     __end_of___ftmul:
  5609                           	opt stack 0
  5610                           tosu	equ	0xFFF
  5611                           tosh	equ	0xFFE
  5612                           tosl	equ	0xFFD
  5613                           pclath	equ	0xFFA
  5614                           tblptru	equ	0xFF8
  5615                           tblptrh	equ	0xFF7
  5616                           tblptrl	equ	0xFF6
  5617                           tablat	equ	0xFF5
  5618                           prodh	equ	0xFF4
  5619                           prodl	equ	0xFF3
  5620                           intcon	equ	0xFF2
  5621                           postinc0	equ	0xFEE
  5622                           wreg	equ	0xFE8
  5623                           indf2	equ	0xFDF
  5624                           postinc2	equ	0xFDE
  5625                           postdec2	equ	0xFDD
  5626                           fsr2h	equ	0xFDA
  5627                           fsr2l	equ	0xFD9
  5628                           status	equ	0xFD8
  5629                           
  5630 ;; *************** function ___awmod *****************
  5631 ;; Defined at:
  5632 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  5633 ;; Parameters:    Size  Location     Type
  5634 ;;  dividend        2   37[BANK0 ] int 
  5635 ;;  divisor         2   39[BANK0 ] int 
  5636 ;; Auto vars:     Size  Location     Type
  5637 ;;  sign            1   42[BANK0 ] unsigned char 
  5638 ;;  counter         1   41[BANK0 ] unsigned char 
  5639 ;; Return value:  Size  Location     Type
  5640 ;;                  2   37[BANK0 ] int 
  5641 ;; Registers used:
  5642 ;;		wreg, status,2, status,0
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5648 ;;      Params:         0       4       0       0       0       0       0
  5649 ;;      Locals:         0       2       0       0       0       0       0
  5650 ;;      Temps:          0       0       0       0       0       0       0
  5651 ;;      Totals:         0       6       0       0       0       0       0
  5652 ;;Total ram usage:        6 bytes
  5653 ;; Hardware stack levels used:    1
  5654 ;; Hardware stack levels required when called:    7
  5655 ;; This function calls:
  5656 ;;		Nothing
  5657 ;; This function is called by:
  5658 ;;		_fround
  5659 ;;		_scale
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           	psect	text10
  5664  004A96                     __ptext10:
  5665                           	opt stack 0
  5666  004A96                     ___awmod:
  5667                           	opt stack 20
  5668                           
  5669                           ;incstack = 0
  5670  004A96  0E00               	movlw	0
  5671  004A98  0100               	movlb	0	; () banked
  5672  004A9A  6F8A               	movwf	___awmod@sign& (0+255),b
  5673                           
  5674                           ; BSR set to: 0
  5675  004A9C  0100               	movlb	0	; () banked
  5676  004A9E  AF86               	btfss	(___awmod@dividend+1)& (0+255),7,b
  5677  004AA0  D008               	goto	l3896
  5678                           
  5679                           ; BSR set to: 0
  5680  004AA2  0100               	movlb	0	; () banked
  5681  004AA4  6D85               	negf	___awmod@dividend& (0+255),b
  5682  004AA6  1F86               	comf	(___awmod@dividend+1)& (0+255),f,b
  5683  004AA8  B0D8               	btfsc	status,0,c
  5684  004AAA  2B86               	incf	(___awmod@dividend+1)& (0+255),f,b
  5685                           
  5686                           ; BSR set to: 0
  5687  004AAC  0E01               	movlw	1
  5688  004AAE  0100               	movlb	0	; () banked
  5689  004AB0  6F8A               	movwf	___awmod@sign& (0+255),b
  5690  004AB2                     l3896:
  5691                           
  5692                           ; BSR set to: 0
  5693  004AB2  0100               	movlb	0	; () banked
  5694  004AB4  AF88               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5695  004AB6  D005               	goto	l3900
  5696                           
  5697                           ; BSR set to: 0
  5698  004AB8  0100               	movlb	0	; () banked
  5699  004ABA  6D87               	negf	___awmod@divisor& (0+255),b
  5700  004ABC  1F88               	comf	(___awmod@divisor+1)& (0+255),f,b
  5701  004ABE  B0D8               	btfsc	status,0,c
  5702  004AC0  2B88               	incf	(___awmod@divisor+1)& (0+255),f,b
  5703  004AC2                     l3900:
  5704                           
  5705                           ; BSR set to: 0
  5706  004AC2  0100               	movlb	0	; () banked
  5707  004AC4  5187               	movf	___awmod@divisor& (0+255),w,b
  5708  004AC6  0100               	movlb	0	; () banked
  5709  004AC8  1188               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  5710  004ACA  B4D8               	btfsc	status,2,c
  5711  004ACC  D026               	goto	l3916
  5712                           
  5713                           ; BSR set to: 0
  5714  004ACE  0E01               	movlw	1
  5715  004AD0  0100               	movlb	0	; () banked
  5716  004AD2  6F89               	movwf	___awmod@counter& (0+255),b
  5717  004AD4  D006               	goto	l3906
  5718  004AD6                     l3904:
  5719                           
  5720                           ; BSR set to: 0
  5721  004AD6  0100               	movlb	0	; () banked
  5722  004AD8  90D8               	bcf	status,0,c
  5723  004ADA  3787               	rlcf	___awmod@divisor& (0+255),f,b
  5724  004ADC  3788               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  5725  004ADE  0100               	movlb	0	; () banked
  5726  004AE0  2B89               	incf	___awmod@counter& (0+255),f,b
  5727  004AE2                     l3906:
  5728                           
  5729                           ; BSR set to: 0
  5730  004AE2  0100               	movlb	0	; () banked
  5731  004AE4  AF88               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5732  004AE6  D7F7               	goto	l3904
  5733  004AE8                     l3908:
  5734                           
  5735                           ; BSR set to: 0
  5736  004AE8  0100               	movlb	0	; () banked
  5737  004AEA  5187               	movf	___awmod@divisor& (0+255),w,b
  5738  004AEC  0100               	movlb	0	; () banked
  5739  004AEE  5D85               	subwf	___awmod@dividend& (0+255),w,b
  5740  004AF0  0100               	movlb	0	; () banked
  5741  004AF2  5188               	movf	(___awmod@divisor+1)& (0+255),w,b
  5742  004AF4  0100               	movlb	0	; () banked
  5743  004AF6  5986               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  5744  004AF8  A0D8               	btfss	status,0,c
  5745  004AFA  D008               	goto	l3912
  5746                           
  5747                           ; BSR set to: 0
  5748  004AFC  0100               	movlb	0	; () banked
  5749  004AFE  5187               	movf	___awmod@divisor& (0+255),w,b
  5750  004B00  0100               	movlb	0	; () banked
  5751  004B02  5F85               	subwf	___awmod@dividend& (0+255),f,b
  5752  004B04  0100               	movlb	0	; () banked
  5753  004B06  5188               	movf	(___awmod@divisor+1)& (0+255),w,b
  5754  004B08  0100               	movlb	0	; () banked
  5755  004B0A  5B86               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  5756  004B0C                     l3912:
  5757                           
  5758                           ; BSR set to: 0
  5759  004B0C  0100               	movlb	0	; () banked
  5760  004B0E  90D8               	bcf	status,0,c
  5761  004B10  3388               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  5762  004B12  3387               	rrcf	___awmod@divisor& (0+255),f,b
  5763                           
  5764                           ; BSR set to: 0
  5765  004B14  0100               	movlb	0	; () banked
  5766  004B16  2F89               	decfsz	___awmod@counter& (0+255),f,b
  5767  004B18  D7E7               	goto	l3908
  5768  004B1A                     l3916:
  5769                           
  5770                           ; BSR set to: 0
  5771  004B1A  0100               	movlb	0	; () banked
  5772  004B1C  518A               	movf	___awmod@sign& (0+255),w,b
  5773  004B1E  0100               	movlb	0	; () banked
  5774  004B20  B4D8               	btfsc	status,2,c
  5775  004B22  D005               	goto	l3920
  5776                           
  5777                           ; BSR set to: 0
  5778  004B24  0100               	movlb	0	; () banked
  5779  004B26  6D85               	negf	___awmod@dividend& (0+255),b
  5780  004B28  1F86               	comf	(___awmod@dividend+1)& (0+255),f,b
  5781  004B2A  B0D8               	btfsc	status,0,c
  5782  004B2C  2B86               	incf	(___awmod@dividend+1)& (0+255),f,b
  5783  004B2E                     l3920:
  5784                           
  5785                           ; BSR set to: 0
  5786  004B2E  C085  F085         	movff	___awmod@dividend,?___awmod
  5787  004B32  C086  F086         	movff	___awmod@dividend+1,?___awmod+1
  5788  004B36  0012               	return	
  5789  004B38                     __end_of___awmod:
  5790                           	opt stack 0
  5791                           tosu	equ	0xFFF
  5792                           tosh	equ	0xFFE
  5793                           tosl	equ	0xFFD
  5794                           pclath	equ	0xFFA
  5795                           tblptru	equ	0xFF8
  5796                           tblptrh	equ	0xFF7
  5797                           tblptrl	equ	0xFF6
  5798                           tablat	equ	0xFF5
  5799                           prodh	equ	0xFF4
  5800                           prodl	equ	0xFF3
  5801                           intcon	equ	0xFF2
  5802                           postinc0	equ	0xFEE
  5803                           wreg	equ	0xFE8
  5804                           indf2	equ	0xFDF
  5805                           postinc2	equ	0xFDE
  5806                           postdec2	equ	0xFDD
  5807                           fsr2h	equ	0xFDA
  5808                           fsr2l	equ	0xFD9
  5809                           status	equ	0xFD8
  5810                           
  5811 ;; *************** function ___awdiv *****************
  5812 ;; Defined at:
  5813 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  5814 ;; Parameters:    Size  Location     Type
  5815 ;;  dividend        2   43[BANK0 ] int 
  5816 ;;  divisor         2   45[BANK0 ] int 
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;  quotient        2   49[BANK0 ] int 
  5819 ;;  sign            1   48[BANK0 ] unsigned char 
  5820 ;;  counter         1   47[BANK0 ] unsigned char 
  5821 ;; Return value:  Size  Location     Type
  5822 ;;                  2   43[BANK0 ] int 
  5823 ;; Registers used:
  5824 ;;		wreg, status,2, status,0
  5825 ;; Tracked objects:
  5826 ;;		On entry : 0/0
  5827 ;;		On exit  : 0/0
  5828 ;;		Unchanged: 0/0
  5829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5830 ;;      Params:         0       4       0       0       0       0       0
  5831 ;;      Locals:         0       4       0       0       0       0       0
  5832 ;;      Temps:          0       0       0       0       0       0       0
  5833 ;;      Totals:         0       8       0       0       0       0       0
  5834 ;;Total ram usage:        8 bytes
  5835 ;; Hardware stack levels used:    1
  5836 ;; Hardware stack levels required when called:    7
  5837 ;; This function calls:
  5838 ;;		Nothing
  5839 ;; This function is called by:
  5840 ;;		_fround
  5841 ;;		_scale
  5842 ;;		__doprnt
  5843 ;; This function uses a non-reentrant model
  5844 ;;
  5845                           
  5846                           	psect	text11
  5847  0047C6                     __ptext11:
  5848                           	opt stack 0
  5849  0047C6                     ___awdiv:
  5850                           	opt stack 20
  5851                           
  5852                           ; BSR set to: 0
  5853                           ;incstack = 0
  5854  0047C6  0E00               	movlw	0
  5855  0047C8  0100               	movlb	0	; () banked
  5856  0047CA  6F90               	movwf	___awdiv@sign& (0+255),b
  5857                           
  5858                           ; BSR set to: 0
  5859  0047CC  0100               	movlb	0	; () banked
  5860  0047CE  AF8E               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5861  0047D0  D008               	goto	l3852
  5862                           
  5863                           ; BSR set to: 0
  5864  0047D2  0100               	movlb	0	; () banked
  5865  0047D4  6D8D               	negf	___awdiv@divisor& (0+255),b
  5866  0047D6  1F8E               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5867  0047D8  B0D8               	btfsc	status,0,c
  5868  0047DA  2B8E               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5869                           
  5870                           ; BSR set to: 0
  5871  0047DC  0E01               	movlw	1
  5872  0047DE  0100               	movlb	0	; () banked
  5873  0047E0  6F90               	movwf	___awdiv@sign& (0+255),b
  5874  0047E2                     l3852:
  5875                           
  5876                           ; BSR set to: 0
  5877  0047E2  0100               	movlb	0	; () banked
  5878  0047E4  AF8C               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  5879  0047E6  D008               	goto	l3858
  5880                           
  5881                           ; BSR set to: 0
  5882  0047E8  0100               	movlb	0	; () banked
  5883  0047EA  6D8B               	negf	___awdiv@dividend& (0+255),b
  5884  0047EC  1F8C               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5885  0047EE  B0D8               	btfsc	status,0,c
  5886  0047F0  2B8C               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5887                           
  5888                           ; BSR set to: 0
  5889  0047F2  0E01               	movlw	1
  5890  0047F4  0100               	movlb	0	; () banked
  5891  0047F6  1B90               	xorwf	___awdiv@sign& (0+255),f,b
  5892  0047F8                     l3858:
  5893                           
  5894                           ; BSR set to: 0
  5895  0047F8  0E00               	movlw	0
  5896  0047FA  0100               	movlb	0	; () banked
  5897  0047FC  6F92               	movwf	(___awdiv@quotient+1)& (0+255),b
  5898  0047FE  0E00               	movlw	0
  5899  004800  6F91               	movwf	___awdiv@quotient& (0+255),b
  5900                           
  5901                           ; BSR set to: 0
  5902  004802  0100               	movlb	0	; () banked
  5903  004804  518D               	movf	___awdiv@divisor& (0+255),w,b
  5904  004806  0100               	movlb	0	; () banked
  5905  004808  118E               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5906  00480A  B4D8               	btfsc	status,2,c
  5907  00480C  D02C               	goto	l3880
  5908                           
  5909                           ; BSR set to: 0
  5910  00480E  0E01               	movlw	1
  5911  004810  0100               	movlb	0	; () banked
  5912  004812  6F8F               	movwf	___awdiv@counter& (0+255),b
  5913  004814  D006               	goto	l3866
  5914  004816                     l3864:
  5915                           
  5916                           ; BSR set to: 0
  5917  004816  0100               	movlb	0	; () banked
  5918  004818  90D8               	bcf	status,0,c
  5919  00481A  378D               	rlcf	___awdiv@divisor& (0+255),f,b
  5920  00481C  378E               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5921  00481E  0100               	movlb	0	; () banked
  5922  004820  2B8F               	incf	___awdiv@counter& (0+255),f,b
  5923  004822                     l3866:
  5924                           
  5925                           ; BSR set to: 0
  5926  004822  0100               	movlb	0	; () banked
  5927  004824  AF8E               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5928  004826  D7F7               	goto	l3864
  5929  004828                     l3868:
  5930                           
  5931                           ; BSR set to: 0
  5932  004828  0100               	movlb	0	; () banked
  5933  00482A  90D8               	bcf	status,0,c
  5934  00482C  3791               	rlcf	___awdiv@quotient& (0+255),f,b
  5935  00482E  3792               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5936                           
  5937                           ; BSR set to: 0
  5938  004830  0100               	movlb	0	; () banked
  5939  004832  518D               	movf	___awdiv@divisor& (0+255),w,b
  5940  004834  0100               	movlb	0	; () banked
  5941  004836  5D8B               	subwf	___awdiv@dividend& (0+255),w,b
  5942  004838  0100               	movlb	0	; () banked
  5943  00483A  518E               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5944  00483C  0100               	movlb	0	; () banked
  5945  00483E  598C               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5946  004840  A0D8               	btfss	status,0,c
  5947  004842  D00A               	goto	l3876
  5948                           
  5949                           ; BSR set to: 0
  5950  004844  0100               	movlb	0	; () banked
  5951  004846  518D               	movf	___awdiv@divisor& (0+255),w,b
  5952  004848  0100               	movlb	0	; () banked
  5953  00484A  5F8B               	subwf	___awdiv@dividend& (0+255),f,b
  5954  00484C  0100               	movlb	0	; () banked
  5955  00484E  518E               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5956  004850  0100               	movlb	0	; () banked
  5957  004852  5B8C               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5958                           
  5959                           ; BSR set to: 0
  5960  004854  0100               	movlb	0	; () banked
  5961  004856  8191               	bsf	___awdiv@quotient& (0+255),0,b
  5962  004858                     l3876:
  5963                           
  5964                           ; BSR set to: 0
  5965  004858  0100               	movlb	0	; () banked
  5966  00485A  90D8               	bcf	status,0,c
  5967  00485C  338E               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5968  00485E  338D               	rrcf	___awdiv@divisor& (0+255),f,b
  5969                           
  5970                           ; BSR set to: 0
  5971  004860  0100               	movlb	0	; () banked
  5972  004862  2F8F               	decfsz	___awdiv@counter& (0+255),f,b
  5973  004864  D7E1               	goto	l3868
  5974  004866                     l3880:
  5975                           
  5976                           ; BSR set to: 0
  5977  004866  0100               	movlb	0	; () banked
  5978  004868  5190               	movf	___awdiv@sign& (0+255),w,b
  5979  00486A  0100               	movlb	0	; () banked
  5980  00486C  B4D8               	btfsc	status,2,c
  5981  00486E  D005               	goto	l3884
  5982                           
  5983                           ; BSR set to: 0
  5984  004870  0100               	movlb	0	; () banked
  5985  004872  6D91               	negf	___awdiv@quotient& (0+255),b
  5986  004874  1F92               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5987  004876  B0D8               	btfsc	status,0,c
  5988  004878  2B92               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5989  00487A                     l3884:
  5990                           
  5991                           ; BSR set to: 0
  5992  00487A  C091  F08B         	movff	___awdiv@quotient,?___awdiv
  5993  00487E  C092  F08C         	movff	___awdiv@quotient+1,?___awdiv+1
  5994  004882  0012               	return	
  5995  004884                     __end_of___awdiv:
  5996                           	opt stack 0
  5997                           tosu	equ	0xFFF
  5998                           tosh	equ	0xFFE
  5999                           tosl	equ	0xFFD
  6000                           pclath	equ	0xFFA
  6001                           tblptru	equ	0xFF8
  6002                           tblptrh	equ	0xFF7
  6003                           tblptrl	equ	0xFF6
  6004                           tablat	equ	0xFF5
  6005                           prodh	equ	0xFF4
  6006                           prodl	equ	0xFF3
  6007                           intcon	equ	0xFF2
  6008                           postinc0	equ	0xFEE
  6009                           wreg	equ	0xFE8
  6010                           indf2	equ	0xFDF
  6011                           postinc2	equ	0xFDE
  6012                           postdec2	equ	0xFDD
  6013                           fsr2h	equ	0xFDA
  6014                           fsr2l	equ	0xFD9
  6015                           status	equ	0xFD8
  6016                           
  6017 ;; *************** function __tdiv_to_l_ *****************
  6018 ;; Defined at:
  6019 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdivl.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;  f1              3   37[BANK0 ] float 
  6022 ;;  f2              3   40[BANK0 ] float 
  6023 ;; Auto vars:     Size  Location     Type
  6024 ;;  quot            4   46[BANK0 ] unsigned long 
  6025 ;;  exp1            1   51[BANK0 ] unsigned char 
  6026 ;;  cntr            1   50[BANK0 ] unsigned char 
  6027 ;; Return value:  Size  Location     Type
  6028 ;;                  4   37[BANK0 ] unsigned long 
  6029 ;; Registers used:
  6030 ;;		wreg, status,2, status,0
  6031 ;; Tracked objects:
  6032 ;;		On entry : 0/0
  6033 ;;		On exit  : 0/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6036 ;;      Params:         0       6       0       0       0       0       0
  6037 ;;      Locals:         0       6       0       0       0       0       0
  6038 ;;      Temps:          0       3       0       0       0       0       0
  6039 ;;      Totals:         0      15       0       0       0       0       0
  6040 ;;Total ram usage:       15 bytes
  6041 ;; Hardware stack levels used:    1
  6042 ;; Hardware stack levels required when called:    7
  6043 ;; This function calls:
  6044 ;;		Nothing
  6045 ;; This function is called by:
  6046 ;;		__doprnt
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050                           	psect	text12
  6051  003B02                     __ptext12:
  6052                           	opt stack 0
  6053  003B02                     __tdiv_to_l_:
  6054                           	opt stack 21
  6055                           
  6056                           ; BSR set to: 0
  6057                           ;incstack = 0
  6058  003B02  C087  F08B         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  6059  003B06  0100               	movlb	0	; () banked
  6060  003B08  6B8C               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  6061  003B0A  6B8D               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  6062  003B0C  0100               	movlb	0	; () banked
  6063  003B0E  3586               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6064  003B10  0100               	movlb	0	; () banked
  6065  003B12  378B               	rlcf	??__tdiv_to_l_& (0+255),f,b
  6066  003B14  E301               	bnc	u5381
  6067  003B16  818C               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  6068  003B18                     u5381:
  6069  003B18  0100               	movlb	0	; () banked
  6070  003B1A  518B               	movf	??__tdiv_to_l_& (0+255),w,b
  6071  003B1C  0100               	movlb	0	; () banked
  6072  003B1E  6F93               	movwf	__tdiv_to_l_@exp1& (0+255),b
  6073  003B20  0100               	movlb	0	; () banked
  6074  003B22  5193               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6075  003B24  A4D8               	btfss	status,2,c
  6076  003B26  D00A               	goto	l4354
  6077                           
  6078                           ; BSR set to: 0
  6079  003B28  0E00               	movlw	0
  6080  003B2A  0100               	movlb	0	; () banked
  6081  003B2C  6F85               	movwf	?__tdiv_to_l_& (0+255),b
  6082  003B2E  0E00               	movlw	0
  6083  003B30  6F86               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6084  003B32  0E00               	movlw	0
  6085  003B34  6F87               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6086  003B36  0E00               	movlw	0
  6087  003B38  6F88               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6088                           
  6089                           ; BSR set to: 0
  6090  003B3A  0012               	return	
  6091  003B3C                     l4354:
  6092                           
  6093                           ; BSR set to: 0
  6094  003B3C  C08A  F08B         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  6095  003B40  0100               	movlb	0	; () banked
  6096  003B42  6B8C               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  6097  003B44  6B8D               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  6098  003B46  0100               	movlb	0	; () banked
  6099  003B48  3589               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6100  003B4A  0100               	movlb	0	; () banked
  6101  003B4C  378B               	rlcf	??__tdiv_to_l_& (0+255),f,b
  6102  003B4E  E301               	bnc	u5401
  6103  003B50  818C               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  6104  003B52                     u5401:
  6105  003B52  0100               	movlb	0	; () banked
  6106  003B54  518B               	movf	??__tdiv_to_l_& (0+255),w,b
  6107  003B56  0100               	movlb	0	; () banked
  6108  003B58  6F92               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6109  003B5A  0100               	movlb	0	; () banked
  6110  003B5C  5192               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6111  003B5E  A4D8               	btfss	status,2,c
  6112  003B60  D00A               	goto	l4360
  6113                           
  6114                           ; BSR set to: 0
  6115  003B62  0E00               	movlw	0
  6116  003B64  0100               	movlb	0	; () banked
  6117  003B66  6F85               	movwf	?__tdiv_to_l_& (0+255),b
  6118  003B68  0E00               	movlw	0
  6119  003B6A  6F86               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6120  003B6C  0E00               	movlw	0
  6121  003B6E  6F87               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6122  003B70  0E00               	movlw	0
  6123  003B72  6F88               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6124                           
  6125                           ; BSR set to: 0
  6126  003B74  0012               	return	
  6127  003B76                     l4360:
  6128                           
  6129                           ; BSR set to: 0
  6130  003B76  0100               	movlb	0	; () banked
  6131  003B78  8F86               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  6132                           
  6133                           ; BSR set to: 0
  6134  003B7A  0EFF               	movlw	255
  6135  003B7C  0100               	movlb	0	; () banked
  6136  003B7E  1785               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  6137  003B80  0EFF               	movlw	255
  6138  003B82  0100               	movlb	0	; () banked
  6139  003B84  1786               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6140  003B86  0E00               	movlw	0
  6141  003B88  0100               	movlb	0	; () banked
  6142  003B8A  1787               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6143  003B8C  0100               	movlb	0	; () banked
  6144  003B8E  8F89               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  6145                           
  6146                           ; BSR set to: 0
  6147  003B90  0EFF               	movlw	255
  6148  003B92  0100               	movlb	0	; () banked
  6149  003B94  1788               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  6150  003B96  0EFF               	movlw	255
  6151  003B98  0100               	movlb	0	; () banked
  6152  003B9A  1789               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  6153  003B9C  0E00               	movlw	0
  6154  003B9E  0100               	movlb	0	; () banked
  6155  003BA0  178A               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  6156                           
  6157                           ; BSR set to: 0
  6158  003BA2  0E00               	movlw	0
  6159  003BA4  0100               	movlb	0	; () banked
  6160  003BA6  6F8E               	movwf	__tdiv_to_l_@quot& (0+255),b
  6161  003BA8  0E00               	movlw	0
  6162  003BAA  6F8F               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  6163  003BAC  0E00               	movlw	0
  6164  003BAE  6F90               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  6165  003BB0  0E00               	movlw	0
  6166  003BB2  6F91               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  6167                           
  6168                           ; BSR set to: 0
  6169  003BB4  0E7F               	movlw	127
  6170  003BB6  0100               	movlb	0	; () banked
  6171  003BB8  5F93               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6172                           
  6173                           ; BSR set to: 0
  6174  003BBA  0100               	movlb	0	; () banked
  6175  003BBC  5192               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6176  003BBE  0F98               	addlw	152
  6177  003BC0  0100               	movlb	0	; () banked
  6178  003BC2  5F93               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6179                           
  6180                           ; BSR set to: 0
  6181  003BC4  0E18               	movlw	24
  6182  003BC6  0100               	movlb	0	; () banked
  6183  003BC8  6F92               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6184  003BCA                     l764:
  6185                           
  6186                           ; BSR set to: 0
  6187  003BCA  0100               	movlb	0	; () banked
  6188  003BCC  90D8               	bcf	status,0,c
  6189  003BCE  378E               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6190  003BD0  378F               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6191  003BD2  3790               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6192  003BD4  3791               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6193                           
  6194                           ; BSR set to: 0
  6195  003BD6  0100               	movlb	0	; () banked
  6196  003BD8  5188               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6197  003BDA  0100               	movlb	0	; () banked
  6198  003BDC  5D85               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  6199  003BDE  0100               	movlb	0	; () banked
  6200  003BE0  5189               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6201  003BE2  0100               	movlb	0	; () banked
  6202  003BE4  5986               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6203  003BE6  0100               	movlb	0	; () banked
  6204  003BE8  518A               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6205  003BEA  0100               	movlb	0	; () banked
  6206  003BEC  5987               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  6207  003BEE  A0D8               	btfss	status,0,c
  6208  003BF0  D00E               	goto	l765
  6209                           
  6210                           ; BSR set to: 0
  6211  003BF2  0100               	movlb	0	; () banked
  6212  003BF4  5188               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6213  003BF6  0100               	movlb	0	; () banked
  6214  003BF8  5F85               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  6215  003BFA  0100               	movlb	0	; () banked
  6216  003BFC  5189               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6217  003BFE  0100               	movlb	0	; () banked
  6218  003C00  5B86               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6219  003C02  0100               	movlb	0	; () banked
  6220  003C04  518A               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6221  003C06  0100               	movlb	0	; () banked
  6222  003C08  5B87               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6223                           
  6224                           ; BSR set to: 0
  6225  003C0A  0100               	movlb	0	; () banked
  6226  003C0C  818E               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  6227  003C0E                     l765:
  6228                           
  6229                           ; BSR set to: 0
  6230  003C0E  0100               	movlb	0	; () banked
  6231  003C10  90D8               	bcf	status,0,c
  6232  003C12  3785               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  6233  003C14  3786               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6234  003C16  3787               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6235                           
  6236                           ; BSR set to: 0
  6237  003C18  0100               	movlb	0	; () banked
  6238  003C1A  2F92               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  6239  003C1C  D7D6               	goto	l764
  6240                           
  6241                           ; BSR set to: 0
  6242                           
  6243                           ; BSR set to: 0
  6244  003C1E  0100               	movlb	0	; () banked
  6245  003C20  AF93               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  6246  003C22  D01A               	goto	l4394
  6247                           
  6248                           ; BSR set to: 0
  6249  003C24  0100               	movlb	0	; () banked
  6250  003C26  5193               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6251  003C28  0A80               	xorlw	128
  6252  003C2A  0F97               	addlw	151
  6253  003C2C  B0D8               	btfsc	status,0,c
  6254  003C2E  D00A               	goto	l4390
  6255                           
  6256                           ; BSR set to: 0
  6257  003C30  0E00               	movlw	0
  6258  003C32  0100               	movlb	0	; () banked
  6259  003C34  6F85               	movwf	?__tdiv_to_l_& (0+255),b
  6260  003C36  0E00               	movlw	0
  6261  003C38  6F86               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6262  003C3A  0E00               	movlw	0
  6263  003C3C  6F87               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6264  003C3E  0E00               	movlw	0
  6265  003C40  6F88               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6266                           
  6267                           ; BSR set to: 0
  6268  003C42  0012               	return	
  6269  003C44                     l4390:
  6270                           
  6271                           ; BSR set to: 0
  6272  003C44  0100               	movlb	0	; () banked
  6273  003C46  90D8               	bcf	status,0,c
  6274  003C48  3391               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6275  003C4A  3390               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6276  003C4C  338F               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6277  003C4E  338E               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  6278                           
  6279                           ; BSR set to: 0
  6280  003C50  0100               	movlb	0	; () banked
  6281  003C52  3F93               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  6282  003C54  D7F7               	goto	l4390
  6283                           
  6284                           ; BSR set to: 0
  6285  003C56  D01B               	goto	l771
  6286  003C58                     l4394:
  6287                           
  6288                           ; BSR set to: 0
  6289  003C58  0E17               	movlw	23
  6290  003C5A  0100               	movlb	0	; () banked
  6291  003C5C  6593               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  6292  003C5E  D012               	goto	l4402
  6293                           
  6294                           ; BSR set to: 0
  6295  003C60  0E00               	movlw	0
  6296  003C62  0100               	movlb	0	; () banked
  6297  003C64  6F85               	movwf	?__tdiv_to_l_& (0+255),b
  6298  003C66  0E00               	movlw	0
  6299  003C68  6F86               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6300  003C6A  0E00               	movlw	0
  6301  003C6C  6F87               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6302  003C6E  0E00               	movlw	0
  6303  003C70  6F88               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6304                           
  6305                           ; BSR set to: 0
  6306  003C72  0012               	return	
  6307  003C74                     l4400:
  6308                           
  6309                           ; BSR set to: 0
  6310  003C74  0100               	movlb	0	; () banked
  6311  003C76  90D8               	bcf	status,0,c
  6312  003C78  378E               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6313  003C7A  378F               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6314  003C7C  3790               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6315  003C7E  3791               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6316  003C80  0100               	movlb	0	; () banked
  6317  003C82  0793               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  6318  003C84                     l4402:
  6319                           
  6320                           ; BSR set to: 0
  6321  003C84  0100               	movlb	0	; () banked
  6322  003C86  5193               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6323  003C88  0100               	movlb	0	; () banked
  6324  003C8A  A4D8               	btfss	status,2,c
  6325  003C8C  D7F3               	goto	l4400
  6326  003C8E                     l771:
  6327                           
  6328                           ; BSR set to: 0
  6329  003C8E  C08E  F085         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  6330  003C92  C08F  F086         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  6331  003C96  C090  F087         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  6332  003C9A  C091  F088         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  6333                           
  6334                           ; BSR set to: 0
  6335  003C9E  0012               	return		;funcret
  6336  003CA0                     __end_of__tdiv_to_l_:
  6337                           	opt stack 0
  6338                           tosu	equ	0xFFF
  6339                           tosh	equ	0xFFE
  6340                           tosl	equ	0xFFD
  6341                           pclath	equ	0xFFA
  6342                           tblptru	equ	0xFF8
  6343                           tblptrh	equ	0xFF7
  6344                           tblptrl	equ	0xFF6
  6345                           tablat	equ	0xFF5
  6346                           prodh	equ	0xFF4
  6347                           prodl	equ	0xFF3
  6348                           intcon	equ	0xFF2
  6349                           postinc0	equ	0xFEE
  6350                           wreg	equ	0xFE8
  6351                           indf2	equ	0xFDF
  6352                           postinc2	equ	0xFDE
  6353                           postdec2	equ	0xFDD
  6354                           fsr2h	equ	0xFDA
  6355                           fsr2l	equ	0xFD9
  6356                           status	equ	0xFD8
  6357                           
  6358 ;; *************** function __div_to_l_ *****************
  6359 ;; Defined at:
  6360 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fldivl.c"
  6361 ;; Parameters:    Size  Location     Type
  6362 ;;  f1              3   37[BANK0 ] unsigned long 
  6363 ;;  f2              3   40[BANK0 ] unsigned long 
  6364 ;; Auto vars:     Size  Location     Type
  6365 ;;  quot            4   43[BANK0 ] unsigned long 
  6366 ;;  exp1            1   48[BANK0 ] unsigned char 
  6367 ;;  cntr            1   47[BANK0 ] unsigned char 
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  4   37[BANK0 ] unsigned long 
  6370 ;; Registers used:
  6371 ;;		wreg, status,2, status,0
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6377 ;;      Params:         0       6       0       0       0       0       0
  6378 ;;      Locals:         0       6       0       0       0       0       0
  6379 ;;      Temps:          0       0       0       0       0       0       0
  6380 ;;      Totals:         0      12       0       0       0       0       0
  6381 ;;Total ram usage:       12 bytes
  6382 ;; Hardware stack levels used:    1
  6383 ;; Hardware stack levels required when called:    7
  6384 ;; This function calls:
  6385 ;;		Nothing
  6386 ;; This function is called by:
  6387 ;;		__doprnt
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391                           	psect	text13
  6392  003CA0                     __ptext13:
  6393                           	opt stack 0
  6394  003CA0                     __div_to_l_:
  6395                           	opt stack 21
  6396                           
  6397                           ; BSR set to: 0
  6398                           ;incstack = 0
  6399  003CA0  0100               	movlb	0	; () banked
  6400  003CA2  3587               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  6401  003CA4  3588               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  6402  003CA6  0100               	movlb	0	; () banked
  6403  003CA8  6F90               	movwf	__div_to_l_@exp1& (0+255),b
  6404  003CAA  0100               	movlb	0	; () banked
  6405  003CAC  5190               	movf	__div_to_l_@exp1& (0+255),w,b
  6406  003CAE  A4D8               	btfss	status,2,c
  6407  003CB0  D00A               	goto	l4410
  6408                           
  6409                           ; BSR set to: 0
  6410  003CB2  0E00               	movlw	0
  6411  003CB4  0100               	movlb	0	; () banked
  6412  003CB6  6F85               	movwf	?__div_to_l_& (0+255),b
  6413  003CB8  0E00               	movlw	0
  6414  003CBA  6F86               	movwf	(?__div_to_l_+1)& (0+255),b
  6415  003CBC  0E00               	movlw	0
  6416  003CBE  6F87               	movwf	(?__div_to_l_+2)& (0+255),b
  6417  003CC0  0E00               	movlw	0
  6418  003CC2  6F88               	movwf	(?__div_to_l_+3)& (0+255),b
  6419                           
  6420                           ; BSR set to: 0
  6421  003CC4  0012               	return	
  6422  003CC6                     l4410:
  6423                           
  6424                           ; BSR set to: 0
  6425  003CC6  0100               	movlb	0	; () banked
  6426  003CC8  358A               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  6427  003CCA  358B               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  6428  003CCC  0100               	movlb	0	; () banked
  6429  003CCE  6F8F               	movwf	__div_to_l_@cntr& (0+255),b
  6430  003CD0  0100               	movlb	0	; () banked
  6431  003CD2  518F               	movf	__div_to_l_@cntr& (0+255),w,b
  6432  003CD4  A4D8               	btfss	status,2,c
  6433  003CD6  D00A               	goto	l4416
  6434                           
  6435                           ; BSR set to: 0
  6436  003CD8  0E00               	movlw	0
  6437  003CDA  0100               	movlb	0	; () banked
  6438  003CDC  6F85               	movwf	?__div_to_l_& (0+255),b
  6439  003CDE  0E00               	movlw	0
  6440  003CE0  6F86               	movwf	(?__div_to_l_+1)& (0+255),b
  6441  003CE2  0E00               	movlw	0
  6442  003CE4  6F87               	movwf	(?__div_to_l_+2)& (0+255),b
  6443  003CE6  0E00               	movlw	0
  6444  003CE8  6F88               	movwf	(?__div_to_l_+3)& (0+255),b
  6445                           
  6446                           ; BSR set to: 0
  6447  003CEA  0012               	return	
  6448  003CEC                     l4416:
  6449                           
  6450                           ; BSR set to: 0
  6451  003CEC  0100               	movlb	0	; () banked
  6452  003CEE  8F87               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  6453                           
  6454                           ; BSR set to: 0
  6455  003CF0  0EFF               	movlw	255
  6456  003CF2  0100               	movlb	0	; () banked
  6457  003CF4  1785               	andwf	__div_to_l_@f1& (0+255),f,b
  6458  003CF6  0EFF               	movlw	255
  6459  003CF8  1786               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  6460  003CFA  0EFF               	movlw	255
  6461  003CFC  1787               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  6462  003CFE  0E00               	movlw	0
  6463  003D00  1788               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  6464                           
  6465                           ; BSR set to: 0
  6466  003D02  0100               	movlb	0	; () banked
  6467  003D04  8F8A               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  6468  003D06  0EFF               	movlw	255
  6469  003D08  0100               	movlb	0	; () banked
  6470  003D0A  1788               	andwf	__div_to_l_@f2& (0+255),f,b
  6471  003D0C  0EFF               	movlw	255
  6472  003D0E  1789               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  6473  003D10  0EFF               	movlw	255
  6474  003D12  178A               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  6475  003D14  0E00               	movlw	0
  6476  003D16  178B               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  6477                           
  6478                           ; BSR set to: 0
  6479  003D18  0E00               	movlw	0
  6480  003D1A  0100               	movlb	0	; () banked
  6481  003D1C  6F8B               	movwf	__div_to_l_@quot& (0+255),b
  6482  003D1E  0E00               	movlw	0
  6483  003D20  6F8C               	movwf	(__div_to_l_@quot+1)& (0+255),b
  6484  003D22  0E00               	movlw	0
  6485  003D24  6F8D               	movwf	(__div_to_l_@quot+2)& (0+255),b
  6486  003D26  0E00               	movlw	0
  6487  003D28  6F8E               	movwf	(__div_to_l_@quot+3)& (0+255),b
  6488                           
  6489                           ; BSR set to: 0
  6490  003D2A  0E7F               	movlw	127
  6491  003D2C  0100               	movlb	0	; () banked
  6492  003D2E  5F90               	subwf	__div_to_l_@exp1& (0+255),f,b
  6493                           
  6494                           ; BSR set to: 0
  6495  003D30  0100               	movlb	0	; () banked
  6496  003D32  518F               	movf	__div_to_l_@cntr& (0+255),w,b
  6497  003D34  0FA0               	addlw	160
  6498  003D36  0100               	movlb	0	; () banked
  6499  003D38  5F90               	subwf	__div_to_l_@exp1& (0+255),f,b
  6500                           
  6501                           ; BSR set to: 0
  6502  003D3A  0E20               	movlw	32
  6503  003D3C  0100               	movlb	0	; () banked
  6504  003D3E  6F8F               	movwf	__div_to_l_@cntr& (0+255),b
  6505  003D40                     l4430:
  6506                           
  6507                           ; BSR set to: 0
  6508  003D40  0100               	movlb	0	; () banked
  6509  003D42  90D8               	bcf	status,0,c
  6510  003D44  378B               	rlcf	__div_to_l_@quot& (0+255),f,b
  6511  003D46  378C               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  6512  003D48  378D               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  6513  003D4A  378E               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  6514                           
  6515                           ; BSR set to: 0
  6516  003D4C  0100               	movlb	0	; () banked
  6517  003D4E  5188               	movf	__div_to_l_@f2& (0+255),w,b
  6518  003D50  0100               	movlb	0	; () banked
  6519  003D52  5D85               	subwf	__div_to_l_@f1& (0+255),w,b
  6520  003D54  0100               	movlb	0	; () banked
  6521  003D56  5189               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6522  003D58  0100               	movlb	0	; () banked
  6523  003D5A  5986               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  6524  003D5C  0100               	movlb	0	; () banked
  6525  003D5E  518A               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6526  003D60  0100               	movlb	0	; () banked
  6527  003D62  5987               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  6528  003D64  0100               	movlb	0	; () banked
  6529  003D66  518B               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6530  003D68  0100               	movlb	0	; () banked
  6531  003D6A  5988               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  6532  003D6C  A0D8               	btfss	status,0,c
  6533  003D6E  D012               	goto	l4438
  6534                           
  6535                           ; BSR set to: 0
  6536  003D70  0100               	movlb	0	; () banked
  6537  003D72  5188               	movf	__div_to_l_@f2& (0+255),w,b
  6538  003D74  0100               	movlb	0	; () banked
  6539  003D76  5F85               	subwf	__div_to_l_@f1& (0+255),f,b
  6540  003D78  0100               	movlb	0	; () banked
  6541  003D7A  5189               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6542  003D7C  0100               	movlb	0	; () banked
  6543  003D7E  5B86               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  6544  003D80  0100               	movlb	0	; () banked
  6545  003D82  518A               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6546  003D84  0100               	movlb	0	; () banked
  6547  003D86  5B87               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  6548  003D88  0100               	movlb	0	; () banked
  6549  003D8A  518B               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6550  003D8C  0100               	movlb	0	; () banked
  6551  003D8E  5B88               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  6552                           
  6553                           ; BSR set to: 0
  6554  003D90  0100               	movlb	0	; () banked
  6555  003D92  818B               	bsf	__div_to_l_@quot& (0+255),0,b
  6556  003D94                     l4438:
  6557                           
  6558                           ; BSR set to: 0
  6559  003D94  0100               	movlb	0	; () banked
  6560  003D96  90D8               	bcf	status,0,c
  6561  003D98  3785               	rlcf	__div_to_l_@f1& (0+255),f,b
  6562  003D9A  3786               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  6563  003D9C  3787               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  6564  003D9E  3788               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  6565                           
  6566                           ; BSR set to: 0
  6567  003DA0  0100               	movlb	0	; () banked
  6568  003DA2  2F8F               	decfsz	__div_to_l_@cntr& (0+255),f,b
  6569  003DA4  D7CD               	goto	l4430
  6570                           
  6571                           ; BSR set to: 0
  6572                           
  6573                           ; BSR set to: 0
  6574  003DA6  0100               	movlb	0	; () banked
  6575  003DA8  AF90               	btfss	__div_to_l_@exp1& (0+255),7,b
  6576  003DAA  D01A               	goto	l4454
  6577                           
  6578                           ; BSR set to: 0
  6579  003DAC  0100               	movlb	0	; () banked
  6580  003DAE  5190               	movf	__div_to_l_@exp1& (0+255),w,b
  6581  003DB0  0A80               	xorlw	128
  6582  003DB2  0F9F               	addlw	159
  6583  003DB4  B0D8               	btfsc	status,0,c
  6584  003DB6  D00A               	goto	l4450
  6585                           
  6586                           ; BSR set to: 0
  6587  003DB8  0E00               	movlw	0
  6588  003DBA  0100               	movlb	0	; () banked
  6589  003DBC  6F85               	movwf	?__div_to_l_& (0+255),b
  6590  003DBE  0E00               	movlw	0
  6591  003DC0  6F86               	movwf	(?__div_to_l_+1)& (0+255),b
  6592  003DC2  0E00               	movlw	0
  6593  003DC4  6F87               	movwf	(?__div_to_l_+2)& (0+255),b
  6594  003DC6  0E00               	movlw	0
  6595  003DC8  6F88               	movwf	(?__div_to_l_+3)& (0+255),b
  6596                           
  6597                           ; BSR set to: 0
  6598  003DCA  0012               	return	
  6599  003DCC                     l4450:
  6600                           
  6601                           ; BSR set to: 0
  6602  003DCC  0100               	movlb	0	; () banked
  6603  003DCE  90D8               	bcf	status,0,c
  6604  003DD0  338E               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  6605  003DD2  338D               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  6606  003DD4  338C               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  6607  003DD6  338B               	rrcf	__div_to_l_@quot& (0+255),f,b
  6608                           
  6609                           ; BSR set to: 0
  6610  003DD8  0100               	movlb	0	; () banked
  6611  003DDA  3F90               	incfsz	__div_to_l_@exp1& (0+255),f,b
  6612  003DDC  D7F7               	goto	l4450
  6613                           
  6614                           ; BSR set to: 0
  6615  003DDE  D01B               	goto	l667
  6616  003DE0                     l4454:
  6617                           
  6618                           ; BSR set to: 0
  6619  003DE0  0E1F               	movlw	31
  6620  003DE2  0100               	movlb	0	; () banked
  6621  003DE4  6590               	cpfsgt	__div_to_l_@exp1& (0+255),b
  6622  003DE6  D012               	goto	l4462
  6623                           
  6624                           ; BSR set to: 0
  6625  003DE8  0E00               	movlw	0
  6626  003DEA  0100               	movlb	0	; () banked
  6627  003DEC  6F85               	movwf	?__div_to_l_& (0+255),b
  6628  003DEE  0E00               	movlw	0
  6629  003DF0  6F86               	movwf	(?__div_to_l_+1)& (0+255),b
  6630  003DF2  0E00               	movlw	0
  6631  003DF4  6F87               	movwf	(?__div_to_l_+2)& (0+255),b
  6632  003DF6  0E00               	movlw	0
  6633  003DF8  6F88               	movwf	(?__div_to_l_+3)& (0+255),b
  6634                           
  6635                           ; BSR set to: 0
  6636  003DFA  0012               	return	
  6637  003DFC                     l4460:
  6638                           
  6639                           ; BSR set to: 0
  6640  003DFC  0100               	movlb	0	; () banked
  6641  003DFE  90D8               	bcf	status,0,c
  6642  003E00  378B               	rlcf	__div_to_l_@quot& (0+255),f,b
  6643  003E02  378C               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  6644  003E04  378D               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  6645  003E06  378E               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  6646  003E08  0100               	movlb	0	; () banked
  6647  003E0A  0790               	decf	__div_to_l_@exp1& (0+255),f,b
  6648  003E0C                     l4462:
  6649                           
  6650                           ; BSR set to: 0
  6651  003E0C  0100               	movlb	0	; () banked
  6652  003E0E  5190               	movf	__div_to_l_@exp1& (0+255),w,b
  6653  003E10  0100               	movlb	0	; () banked
  6654  003E12  A4D8               	btfss	status,2,c
  6655  003E14  D7F3               	goto	l4460
  6656  003E16                     l667:
  6657                           
  6658                           ; BSR set to: 0
  6659  003E16  C08B  F085         	movff	__div_to_l_@quot,?__div_to_l_
  6660  003E1A  C08C  F086         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  6661  003E1E  C08D  F087         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  6662  003E22  C08E  F088         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  6663                           
  6664                           ; BSR set to: 0
  6665  003E26  0012               	return		;funcret
  6666  003E28                     __end_of__div_to_l_:
  6667                           	opt stack 0
  6668                           tosu	equ	0xFFF
  6669                           tosh	equ	0xFFE
  6670                           tosl	equ	0xFFD
  6671                           pclath	equ	0xFFA
  6672                           tblptru	equ	0xFF8
  6673                           tblptrh	equ	0xFF7
  6674                           tblptrl	equ	0xFF6
  6675                           tablat	equ	0xFF5
  6676                           prodh	equ	0xFF4
  6677                           prodl	equ	0xFF3
  6678                           intcon	equ	0xFF2
  6679                           postinc0	equ	0xFEE
  6680                           wreg	equ	0xFE8
  6681                           indf2	equ	0xFDF
  6682                           postinc2	equ	0xFDE
  6683                           postdec2	equ	0xFDD
  6684                           fsr2h	equ	0xFDA
  6685                           fsr2l	equ	0xFD9
  6686                           status	equ	0xFD8
  6687                           
  6688 ;; *************** function ___lltoft *****************
  6689 ;; Defined at:
  6690 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lltoft.c"
  6691 ;; Parameters:    Size  Location     Type
  6692 ;;  c               4   45[BANK0 ] unsigned long 
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;  exp             1   53[BANK0 ] unsigned char 
  6695 ;; Return value:  Size  Location     Type
  6696 ;;                  3   45[BANK0 ] float 
  6697 ;; Registers used:
  6698 ;;		wreg, status,2, status,0, cstack
  6699 ;; Tracked objects:
  6700 ;;		On entry : 0/0
  6701 ;;		On exit  : 0/0
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6704 ;;      Params:         0       4       0       0       0       0       0
  6705 ;;      Locals:         0       1       0       0       0       0       0
  6706 ;;      Temps:          0       4       0       0       0       0       0
  6707 ;;      Totals:         0       9       0       0       0       0       0
  6708 ;;Total ram usage:        9 bytes
  6709 ;; Hardware stack levels used:    1
  6710 ;; Hardware stack levels required when called:    8
  6711 ;; This function calls:
  6712 ;;		___ftpack
  6713 ;; This function is called by:
  6714 ;;		__doprnt
  6715 ;; This function uses a non-reentrant model
  6716 ;;
  6717                           
  6718                           	psect	text14
  6719  004D68                     __ptext14:
  6720                           	opt stack 0
  6721  004D68                     ___lltoft:
  6722                           	opt stack 20
  6723                           
  6724                           ; BSR set to: 0
  6725                           ;incstack = 0
  6726  004D68  0E8E               	movlw	142
  6727  004D6A  0100               	movlb	0	; () banked
  6728  004D6C  6F95               	movwf	___lltoft@exp& (0+255),b
  6729  004D6E  D008               	goto	l4582
  6730  004D70                     l4580:
  6731                           
  6732                           ; BSR set to: 0
  6733  004D70  0100               	movlb	0	; () banked
  6734  004D72  90D8               	bcf	status,0,c
  6735  004D74  3390               	rrcf	(___lltoft@c+3)& (0+255),f,b
  6736  004D76  338F               	rrcf	(___lltoft@c+2)& (0+255),f,b
  6737  004D78  338E               	rrcf	(___lltoft@c+1)& (0+255),f,b
  6738  004D7A  338D               	rrcf	___lltoft@c& (0+255),f,b
  6739  004D7C  0100               	movlb	0	; () banked
  6740  004D7E  2B95               	incf	___lltoft@exp& (0+255),f,b
  6741  004D80                     l4582:
  6742                           
  6743                           ; BSR set to: 0
  6744  004D80  0E00               	movlw	0
  6745  004D82  0100               	movlb	0	; () banked
  6746  004D84  158D               	andwf	___lltoft@c& (0+255),w,b
  6747  004D86  0100               	movlb	0	; () banked
  6748  004D88  6F91               	movwf	??___lltoft& (0+255),b
  6749  004D8A  0E00               	movlw	0
  6750  004D8C  0100               	movlb	0	; () banked
  6751  004D8E  158E               	andwf	(___lltoft@c+1)& (0+255),w,b
  6752  004D90  0100               	movlb	0	; () banked
  6753  004D92  6F92               	movwf	(??___lltoft+1)& (0+255),b
  6754  004D94  0E00               	movlw	0
  6755  004D96  0100               	movlb	0	; () banked
  6756  004D98  158F               	andwf	(___lltoft@c+2)& (0+255),w,b
  6757  004D9A  0100               	movlb	0	; () banked
  6758  004D9C  6F93               	movwf	(??___lltoft+2)& (0+255),b
  6759  004D9E  0EFF               	movlw	255
  6760  004DA0  0100               	movlb	0	; () banked
  6761  004DA2  1590               	andwf	(___lltoft@c+3)& (0+255),w,b
  6762  004DA4  0100               	movlb	0	; () banked
  6763  004DA6  6F94               	movwf	(??___lltoft+3)& (0+255),b
  6764  004DA8  0100               	movlb	0	; () banked
  6765  004DAA  5191               	movf	??___lltoft& (0+255),w,b
  6766  004DAC  0100               	movlb	0	; () banked
  6767  004DAE  1192               	iorwf	(??___lltoft+1)& (0+255),w,b
  6768  004DB0  0100               	movlb	0	; () banked
  6769  004DB2  1193               	iorwf	(??___lltoft+2)& (0+255),w,b
  6770  004DB4  0100               	movlb	0	; () banked
  6771  004DB6  1194               	iorwf	(??___lltoft+3)& (0+255),w,b
  6772  004DB8  A4D8               	btfss	status,2,c
  6773  004DBA  D7DA               	goto	l4580
  6774                           
  6775                           ; BSR set to: 0
  6776                           
  6777                           ; BSR set to: 0
  6778  004DBC  C08D  F085         	movff	___lltoft@c,___ftpack@arg
  6779  004DC0  C08E  F086         	movff	___lltoft@c+1,___ftpack@arg+1
  6780  004DC4  C08F  F087         	movff	___lltoft@c+2,___ftpack@arg+2
  6781  004DC8  C095  F088         	movff	___lltoft@exp,___ftpack@exp
  6782  004DCC  0E00               	movlw	0
  6783  004DCE  0100               	movlb	0	; () banked
  6784  004DD0  6F89               	movwf	___ftpack@sign& (0+255),b
  6785  004DD2  EC92  F021         	call	___ftpack	;wreg free
  6786  004DD6  C085  F08D         	movff	?___ftpack,?___lltoft
  6787  004DDA  C086  F08E         	movff	?___ftpack+1,?___lltoft+1
  6788  004DDE  C087  F08F         	movff	?___ftpack+2,?___lltoft+2
  6789  004DE2  0012               	return	
  6790  004DE4                     __end_of___lltoft:
  6791                           	opt stack 0
  6792                           tosu	equ	0xFFF
  6793                           tosh	equ	0xFFE
  6794                           tosl	equ	0xFFD
  6795                           pclath	equ	0xFFA
  6796                           tblptru	equ	0xFF8
  6797                           tblptrh	equ	0xFF7
  6798                           tblptrl	equ	0xFF6
  6799                           tablat	equ	0xFF5
  6800                           prodh	equ	0xFF4
  6801                           prodl	equ	0xFF3
  6802                           intcon	equ	0xFF2
  6803                           postinc0	equ	0xFEE
  6804                           wreg	equ	0xFE8
  6805                           indf2	equ	0xFDF
  6806                           postinc2	equ	0xFDE
  6807                           postdec2	equ	0xFDD
  6808                           fsr2h	equ	0xFDA
  6809                           fsr2l	equ	0xFD9
  6810                           status	equ	0xFD8
  6811                           
  6812 ;; *************** function ___llmod *****************
  6813 ;; Defined at:
  6814 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
  6815 ;; Parameters:    Size  Location     Type
  6816 ;;  dividend        4   50[BANK0 ] unsigned long 
  6817 ;;  divisor         4   54[BANK0 ] unsigned long 
  6818 ;; Auto vars:     Size  Location     Type
  6819 ;;  counter         1   58[BANK0 ] unsigned char 
  6820 ;; Return value:  Size  Location     Type
  6821 ;;                  4   50[BANK0 ] unsigned long 
  6822 ;; Registers used:
  6823 ;;		wreg, status,2, status,0
  6824 ;; Tracked objects:
  6825 ;;		On entry : 0/0
  6826 ;;		On exit  : 0/0
  6827 ;;		Unchanged: 0/0
  6828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6829 ;;      Params:         0       8       0       0       0       0       0
  6830 ;;      Locals:         0       1       0       0       0       0       0
  6831 ;;      Temps:          0       0       0       0       0       0       0
  6832 ;;      Totals:         0       9       0       0       0       0       0
  6833 ;;Total ram usage:        9 bytes
  6834 ;; Hardware stack levels used:    1
  6835 ;; Hardware stack levels required when called:    7
  6836 ;; This function calls:
  6837 ;;		Nothing
  6838 ;; This function is called by:
  6839 ;;		__doprnt
  6840 ;; This function uses a non-reentrant model
  6841 ;;
  6842                           
  6843                           	psect	text15
  6844  004B38                     __ptext15:
  6845                           	opt stack 0
  6846  004B38                     ___llmod:
  6847                           	opt stack 21
  6848                           
  6849                           ;incstack = 0
  6850  004B38  0100               	movlb	0	; () banked
  6851  004B3A  5196               	movf	___llmod@divisor& (0+255),w,b
  6852  004B3C  0100               	movlb	0	; () banked
  6853  004B3E  1197               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  6854  004B40  0100               	movlb	0	; () banked
  6855  004B42  1198               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  6856  004B44  0100               	movlb	0	; () banked
  6857  004B46  1199               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  6858  004B48  B4D8               	btfsc	status,2,c
  6859  004B4A  D03A               	goto	l878
  6860                           
  6861                           ; BSR set to: 0
  6862  004B4C  0E01               	movlw	1
  6863  004B4E  0100               	movlb	0	; () banked
  6864  004B50  6F9A               	movwf	___llmod@counter& (0+255),b
  6865  004B52  D008               	goto	l4568
  6866  004B54                     l4566:
  6867                           
  6868                           ; BSR set to: 0
  6869  004B54  0100               	movlb	0	; () banked
  6870  004B56  90D8               	bcf	status,0,c
  6871  004B58  3796               	rlcf	___llmod@divisor& (0+255),f,b
  6872  004B5A  3797               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  6873  004B5C  3798               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  6874  004B5E  3799               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  6875  004B60  0100               	movlb	0	; () banked
  6876  004B62  2B9A               	incf	___llmod@counter& (0+255),f,b
  6877  004B64                     l4568:
  6878                           
  6879                           ; BSR set to: 0
  6880  004B64  0100               	movlb	0	; () banked
  6881  004B66  AF99               	btfss	(___llmod@divisor+3)& (0+255),7,b
  6882  004B68  D7F5               	goto	l4566
  6883  004B6A                     l4570:
  6884                           
  6885                           ; BSR set to: 0
  6886  004B6A  0100               	movlb	0	; () banked
  6887  004B6C  5196               	movf	___llmod@divisor& (0+255),w,b
  6888  004B6E  0100               	movlb	0	; () banked
  6889  004B70  5D92               	subwf	___llmod@dividend& (0+255),w,b
  6890  004B72  0100               	movlb	0	; () banked
  6891  004B74  5197               	movf	(___llmod@divisor+1)& (0+255),w,b
  6892  004B76  0100               	movlb	0	; () banked
  6893  004B78  5993               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  6894  004B7A  0100               	movlb	0	; () banked
  6895  004B7C  5198               	movf	(___llmod@divisor+2)& (0+255),w,b
  6896  004B7E  0100               	movlb	0	; () banked
  6897  004B80  5994               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  6898  004B82  0100               	movlb	0	; () banked
  6899  004B84  5199               	movf	(___llmod@divisor+3)& (0+255),w,b
  6900  004B86  0100               	movlb	0	; () banked
  6901  004B88  5995               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  6902  004B8A  A0D8               	btfss	status,0,c
  6903  004B8C  D010               	goto	l4574
  6904                           
  6905                           ; BSR set to: 0
  6906  004B8E  0100               	movlb	0	; () banked
  6907  004B90  5196               	movf	___llmod@divisor& (0+255),w,b
  6908  004B92  0100               	movlb	0	; () banked
  6909  004B94  5F92               	subwf	___llmod@dividend& (0+255),f,b
  6910  004B96  0100               	movlb	0	; () banked
  6911  004B98  5197               	movf	(___llmod@divisor+1)& (0+255),w,b
  6912  004B9A  0100               	movlb	0	; () banked
  6913  004B9C  5B93               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  6914  004B9E  0100               	movlb	0	; () banked
  6915  004BA0  5198               	movf	(___llmod@divisor+2)& (0+255),w,b
  6916  004BA2  0100               	movlb	0	; () banked
  6917  004BA4  5B94               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  6918  004BA6  0100               	movlb	0	; () banked
  6919  004BA8  5199               	movf	(___llmod@divisor+3)& (0+255),w,b
  6920  004BAA  0100               	movlb	0	; () banked
  6921  004BAC  5B95               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  6922  004BAE                     l4574:
  6923                           
  6924                           ; BSR set to: 0
  6925  004BAE  0100               	movlb	0	; () banked
  6926  004BB0  90D8               	bcf	status,0,c
  6927  004BB2  3399               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  6928  004BB4  3398               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  6929  004BB6  3397               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  6930  004BB8  3396               	rrcf	___llmod@divisor& (0+255),f,b
  6931                           
  6932                           ; BSR set to: 0
  6933  004BBA  0100               	movlb	0	; () banked
  6934  004BBC  2F9A               	decfsz	___llmod@counter& (0+255),f,b
  6935  004BBE  D7D5               	goto	l4570
  6936  004BC0                     l878:
  6937                           
  6938                           ; BSR set to: 0
  6939  004BC0  C092  F092         	movff	___llmod@dividend,?___llmod
  6940  004BC4  C093  F093         	movff	___llmod@dividend+1,?___llmod+1
  6941  004BC8  C094  F094         	movff	___llmod@dividend+2,?___llmod+2
  6942  004BCC  C095  F095         	movff	___llmod@dividend+3,?___llmod+3
  6943                           
  6944                           ; BSR set to: 0
  6945  004BD0  0012               	return		;funcret
  6946  004BD2                     __end_of___llmod:
  6947                           	opt stack 0
  6948                           tosu	equ	0xFFF
  6949                           tosh	equ	0xFFE
  6950                           tosl	equ	0xFFD
  6951                           pclath	equ	0xFFA
  6952                           tblptru	equ	0xFF8
  6953                           tblptrh	equ	0xFF7
  6954                           tblptrl	equ	0xFF6
  6955                           tablat	equ	0xFF5
  6956                           prodh	equ	0xFF4
  6957                           prodl	equ	0xFF3
  6958                           intcon	equ	0xFF2
  6959                           postinc0	equ	0xFEE
  6960                           wreg	equ	0xFE8
  6961                           indf2	equ	0xFDF
  6962                           postinc2	equ	0xFDE
  6963                           postdec2	equ	0xFDD
  6964                           fsr2h	equ	0xFDA
  6965                           fsr2l	equ	0xFD9
  6966                           status	equ	0xFD8
  6967                           
  6968 ;; *************** function ___lldiv *****************
  6969 ;; Defined at:
  6970 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;  dividend        4   37[BANK0 ] unsigned long 
  6973 ;;  divisor         4   41[BANK0 ] unsigned long 
  6974 ;; Auto vars:     Size  Location     Type
  6975 ;;  quotient        4   45[BANK0 ] unsigned long 
  6976 ;;  counter         1   49[BANK0 ] unsigned char 
  6977 ;; Return value:  Size  Location     Type
  6978 ;;                  4   37[BANK0 ] unsigned long 
  6979 ;; Registers used:
  6980 ;;		wreg, status,2, status,0
  6981 ;; Tracked objects:
  6982 ;;		On entry : 0/0
  6983 ;;		On exit  : 0/0
  6984 ;;		Unchanged: 0/0
  6985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6986 ;;      Params:         0       8       0       0       0       0       0
  6987 ;;      Locals:         0       5       0       0       0       0       0
  6988 ;;      Temps:          0       0       0       0       0       0       0
  6989 ;;      Totals:         0      13       0       0       0       0       0
  6990 ;;Total ram usage:       13 bytes
  6991 ;; Hardware stack levels used:    1
  6992 ;; Hardware stack levels required when called:    7
  6993 ;; This function calls:
  6994 ;;		Nothing
  6995 ;; This function is called by:
  6996 ;;		__doprnt
  6997 ;; This function uses a non-reentrant model
  6998 ;;
  6999                           
  7000                           	psect	text16
  7001  004884                     __ptext16:
  7002                           	opt stack 0
  7003  004884                     ___lldiv:
  7004                           	opt stack 21
  7005                           
  7006                           ; BSR set to: 0
  7007                           ;incstack = 0
  7008  004884  0E00               	movlw	0
  7009  004886  0100               	movlb	0	; () banked
  7010  004888  6F8D               	movwf	___lldiv@quotient& (0+255),b
  7011  00488A  0E00               	movlw	0
  7012  00488C  6F8E               	movwf	(___lldiv@quotient+1)& (0+255),b
  7013  00488E  0E00               	movlw	0
  7014  004890  6F8F               	movwf	(___lldiv@quotient+2)& (0+255),b
  7015  004892  0E00               	movlw	0
  7016  004894  6F90               	movwf	(___lldiv@quotient+3)& (0+255),b
  7017                           
  7018                           ; BSR set to: 0
  7019  004896  0100               	movlb	0	; () banked
  7020  004898  5189               	movf	___lldiv@divisor& (0+255),w,b
  7021  00489A  0100               	movlb	0	; () banked
  7022  00489C  118A               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7023  00489E  0100               	movlb	0	; () banked
  7024  0048A0  118B               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7025  0048A2  0100               	movlb	0	; () banked
  7026  0048A4  118C               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  7027  0048A6  B4D8               	btfsc	status,2,c
  7028  0048A8  D042               	goto	l868
  7029                           
  7030                           ; BSR set to: 0
  7031  0048AA  0E01               	movlw	1
  7032  0048AC  0100               	movlb	0	; () banked
  7033  0048AE  6F91               	movwf	___lldiv@counter& (0+255),b
  7034  0048B0  D008               	goto	l4548
  7035  0048B2                     l4546:
  7036                           
  7037                           ; BSR set to: 0
  7038  0048B2  0100               	movlb	0	; () banked
  7039  0048B4  90D8               	bcf	status,0,c
  7040  0048B6  3789               	rlcf	___lldiv@divisor& (0+255),f,b
  7041  0048B8  378A               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7042  0048BA  378B               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7043  0048BC  378C               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7044  0048BE  0100               	movlb	0	; () banked
  7045  0048C0  2B91               	incf	___lldiv@counter& (0+255),f,b
  7046  0048C2                     l4548:
  7047                           
  7048                           ; BSR set to: 0
  7049  0048C2  0100               	movlb	0	; () banked
  7050  0048C4  AF8C               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  7051  0048C6  D7F5               	goto	l4546
  7052  0048C8                     l4550:
  7053                           
  7054                           ; BSR set to: 0
  7055  0048C8  0100               	movlb	0	; () banked
  7056  0048CA  90D8               	bcf	status,0,c
  7057  0048CC  378D               	rlcf	___lldiv@quotient& (0+255),f,b
  7058  0048CE  378E               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  7059  0048D0  378F               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  7060  0048D2  3790               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  7061                           
  7062                           ; BSR set to: 0
  7063  0048D4  0100               	movlb	0	; () banked
  7064  0048D6  5189               	movf	___lldiv@divisor& (0+255),w,b
  7065  0048D8  0100               	movlb	0	; () banked
  7066  0048DA  5D85               	subwf	___lldiv@dividend& (0+255),w,b
  7067  0048DC  0100               	movlb	0	; () banked
  7068  0048DE  518A               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7069  0048E0  0100               	movlb	0	; () banked
  7070  0048E2  5986               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7071  0048E4  0100               	movlb	0	; () banked
  7072  0048E6  518B               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7073  0048E8  0100               	movlb	0	; () banked
  7074  0048EA  5987               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7075  0048EC  0100               	movlb	0	; () banked
  7076  0048EE  518C               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7077  0048F0  0100               	movlb	0	; () banked
  7078  0048F2  5988               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7079  0048F4  A0D8               	btfss	status,0,c
  7080  0048F6  D012               	goto	l4558
  7081                           
  7082                           ; BSR set to: 0
  7083  0048F8  0100               	movlb	0	; () banked
  7084  0048FA  5189               	movf	___lldiv@divisor& (0+255),w,b
  7085  0048FC  0100               	movlb	0	; () banked
  7086  0048FE  5F85               	subwf	___lldiv@dividend& (0+255),f,b
  7087  004900  0100               	movlb	0	; () banked
  7088  004902  518A               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7089  004904  0100               	movlb	0	; () banked
  7090  004906  5B86               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7091  004908  0100               	movlb	0	; () banked
  7092  00490A  518B               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7093  00490C  0100               	movlb	0	; () banked
  7094  00490E  5B87               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7095  004910  0100               	movlb	0	; () banked
  7096  004912  518C               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7097  004914  0100               	movlb	0	; () banked
  7098  004916  5B88               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7099                           
  7100                           ; BSR set to: 0
  7101  004918  0100               	movlb	0	; () banked
  7102  00491A  818D               	bsf	___lldiv@quotient& (0+255),0,b
  7103  00491C                     l4558:
  7104                           
  7105                           ; BSR set to: 0
  7106  00491C  0100               	movlb	0	; () banked
  7107  00491E  90D8               	bcf	status,0,c
  7108  004920  338C               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7109  004922  338B               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7110  004924  338A               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7111  004926  3389               	rrcf	___lldiv@divisor& (0+255),f,b
  7112                           
  7113                           ; BSR set to: 0
  7114  004928  0100               	movlb	0	; () banked
  7115  00492A  2F91               	decfsz	___lldiv@counter& (0+255),f,b
  7116  00492C  D7CD               	goto	l4550
  7117  00492E                     l868:
  7118                           
  7119                           ; BSR set to: 0
  7120  00492E  C08D  F085         	movff	___lldiv@quotient,?___lldiv
  7121  004932  C08E  F086         	movff	___lldiv@quotient+1,?___lldiv+1
  7122  004936  C08F  F087         	movff	___lldiv@quotient+2,?___lldiv+2
  7123  00493A  C090  F088         	movff	___lldiv@quotient+3,?___lldiv+3
  7124                           
  7125                           ; BSR set to: 0
  7126  00493E  0012               	return		;funcret
  7127  004940                     __end_of___lldiv:
  7128                           	opt stack 0
  7129                           tosu	equ	0xFFF
  7130                           tosh	equ	0xFFE
  7131                           tosl	equ	0xFFD
  7132                           pclath	equ	0xFFA
  7133                           tblptru	equ	0xFF8
  7134                           tblptrh	equ	0xFF7
  7135                           tblptrl	equ	0xFF6
  7136                           tablat	equ	0xFF5
  7137                           prodh	equ	0xFF4
  7138                           prodl	equ	0xFF3
  7139                           intcon	equ	0xFF2
  7140                           postinc0	equ	0xFEE
  7141                           wreg	equ	0xFE8
  7142                           indf2	equ	0xFDF
  7143                           postinc2	equ	0xFDE
  7144                           postdec2	equ	0xFDD
  7145                           fsr2h	equ	0xFDA
  7146                           fsr2l	equ	0xFD9
  7147                           status	equ	0xFD8
  7148                           
  7149 ;; *************** function ___fttol *****************
  7150 ;; Defined at:
  7151 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  7152 ;; Parameters:    Size  Location     Type
  7153 ;;  f1              3   79[BANK0 ] float 
  7154 ;; Auto vars:     Size  Location     Type
  7155 ;;  lval            4   89[BANK0 ] unsigned long 
  7156 ;;  exp1            1   93[BANK0 ] unsigned char 
  7157 ;;  sign1           1   88[BANK0 ] unsigned char 
  7158 ;; Return value:  Size  Location     Type
  7159 ;;                  4   79[BANK0 ] long 
  7160 ;; Registers used:
  7161 ;;		wreg, status,2, status,0
  7162 ;; Tracked objects:
  7163 ;;		On entry : 0/0
  7164 ;;		On exit  : 0/0
  7165 ;;		Unchanged: 0/0
  7166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7167 ;;      Params:         0       4       0       0       0       0       0
  7168 ;;      Locals:         0       6       0       0       0       0       0
  7169 ;;      Temps:          0       5       0       0       0       0       0
  7170 ;;      Totals:         0      15       0       0       0       0       0
  7171 ;;Total ram usage:       15 bytes
  7172 ;; Hardware stack levels used:    1
  7173 ;; Hardware stack levels required when called:    7
  7174 ;; This function calls:
  7175 ;;		Nothing
  7176 ;; This function is called by:
  7177 ;;		__doprnt
  7178 ;; This function uses a non-reentrant model
  7179 ;;
  7180                           
  7181                           	psect	text17
  7182  003F86                     __ptext17:
  7183                           	opt stack 0
  7184  003F86                     ___fttol:
  7185                           	opt stack 21
  7186                           
  7187                           ; BSR set to: 0
  7188                           ;incstack = 0
  7189  003F86  C0B1  F0B3         	movff	___fttol@f1+2,??___fttol
  7190  003F8A  0100               	movlb	0	; () banked
  7191  003F8C  6BB4               	clrf	(??___fttol+1)& (0+255),b
  7192  003F8E  6BB5               	clrf	(??___fttol+2)& (0+255),b
  7193  003F90  0100               	movlb	0	; () banked
  7194  003F92  35B0               	rlcf	(___fttol@f1+1)& (0+255),w,b
  7195  003F94  0100               	movlb	0	; () banked
  7196  003F96  37B3               	rlcf	??___fttol& (0+255),f,b
  7197  003F98  E301               	bnc	u5591
  7198  003F9A  81B4               	bsf	(??___fttol+1)& (0+255),0,b
  7199  003F9C                     u5591:
  7200  003F9C  0100               	movlb	0	; () banked
  7201  003F9E  51B3               	movf	??___fttol& (0+255),w,b
  7202  003FA0  0100               	movlb	0	; () banked
  7203  003FA2  6FBD               	movwf	___fttol@exp1& (0+255),b
  7204  003FA4  0100               	movlb	0	; () banked
  7205  003FA6  51BD               	movf	___fttol@exp1& (0+255),w,b
  7206  003FA8  A4D8               	btfss	status,2,c
  7207  003FAA  D00A               	goto	l4500
  7208                           
  7209                           ; BSR set to: 0
  7210  003FAC  0E00               	movlw	0
  7211  003FAE  0100               	movlb	0	; () banked
  7212  003FB0  6FAF               	movwf	?___fttol& (0+255),b
  7213  003FB2  0E00               	movlw	0
  7214  003FB4  6FB0               	movwf	(?___fttol+1)& (0+255),b
  7215  003FB6  0E00               	movlw	0
  7216  003FB8  6FB1               	movwf	(?___fttol+2)& (0+255),b
  7217  003FBA  0E00               	movlw	0
  7218  003FBC  6FB2               	movwf	(?___fttol+3)& (0+255),b
  7219                           
  7220                           ; BSR set to: 0
  7221  003FBE  0012               	return	
  7222  003FC0                     l4500:
  7223                           
  7224                           ; BSR set to: 0
  7225  003FC0  0E17               	movlw	23
  7226  003FC2  0100               	movlb	0	; () banked
  7227  003FC4  6FB3               	movwf	??___fttol& (0+255),b
  7228  003FC6  C0AF  F0B4         	movff	___fttol@f1,??___fttol+1
  7229  003FCA  C0B0  F0B5         	movff	___fttol@f1+1,??___fttol+2
  7230  003FCE  C0B1  F0B6         	movff	___fttol@f1+2,??___fttol+3
  7231  003FD2  0100               	movlb	0	; () banked
  7232  003FD4  29B3               	incf	??___fttol& (0+255),w,b
  7233  003FD6  0100               	movlb	0	; () banked
  7234  003FD8  6FB7               	movwf	(??___fttol+4)& (0+255),b
  7235  003FDA  D005               	goto	u5610
  7236  003FDC                     u5615:
  7237  003FDC  0100               	movlb	0	; () banked
  7238  003FDE  90D8               	bcf	status,0,c
  7239  003FE0  33B6               	rrcf	(??___fttol+3)& (0+255),f,b
  7240  003FE2  33B5               	rrcf	(??___fttol+2)& (0+255),f,b
  7241  003FE4  33B4               	rrcf	(??___fttol+1)& (0+255),f,b
  7242  003FE6                     u5610:
  7243  003FE6  0100               	movlb	0	; () banked
  7244  003FE8  2FB7               	decfsz	(??___fttol+4)& (0+255),f,b
  7245  003FEA  D7F8               	goto	u5615
  7246  003FEC  0100               	movlb	0	; () banked
  7247  003FEE  51B4               	movf	(??___fttol+1)& (0+255),w,b
  7248  003FF0  0100               	movlb	0	; () banked
  7249  003FF2  6FB8               	movwf	___fttol@sign1& (0+255),b
  7250                           
  7251                           ; BSR set to: 0
  7252  003FF4  0100               	movlb	0	; () banked
  7253  003FF6  8FB0               	bsf	(___fttol@f1+1)& (0+255),7,b
  7254                           
  7255                           ; BSR set to: 0
  7256  003FF8  0EFF               	movlw	255
  7257  003FFA  0100               	movlb	0	; () banked
  7258  003FFC  17AF               	andwf	___fttol@f1& (0+255),f,b
  7259  003FFE  0EFF               	movlw	255
  7260  004000  0100               	movlb	0	; () banked
  7261  004002  17B0               	andwf	(___fttol@f1+1)& (0+255),f,b
  7262  004004  0E00               	movlw	0
  7263  004006  0100               	movlb	0	; () banked
  7264  004008  17B1               	andwf	(___fttol@f1+2)& (0+255),f,b
  7265                           
  7266                           ; BSR set to: 0
  7267  00400A  0100               	movlb	0	; () banked
  7268  00400C  51AF               	movf	___fttol@f1& (0+255),w,b
  7269  00400E  0100               	movlb	0	; () banked
  7270  004010  6FB9               	movwf	___fttol@lval& (0+255),b
  7271  004012  0100               	movlb	0	; () banked
  7272  004014  51B0               	movf	(___fttol@f1+1)& (0+255),w,b
  7273  004016  0100               	movlb	0	; () banked
  7274  004018  6FBA               	movwf	(___fttol@lval+1)& (0+255),b
  7275  00401A  0100               	movlb	0	; () banked
  7276  00401C  51B1               	movf	(___fttol@f1+2)& (0+255),w,b
  7277  00401E  0100               	movlb	0	; () banked
  7278  004020  6FBB               	movwf	(___fttol@lval+2)& (0+255),b
  7279  004022  0100               	movlb	0	; () banked
  7280  004024  6BBC               	clrf	(___fttol@lval+3)& (0+255),b
  7281                           
  7282                           ; BSR set to: 0
  7283  004026  0E8E               	movlw	142
  7284  004028  0100               	movlb	0	; () banked
  7285  00402A  5FBD               	subwf	___fttol@exp1& (0+255),f,b
  7286                           
  7287                           ; BSR set to: 0
  7288  00402C  0100               	movlb	0	; () banked
  7289  00402E  AFBD               	btfss	___fttol@exp1& (0+255),7,b
  7290  004030  D01A               	goto	l4522
  7291                           
  7292                           ; BSR set to: 0
  7293  004032  0100               	movlb	0	; () banked
  7294  004034  51BD               	movf	___fttol@exp1& (0+255),w,b
  7295  004036  0A80               	xorlw	128
  7296  004038  0F8F               	addlw	143
  7297  00403A  B0D8               	btfsc	status,0,c
  7298  00403C  D00A               	goto	l4518
  7299                           
  7300                           ; BSR set to: 0
  7301  00403E  0E00               	movlw	0
  7302  004040  0100               	movlb	0	; () banked
  7303  004042  6FAF               	movwf	?___fttol& (0+255),b
  7304  004044  0E00               	movlw	0
  7305  004046  6FB0               	movwf	(?___fttol+1)& (0+255),b
  7306  004048  0E00               	movlw	0
  7307  00404A  6FB1               	movwf	(?___fttol+2)& (0+255),b
  7308  00404C  0E00               	movlw	0
  7309  00404E  6FB2               	movwf	(?___fttol+3)& (0+255),b
  7310                           
  7311                           ; BSR set to: 0
  7312  004050  0012               	return	
  7313  004052                     l4518:
  7314                           
  7315                           ; BSR set to: 0
  7316  004052  0100               	movlb	0	; () banked
  7317  004054  90D8               	bcf	status,0,c
  7318  004056  33BC               	rrcf	(___fttol@lval+3)& (0+255),f,b
  7319  004058  33BB               	rrcf	(___fttol@lval+2)& (0+255),f,b
  7320  00405A  33BA               	rrcf	(___fttol@lval+1)& (0+255),f,b
  7321  00405C  33B9               	rrcf	___fttol@lval& (0+255),f,b
  7322                           
  7323                           ; BSR set to: 0
  7324  00405E  0100               	movlb	0	; () banked
  7325  004060  3FBD               	incfsz	___fttol@exp1& (0+255),f,b
  7326  004062  D7F7               	goto	l4518
  7327                           
  7328                           ; BSR set to: 0
  7329  004064  D01B               	goto	l4532
  7330  004066                     l4522:
  7331                           
  7332                           ; BSR set to: 0
  7333  004066  0E17               	movlw	23
  7334  004068  0100               	movlb	0	; () banked
  7335  00406A  65BD               	cpfsgt	___fttol@exp1& (0+255),b
  7336  00406C  D012               	goto	l4530
  7337                           
  7338                           ; BSR set to: 0
  7339  00406E  0E00               	movlw	0
  7340  004070  0100               	movlb	0	; () banked
  7341  004072  6FAF               	movwf	?___fttol& (0+255),b
  7342  004074  0E00               	movlw	0
  7343  004076  6FB0               	movwf	(?___fttol+1)& (0+255),b
  7344  004078  0E00               	movlw	0
  7345  00407A  6FB1               	movwf	(?___fttol+2)& (0+255),b
  7346  00407C  0E00               	movlw	0
  7347  00407E  6FB2               	movwf	(?___fttol+3)& (0+255),b
  7348                           
  7349                           ; BSR set to: 0
  7350  004080  0012               	return	
  7351  004082                     l4528:
  7352                           
  7353                           ; BSR set to: 0
  7354  004082  0100               	movlb	0	; () banked
  7355  004084  90D8               	bcf	status,0,c
  7356  004086  37B9               	rlcf	___fttol@lval& (0+255),f,b
  7357  004088  37BA               	rlcf	(___fttol@lval+1)& (0+255),f,b
  7358  00408A  37BB               	rlcf	(___fttol@lval+2)& (0+255),f,b
  7359  00408C  37BC               	rlcf	(___fttol@lval+3)& (0+255),f,b
  7360  00408E  0100               	movlb	0	; () banked
  7361  004090  07BD               	decf	___fttol@exp1& (0+255),f,b
  7362  004092                     l4530:
  7363                           
  7364                           ; BSR set to: 0
  7365  004092  0100               	movlb	0	; () banked
  7366  004094  51BD               	movf	___fttol@exp1& (0+255),w,b
  7367  004096  0100               	movlb	0	; () banked
  7368  004098  A4D8               	btfss	status,2,c
  7369  00409A  D7F3               	goto	l4528
  7370  00409C                     l4532:
  7371                           
  7372                           ; BSR set to: 0
  7373  00409C  0100               	movlb	0	; () banked
  7374  00409E  51B8               	movf	___fttol@sign1& (0+255),w,b
  7375  0040A0  0100               	movlb	0	; () banked
  7376  0040A2  B4D8               	btfsc	status,2,c
  7377  0040A4  D009               	goto	l4536
  7378                           
  7379                           ; BSR set to: 0
  7380  0040A6  0100               	movlb	0	; () banked
  7381  0040A8  1FBC               	comf	(___fttol@lval+3)& (0+255),f,b
  7382  0040AA  1FBB               	comf	(___fttol@lval+2)& (0+255),f,b
  7383  0040AC  1FBA               	comf	(___fttol@lval+1)& (0+255),f,b
  7384  0040AE  6DB9               	negf	___fttol@lval& (0+255),b
  7385  0040B0  0E00               	movlw	0
  7386  0040B2  23BA               	addwfc	(___fttol@lval+1)& (0+255),f,b
  7387  0040B4  23BB               	addwfc	(___fttol@lval+2)& (0+255),f,b
  7388  0040B6  23BC               	addwfc	(___fttol@lval+3)& (0+255),f,b
  7389  0040B8                     l4536:
  7390                           
  7391                           ; BSR set to: 0
  7392  0040B8  C0B9  F0AF         	movff	___fttol@lval,?___fttol
  7393  0040BC  C0BA  F0B0         	movff	___fttol@lval+1,?___fttol+1
  7394  0040C0  C0BB  F0B1         	movff	___fttol@lval+2,?___fttol+2
  7395  0040C4  C0BC  F0B2         	movff	___fttol@lval+3,?___fttol+3
  7396  0040C8  0012               	return	
  7397  0040CA                     __end_of___fttol:
  7398                           	opt stack 0
  7399                           tosu	equ	0xFFF
  7400                           tosh	equ	0xFFE
  7401                           tosl	equ	0xFFD
  7402                           pclath	equ	0xFFA
  7403                           tblptru	equ	0xFF8
  7404                           tblptrh	equ	0xFF7
  7405                           tblptrl	equ	0xFF6
  7406                           tablat	equ	0xFF5
  7407                           prodh	equ	0xFF4
  7408                           prodl	equ	0xFF3
  7409                           intcon	equ	0xFF2
  7410                           postinc0	equ	0xFEE
  7411                           wreg	equ	0xFE8
  7412                           indf2	equ	0xFDF
  7413                           postinc2	equ	0xFDE
  7414                           postdec2	equ	0xFDD
  7415                           fsr2h	equ	0xFDA
  7416                           fsr2l	equ	0xFD9
  7417                           status	equ	0xFD8
  7418                           
  7419 ;; *************** function ___ftsub *****************
  7420 ;; Defined at:
  7421 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  7422 ;; Parameters:    Size  Location     Type
  7423 ;;  f1              3    0[BANK1 ] float 
  7424 ;;  f2              3    3[BANK1 ] float 
  7425 ;; Auto vars:     Size  Location     Type
  7426 ;;		None
  7427 ;; Return value:  Size  Location     Type
  7428 ;;                  3    0[BANK1 ] float 
  7429 ;; Registers used:
  7430 ;;		wreg, status,2, status,0, cstack
  7431 ;; Tracked objects:
  7432 ;;		On entry : 0/0
  7433 ;;		On exit  : 0/0
  7434 ;;		Unchanged: 0/0
  7435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7436 ;;      Params:         0       0       6       0       0       0       0
  7437 ;;      Locals:         0       0       0       0       0       0       0
  7438 ;;      Temps:          0       0       0       0       0       0       0
  7439 ;;      Totals:         0       0       6       0       0       0       0
  7440 ;;Total ram usage:        6 bytes
  7441 ;; Hardware stack levels used:    1
  7442 ;; Hardware stack levels required when called:    9
  7443 ;; This function calls:
  7444 ;;		___ftadd
  7445 ;; This function is called by:
  7446 ;;		__doprnt
  7447 ;; This function uses a non-reentrant model
  7448 ;;
  7449                           
  7450                           	psect	text18
  7451  0050AA                     __ptext18:
  7452                           	opt stack 0
  7453  0050AA                     ___ftsub:
  7454                           	opt stack 19
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;incstack = 0
  7458  0050AA  0101               	movlb	1	; () banked
  7459  0050AC  5103               	movf	___ftsub@f2& (0+255),w,b
  7460  0050AE  0101               	movlb	1	; () banked
  7461  0050B0  1104               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  7462  0050B2  0101               	movlb	1	; () banked
  7463  0050B4  1105               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  7464  0050B6  B4D8               	btfsc	status,2,c
  7465  0050B8  D009               	goto	l5622
  7466                           
  7467                           ; BSR set to: 1
  7468  0050BA  0E00               	movlw	0
  7469  0050BC  0101               	movlb	1	; () banked
  7470  0050BE  1B03               	xorwf	___ftsub@f2& (0+255),f,b
  7471  0050C0  0E00               	movlw	0
  7472  0050C2  0101               	movlb	1	; () banked
  7473  0050C4  1B04               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  7474  0050C6  0E80               	movlw	128
  7475  0050C8  0101               	movlb	1	; () banked
  7476  0050CA  1B05               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  7477  0050CC                     l5622:
  7478                           
  7479                           ; BSR set to: 1
  7480  0050CC  C100  F0B2         	movff	___ftsub@f1,___ftadd@f1
  7481  0050D0  C101  F0B3         	movff	___ftsub@f1+1,___ftadd@f1+1
  7482  0050D4  C102  F0B4         	movff	___ftsub@f1+2,___ftadd@f1+2
  7483  0050D8  C103  F0B5         	movff	___ftsub@f2,___ftadd@f2
  7484  0050DC  C104  F0B6         	movff	___ftsub@f2+1,___ftadd@f2+1
  7485  0050E0  C105  F0B7         	movff	___ftsub@f2+2,___ftadd@f2+2
  7486  0050E4  EC54  F01A         	call	___ftadd	;wreg free
  7487  0050E8  C0B2  F100         	movff	?___ftadd,?___ftsub
  7488  0050EC  C0B3  F101         	movff	?___ftadd+1,?___ftsub+1
  7489  0050F0  C0B4  F102         	movff	?___ftadd+2,?___ftsub+2
  7490  0050F4  0012               	return	
  7491  0050F6                     __end_of___ftsub:
  7492                           	opt stack 0
  7493                           tosu	equ	0xFFF
  7494                           tosh	equ	0xFFE
  7495                           tosl	equ	0xFFD
  7496                           pclath	equ	0xFFA
  7497                           tblptru	equ	0xFF8
  7498                           tblptrh	equ	0xFF7
  7499                           tblptrl	equ	0xFF6
  7500                           tablat	equ	0xFF5
  7501                           prodh	equ	0xFF4
  7502                           prodl	equ	0xFF3
  7503                           intcon	equ	0xFF2
  7504                           postinc0	equ	0xFEE
  7505                           wreg	equ	0xFE8
  7506                           indf2	equ	0xFDF
  7507                           postinc2	equ	0xFDE
  7508                           postdec2	equ	0xFDD
  7509                           fsr2h	equ	0xFDA
  7510                           fsr2l	equ	0xFD9
  7511                           status	equ	0xFD8
  7512                           
  7513 ;; *************** function ___ftadd *****************
  7514 ;; Defined at:
  7515 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  7516 ;; Parameters:    Size  Location     Type
  7517 ;;  f1              3   82[BANK0 ] float 
  7518 ;;  f2              3   85[BANK0 ] float 
  7519 ;; Auto vars:     Size  Location     Type
  7520 ;;  exp1            1   93[BANK0 ] unsigned char 
  7521 ;;  exp2            1   92[BANK0 ] unsigned char 
  7522 ;;  sign            1   91[BANK0 ] unsigned char 
  7523 ;; Return value:  Size  Location     Type
  7524 ;;                  3   82[BANK0 ] float 
  7525 ;; Registers used:
  7526 ;;		wreg, status,2, status,0, cstack
  7527 ;; Tracked objects:
  7528 ;;		On entry : 0/0
  7529 ;;		On exit  : 0/0
  7530 ;;		Unchanged: 0/0
  7531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7532 ;;      Params:         0       6       0       0       0       0       0
  7533 ;;      Locals:         0       3       0       0       0       0       0
  7534 ;;      Temps:          0       3       0       0       0       0       0
  7535 ;;      Totals:         0      12       0       0       0       0       0
  7536 ;;Total ram usage:       12 bytes
  7537 ;; Hardware stack levels used:    1
  7538 ;; Hardware stack levels required when called:    8
  7539 ;; This function calls:
  7540 ;;		___ftpack
  7541 ;; This function is called by:
  7542 ;;		__doprnt
  7543 ;;		___ftsub
  7544 ;; This function uses a non-reentrant model
  7545 ;;
  7546                           
  7547                           	psect	text19
  7548  0034A8                     __ptext19:
  7549                           	opt stack 0
  7550  0034A8                     ___ftadd:
  7551                           	opt stack 19
  7552                           
  7553                           ;incstack = 0
  7554  0034A8  C0B4  F0B8         	movff	___ftadd@f1+2,??___ftadd
  7555  0034AC  0100               	movlb	0	; () banked
  7556  0034AE  6BB9               	clrf	(??___ftadd+1)& (0+255),b
  7557  0034B0  6BBA               	clrf	(??___ftadd+2)& (0+255),b
  7558  0034B2  0100               	movlb	0	; () banked
  7559  0034B4  35B3               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  7560  0034B6  0100               	movlb	0	; () banked
  7561  0034B8  37B8               	rlcf	??___ftadd& (0+255),f,b
  7562  0034BA  E301               	bnc	u4451
  7563  0034BC  81B9               	bsf	(??___ftadd+1)& (0+255),0,b
  7564  0034BE                     u4451:
  7565  0034BE  0100               	movlb	0	; () banked
  7566  0034C0  51B8               	movf	??___ftadd& (0+255),w,b
  7567  0034C2  0100               	movlb	0	; () banked
  7568  0034C4  6FBD               	movwf	___ftadd@exp1& (0+255),b
  7569  0034C6  C0B7  F0B8         	movff	___ftadd@f2+2,??___ftadd
  7570  0034CA  0100               	movlb	0	; () banked
  7571  0034CC  6BB9               	clrf	(??___ftadd+1)& (0+255),b
  7572  0034CE  6BBA               	clrf	(??___ftadd+2)& (0+255),b
  7573  0034D0  0100               	movlb	0	; () banked
  7574  0034D2  35B6               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  7575  0034D4  0100               	movlb	0	; () banked
  7576  0034D6  37B8               	rlcf	??___ftadd& (0+255),f,b
  7577  0034D8  E301               	bnc	u4461
  7578  0034DA  81B9               	bsf	(??___ftadd+1)& (0+255),0,b
  7579  0034DC                     u4461:
  7580  0034DC  0100               	movlb	0	; () banked
  7581  0034DE  51B8               	movf	??___ftadd& (0+255),w,b
  7582  0034E0  0100               	movlb	0	; () banked
  7583  0034E2  6FBC               	movwf	___ftadd@exp2& (0+255),b
  7584                           
  7585                           ; BSR set to: 0
  7586  0034E4  0100               	movlb	0	; () banked
  7587  0034E6  51BD               	movf	___ftadd@exp1& (0+255),w,b
  7588  0034E8  0100               	movlb	0	; () banked
  7589  0034EA  B4D8               	btfsc	status,2,c
  7590  0034EC  D011               	goto	l722
  7591                           
  7592                           ; BSR set to: 0
  7593  0034EE  0100               	movlb	0	; () banked
  7594  0034F0  51BC               	movf	___ftadd@exp2& (0+255),w,b
  7595  0034F2  0100               	movlb	0	; () banked
  7596  0034F4  5DBD               	subwf	___ftadd@exp1& (0+255),w,b
  7597  0034F6  B0D8               	btfsc	status,0,c
  7598  0034F8  D012               	goto	l3734
  7599                           
  7600                           ; BSR set to: 0
  7601  0034FA  0100               	movlb	0	; () banked
  7602  0034FC  51BD               	movf	___ftadd@exp1& (0+255),w,b
  7603  0034FE  0800               	sublw	0
  7604  003500  0100               	movlb	0	; () banked
  7605  003502  25BC               	addwf	___ftadd@exp2& (0+255),w,b
  7606  003504  0100               	movlb	0	; () banked
  7607  003506  6FB8               	movwf	??___ftadd& (0+255),b
  7608  003508  0E18               	movlw	24
  7609  00350A  0100               	movlb	0	; () banked
  7610  00350C  65B8               	cpfsgt	??___ftadd& (0+255),b
  7611  00350E  D007               	goto	l3734
  7612  003510                     l722:
  7613                           
  7614                           ; BSR set to: 0
  7615  003510  C0B5  F0B2         	movff	___ftadd@f2,?___ftadd
  7616  003514  C0B6  F0B3         	movff	___ftadd@f2+1,?___ftadd+1
  7617  003518  C0B7  F0B4         	movff	___ftadd@f2+2,?___ftadd+2
  7618  00351C  0012               	return	
  7619  00351E                     l3734:
  7620                           
  7621                           ; BSR set to: 0
  7622  00351E  0100               	movlb	0	; () banked
  7623  003520  51BC               	movf	___ftadd@exp2& (0+255),w,b
  7624  003522  0100               	movlb	0	; () banked
  7625  003524  B4D8               	btfsc	status,2,c
  7626  003526  D011               	goto	l726
  7627                           
  7628                           ; BSR set to: 0
  7629  003528  0100               	movlb	0	; () banked
  7630  00352A  51BD               	movf	___ftadd@exp1& (0+255),w,b
  7631  00352C  0100               	movlb	0	; () banked
  7632  00352E  5DBC               	subwf	___ftadd@exp2& (0+255),w,b
  7633  003530  B0D8               	btfsc	status,0,c
  7634  003532  D012               	goto	l3740
  7635                           
  7636                           ; BSR set to: 0
  7637  003534  0100               	movlb	0	; () banked
  7638  003536  51BC               	movf	___ftadd@exp2& (0+255),w,b
  7639  003538  0800               	sublw	0
  7640  00353A  0100               	movlb	0	; () banked
  7641  00353C  25BD               	addwf	___ftadd@exp1& (0+255),w,b
  7642  00353E  0100               	movlb	0	; () banked
  7643  003540  6FB8               	movwf	??___ftadd& (0+255),b
  7644  003542  0E18               	movlw	24
  7645  003544  0100               	movlb	0	; () banked
  7646  003546  65B8               	cpfsgt	??___ftadd& (0+255),b
  7647  003548  D007               	goto	l3740
  7648  00354A                     l726:
  7649                           
  7650                           ; BSR set to: 0
  7651  00354A  C0B2  F0B2         	movff	___ftadd@f1,?___ftadd
  7652  00354E  C0B3  F0B3         	movff	___ftadd@f1+1,?___ftadd+1
  7653  003552  C0B4  F0B4         	movff	___ftadd@f1+2,?___ftadd+2
  7654  003556  0012               	return	
  7655  003558                     l3740:
  7656                           
  7657                           ; BSR set to: 0
  7658  003558  0E06               	movlw	6
  7659  00355A  0100               	movlb	0	; () banked
  7660  00355C  6FBB               	movwf	___ftadd@sign& (0+255),b
  7661                           
  7662                           ; BSR set to: 0
  7663  00355E  0100               	movlb	0	; () banked
  7664  003560  AFB4               	btfss	(___ftadd@f1+2)& (0+255),7,b
  7665  003562  D002               	goto	l3746
  7666                           
  7667                           ; BSR set to: 0
  7668  003564  0100               	movlb	0	; () banked
  7669  003566  8FBB               	bsf	___ftadd@sign& (0+255),7,b
  7670  003568                     l3746:
  7671                           
  7672                           ; BSR set to: 0
  7673  003568  0100               	movlb	0	; () banked
  7674  00356A  AFB7               	btfss	(___ftadd@f2+2)& (0+255),7,b
  7675  00356C  D002               	goto	l728
  7676                           
  7677                           ; BSR set to: 0
  7678  00356E  0100               	movlb	0	; () banked
  7679  003570  8DBB               	bsf	___ftadd@sign& (0+255),6,b
  7680  003572                     l728:
  7681                           
  7682                           ; BSR set to: 0
  7683  003572  0100               	movlb	0	; () banked
  7684  003574  8FB3               	bsf	(___ftadd@f1+1)& (0+255),7,b
  7685                           
  7686                           ; BSR set to: 0
  7687  003576  0EFF               	movlw	255
  7688  003578  0100               	movlb	0	; () banked
  7689  00357A  17B2               	andwf	___ftadd@f1& (0+255),f,b
  7690  00357C  0EFF               	movlw	255
  7691  00357E  0100               	movlb	0	; () banked
  7692  003580  17B3               	andwf	(___ftadd@f1+1)& (0+255),f,b
  7693  003582  0E00               	movlw	0
  7694  003584  0100               	movlb	0	; () banked
  7695  003586  17B4               	andwf	(___ftadd@f1+2)& (0+255),f,b
  7696  003588  0100               	movlb	0	; () banked
  7697  00358A  8FB6               	bsf	(___ftadd@f2+1)& (0+255),7,b
  7698                           
  7699                           ; BSR set to: 0
  7700  00358C  0EFF               	movlw	255
  7701  00358E  0100               	movlb	0	; () banked
  7702  003590  17B5               	andwf	___ftadd@f2& (0+255),f,b
  7703  003592  0EFF               	movlw	255
  7704  003594  0100               	movlb	0	; () banked
  7705  003596  17B6               	andwf	(___ftadd@f2+1)& (0+255),f,b
  7706  003598  0E00               	movlw	0
  7707  00359A  0100               	movlb	0	; () banked
  7708  00359C  17B7               	andwf	(___ftadd@f2+2)& (0+255),f,b
  7709                           
  7710                           ; BSR set to: 0
  7711  00359E  0100               	movlb	0	; () banked
  7712  0035A0  51BC               	movf	___ftadd@exp2& (0+255),w,b
  7713  0035A2  0100               	movlb	0	; () banked
  7714  0035A4  5DBD               	subwf	___ftadd@exp1& (0+255),w,b
  7715  0035A6  B0D8               	btfsc	status,0,c
  7716  0035A8  D025               	goto	l3766
  7717  0035AA                     l3756:
  7718                           
  7719                           ; BSR set to: 0
  7720  0035AA  0100               	movlb	0	; () banked
  7721  0035AC  90D8               	bcf	status,0,c
  7722  0035AE  37B5               	rlcf	___ftadd@f2& (0+255),f,b
  7723  0035B0  37B6               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  7724  0035B2  37B7               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  7725  0035B4  0100               	movlb	0	; () banked
  7726  0035B6  07BC               	decf	___ftadd@exp2& (0+255),f,b
  7727                           
  7728                           ; BSR set to: 0
  7729  0035B8  0100               	movlb	0	; () banked
  7730  0035BA  51BD               	movf	___ftadd@exp1& (0+255),w,b
  7731  0035BC  0100               	movlb	0	; () banked
  7732  0035BE  19BC               	xorwf	___ftadd@exp2& (0+255),w,b
  7733  0035C0  B4D8               	btfsc	status,2,c
  7734  0035C2  D011               	goto	l3764
  7735                           
  7736                           ; BSR set to: 0
  7737  0035C4  0100               	movlb	0	; () banked
  7738  0035C6  07BB               	decf	___ftadd@sign& (0+255),f,b
  7739  0035C8  C0BB  F0B8         	movff	___ftadd@sign,??___ftadd
  7740  0035CC  0E07               	movlw	7
  7741  0035CE  0100               	movlb	0	; () banked
  7742  0035D0  17B8               	andwf	??___ftadd& (0+255),f,b
  7743  0035D2  B4D8               	btfsc	status,2,c
  7744  0035D4  D008               	goto	l3764
  7745  0035D6  D7E9               	goto	l3756
  7746  0035D8                     l3762:
  7747                           
  7748                           ; BSR set to: 0
  7749  0035D8  0100               	movlb	0	; () banked
  7750  0035DA  90D8               	bcf	status,0,c
  7751  0035DC  33B4               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  7752  0035DE  33B3               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  7753  0035E0  33B2               	rrcf	___ftadd@f1& (0+255),f,b
  7754  0035E2  0100               	movlb	0	; () banked
  7755  0035E4  2BBD               	incf	___ftadd@exp1& (0+255),f,b
  7756  0035E6                     l3764:
  7757                           
  7758                           ; BSR set to: 0
  7759  0035E6  0100               	movlb	0	; () banked
  7760  0035E8  51BC               	movf	___ftadd@exp2& (0+255),w,b
  7761  0035EA  0100               	movlb	0	; () banked
  7762  0035EC  19BD               	xorwf	___ftadd@exp1& (0+255),w,b
  7763  0035EE  B4D8               	btfsc	status,2,c
  7764  0035F0  D02B               	goto	l737
  7765  0035F2  D7F2               	goto	l3762
  7766  0035F4                     l3766:
  7767                           
  7768                           ; BSR set to: 0
  7769  0035F4  0100               	movlb	0	; () banked
  7770  0035F6  51BD               	movf	___ftadd@exp1& (0+255),w,b
  7771  0035F8  0100               	movlb	0	; () banked
  7772  0035FA  5DBC               	subwf	___ftadd@exp2& (0+255),w,b
  7773  0035FC  B0D8               	btfsc	status,0,c
  7774  0035FE  D024               	goto	l737
  7775  003600                     l3768:
  7776                           
  7777                           ; BSR set to: 0
  7778  003600  0100               	movlb	0	; () banked
  7779  003602  90D8               	bcf	status,0,c
  7780  003604  37B2               	rlcf	___ftadd@f1& (0+255),f,b
  7781  003606  37B3               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  7782  003608  37B4               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  7783  00360A  0100               	movlb	0	; () banked
  7784  00360C  07BD               	decf	___ftadd@exp1& (0+255),f,b
  7785                           
  7786                           ; BSR set to: 0
  7787  00360E  0100               	movlb	0	; () banked
  7788  003610  51BD               	movf	___ftadd@exp1& (0+255),w,b
  7789  003612  0100               	movlb	0	; () banked
  7790  003614  19BC               	xorwf	___ftadd@exp2& (0+255),w,b
  7791  003616  B4D8               	btfsc	status,2,c
  7792  003618  D011               	goto	l3776
  7793                           
  7794                           ; BSR set to: 0
  7795  00361A  0100               	movlb	0	; () banked
  7796  00361C  07BB               	decf	___ftadd@sign& (0+255),f,b
  7797  00361E  C0BB  F0B8         	movff	___ftadd@sign,??___ftadd
  7798  003622  0E07               	movlw	7
  7799  003624  0100               	movlb	0	; () banked
  7800  003626  17B8               	andwf	??___ftadd& (0+255),f,b
  7801  003628  B4D8               	btfsc	status,2,c
  7802  00362A  D008               	goto	l3776
  7803  00362C  D7E9               	goto	l3768
  7804  00362E                     l3774:
  7805                           
  7806                           ; BSR set to: 0
  7807  00362E  0100               	movlb	0	; () banked
  7808  003630  90D8               	bcf	status,0,c
  7809  003632  33B7               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  7810  003634  33B6               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  7811  003636  33B5               	rrcf	___ftadd@f2& (0+255),f,b
  7812  003638  0100               	movlb	0	; () banked
  7813  00363A  2BBC               	incf	___ftadd@exp2& (0+255),f,b
  7814  00363C                     l3776:
  7815                           
  7816                           ; BSR set to: 0
  7817  00363C  0100               	movlb	0	; () banked
  7818  00363E  51BC               	movf	___ftadd@exp2& (0+255),w,b
  7819  003640  0100               	movlb	0	; () banked
  7820  003642  19BD               	xorwf	___ftadd@exp1& (0+255),w,b
  7821  003644  A4D8               	btfss	status,2,c
  7822  003646  D7F3               	goto	l3774
  7823  003648                     l737:
  7824                           
  7825                           ; BSR set to: 0
  7826  003648  0100               	movlb	0	; () banked
  7827  00364A  AFBB               	btfss	___ftadd@sign& (0+255),7,b
  7828  00364C  D012               	goto	l746
  7829                           
  7830                           ; BSR set to: 0
  7831  00364E  0EFF               	movlw	255
  7832  003650  0100               	movlb	0	; () banked
  7833  003652  1BB2               	xorwf	___ftadd@f1& (0+255),f,b
  7834  003654  0EFF               	movlw	255
  7835  003656  0100               	movlb	0	; () banked
  7836  003658  1BB3               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  7837  00365A  0EFF               	movlw	255
  7838  00365C  0100               	movlb	0	; () banked
  7839  00365E  1BB4               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  7840  003660  0E01               	movlw	1
  7841  003662  0100               	movlb	0	; () banked
  7842  003664  27B2               	addwf	___ftadd@f1& (0+255),f,b
  7843  003666  0E00               	movlw	0
  7844  003668  0100               	movlb	0	; () banked
  7845  00366A  23B3               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  7846  00366C  0E00               	movlw	0
  7847  00366E  0100               	movlb	0	; () banked
  7848  003670  23B4               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  7849  003672                     l746:
  7850                           
  7851                           ; BSR set to: 0
  7852  003672  0100               	movlb	0	; () banked
  7853  003674  ADBB               	btfss	___ftadd@sign& (0+255),6,b
  7854  003676  D012               	goto	l3782
  7855                           
  7856                           ; BSR set to: 0
  7857  003678  0EFF               	movlw	255
  7858  00367A  0100               	movlb	0	; () banked
  7859  00367C  1BB5               	xorwf	___ftadd@f2& (0+255),f,b
  7860  00367E  0EFF               	movlw	255
  7861  003680  0100               	movlb	0	; () banked
  7862  003682  1BB6               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  7863  003684  0EFF               	movlw	255
  7864  003686  0100               	movlb	0	; () banked
  7865  003688  1BB7               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  7866  00368A  0E01               	movlw	1
  7867  00368C  0100               	movlb	0	; () banked
  7868  00368E  27B5               	addwf	___ftadd@f2& (0+255),f,b
  7869  003690  0E00               	movlw	0
  7870  003692  0100               	movlb	0	; () banked
  7871  003694  23B6               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7872  003696  0E00               	movlw	0
  7873  003698  0100               	movlb	0	; () banked
  7874  00369A  23B7               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7875  00369C                     l3782:
  7876                           
  7877                           ; BSR set to: 0
  7878  00369C  0E00               	movlw	0
  7879  00369E  0100               	movlb	0	; () banked
  7880  0036A0  6FBB               	movwf	___ftadd@sign& (0+255),b
  7881                           
  7882                           ; BSR set to: 0
  7883  0036A2  0100               	movlb	0	; () banked
  7884  0036A4  51B2               	movf	___ftadd@f1& (0+255),w,b
  7885  0036A6  0100               	movlb	0	; () banked
  7886  0036A8  27B5               	addwf	___ftadd@f2& (0+255),f,b
  7887  0036AA  0100               	movlb	0	; () banked
  7888  0036AC  51B3               	movf	(___ftadd@f1+1)& (0+255),w,b
  7889  0036AE  0100               	movlb	0	; () banked
  7890  0036B0  23B6               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7891  0036B2  0100               	movlb	0	; () banked
  7892  0036B4  51B4               	movf	(___ftadd@f1+2)& (0+255),w,b
  7893  0036B6  0100               	movlb	0	; () banked
  7894  0036B8  23B7               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7895                           
  7896                           ; BSR set to: 0
  7897  0036BA  0100               	movlb	0	; () banked
  7898  0036BC  AFB7               	btfss	(___ftadd@f2+2)& (0+255),7,b
  7899  0036BE  D015               	goto	l3792
  7900                           
  7901                           ; BSR set to: 0
  7902  0036C0  0EFF               	movlw	255
  7903  0036C2  0100               	movlb	0	; () banked
  7904  0036C4  1BB5               	xorwf	___ftadd@f2& (0+255),f,b
  7905  0036C6  0EFF               	movlw	255
  7906  0036C8  0100               	movlb	0	; () banked
  7907  0036CA  1BB6               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  7908  0036CC  0EFF               	movlw	255
  7909  0036CE  0100               	movlb	0	; () banked
  7910  0036D0  1BB7               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  7911  0036D2  0E01               	movlw	1
  7912  0036D4  0100               	movlb	0	; () banked
  7913  0036D6  27B5               	addwf	___ftadd@f2& (0+255),f,b
  7914  0036D8  0E00               	movlw	0
  7915  0036DA  0100               	movlb	0	; () banked
  7916  0036DC  23B6               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7917  0036DE  0E00               	movlw	0
  7918  0036E0  0100               	movlb	0	; () banked
  7919  0036E2  23B7               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7920                           
  7921                           ; BSR set to: 0
  7922  0036E4  0E01               	movlw	1
  7923  0036E6  0100               	movlb	0	; () banked
  7924  0036E8  6FBB               	movwf	___ftadd@sign& (0+255),b
  7925  0036EA                     l3792:
  7926                           
  7927                           ; BSR set to: 0
  7928  0036EA  C0B5  F085         	movff	___ftadd@f2,___ftpack@arg
  7929  0036EE  C0B6  F086         	movff	___ftadd@f2+1,___ftpack@arg+1
  7930  0036F2  C0B7  F087         	movff	___ftadd@f2+2,___ftpack@arg+2
  7931  0036F6  C0BD  F088         	movff	___ftadd@exp1,___ftpack@exp
  7932  0036FA  C0BB  F089         	movff	___ftadd@sign,___ftpack@sign
  7933  0036FE  EC92  F021         	call	___ftpack	;wreg free
  7934  003702  C085  F0B2         	movff	?___ftpack,?___ftadd
  7935  003706  C086  F0B3         	movff	?___ftpack+1,?___ftadd+1
  7936  00370A  C087  F0B4         	movff	?___ftpack+2,?___ftadd+2
  7937  00370E  0012               	return	
  7938  003710                     __end_of___ftadd:
  7939                           	opt stack 0
  7940                           tosu	equ	0xFFF
  7941                           tosh	equ	0xFFE
  7942                           tosl	equ	0xFFD
  7943                           pclath	equ	0xFFA
  7944                           tblptru	equ	0xFF8
  7945                           tblptrh	equ	0xFF7
  7946                           tblptrl	equ	0xFF6
  7947                           tablat	equ	0xFF5
  7948                           prodh	equ	0xFF4
  7949                           prodl	equ	0xFF3
  7950                           intcon	equ	0xFF2
  7951                           postinc0	equ	0xFEE
  7952                           wreg	equ	0xFE8
  7953                           indf2	equ	0xFDF
  7954                           postinc2	equ	0xFDE
  7955                           postdec2	equ	0xFDD
  7956                           fsr2h	equ	0xFDA
  7957                           fsr2l	equ	0xFD9
  7958                           status	equ	0xFD8
  7959                           
  7960 ;; *************** function ___ftpack *****************
  7961 ;; Defined at:
  7962 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  7963 ;; Parameters:    Size  Location     Type
  7964 ;;  arg             3   37[BANK0 ] unsigned um
  7965 ;;  exp             1   40[BANK0 ] unsigned char 
  7966 ;;  sign            1   41[BANK0 ] unsigned char 
  7967 ;; Auto vars:     Size  Location     Type
  7968 ;;		None
  7969 ;; Return value:  Size  Location     Type
  7970 ;;                  3   37[BANK0 ] float 
  7971 ;; Registers used:
  7972 ;;		wreg, status,2, status,0
  7973 ;; Tracked objects:
  7974 ;;		On entry : 0/0
  7975 ;;		On exit  : 0/0
  7976 ;;		Unchanged: 0/0
  7977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7978 ;;      Params:         0       5       0       0       0       0       0
  7979 ;;      Locals:         0       0       0       0       0       0       0
  7980 ;;      Temps:          0       3       0       0       0       0       0
  7981 ;;      Totals:         0       8       0       0       0       0       0
  7982 ;;Total ram usage:        8 bytes
  7983 ;; Hardware stack levels used:    1
  7984 ;; Hardware stack levels required when called:    7
  7985 ;; This function calls:
  7986 ;;		Nothing
  7987 ;; This function is called by:
  7988 ;;		___ftadd
  7989 ;;		___ftmul
  7990 ;;		___lltoft
  7991 ;; This function uses a non-reentrant model
  7992 ;;
  7993                           
  7994                           	psect	text20
  7995  004324                     __ptext20:
  7996                           	opt stack 0
  7997  004324                     ___ftpack:
  7998                           	opt stack 19
  7999                           
  8000                           ;incstack = 0
  8001  004324  0100               	movlb	0	; () banked
  8002  004326  5188               	movf	___ftpack@exp& (0+255),w,b
  8003  004328  0100               	movlb	0	; () banked
  8004  00432A  B4D8               	btfsc	status,2,c
  8005  00432C  D008               	goto	l3460
  8006                           
  8007                           ; BSR set to: 0
  8008  00432E  0100               	movlb	0	; () banked
  8009  004330  5185               	movf	___ftpack@arg& (0+255),w,b
  8010  004332  0100               	movlb	0	; () banked
  8011  004334  1186               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  8012  004336  0100               	movlb	0	; () banked
  8013  004338  1187               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  8014  00433A  A4D8               	btfss	status,2,c
  8015  00433C  D011               	goto	l3466
  8016  00433E                     l3460:
  8017                           
  8018                           ; BSR set to: 0
  8019  00433E  0E00               	movlw	0
  8020  004340  0100               	movlb	0	; () banked
  8021  004342  6F85               	movwf	?___ftpack& (0+255),b
  8022  004344  0E00               	movlw	0
  8023  004346  0100               	movlb	0	; () banked
  8024  004348  6F86               	movwf	(?___ftpack+1)& (0+255),b
  8025  00434A  0E00               	movlw	0
  8026  00434C  0100               	movlb	0	; () banked
  8027  00434E  6F87               	movwf	(?___ftpack+2)& (0+255),b
  8028                           
  8029                           ; BSR set to: 0
  8030  004350  0012               	return	
  8031  004352                     l3464:
  8032                           
  8033                           ; BSR set to: 0
  8034  004352  0100               	movlb	0	; () banked
  8035  004354  2B88               	incf	___ftpack@exp& (0+255),f,b
  8036  004356  0100               	movlb	0	; () banked
  8037  004358  90D8               	bcf	status,0,c
  8038  00435A  3387               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  8039  00435C  3386               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  8040  00435E  3385               	rrcf	___ftpack@arg& (0+255),f,b
  8041  004360                     l3466:
  8042                           
  8043                           ; BSR set to: 0
  8044  004360  0E00               	movlw	0
  8045  004362  0100               	movlb	0	; () banked
  8046  004364  1585               	andwf	___ftpack@arg& (0+255),w,b
  8047  004366  0100               	movlb	0	; () banked
  8048  004368  6F8A               	movwf	??___ftpack& (0+255),b
  8049  00436A  0E00               	movlw	0
  8050  00436C  0100               	movlb	0	; () banked
  8051  00436E  1586               	andwf	(___ftpack@arg+1)& (0+255),w,b
  8052  004370  0100               	movlb	0	; () banked
  8053  004372  6F8B               	movwf	(??___ftpack+1)& (0+255),b
  8054  004374  0EFE               	movlw	254
  8055  004376  0100               	movlb	0	; () banked
  8056  004378  1587               	andwf	(___ftpack@arg+2)& (0+255),w,b
  8057  00437A  0100               	movlb	0	; () banked
  8058  00437C  6F8C               	movwf	(??___ftpack+2)& (0+255),b
  8059  00437E  0100               	movlb	0	; () banked
  8060  004380  518A               	movf	??___ftpack& (0+255),w,b
  8061  004382  0100               	movlb	0	; () banked
  8062  004384  118B               	iorwf	(??___ftpack+1)& (0+255),w,b
  8063  004386  0100               	movlb	0	; () banked
  8064  004388  118C               	iorwf	(??___ftpack+2)& (0+255),w,b
  8065  00438A  B4D8               	btfsc	status,2,c
  8066  00438C  D011               	goto	l3472
  8067  00438E  D7E1               	goto	l3464
  8068  004390                     l3468:
  8069                           
  8070                           ; BSR set to: 0
  8071  004390  0100               	movlb	0	; () banked
  8072  004392  2B88               	incf	___ftpack@exp& (0+255),f,b
  8073                           
  8074                           ; BSR set to: 0
  8075  004394  0E01               	movlw	1
  8076  004396  0100               	movlb	0	; () banked
  8077  004398  2785               	addwf	___ftpack@arg& (0+255),f,b
  8078  00439A  0E00               	movlw	0
  8079  00439C  0100               	movlb	0	; () banked
  8080  00439E  2386               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  8081  0043A0  0E00               	movlw	0
  8082  0043A2  0100               	movlb	0	; () banked
  8083  0043A4  2387               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  8084  0043A6  0100               	movlb	0	; () banked
  8085  0043A8  90D8               	bcf	status,0,c
  8086  0043AA  3387               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  8087  0043AC  3386               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  8088  0043AE  3385               	rrcf	___ftpack@arg& (0+255),f,b
  8089  0043B0                     l3472:
  8090                           
  8091                           ; BSR set to: 0
  8092  0043B0  0E00               	movlw	0
  8093  0043B2  0100               	movlb	0	; () banked
  8094  0043B4  1585               	andwf	___ftpack@arg& (0+255),w,b
  8095  0043B6  0100               	movlb	0	; () banked
  8096  0043B8  6F8A               	movwf	??___ftpack& (0+255),b
  8097  0043BA  0E00               	movlw	0
  8098  0043BC  0100               	movlb	0	; () banked
  8099  0043BE  1586               	andwf	(___ftpack@arg+1)& (0+255),w,b
  8100  0043C0  0100               	movlb	0	; () banked
  8101  0043C2  6F8B               	movwf	(??___ftpack+1)& (0+255),b
  8102  0043C4  0EFF               	movlw	255
  8103  0043C6  0100               	movlb	0	; () banked
  8104  0043C8  1587               	andwf	(___ftpack@arg+2)& (0+255),w,b
  8105  0043CA  0100               	movlb	0	; () banked
  8106  0043CC  6F8C               	movwf	(??___ftpack+2)& (0+255),b
  8107  0043CE  0100               	movlb	0	; () banked
  8108  0043D0  518A               	movf	??___ftpack& (0+255),w,b
  8109  0043D2  0100               	movlb	0	; () banked
  8110  0043D4  118B               	iorwf	(??___ftpack+1)& (0+255),w,b
  8111  0043D6  0100               	movlb	0	; () banked
  8112  0043D8  118C               	iorwf	(??___ftpack+2)& (0+255),w,b
  8113  0043DA  B4D8               	btfsc	status,2,c
  8114  0043DC  D008               	goto	l3476
  8115  0043DE  D7D8               	goto	l3468
  8116  0043E0                     l3474:
  8117                           
  8118                           ; BSR set to: 0
  8119  0043E0  0100               	movlb	0	; () banked
  8120  0043E2  0788               	decf	___ftpack@exp& (0+255),f,b
  8121  0043E4  0100               	movlb	0	; () banked
  8122  0043E6  90D8               	bcf	status,0,c
  8123  0043E8  3785               	rlcf	___ftpack@arg& (0+255),f,b
  8124  0043EA  3786               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  8125  0043EC  3787               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  8126  0043EE                     l3476:
  8127                           
  8128                           ; BSR set to: 0
  8129  0043EE  0100               	movlb	0	; () banked
  8130  0043F0  BF86               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  8131  0043F2  D004               	goto	l699
  8132                           
  8133                           ; BSR set to: 0
  8134  0043F4  0E02               	movlw	2
  8135  0043F6  0100               	movlb	0	; () banked
  8136  0043F8  6188               	cpfslt	___ftpack@exp& (0+255),b
  8137  0043FA  D7F2               	goto	l3474
  8138  0043FC                     l699:
  8139                           
  8140                           ; BSR set to: 0
  8141  0043FC  0100               	movlb	0	; () banked
  8142  0043FE  B188               	btfsc	___ftpack@exp& (0+255),0,b
  8143  004400  D002               	goto	l3482
  8144                           
  8145                           ; BSR set to: 0
  8146  004402  0100               	movlb	0	; () banked
  8147  004404  9F86               	bcf	(___ftpack@arg+1)& (0+255),7,b
  8148  004406                     l3482:
  8149                           
  8150                           ; BSR set to: 0
  8151  004406  0100               	movlb	0	; () banked
  8152  004408  90D8               	bcf	status,0,c
  8153  00440A  3388               	rrcf	___ftpack@exp& (0+255),f,b
  8154  00440C  0100               	movlb	0	; () banked
  8155  00440E  5188               	movf	___ftpack@exp& (0+255),w,b
  8156  004410  0100               	movlb	0	; () banked
  8157  004412  1387               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  8158                           
  8159                           ; BSR set to: 0
  8160  004414  0100               	movlb	0	; () banked
  8161  004416  5189               	movf	___ftpack@sign& (0+255),w,b
  8162  004418  0100               	movlb	0	; () banked
  8163  00441A  B4D8               	btfsc	status,2,c
  8164  00441C  D002               	goto	l3488
  8165                           
  8166                           ; BSR set to: 0
  8167  00441E  0100               	movlb	0	; () banked
  8168  004420  8F87               	bsf	(___ftpack@arg+2)& (0+255),7,b
  8169  004422                     l3488:
  8170                           
  8171                           ; BSR set to: 0
  8172  004422  C085  F085         	movff	___ftpack@arg,?___ftpack
  8173  004426  C086  F086         	movff	___ftpack@arg+1,?___ftpack+1
  8174  00442A  C087  F087         	movff	___ftpack@arg+2,?___ftpack+2
  8175  00442E  0012               	return	
  8176  004430                     __end_of___ftpack:
  8177                           	opt stack 0
  8178                           tosu	equ	0xFFF
  8179                           tosh	equ	0xFFE
  8180                           tosl	equ	0xFFD
  8181                           pclath	equ	0xFFA
  8182                           tblptru	equ	0xFF8
  8183                           tblptrh	equ	0xFF7
  8184                           tblptrl	equ	0xFF6
  8185                           tablat	equ	0xFF5
  8186                           prodh	equ	0xFF4
  8187                           prodl	equ	0xFF3
  8188                           intcon	equ	0xFF2
  8189                           postinc0	equ	0xFEE
  8190                           wreg	equ	0xFE8
  8191                           indf2	equ	0xFDF
  8192                           postinc2	equ	0xFDE
  8193                           postdec2	equ	0xFDD
  8194                           fsr2h	equ	0xFDA
  8195                           fsr2l	equ	0xFD9
  8196                           status	equ	0xFD8
  8197                           
  8198 ;; *************** function ___ftneg *****************
  8199 ;; Defined at:
  8200 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
  8201 ;; Parameters:    Size  Location     Type
  8202 ;;  f1              3   37[BANK0 ] float 
  8203 ;; Auto vars:     Size  Location     Type
  8204 ;;		None
  8205 ;; Return value:  Size  Location     Type
  8206 ;;                  3   37[BANK0 ] float 
  8207 ;; Registers used:
  8208 ;;		wreg, status,2, status,0
  8209 ;; Tracked objects:
  8210 ;;		On entry : 0/0
  8211 ;;		On exit  : 0/0
  8212 ;;		Unchanged: 0/0
  8213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8214 ;;      Params:         0       3       0       0       0       0       0
  8215 ;;      Locals:         0       0       0       0       0       0       0
  8216 ;;      Temps:          0       0       0       0       0       0       0
  8217 ;;      Totals:         0       3       0       0       0       0       0
  8218 ;;Total ram usage:        3 bytes
  8219 ;; Hardware stack levels used:    1
  8220 ;; Hardware stack levels required when called:    7
  8221 ;; This function calls:
  8222 ;;		Nothing
  8223 ;; This function is called by:
  8224 ;;		__doprnt
  8225 ;; This function uses a non-reentrant model
  8226 ;;
  8227                           
  8228                           	psect	text21
  8229  005322                     __ptext21:
  8230                           	opt stack 0
  8231  005322                     ___ftneg:
  8232                           	opt stack 21
  8233                           
  8234                           ; BSR set to: 0
  8235                           ;incstack = 0
  8236  005322  0100               	movlb	0	; () banked
  8237  005324  5185               	movf	___ftneg@f1& (0+255),w,b
  8238  005326  0100               	movlb	0	; () banked
  8239  005328  1186               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  8240  00532A  0100               	movlb	0	; () banked
  8241  00532C  1187               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  8242  00532E  B4D8               	btfsc	status,2,c
  8243  005330  D009               	goto	l796
  8244                           
  8245                           ; BSR set to: 0
  8246  005332  0E00               	movlw	0
  8247  005334  0100               	movlb	0	; () banked
  8248  005336  1B85               	xorwf	___ftneg@f1& (0+255),f,b
  8249  005338  0E00               	movlw	0
  8250  00533A  0100               	movlb	0	; () banked
  8251  00533C  1B86               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  8252  00533E  0E80               	movlw	128
  8253  005340  0100               	movlb	0	; () banked
  8254  005342  1B87               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  8255  005344                     l796:
  8256                           
  8257                           ; BSR set to: 0
  8258  005344  C085  F085         	movff	___ftneg@f1,?___ftneg
  8259  005348  C086  F086         	movff	___ftneg@f1+1,?___ftneg+1
  8260  00534C  C087  F087         	movff	___ftneg@f1+2,?___ftneg+2
  8261                           
  8262                           ; BSR set to: 0
  8263  005350  0012               	return		;funcret
  8264  005352                     __end_of___ftneg:
  8265                           	opt stack 0
  8266                           tosu	equ	0xFFF
  8267                           tosh	equ	0xFFE
  8268                           tosl	equ	0xFFD
  8269                           pclath	equ	0xFFA
  8270                           tblptru	equ	0xFF8
  8271                           tblptrh	equ	0xFF7
  8272                           tblptrl	equ	0xFF6
  8273                           tablat	equ	0xFF5
  8274                           prodh	equ	0xFF4
  8275                           prodl	equ	0xFF3
  8276                           intcon	equ	0xFF2
  8277                           postinc0	equ	0xFEE
  8278                           wreg	equ	0xFE8
  8279                           indf2	equ	0xFDF
  8280                           postinc2	equ	0xFDE
  8281                           postdec2	equ	0xFDD
  8282                           fsr2h	equ	0xFDA
  8283                           fsr2l	equ	0xFD9
  8284                           status	equ	0xFD8
  8285                           
  8286 ;; *************** function ___ftge *****************
  8287 ;; Defined at:
  8288 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  8289 ;; Parameters:    Size  Location     Type
  8290 ;;  ff1             3   37[BANK0 ] float 
  8291 ;;  ff2             3   40[BANK0 ] float 
  8292 ;; Auto vars:     Size  Location     Type
  8293 ;;		None
  8294 ;; Return value:  Size  Location     Type
  8295 ;;		None               void
  8296 ;; Registers used:
  8297 ;;		wreg, status,2, status,0
  8298 ;; Tracked objects:
  8299 ;;		On entry : 0/0
  8300 ;;		On exit  : 0/0
  8301 ;;		Unchanged: 0/0
  8302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8303 ;;      Params:         0       6       0       0       0       0       0
  8304 ;;      Locals:         0       0       0       0       0       0       0
  8305 ;;      Temps:          0       3       0       0       0       0       0
  8306 ;;      Totals:         0       9       0       0       0       0       0
  8307 ;;Total ram usage:        9 bytes
  8308 ;; Hardware stack levels used:    1
  8309 ;; Hardware stack levels required when called:    7
  8310 ;; This function calls:
  8311 ;;		Nothing
  8312 ;; This function is called by:
  8313 ;;		__doprnt
  8314 ;; This function uses a non-reentrant model
  8315 ;;
  8316                           
  8317                           	psect	text22
  8318  0046FE                     __ptext22:
  8319                           	opt stack 0
  8320  0046FE                     ___ftge:
  8321                           	opt stack 21
  8322                           
  8323                           ; BSR set to: 0
  8324                           ;incstack = 0
  8325  0046FE  0100               	movlb	0	; () banked
  8326  004700  AF87               	btfss	(___ftge@ff1+2)& (0+255),7,b
  8327  004702  D01D               	goto	l4476
  8328                           
  8329                           ; BSR set to: 0
  8330  004704  C085  F08B         	movff	___ftge@ff1,??___ftge
  8331  004708  C086  F08C         	movff	___ftge@ff1+1,??___ftge+1
  8332  00470C  C087  F08D         	movff	___ftge@ff1+2,??___ftge+2
  8333  004710  0100               	movlb	0	; () banked
  8334  004712  1F8B               	comf	??___ftge& (0+255),f,b
  8335  004714  1F8C               	comf	(??___ftge+1)& (0+255),f,b
  8336  004716  1F8D               	comf	(??___ftge+2)& (0+255),f,b
  8337  004718  2B8B               	incf	??___ftge& (0+255),f,b
  8338  00471A  0E00               	movlw	0
  8339  00471C  238C               	addwfc	(??___ftge+1)& (0+255),f,b
  8340  00471E  238D               	addwfc	(??___ftge+2)& (0+255),f,b
  8341  004720  0E00               	movlw	0
  8342  004722  0100               	movlb	0	; () banked
  8343  004724  258B               	addwf	??___ftge& (0+255),w,b
  8344  004726  0100               	movlb	0	; () banked
  8345  004728  6F85               	movwf	___ftge@ff1& (0+255),b
  8346  00472A  0E00               	movlw	0
  8347  00472C  0100               	movlb	0	; () banked
  8348  00472E  218C               	addwfc	(??___ftge+1)& (0+255),w,b
  8349  004730  0100               	movlb	0	; () banked
  8350  004732  6F86               	movwf	(___ftge@ff1+1)& (0+255),b
  8351  004734  0E80               	movlw	128
  8352  004736  0100               	movlb	0	; () banked
  8353  004738  218D               	addwfc	(??___ftge+2)& (0+255),w,b
  8354  00473A  0100               	movlb	0	; () banked
  8355  00473C  6F87               	movwf	(___ftge@ff1+2)& (0+255),b
  8356  00473E                     l4476:
  8357                           
  8358                           ; BSR set to: 0
  8359  00473E  0100               	movlb	0	; () banked
  8360  004740  AF8A               	btfss	(___ftge@ff2+2)& (0+255),7,b
  8361  004742  D01D               	goto	l4480
  8362                           
  8363                           ; BSR set to: 0
  8364  004744  C088  F08B         	movff	___ftge@ff2,??___ftge
  8365  004748  C089  F08C         	movff	___ftge@ff2+1,??___ftge+1
  8366  00474C  C08A  F08D         	movff	___ftge@ff2+2,??___ftge+2
  8367  004750  0100               	movlb	0	; () banked
  8368  004752  1F8B               	comf	??___ftge& (0+255),f,b
  8369  004754  1F8C               	comf	(??___ftge+1)& (0+255),f,b
  8370  004756  1F8D               	comf	(??___ftge+2)& (0+255),f,b
  8371  004758  2B8B               	incf	??___ftge& (0+255),f,b
  8372  00475A  0E00               	movlw	0
  8373  00475C  238C               	addwfc	(??___ftge+1)& (0+255),f,b
  8374  00475E  238D               	addwfc	(??___ftge+2)& (0+255),f,b
  8375  004760  0E00               	movlw	0
  8376  004762  0100               	movlb	0	; () banked
  8377  004764  258B               	addwf	??___ftge& (0+255),w,b
  8378  004766  0100               	movlb	0	; () banked
  8379  004768  6F88               	movwf	___ftge@ff2& (0+255),b
  8380  00476A  0E00               	movlw	0
  8381  00476C  0100               	movlb	0	; () banked
  8382  00476E  218C               	addwfc	(??___ftge+1)& (0+255),w,b
  8383  004770  0100               	movlb	0	; () banked
  8384  004772  6F89               	movwf	(___ftge@ff2+1)& (0+255),b
  8385  004774  0E80               	movlw	128
  8386  004776  0100               	movlb	0	; () banked
  8387  004778  218D               	addwfc	(??___ftge+2)& (0+255),w,b
  8388  00477A  0100               	movlb	0	; () banked
  8389  00477C  6F8A               	movwf	(___ftge@ff2+2)& (0+255),b
  8390  00477E                     l4480:
  8391                           
  8392                           ; BSR set to: 0
  8393  00477E  0E00               	movlw	0
  8394  004780  0100               	movlb	0	; () banked
  8395  004782  1B85               	xorwf	___ftge@ff1& (0+255),f,b
  8396  004784  0E00               	movlw	0
  8397  004786  0100               	movlb	0	; () banked
  8398  004788  1B86               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  8399  00478A  0E80               	movlw	128
  8400  00478C  0100               	movlb	0	; () banked
  8401  00478E  1B87               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  8402                           
  8403                           ; BSR set to: 0
  8404  004790  0E00               	movlw	0
  8405  004792  0100               	movlb	0	; () banked
  8406  004794  1B88               	xorwf	___ftge@ff2& (0+255),f,b
  8407  004796  0E00               	movlw	0
  8408  004798  0100               	movlb	0	; () banked
  8409  00479A  1B89               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  8410  00479C  0E80               	movlw	128
  8411  00479E  0100               	movlb	0	; () banked
  8412  0047A0  1B8A               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  8413  0047A2  0100               	movlb	0	; () banked
  8414  0047A4  5188               	movf	___ftge@ff2& (0+255),w,b
  8415  0047A6  0100               	movlb	0	; () banked
  8416  0047A8  5D85               	subwf	___ftge@ff1& (0+255),w,b
  8417  0047AA  0100               	movlb	0	; () banked
  8418  0047AC  5189               	movf	(___ftge@ff2+1)& (0+255),w,b
  8419  0047AE  0100               	movlb	0	; () banked
  8420  0047B0  5986               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  8421  0047B2  0100               	movlb	0	; () banked
  8422  0047B4  518A               	movf	(___ftge@ff2+2)& (0+255),w,b
  8423  0047B6  0100               	movlb	0	; () banked
  8424  0047B8  5987               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  8425  0047BA  B0D8               	btfsc	status,0,c
  8426  0047BC  D002               	goto	l4486
  8427                           
  8428                           ; BSR set to: 0
  8429  0047BE  90D8               	bcf	status,0,c
  8430  0047C0  0012               	return	
  8431  0047C2                     l4486:
  8432                           
  8433                           ; BSR set to: 0
  8434  0047C2  80D8               	bsf	status,0,c
  8435                           
  8436                           ; BSR set to: 0
  8437  0047C4  0012               	return	
  8438  0047C6                     __end_of___ftge:
  8439                           	opt stack 0
  8440                           tosu	equ	0xFFF
  8441                           tosh	equ	0xFFE
  8442                           tosl	equ	0xFFD
  8443                           pclath	equ	0xFFA
  8444                           tblptru	equ	0xFF8
  8445                           tblptrh	equ	0xFF7
  8446                           tblptrl	equ	0xFF6
  8447                           tablat	equ	0xFF5
  8448                           prodh	equ	0xFF4
  8449                           prodl	equ	0xFF3
  8450                           intcon	equ	0xFF2
  8451                           postinc0	equ	0xFEE
  8452                           wreg	equ	0xFE8
  8453                           indf2	equ	0xFDF
  8454                           postinc2	equ	0xFDE
  8455                           postdec2	equ	0xFDD
  8456                           fsr2h	equ	0xFDA
  8457                           fsr2l	equ	0xFD9
  8458                           status	equ	0xFD8
  8459                           
  8460 ;; *************** function _lcd_sendStringToPos *****************
  8461 ;; Defined at:
  8462 ;;		line 81 in file "lcd.c"
  8463 ;; Parameters:    Size  Location     Type
  8464 ;;  x               1    wreg     unsigned char 
  8465 ;;  y               1   45[BANK0 ] unsigned char 
  8466 ;;  charString      2   46[BANK0 ] PTR const unsigned char 
  8467 ;;		 -> main@cap_string(16), 
  8468 ;; Auto vars:     Size  Location     Type
  8469 ;;  x               1   48[BANK0 ] unsigned char 
  8470 ;; Return value:  Size  Location     Type
  8471 ;;                  1    wreg      void 
  8472 ;; Registers used:
  8473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8474 ;; Tracked objects:
  8475 ;;		On entry : 0/0
  8476 ;;		On exit  : 0/0
  8477 ;;		Unchanged: 0/0
  8478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8479 ;;      Params:         0       3       0       0       0       0       0
  8480 ;;      Locals:         0       1       0       0       0       0       0
  8481 ;;      Temps:          0       0       0       0       0       0       0
  8482 ;;      Totals:         0       4       0       0       0       0       0
  8483 ;;Total ram usage:        4 bytes
  8484 ;; Hardware stack levels used:    1
  8485 ;; Hardware stack levels required when called:   10
  8486 ;; This function calls:
  8487 ;;		_lcd_sendString
  8488 ;;		_lcd_setPosition
  8489 ;; This function is called by:
  8490 ;;		_main
  8491 ;; This function uses a non-reentrant model
  8492 ;;
  8493                           
  8494                           	psect	text23
  8495  005440                     __ptext23:
  8496                           	opt stack 0
  8497  005440                     _lcd_sendStringToPos:
  8498                           	opt stack 20
  8499                           
  8500                           ; BSR set to: 0
  8501                           ;incstack = 0
  8502                           ;lcd_sendStringToPos@x stored from wreg
  8503  005440  0100               	movlb	0	; () banked
  8504  005442  6F90               	movwf	lcd_sendStringToPos@x& (0+255),b
  8505                           
  8506                           ;lcd.c: 83: lcd_setPosition(x, y);
  8507  005444  C08D  F088         	movff	lcd_sendStringToPos@y,lcd_setPosition@y
  8508  005448  0100               	movlb	0	; () banked
  8509  00544A  5190               	movf	lcd_sendStringToPos@x& (0+255),w,b
  8510  00544C  EC2F  F027         	call	_lcd_setPosition
  8511                           
  8512                           ;lcd.c: 84: lcd_sendString(charString);
  8513  005450  C08E  F089         	movff	lcd_sendStringToPos@charString,lcd_sendString@a
  8514  005454  C08F  F08A         	movff	lcd_sendStringToPos@charString+1,lcd_sendString@a+1
  8515  005458  EC7B  F028         	call	_lcd_sendString	;wreg free
  8516  00545C  0012               	return		;funcret
  8517  00545E                     __end_of_lcd_sendStringToPos:
  8518                           	opt stack 0
  8519                           tosu	equ	0xFFF
  8520                           tosh	equ	0xFFE
  8521                           tosl	equ	0xFFD
  8522                           pclath	equ	0xFFA
  8523                           tblptru	equ	0xFF8
  8524                           tblptrh	equ	0xFF7
  8525                           tblptrl	equ	0xFF6
  8526                           tablat	equ	0xFF5
  8527                           prodh	equ	0xFF4
  8528                           prodl	equ	0xFF3
  8529                           intcon	equ	0xFF2
  8530                           postinc0	equ	0xFEE
  8531                           wreg	equ	0xFE8
  8532                           indf2	equ	0xFDF
  8533                           postinc2	equ	0xFDE
  8534                           postdec2	equ	0xFDD
  8535                           fsr2h	equ	0xFDA
  8536                           fsr2l	equ	0xFD9
  8537                           status	equ	0xFD8
  8538                           
  8539 ;; *************** function _lcd_setPosition *****************
  8540 ;; Defined at:
  8541 ;;		line 18 in file "lcd.c"
  8542 ;; Parameters:    Size  Location     Type
  8543 ;;  x               1    wreg     unsigned char 
  8544 ;;  y               1   40[BANK0 ] unsigned char 
  8545 ;; Auto vars:     Size  Location     Type
  8546 ;;  x               1   41[BANK0 ] unsigned char 
  8547 ;;  temp            1   44[BANK0 ] unsigned char 
  8548 ;;  j               1   43[BANK0 ] unsigned char 
  8549 ;;  i               1   42[BANK0 ] unsigned char 
  8550 ;; Return value:  Size  Location     Type
  8551 ;;                  1    wreg      void 
  8552 ;; Registers used:
  8553 ;;		wreg, status,2, status,0, cstack
  8554 ;; Tracked objects:
  8555 ;;		On entry : 0/0
  8556 ;;		On exit  : 0/0
  8557 ;;		Unchanged: 0/0
  8558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8559 ;;      Params:         0       1       0       0       0       0       0
  8560 ;;      Locals:         0       4       0       0       0       0       0
  8561 ;;      Temps:          0       0       0       0       0       0       0
  8562 ;;      Totals:         0       5       0       0       0       0       0
  8563 ;;Total ram usage:        5 bytes
  8564 ;; Hardware stack levels used:    1
  8565 ;; Hardware stack levels required when called:    9
  8566 ;; This function calls:
  8567 ;;		_lcd_sendCommand
  8568 ;; This function is called by:
  8569 ;;		_lcd_sendStringToPos
  8570 ;;		_lcd_sendIntToPos
  8571 ;;		_lcd_sendFloatToPos
  8572 ;;		_lcd_sendUIntToPos
  8573 ;; This function uses a non-reentrant model
  8574 ;;
  8575                           
  8576                           	psect	text24
  8577  004E5E                     __ptext24:
  8578                           	opt stack 0
  8579  004E5E                     _lcd_setPosition:
  8580                           	opt stack 20
  8581                           
  8582                           ;incstack = 0
  8583                           ;lcd_setPosition@x stored from wreg
  8584  004E5E  0100               	movlb	0	; () banked
  8585  004E60  6F89               	movwf	lcd_setPosition@x& (0+255),b
  8586                           
  8587                           ;lcd.c: 20: unsigned char temp, i, j;
  8588                           ;lcd.c: 21: if(y == 1)
  8589  004E62  0100               	movlb	0	; () banked
  8590  004E64  0588               	decf	lcd_setPosition@y& (0+255),w,b
  8591  004E66  A4D8               	btfss	status,2,c
  8592  004E68  D018               	goto	l5032
  8593                           
  8594                           ; BSR set to: 0
  8595                           ;lcd.c: 22: {
  8596                           ;lcd.c: 23: temp = 0x80 + x - 1;
  8597  004E6A  0100               	movlb	0	; () banked
  8598  004E6C  5189               	movf	lcd_setPosition@x& (0+255),w,b
  8599  004E6E  0F7F               	addlw	127
  8600  004E70  0100               	movlb	0	; () banked
  8601  004E72  6F8C               	movwf	lcd_setPosition@temp& (0+255),b
  8602                           
  8603                           ;lcd.c: 24: i = temp>>4;
  8604  004E74  0100               	movlb	0	; () banked
  8605  004E76  398C               	swapf	lcd_setPosition@temp& (0+255),w,b
  8606  004E78  0B0F               	andlw	15
  8607  004E7A  0100               	movlb	0	; () banked
  8608  004E7C  6F8A               	movwf	lcd_setPosition@i& (0+255),b
  8609                           
  8610                           ;lcd.c: 25: j = temp & 0x0F;
  8611  004E7E  0100               	movlb	0	; () banked
  8612  004E80  518C               	movf	lcd_setPosition@temp& (0+255),w,b
  8613  004E82  0B0F               	andlw	15
  8614  004E84  0100               	movlb	0	; () banked
  8615  004E86  6F8B               	movwf	lcd_setPosition@j& (0+255),b
  8616                           
  8617                           ; BSR set to: 0
  8618                           ;lcd.c: 26: lcd_sendCommand(i);
  8619  004E88  0100               	movlb	0	; () banked
  8620  004E8A  518A               	movf	lcd_setPosition@i& (0+255),w,b
  8621  004E8C  ECD6  F029         	call	_lcd_sendCommand
  8622                           
  8623                           ;lcd.c: 27: lcd_sendCommand(j);
  8624  004E90  0100               	movlb	0	; () banked
  8625  004E92  518B               	movf	lcd_setPosition@j& (0+255),w,b
  8626  004E94  ECD6  F029         	call	_lcd_sendCommand
  8627                           
  8628                           ;lcd.c: 28: }
  8629  004E98  0012               	return	
  8630  004E9A                     l5032:
  8631                           
  8632                           ;lcd.c: 29: else if(y == 2)
  8633  004E9A  0E02               	movlw	2
  8634  004E9C  0100               	movlb	0	; () banked
  8635  004E9E  1988               	xorwf	lcd_setPosition@y& (0+255),w,b
  8636  004EA0  A4D8               	btfss	status,2,c
  8637  004EA2  0012               	return	
  8638                           
  8639                           ; BSR set to: 0
  8640                           ;lcd.c: 30: {
  8641                           ;lcd.c: 31: temp = 0xC0 + x - 1;
  8642  004EA4  0100               	movlb	0	; () banked
  8643  004EA6  5189               	movf	lcd_setPosition@x& (0+255),w,b
  8644  004EA8  0FBF               	addlw	191
  8645  004EAA  0100               	movlb	0	; () banked
  8646  004EAC  6F8C               	movwf	lcd_setPosition@temp& (0+255),b
  8647                           
  8648                           ;lcd.c: 32: i = temp>>4;
  8649  004EAE  0100               	movlb	0	; () banked
  8650  004EB0  398C               	swapf	lcd_setPosition@temp& (0+255),w,b
  8651  004EB2  0B0F               	andlw	15
  8652  004EB4  0100               	movlb	0	; () banked
  8653  004EB6  6F8A               	movwf	lcd_setPosition@i& (0+255),b
  8654                           
  8655                           ;lcd.c: 33: j = temp & 0x0F;
  8656  004EB8  0100               	movlb	0	; () banked
  8657  004EBA  518C               	movf	lcd_setPosition@temp& (0+255),w,b
  8658  004EBC  0B0F               	andlw	15
  8659  004EBE  0100               	movlb	0	; () banked
  8660  004EC0  6F8B               	movwf	lcd_setPosition@j& (0+255),b
  8661                           
  8662                           ; BSR set to: 0
  8663                           ;lcd.c: 34: lcd_sendCommand(i);
  8664  004EC2  0100               	movlb	0	; () banked
  8665  004EC4  518A               	movf	lcd_setPosition@i& (0+255),w,b
  8666  004EC6  ECD6  F029         	call	_lcd_sendCommand
  8667                           
  8668                           ;lcd.c: 35: lcd_sendCommand(j);
  8669  004ECA  0100               	movlb	0	; () banked
  8670  004ECC  518B               	movf	lcd_setPosition@j& (0+255),w,b
  8671  004ECE  ECD6  F029         	call	_lcd_sendCommand
  8672  004ED2  0012               	return	
  8673  004ED4                     __end_of_lcd_setPosition:
  8674                           	opt stack 0
  8675                           tosu	equ	0xFFF
  8676                           tosh	equ	0xFFE
  8677                           tosl	equ	0xFFD
  8678                           pclath	equ	0xFFA
  8679                           tblptru	equ	0xFF8
  8680                           tblptrh	equ	0xFF7
  8681                           tblptrl	equ	0xFF6
  8682                           tablat	equ	0xFF5
  8683                           prodh	equ	0xFF4
  8684                           prodl	equ	0xFF3
  8685                           intcon	equ	0xFF2
  8686                           postinc0	equ	0xFEE
  8687                           wreg	equ	0xFE8
  8688                           indf2	equ	0xFDF
  8689                           postinc2	equ	0xFDE
  8690                           postdec2	equ	0xFDD
  8691                           fsr2h	equ	0xFDA
  8692                           fsr2l	equ	0xFD9
  8693                           status	equ	0xFD8
  8694                           
  8695 ;; *************** function _lcd_sendString *****************
  8696 ;; Defined at:
  8697 ;;		line 74 in file "lcd.c"
  8698 ;; Parameters:    Size  Location     Type
  8699 ;;  a               2   41[BANK0 ] PTR const unsigned char 
  8700 ;;		 -> ftoa@buf(17), lcd_sendUInt@displayString(10), lcd_sendInt@displayString(10), main@cap_string(16), 
  8701 ;; Auto vars:     Size  Location     Type
  8702 ;;  i               2   43[BANK0 ] int 
  8703 ;; Return value:  Size  Location     Type
  8704 ;;                  1    wreg      void 
  8705 ;; Registers used:
  8706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8707 ;; Tracked objects:
  8708 ;;		On entry : 0/0
  8709 ;;		On exit  : 0/0
  8710 ;;		Unchanged: 0/0
  8711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8712 ;;      Params:         0       2       0       0       0       0       0
  8713 ;;      Locals:         0       2       0       0       0       0       0
  8714 ;;      Temps:          0       0       0       0       0       0       0
  8715 ;;      Totals:         0       4       0       0       0       0       0
  8716 ;;Total ram usage:        4 bytes
  8717 ;; Hardware stack levels used:    1
  8718 ;; Hardware stack levels required when called:    9
  8719 ;; This function calls:
  8720 ;;		_lcd_sendChar
  8721 ;; This function is called by:
  8722 ;;		_lcd_sendStringToPos
  8723 ;;		_lcd_sendInt
  8724 ;;		_lcd_sendFloat
  8725 ;;		_lcd_sendUInt
  8726 ;; This function uses a non-reentrant model
  8727 ;;
  8728                           
  8729                           	psect	text25
  8730  0050F6                     __ptext25:
  8731                           	opt stack 0
  8732  0050F6                     _lcd_sendString:
  8733                           	opt stack 20
  8734                           
  8735                           ;lcd.c: 76: int i;
  8736                           ;lcd.c: 77: for(i=0;a[i]!='\0';i++)
  8737                           
  8738                           ;incstack = 0
  8739  0050F6  0E00               	movlw	0
  8740  0050F8  0100               	movlb	0	; () banked
  8741  0050FA  6F8C               	movwf	(lcd_sendString@i+1)& (0+255),b
  8742  0050FC  0E00               	movlw	0
  8743  0050FE  6F8B               	movwf	lcd_sendString@i& (0+255),b
  8744  005100  D010               	goto	l5046
  8745  005102                     l5042:
  8746                           
  8747                           ; BSR set to: 0
  8748                           ;lcd.c: 78: lcd_sendChar(a[i]);
  8749  005102  0100               	movlb	0	; () banked
  8750  005104  518B               	movf	lcd_sendString@i& (0+255),w,b
  8751  005106  0100               	movlb	0	; () banked
  8752  005108  2589               	addwf	lcd_sendString@a& (0+255),w,b
  8753  00510A  6ED9               	movwf	fsr2l,c
  8754  00510C  0100               	movlb	0	; () banked
  8755  00510E  518C               	movf	(lcd_sendString@i+1)& (0+255),w,b
  8756  005110  0100               	movlb	0	; () banked
  8757  005112  218A               	addwfc	(lcd_sendString@a+1)& (0+255),w,b
  8758  005114  6EDA               	movwf	fsr2h,c
  8759  005116  50DF               	movf	indf2,w,c
  8760  005118  ECC3  F028         	call	_lcd_sendChar
  8761  00511C  0100               	movlb	0	; () banked
  8762  00511E  4B8B               	infsnz	lcd_sendString@i& (0+255),f,b
  8763  005120  2B8C               	incf	(lcd_sendString@i+1)& (0+255),f,b
  8764  005122                     l5046:
  8765                           
  8766                           ; BSR set to: 0
  8767  005122  0100               	movlb	0	; () banked
  8768  005124  518B               	movf	lcd_sendString@i& (0+255),w,b
  8769  005126  0100               	movlb	0	; () banked
  8770  005128  2589               	addwf	lcd_sendString@a& (0+255),w,b
  8771  00512A  6ED9               	movwf	fsr2l,c
  8772  00512C  0100               	movlb	0	; () banked
  8773  00512E  518C               	movf	(lcd_sendString@i+1)& (0+255),w,b
  8774  005130  0100               	movlb	0	; () banked
  8775  005132  218A               	addwfc	(lcd_sendString@a+1)& (0+255),w,b
  8776  005134  6EDA               	movwf	fsr2h,c
  8777  005136  50DF               	movf	indf2,w,c
  8778  005138  B4D8               	btfsc	status,2,c
  8779  00513A  0012               	return	
  8780  00513C  D7E2               	goto	l5042
  8781  00513E                     __end_of_lcd_sendString:
  8782                           	opt stack 0
  8783                           tosu	equ	0xFFF
  8784                           tosh	equ	0xFFE
  8785                           tosl	equ	0xFFD
  8786                           pclath	equ	0xFFA
  8787                           tblptru	equ	0xFF8
  8788                           tblptrh	equ	0xFF7
  8789                           tblptrl	equ	0xFF6
  8790                           tablat	equ	0xFF5
  8791                           prodh	equ	0xFF4
  8792                           prodl	equ	0xFF3
  8793                           intcon	equ	0xFF2
  8794                           postinc0	equ	0xFEE
  8795                           wreg	equ	0xFE8
  8796                           indf2	equ	0xFDF
  8797                           postinc2	equ	0xFDE
  8798                           postdec2	equ	0xFDD
  8799                           fsr2h	equ	0xFDA
  8800                           fsr2l	equ	0xFD9
  8801                           status	equ	0xFD8
  8802                           
  8803 ;; *************** function _lcd_sendChar *****************
  8804 ;; Defined at:
  8805 ;;		line 58 in file "lcd.c"
  8806 ;; Parameters:    Size  Location     Type
  8807 ;;  a               1    wreg     const unsigned char 
  8808 ;; Auto vars:     Size  Location     Type
  8809 ;;  a               1   40[BANK0 ] const unsigned char 
  8810 ;;  y               1   39[BANK0 ] unsigned char 
  8811 ;;  temp            1   38[BANK0 ] unsigned char 
  8812 ;; Return value:  Size  Location     Type
  8813 ;;                  1    wreg      void 
  8814 ;; Registers used:
  8815 ;;		wreg, status,2, status,0, cstack
  8816 ;; Tracked objects:
  8817 ;;		On entry : 0/0
  8818 ;;		On exit  : 0/0
  8819 ;;		Unchanged: 0/0
  8820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8821 ;;      Params:         0       0       0       0       0       0       0
  8822 ;;      Locals:         0       3       0       0       0       0       0
  8823 ;;      Temps:          0       0       0       0       0       0       0
  8824 ;;      Totals:         0       3       0       0       0       0       0
  8825 ;;Total ram usage:        3 bytes
  8826 ;; Hardware stack levels used:    1
  8827 ;; Hardware stack levels required when called:    8
  8828 ;; This function calls:
  8829 ;;		__lcd_Port
  8830 ;; This function is called by:
  8831 ;;		_lcd_sendString
  8832 ;; This function uses a non-reentrant model
  8833 ;;
  8834                           
  8835                           	psect	text26
  8836  005186                     __ptext26:
  8837                           	opt stack 0
  8838  005186                     _lcd_sendChar:
  8839                           	opt stack 20
  8840                           
  8841                           ; BSR set to: 0
  8842                           ;incstack = 0
  8843                           ;lcd_sendChar@a stored from wreg
  8844  005186  0100               	movlb	0	; () banked
  8845  005188  6F88               	movwf	lcd_sendChar@a& (0+255),b
  8846                           
  8847                           ;lcd.c: 60: char temp,y;
  8848                           ;lcd.c: 61: temp = a&0x0F;
  8849  00518A  0100               	movlb	0	; () banked
  8850  00518C  5188               	movf	lcd_sendChar@a& (0+255),w,b
  8851  00518E  0B0F               	andlw	15
  8852  005190  0100               	movlb	0	; () banked
  8853  005192  6F86               	movwf	lcd_sendChar@temp& (0+255),b
  8854                           
  8855                           ;lcd.c: 62: y = a&0xF0;
  8856  005194  0100               	movlb	0	; () banked
  8857  005196  5188               	movf	lcd_sendChar@a& (0+255),w,b
  8858  005198  0BF0               	andlw	240
  8859  00519A  0100               	movlb	0	; () banked
  8860  00519C  6F87               	movwf	lcd_sendChar@y& (0+255),b
  8861                           
  8862                           ; BSR set to: 0
  8863                           ;lcd.c: 63: LATAbits.LA4 = 1;
  8864  00519E  8889               	bsf	3977,4,c	;volatile
  8865                           
  8866                           ; BSR set to: 0
  8867                           ;lcd.c: 64: _lcd_Port(y>>4);
  8868  0051A0  0100               	movlb	0	; () banked
  8869  0051A2  3987               	swapf	lcd_sendChar@y& (0+255),w,b
  8870  0051A4  0B0F               	andlw	15
  8871  0051A6  EC42  F029         	call	__lcd_Port
  8872                           
  8873                           ;lcd.c: 65: LATAbits.LA5 = 1;
  8874  0051AA  8A89               	bsf	3977,5,c	;volatile
  8875                           
  8876                           ;lcd.c: 66: _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  8877  0051AC  0E35               	movlw	53
  8878  0051AE                     u14947:
  8879  0051AE  2EE8               	decfsz	wreg,f,c
  8880  0051B0  D7FE               	goto	u14947
  8881  0051B2  F000               	nop	
  8882                           
  8883                           ;lcd.c: 67: LATAbits.LA5 = 0;
  8884  0051B4  9A89               	bcf	3977,5,c	;volatile
  8885                           
  8886                           ;lcd.c: 68: _lcd_Port(temp);
  8887  0051B6  0100               	movlb	0	; () banked
  8888  0051B8  5186               	movf	lcd_sendChar@temp& (0+255),w,b
  8889  0051BA  EC42  F029         	call	__lcd_Port
  8890                           
  8891                           ;lcd.c: 69: LATAbits.LA5 = 1;
  8892  0051BE  8A89               	bsf	3977,5,c	;volatile
  8893                           
  8894                           ;lcd.c: 70: _delay((unsigned long)((40)*(16000000UL/4000000.0)));
  8895  0051C0  0E35               	movlw	53
  8896  0051C2                     u14957:
  8897  0051C2  2EE8               	decfsz	wreg,f,c
  8898  0051C4  D7FE               	goto	u14957
  8899  0051C6  F000               	nop	
  8900                           
  8901                           ;lcd.c: 71: LATAbits.LA5 = 0;
  8902  0051C8  9A89               	bcf	3977,5,c	;volatile
  8903  0051CA  0012               	return		;funcret
  8904  0051CC                     __end_of_lcd_sendChar:
  8905                           	opt stack 0
  8906                           tosu	equ	0xFFF
  8907                           tosh	equ	0xFFE
  8908                           tosl	equ	0xFFD
  8909                           pclath	equ	0xFFA
  8910                           tblptru	equ	0xFF8
  8911                           tblptrh	equ	0xFF7
  8912                           tblptrl	equ	0xFF6
  8913                           tablat	equ	0xFF5
  8914                           prodh	equ	0xFF4
  8915                           prodl	equ	0xFF3
  8916                           intcon	equ	0xFF2
  8917                           postinc0	equ	0xFEE
  8918                           wreg	equ	0xFE8
  8919                           indf2	equ	0xFDF
  8920                           postinc2	equ	0xFDE
  8921                           postdec2	equ	0xFDD
  8922                           fsr2h	equ	0xFDA
  8923                           fsr2l	equ	0xFD9
  8924                           status	equ	0xFD8
  8925                           
  8926 ;; *************** function _lcd_init *****************
  8927 ;; Defined at:
  8928 ;;		line 39 in file "lcd.c"
  8929 ;; Parameters:    Size  Location     Type
  8930 ;;		None
  8931 ;; Auto vars:     Size  Location     Type
  8932 ;;		None
  8933 ;; Return value:  Size  Location     Type
  8934 ;;                  1    wreg      void 
  8935 ;; Registers used:
  8936 ;;		wreg, status,2, cstack
  8937 ;; Tracked objects:
  8938 ;;		On entry : 0/0
  8939 ;;		On exit  : 0/0
  8940 ;;		Unchanged: 0/0
  8941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8942 ;;      Params:         0       0       0       0       0       0       0
  8943 ;;      Locals:         0       0       0       0       0       0       0
  8944 ;;      Temps:          0       1       0       0       0       0       0
  8945 ;;      Totals:         0       1       0       0       0       0       0
  8946 ;;Total ram usage:        1 bytes
  8947 ;; Hardware stack levels used:    1
  8948 ;; Hardware stack levels required when called:    9
  8949 ;; This function calls:
  8950 ;;		__lcd_Port
  8951 ;;		_lcd_sendCommand
  8952 ;; This function is called by:
  8953 ;;		_main
  8954 ;; This function uses a non-reentrant model
  8955 ;;
  8956                           
  8957                           	psect	text27
  8958  004DE4                     __ptext27:
  8959                           	opt stack 0
  8960  004DE4                     _lcd_init:
  8961                           	opt stack 21
  8962                           
  8963                           ;lcd.c: 41: _lcd_Port(0x00);
  8964                           
  8965                           ;incstack = 0
  8966  004DE4  0E00               	movlw	0
  8967  004DE6  EC42  F029         	call	__lcd_Port
  8968                           
  8969                           ;lcd.c: 42: _delay((unsigned long)((20)*(16000000UL/4000.0)));
  8970  004DEA  0E68               	movlw	104
  8971  004DEC  0100               	movlb	0	; () banked
  8972  004DEE  6F88               	movwf	??_lcd_init& (0+255),b
  8973  004DF0  0EE4               	movlw	228
  8974  004DF2                     u14967:
  8975  004DF2  2EE8               	decfsz	wreg,f,c
  8976  004DF4  D7FE               	goto	u14967
  8977  004DF6  2F88               	decfsz	??_lcd_init& (0+255),f,b
  8978  004DF8  D7FC               	goto	u14967
  8979  004DFA  D000               	nop2	
  8980                           
  8981                           ;lcd.c: 43: lcd_sendCommand(0x03);
  8982  004DFC  0E03               	movlw	3
  8983  004DFE  ECD6  F029         	call	_lcd_sendCommand
  8984                           
  8985                           ;lcd.c: 44: _delay((unsigned long)((5)*(16000000UL/4000.0)));
  8986  004E02  0E1A               	movlw	26
  8987  004E04  0100               	movlb	0	; () banked
  8988  004E06  6F88               	movwf	??_lcd_init& (0+255),b
  8989  004E08  0EF8               	movlw	248
  8990  004E0A                     u14977:
  8991  004E0A  2EE8               	decfsz	wreg,f,c
  8992  004E0C  D7FE               	goto	u14977
  8993  004E0E  2F88               	decfsz	??_lcd_init& (0+255),f,b
  8994  004E10  D7FC               	goto	u14977
  8995  004E12  D000               	nop2	
  8996                           
  8997                           ;lcd.c: 45: lcd_sendCommand(0x03);
  8998  004E14  0E03               	movlw	3
  8999  004E16  ECD6  F029         	call	_lcd_sendCommand
  9000                           
  9001                           ;lcd.c: 46: _delay((unsigned long)((11)*(16000000UL/4000.0)));
  9002  004E1A  0E3A               	movlw	58
  9003  004E1C  0100               	movlb	0	; () banked
  9004  004E1E  6F88               	movwf	??_lcd_init& (0+255),b
  9005  004E20  0E23               	movlw	35
  9006  004E22                     u14987:
  9007  004E22  2EE8               	decfsz	wreg,f,c
  9008  004E24  D7FE               	goto	u14987
  9009  004E26  2F88               	decfsz	??_lcd_init& (0+255),f,b
  9010  004E28  D7FC               	goto	u14987
  9011  004E2A  F000               	nop	
  9012                           
  9013                           ;lcd.c: 47: lcd_sendCommand(0x03);
  9014  004E2C  0E03               	movlw	3
  9015  004E2E  ECD6  F029         	call	_lcd_sendCommand
  9016                           
  9017                           ;lcd.c: 49: lcd_sendCommand(0x02);
  9018  004E32  0E02               	movlw	2
  9019  004E34  ECD6  F029         	call	_lcd_sendCommand
  9020                           
  9021                           ;lcd.c: 50: lcd_sendCommand(0x02);
  9022  004E38  0E02               	movlw	2
  9023  004E3A  ECD6  F029         	call	_lcd_sendCommand
  9024                           
  9025                           ;lcd.c: 51: lcd_sendCommand(0x08);
  9026  004E3E  0E08               	movlw	8
  9027  004E40  ECD6  F029         	call	_lcd_sendCommand
  9028                           
  9029                           ;lcd.c: 52: lcd_sendCommand(0x00);
  9030  004E44  0E00               	movlw	0
  9031  004E46  ECD6  F029         	call	_lcd_sendCommand
  9032                           
  9033                           ;lcd.c: 53: lcd_sendCommand(0x0C);
  9034  004E4A  0E0C               	movlw	12
  9035  004E4C  ECD6  F029         	call	_lcd_sendCommand
  9036                           
  9037                           ;lcd.c: 54: lcd_sendCommand(0x00);
  9038  004E50  0E00               	movlw	0
  9039  004E52  ECD6  F029         	call	_lcd_sendCommand
  9040                           
  9041                           ;lcd.c: 55: lcd_sendCommand(0x06);
  9042  004E56  0E06               	movlw	6
  9043  004E58  ECD6  F029         	call	_lcd_sendCommand
  9044  004E5C  0012               	return		;funcret
  9045  004E5E                     __end_of_lcd_init:
  9046                           	opt stack 0
  9047                           tosu	equ	0xFFF
  9048                           tosh	equ	0xFFE
  9049                           tosl	equ	0xFFD
  9050                           pclath	equ	0xFFA
  9051                           tblptru	equ	0xFF8
  9052                           tblptrh	equ	0xFF7
  9053                           tblptrl	equ	0xFF6
  9054                           tablat	equ	0xFF5
  9055                           prodh	equ	0xFF4
  9056                           prodl	equ	0xFF3
  9057                           intcon	equ	0xFF2
  9058                           postinc0	equ	0xFEE
  9059                           wreg	equ	0xFE8
  9060                           indf2	equ	0xFDF
  9061                           postinc2	equ	0xFDE
  9062                           postdec2	equ	0xFDD
  9063                           fsr2h	equ	0xFDA
  9064                           fsr2l	equ	0xFD9
  9065                           status	equ	0xFD8
  9066                           
  9067 ;; *************** function _lcd_clear *****************
  9068 ;; Defined at:
  9069 ;;		line 12 in file "lcd.c"
  9070 ;; Parameters:    Size  Location     Type
  9071 ;;		None
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;		None
  9074 ;; Return value:  Size  Location     Type
  9075 ;;                  1    wreg      void 
  9076 ;; Registers used:
  9077 ;;		wreg, status,2, cstack
  9078 ;; Tracked objects:
  9079 ;;		On entry : 0/0
  9080 ;;		On exit  : 0/0
  9081 ;;		Unchanged: 0/0
  9082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9083 ;;      Params:         0       0       0       0       0       0       0
  9084 ;;      Locals:         0       0       0       0       0       0       0
  9085 ;;      Temps:          0       0       0       0       0       0       0
  9086 ;;      Totals:         0       0       0       0       0       0       0
  9087 ;;Total ram usage:        0 bytes
  9088 ;; Hardware stack levels used:    1
  9089 ;; Hardware stack levels required when called:    9
  9090 ;; This function calls:
  9091 ;;		_lcd_sendCommand
  9092 ;; This function is called by:
  9093 ;;		_main
  9094 ;; This function uses a non-reentrant model
  9095 ;;
  9096                           
  9097                           	psect	text28
  9098  00551C                     __ptext28:
  9099                           	opt stack 0
  9100  00551C                     _lcd_clear:
  9101                           	opt stack 21
  9102                           
  9103                           ;lcd.c: 14: lcd_sendCommand(0);
  9104                           
  9105                           ;incstack = 0
  9106  00551C  0E00               	movlw	0
  9107  00551E  ECD6  F029         	call	_lcd_sendCommand
  9108                           
  9109                           ;lcd.c: 15: lcd_sendCommand(1);
  9110  005522  0E01               	movlw	1
  9111  005524  ECD6  F029         	call	_lcd_sendCommand
  9112  005528  0012               	return		;funcret
  9113  00552A                     __end_of_lcd_clear:
  9114                           	opt stack 0
  9115                           tosu	equ	0xFFF
  9116                           tosh	equ	0xFFE
  9117                           tosl	equ	0xFFD
  9118                           pclath	equ	0xFFA
  9119                           tblptru	equ	0xFF8
  9120                           tblptrh	equ	0xFF7
  9121                           tblptrl	equ	0xFF6
  9122                           tablat	equ	0xFF5
  9123                           prodh	equ	0xFF4
  9124                           prodl	equ	0xFF3
  9125                           intcon	equ	0xFF2
  9126                           postinc0	equ	0xFEE
  9127                           wreg	equ	0xFE8
  9128                           indf2	equ	0xFDF
  9129                           postinc2	equ	0xFDE
  9130                           postdec2	equ	0xFDD
  9131                           fsr2h	equ	0xFDA
  9132                           fsr2l	equ	0xFD9
  9133                           status	equ	0xFD8
  9134                           
  9135 ;; *************** function _lcd_sendCommand *****************
  9136 ;; Defined at:
  9137 ;;		line 3 in file "lcd.c"
  9138 ;; Parameters:    Size  Location     Type
  9139 ;;  a               1    wreg     unsigned char 
  9140 ;; Auto vars:     Size  Location     Type
  9141 ;;  a               1   39[BANK0 ] unsigned char 
  9142 ;; Return value:  Size  Location     Type
  9143 ;;                  1    wreg      void 
  9144 ;; Registers used:
  9145 ;;		wreg, status,2, cstack
  9146 ;; Tracked objects:
  9147 ;;		On entry : 0/0
  9148 ;;		On exit  : 0/0
  9149 ;;		Unchanged: 0/0
  9150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9151 ;;      Params:         0       0       0       0       0       0       0
  9152 ;;      Locals:         0       1       0       0       0       0       0
  9153 ;;      Temps:          0       1       0       0       0       0       0
  9154 ;;      Totals:         0       2       0       0       0       0       0
  9155 ;;Total ram usage:        2 bytes
  9156 ;; Hardware stack levels used:    1
  9157 ;; Hardware stack levels required when called:    8
  9158 ;; This function calls:
  9159 ;;		__lcd_Port
  9160 ;; This function is called by:
  9161 ;;		_lcd_clear
  9162 ;;		_lcd_setPosition
  9163 ;;		_lcd_init
  9164 ;;		_lcd_shiftRight
  9165 ;;		_lcd_shiftLeft
  9166 ;; This function uses a non-reentrant model
  9167 ;;
  9168                           
  9169                           	psect	text29
  9170  0053AC                     __ptext29:
  9171                           	opt stack 0
  9172  0053AC                     _lcd_sendCommand:
  9173                           	opt stack 20
  9174                           
  9175                           ;incstack = 0
  9176                           ;lcd_sendCommand@a stored from wreg
  9177  0053AC  0100               	movlb	0	; () banked
  9178  0053AE  6F87               	movwf	lcd_sendCommand@a& (0+255),b
  9179                           
  9180                           ;lcd.c: 5: LATAbits.LA4 = 0;
  9181  0053B0  9889               	bcf	3977,4,c	;volatile
  9182                           
  9183                           ;lcd.c: 6: _lcd_Port(a);
  9184  0053B2  0100               	movlb	0	; () banked
  9185  0053B4  5187               	movf	lcd_sendCommand@a& (0+255),w,b
  9186  0053B6  EC42  F029         	call	__lcd_Port
  9187                           
  9188                           ;lcd.c: 7: LATAbits.LA5 = 1;
  9189  0053BA  8A89               	bsf	3977,5,c	;volatile
  9190                           
  9191                           ;lcd.c: 8: _delay((unsigned long)((4)*(16000000UL/4000.0)));
  9192  0053BC  0E15               	movlw	21
  9193  0053BE  0100               	movlb	0	; () banked
  9194  0053C0  6F86               	movwf	??_lcd_sendCommand& (0+255),b
  9195  0053C2  0EC6               	movlw	198
  9196  0053C4                     u14997:
  9197  0053C4  2EE8               	decfsz	wreg,f,c
  9198  0053C6  D7FE               	goto	u14997
  9199  0053C8  2F86               	decfsz	??_lcd_sendCommand& (0+255),f,b
  9200  0053CA  D7FC               	goto	u14997
  9201  0053CC  D000               	nop2	
  9202                           
  9203                           ;lcd.c: 9: LATAbits.LA5 = 0;
  9204  0053CE  9A89               	bcf	3977,5,c	;volatile
  9205  0053D0  0012               	return		;funcret
  9206  0053D2                     __end_of_lcd_sendCommand:
  9207                           	opt stack 0
  9208                           tosu	equ	0xFFF
  9209                           tosh	equ	0xFFE
  9210                           tosl	equ	0xFFD
  9211                           pclath	equ	0xFFA
  9212                           tblptru	equ	0xFF8
  9213                           tblptrh	equ	0xFF7
  9214                           tblptrl	equ	0xFF6
  9215                           tablat	equ	0xFF5
  9216                           prodh	equ	0xFF4
  9217                           prodl	equ	0xFF3
  9218                           intcon	equ	0xFF2
  9219                           postinc0	equ	0xFEE
  9220                           wreg	equ	0xFE8
  9221                           indf2	equ	0xFDF
  9222                           postinc2	equ	0xFDE
  9223                           postdec2	equ	0xFDD
  9224                           fsr2h	equ	0xFDA
  9225                           fsr2l	equ	0xFD9
  9226                           status	equ	0xFD8
  9227                           
  9228 ;; *************** function __lcd_Port *****************
  9229 ;; Defined at:
  9230 ;;		line 139 in file "lcd.c"
  9231 ;; Parameters:    Size  Location     Type
  9232 ;;  a               1    wreg     unsigned char 
  9233 ;; Auto vars:     Size  Location     Type
  9234 ;;  a               1   37[BANK0 ] unsigned char 
  9235 ;; Return value:  Size  Location     Type
  9236 ;;                  1    wreg      void 
  9237 ;; Registers used:
  9238 ;;		wreg
  9239 ;; Tracked objects:
  9240 ;;		On entry : 0/0
  9241 ;;		On exit  : 0/0
  9242 ;;		Unchanged: 0/0
  9243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9244 ;;      Params:         0       0       0       0       0       0       0
  9245 ;;      Locals:         0       1       0       0       0       0       0
  9246 ;;      Temps:          0       0       0       0       0       0       0
  9247 ;;      Totals:         0       1       0       0       0       0       0
  9248 ;;Total ram usage:        1 bytes
  9249 ;; Hardware stack levels used:    1
  9250 ;; Hardware stack levels required when called:    7
  9251 ;; This function calls:
  9252 ;;		Nothing
  9253 ;; This function is called by:
  9254 ;;		_lcd_sendCommand
  9255 ;;		_lcd_init
  9256 ;;		_lcd_sendChar
  9257 ;; This function uses a non-reentrant model
  9258 ;;
  9259                           
  9260                           	psect	text30
  9261  005284                     __ptext30:
  9262                           	opt stack 0
  9263  005284                     __lcd_Port:
  9264                           	opt stack 20
  9265                           
  9266                           ;incstack = 0
  9267                           ;__lcd_Port@a stored from wreg
  9268  005284  0100               	movlb	0	; () banked
  9269  005286  6F85               	movwf	__lcd_Port@a& (0+255),b
  9270                           
  9271                           ;lcd.c: 141: if(a & 1)
  9272  005288  0100               	movlb	0	; () banked
  9273  00528A  A185               	btfss	__lcd_Port@a& (0+255),0,b
  9274  00528C  D002               	goto	l282
  9275                           
  9276                           ; BSR set to: 0
  9277                           ;lcd.c: 142: LATAbits.LA0 = 1;
  9278  00528E  8089               	bsf	3977,0,c	;volatile
  9279  005290  D001               	goto	l3708
  9280  005292                     l282:
  9281                           
  9282                           ; BSR set to: 0
  9283                           ;lcd.c: 143: else
  9284                           ;lcd.c: 144: LATAbits.LA0 = 0;
  9285  005292  9089               	bcf	3977,0,c	;volatile
  9286  005294                     l3708:
  9287                           
  9288                           ; BSR set to: 0
  9289                           ;lcd.c: 146: if(a & 2)
  9290  005294  0100               	movlb	0	; () banked
  9291  005296  A385               	btfss	__lcd_Port@a& (0+255),1,b
  9292  005298  D002               	goto	l284
  9293                           
  9294                           ; BSR set to: 0
  9295                           ;lcd.c: 147: LATAbits.LA1 = 1;
  9296  00529A  8289               	bsf	3977,1,c	;volatile
  9297  00529C  D001               	goto	l3712
  9298  00529E                     l284:
  9299                           
  9300                           ; BSR set to: 0
  9301                           ;lcd.c: 148: else
  9302                           ;lcd.c: 149: LATAbits.LA1 = 0;
  9303  00529E  9289               	bcf	3977,1,c	;volatile
  9304  0052A0                     l3712:
  9305                           
  9306                           ; BSR set to: 0
  9307                           ;lcd.c: 151: if(a & 4)
  9308  0052A0  0100               	movlb	0	; () banked
  9309  0052A2  A585               	btfss	__lcd_Port@a& (0+255),2,b
  9310  0052A4  D002               	goto	l286
  9311                           
  9312                           ; BSR set to: 0
  9313                           ;lcd.c: 152: LATAbits.LA2 = 1;
  9314  0052A6  8489               	bsf	3977,2,c	;volatile
  9315  0052A8  D001               	goto	l3716
  9316  0052AA                     l286:
  9317                           
  9318                           ; BSR set to: 0
  9319                           ;lcd.c: 153: else
  9320                           ;lcd.c: 154: LATAbits.LA2 = 0;
  9321  0052AA  9489               	bcf	3977,2,c	;volatile
  9322  0052AC                     l3716:
  9323                           
  9324                           ; BSR set to: 0
  9325                           ;lcd.c: 156: if(a & 8)
  9326  0052AC  0100               	movlb	0	; () banked
  9327  0052AE  A785               	btfss	__lcd_Port@a& (0+255),3,b
  9328  0052B0  D002               	goto	l288
  9329                           
  9330                           ; BSR set to: 0
  9331                           ;lcd.c: 157: LATAbits.LA3 = 1;
  9332  0052B2  8689               	bsf	3977,3,c	;volatile
  9333  0052B4  0012               	return	
  9334  0052B6                     l288:
  9335                           
  9336                           ; BSR set to: 0
  9337                           ;lcd.c: 158: else
  9338                           ;lcd.c: 159: LATAbits.LA3 = 0;
  9339  0052B6  9689               	bcf	3977,3,c	;volatile
  9340  0052B8  0012               	return	
  9341  0052BA                     __end_of__lcd_Port:
  9342                           	opt stack 0
  9343                           tosu	equ	0xFFF
  9344                           tosh	equ	0xFFE
  9345                           tosl	equ	0xFFD
  9346                           pclath	equ	0xFFA
  9347                           tblptru	equ	0xFF8
  9348                           tblptrh	equ	0xFF7
  9349                           tblptrl	equ	0xFF6
  9350                           tablat	equ	0xFF5
  9351                           prodh	equ	0xFF4
  9352                           prodl	equ	0xFF3
  9353                           intcon	equ	0xFF2
  9354                           postinc0	equ	0xFEE
  9355                           wreg	equ	0xFE8
  9356                           indf2	equ	0xFDF
  9357                           postinc2	equ	0xFDE
  9358                           postdec2	equ	0xFDD
  9359                           fsr2h	equ	0xFDA
  9360                           fsr2l	equ	0xFD9
  9361                           status	equ	0xFD8
  9362                           
  9363 ;; *************** function _SYSTEM_Initialize *****************
  9364 ;; Defined at:
  9365 ;;		line 111 in file "mcc_generated_files/mcc.c"
  9366 ;; Parameters:    Size  Location     Type
  9367 ;;		None
  9368 ;; Auto vars:     Size  Location     Type
  9369 ;;		None
  9370 ;; Return value:  Size  Location     Type
  9371 ;;                  1    wreg      void 
  9372 ;; Registers used:
  9373 ;;		wreg, status,2, status,0, cstack
  9374 ;; Tracked objects:
  9375 ;;		On entry : 0/0
  9376 ;;		On exit  : 0/0
  9377 ;;		Unchanged: 0/0
  9378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9379 ;;      Params:         0       0       0       0       0       0       0
  9380 ;;      Locals:         0       0       0       0       0       0       0
  9381 ;;      Temps:          0       0       0       0       0       0       0
  9382 ;;      Totals:         0       0       0       0       0       0       0
  9383 ;;Total ram usage:        0 bytes
  9384 ;; Hardware stack levels used:    1
  9385 ;; Hardware stack levels required when called:    9
  9386 ;; This function calls:
  9387 ;;		_EUSART1_Initialize
  9388 ;;		_EXT_INT_Initialize
  9389 ;;		_INTERRUPT_Initialize
  9390 ;;		_OSCILLATOR_Initialize
  9391 ;;		_PIN_MANAGER_Initialize
  9392 ;;		_TMR0_Initialize
  9393 ;; This function is called by:
  9394 ;;		_main
  9395 ;; This function uses a non-reentrant model
  9396 ;;
  9397                           
  9398                           	psect	text31
  9399  0054B2                     __ptext31:
  9400                           	opt stack 0
  9401  0054B2                     _SYSTEM_Initialize:
  9402                           	opt stack 21
  9403                           
  9404                           ;mcc.c: 114: INTERRUPT_Initialize();
  9405                           
  9406                           ; BSR set to: 0
  9407                           ;incstack = 0
  9408  0054B2  ECB9  F02A         	call	_INTERRUPT_Initialize	;wreg free
  9409                           
  9410                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  9411  0054B6  ECA9  F029         	call	_PIN_MANAGER_Initialize	;wreg free
  9412                           
  9413                           ;mcc.c: 116: OSCILLATOR_Initialize();
  9414  0054BA  EC95  F02A         	call	_OSCILLATOR_Initialize	;wreg free
  9415                           
  9416                           ;mcc.c: 117: EXT_INT_Initialize();
  9417  0054BE  EC66  F02A         	call	_EXT_INT_Initialize	;wreg free
  9418                           
  9419                           ;mcc.c: 118: TMR0_Initialize();
  9420  0054C2  EC9F  F028         	call	_TMR0_Initialize	;wreg free
  9421                           
  9422                           ;mcc.c: 119: EUSART1_Initialize();
  9423  0054C6  EC72  F02A         	call	_EUSART1_Initialize	;wreg free
  9424  0054CA  0012               	return		;funcret
  9425  0054CC                     __end_of_SYSTEM_Initialize:
  9426                           	opt stack 0
  9427                           tosu	equ	0xFFF
  9428                           tosh	equ	0xFFE
  9429                           tosl	equ	0xFFD
  9430                           pclath	equ	0xFFA
  9431                           tblptru	equ	0xFF8
  9432                           tblptrh	equ	0xFF7
  9433                           tblptrl	equ	0xFF6
  9434                           tablat	equ	0xFF5
  9435                           prodh	equ	0xFF4
  9436                           prodl	equ	0xFF3
  9437                           intcon	equ	0xFF2
  9438                           postinc0	equ	0xFEE
  9439                           wreg	equ	0xFE8
  9440                           indf2	equ	0xFDF
  9441                           postinc2	equ	0xFDE
  9442                           postdec2	equ	0xFDD
  9443                           fsr2h	equ	0xFDA
  9444                           fsr2l	equ	0xFD9
  9445                           status	equ	0xFD8
  9446                           
  9447 ;; *************** function _TMR0_Initialize *****************
  9448 ;; Defined at:
  9449 ;;		line 14 in file "mcc_generated_files/tmr0.c"
  9450 ;; Parameters:    Size  Location     Type
  9451 ;;		None
  9452 ;; Auto vars:     Size  Location     Type
  9453 ;;		None
  9454 ;; Return value:  Size  Location     Type
  9455 ;;                  1    wreg      void 
  9456 ;; Registers used:
  9457 ;;		wreg, status,2, status,0, cstack
  9458 ;; Tracked objects:
  9459 ;;		On entry : 0/0
  9460 ;;		On exit  : 0/0
  9461 ;;		Unchanged: 0/0
  9462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9463 ;;      Params:         0       0       0       0       0       0       0
  9464 ;;      Locals:         0       0       0       0       0       0       0
  9465 ;;      Temps:          0       2       0       0       0       0       0
  9466 ;;      Totals:         0       2       0       0       0       0       0
  9467 ;;Total ram usage:        2 bytes
  9468 ;; Hardware stack levels used:    1
  9469 ;; Hardware stack levels required when called:    8
  9470 ;; This function calls:
  9471 ;;		_TMR0_SetInterruptHandler
  9472 ;;		_TMR0_StartTimer
  9473 ;; This function is called by:
  9474 ;;		_SYSTEM_Initialize
  9475 ;; This function uses a non-reentrant model
  9476 ;;
  9477                           
  9478                           	psect	text32
  9479  00513E                     __ptext32:
  9480                           	opt stack 0
  9481  00513E                     _TMR0_Initialize:
  9482                           	opt stack 21
  9483                           
  9484                           ;tmr0.c: 19: T0CON = 0x11;
  9485                           
  9486                           ;incstack = 0
  9487  00513E  0E11               	movlw	17
  9488  005140  6ED5               	movwf	4053,c	;volatile
  9489                           
  9490                           ;tmr0.c: 22: TMR0H = 0x15;
  9491  005142  0E15               	movlw	21
  9492  005144  6ED7               	movwf	4055,c	;volatile
  9493                           
  9494                           ;tmr0.c: 25: TMR0L = 0x9F;
  9495  005146  0E9F               	movlw	159
  9496  005148  6ED6               	movwf	4054,c	;volatile
  9497                           
  9498                           ;tmr0.c: 28: timer0ReloadVal = (TMR0H << 8) | TMR0L;
  9499  00514A  50D6               	movf	4054,w,c	;volatile
  9500  00514C  CFD7 F087          	movff	4055,??_TMR0_Initialize	;volatile
  9501  005150  0100               	movlb	0	; () banked
  9502  005152  6B88               	clrf	(??_TMR0_Initialize+1)& (0+255),b
  9503  005154  C087  F088         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  9504  005158  0100               	movlb	0	; () banked
  9505  00515A  6B87               	clrf	??_TMR0_Initialize& (0+255),b
  9506  00515C  0100               	movlb	0	; () banked
  9507  00515E  1187               	iorwf	??_TMR0_Initialize& (0+255),w,b
  9508  005160  0100               	movlb	0	; () banked
  9509  005162  6FD8               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  9510  005164  0100               	movlb	0	; () banked
  9511  005166  5188               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
  9512  005168  0100               	movlb	0	; () banked
  9513  00516A  6FD9               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
  9514                           
  9515                           ; BSR set to: 0
  9516                           ;tmr0.c: 31: INTCONbits.TMR0IF = 0;
  9517  00516C  94F2               	bcf	intcon,2,c	;volatile
  9518                           
  9519                           ; BSR set to: 0
  9520                           ;tmr0.c: 34: INTCONbits.TMR0IE = 1;
  9521  00516E  8AF2               	bsf	intcon,5,c	;volatile
  9522                           
  9523                           ; BSR set to: 0
  9524                           ;tmr0.c: 37: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  9525  005170  0E7C               	movlw	low _TMR0_DefaultInterruptHandler
  9526  005172  0100               	movlb	0	; () banked
  9527  005174  6F85               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  9528  005176  0E54               	movlw	high _TMR0_DefaultInterruptHandler
  9529  005178  0100               	movlb	0	; () banked
  9530  00517A  6F86               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9531  00517C  ECA8  F02A         	call	_TMR0_SetInterruptHandler	;wreg free
  9532                           
  9533                           ;tmr0.c: 40: TMR0_StartTimer();
  9534  005180  ECB7  F02A         	call	_TMR0_StartTimer	;wreg free
  9535  005184  0012               	return		;funcret
  9536  005186                     __end_of_TMR0_Initialize:
  9537                           	opt stack 0
  9538                           tosu	equ	0xFFF
  9539                           tosh	equ	0xFFE
  9540                           tosl	equ	0xFFD
  9541                           pclath	equ	0xFFA
  9542                           tblptru	equ	0xFF8
  9543                           tblptrh	equ	0xFF7
  9544                           tblptrl	equ	0xFF6
  9545                           tablat	equ	0xFF5
  9546                           prodh	equ	0xFF4
  9547                           prodl	equ	0xFF3
  9548                           intcon	equ	0xFF2
  9549                           postinc0	equ	0xFEE
  9550                           wreg	equ	0xFE8
  9551                           indf2	equ	0xFDF
  9552                           postinc2	equ	0xFDE
  9553                           postdec2	equ	0xFDD
  9554                           fsr2h	equ	0xFDA
  9555                           fsr2l	equ	0xFD9
  9556                           status	equ	0xFD8
  9557                           
  9558 ;; *************** function _TMR0_StartTimer *****************
  9559 ;; Defined at:
  9560 ;;		line 43 in file "mcc_generated_files/tmr0.c"
  9561 ;; Parameters:    Size  Location     Type
  9562 ;;		None
  9563 ;; Auto vars:     Size  Location     Type
  9564 ;;		None
  9565 ;; Return value:  Size  Location     Type
  9566 ;;                  1    wreg      void 
  9567 ;; Registers used:
  9568 ;;		None
  9569 ;; Tracked objects:
  9570 ;;		On entry : 0/0
  9571 ;;		On exit  : 0/0
  9572 ;;		Unchanged: 0/0
  9573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9574 ;;      Params:         0       0       0       0       0       0       0
  9575 ;;      Locals:         0       0       0       0       0       0       0
  9576 ;;      Temps:          0       0       0       0       0       0       0
  9577 ;;      Totals:         0       0       0       0       0       0       0
  9578 ;;Total ram usage:        0 bytes
  9579 ;; Hardware stack levels used:    1
  9580 ;; Hardware stack levels required when called:    7
  9581 ;; This function calls:
  9582 ;;		Nothing
  9583 ;; This function is called by:
  9584 ;;		_TMR0_Initialize
  9585 ;; This function uses a non-reentrant model
  9586 ;;
  9587                           
  9588                           	psect	text33
  9589  00556E                     __ptext33:
  9590                           	opt stack 0
  9591  00556E                     _TMR0_StartTimer:
  9592                           	opt stack 21
  9593                           
  9594                           ;tmr0.c: 46: T0CONbits.TMR0ON = 1;
  9595                           
  9596                           ;incstack = 0
  9597  00556E  8ED5               	bsf	4053,7,c	;volatile
  9598  005570  0012               	return		;funcret
  9599  005572                     __end_of_TMR0_StartTimer:
  9600                           	opt stack 0
  9601                           tosu	equ	0xFFF
  9602                           tosh	equ	0xFFE
  9603                           tosl	equ	0xFFD
  9604                           pclath	equ	0xFFA
  9605                           tblptru	equ	0xFF8
  9606                           tblptrh	equ	0xFF7
  9607                           tblptrl	equ	0xFF6
  9608                           tablat	equ	0xFF5
  9609                           prodh	equ	0xFF4
  9610                           prodl	equ	0xFF3
  9611                           intcon	equ	0xFF2
  9612                           postinc0	equ	0xFEE
  9613                           wreg	equ	0xFE8
  9614                           indf2	equ	0xFDF
  9615                           postinc2	equ	0xFDE
  9616                           postdec2	equ	0xFDD
  9617                           fsr2h	equ	0xFDA
  9618                           fsr2l	equ	0xFD9
  9619                           status	equ	0xFD8
  9620                           
  9621 ;; *************** function _TMR0_SetInterruptHandler *****************
  9622 ;; Defined at:
  9623 ;;		line 104 in file "mcc_generated_files/tmr0.c"
  9624 ;; Parameters:    Size  Location     Type
  9625 ;;  InterruptHan    2   37[BANK0 ] PTR void 
  9626 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  9627 ;; Auto vars:     Size  Location     Type
  9628 ;;		None
  9629 ;; Return value:  Size  Location     Type
  9630 ;;                  1    wreg      void 
  9631 ;; Registers used:
  9632 ;;		wreg, status,2, status,0
  9633 ;; Tracked objects:
  9634 ;;		On entry : 0/0
  9635 ;;		On exit  : 0/0
  9636 ;;		Unchanged: 0/0
  9637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9638 ;;      Params:         0       2       0       0       0       0       0
  9639 ;;      Locals:         0       0       0       0       0       0       0
  9640 ;;      Temps:          0       0       0       0       0       0       0
  9641 ;;      Totals:         0       2       0       0       0       0       0
  9642 ;;Total ram usage:        2 bytes
  9643 ;; Hardware stack levels used:    1
  9644 ;; Hardware stack levels required when called:    7
  9645 ;; This function calls:
  9646 ;;		Nothing
  9647 ;; This function is called by:
  9648 ;;		_TMR0_Initialize
  9649 ;; This function uses a non-reentrant model
  9650 ;;
  9651                           
  9652                           	psect	text34
  9653  005550                     __ptext34:
  9654                           	opt stack 0
  9655  005550                     _TMR0_SetInterruptHandler:
  9656                           	opt stack 21
  9657                           
  9658                           ;tmr0.c: 105: TMR0_InterruptHandler = InterruptHandler;
  9659                           
  9660                           ;incstack = 0
  9661  005550  C085  F0D6         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  9662  005554  C086  F0D7         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  9663  005558  0012               	return		;funcret
  9664  00555A                     __end_of_TMR0_SetInterruptHandler:
  9665                           	opt stack 0
  9666                           tosu	equ	0xFFF
  9667                           tosh	equ	0xFFE
  9668                           tosl	equ	0xFFD
  9669                           pclath	equ	0xFFA
  9670                           tblptru	equ	0xFF8
  9671                           tblptrh	equ	0xFF7
  9672                           tblptrl	equ	0xFF6
  9673                           tablat	equ	0xFF5
  9674                           prodh	equ	0xFF4
  9675                           prodl	equ	0xFF3
  9676                           intcon	equ	0xFF2
  9677                           postinc0	equ	0xFEE
  9678                           wreg	equ	0xFE8
  9679                           indf2	equ	0xFDF
  9680                           postinc2	equ	0xFDE
  9681                           postdec2	equ	0xFDD
  9682                           fsr2h	equ	0xFDA
  9683                           fsr2l	equ	0xFD9
  9684                           status	equ	0xFD8
  9685                           
  9686 ;; *************** function _PIN_MANAGER_Initialize *****************
  9687 ;; Defined at:
  9688 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  9689 ;; Parameters:    Size  Location     Type
  9690 ;;		None
  9691 ;; Auto vars:     Size  Location     Type
  9692 ;;		None
  9693 ;; Return value:  Size  Location     Type
  9694 ;;                  1    wreg      void 
  9695 ;; Registers used:
  9696 ;;		wreg, status,2
  9697 ;; Tracked objects:
  9698 ;;		On entry : 0/0
  9699 ;;		On exit  : 0/0
  9700 ;;		Unchanged: 0/0
  9701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9702 ;;      Params:         0       0       0       0       0       0       0
  9703 ;;      Locals:         0       0       0       0       0       0       0
  9704 ;;      Temps:          0       0       0       0       0       0       0
  9705 ;;      Totals:         0       0       0       0       0       0       0
  9706 ;;Total ram usage:        0 bytes
  9707 ;; Hardware stack levels used:    1
  9708 ;; Hardware stack levels required when called:    7
  9709 ;; This function calls:
  9710 ;;		Nothing
  9711 ;; This function is called by:
  9712 ;;		_SYSTEM_Initialize
  9713 ;; This function uses a non-reentrant model
  9714 ;;
  9715                           
  9716                           	psect	text35
  9717  005352                     __ptext35:
  9718                           	opt stack 0
  9719  005352                     _PIN_MANAGER_Initialize:
  9720                           	opt stack 22
  9721                           
  9722                           ;pin_manager.c: 56: LATA = 0x00;
  9723                           
  9724                           ;incstack = 0
  9725  005352  0E00               	movlw	0
  9726  005354  6E89               	movwf	3977,c	;volatile
  9727                           
  9728                           ;pin_manager.c: 57: LATB = 0x02;
  9729  005356  0E02               	movlw	2
  9730  005358  6E8A               	movwf	3978,c	;volatile
  9731                           
  9732                           ;pin_manager.c: 58: LATC = 0x00;
  9733  00535A  0E00               	movlw	0
  9734  00535C  6E8B               	movwf	3979,c	;volatile
  9735                           
  9736                           ;pin_manager.c: 63: TRISA = 0x00;
  9737  00535E  0E00               	movlw	0
  9738  005360  6E92               	movwf	3986,c	;volatile
  9739                           
  9740                           ;pin_manager.c: 64: TRISB = 0xFD;
  9741  005362  0EFD               	movlw	253
  9742  005364  6E93               	movwf	3987,c	;volatile
  9743                           
  9744                           ;pin_manager.c: 65: TRISC = 0xBF;
  9745  005366  0EBF               	movlw	191
  9746  005368  6E94               	movwf	3988,c	;volatile
  9747                           
  9748                           ;pin_manager.c: 70: ANSELC = 0xBC;
  9749  00536A  0EBC               	movlw	188
  9750  00536C  010F               	movlb	15	; () banked
  9751  00536E  6F3A               	movwf	58,b	;volatile
  9752                           
  9753                           ;pin_manager.c: 71: ANSELB = 0x3C;
  9754  005370  0E3C               	movlw	60
  9755  005372  010F               	movlb	15	; () banked
  9756  005374  6F39               	movwf	57,b	;volatile
  9757                           
  9758                           ;pin_manager.c: 72: ANSELA = 0x00;
  9759  005376  0E00               	movlw	0
  9760  005378  010F               	movlb	15	; () banked
  9761  00537A  6F38               	movwf	56,b	;volatile
  9762                           
  9763                           ; BSR set to: 15
  9764                           ;pin_manager.c: 77: WPUB = 0xFF;
  9765  00537C  6861               	setf	3937,c	;volatile
  9766                           
  9767                           ; BSR set to: 15
  9768                           ;pin_manager.c: 78: INTCON2bits.nRBPU = 0;
  9769  00537E  9EF1               	bcf	intcon2,7,c	;volatile
  9770                           
  9771                           ; BSR set to: 15
  9772  005380  0012               	return		;funcret
  9773  005382                     __end_of_PIN_MANAGER_Initialize:
  9774                           	opt stack 0
  9775                           tosu	equ	0xFFF
  9776                           tosh	equ	0xFFE
  9777                           tosl	equ	0xFFD
  9778                           pclath	equ	0xFFA
  9779                           tblptru	equ	0xFF8
  9780                           tblptrh	equ	0xFF7
  9781                           tblptrl	equ	0xFF6
  9782                           tablat	equ	0xFF5
  9783                           prodh	equ	0xFF4
  9784                           prodl	equ	0xFF3
  9785                           intcon	equ	0xFF2
  9786                           intcon2	equ	0xFF1
  9787                           postinc0	equ	0xFEE
  9788                           wreg	equ	0xFE8
  9789                           indf2	equ	0xFDF
  9790                           postinc2	equ	0xFDE
  9791                           postdec2	equ	0xFDD
  9792                           fsr2h	equ	0xFDA
  9793                           fsr2l	equ	0xFD9
  9794                           status	equ	0xFD8
  9795                           
  9796 ;; *************** function _OSCILLATOR_Initialize *****************
  9797 ;; Defined at:
  9798 ;;		line 122 in file "mcc_generated_files/mcc.c"
  9799 ;; Parameters:    Size  Location     Type
  9800 ;;		None
  9801 ;; Auto vars:     Size  Location     Type
  9802 ;;		None
  9803 ;; Return value:  Size  Location     Type
  9804 ;;                  1    wreg      void 
  9805 ;; Registers used:
  9806 ;;		wreg, status,2
  9807 ;; Tracked objects:
  9808 ;;		On entry : 0/0
  9809 ;;		On exit  : 0/0
  9810 ;;		Unchanged: 0/0
  9811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9812 ;;      Params:         0       0       0       0       0       0       0
  9813 ;;      Locals:         0       0       0       0       0       0       0
  9814 ;;      Temps:          0       0       0       0       0       0       0
  9815 ;;      Totals:         0       0       0       0       0       0       0
  9816 ;;Total ram usage:        0 bytes
  9817 ;; Hardware stack levels used:    1
  9818 ;; Hardware stack levels required when called:    7
  9819 ;; This function calls:
  9820 ;;		Nothing
  9821 ;; This function is called by:
  9822 ;;		_SYSTEM_Initialize
  9823 ;; This function uses a non-reentrant model
  9824 ;;
  9825                           
  9826                           	psect	text36
  9827  00552A                     __ptext36:
  9828                           	opt stack 0
  9829  00552A                     _OSCILLATOR_Initialize:
  9830                           	opt stack 22
  9831                           
  9832                           ;mcc.c: 125: OSCCON = 0x70;
  9833                           
  9834                           ; BSR set to: 15
  9835                           ;incstack = 0
  9836  00552A  0E70               	movlw	112
  9837  00552C  6ED3               	movwf	4051,c	;volatile
  9838                           
  9839                           ;mcc.c: 127: OSCCON2 = 0x04;
  9840  00552E  0E04               	movlw	4
  9841  005530  6ED2               	movwf	4050,c	;volatile
  9842                           
  9843                           ;mcc.c: 129: OSCTUNE = 0x00;
  9844  005532  0E00               	movlw	0
  9845  005534  6E9B               	movwf	3995,c	;volatile
  9846  005536  0012               	return		;funcret
  9847  005538                     __end_of_OSCILLATOR_Initialize:
  9848                           	opt stack 0
  9849                           tosu	equ	0xFFF
  9850                           tosh	equ	0xFFE
  9851                           tosl	equ	0xFFD
  9852                           pclath	equ	0xFFA
  9853                           tblptru	equ	0xFF8
  9854                           tblptrh	equ	0xFF7
  9855                           tblptrl	equ	0xFF6
  9856                           tablat	equ	0xFF5
  9857                           prodh	equ	0xFF4
  9858                           prodl	equ	0xFF3
  9859                           intcon	equ	0xFF2
  9860                           intcon2	equ	0xFF1
  9861                           postinc0	equ	0xFEE
  9862                           wreg	equ	0xFE8
  9863                           indf2	equ	0xFDF
  9864                           postinc2	equ	0xFDE
  9865                           postdec2	equ	0xFDD
  9866                           fsr2h	equ	0xFDA
  9867                           fsr2l	equ	0xFD9
  9868                           status	equ	0xFD8
  9869                           
  9870 ;; *************** function _INTERRUPT_Initialize *****************
  9871 ;; Defined at:
  9872 ;;		line 4 in file "mcc_generated_files/interrupt_manager.c"
  9873 ;; Parameters:    Size  Location     Type
  9874 ;;		None
  9875 ;; Auto vars:     Size  Location     Type
  9876 ;;		None
  9877 ;; Return value:  Size  Location     Type
  9878 ;;                  1    wreg      void 
  9879 ;; Registers used:
  9880 ;;		None
  9881 ;; Tracked objects:
  9882 ;;		On entry : 0/0
  9883 ;;		On exit  : 0/0
  9884 ;;		Unchanged: 0/0
  9885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9886 ;;      Params:         0       0       0       0       0       0       0
  9887 ;;      Locals:         0       0       0       0       0       0       0
  9888 ;;      Temps:          0       0       0       0       0       0       0
  9889 ;;      Totals:         0       0       0       0       0       0       0
  9890 ;;Total ram usage:        0 bytes
  9891 ;; Hardware stack levels used:    1
  9892 ;; Hardware stack levels required when called:    7
  9893 ;; This function calls:
  9894 ;;		Nothing
  9895 ;; This function is called by:
  9896 ;;		_SYSTEM_Initialize
  9897 ;; This function uses a non-reentrant model
  9898 ;;
  9899                           
  9900                           	psect	text37
  9901  005572                     __ptext37:
  9902                           	opt stack 0
  9903  005572                     _INTERRUPT_Initialize:
  9904                           	opt stack 22
  9905                           
  9906                           ;interrupt_manager.c: 7: RCONbits.IPEN = 0;
  9907                           
  9908                           ;incstack = 0
  9909  005572  9ED0               	bcf	4048,7,c	;volatile
  9910  005574  0012               	return		;funcret
  9911  005576                     __end_of_INTERRUPT_Initialize:
  9912                           	opt stack 0
  9913                           tosu	equ	0xFFF
  9914                           tosh	equ	0xFFE
  9915                           tosl	equ	0xFFD
  9916                           pclath	equ	0xFFA
  9917                           tblptru	equ	0xFF8
  9918                           tblptrh	equ	0xFF7
  9919                           tblptrl	equ	0xFF6
  9920                           tablat	equ	0xFF5
  9921                           prodh	equ	0xFF4
  9922                           prodl	equ	0xFF3
  9923                           intcon	equ	0xFF2
  9924                           intcon2	equ	0xFF1
  9925                           postinc0	equ	0xFEE
  9926                           wreg	equ	0xFE8
  9927                           indf2	equ	0xFDF
  9928                           postinc2	equ	0xFDE
  9929                           postdec2	equ	0xFDD
  9930                           fsr2h	equ	0xFDA
  9931                           fsr2l	equ	0xFD9
  9932                           status	equ	0xFD8
  9933                           
  9934 ;; *************** function _EXT_INT_Initialize *****************
  9935 ;; Defined at:
  9936 ;;		line 80 in file "mcc_generated_files/ext_int.c"
  9937 ;; Parameters:    Size  Location     Type
  9938 ;;		None
  9939 ;; Auto vars:     Size  Location     Type
  9940 ;;		None
  9941 ;; Return value:  Size  Location     Type
  9942 ;;                  1    wreg      void 
  9943 ;; Registers used:
  9944 ;;		wreg, status,2, status,0, cstack
  9945 ;; Tracked objects:
  9946 ;;		On entry : 0/0
  9947 ;;		On exit  : 0/0
  9948 ;;		Unchanged: 0/0
  9949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9950 ;;      Params:         0       0       0       0       0       0       0
  9951 ;;      Locals:         0       0       0       0       0       0       0
  9952 ;;      Temps:          0       0       0       0       0       0       0
  9953 ;;      Totals:         0       0       0       0       0       0       0
  9954 ;;Total ram usage:        0 bytes
  9955 ;; Hardware stack levels used:    1
  9956 ;; Hardware stack levels required when called:    8
  9957 ;; This function calls:
  9958 ;;		_INT0_SetInterruptHandler
  9959 ;; This function is called by:
  9960 ;;		_SYSTEM_Initialize
  9961 ;; This function uses a non-reentrant model
  9962 ;;
  9963                           
  9964                           	psect	text38
  9965  0054CC                     __ptext38:
  9966                           	opt stack 0
  9967  0054CC                     _EXT_INT_Initialize:
  9968                           	opt stack 21
  9969                           
  9970                           ;ext_int.c: 89: (INTCONbits.INT0IF = 0);
  9971                           
  9972                           ;incstack = 0
  9973  0054CC  92F2               	bcf	intcon,1,c	;volatile
  9974                           
  9975                           ;ext_int.c: 90: (INTCON2bits.INTEDG0 = 0);
  9976  0054CE  9CF1               	bcf	intcon2,6,c	;volatile
  9977                           
  9978                           ;ext_int.c: 92: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
  9979  0054D0  0E00               	movlw	0
  9980  0054D2  0100               	movlb	0	; () banked
  9981  0054D4  6F85               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  9982  0054D6  0E00               	movlw	0
  9983  0054D8  0100               	movlb	0	; () banked
  9984  0054DA  6F86               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9985  0054DC  ECAD  F02A         	call	_INT0_SetInterruptHandler	;wreg free
  9986                           
  9987                           ;ext_int.c: 93: (INTCONbits.INT0IE = 1);
  9988  0054E0  88F2               	bsf	intcon,4,c	;volatile
  9989  0054E2  0012               	return		;funcret
  9990  0054E4                     __end_of_EXT_INT_Initialize:
  9991                           	opt stack 0
  9992                           tosu	equ	0xFFF
  9993                           tosh	equ	0xFFE
  9994                           tosl	equ	0xFFD
  9995                           pclath	equ	0xFFA
  9996                           tblptru	equ	0xFF8
  9997                           tblptrh	equ	0xFF7
  9998                           tblptrl	equ	0xFF6
  9999                           tablat	equ	0xFF5
 10000                           prodh	equ	0xFF4
 10001                           prodl	equ	0xFF3
 10002                           intcon	equ	0xFF2
 10003                           intcon2	equ	0xFF1
 10004                           postinc0	equ	0xFEE
 10005                           wreg	equ	0xFE8
 10006                           indf2	equ	0xFDF
 10007                           postinc2	equ	0xFDE
 10008                           postdec2	equ	0xFDD
 10009                           fsr2h	equ	0xFDA
 10010                           fsr2l	equ	0xFD9
 10011                           status	equ	0xFD8
 10012                           
 10013 ;; *************** function _INT0_SetInterruptHandler *****************
 10014 ;; Defined at:
 10015 ;;		line 60 in file "mcc_generated_files/ext_int.c"
 10016 ;; Parameters:    Size  Location     Type
 10017 ;;  InterruptHan    2   37[BANK0 ] PTR void 
 10018 ;;		 -> INT0_DefaultInterruptHandler(1), 
 10019 ;; Auto vars:     Size  Location     Type
 10020 ;;		None
 10021 ;; Return value:  Size  Location     Type
 10022 ;;                  1    wreg      void 
 10023 ;; Registers used:
 10024 ;;		wreg, status,2, status,0
 10025 ;; Tracked objects:
 10026 ;;		On entry : 0/0
 10027 ;;		On exit  : 0/0
 10028 ;;		Unchanged: 0/0
 10029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10030 ;;      Params:         0       2       0       0       0       0       0
 10031 ;;      Locals:         0       0       0       0       0       0       0
 10032 ;;      Temps:          0       0       0       0       0       0       0
 10033 ;;      Totals:         0       2       0       0       0       0       0
 10034 ;;Total ram usage:        2 bytes
 10035 ;; Hardware stack levels used:    1
 10036 ;; Hardware stack levels required when called:    7
 10037 ;; This function calls:
 10038 ;;		Nothing
 10039 ;; This function is called by:
 10040 ;;		_EXT_INT_Initialize
 10041 ;; This function uses a non-reentrant model
 10042 ;;
 10043                           
 10044                           	psect	text39
 10045  00555A                     __ptext39:
 10046                           	opt stack 0
 10047  00555A                     _INT0_SetInterruptHandler:
 10048                           	opt stack 21
 10049                           
 10050                           ;ext_int.c: 61: INT0_InterruptHandler = InterruptHandler;
 10051                           
 10052                           ;incstack = 0
 10053  00555A  C085  F0D4         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 10054  00555E  C086  F0D5         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 10055  005562  0012               	return		;funcret
 10056  005564                     __end_of_INT0_SetInterruptHandler:
 10057                           	opt stack 0
 10058                           tosu	equ	0xFFF
 10059                           tosh	equ	0xFFE
 10060                           tosl	equ	0xFFD
 10061                           pclath	equ	0xFFA
 10062                           tblptru	equ	0xFF8
 10063                           tblptrh	equ	0xFF7
 10064                           tblptrl	equ	0xFF6
 10065                           tablat	equ	0xFF5
 10066                           prodh	equ	0xFF4
 10067                           prodl	equ	0xFF3
 10068                           intcon	equ	0xFF2
 10069                           intcon2	equ	0xFF1
 10070                           postinc0	equ	0xFEE
 10071                           wreg	equ	0xFE8
 10072                           indf2	equ	0xFDF
 10073                           postinc2	equ	0xFDE
 10074                           postdec2	equ	0xFDD
 10075                           fsr2h	equ	0xFDA
 10076                           fsr2l	equ	0xFD9
 10077                           status	equ	0xFD8
 10078                           
 10079 ;; *************** function _EUSART1_Initialize *****************
 10080 ;; Defined at:
 10081 ;;		line 55 in file "mcc_generated_files/eusart1.c"
 10082 ;; Parameters:    Size  Location     Type
 10083 ;;		None
 10084 ;; Auto vars:     Size  Location     Type
 10085 ;;		None
 10086 ;; Return value:  Size  Location     Type
 10087 ;;                  1    wreg      void 
 10088 ;; Registers used:
 10089 ;;		wreg, status,2
 10090 ;; Tracked objects:
 10091 ;;		On entry : 0/0
 10092 ;;		On exit  : 0/0
 10093 ;;		Unchanged: 0/0
 10094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10095 ;;      Params:         0       0       0       0       0       0       0
 10096 ;;      Locals:         0       0       0       0       0       0       0
 10097 ;;      Temps:          0       0       0       0       0       0       0
 10098 ;;      Totals:         0       0       0       0       0       0       0
 10099 ;;Total ram usage:        0 bytes
 10100 ;; Hardware stack levels used:    1
 10101 ;; Hardware stack levels required when called:    7
 10102 ;; This function calls:
 10103 ;;		Nothing
 10104 ;; This function is called by:
 10105 ;;		_SYSTEM_Initialize
 10106 ;; This function uses a non-reentrant model
 10107 ;;
 10108                           
 10109                           	psect	text40
 10110  0054E4                     __ptext40:
 10111                           	opt stack 0
 10112  0054E4                     _EUSART1_Initialize:
 10113                           	opt stack 22
 10114                           
 10115                           ;eusart1.c: 60: BAUDCON1 = 0x08;
 10116                           
 10117                           ;incstack = 0
 10118  0054E4  0E08               	movlw	8
 10119  0054E6  6EB8               	movwf	4024,c	;volatile
 10120                           
 10121                           ;eusart1.c: 63: RCSTA1 = 0x80;
 10122  0054E8  0E80               	movlw	128
 10123  0054EA  6EAB               	movwf	4011,c	;volatile
 10124                           
 10125                           ;eusart1.c: 66: TXSTA1 = 0x24;
 10126  0054EC  0E24               	movlw	36
 10127  0054EE  6EAC               	movwf	4012,c	;volatile
 10128                           
 10129                           ;eusart1.c: 69: SPBRG1 = 0xA0;
 10130  0054F0  0EA0               	movlw	160
 10131  0054F2  6EAF               	movwf	4015,c	;volatile
 10132                           
 10133                           ;eusart1.c: 72: SPBRGH1 = 0x01;
 10134  0054F4  0E01               	movlw	1
 10135  0054F6  6EB0               	movwf	4016,c	;volatile
 10136  0054F8  0012               	return		;funcret
 10137  0054FA                     __end_of_EUSART1_Initialize:
 10138                           	opt stack 0
 10139                           tosu	equ	0xFFF
 10140                           tosh	equ	0xFFE
 10141                           tosl	equ	0xFFD
 10142                           pclath	equ	0xFFA
 10143                           tblptru	equ	0xFF8
 10144                           tblptrh	equ	0xFF7
 10145                           tblptrl	equ	0xFF6
 10146                           tablat	equ	0xFF5
 10147                           prodh	equ	0xFF4
 10148                           prodl	equ	0xFF3
 10149                           intcon	equ	0xFF2
 10150                           intcon2	equ	0xFF1
 10151                           postinc0	equ	0xFEE
 10152                           wreg	equ	0xFE8
 10153                           indf2	equ	0xFDF
 10154                           postinc2	equ	0xFDE
 10155                           postdec2	equ	0xFDD
 10156                           fsr2h	equ	0xFDA
 10157                           fsr2l	equ	0xFD9
 10158                           status	equ	0xFD8
 10159                           
 10160 ;; *************** function _INTERRUPT_InterruptManager *****************
 10161 ;; Defined at:
 10162 ;;		line 10 in file "mcc_generated_files/interrupt_manager.c"
 10163 ;; Parameters:    Size  Location     Type
 10164 ;;		None
 10165 ;; Auto vars:     Size  Location     Type
 10166 ;;		None
 10167 ;; Return value:  Size  Location     Type
 10168 ;;                  1    wreg      void 
 10169 ;; Registers used:
 10170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10171 ;; Tracked objects:
 10172 ;;		On entry : 0/0
 10173 ;;		On exit  : 0/0
 10174 ;;		Unchanged: 0/0
 10175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10176 ;;      Params:         0       0       0       0       0       0       0
 10177 ;;      Locals:         0       0       0       0       0       0       0
 10178 ;;      Temps:          0      14       0       0       0       0       0
 10179 ;;      Totals:         0      14       0       0       0       0       0
 10180 ;;Total ram usage:       14 bytes
 10181 ;; Hardware stack levels used:    1
 10182 ;; Hardware stack levels required when called:    6
 10183 ;; This function calls:
 10184 ;;		_INT0_ISR
 10185 ;;		_TMR0_ISR
 10186 ;; This function is called by:
 10187 ;;		Interrupt level 2
 10188 ;; This function uses a non-reentrant model
 10189 ;;
 10190                           
 10191                           	psect	intcode
 10192  000008                     __pintcode:
 10193                           	opt stack 0
 10194  000008                     _INTERRUPT_InterruptManager:
 10195                           	opt stack 19
 10196                           
 10197                           ;incstack = 0
 10198  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10199  00000A  CFFA F077          	movff	pclath,??_INTERRUPT_InterruptManager
 10200  00000E  CFFB F078          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 10201  000012  CFE9 F079          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 10202  000016  CFEA F07A          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 10203  00001A  CFE1 F07B          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 10204  00001E  CFE2 F07C          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 10205  000022  CFD9 F07D          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 10206  000026  CFDA F07E          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 10207  00002A  CFF3 F07F          	movff	prodl,??_INTERRUPT_InterruptManager+8
 10208  00002E  CFF4 F080          	movff	prodh,??_INTERRUPT_InterruptManager+9
 10209  000032  CFF6 F081          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 10210  000036  CFF7 F082          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 10211  00003A  CFF8 F083          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 10212  00003E  CFF5 F084          	movff	tablat,??_INTERRUPT_InterruptManager+13
 10213                           
 10214                           ;interrupt_manager.c: 13: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 10215  000042  BAF2               	btfsc	intcon,5,c	;volatile
 10216  000044  A4F2               	btfss	intcon,2,c	;volatile
 10217  000046  D003               	goto	i2l74
 10218                           
 10219                           ;interrupt_manager.c: 14: {
 10220                           ;interrupt_manager.c: 15: TMR0_ISR();
 10221  000048  EC78  F029         	call	_TMR0_ISR	;wreg free
 10222                           
 10223                           ;interrupt_manager.c: 16: }
 10224  00004C  D005               	goto	i2l78
 10225  00004E                     i2l74:
 10226                           
 10227                           ;interrupt_manager.c: 17: else if(INTCONbits.INT0IE == 1 && INTCONbits.INT0IF == 1)
 10228  00004E  B8F2               	btfsc	intcon,4,c	;volatile
 10229  000050  A2F2               	btfss	intcon,1,c	;volatile
 10230  000052  D002               	goto	i2l78
 10231                           
 10232                           ;interrupt_manager.c: 18: {
 10233                           ;interrupt_manager.c: 19: INT0_ISR();
 10234  000054  ECF7  F024         	call	_INT0_ISR	;wreg free
 10235  000058                     i2l78:
 10236  000058  C084  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 10237  00005C  C083  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 10238  000060  C082  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 10239  000064  C081  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 10240  000068  C080  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 10241  00006C  C07F  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 10242  000070  C07E  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 10243  000074  C07D  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 10244  000078  C07C  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 10245  00007C  C07B  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 10246  000080  C07A  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 10247  000084  C079  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 10248  000088  C078  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 10249  00008C  C077  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 10250  000090  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10251  000092  0011               	retfie		f
 10252  000094                     __end_of_INTERRUPT_InterruptManager:
 10253                           	opt stack 0
 10254                           tosu	equ	0xFFF
 10255                           tosh	equ	0xFFE
 10256                           tosl	equ	0xFFD
 10257                           pclatu	equ	0xFFB
 10258                           pclath	equ	0xFFA
 10259                           tblptru	equ	0xFF8
 10260                           tblptrh	equ	0xFF7
 10261                           tblptrl	equ	0xFF6
 10262                           tablat	equ	0xFF5
 10263                           prodh	equ	0xFF4
 10264                           prodl	equ	0xFF3
 10265                           intcon	equ	0xFF2
 10266                           intcon2	equ	0xFF1
 10267                           postinc0	equ	0xFEE
 10268                           fsr0h	equ	0xFEA
 10269                           fsr0l	equ	0xFE9
 10270                           wreg	equ	0xFE8
 10271                           fsr1h	equ	0xFE2
 10272                           fsr1l	equ	0xFE1
 10273                           indf2	equ	0xFDF
 10274                           postinc2	equ	0xFDE
 10275                           postdec2	equ	0xFDD
 10276                           fsr2h	equ	0xFDA
 10277                           fsr2l	equ	0xFD9
 10278                           status	equ	0xFD8
 10279                           
 10280 ;; *************** function _TMR0_ISR *****************
 10281 ;; Defined at:
 10282 ;;		line 84 in file "mcc_generated_files/tmr0.c"
 10283 ;; Parameters:    Size  Location     Type
 10284 ;;		None
 10285 ;; Auto vars:     Size  Location     Type
 10286 ;;		None
 10287 ;; Return value:  Size  Location     Type
 10288 ;;                  1    wreg      void 
 10289 ;; Registers used:
 10290 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 10291 ;; Tracked objects:
 10292 ;;		On entry : 0/0
 10293 ;;		On exit  : 0/0
 10294 ;;		Unchanged: 0/0
 10295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10296 ;;      Params:         0       0       0       0       0       0       0
 10297 ;;      Locals:         0       0       0       0       0       0       0
 10298 ;;      Temps:          0       0       0       0       0       0       0
 10299 ;;      Totals:         0       0       0       0       0       0       0
 10300 ;;Total ram usage:        0 bytes
 10301 ;; Hardware stack levels used:    1
 10302 ;; Hardware stack levels required when called:    1
 10303 ;; This function calls:
 10304 ;;		Absolute function
 10305 ;;		_TMR0_DefaultInterruptHandler
 10306 ;; This function is called by:
 10307 ;;		_INTERRUPT_InterruptManager
 10308 ;; This function uses a non-reentrant model
 10309 ;;
 10310                           
 10311                           	psect	text42
 10312  0052F0                     __ptext42:
 10313                           	opt stack 0
 10314  0052F0                     _TMR0_ISR:
 10315                           	opt stack 23
 10316                           
 10317                           ;tmr0.c: 88: INTCONbits.TMR0IF = 0;
 10318                           
 10319                           ;incstack = 0
 10320  0052F0  94F2               	bcf	intcon,2,c	;volatile
 10321                           
 10322                           ;tmr0.c: 92: TMR0H = timer0ReloadVal >> 8;
 10323  0052F2  0100               	movlb	0	; () banked
 10324  0052F4  51D9               	movf	(_timer0ReloadVal+1)& (0+255),w,b	;volatile
 10325  0052F6  6ED7               	movwf	4055,c	;volatile
 10326                           
 10327                           ; BSR set to: 0
 10328                           ;tmr0.c: 93: TMR0L = (uint8_t) timer0ReloadVal;
 10329  0052F8  C0D8  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 10330                           
 10331                           ; BSR set to: 0
 10332                           ;tmr0.c: 95: if(TMR0_InterruptHandler)
 10333  0052FC  0100               	movlb	0	; () banked
 10334  0052FE  51D6               	movf	_TMR0_InterruptHandler& (0+255),w,b
 10335  005300  0100               	movlb	0	; () banked
 10336  005302  11D7               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 10337  005304  B4D8               	btfsc	status,2,c
 10338  005306  0012               	return	
 10339                           
 10340                           ; BSR set to: 0
 10341                           ;tmr0.c: 96: {
 10342                           ;tmr0.c: 97: TMR0_InterruptHandler();
 10343  005308  D801               	call	i2u1487_48
 10344  00530A  0012               	return	
 10345  00530C                     i2u1487_48:
 10346  00530C  0005               	push	
 10347  00530E  0100               	movlb	0	; () banked
 10348  005310  6EFA               	movwf	pclath,c
 10349  005312  51D6               	movf	_TMR0_InterruptHandler& (0+255),w,b
 10350  005314  6EFD               	movwf	tosl,c
 10351  005316  51D7               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 10352  005318  6EFE               	movwf	tosh,c
 10353  00531A  50F8               	movf	tblptru,w,c
 10354  00531C  6EFF               	movwf	tosu,c
 10355  00531E  50FA               	movf	pclath,w,c
 10356  005320  0012               	return		;indir
 10357  005322                     __end_of_TMR0_ISR:
 10358                           	opt stack 0
 10359                           tosu	equ	0xFFF
 10360                           tosh	equ	0xFFE
 10361                           tosl	equ	0xFFD
 10362                           pclatu	equ	0xFFB
 10363                           pclath	equ	0xFFA
 10364                           tblptru	equ	0xFF8
 10365                           tblptrh	equ	0xFF7
 10366                           tblptrl	equ	0xFF6
 10367                           tablat	equ	0xFF5
 10368                           prodh	equ	0xFF4
 10369                           prodl	equ	0xFF3
 10370                           intcon	equ	0xFF2
 10371                           intcon2	equ	0xFF1
 10372                           postinc0	equ	0xFEE
 10373                           fsr0h	equ	0xFEA
 10374                           fsr0l	equ	0xFE9
 10375                           wreg	equ	0xFE8
 10376                           fsr1h	equ	0xFE2
 10377                           fsr1l	equ	0xFE1
 10378                           indf2	equ	0xFDF
 10379                           postinc2	equ	0xFDE
 10380                           postdec2	equ	0xFDD
 10381                           fsr2h	equ	0xFDA
 10382                           fsr2l	equ	0xFD9
 10383                           status	equ	0xFD8
 10384                           
 10385 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 10386 ;; Defined at:
 10387 ;;		line 108 in file "mcc_generated_files/tmr0.c"
 10388 ;; Parameters:    Size  Location     Type
 10389 ;;		None
 10390 ;; Auto vars:     Size  Location     Type
 10391 ;;		None
 10392 ;; Return value:  Size  Location     Type
 10393 ;;                  1    wreg      void 
 10394 ;; Registers used:
 10395 ;;		wreg, status,2, status,0
 10396 ;; Tracked objects:
 10397 ;;		On entry : 0/0
 10398 ;;		On exit  : 0/0
 10399 ;;		Unchanged: 0/0
 10400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10401 ;;      Params:         0       0       0       0       0       0       0
 10402 ;;      Locals:         0       0       0       0       0       0       0
 10403 ;;      Temps:          1       0       0       0       0       0       0
 10404 ;;      Totals:         1       0       0       0       0       0       0
 10405 ;;Total ram usage:        1 bytes
 10406 ;; Hardware stack levels used:    1
 10407 ;; This function calls:
 10408 ;;		Nothing
 10409 ;; This function is called by:
 10410 ;;		_TMR0_Initialize
 10411 ;;		_TMR0_ISR
 10412 ;; This function uses a non-reentrant model
 10413 ;;
 10414                           
 10415                           	psect	text43
 10416  00547C                     __ptext43:
 10417                           	opt stack 0
 10418  00547C                     _TMR0_DefaultInterruptHandler:
 10419                           	opt stack 23
 10420                           
 10421                           ;tmr0.c: 109: LATBbits.LATB1 = ~LATBbits.LATB1;
 10422                           
 10423                           ;incstack = 0
 10424  00547C  A28A               	btfss	3978,1,c	;volatile
 10425  00547E  D002               	goto	i2u661_40
 10426  005480  0E01               	movlw	1
 10427  005482  D001               	goto	i2u661_46
 10428  005484                     i2u661_40:
 10429  005484  0E00               	movlw	0
 10430  005486                     i2u661_46:
 10431  005486  0AFF               	xorlw	255
 10432  005488  6E01               	movwf	??_TMR0_DefaultInterruptHandler& (0+255),c
 10433  00548A  4601               	rlncf	??_TMR0_DefaultInterruptHandler,f,c
 10434  00548C  508A               	movf	3978,w,c	;volatile
 10435  00548E  1801               	xorwf	??_TMR0_DefaultInterruptHandler,w,c
 10436  005490  0BFD               	andlw	-3
 10437  005492  1801               	xorwf	??_TMR0_DefaultInterruptHandler,w,c
 10438  005494  6E8A               	movwf	3978,c	;volatile
 10439  005496  0012               	return		;funcret
 10440  005498                     __end_of_TMR0_DefaultInterruptHandler:
 10441                           	opt stack 0
 10442                           tosu	equ	0xFFF
 10443                           tosh	equ	0xFFE
 10444                           tosl	equ	0xFFD
 10445                           pclatu	equ	0xFFB
 10446                           pclath	equ	0xFFA
 10447                           tblptru	equ	0xFF8
 10448                           tblptrh	equ	0xFF7
 10449                           tblptrl	equ	0xFF6
 10450                           tablat	equ	0xFF5
 10451                           prodh	equ	0xFF4
 10452                           prodl	equ	0xFF3
 10453                           intcon	equ	0xFF2
 10454                           intcon2	equ	0xFF1
 10455                           postinc0	equ	0xFEE
 10456                           fsr0h	equ	0xFEA
 10457                           fsr0l	equ	0xFE9
 10458                           wreg	equ	0xFE8
 10459                           fsr1h	equ	0xFE2
 10460                           fsr1l	equ	0xFE1
 10461                           indf2	equ	0xFDF
 10462                           postinc2	equ	0xFDE
 10463                           postdec2	equ	0xFDD
 10464                           fsr2h	equ	0xFDA
 10465                           fsr2l	equ	0xFD9
 10466                           status	equ	0xFD8
 10467                           
 10468 ;; *************** function _INT0_ISR *****************
 10469 ;; Defined at:
 10470 ;;		line 23 in file "mcc_generated_files/ext_int.c"
 10471 ;; Parameters:    Size  Location     Type
 10472 ;;		None
 10473 ;; Auto vars:     Size  Location     Type
 10474 ;;		None
 10475 ;; Return value:  Size  Location     Type
 10476 ;;                  1    wreg      void 
 10477 ;; Registers used:
 10478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10479 ;; Tracked objects:
 10480 ;;		On entry : 0/0
 10481 ;;		On exit  : 0/0
 10482 ;;		Unchanged: 0/0
 10483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10484 ;;      Params:         0       0       0       0       0       0       0
 10485 ;;      Locals:         0       0       0       0       0       0       0
 10486 ;;      Temps:          0       0       0       0       0       0       0
 10487 ;;      Totals:         0       0       0       0       0       0       0
 10488 ;;Total ram usage:        0 bytes
 10489 ;; Hardware stack levels used:    1
 10490 ;; Hardware stack levels required when called:    5
 10491 ;; This function calls:
 10492 ;;		_TMR0_ReadTimer
 10493 ;;		_TMR0_Reload
 10494 ;;		_TMR0_StopTimer
 10495 ;;		___ftdiv
 10496 ;;		___lwtoft
 10497 ;;		_printf
 10498 ;;		i2_TMR0_StartTimer
 10499 ;;		i2___ftadd
 10500 ;;		i2___ftmul
 10501 ;; This function is called by:
 10502 ;;		_INTERRUPT_InterruptManager
 10503 ;; This function uses a non-reentrant model
 10504 ;;
 10505                           
 10506                           	psect	text44
 10507  0049EE                     __ptext44:
 10508                           	opt stack 0
 10509  0049EE                     _INT0_ISR:
 10510                           	opt stack 19
 10511                           
 10512                           ;ext_int.c: 26: TMR0_StopTimer();
 10513                           
 10514                           ;incstack = 0
 10515  0049EE  ECBD  F02A         	call	_TMR0_StopTimer	;wreg free
 10516                           
 10517                           ;ext_int.c: 27: reading = TMR0_ReadTimer();
 10518  0049F2  ECE6  F028         	call	_TMR0_ReadTimer	;wreg free
 10519  0049F6  C001  F0D2         	movff	?_TMR0_ReadTimer,_reading
 10520  0049FA  C002  F0D3         	movff	?_TMR0_ReadTimer+1,_reading+1
 10521                           
 10522                           ;ext_int.c: 30: result = 494.5 * ((float)reading - 27) / 3.01004;
 10523  0049FE  0E40               	movlw	64
 10524  004A00  6E24               	movwf	i2___ftmul@f2,c
 10525  004A02  0EF7               	movlw	247
 10526  004A04  6E25               	movwf	i2___ftmul@f2+1,c
 10527  004A06  0E43               	movlw	67
 10528  004A08  6E26               	movwf	i2___ftmul@f2+2,c
 10529  004A0A  0E00               	movlw	0
 10530  004A0C  6E18               	movwf	i2___ftadd@f2,c
 10531  004A0E  0ED8               	movlw	216
 10532  004A10  6E19               	movwf	i2___ftadd@f2+1,c
 10533  004A12  0EC1               	movlw	193
 10534  004A14  6E1A               	movwf	i2___ftadd@f2+2,c
 10535  004A16  C0D2  F009         	movff	_reading,___lwtoft@c
 10536  004A1A  C0D3  F00A         	movff	_reading+1,___lwtoft@c+1
 10537  004A1E  EC0E  F02A         	call	___lwtoft	;wreg free
 10538  004A22  C009  F015         	movff	?___lwtoft,i2___ftadd@f1
 10539  004A26  C00A  F016         	movff	?___lwtoft+1,i2___ftadd@f1+1
 10540  004A2A  C00B  F017         	movff	?___lwtoft+2,i2___ftadd@f1+2
 10541  004A2E  ECAB  F01C         	call	i2___ftadd	;wreg free
 10542  004A32  C015  F021         	movff	?i2___ftadd,i2___ftmul@f1
 10543  004A36  C016  F022         	movff	?i2___ftadd+1,i2___ftmul@f1+1
 10544  004A3A  C017  F023         	movff	?i2___ftadd+2,i2___ftmul@f1+2
 10545  004A3E  EC18  F022         	call	i2___ftmul	;wreg free
 10546  004A42  C021  F030         	movff	?i2___ftmul,___ftdiv@f1
 10547  004A46  C022  F031         	movff	?i2___ftmul+1,___ftdiv@f1+1
 10548  004A4A  C023  F032         	movff	?i2___ftmul+2,___ftdiv@f1+2
 10549  004A4E  0EA4               	movlw	164
 10550  004A50  6E33               	movwf	___ftdiv@f2,c
 10551  004A52  0E40               	movlw	64
 10552  004A54  6E34               	movwf	___ftdiv@f2+1,c
 10553  004A56  0E40               	movlw	64
 10554  004A58  6E35               	movwf	___ftdiv@f2+2,c
 10555  004A5A  EC0C  F023         	call	___ftdiv	;wreg free
 10556  004A5E  C030  F0BE         	movff	?___ftdiv,_result
 10557  004A62  C031  F0BF         	movff	?___ftdiv+1,_result+1
 10558  004A66  C032  F0C0         	movff	?___ftdiv+2,_result+2
 10559                           
 10560                           ;ext_int.c: 33: printf("Capacitance: %0.2f pF (Count: %u)\r\n", result, reading);
 10561  004A6A  0E77               	movlw	low STR_1
 10562  004A6C  6E52               	movwf	printf@f,c
 10563  004A6E  0E06               	movlw	high STR_1
 10564  004A70  6E53               	movwf	printf@f+1,c
 10565  004A72  C0BE  F054         	movff	_result,?_printf+2
 10566  004A76  C0BF  F055         	movff	_result+1,?_printf+3
 10567  004A7A  C0C0  F056         	movff	_result+2,?_printf+4
 10568  004A7E  C0D2  F057         	movff	_reading,?_printf+5
 10569  004A82  C0D3  F058         	movff	_reading+1,?_printf+6
 10570  004A86  EC5D  F029         	call	_printf	;wreg free
 10571                           
 10572                           ;ext_int.c: 36: TMR0_Reload();
 10573  004A8A  ECA2  F02A         	call	_TMR0_Reload	;wreg free
 10574                           
 10575                           ;ext_int.c: 39: TMR0_StartTimer();
 10576  004A8E  ECBB  F02A         	call	i2_TMR0_StartTimer	;wreg free
 10577                           
 10578                           ;ext_int.c: 42: (INTCONbits.INT0IF = 0);
 10579  004A92  92F2               	bcf	intcon,1,c	;volatile
 10580  004A94  0012               	return		;funcret
 10581  004A96                     __end_of_INT0_ISR:
 10582                           	opt stack 0
 10583                           tosu	equ	0xFFF
 10584                           tosh	equ	0xFFE
 10585                           tosl	equ	0xFFD
 10586                           pclatu	equ	0xFFB
 10587                           pclath	equ	0xFFA
 10588                           tblptru	equ	0xFF8
 10589                           tblptrh	equ	0xFF7
 10590                           tblptrl	equ	0xFF6
 10591                           tablat	equ	0xFF5
 10592                           prodh	equ	0xFF4
 10593                           prodl	equ	0xFF3
 10594                           intcon	equ	0xFF2
 10595                           intcon2	equ	0xFF1
 10596                           postinc0	equ	0xFEE
 10597                           fsr0h	equ	0xFEA
 10598                           fsr0l	equ	0xFE9
 10599                           wreg	equ	0xFE8
 10600                           fsr1h	equ	0xFE2
 10601                           fsr1l	equ	0xFE1
 10602                           indf2	equ	0xFDF
 10603                           postinc2	equ	0xFDE
 10604                           postdec2	equ	0xFDD
 10605                           fsr2h	equ	0xFDA
 10606                           fsr2l	equ	0xFD9
 10607                           status	equ	0xFD8
 10608                           
 10609 ;; *************** function i2_TMR0_StartTimer *****************
 10610 ;; Defined at:
 10611 ;;		line 43 in file "mcc_generated_files/tmr0.c"
 10612 ;; Parameters:    Size  Location     Type
 10613 ;;		None
 10614 ;; Auto vars:     Size  Location     Type
 10615 ;;		None
 10616 ;; Return value:  Size  Location     Type
 10617 ;;                  1    wreg      void 
 10618 ;; Registers used:
 10619 ;;		None
 10620 ;; Tracked objects:
 10621 ;;		On entry : 0/0
 10622 ;;		On exit  : 0/0
 10623 ;;		Unchanged: 0/0
 10624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10625 ;;      Params:         0       0       0       0       0       0       0
 10626 ;;      Locals:         0       0       0       0       0       0       0
 10627 ;;      Temps:          0       0       0       0       0       0       0
 10628 ;;      Totals:         0       0       0       0       0       0       0
 10629 ;;Total ram usage:        0 bytes
 10630 ;; Hardware stack levels used:    1
 10631 ;; This function calls:
 10632 ;;		Nothing
 10633 ;; This function is called by:
 10634 ;;		_INT0_ISR
 10635 ;; This function uses a non-reentrant model
 10636 ;;
 10637                           
 10638                           	psect	text45
 10639  005576                     __ptext45:
 10640                           	opt stack 0
 10641  005576                     i2_TMR0_StartTimer:
 10642                           	opt stack 23
 10643                           
 10644                           ;tmr0.c: 46: T0CONbits.TMR0ON = 1;
 10645                           
 10646                           ;incstack = 0
 10647  005576  8ED5               	bsf	4053,7,c	;volatile
 10648  005578  0012               	return		;funcret
 10649  00557A                     __end_ofi2_TMR0_StartTimer:
 10650                           	opt stack 0
 10651                           tosu	equ	0xFFF
 10652                           tosh	equ	0xFFE
 10653                           tosl	equ	0xFFD
 10654                           pclatu	equ	0xFFB
 10655                           pclath	equ	0xFFA
 10656                           tblptru	equ	0xFF8
 10657                           tblptrh	equ	0xFF7
 10658                           tblptrl	equ	0xFF6
 10659                           tablat	equ	0xFF5
 10660                           prodh	equ	0xFF4
 10661                           prodl	equ	0xFF3
 10662                           intcon	equ	0xFF2
 10663                           intcon2	equ	0xFF1
 10664                           postinc0	equ	0xFEE
 10665                           fsr0h	equ	0xFEA
 10666                           fsr0l	equ	0xFE9
 10667                           wreg	equ	0xFE8
 10668                           fsr1h	equ	0xFE2
 10669                           fsr1l	equ	0xFE1
 10670                           indf2	equ	0xFDF
 10671                           postinc2	equ	0xFDE
 10672                           postdec2	equ	0xFDD
 10673                           fsr2h	equ	0xFDA
 10674                           fsr2l	equ	0xFD9
 10675                           status	equ	0xFD8
 10676                           
 10677 ;; *************** function _printf *****************
 10678 ;; Defined at:
 10679 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\printf.c"
 10680 ;; Parameters:    Size  Location     Type
 10681 ;;  f               2   81[COMRAM] PTR const unsigned char 
 10682 ;;		 -> STR_1(36), 
 10683 ;; Auto vars:     Size  Location     Type
 10684 ;;  pb              4   90[COMRAM] struct __prbuf
 10685 ;;  ap              2   88[COMRAM] PTR void [1]
 10686 ;;		 -> ?_sprintf(2), ?_printf(2), 
 10687 ;; Return value:  Size  Location     Type
 10688 ;;                  2   81[COMRAM] int 
 10689 ;; Registers used:
 10690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10691 ;; Tracked objects:
 10692 ;;		On entry : 0/0
 10693 ;;		On exit  : 0/0
 10694 ;;		Unchanged: 0/0
 10695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10696 ;;      Params:         7       0       0       0       0       0       0
 10697 ;;      Locals:         6       0       0       0       0       0       0
 10698 ;;      Temps:          0       0       0       0       0       0       0
 10699 ;;      Totals:        13       0       0       0       0       0       0
 10700 ;;Total ram usage:       13 bytes
 10701 ;; Hardware stack levels used:    1
 10702 ;; Hardware stack levels required when called:    4
 10703 ;; This function calls:
 10704 ;;		i2__doprnt
 10705 ;; This function is called by:
 10706 ;;		_INT0_ISR
 10707 ;; This function uses a non-reentrant model
 10708 ;;
 10709                           
 10710                           	psect	text46
 10711  0052BA                     __ptext46:
 10712                           	opt stack 0
 10713  0052BA                     _printf:
 10714                           	opt stack 19
 10715                           
 10716                           ;incstack = 0
 10717  0052BA  0E00               	movlw	0
 10718  0052BC  6E5B               	movwf	printf@pb,c
 10719  0052BE  0E00               	movlw	0
 10720  0052C0  6E5C               	movwf	printf@pb+1,c
 10721  0052C2  0E64               	movlw	low i2_putch
 10722  0052C4  6E5D               	movwf	printf@pb+2,c
 10723  0052C6  0E55               	movlw	high i2_putch
 10724  0052C8  6E5E               	movwf	printf@pb+3,c
 10725  0052CA  0E54               	movlw	low (?_printf+2)
 10726  0052CC  6E59               	movwf	printf@ap,c
 10727  0052CE  0E00               	movlw	high (?_printf+2)
 10728  0052D0  6E5A               	movwf	printf@ap+1,c
 10729                           
 10730                           ;	Return value of _printf is never used
 10731  0052D2  0E5B               	movlw	low printf@pb
 10732  0052D4  6E46               	movwf	i2__doprnt@pb,c
 10733  0052D6  0E00               	movlw	high printf@pb
 10734  0052D8  6E47               	movwf	i2__doprnt@pb+1,c
 10735  0052DA  C052  F048         	movff	printf@f,i2__doprnt@f
 10736  0052DE  C053  F049         	movff	printf@f+1,i2__doprnt@f+1
 10737  0052E2  0E59               	movlw	low printf@ap
 10738  0052E4  6E4A               	movwf	i2__doprnt@ap,c
 10739  0052E6  0E00               	movlw	high printf@ap
 10740  0052E8  6E4B               	movwf	i2__doprnt@ap+1,c
 10741  0052EA  EC41  F00C         	call	i2__doprnt	;wreg free
 10742  0052EE  0012               	return	
 10743  0052F0                     __end_of_printf:
 10744                           	opt stack 0
 10745                           tosu	equ	0xFFF
 10746                           tosh	equ	0xFFE
 10747                           tosl	equ	0xFFD
 10748                           pclatu	equ	0xFFB
 10749                           pclath	equ	0xFFA
 10750                           tblptru	equ	0xFF8
 10751                           tblptrh	equ	0xFF7
 10752                           tblptrl	equ	0xFF6
 10753                           tablat	equ	0xFF5
 10754                           prodh	equ	0xFF4
 10755                           prodl	equ	0xFF3
 10756                           intcon	equ	0xFF2
 10757                           intcon2	equ	0xFF1
 10758                           postinc0	equ	0xFEE
 10759                           fsr0h	equ	0xFEA
 10760                           fsr0l	equ	0xFE9
 10761                           wreg	equ	0xFE8
 10762                           fsr1h	equ	0xFE2
 10763                           fsr1l	equ	0xFE1
 10764                           indf2	equ	0xFDF
 10765                           postinc2	equ	0xFDE
 10766                           postdec2	equ	0xFDD
 10767                           fsr2h	equ	0xFDA
 10768                           fsr2l	equ	0xFD9
 10769                           status	equ	0xFD8
 10770                           
 10771 ;; *************** function i2__doprnt *****************
 10772 ;; Defined at:
 10773 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 10774 ;; Parameters:    Size  Location     Type
 10775 ;;  pb              2   69[COMRAM] PTR struct __prbuf
 10776 ;;		 -> sprintf@pb(4), printf@pb(4), 
 10777 ;;  f               2   71[COMRAM] PTR const unsigned char 
 10778 ;;		 -> STR_3(11), STR_2(11), STR_1(36), 
 10779 ;;  ap              2   73[COMRAM] PTR PTR void 
 10780 ;;		 -> sprintf@ap(2), printf@ap(2), 
 10781 ;; Auto vars:     Size  Location     Type
 10782 ;;  _doprnt         4    9[BANK0 ] struct .
 10783 ;;  _doprnt         4    3[BANK0 ] unsigned long 
 10784 ;;  _doprnt         3   13[BANK0 ] unsigned long 
 10785 ;;  _doprnt         3    0        PTR const unsigned char 
 10786 ;;  _doprnt         2   20[BANK0 ] int 
 10787 ;;  _doprnt         2   18[BANK0 ] int 
 10788 ;;  _doprnt         2   16[BANK0 ] unsigned short 
 10789 ;;  _doprnt         2    7[BANK0 ] int 
 10790 ;;  _doprnt         2    0        unsigned int 
 10791 ;;  _doprnt         1   22[BANK0 ] char 
 10792 ;;  _doprnt         1    0        unsigned char 
 10793 ;; Return value:  Size  Location     Type
 10794 ;;                  2   69[COMRAM] int 
 10795 ;; Registers used:
 10796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10797 ;; Tracked objects:
 10798 ;;		On entry : 0/0
 10799 ;;		On exit  : 0/0
 10800 ;;		Unchanged: 0/0
 10801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10802 ;;      Params:         6       0       0       0       0       0       0
 10803 ;;      Locals:         0      23       0       0       0       0       0
 10804 ;;      Temps:          6       0       0       0       0       0       0
 10805 ;;      Totals:        12      23       0       0       0       0       0
 10806 ;;Total ram usage:       35 bytes
 10807 ;; Hardware stack levels used:    1
 10808 ;; Hardware stack levels required when called:    3
 10809 ;; This function calls:
 10810 ;;		Absolute function
 10811 ;;		i2___awdiv
 10812 ;;		i2___ftadd
 10813 ;;		i2___ftge
 10814 ;;		i2___ftmul
 10815 ;;		i2___ftneg
 10816 ;;		i2___ftsub
 10817 ;;		i2___fttol
 10818 ;;		i2___lldiv
 10819 ;;		i2___llmod
 10820 ;;		i2___lltoft
 10821 ;;		i2___wmul
 10822 ;;		i2__div_to_l_
 10823 ;;		i2__tdiv_to_l_
 10824 ;;		i2_fround
 10825 ;;		i2_isdigit
 10826 ;;		i2_putch
 10827 ;;		i2_scale
 10828 ;; This function is called by:
 10829 ;;		_printf
 10830 ;; This function uses a non-reentrant model
 10831 ;;
 10832                           
 10833                           	psect	text47
 10834  001882                     __ptext47:
 10835                           	opt stack 0
 10836  001882                     i2__doprnt:
 10837                           	opt stack 19
 10838                           
 10839                           ;doprnt.c: 499: signed char c;
 10840                           ;doprnt.c: 501: int width;
 10841                           ;doprnt.c: 504: int prec;
 10842                           ;doprnt.c: 508: unsigned short flag;
 10843                           ;doprnt.c: 515: char d;
 10844                           ;doprnt.c: 516: double fval;
 10845                           ;doprnt.c: 517: int exp;
 10846                           ;doprnt.c: 523: union {
 10847                           ;doprnt.c: 524: unsigned long vd;
 10848                           ;doprnt.c: 525: double integ;
 10849                           ;doprnt.c: 526: } tmpval;
 10850                           ;doprnt.c: 528: unsigned long val;
 10851                           ;doprnt.c: 529: unsigned len;
 10852                           ;doprnt.c: 530: const char * cp;
 10853                           ;doprnt.c: 536: while(c = *f++) {
 10854                           
 10855                           ;incstack = 0
 10856  001882  EF9C  F014         	goto	i2l8506
 10857  001886                     i2l8130:
 10858                           
 10859                           ;doprnt.c: 538: if(c != '%')
 10860  001886  0E25               	movlw	37
 10861  001888  0100               	movlb	0	; () banked
 10862  00188A  1976               	xorwf	i2__doprnt@c& (0+255),w,b
 10863  00188C  B4D8               	btfsc	status,2,c
 10864  00188E  D036               	goto	i2l8140
 10865                           
 10866                           ; BSR set to: 0
 10867                           ;doprnt.c: 540: {
 10868                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 10869  001890  EE20 F002          	lfsr	2,2
 10870  001894  5046               	movf	i2__doprnt@pb,w,c
 10871  001896  26D9               	addwf	fsr2l,f,c
 10872  001898  5047               	movf	i2__doprnt@pb+1,w,c
 10873  00189A  22DA               	addwfc	fsr2h,f,c
 10874  00189C  50DE               	movf	postinc2,w,c
 10875  00189E  10DE               	iorwf	postinc2,w,c
 10876  0018A0  B4D8               	btfsc	status,2,c
 10877  0018A2  D015               	goto	i2l8136
 10878                           
 10879                           ; BSR set to: 0
 10880  0018A4  EE20 F002          	lfsr	2,2
 10881  0018A8  5046               	movf	i2__doprnt@pb,w,c
 10882  0018AA  26D9               	addwf	fsr2l,f,c
 10883  0018AC  5047               	movf	i2__doprnt@pb+1,w,c
 10884  0018AE  22DA               	addwfc	fsr2h,f,c
 10885  0018B0  D802               	call	i2u1314_48
 10886  0018B2  EF9C  F014         	goto	i2l8506
 10887  0018B6                     i2u1314_48:
 10888  0018B6  0005               	push	
 10889  0018B8  6EFA               	movwf	pclath,c
 10890  0018BA  50DE               	movf	postinc2,w,c
 10891  0018BC  6EFD               	movwf	tosl,c
 10892  0018BE  50DE               	movf	postinc2,w,c
 10893  0018C0  6EFE               	movwf	tosh,c
 10894  0018C2  50F8               	movf	tblptru,w,c
 10895  0018C4  6EFF               	movwf	tosu,c
 10896  0018C6  50FA               	movf	pclath,w,c
 10897  0018C8  0100               	movlb	0	; () banked
 10898  0018CA  5176               	movf	i2__doprnt@c& (0+255),w,b
 10899  0018CC  0012               	return		;indir
 10900  0018CE                     i2l8136:
 10901  0018CE  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 10902  0018D2  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 10903  0018D6  CFDE F04C          	movff	postinc2,??i2__doprnt
 10904  0018DA  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 10905  0018DE  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 10906  0018E2  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 10907  0018E6  C076  FFDF         	movff	i2__doprnt@c,indf2
 10908  0018EA  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 10909  0018EE  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 10910  0018F2  2ADE               	incf	postinc2,f,c
 10911  0018F4  0E00               	movlw	0
 10912  0018F6  22DD               	addwfc	postdec2,f,c
 10913                           
 10914                           ;doprnt.c: 542: continue;
 10915  0018F8  EF9C  F014         	goto	i2l8506
 10916  0018FC                     i2l8140:
 10917                           
 10918                           ;doprnt.c: 543: }
 10919                           ;doprnt.c: 546: width = 0;
 10920  0018FC  0E00               	movlw	0
 10921  0018FE  0100               	movlb	0	; () banked
 10922  001900  6F73               	movwf	(i2__doprnt@width+1)& (0+255),b
 10923  001902  0E00               	movlw	0
 10924  001904  6F72               	movwf	i2__doprnt@width& (0+255),b
 10925                           
 10926                           ;doprnt.c: 548: flag = 0;
 10927  001906  0E00               	movlw	0
 10928  001908  0100               	movlb	0	; () banked
 10929  00190A  6F71               	movwf	(i2__doprnt@flag+1)& (0+255),b
 10930  00190C  0E00               	movlw	0
 10931  00190E  6F70               	movwf	i2__doprnt@flag& (0+255),b
 10932                           
 10933                           ; BSR set to: 0
 10934                           ;doprnt.c: 551: switch(*f) {
 10935                           
 10936                           ;doprnt.c: 550: for(;;) {
 10937  001910  D004               	goto	i2l8146
 10938  001912                     i2l8142:
 10939                           
 10940                           ;doprnt.c: 580: flag |= 0x04;
 10941  001912  0100               	movlb	0	; () banked
 10942  001914  8570               	bsf	i2__doprnt@flag& (0+255),2,b
 10943                           
 10944                           ;doprnt.c: 581: f++;
 10945  001916  4A48               	infsnz	i2__doprnt@f,f,c
 10946  001918  2A49               	incf	i2__doprnt@f+1,f,c
 10947  00191A                     i2l8146:
 10948  00191A  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 10949  00191E  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 10950  001922                     	if	0	;tblptru may be non-zero
 10951  001922                     	endif
 10952  001922                     	if	0	;tblptru may be non-zero
 10953  001922                     	endif
 10954  001922  0008               	tblrd		*
 10955  001924  50F5               	movf	tablat,w,c
 10956                           
 10957                           ; Switch size 1, requested type "space"
 10958                           ; Number of cases is 1, Range of values is 48 to 48
 10959                           ; switch strategies available:
 10960                           ; Name         Instructions Cycles
 10961                           ; simple_byte            4     3 (average)
 10962                           ;	Chosen strategy is simple_byte
 10963  001926  0A30               	xorlw	48	; case 48
 10964  001928  B4D8               	btfsc	status,2,c
 10965  00192A  D7F3               	goto	i2l8142
 10966                           
 10967                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 10968                           
 10969                           ;doprnt.c: 586: }
 10970                           
 10971                           ;doprnt.c: 585: break;
 10972  00192C  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 10973  001930  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 10974  001934                     	if	0	;tblptru may be non-zero
 10975  001934                     	endif
 10976  001934                     	if	0	;tblptru may be non-zero
 10977  001934                     	endif
 10978  001934  0008               	tblrd		*
 10979  001936  50F5               	movf	tablat,w,c
 10980  001938  EC2F  F02A         	call	i2_isdigit
 10981  00193C  A0D8               	btfss	status,0,c
 10982  00193E  D035               	goto	i2l8160
 10983                           
 10984                           ;doprnt.c: 598: width = 0;
 10985  001940  0E00               	movlw	0
 10986  001942  0100               	movlb	0	; () banked
 10987  001944  6F73               	movwf	(i2__doprnt@width+1)& (0+255),b
 10988  001946  0E00               	movlw	0
 10989  001948  6F72               	movwf	i2__doprnt@width& (0+255),b
 10990  00194A                     i2l8152:
 10991                           
 10992                           ;doprnt.c: 600: width *= 10;
 10993  00194A  C072  F00F         	movff	i2__doprnt@width,i2___wmul@multiplier
 10994  00194E  C073  F010         	movff	i2__doprnt@width+1,i2___wmul@multiplier+1
 10995  001952  0E00               	movlw	0
 10996  001954  6E12               	movwf	i2___wmul@multiplicand+1,c
 10997  001956  0E0A               	movlw	10
 10998  001958  6E11               	movwf	i2___wmul@multiplicand,c
 10999  00195A  ECE9  F029         	call	i2___wmul	;wreg free
 11000  00195E  C00F  F072         	movff	?i2___wmul,i2__doprnt@width
 11001  001962  C010  F073         	movff	?i2___wmul+1,i2__doprnt@width+1
 11002                           
 11003                           ;doprnt.c: 601: width += *f++ - '0';
 11004  001966  0ED0               	movlw	208
 11005  001968  6E4C               	movwf	??i2__doprnt& (0+255),c
 11006  00196A  0EFF               	movlw	255
 11007  00196C  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 11008  00196E  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 11009  001972  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 11010  001976                     	if	0	;tblptru may be non-zero
 11011  001976                     	endif
 11012  001976                     	if	0	;tblptru may be non-zero
 11013  001976                     	endif
 11014  001976  0008               	tblrd		*
 11015  001978  50F5               	movf	tablat,w,c
 11016  00197A  6E4E               	movwf	(??i2__doprnt+2)& (0+255),c
 11017  00197C  6A4F               	clrf	(??i2__doprnt+3)& (0+255),c
 11018  00197E  504C               	movf	??i2__doprnt,w,c
 11019  001980  264E               	addwf	??i2__doprnt+2,f,c
 11020  001982  504D               	movf	??i2__doprnt+1,w,c
 11021  001984  224F               	addwfc	??i2__doprnt+3,f,c
 11022  001986  504E               	movf	??i2__doprnt+2,w,c
 11023  001988  0100               	movlb	0	; () banked
 11024  00198A  2772               	addwf	i2__doprnt@width& (0+255),f,b
 11025  00198C  504F               	movf	??i2__doprnt+3,w,c
 11026  00198E  0100               	movlb	0	; () banked
 11027  001990  2373               	addwfc	(i2__doprnt@width+1)& (0+255),f,b
 11028                           
 11029                           ; BSR set to: 0
 11030  001992  4A48               	infsnz	i2__doprnt@f,f,c
 11031  001994  2A49               	incf	i2__doprnt@f+1,f,c
 11032                           
 11033                           ; BSR set to: 0
 11034                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 11035  001996  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 11036  00199A  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 11037  00199E                     	if	0	;tblptru may be non-zero
 11038  00199E                     	endif
 11039  00199E                     	if	0	;tblptru may be non-zero
 11040  00199E                     	endif
 11041  00199E  0008               	tblrd		*
 11042  0019A0  50F5               	movf	tablat,w,c
 11043  0019A2  EC2F  F02A         	call	i2_isdigit
 11044  0019A6  B0D8               	btfsc	status,0,c
 11045  0019A8  D7D0               	goto	i2l8152
 11046  0019AA                     i2l8160:
 11047                           
 11048                           ;doprnt.c: 608: }
 11049                           ;doprnt.c: 611: if(*f == '.') {
 11050  0019AA  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 11051  0019AE  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 11052  0019B2                     	if	0	;tblptru may be non-zero
 11053  0019B2                     	endif
 11054  0019B2                     	if	0	;tblptru may be non-zero
 11055  0019B2                     	endif
 11056  0019B2  0008               	tblrd		*
 11057  0019B4  50F5               	movf	tablat,w,c
 11058  0019B6  0A2E               	xorlw	46
 11059  0019B8  A4D8               	btfss	status,2,c
 11060  0019BA  D032               	goto	i2l8172
 11061                           
 11062                           ;doprnt.c: 612: flag |= 0x4000;
 11063  0019BC  0100               	movlb	0	; () banked
 11064  0019BE  8D71               	bsf	(i2__doprnt@flag+1)& (0+255),6,b
 11065                           
 11066                           ;doprnt.c: 613: f++;
 11067  0019C0  4A48               	infsnz	i2__doprnt@f,f,c
 11068  0019C2  2A49               	incf	i2__doprnt@f+1,f,c
 11069                           
 11070                           ; BSR set to: 0
 11071                           ;doprnt.c: 620: {
 11072                           ;doprnt.c: 621: prec = 0;
 11073  0019C4  0E00               	movlw	0
 11074  0019C6  0100               	movlb	0	; () banked
 11075  0019C8  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 11076  0019CA  0E00               	movlw	0
 11077  0019CC  6F74               	movwf	i2__doprnt@prec& (0+255),b
 11078                           
 11079                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 11080  0019CE  D01D               	goto	i2l8170
 11081  0019D0                     i2l8166:
 11082                           
 11083                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 11084  0019D0  C074  F00F         	movff	i2__doprnt@prec,i2___wmul@multiplier
 11085  0019D4  C075  F010         	movff	i2__doprnt@prec+1,i2___wmul@multiplier+1
 11086  0019D8  0E00               	movlw	0
 11087  0019DA  6E12               	movwf	i2___wmul@multiplicand+1,c
 11088  0019DC  0E0A               	movlw	10
 11089  0019DE  6E11               	movwf	i2___wmul@multiplicand,c
 11090  0019E0  ECE9  F029         	call	i2___wmul	;wreg free
 11091  0019E4  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 11092  0019E8  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 11093  0019EC                     	if	0	;tblptru may be non-zero
 11094  0019EC                     	endif
 11095  0019EC                     	if	0	;tblptru may be non-zero
 11096  0019EC                     	endif
 11097  0019EC  0008               	tblrd		*
 11098  0019EE  50F5               	movf	tablat,w,c
 11099  0019F0  260F               	addwf	?i2___wmul,f,c
 11100  0019F2  0E00               	movlw	0
 11101  0019F4  2210               	addwfc	?i2___wmul+1,f,c
 11102  0019F6  0ED0               	movlw	208
 11103  0019F8  240F               	addwf	?i2___wmul,w,c
 11104  0019FA  0100               	movlb	0	; () banked
 11105  0019FC  6F74               	movwf	i2__doprnt@prec& (0+255),b
 11106  0019FE  0EFF               	movlw	255
 11107  001A00  2010               	addwfc	?i2___wmul+1,w,c
 11108  001A02  0100               	movlb	0	; () banked
 11109  001A04  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 11110                           
 11111                           ; BSR set to: 0
 11112  001A06  4A48               	infsnz	i2__doprnt@f,f,c
 11113  001A08  2A49               	incf	i2__doprnt@f+1,f,c
 11114  001A0A                     i2l8170:
 11115                           
 11116                           ; BSR set to: 0
 11117  001A0A  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 11118  001A0E  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 11119  001A12                     	if	0	;tblptru may be non-zero
 11120  001A12                     	endif
 11121  001A12                     	if	0	;tblptru may be non-zero
 11122  001A12                     	endif
 11123  001A12  0008               	tblrd		*
 11124  001A14  50F5               	movf	tablat,w,c
 11125  001A16  EC2F  F02A         	call	i2_isdigit
 11126  001A1A  A0D8               	btfss	status,0,c
 11127  001A1C  D013               	goto	i2l8184
 11128  001A1E  D7D8               	goto	i2l8166
 11129  001A20                     i2l8172:
 11130                           
 11131                           ;doprnt.c: 626: prec = 0;
 11132  001A20  0E00               	movlw	0
 11133  001A22  0100               	movlb	0	; () banked
 11134  001A24  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 11135  001A26  0E00               	movlw	0
 11136  001A28  6F74               	movwf	i2__doprnt@prec& (0+255),b
 11137                           
 11138                           ; BSR set to: 0
 11139                           ;doprnt.c: 628: flag |= 0x1000;
 11140  001A2A  0100               	movlb	0	; () banked
 11141  001A2C  8971               	bsf	(i2__doprnt@flag+1)& (0+255),4,b
 11142                           
 11143                           ; BSR set to: 0
 11144                           ;doprnt.c: 635: switch(c = *f++) {
 11145                           
 11146                           ;doprnt.c: 630: }
 11147                           ;doprnt.c: 633: loop:
 11148                           
 11149                           ; BSR set to: 0
 11150  001A2E  D00A               	goto	i2l8184
 11151  001A30                     i2l8176:
 11152                           
 11153                           ; BSR set to: 0
 11154                           ;doprnt.c: 643: flag |= 0x10;
 11155  001A30  0100               	movlb	0	; () banked
 11156  001A32  8970               	bsf	i2__doprnt@flag& (0+255),4,b
 11157                           
 11158                           ;doprnt.c: 644: goto loop;
 11159  001A34  D007               	goto	i2l8184
 11160  001A36                     i2l8178:
 11161                           
 11162                           ; BSR set to: 0
 11163                           ;doprnt.c: 663: flag |= 0x400;
 11164  001A36  0100               	movlb	0	; () banked
 11165  001A38  8571               	bsf	(i2__doprnt@flag+1)& (0+255),2,b
 11166                           
 11167                           ;doprnt.c: 664: break;
 11168  001A3A  D01E               	goto	i2l8186
 11169  001A3C                     i2l8180:
 11170                           
 11171                           ; BSR set to: 0
 11172                           ;doprnt.c: 818: flag |= 0xC0;
 11173  001A3C  0EC0               	movlw	192
 11174  001A3E  0100               	movlb	0	; () banked
 11175  001A40  1370               	iorwf	i2__doprnt@flag& (0+255),f,b
 11176                           
 11177                           ; BSR set to: 0
 11178                           ;doprnt.c: 822: }
 11179                           
 11180                           ;doprnt.c: 819: break;
 11181  001A42  D01A               	goto	i2l8186
 11182  001A44                     i2l8184:
 11183  001A44  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 11184  001A48  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 11185  001A4C  4A48               	infsnz	i2__doprnt@f,f,c
 11186  001A4E  2A49               	incf	i2__doprnt@f+1,f,c
 11187  001A50                     	if	0	;tblptru may be non-zero
 11188  001A50                     	endif
 11189  001A50                     	if	0	;tblptru may be non-zero
 11190  001A50                     	endif
 11191  001A50  0008               	tblrd		*
 11192  001A52  CFF5 F076          	movff	tablat,i2__doprnt@c
 11193  001A56  0100               	movlb	0	; () banked
 11194  001A58  5176               	movf	i2__doprnt@c& (0+255),w,b
 11195                           
 11196                           ; Switch size 1, requested type "space"
 11197                           ; Number of cases is 4, Range of values is 0 to 117
 11198                           ; switch strategies available:
 11199                           ; Name         Instructions Cycles
 11200                           ; simple_byte           13     7 (average)
 11201                           ;	Chosen strategy is simple_byte
 11202  001A5A  0A00               	xorlw	0	; case 0
 11203  001A5C  B4D8               	btfsc	status,2,c
 11204  001A5E  EFAA  F014         	goto	i2l8508
 11205  001A62  0A66               	xorlw	102	; case 102
 11206  001A64  B4D8               	btfsc	status,2,c
 11207  001A66  D7E7               	goto	i2l8178
 11208  001A68  0A0A               	xorlw	10	; case 108
 11209  001A6A  B4D8               	btfsc	status,2,c
 11210  001A6C  D7E1               	goto	i2l8176
 11211  001A6E  0A19               	xorlw	25	; case 117
 11212  001A70  B4D8               	btfsc	status,2,c
 11213  001A72  D7E4               	goto	i2l8180
 11214  001A74  EF9C  F014         	goto	i2l8506
 11215  001A78                     i2l8186:
 11216                           
 11217                           ; BSR set to: 0
 11218                           ;doprnt.c: 825: if(flag & (0x700)) {
 11219  001A78  0E07               	movlw	7
 11220  001A7A  0100               	movlb	0	; () banked
 11221  001A7C  1571               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 11222  001A7E  B4D8               	btfsc	status,2,c
 11223  001A80  EF3E  F012         	goto	i2l351
 11224                           
 11225                           ; BSR set to: 0
 11226                           ;doprnt.c: 827: if(flag & 0x1000)
 11227  001A84  0100               	movlb	0	; () banked
 11228  001A86  A971               	btfss	(i2__doprnt@flag+1)& (0+255),4,b
 11229  001A88  D005               	goto	i2l8192
 11230                           
 11231                           ; BSR set to: 0
 11232                           ;doprnt.c: 829: prec = 6;
 11233  001A8A  0E00               	movlw	0
 11234  001A8C  0100               	movlb	0	; () banked
 11235  001A8E  6F75               	movwf	(i2__doprnt@prec+1)& (0+255),b
 11236  001A90  0E06               	movlw	6
 11237  001A92  6F74               	movwf	i2__doprnt@prec& (0+255),b
 11238  001A94                     i2l8192:
 11239                           
 11240                           ; BSR set to: 0
 11241                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 11242  001A94  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 11243  001A98  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 11244  001A9C  CFDF F04C          	movff	indf2,??i2__doprnt
 11245  001AA0  0E03               	movlw	3
 11246  001AA2  26DE               	addwf	postinc2,f,c
 11247  001AA4  CFDF F04D          	movff	indf2,??i2__doprnt+1
 11248  001AA8  0E00               	movlw	0
 11249  001AAA  22DD               	addwfc	postdec2,f,c
 11250  001AAC  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 11251  001AB0  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 11252  001AB4  CFDE F06D          	movff	postinc2,i2__doprnt@fval
 11253  001AB8  CFDE F06E          	movff	postinc2,i2__doprnt@fval+1
 11254  001ABC  CFDD F06F          	movff	postdec2,i2__doprnt@fval+2
 11255                           
 11256                           ; BSR set to: 0
 11257                           ;doprnt.c: 831: if(fval < 0.0) {
 11258  001AC0  0100               	movlb	0	; () banked
 11259  001AC2  AF6F               	btfss	(i2__doprnt@fval+2)& (0+255),7,b
 11260  001AC4  D011               	goto	i2l8200
 11261                           
 11262                           ; BSR set to: 0
 11263                           ;doprnt.c: 832: fval = -fval;
 11264  001AC6  C06D  F001         	movff	i2__doprnt@fval,i2___ftneg@f1
 11265  001ACA  C06E  F002         	movff	i2__doprnt@fval+1,i2___ftneg@f1+1
 11266  001ACE  C06F  F003         	movff	i2__doprnt@fval+2,i2___ftneg@f1+2
 11267  001AD2  ECFC  F029         	call	i2___ftneg	;wreg free
 11268  001AD6  C001  F06D         	movff	?i2___ftneg,i2__doprnt@fval
 11269  001ADA  C002  F06E         	movff	?i2___ftneg+1,i2__doprnt@fval+1
 11270  001ADE  C003  F06F         	movff	?i2___ftneg+2,i2__doprnt@fval+2
 11271                           
 11272                           ;doprnt.c: 833: flag |= 0x03;
 11273  001AE2  0E03               	movlw	3
 11274  001AE4  0100               	movlb	0	; () banked
 11275  001AE6  1370               	iorwf	i2__doprnt@flag& (0+255),f,b
 11276  001AE8                     i2l8200:
 11277                           
 11278                           ; BSR set to: 0
 11279                           ;doprnt.c: 834: }
 11280                           ;doprnt.c: 835: exp = 0;
 11281  001AE8  0E00               	movlw	0
 11282  001AEA  0100               	movlb	0	; () banked
 11283  001AEC  6F68               	movwf	(i2__doprnt@exp+1)& (0+255),b
 11284  001AEE  0E00               	movlw	0
 11285  001AF0  6F67               	movwf	i2__doprnt@exp& (0+255),b
 11286                           
 11287                           ; BSR set to: 0
 11288                           ;doprnt.c: 836: if( fval!=0) {
 11289  001AF2  0100               	movlb	0	; () banked
 11290  001AF4  516D               	movf	i2__doprnt@fval& (0+255),w,b
 11291  001AF6  0100               	movlb	0	; () banked
 11292  001AF8  116E               	iorwf	(i2__doprnt@fval+1)& (0+255),w,b
 11293  001AFA  0100               	movlb	0	; () banked
 11294  001AFC  116F               	iorwf	(i2__doprnt@fval+2)& (0+255),w,b
 11295  001AFE  B4D8               	btfsc	status,2,c
 11296  001B00  D08B               	goto	i2l8228
 11297                           
 11298                           ; BSR set to: 0
 11299                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 11300  001B02  0E82               	movlw	130
 11301  001B04  6E4C               	movwf	??i2__doprnt& (0+255),c
 11302  001B06  0EFF               	movlw	255
 11303  001B08  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 11304  001B0A  C06D  F04E         	movff	i2__doprnt@fval,??i2__doprnt+2
 11305  001B0E  C06E  F04F         	movff	i2__doprnt@fval+1,??i2__doprnt+3
 11306  001B12  C06F  F050         	movff	i2__doprnt@fval+2,??i2__doprnt+4
 11307  001B16  C070  F051         	movff	i2__doprnt@fval+3,??i2__doprnt+5
 11308  001B1A  0E10               	movlw	16
 11309  001B1C  D005               	goto	i2u1323_40
 11310  001B1E                     i2u1323_45:
 11311  001B1E  90D8               	bcf	status,0,c
 11312  001B20  3251               	rrcf	??i2__doprnt+5,f,c
 11313  001B22  3250               	rrcf	??i2__doprnt+4,f,c
 11314  001B24  324F               	rrcf	??i2__doprnt+3,f,c
 11315  001B26  324E               	rrcf	??i2__doprnt+2,f,c
 11316  001B28                     i2u1323_40:
 11317  001B28  2EE8               	decfsz	wreg,f,c
 11318  001B2A  D7F9               	goto	i2u1323_45
 11319  001B2C  504E               	movf	??i2__doprnt+2,w,c
 11320  001B2E  244C               	addwf	??i2__doprnt,w,c
 11321  001B30  0100               	movlb	0	; () banked
 11322  001B32  6F67               	movwf	i2__doprnt@exp& (0+255),b
 11323  001B34  0E00               	movlw	0
 11324  001B36  204D               	addwfc	??i2__doprnt+1,w,c
 11325  001B38  0100               	movlb	0	; () banked
 11326  001B3A  6F68               	movwf	(i2__doprnt@exp+1)& (0+255),b
 11327                           
 11328                           ; BSR set to: 0
 11329                           ;doprnt.c: 838: exp--;
 11330  001B3C  0100               	movlb	0	; () banked
 11331  001B3E  0767               	decf	i2__doprnt@exp& (0+255),f,b
 11332  001B40  A0D8               	btfss	status,0,c
 11333  001B42  0768               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 11334                           
 11335                           ; BSR set to: 0
 11336                           ;doprnt.c: 839: exp *= 3;
 11337  001B44  C067  F00F         	movff	i2__doprnt@exp,i2___wmul@multiplier
 11338  001B48  C068  F010         	movff	i2__doprnt@exp+1,i2___wmul@multiplier+1
 11339  001B4C  0E00               	movlw	0
 11340  001B4E  6E12               	movwf	i2___wmul@multiplicand+1,c
 11341  001B50  0E03               	movlw	3
 11342  001B52  6E11               	movwf	i2___wmul@multiplicand,c
 11343  001B54  ECE9  F029         	call	i2___wmul	;wreg free
 11344  001B58  C00F  F067         	movff	?i2___wmul,i2__doprnt@exp
 11345  001B5C  C010  F068         	movff	?i2___wmul+1,i2__doprnt@exp+1
 11346                           
 11347                           ;doprnt.c: 840: exp /= 10;
 11348  001B60  C067  F007         	movff	i2__doprnt@exp,i2___awdiv@dividend
 11349  001B64  C068  F008         	movff	i2__doprnt@exp+1,i2___awdiv@dividend+1
 11350  001B68  0E00               	movlw	0
 11351  001B6A  6E0A               	movwf	i2___awdiv@divisor+1,c
 11352  001B6C  0E0A               	movlw	10
 11353  001B6E  6E09               	movwf	i2___awdiv@divisor,c
 11354  001B70  EC31  F026         	call	i2___awdiv	;wreg free
 11355  001B74  C007  F067         	movff	?i2___awdiv,i2__doprnt@exp
 11356  001B78  C008  F068         	movff	?i2___awdiv+1,i2__doprnt@exp+1
 11357                           
 11358                           ;doprnt.c: 841: if(exp < 0)
 11359  001B7C  0100               	movlb	0	; () banked
 11360  001B7E  AF68               	btfss	(i2__doprnt@exp+1)& (0+255),7,b
 11361  001B80  D004               	goto	i2l8216
 11362                           
 11363                           ; BSR set to: 0
 11364                           ;doprnt.c: 842: exp--;
 11365  001B82  0100               	movlb	0	; () banked
 11366  001B84  0767               	decf	i2__doprnt@exp& (0+255),f,b
 11367  001B86  A0D8               	btfss	status,0,c
 11368  001B88  0768               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 11369  001B8A                     i2l8216:
 11370                           
 11371                           ; BSR set to: 0
 11372                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 11373  001B8A  0100               	movlb	0	; () banked
 11374  001B8C  5167               	movf	i2__doprnt@exp& (0+255),w,b
 11375  001B8E  0800               	sublw	0
 11376  001B90  EC06  F017         	call	i2_scale
 11377  001B94  C030  F069         	movff	?i2_scale,i2__doprnt@tmpval
 11378  001B98  C031  F06A         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 11379  001B9C  C032  F06B         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 11380                           
 11381                           ;doprnt.c: 847: tmpval.integ *= fval;
 11382  001BA0  C069  F021         	movff	i2__doprnt@tmpval,i2___ftmul@f1
 11383  001BA4  C06A  F022         	movff	i2__doprnt@tmpval+1,i2___ftmul@f1+1
 11384  001BA8  C06B  F023         	movff	i2__doprnt@tmpval+2,i2___ftmul@f1+2
 11385  001BAC  C06D  F024         	movff	i2__doprnt@fval,i2___ftmul@f2
 11386  001BB0  C06E  F025         	movff	i2__doprnt@fval+1,i2___ftmul@f2+1
 11387  001BB4  C06F  F026         	movff	i2__doprnt@fval+2,i2___ftmul@f2+2
 11388  001BB8  EC18  F022         	call	i2___ftmul	;wreg free
 11389  001BBC  C021  F069         	movff	?i2___ftmul,i2__doprnt@tmpval
 11390  001BC0  C022  F06A         	movff	?i2___ftmul+1,i2__doprnt@tmpval+1
 11391  001BC4  C023  F06B         	movff	?i2___ftmul+2,i2__doprnt@tmpval+2
 11392                           
 11393                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 11394  001BC8  C069  F001         	movff	i2__doprnt@tmpval,i2___ftge@ff1
 11395  001BCC  C06A  F002         	movff	i2__doprnt@tmpval+1,i2___ftge@ff1+1
 11396  001BD0  C06B  F003         	movff	i2__doprnt@tmpval+2,i2___ftge@ff1+2
 11397  001BD4  0E00               	movlw	0
 11398  001BD6  6E04               	movwf	i2___ftge@ff2,c
 11399  001BD8  0E80               	movlw	128
 11400  001BDA  6E05               	movwf	i2___ftge@ff2+1,c
 11401  001BDC  0E3F               	movlw	63
 11402  001BDE  6E06               	movwf	i2___ftge@ff2+2,c
 11403  001BE0  ECE9  F025         	call	i2___ftge	;wreg free
 11404  001BE4  B0D8               	btfsc	status,0,c
 11405  001BE6  D005               	goto	i2l8224
 11406                           
 11407                           ;doprnt.c: 849: exp--;
 11408  001BE8  0100               	movlb	0	; () banked
 11409  001BEA  0767               	decf	i2__doprnt@exp& (0+255),f,b
 11410  001BEC  A0D8               	btfss	status,0,c
 11411  001BEE  0768               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 11412  001BF0  D013               	goto	i2l8228
 11413  001BF2                     i2l8224:
 11414                           
 11415                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 11416  001BF2  C069  F001         	movff	i2__doprnt@tmpval,i2___ftge@ff1
 11417  001BF6  C06A  F002         	movff	i2__doprnt@tmpval+1,i2___ftge@ff1+1
 11418  001BFA  C06B  F003         	movff	i2__doprnt@tmpval+2,i2___ftge@ff1+2
 11419  001BFE  0E00               	movlw	0
 11420  001C00  6E04               	movwf	i2___ftge@ff2,c
 11421  001C02  0E20               	movlw	32
 11422  001C04  6E05               	movwf	i2___ftge@ff2+1,c
 11423  001C06  0E41               	movlw	65
 11424  001C08  6E06               	movwf	i2___ftge@ff2+2,c
 11425  001C0A  ECE9  F025         	call	i2___ftge	;wreg free
 11426  001C0E  A0D8               	btfss	status,0,c
 11427  001C10  D003               	goto	i2l8228
 11428                           
 11429                           ;doprnt.c: 851: exp++;
 11430  001C12  0100               	movlb	0	; () banked
 11431  001C14  4B67               	infsnz	i2__doprnt@exp& (0+255),f,b
 11432  001C16  2B68               	incf	(i2__doprnt@exp+1)& (0+255),f,b
 11433  001C18                     i2l8228:
 11434                           
 11435                           ;doprnt.c: 852: }
 11436                           ;doprnt.c: 1112: if(prec <= 12)
 11437  001C18  0100               	movlb	0	; () banked
 11438  001C1A  BF75               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 11439  001C1C  D008               	goto	i2l8230
 11440  001C1E  0100               	movlb	0	; () banked
 11441  001C20  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 11442  001C22  E11D               	bnz	i2l8232
 11443  001C24  0E0D               	movlw	13
 11444  001C26  0100               	movlb	0	; () banked
 11445  001C28  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 11446  001C2A  B0D8               	btfsc	status,0,c
 11447  001C2C  D018               	goto	i2l8232
 11448  001C2E                     i2l8230:
 11449                           
 11450                           ; BSR set to: 0
 11451                           ;doprnt.c: 1113: fval += fround(prec);
 11452  001C2E  C06D  F015         	movff	i2__doprnt@fval,i2___ftadd@f1
 11453  001C32  C06E  F016         	movff	i2__doprnt@fval+1,i2___ftadd@f1+1
 11454  001C36  C06F  F017         	movff	i2__doprnt@fval+2,i2___ftadd@f1+2
 11455  001C3A  0100               	movlb	0	; () banked
 11456  001C3C  5174               	movf	i2__doprnt@prec& (0+255),w,b
 11457  001C3E  EC88  F01B         	call	i2_fround
 11458  001C42  C030  F018         	movff	?i2_fround,i2___ftadd@f2
 11459  001C46  C031  F019         	movff	?i2_fround+1,i2___ftadd@f2+1
 11460  001C4A  C032  F01A         	movff	?i2_fround+2,i2___ftadd@f2+2
 11461  001C4E  ECAB  F01C         	call	i2___ftadd	;wreg free
 11462  001C52  C015  F06D         	movff	?i2___ftadd,i2__doprnt@fval
 11463  001C56  C016  F06E         	movff	?i2___ftadd+1,i2__doprnt@fval+1
 11464  001C5A  C017  F06F         	movff	?i2___ftadd+2,i2__doprnt@fval+2
 11465  001C5E                     i2l8232:
 11466                           
 11467                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 11468  001C5E  0100               	movlb	0	; () banked
 11469  001C60  BF68               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 11470  001C62  D008               	goto	i2l8234
 11471  001C64  0100               	movlb	0	; () banked
 11472  001C66  5168               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 11473  001C68  E126               	bnz	i2l8240
 11474  001C6A  0E0A               	movlw	10
 11475  001C6C  0100               	movlb	0	; () banked
 11476  001C6E  5D67               	subwf	i2__doprnt@exp& (0+255),w,b
 11477  001C70  B0D8               	btfsc	status,0,c
 11478  001C72  D021               	goto	i2l8240
 11479  001C74                     i2l8234:
 11480                           
 11481                           ; BSR set to: 0
 11482  001C74  0100               	movlb	0	; () banked
 11483  001C76  516D               	movf	i2__doprnt@fval& (0+255),w,b
 11484  001C78  0100               	movlb	0	; () banked
 11485  001C7A  116E               	iorwf	(i2__doprnt@fval+1)& (0+255),w,b
 11486  001C7C  0100               	movlb	0	; () banked
 11487  001C7E  116F               	iorwf	(i2__doprnt@fval+2)& (0+255),w,b
 11488  001C80  B4D8               	btfsc	status,2,c
 11489  001C82  D05B               	goto	i2l8254
 11490                           
 11491                           ; BSR set to: 0
 11492  001C84  C06D  F037         	movff	i2__doprnt@fval,i2___fttol@f1
 11493  001C88  C06E  F038         	movff	i2__doprnt@fval+1,i2___fttol@f1+1
 11494  001C8C  C06F  F039         	movff	i2__doprnt@fval+2,i2___fttol@f1+2
 11495  001C90  EC92  F022         	call	i2___fttol	;wreg free
 11496  001C94  5037               	movf	?i2___fttol,w,c
 11497  001C96  1038               	iorwf	?i2___fttol+1,w,c
 11498  001C98  1039               	iorwf	?i2___fttol+2,w,c
 11499  001C9A  103A               	iorwf	?i2___fttol+3,w,c
 11500  001C9C  A4D8               	btfss	status,2,c
 11501  001C9E  D04D               	goto	i2l8254
 11502  001CA0  0100               	movlb	0	; () banked
 11503  001CA2  BF68               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 11504  001CA4  D04A               	goto	i2l8254
 11505  001CA6  0100               	movlb	0	; () banked
 11506  001CA8  5168               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 11507  001CAA  E105               	bnz	i2l8240
 11508  001CAC  0E02               	movlw	2
 11509  001CAE  0100               	movlb	0	; () banked
 11510  001CB0  5D67               	subwf	i2__doprnt@exp& (0+255),w,b
 11511  001CB2  A0D8               	btfss	status,0,c
 11512  001CB4  D042               	goto	i2l8254
 11513  001CB6                     i2l8240:
 11514                           
 11515                           ; BSR set to: 0
 11516                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 11517  001CB6  C069  F001         	movff	i2__doprnt@tmpval,i2___ftge@ff1
 11518  001CBA  C06A  F002         	movff	i2__doprnt@tmpval+1,i2___ftge@ff1+1
 11519  001CBE  C06B  F003         	movff	i2__doprnt@tmpval+2,i2___ftge@ff1+2
 11520  001CC2  0E70               	movlw	112
 11521  001CC4  6E04               	movwf	i2___ftge@ff2,c
 11522  001CC6  0E89               	movlw	137
 11523  001CC8  6E05               	movwf	i2___ftge@ff2+1,c
 11524  001CCA  0E40               	movlw	64
 11525  001CCC  6E06               	movwf	i2___ftge@ff2+2,c
 11526  001CCE  ECE9  F025         	call	i2___ftge	;wreg free
 11527  001CD2  B0D8               	btfsc	status,0,c
 11528  001CD4  D003               	goto	i2l8244
 11529                           
 11530                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 11531  001CD6  0100               	movlb	0	; () banked
 11532  001CD8  0EF7               	movlw	247
 11533  001CDA  D002               	goto	L6
 11534  001CDC                     i2l8244:
 11535                           
 11536                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 11537  001CDC  0100               	movlb	0	; () banked
 11538  001CDE  0EF8               	movlw	248
 11539  001CE0                     L6:
 11540  001CE0  2767               	addwf	i2__doprnt@exp& (0+255),f,b
 11541  001CE2  0EFF               	movlw	255
 11542  001CE4  2368               	addwfc	(i2__doprnt@exp+1)& (0+255),f,b
 11543                           
 11544                           ; BSR set to: 0
 11545                           ;doprnt.c: 1124: }
 11546                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 11547                           
 11548                           ; BSR set to: 0
 11549  001CE6  0100               	movlb	0	; () banked
 11550  001CE8  5167               	movf	i2__doprnt@exp& (0+255),w,b
 11551  001CEA  EC06  F017         	call	i2_scale
 11552  001CEE  C030  F069         	movff	?i2_scale,i2__doprnt@tmpval
 11553  001CF2  C031  F06A         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 11554  001CF6  C032  F06B         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 11555                           
 11556                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 11557  001CFA  C06D  F001         	movff	i2__doprnt@fval,i2__tdiv_to_l_@f1
 11558  001CFE  C06E  F002         	movff	i2__doprnt@fval+1,i2__tdiv_to_l_@f1+1
 11559  001D02  C06F  F003         	movff	i2__doprnt@fval+2,i2__tdiv_to_l_@f1+2
 11560  001D06  C069  F004         	movff	i2__doprnt@tmpval,i2__tdiv_to_l_@f2
 11561  001D0A  C06A  F005         	movff	i2__doprnt@tmpval+1,i2__tdiv_to_l_@f2+1
 11562  001D0E  C06B  F006         	movff	i2__doprnt@tmpval+2,i2__tdiv_to_l_@f2+2
 11563  001D12  EC65  F020         	call	i2__tdiv_to_l_	;wreg free
 11564  001D16  C001  F063         	movff	?i2__tdiv_to_l_,i2__doprnt@val
 11565  001D1A  C002  F064         	movff	?i2__tdiv_to_l_+1,i2__doprnt@val+1
 11566  001D1E  C003  F065         	movff	?i2__tdiv_to_l_+2,i2__doprnt@val+2
 11567  001D22  C004  F066         	movff	?i2__tdiv_to_l_+3,i2__doprnt@val+3
 11568                           
 11569                           ;doprnt.c: 1129: fval = 0.0;
 11570  001D26  0E00               	movlw	0
 11571  001D28  0100               	movlb	0	; () banked
 11572  001D2A  6F6D               	movwf	i2__doprnt@fval& (0+255),b
 11573  001D2C  0E00               	movlw	0
 11574  001D2E  0100               	movlb	0	; () banked
 11575  001D30  6F6E               	movwf	(i2__doprnt@fval+1)& (0+255),b
 11576  001D32  0E00               	movlw	0
 11577  001D34  0100               	movlb	0	; () banked
 11578  001D36  6F6F               	movwf	(i2__doprnt@fval+2)& (0+255),b
 11579                           
 11580                           ;doprnt.c: 1130: } else {
 11581  001D38  D033               	goto	i2l8258
 11582  001D3A                     i2l8254:
 11583                           
 11584                           ;doprnt.c: 1131: val = (unsigned long)fval;
 11585  001D3A  C06D  F037         	movff	i2__doprnt@fval,i2___fttol@f1
 11586  001D3E  C06E  F038         	movff	i2__doprnt@fval+1,i2___fttol@f1+1
 11587  001D42  C06F  F039         	movff	i2__doprnt@fval+2,i2___fttol@f1+2
 11588  001D46  EC92  F022         	call	i2___fttol	;wreg free
 11589  001D4A  C037  F063         	movff	?i2___fttol,i2__doprnt@val
 11590  001D4E  C038  F064         	movff	?i2___fttol+1,i2__doprnt@val+1
 11591  001D52  C039  F065         	movff	?i2___fttol+2,i2__doprnt@val+2
 11592  001D56  C03A  F066         	movff	?i2___fttol+3,i2__doprnt@val+3
 11593                           
 11594                           ;doprnt.c: 1132: fval -= (double)val;
 11595  001D5A  C06D  F021         	movff	i2__doprnt@fval,i2___ftsub@f1
 11596  001D5E  C06E  F022         	movff	i2__doprnt@fval+1,i2___ftsub@f1+1
 11597  001D62  C06F  F023         	movff	i2__doprnt@fval+2,i2___ftsub@f1+2
 11598  001D66  C063  F009         	movff	i2__doprnt@val,i2___lltoft@c
 11599  001D6A  C064  F00A         	movff	i2__doprnt@val+1,i2___lltoft@c+1
 11600  001D6E  C065  F00B         	movff	i2__doprnt@val+2,i2___lltoft@c+2
 11601  001D72  C066  F00C         	movff	i2__doprnt@val+3,i2___lltoft@c+3
 11602  001D76  ECD5  F027         	call	i2___lltoft	;wreg free
 11603  001D7A  C009  F024         	movff	?i2___lltoft,i2___ftsub@f2
 11604  001D7E  C00A  F025         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 11605  001D82  C00B  F026         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 11606  001D86  EC07  F029         	call	i2___ftsub	;wreg free
 11607  001D8A  C021  F06D         	movff	?i2___ftsub,i2__doprnt@fval
 11608  001D8E  C022  F06E         	movff	?i2___ftsub+1,i2__doprnt@fval+1
 11609  001D92  C023  F06F         	movff	?i2___ftsub+2,i2__doprnt@fval+2
 11610                           
 11611                           ;doprnt.c: 1133: exp = 0;
 11612  001D96  0E00               	movlw	0
 11613  001D98  0100               	movlb	0	; () banked
 11614  001D9A  6F68               	movwf	(i2__doprnt@exp+1)& (0+255),b
 11615  001D9C  0E00               	movlw	0
 11616  001D9E  6F67               	movwf	i2__doprnt@exp& (0+255),b
 11617  001DA0                     i2l8258:
 11618                           
 11619                           ; BSR set to: 0
 11620                           ;doprnt.c: 1134: }
 11621                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 11622  001DA0  0E01               	movlw	1
 11623  001DA2  0100               	movlb	0	; () banked
 11624  001DA4  6F76               	movwf	i2__doprnt@c& (0+255),b
 11625  001DA6                     i2l8260:
 11626                           
 11627                           ; BSR set to: 0
 11628  001DA6  0E0A               	movlw	10
 11629  001DA8  0100               	movlb	0	; () banked
 11630  001DAA  1976               	xorwf	i2__doprnt@c& (0+255),w,b
 11631  001DAC  B4D8               	btfsc	status,2,c
 11632  001DAE  D01E               	goto	i2l8272
 11633                           
 11634                           ; BSR set to: 0
 11635                           ;doprnt.c: 1137: if(val < dpowers[c])
 11636                           
 11637                           ; BSR set to: 0
 11638                           
 11639                           ; BSR set to: 0
 11640  001DB0  0100               	movlb	0	; () banked
 11641  001DB2  5176               	movf	i2__doprnt@c& (0+255),w,b
 11642  001DB4  0D04               	mullw	4
 11643  001DB6  0E01               	movlw	low _dpowers
 11644  001DB8  24F3               	addwf	prodl,w,c
 11645  001DBA  6EF6               	movwf	tblptrl,c
 11646  001DBC  0E06               	movlw	high _dpowers
 11647  001DBE  20F4               	addwfc	prodh,w,c
 11648  001DC0  6EF7               	movwf	tblptrh,c
 11649  001DC2                     	if	0	;There are less than 3 active tblptr bytes
 11650  001DC2                     	endif
 11651  001DC2  0009               	tblrd		*+
 11652  001DC4  50F5               	movf	tablat,w,c
 11653  001DC6  0100               	movlb	0	; () banked
 11654  001DC8  5D63               	subwf	i2__doprnt@val& (0+255),w,b
 11655  001DCA  0009               	tblrd		*+
 11656  001DCC  50F5               	movf	tablat,w,c
 11657  001DCE  0100               	movlb	0	; () banked
 11658  001DD0  5964               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 11659  001DD2  0009               	tblrd		*+
 11660  001DD4  50F5               	movf	tablat,w,c
 11661  001DD6  0100               	movlb	0	; () banked
 11662  001DD8  5965               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 11663  001DDA  0009               	tblrd		*+
 11664  001DDC  50F5               	movf	tablat,w,c
 11665  001DDE  0100               	movlb	0	; () banked
 11666  001DE0  5966               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 11667  001DE2  A0D8               	btfss	status,0,c
 11668  001DE4  D003               	goto	i2l8272
 11669                           
 11670                           ; BSR set to: 0
 11671                           
 11672                           ; BSR set to: 0
 11673                           
 11674                           ; BSR set to: 0
 11675                           ;doprnt.c: 1138: break;
 11676  001DE6  0100               	movlb	0	; () banked
 11677  001DE8  2B76               	incf	i2__doprnt@c& (0+255),f,b
 11678  001DEA  D7DD               	goto	i2l8260
 11679  001DEC                     i2l8272:
 11680                           
 11681                           ; BSR set to: 0
 11682                           ;doprnt.c: 1142: width -= prec + c + exp;
 11683  001DEC  C076  F04C         	movff	i2__doprnt@c,??i2__doprnt
 11684  001DF0  6A4D               	clrf	(??i2__doprnt+1)& (0+255),c
 11685  001DF2  BE4C               	btfsc	??i2__doprnt& (0+255),7,c
 11686  001DF4  064D               	decf	(??i2__doprnt+1)& (0+255),f,c
 11687  001DF6  0100               	movlb	0	; () banked
 11688  001DF8  5174               	movf	i2__doprnt@prec& (0+255),w,b
 11689  001DFA  264C               	addwf	??i2__doprnt,f,c
 11690  001DFC  0100               	movlb	0	; () banked
 11691  001DFE  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 11692  001E00  224D               	addwfc	??i2__doprnt+1,f,c
 11693  001E02  0100               	movlb	0	; () banked
 11694  001E04  5167               	movf	i2__doprnt@exp& (0+255),w,b
 11695  001E06  264C               	addwf	??i2__doprnt,f,c
 11696  001E08  0100               	movlb	0	; () banked
 11697  001E0A  5168               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 11698  001E0C  224D               	addwfc	??i2__doprnt+1,f,c
 11699  001E0E  504C               	movf	??i2__doprnt,w,c
 11700  001E10  0100               	movlb	0	; () banked
 11701  001E12  5F72               	subwf	i2__doprnt@width& (0+255),f,b
 11702  001E14  504D               	movf	??i2__doprnt+1,w,c
 11703  001E16  0100               	movlb	0	; () banked
 11704  001E18  5B73               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 11705                           
 11706                           ;doprnt.c: 1143: if(
 11707                           ;doprnt.c: 1147: prec)
 11708  001E1A  0100               	movlb	0	; () banked
 11709  001E1C  5174               	movf	i2__doprnt@prec& (0+255),w,b
 11710  001E1E  0100               	movlb	0	; () banked
 11711  001E20  1175               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 11712  001E22  B4D8               	btfsc	status,2,c
 11713  001E24  D004               	goto	i2l8276
 11714                           
 11715                           ; BSR set to: 0
 11716                           ;doprnt.c: 1148: width--;
 11717  001E26  0100               	movlb	0	; () banked
 11718  001E28  0772               	decf	i2__doprnt@width& (0+255),f,b
 11719  001E2A  A0D8               	btfss	status,0,c
 11720  001E2C  0773               	decf	(i2__doprnt@width+1)& (0+255),f,b
 11721  001E2E                     i2l8276:
 11722                           
 11723                           ; BSR set to: 0
 11724                           ;doprnt.c: 1149: if(flag & 0x03)
 11725  001E2E  0E03               	movlw	3
 11726  001E30  0100               	movlb	0	; () banked
 11727  001E32  1570               	andwf	i2__doprnt@flag& (0+255),w,b
 11728  001E34  6E4C               	movwf	??i2__doprnt& (0+255),c
 11729  001E36  0E00               	movlw	0
 11730  001E38  0100               	movlb	0	; () banked
 11731  001E3A  1571               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 11732  001E3C  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 11733  001E3E  504C               	movf	??i2__doprnt,w,c
 11734  001E40  104D               	iorwf	??i2__doprnt+1,w,c
 11735  001E42  B4D8               	btfsc	status,2,c
 11736  001E44  D004               	goto	i2l8280
 11737                           
 11738                           ; BSR set to: 0
 11739                           ;doprnt.c: 1150: width--;
 11740  001E46  0100               	movlb	0	; () banked
 11741  001E48  0772               	decf	i2__doprnt@width& (0+255),f,b
 11742  001E4A  A0D8               	btfss	status,0,c
 11743  001E4C  0773               	decf	(i2__doprnt@width+1)& (0+255),f,b
 11744  001E4E                     i2l8280:
 11745                           
 11746                           ; BSR set to: 0
 11747                           ;doprnt.c: 1153: if(flag & 0x04) {
 11748  001E4E  0100               	movlb	0	; () banked
 11749  001E50  A570               	btfss	i2__doprnt@flag& (0+255),2,b
 11750  001E52  D0B6               	goto	i2l8314
 11751                           
 11752                           ; BSR set to: 0
 11753                           ;doprnt.c: 1157: if(flag & 0x03)
 11754  001E54  0E03               	movlw	3
 11755  001E56  0100               	movlb	0	; () banked
 11756  001E58  1570               	andwf	i2__doprnt@flag& (0+255),w,b
 11757  001E5A  6E4C               	movwf	??i2__doprnt& (0+255),c
 11758  001E5C  0E00               	movlw	0
 11759  001E5E  0100               	movlb	0	; () banked
 11760  001E60  1571               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 11761  001E62  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 11762  001E64  504C               	movf	??i2__doprnt,w,c
 11763  001E66  104D               	iorwf	??i2__doprnt+1,w,c
 11764  001E68  B4D8               	btfsc	status,2,c
 11765  001E6A  D069               	goto	i2l8302
 11766                           
 11767                           ; BSR set to: 0
 11768                           ;doprnt.c: 1159: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 11769  001E6C  EE20 F002          	lfsr	2,2
 11770  001E70  5046               	movf	i2__doprnt@pb,w,c
 11771  001E72  26D9               	addwf	fsr2l,f,c
 11772  001E74  5047               	movf	i2__doprnt@pb+1,w,c
 11773  001E76  22DA               	addwfc	fsr2h,f,c
 11774  001E78  50DE               	movf	postinc2,w,c
 11775  001E7A  10DE               	iorwf	postinc2,w,c
 11776  001E7C  B4D8               	btfsc	status,2,c
 11777  001E7E  D013               	goto	i2l8288
 11778                           
 11779                           ; BSR set to: 0
 11780  001E80  EE20 F002          	lfsr	2,2
 11781  001E84  5046               	movf	i2__doprnt@pb,w,c
 11782  001E86  26D9               	addwf	fsr2l,f,c
 11783  001E88  5047               	movf	i2__doprnt@pb+1,w,c
 11784  001E8A  22DA               	addwfc	fsr2h,f,c
 11785  001E8C  D801               	call	i2u1341_48
 11786  001E8E  D057               	goto	i2l8302
 11787  001E90                     i2u1341_48:
 11788  001E90  0005               	push	
 11789  001E92  6EFA               	movwf	pclath,c
 11790  001E94  50DE               	movf	postinc2,w,c
 11791  001E96  6EFD               	movwf	tosl,c
 11792  001E98  50DE               	movf	postinc2,w,c
 11793  001E9A  6EFE               	movwf	tosh,c
 11794  001E9C  50F8               	movf	tblptru,w,c
 11795  001E9E  6EFF               	movwf	tosu,c
 11796  001EA0  50FA               	movf	pclath,w,c
 11797  001EA2  0E2D               	movlw	45
 11798  001EA4  0012               	return		;indir
 11799  001EA6                     i2l8288:
 11800  001EA6  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 11801  001EAA  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 11802  001EAE  CFDE F04C          	movff	postinc2,??i2__doprnt
 11803  001EB2  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 11804  001EB6  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 11805  001EBA  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 11806  001EBE  0E2D               	movlw	45
 11807  001EC0  6EDF               	movwf	indf2,c
 11808  001EC2  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 11809  001EC6  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 11810  001ECA  2ADE               	incf	postinc2,f,c
 11811  001ECC  0E00               	movlw	0
 11812  001ECE  22DD               	addwfc	postdec2,f,c
 11813                           
 11814                           ;doprnt.c: 1168: while(width > 0) {
 11815  001ED0  D036               	goto	i2l8302
 11816  001ED2                     i2l8292:
 11817                           
 11818                           ;doprnt.c: 1169: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 11819  001ED2  EE20 F002          	lfsr	2,2
 11820  001ED6  5046               	movf	i2__doprnt@pb,w,c
 11821  001ED8  26D9               	addwf	fsr2l,f,c
 11822  001EDA  5047               	movf	i2__doprnt@pb+1,w,c
 11823  001EDC  22DA               	addwfc	fsr2h,f,c
 11824  001EDE  50DE               	movf	postinc2,w,c
 11825  001EE0  10DE               	iorwf	postinc2,w,c
 11826  001EE2  B4D8               	btfsc	status,2,c
 11827  001EE4  D013               	goto	i2l8296
 11828  001EE6  EE20 F002          	lfsr	2,2
 11829  001EEA  5046               	movf	i2__doprnt@pb,w,c
 11830  001EEC  26D9               	addwf	fsr2l,f,c
 11831  001EEE  5047               	movf	i2__doprnt@pb+1,w,c
 11832  001EF0  22DA               	addwfc	fsr2h,f,c
 11833  001EF2  D801               	call	i2u1343_48
 11834  001EF4  D020               	goto	i2l8300
 11835  001EF6                     i2u1343_48:
 11836  001EF6  0005               	push	
 11837  001EF8  6EFA               	movwf	pclath,c
 11838  001EFA  50DE               	movf	postinc2,w,c
 11839  001EFC  6EFD               	movwf	tosl,c
 11840  001EFE  50DE               	movf	postinc2,w,c
 11841  001F00  6EFE               	movwf	tosh,c
 11842  001F02  50F8               	movf	tblptru,w,c
 11843  001F04  6EFF               	movwf	tosu,c
 11844  001F06  50FA               	movf	pclath,w,c
 11845  001F08  0E30               	movlw	48
 11846  001F0A  0012               	return		;indir
 11847  001F0C                     i2l8296:
 11848  001F0C  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 11849  001F10  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 11850  001F14  CFDE F04C          	movff	postinc2,??i2__doprnt
 11851  001F18  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 11852  001F1C  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 11853  001F20  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 11854  001F24  0E30               	movlw	48
 11855  001F26  6EDF               	movwf	indf2,c
 11856  001F28  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 11857  001F2C  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 11858  001F30  2ADE               	incf	postinc2,f,c
 11859  001F32  0E00               	movlw	0
 11860  001F34  22DD               	addwfc	postdec2,f,c
 11861  001F36                     i2l8300:
 11862                           
 11863                           ;doprnt.c: 1170: width--;
 11864  001F36  0100               	movlb	0	; () banked
 11865  001F38  0772               	decf	i2__doprnt@width& (0+255),f,b
 11866  001F3A  A0D8               	btfss	status,0,c
 11867  001F3C  0773               	decf	(i2__doprnt@width+1)& (0+255),f,b
 11868  001F3E                     i2l8302:
 11869  001F3E  0100               	movlb	0	; () banked
 11870  001F40  BF73               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 11871  001F42  D0F8               	goto	i2l8336
 11872  001F44  0100               	movlb	0	; () banked
 11873  001F46  5173               	movf	(i2__doprnt@width+1)& (0+255),w,b
 11874  001F48  E1C4               	bnz	i2l8292
 11875  001F4A  0100               	movlb	0	; () banked
 11876  001F4C  0572               	decf	i2__doprnt@width& (0+255),w,b
 11877  001F4E  A0D8               	btfss	status,0,c
 11878  001F50  D0F1               	goto	i2l8336
 11879  001F52  D7BF               	goto	i2l8292
 11880  001F54                     i2l8304:
 11881                           
 11882                           ; BSR set to: 0
 11883                           ;doprnt.c: 1181: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 11884  001F54  EE20 F002          	lfsr	2,2
 11885  001F58  5046               	movf	i2__doprnt@pb,w,c
 11886  001F5A  26D9               	addwf	fsr2l,f,c
 11887  001F5C  5047               	movf	i2__doprnt@pb+1,w,c
 11888  001F5E  22DA               	addwfc	fsr2h,f,c
 11889  001F60  50DE               	movf	postinc2,w,c
 11890  001F62  10DE               	iorwf	postinc2,w,c
 11891  001F64  B4D8               	btfsc	status,2,c
 11892  001F66  D013               	goto	i2l8308
 11893                           
 11894                           ; BSR set to: 0
 11895  001F68  EE20 F002          	lfsr	2,2
 11896  001F6C  5046               	movf	i2__doprnt@pb,w,c
 11897  001F6E  26D9               	addwf	fsr2l,f,c
 11898  001F70  5047               	movf	i2__doprnt@pb+1,w,c
 11899  001F72  22DA               	addwfc	fsr2h,f,c
 11900  001F74  D801               	call	i2u1346_48
 11901  001F76  D020               	goto	i2l8312
 11902  001F78                     i2u1346_48:
 11903  001F78  0005               	push	
 11904  001F7A  6EFA               	movwf	pclath,c
 11905  001F7C  50DE               	movf	postinc2,w,c
 11906  001F7E  6EFD               	movwf	tosl,c
 11907  001F80  50DE               	movf	postinc2,w,c
 11908  001F82  6EFE               	movwf	tosh,c
 11909  001F84  50F8               	movf	tblptru,w,c
 11910  001F86  6EFF               	movwf	tosu,c
 11911  001F88  50FA               	movf	pclath,w,c
 11912  001F8A  0E20               	movlw	32
 11913  001F8C  0012               	return		;indir
 11914  001F8E                     i2l8308:
 11915  001F8E  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 11916  001F92  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 11917  001F96  CFDE F04C          	movff	postinc2,??i2__doprnt
 11918  001F9A  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 11919  001F9E  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 11920  001FA2  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 11921  001FA6  0E20               	movlw	32
 11922  001FA8  6EDF               	movwf	indf2,c
 11923  001FAA  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 11924  001FAE  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 11925  001FB2  2ADE               	incf	postinc2,f,c
 11926  001FB4  0E00               	movlw	0
 11927  001FB6  22DD               	addwfc	postdec2,f,c
 11928  001FB8                     i2l8312:
 11929                           
 11930                           ;doprnt.c: 1182: width--;
 11931  001FB8  0100               	movlb	0	; () banked
 11932  001FBA  0772               	decf	i2__doprnt@width& (0+255),f,b
 11933  001FBC  A0D8               	btfss	status,0,c
 11934  001FBE  0773               	decf	(i2__doprnt@width+1)& (0+255),f,b
 11935  001FC0                     i2l8314:
 11936                           
 11937                           ; BSR set to: 0
 11938  001FC0  0100               	movlb	0	; () banked
 11939  001FC2  BF73               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 11940  001FC4  D007               	goto	i2l8316
 11941  001FC6  0100               	movlb	0	; () banked
 11942  001FC8  5173               	movf	(i2__doprnt@width+1)& (0+255),w,b
 11943  001FCA  E1C4               	bnz	i2l8304
 11944  001FCC  0100               	movlb	0	; () banked
 11945  001FCE  0572               	decf	i2__doprnt@width& (0+255),w,b
 11946  001FD0  B0D8               	btfsc	status,0,c
 11947  001FD2  D7C0               	goto	i2l8304
 11948  001FD4                     i2l8316:
 11949                           
 11950                           ; BSR set to: 0
 11951                           ;doprnt.c: 1183: }
 11952                           ;doprnt.c: 1188: if(flag & 0x03)
 11953  001FD4  0E03               	movlw	3
 11954  001FD6  0100               	movlb	0	; () banked
 11955  001FD8  1570               	andwf	i2__doprnt@flag& (0+255),w,b
 11956  001FDA  6E4C               	movwf	??i2__doprnt& (0+255),c
 11957  001FDC  0E00               	movlw	0
 11958  001FDE  0100               	movlb	0	; () banked
 11959  001FE0  1571               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 11960  001FE2  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 11961  001FE4  504C               	movf	??i2__doprnt,w,c
 11962  001FE6  104D               	iorwf	??i2__doprnt+1,w,c
 11963  001FE8  B4D8               	btfsc	status,2,c
 11964  001FEA  D0A4               	goto	i2l8336
 11965                           
 11966                           ; BSR set to: 0
 11967                           ;doprnt.c: 1190: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 11968  001FEC  EE20 F002          	lfsr	2,2
 11969  001FF0  5046               	movf	i2__doprnt@pb,w,c
 11970  001FF2  26D9               	addwf	fsr2l,f,c
 11971  001FF4  5047               	movf	i2__doprnt@pb+1,w,c
 11972  001FF6  22DA               	addwfc	fsr2h,f,c
 11973  001FF8  50DE               	movf	postinc2,w,c
 11974  001FFA  10DE               	iorwf	postinc2,w,c
 11975  001FFC  B4D8               	btfsc	status,2,c
 11976  001FFE  D013               	goto	i2l8322
 11977                           
 11978                           ; BSR set to: 0
 11979  002000  EE20 F002          	lfsr	2,2
 11980  002004  5046               	movf	i2__doprnt@pb,w,c
 11981  002006  26D9               	addwf	fsr2l,f,c
 11982  002008  5047               	movf	i2__doprnt@pb+1,w,c
 11983  00200A  22DA               	addwfc	fsr2h,f,c
 11984  00200C  D801               	call	i2u1350_48
 11985  00200E  D092               	goto	i2l8336
 11986  002010                     i2u1350_48:
 11987  002010  0005               	push	
 11988  002012  6EFA               	movwf	pclath,c
 11989  002014  50DE               	movf	postinc2,w,c
 11990  002016  6EFD               	movwf	tosl,c
 11991  002018  50DE               	movf	postinc2,w,c
 11992  00201A  6EFE               	movwf	tosh,c
 11993  00201C  50F8               	movf	tblptru,w,c
 11994  00201E  6EFF               	movwf	tosu,c
 11995  002020  50FA               	movf	pclath,w,c
 11996  002022  0E2D               	movlw	45
 11997  002024  0012               	return		;indir
 11998  002026                     i2l8322:
 11999  002026  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12000  00202A  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12001  00202E  CFDE F04C          	movff	postinc2,??i2__doprnt
 12002  002032  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12003  002036  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12004  00203A  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12005  00203E  0E2D               	movlw	45
 12006  002040  D077               	goto	L7
 12007  002042                     i2l8324:
 12008  002042  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12009  002046  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12010  00204A  2ADE               	incf	postinc2,f,c
 12011  00204C  0E00               	movlw	0
 12012  00204E  22DD               	addwfc	postdec2,f,c
 12013                           
 12014                           ;doprnt.c: 1195: }
 12015                           ;doprnt.c: 1196: while(c--) {
 12016  002050  D071               	goto	i2l8336
 12017  002052                     i2l8326:
 12018                           
 12019                           ;doprnt.c: 1200: {
 12020                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 12021  002052  C063  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 12022  002056  C064  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 12023  00205A  C065  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 12024  00205E  C066  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 12025  002062  0100               	movlb	0	; () banked
 12026  002064  5176               	movf	i2__doprnt@c& (0+255),w,b
 12027  002066  0D04               	mullw	4
 12028  002068  0E01               	movlw	low _dpowers
 12029  00206A  24F3               	addwf	prodl,w,c
 12030  00206C  6EF6               	movwf	tblptrl,c
 12031  00206E  0E06               	movlw	high _dpowers
 12032  002070  20F4               	addwfc	prodh,w,c
 12033  002072  6EF7               	movwf	tblptrh,c
 12034  002074                     	if	0	;There are less than 3 active tblptr bytes
 12035  002074                     	endif
 12036  002074  0009               	tblrd		*+
 12037  002076  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 12038  00207A  0009               	tblrd		*+
 12039  00207C  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 12040  002080  0009               	tblrd		*+
 12041  002082  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 12042  002086  000A               	tblrd		*-
 12043  002088  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 12044  00208C  EC73  F026         	call	i2___lldiv
 12045  002090  C001  F069         	movff	?i2___lldiv,i2__doprnt@tmpval
 12046  002094  C002  F06A         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 12047  002098  C003  F06B         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 12048  00209C  C004  F06C         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 12049                           
 12050                           ;doprnt.c: 1202: tmpval.vd %= 10;
 12051  0020A0  C069  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 12052  0020A4  C06A  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 12053  0020A8  C06B  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 12054  0020AC  C06C  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 12055  0020B0  0E0A               	movlw	10
 12056  0020B2  6E12               	movwf	i2___llmod@divisor,c
 12057  0020B4  0E00               	movlw	0
 12058  0020B6  6E13               	movwf	i2___llmod@divisor+1,c
 12059  0020B8  0E00               	movlw	0
 12060  0020BA  6E14               	movwf	i2___llmod@divisor+2,c
 12061  0020BC  0E00               	movlw	0
 12062  0020BE  6E15               	movwf	i2___llmod@divisor+3,c
 12063  0020C0  ECA2  F027         	call	i2___llmod	;wreg free
 12064  0020C4  C00E  F069         	movff	?i2___llmod,i2__doprnt@tmpval
 12065  0020C8  C00F  F06A         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 12066  0020CC  C010  F06B         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 12067  0020D0  C011  F06C         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 12068                           
 12069                           ;doprnt.c: 1203: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 12070  0020D4  EE20 F002          	lfsr	2,2
 12071  0020D8  5046               	movf	i2__doprnt@pb,w,c
 12072  0020DA  26D9               	addwf	fsr2l,f,c
 12073  0020DC  5047               	movf	i2__doprnt@pb+1,w,c
 12074  0020DE  22DA               	addwfc	fsr2h,f,c
 12075  0020E0  50DE               	movf	postinc2,w,c
 12076  0020E2  10DE               	iorwf	postinc2,w,c
 12077  0020E4  B4D8               	btfsc	status,2,c
 12078  0020E6  D015               	goto	i2l8334
 12079  0020E8  EE20 F002          	lfsr	2,2
 12080  0020EC  5046               	movf	i2__doprnt@pb,w,c
 12081  0020EE  26D9               	addwf	fsr2l,f,c
 12082  0020F0  5047               	movf	i2__doprnt@pb+1,w,c
 12083  0020F2  22DA               	addwfc	fsr2h,f,c
 12084  0020F4  D801               	call	i2u1352_48
 12085  0020F6  D01E               	goto	i2l8336
 12086  0020F8                     i2u1352_48:
 12087  0020F8  0005               	push	
 12088  0020FA  6EFA               	movwf	pclath,c
 12089  0020FC  50DE               	movf	postinc2,w,c
 12090  0020FE  6EFD               	movwf	tosl,c
 12091  002100  50DE               	movf	postinc2,w,c
 12092  002102  6EFE               	movwf	tosh,c
 12093  002104  50F8               	movf	tblptru,w,c
 12094  002106  6EFF               	movwf	tosu,c
 12095  002108  50FA               	movf	pclath,w,c
 12096  00210A  0100               	movlb	0	; () banked
 12097  00210C  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 12098  00210E  0F30               	addlw	48
 12099  002110  0012               	return		;indir
 12100  002112                     i2l8334:
 12101  002112  0100               	movlb	0	; () banked
 12102  002114  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 12103  002116  0F30               	addlw	48
 12104  002118  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12105  00211C  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12106  002120  CFDE F04C          	movff	postinc2,??i2__doprnt
 12107  002124  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12108  002128  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12109  00212C  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12110  002130                     L7:
 12111  002130  6EDF               	movwf	indf2,c
 12112  002132  D787               	goto	i2l8324
 12113  002134                     i2l8336:
 12114  002134  0100               	movlb	0	; () banked
 12115  002136  0776               	decf	i2__doprnt@c& (0+255),f,b
 12116  002138  0100               	movlb	0	; () banked
 12117  00213A  2976               	incf	i2__doprnt@c& (0+255),w,b
 12118  00213C  B4D8               	btfsc	status,2,c
 12119  00213E  D037               	goto	i2l8348
 12120  002140  D788               	goto	i2l8326
 12121  002142                     i2l8338:
 12122                           
 12123                           ; BSR set to: 0
 12124                           ;doprnt.c: 1208: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 12125  002142  EE20 F002          	lfsr	2,2
 12126  002146  5046               	movf	i2__doprnt@pb,w,c
 12127  002148  26D9               	addwf	fsr2l,f,c
 12128  00214A  5047               	movf	i2__doprnt@pb+1,w,c
 12129  00214C  22DA               	addwfc	fsr2h,f,c
 12130  00214E  50DE               	movf	postinc2,w,c
 12131  002150  10DE               	iorwf	postinc2,w,c
 12132  002152  B4D8               	btfsc	status,2,c
 12133  002154  D013               	goto	i2l8342
 12134                           
 12135                           ; BSR set to: 0
 12136  002156  EE20 F002          	lfsr	2,2
 12137  00215A  5046               	movf	i2__doprnt@pb,w,c
 12138  00215C  26D9               	addwf	fsr2l,f,c
 12139  00215E  5047               	movf	i2__doprnt@pb+1,w,c
 12140  002160  22DA               	addwfc	fsr2h,f,c
 12141  002162  D801               	call	i2u1355_48
 12142  002164  D020               	goto	i2l8346
 12143  002166                     i2u1355_48:
 12144  002166  0005               	push	
 12145  002168  6EFA               	movwf	pclath,c
 12146  00216A  50DE               	movf	postinc2,w,c
 12147  00216C  6EFD               	movwf	tosl,c
 12148  00216E  50DE               	movf	postinc2,w,c
 12149  002170  6EFE               	movwf	tosh,c
 12150  002172  50F8               	movf	tblptru,w,c
 12151  002174  6EFF               	movwf	tosu,c
 12152  002176  50FA               	movf	pclath,w,c
 12153  002178  0E30               	movlw	48
 12154  00217A  0012               	return		;indir
 12155  00217C                     i2l8342:
 12156  00217C  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12157  002180  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12158  002184  CFDE F04C          	movff	postinc2,??i2__doprnt
 12159  002188  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12160  00218C  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12161  002190  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12162  002194  0E30               	movlw	48
 12163  002196  6EDF               	movwf	indf2,c
 12164  002198  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12165  00219C  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12166  0021A0  2ADE               	incf	postinc2,f,c
 12167  0021A2  0E00               	movlw	0
 12168  0021A4  22DD               	addwfc	postdec2,f,c
 12169  0021A6                     i2l8346:
 12170                           
 12171                           ;doprnt.c: 1209: exp--;
 12172  0021A6  0100               	movlb	0	; () banked
 12173  0021A8  0767               	decf	i2__doprnt@exp& (0+255),f,b
 12174  0021AA  A0D8               	btfss	status,0,c
 12175  0021AC  0768               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 12176  0021AE                     i2l8348:
 12177                           
 12178                           ; BSR set to: 0
 12179  0021AE  0100               	movlb	0	; () banked
 12180  0021B0  BF68               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 12181  0021B2  D007               	goto	i2l8350
 12182  0021B4  0100               	movlb	0	; () banked
 12183  0021B6  5168               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 12184  0021B8  E1C4               	bnz	i2l8338
 12185  0021BA  0100               	movlb	0	; () banked
 12186  0021BC  0567               	decf	i2__doprnt@exp& (0+255),w,b
 12187  0021BE  B0D8               	btfsc	status,0,c
 12188  0021C0  D7C0               	goto	i2l8338
 12189  0021C2                     i2l8350:
 12190                           
 12191                           ; BSR set to: 0
 12192                           ;doprnt.c: 1210: }
 12193                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 12194  0021C2  0100               	movlb	0	; () banked
 12195  0021C4  BF75               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 12196  0021C6  D00C               	goto	i2l403
 12197  0021C8  0100               	movlb	0	; () banked
 12198  0021CA  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 12199  0021CC  E105               	bnz	i2u1357_40
 12200  0021CE  0E09               	movlw	9
 12201  0021D0  0100               	movlb	0	; () banked
 12202  0021D2  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 12203  0021D4  A0D8               	btfss	status,0,c
 12204  0021D6  D004               	goto	i2l403
 12205  0021D8                     i2u1357_40:
 12206                           
 12207                           ; BSR set to: 0
 12208                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 12209  0021D8  0E08               	movlw	8
 12210  0021DA  0100               	movlb	0	; () banked
 12211  0021DC  6F76               	movwf	i2__doprnt@c& (0+255),b
 12212  0021DE  D002               	goto	i2l8354
 12213  0021E0                     i2l403:
 12214                           
 12215                           ; BSR set to: 0
 12216                           ;doprnt.c: 1213: else
 12217                           ;doprnt.c: 1214: c = prec;
 12218  0021E0  C074  F076         	movff	i2__doprnt@prec,i2__doprnt@c
 12219  0021E4                     i2l8354:
 12220                           
 12221                           ; BSR set to: 0
 12222                           ;doprnt.c: 1215: prec -= c;
 12223  0021E4  0100               	movlb	0	; () banked
 12224  0021E6  5176               	movf	i2__doprnt@c& (0+255),w,b
 12225  0021E8  0100               	movlb	0	; () banked
 12226  0021EA  5F74               	subwf	i2__doprnt@prec& (0+255),f,b
 12227  0021EC  0E00               	movlw	0
 12228  0021EE  0100               	movlb	0	; () banked
 12229  0021F0  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 12230  0021F2  0EFF               	movlw	255
 12231  0021F4  0100               	movlb	0	; () banked
 12232  0021F6  5B75               	subwfb	(i2__doprnt@prec+1)& (0+255),f,b
 12233                           
 12234                           ; BSR set to: 0
 12235                           ;doprnt.c: 1219: if(c)
 12236  0021F8  0100               	movlb	0	; () banked
 12237  0021FA  5176               	movf	i2__doprnt@c& (0+255),w,b
 12238  0021FC  0100               	movlb	0	; () banked
 12239  0021FE  B4D8               	btfsc	status,2,c
 12240  002200  D032               	goto	i2l8366
 12241                           
 12242                           ; BSR set to: 0
 12243                           ;doprnt.c: 1221: if(pb->func) (pb->func('.')); else ((*pb->ptr++ = '.'));
 12244  002202  EE20 F002          	lfsr	2,2
 12245  002206  5046               	movf	i2__doprnt@pb,w,c
 12246  002208  26D9               	addwf	fsr2l,f,c
 12247  00220A  5047               	movf	i2__doprnt@pb+1,w,c
 12248  00220C  22DA               	addwfc	fsr2h,f,c
 12249  00220E  50DE               	movf	postinc2,w,c
 12250  002210  10DE               	iorwf	postinc2,w,c
 12251  002212  B4D8               	btfsc	status,2,c
 12252  002214  D013               	goto	i2l8362
 12253                           
 12254                           ; BSR set to: 0
 12255  002216  EE20 F002          	lfsr	2,2
 12256  00221A  5046               	movf	i2__doprnt@pb,w,c
 12257  00221C  26D9               	addwf	fsr2l,f,c
 12258  00221E  5047               	movf	i2__doprnt@pb+1,w,c
 12259  002220  22DA               	addwfc	fsr2h,f,c
 12260  002222  D801               	call	i2u1360_48
 12261  002224  D020               	goto	i2l8366
 12262  002226                     i2u1360_48:
 12263  002226  0005               	push	
 12264  002228  6EFA               	movwf	pclath,c
 12265  00222A  50DE               	movf	postinc2,w,c
 12266  00222C  6EFD               	movwf	tosl,c
 12267  00222E  50DE               	movf	postinc2,w,c
 12268  002230  6EFE               	movwf	tosh,c
 12269  002232  50F8               	movf	tblptru,w,c
 12270  002234  6EFF               	movwf	tosu,c
 12271  002236  50FA               	movf	pclath,w,c
 12272  002238  0E2E               	movlw	46
 12273  00223A  0012               	return		;indir
 12274  00223C                     i2l8362:
 12275  00223C  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12276  002240  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12277  002244  CFDE F04C          	movff	postinc2,??i2__doprnt
 12278  002248  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12279  00224C  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12280  002250  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12281  002254  0E2E               	movlw	46
 12282  002256  6EDF               	movwf	indf2,c
 12283  002258  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12284  00225C  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12285  002260  2ADE               	incf	postinc2,f,c
 12286  002262  0E00               	movlw	0
 12287  002264  22DD               	addwfc	postdec2,f,c
 12288  002266                     i2l8366:
 12289                           
 12290                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 12291  002266  0100               	movlb	0	; () banked
 12292  002268  5176               	movf	i2__doprnt@c& (0+255),w,b
 12293  00226A  EC06  F017         	call	i2_scale
 12294  00226E  C030  F060         	movff	?i2_scale,i2__doprnt$1793
 12295  002272  C031  F061         	movff	?i2_scale+1,i2__doprnt$1793+1
 12296  002276  C032  F062         	movff	?i2_scale+2,i2__doprnt$1793+2
 12297                           
 12298                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 12299  00227A  C06D  F024         	movff	i2__doprnt@fval,i2___ftmul@f2
 12300  00227E  C06E  F025         	movff	i2__doprnt@fval+1,i2___ftmul@f2+1
 12301  002282  C06F  F026         	movff	i2__doprnt@fval+2,i2___ftmul@f2+2
 12302  002286  C060  F021         	movff	i2__doprnt$1793,i2___ftmul@f1
 12303  00228A  C061  F022         	movff	i2__doprnt$1793+1,i2___ftmul@f1+1
 12304  00228E  C062  F023         	movff	i2__doprnt$1793+2,i2___ftmul@f1+2
 12305  002292  EC18  F022         	call	i2___ftmul	;wreg free
 12306  002296  C021  F037         	movff	?i2___ftmul,i2___fttol@f1
 12307  00229A  C022  F038         	movff	?i2___ftmul+1,i2___fttol@f1+1
 12308  00229E  C023  F039         	movff	?i2___ftmul+2,i2___fttol@f1+2
 12309  0022A2  EC92  F022         	call	i2___fttol	;wreg free
 12310  0022A6  C037  F063         	movff	?i2___fttol,i2__doprnt@val
 12311  0022AA  C038  F064         	movff	?i2___fttol+1,i2__doprnt@val+1
 12312  0022AE  C039  F065         	movff	?i2___fttol+2,i2__doprnt@val+2
 12313  0022B2  C03A  F066         	movff	?i2___fttol+3,i2__doprnt@val+3
 12314                           
 12315                           ;doprnt.c: 1228: while(c--) {
 12316  0022B6  D09E               	goto	i2l8382
 12317  0022B8                     i2l8370:
 12318                           
 12319                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 12320  0022B8  C063  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 12321  0022BC  C064  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 12322  0022C0  C065  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 12323  0022C4  C066  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 12324  0022C8  0100               	movlb	0	; () banked
 12325  0022CA  5176               	movf	i2__doprnt@c& (0+255),w,b
 12326  0022CC  0D04               	mullw	4
 12327  0022CE  0E01               	movlw	low _dpowers
 12328  0022D0  24F3               	addwf	prodl,w,c
 12329  0022D2  6EF6               	movwf	tblptrl,c
 12330  0022D4  0E06               	movlw	high _dpowers
 12331  0022D6  20F4               	addwfc	prodh,w,c
 12332  0022D8  6EF7               	movwf	tblptrh,c
 12333  0022DA                     	if	0	;There are less than 3 active tblptr bytes
 12334  0022DA                     	endif
 12335  0022DA  0009               	tblrd		*+
 12336  0022DC  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 12337  0022E0  0009               	tblrd		*+
 12338  0022E2  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 12339  0022E6  0009               	tblrd		*+
 12340  0022E8  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 12341  0022EC  000A               	tblrd		*-
 12342  0022EE  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 12343  0022F2  EC73  F026         	call	i2___lldiv	;wreg free
 12344  0022F6  C001  F069         	movff	?i2___lldiv,i2__doprnt@tmpval
 12345  0022FA  C002  F06A         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 12346  0022FE  C003  F06B         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 12347  002302  C004  F06C         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 12348                           
 12349                           ;doprnt.c: 1230: tmpval.vd %= 10;
 12350  002306  C069  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 12351  00230A  C06A  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 12352  00230E  C06B  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 12353  002312  C06C  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 12354  002316  0E0A               	movlw	10
 12355  002318  6E12               	movwf	i2___llmod@divisor,c
 12356  00231A  0E00               	movlw	0
 12357  00231C  6E13               	movwf	i2___llmod@divisor+1,c
 12358  00231E  0E00               	movlw	0
 12359  002320  6E14               	movwf	i2___llmod@divisor+2,c
 12360  002322  0E00               	movlw	0
 12361  002324  6E15               	movwf	i2___llmod@divisor+3,c
 12362  002326  ECA2  F027         	call	i2___llmod	;wreg free
 12363  00232A  C00E  F069         	movff	?i2___llmod,i2__doprnt@tmpval
 12364  00232E  C00F  F06A         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 12365  002332  C010  F06B         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 12366  002336  C011  F06C         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 12367                           
 12368                           ;doprnt.c: 1231: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 12369  00233A  EE20 F002          	lfsr	2,2
 12370  00233E  5046               	movf	i2__doprnt@pb,w,c
 12371  002340  26D9               	addwf	fsr2l,f,c
 12372  002342  5047               	movf	i2__doprnt@pb+1,w,c
 12373  002344  22DA               	addwfc	fsr2h,f,c
 12374  002346  50DE               	movf	postinc2,w,c
 12375  002348  10DE               	iorwf	postinc2,w,c
 12376  00234A  B4D8               	btfsc	status,2,c
 12377  00234C  D015               	goto	i2l8378
 12378  00234E  EE20 F002          	lfsr	2,2
 12379  002352  5046               	movf	i2__doprnt@pb,w,c
 12380  002354  26D9               	addwf	fsr2l,f,c
 12381  002356  5047               	movf	i2__doprnt@pb+1,w,c
 12382  002358  22DA               	addwfc	fsr2h,f,c
 12383  00235A  D801               	call	i2u1362_48
 12384  00235C  D024               	goto	i2l8380
 12385  00235E                     i2u1362_48:
 12386  00235E  0005               	push	
 12387  002360  6EFA               	movwf	pclath,c
 12388  002362  50DE               	movf	postinc2,w,c
 12389  002364  6EFD               	movwf	tosl,c
 12390  002366  50DE               	movf	postinc2,w,c
 12391  002368  6EFE               	movwf	tosh,c
 12392  00236A  50F8               	movf	tblptru,w,c
 12393  00236C  6EFF               	movwf	tosu,c
 12394  00236E  50FA               	movf	pclath,w,c
 12395  002370  0100               	movlb	0	; () banked
 12396  002372  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 12397  002374  0F30               	addlw	48
 12398  002376  0012               	return		;indir
 12399  002378                     i2l8378:
 12400  002378  0100               	movlb	0	; () banked
 12401  00237A  5169               	movf	i2__doprnt@tmpval& (0+255),w,b
 12402  00237C  0F30               	addlw	48
 12403  00237E  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12404  002382  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12405  002386  CFDE F04C          	movff	postinc2,??i2__doprnt
 12406  00238A  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12407  00238E  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12408  002392  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12409  002396  6EDF               	movwf	indf2,c
 12410  002398  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12411  00239C  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12412  0023A0  2ADE               	incf	postinc2,f,c
 12413  0023A2  0E00               	movlw	0
 12414  0023A4  22DD               	addwfc	postdec2,f,c
 12415  0023A6                     i2l8380:
 12416                           
 12417                           ;doprnt.c: 1232: val %= dpowers[c];
 12418  0023A6  C063  F00E         	movff	i2__doprnt@val,i2___llmod@dividend
 12419  0023AA  C064  F00F         	movff	i2__doprnt@val+1,i2___llmod@dividend+1
 12420  0023AE  C065  F010         	movff	i2__doprnt@val+2,i2___llmod@dividend+2
 12421  0023B2  C066  F011         	movff	i2__doprnt@val+3,i2___llmod@dividend+3
 12422  0023B6  0100               	movlb	0	; () banked
 12423  0023B8  5176               	movf	i2__doprnt@c& (0+255),w,b
 12424  0023BA  0D04               	mullw	4
 12425  0023BC  0E01               	movlw	low _dpowers
 12426  0023BE  24F3               	addwf	prodl,w,c
 12427  0023C0  6EF6               	movwf	tblptrl,c
 12428  0023C2  0E06               	movlw	high _dpowers
 12429  0023C4  20F4               	addwfc	prodh,w,c
 12430  0023C6  6EF7               	movwf	tblptrh,c
 12431  0023C8                     	if	0	;There are less than 3 active tblptr bytes
 12432  0023C8                     	endif
 12433  0023C8  0009               	tblrd		*+
 12434  0023CA  CFF5 F012          	movff	tablat,i2___llmod@divisor
 12435  0023CE  0009               	tblrd		*+
 12436  0023D0  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 12437  0023D4  0009               	tblrd		*+
 12438  0023D6  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 12439  0023DA  000A               	tblrd		*-
 12440  0023DC  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 12441  0023E0  ECA2  F027         	call	i2___llmod
 12442  0023E4  C00E  F063         	movff	?i2___llmod,i2__doprnt@val
 12443  0023E8  C00F  F064         	movff	?i2___llmod+1,i2__doprnt@val+1
 12444  0023EC  C010  F065         	movff	?i2___llmod+2,i2__doprnt@val+2
 12445  0023F0  C011  F066         	movff	?i2___llmod+3,i2__doprnt@val+3
 12446  0023F4                     i2l8382:
 12447  0023F4  0100               	movlb	0	; () banked
 12448  0023F6  0776               	decf	i2__doprnt@c& (0+255),f,b
 12449  0023F8  0100               	movlb	0	; () banked
 12450  0023FA  2976               	incf	i2__doprnt@c& (0+255),w,b
 12451  0023FC  B4D8               	btfsc	status,2,c
 12452  0023FE  D037               	goto	i2l8394
 12453  002400  D75B               	goto	i2l8370
 12454  002402                     i2l8384:
 12455                           
 12456                           ; BSR set to: 0
 12457                           ;doprnt.c: 1236: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 12458  002402  EE20 F002          	lfsr	2,2
 12459  002406  5046               	movf	i2__doprnt@pb,w,c
 12460  002408  26D9               	addwf	fsr2l,f,c
 12461  00240A  5047               	movf	i2__doprnt@pb+1,w,c
 12462  00240C  22DA               	addwfc	fsr2h,f,c
 12463  00240E  50DE               	movf	postinc2,w,c
 12464  002410  10DE               	iorwf	postinc2,w,c
 12465  002412  B4D8               	btfsc	status,2,c
 12466  002414  D013               	goto	i2l8388
 12467                           
 12468                           ; BSR set to: 0
 12469  002416  EE20 F002          	lfsr	2,2
 12470  00241A  5046               	movf	i2__doprnt@pb,w,c
 12471  00241C  26D9               	addwf	fsr2l,f,c
 12472  00241E  5047               	movf	i2__doprnt@pb+1,w,c
 12473  002420  22DA               	addwfc	fsr2h,f,c
 12474  002422  D801               	call	i2u1365_48
 12475  002424  D020               	goto	i2l8392
 12476  002426                     i2u1365_48:
 12477  002426  0005               	push	
 12478  002428  6EFA               	movwf	pclath,c
 12479  00242A  50DE               	movf	postinc2,w,c
 12480  00242C  6EFD               	movwf	tosl,c
 12481  00242E  50DE               	movf	postinc2,w,c
 12482  002430  6EFE               	movwf	tosh,c
 12483  002432  50F8               	movf	tblptru,w,c
 12484  002434  6EFF               	movwf	tosu,c
 12485  002436  50FA               	movf	pclath,w,c
 12486  002438  0E30               	movlw	48
 12487  00243A  0012               	return		;indir
 12488  00243C                     i2l8388:
 12489  00243C  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12490  002440  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12491  002444  CFDE F04C          	movff	postinc2,??i2__doprnt
 12492  002448  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12493  00244C  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12494  002450  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12495  002454  0E30               	movlw	48
 12496  002456  6EDF               	movwf	indf2,c
 12497  002458  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12498  00245C  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12499  002460  2ADE               	incf	postinc2,f,c
 12500  002462  0E00               	movlw	0
 12501  002464  22DD               	addwfc	postdec2,f,c
 12502  002466                     i2l8392:
 12503                           
 12504                           ;doprnt.c: 1237: prec--;
 12505  002466  0100               	movlb	0	; () banked
 12506  002468  0774               	decf	i2__doprnt@prec& (0+255),f,b
 12507  00246A  A0D8               	btfss	status,0,c
 12508  00246C  0775               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 12509  00246E                     i2l8394:
 12510                           
 12511                           ; BSR set to: 0
 12512  00246E  0100               	movlb	0	; () banked
 12513  002470  5174               	movf	i2__doprnt@prec& (0+255),w,b
 12514  002472  0100               	movlb	0	; () banked
 12515  002474  1175               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 12516  002476  B4D8               	btfsc	status,2,c
 12517  002478  D25F               	goto	i2l8506
 12518  00247A  D7C3               	goto	i2l8384
 12519  00247C                     i2l351:
 12520                           
 12521                           ; BSR set to: 0
 12522                           ;doprnt.c: 1246: }
 12523                           ;doprnt.c: 1273: {
 12524                           ;doprnt.c: 1281: if(flag & 0x10)
 12525  00247C  0100               	movlb	0	; () banked
 12526  00247E  A970               	btfss	i2__doprnt@flag& (0+255),4,b
 12527  002480  D019               	goto	i2l8398
 12528                           
 12529                           ; BSR set to: 0
 12530                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 12531  002482  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 12532  002486  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 12533  00248A  CFDF F04C          	movff	indf2,??i2__doprnt
 12534  00248E  0E04               	movlw	4
 12535  002490  26DE               	addwf	postinc2,f,c
 12536  002492  CFDF F04D          	movff	indf2,??i2__doprnt+1
 12537  002496  0E00               	movlw	0
 12538  002498  22DD               	addwfc	postdec2,f,c
 12539  00249A  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12540  00249E  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12541  0024A2  CFDE F063          	movff	postinc2,i2__doprnt@val
 12542  0024A6  CFDE F064          	movff	postinc2,i2__doprnt@val+1
 12543  0024AA  CFDE F065          	movff	postinc2,i2__doprnt@val+2
 12544  0024AE  CFDE F066          	movff	postinc2,i2__doprnt@val+3
 12545  0024B2  D01B               	goto	i2l8400
 12546  0024B4                     i2l8398:
 12547                           
 12548                           ; BSR set to: 0
 12549                           ;doprnt.c: 1283: else
 12550                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 12551  0024B4  C04A  FFD9         	movff	i2__doprnt@ap,fsr2l
 12552  0024B8  C04B  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 12553  0024BC  CFDF F04C          	movff	indf2,??i2__doprnt
 12554  0024C0  0E02               	movlw	2
 12555  0024C2  26DE               	addwf	postinc2,f,c
 12556  0024C4  CFDF F04D          	movff	indf2,??i2__doprnt+1
 12557  0024C8  0E00               	movlw	0
 12558  0024CA  22DD               	addwfc	postdec2,f,c
 12559  0024CC  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12560  0024D0  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12561  0024D4  CFDE F04E          	movff	postinc2,??i2__doprnt+2
 12562  0024D8  CFDD F04F          	movff	postdec2,??i2__doprnt+3
 12563  0024DC  C04E  F063         	movff	??i2__doprnt+2,i2__doprnt@val
 12564  0024E0  C04F  F064         	movff	??i2__doprnt+3,i2__doprnt@val+1
 12565  0024E4  0100               	movlb	0	; () banked
 12566  0024E6  6B65               	clrf	(i2__doprnt@val+2)& (0+255),b
 12567  0024E8  6B66               	clrf	(i2__doprnt@val+3)& (0+255),b
 12568  0024EA                     i2l8400:
 12569                           
 12570                           ; BSR set to: 0
 12571                           ;doprnt.c: 1287: }
 12572                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 12573  0024EA  0100               	movlb	0	; () banked
 12574  0024EC  5174               	movf	i2__doprnt@prec& (0+255),w,b
 12575  0024EE  0100               	movlb	0	; () banked
 12576  0024F0  1175               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 12577  0024F2  A4D8               	btfss	status,2,c
 12578  0024F4  D00D               	goto	i2l8406
 12579                           
 12580                           ; BSR set to: 0
 12581  0024F6  0100               	movlb	0	; () banked
 12582  0024F8  5163               	movf	i2__doprnt@val& (0+255),w,b
 12583  0024FA  0100               	movlb	0	; () banked
 12584  0024FC  1164               	iorwf	(i2__doprnt@val+1)& (0+255),w,b
 12585  0024FE  0100               	movlb	0	; () banked
 12586  002500  1165               	iorwf	(i2__doprnt@val+2)& (0+255),w,b
 12587  002502  0100               	movlb	0	; () banked
 12588  002504  1166               	iorwf	(i2__doprnt@val+3)& (0+255),w,b
 12589  002506  A4D8               	btfss	status,2,c
 12590  002508  D003               	goto	i2l8406
 12591                           
 12592                           ; BSR set to: 0
 12593                           ;doprnt.c: 1291: prec++;
 12594  00250A  0100               	movlb	0	; () banked
 12595  00250C  4B74               	infsnz	i2__doprnt@prec& (0+255),f,b
 12596  00250E  2B75               	incf	(i2__doprnt@prec+1)& (0+255),f,b
 12597  002510                     i2l8406:
 12598                           
 12599                           ; BSR set to: 0
 12600                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 12601  002510  0E01               	movlw	1
 12602  002512  0100               	movlb	0	; () banked
 12603  002514  6F76               	movwf	i2__doprnt@c& (0+255),b
 12604  002516                     i2l8408:
 12605                           
 12606                           ; BSR set to: 0
 12607  002516  0E0A               	movlw	10
 12608  002518  0100               	movlb	0	; () banked
 12609  00251A  1976               	xorwf	i2__doprnt@c& (0+255),w,b
 12610  00251C  B4D8               	btfsc	status,2,c
 12611  00251E  D01E               	goto	i2l8420
 12612                           
 12613                           ; BSR set to: 0
 12614                           ;doprnt.c: 1306: if(val < dpowers[c])
 12615                           
 12616                           ; BSR set to: 0
 12617                           
 12618                           ; BSR set to: 0
 12619  002520  0100               	movlb	0	; () banked
 12620  002522  5176               	movf	i2__doprnt@c& (0+255),w,b
 12621  002524  0D04               	mullw	4
 12622  002526  0E01               	movlw	low _dpowers
 12623  002528  24F3               	addwf	prodl,w,c
 12624  00252A  6EF6               	movwf	tblptrl,c
 12625  00252C  0E06               	movlw	high _dpowers
 12626  00252E  20F4               	addwfc	prodh,w,c
 12627  002530  6EF7               	movwf	tblptrh,c
 12628  002532                     	if	0	;There are less than 3 active tblptr bytes
 12629  002532                     	endif
 12630  002532  0009               	tblrd		*+
 12631  002534  50F5               	movf	tablat,w,c
 12632  002536  0100               	movlb	0	; () banked
 12633  002538  5D63               	subwf	i2__doprnt@val& (0+255),w,b
 12634  00253A  0009               	tblrd		*+
 12635  00253C  50F5               	movf	tablat,w,c
 12636  00253E  0100               	movlb	0	; () banked
 12637  002540  5964               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 12638  002542  0009               	tblrd		*+
 12639  002544  50F5               	movf	tablat,w,c
 12640  002546  0100               	movlb	0	; () banked
 12641  002548  5965               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 12642  00254A  0009               	tblrd		*+
 12643  00254C  50F5               	movf	tablat,w,c
 12644  00254E  0100               	movlb	0	; () banked
 12645  002550  5966               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 12646  002552  A0D8               	btfss	status,0,c
 12647  002554  D003               	goto	i2l8420
 12648                           
 12649                           ; BSR set to: 0
 12650                           
 12651                           ; BSR set to: 0
 12652                           
 12653                           ; BSR set to: 0
 12654                           ;doprnt.c: 1307: break;
 12655  002556  0100               	movlb	0	; () banked
 12656  002558  2B76               	incf	i2__doprnt@c& (0+255),f,b
 12657  00255A  D7DD               	goto	i2l8408
 12658  00255C                     i2l8420:
 12659                           
 12660                           ; BSR set to: 0
 12661                           ;doprnt.c: 1339: if(c < prec)
 12662  00255C  0E80               	movlw	128
 12663  00255E  0100               	movlb	0	; () banked
 12664  002560  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 12665  002562  0E7F               	movlw	127
 12666  002564  6E4C               	movwf	??i2__doprnt& (0+255),c
 12667  002566  0100               	movlb	0	; () banked
 12668  002568  5174               	movf	i2__doprnt@prec& (0+255),w,b
 12669  00256A  0100               	movlb	0	; () banked
 12670  00256C  5D76               	subwf	i2__doprnt@c& (0+255),w,b
 12671  00256E  0100               	movlb	0	; () banked
 12672  002570  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 12673  002572  0A80               	xorlw	128
 12674  002574  584C               	subwfb	??i2__doprnt& (0+255),w,c
 12675  002576  B0D8               	btfsc	status,0,c
 12676  002578  D003               	goto	i2l8424
 12677                           
 12678                           ; BSR set to: 0
 12679                           ;doprnt.c: 1340: c = prec;
 12680  00257A  C074  F076         	movff	i2__doprnt@prec,i2__doprnt@c
 12681  00257E  D016               	goto	i2l8428
 12682  002580                     i2l8424:
 12683                           
 12684                           ; BSR set to: 0
 12685                           ;doprnt.c: 1341: else if(prec < c)
 12686  002580  0100               	movlb	0	; () banked
 12687  002582  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 12688  002584  0A80               	xorlw	128
 12689  002586  6E4C               	movwf	??i2__doprnt& (0+255),c
 12690  002588  0100               	movlb	0	; () banked
 12691  00258A  5176               	movf	i2__doprnt@c& (0+255),w,b
 12692  00258C  0100               	movlb	0	; () banked
 12693  00258E  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 12694  002590  0E80               	movlw	128
 12695  002592  0100               	movlb	0	; () banked
 12696  002594  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 12697  002596  0E7F               	movlw	127
 12698  002598  584C               	subwfb	??i2__doprnt& (0+255),w,c
 12699  00259A  B0D8               	btfsc	status,0,c
 12700  00259C  D007               	goto	i2l8428
 12701                           
 12702                           ; BSR set to: 0
 12703                           ;doprnt.c: 1342: prec = c;
 12704  00259E  0100               	movlb	0	; () banked
 12705  0025A0  5176               	movf	i2__doprnt@c& (0+255),w,b
 12706  0025A2  0100               	movlb	0	; () banked
 12707  0025A4  6F74               	movwf	i2__doprnt@prec& (0+255),b
 12708  0025A6  6B75               	clrf	(i2__doprnt@prec+1)& (0+255),b
 12709  0025A8  BF74               	btfsc	i2__doprnt@prec& (0+255),7,b
 12710  0025AA  0775               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 12711  0025AC                     i2l8428:
 12712                           
 12713                           ; BSR set to: 0
 12714                           ;doprnt.c: 1345: if(width && flag & 0x03)
 12715  0025AC  0100               	movlb	0	; () banked
 12716  0025AE  5172               	movf	i2__doprnt@width& (0+255),w,b
 12717  0025B0  0100               	movlb	0	; () banked
 12718  0025B2  1173               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 12719  0025B4  B4D8               	btfsc	status,2,c
 12720  0025B6  D010               	goto	i2l8434
 12721                           
 12722                           ; BSR set to: 0
 12723  0025B8  0E03               	movlw	3
 12724  0025BA  0100               	movlb	0	; () banked
 12725  0025BC  1570               	andwf	i2__doprnt@flag& (0+255),w,b
 12726  0025BE  6E4C               	movwf	??i2__doprnt& (0+255),c
 12727  0025C0  0E00               	movlw	0
 12728  0025C2  0100               	movlb	0	; () banked
 12729  0025C4  1571               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 12730  0025C6  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 12731  0025C8  504C               	movf	??i2__doprnt,w,c
 12732  0025CA  104D               	iorwf	??i2__doprnt+1,w,c
 12733  0025CC  B4D8               	btfsc	status,2,c
 12734  0025CE  D004               	goto	i2l8434
 12735                           
 12736                           ; BSR set to: 0
 12737                           ;doprnt.c: 1346: width--;
 12738  0025D0  0100               	movlb	0	; () banked
 12739  0025D2  0772               	decf	i2__doprnt@width& (0+255),f,b
 12740  0025D4  A0D8               	btfss	status,0,c
 12741  0025D6  0773               	decf	(i2__doprnt@width+1)& (0+255),f,b
 12742  0025D8                     i2l8434:
 12743                           
 12744                           ; BSR set to: 0
 12745                           ;doprnt.c: 1348: if(flag & 0x4000) {
 12746  0025D8  0100               	movlb	0	; () banked
 12747  0025DA  AD71               	btfss	(i2__doprnt@flag+1)& (0+255),6,b
 12748  0025DC  D01C               	goto	i2l8442
 12749                           
 12750                           ; BSR set to: 0
 12751                           ;doprnt.c: 1349: if(width > prec)
 12752  0025DE  0100               	movlb	0	; () banked
 12753  0025E0  5172               	movf	i2__doprnt@width& (0+255),w,b
 12754  0025E2  0100               	movlb	0	; () banked
 12755  0025E4  5D74               	subwf	i2__doprnt@prec& (0+255),w,b
 12756  0025E6  0100               	movlb	0	; () banked
 12757  0025E8  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 12758  0025EA  0A80               	xorlw	128
 12759  0025EC  6E4C               	movwf	??i2__doprnt& (0+255),c
 12760  0025EE  0100               	movlb	0	; () banked
 12761  0025F0  5173               	movf	(i2__doprnt@width+1)& (0+255),w,b
 12762  0025F2  0A80               	xorlw	128
 12763  0025F4  584C               	subwfb	??i2__doprnt& (0+255),w,c
 12764  0025F6  B0D8               	btfsc	status,0,c
 12765  0025F8  D009               	goto	i2l8440
 12766                           
 12767                           ; BSR set to: 0
 12768                           ;doprnt.c: 1350: width -= prec;
 12769  0025FA  0100               	movlb	0	; () banked
 12770  0025FC  5174               	movf	i2__doprnt@prec& (0+255),w,b
 12771  0025FE  0100               	movlb	0	; () banked
 12772  002600  5F72               	subwf	i2__doprnt@width& (0+255),f,b
 12773  002602  0100               	movlb	0	; () banked
 12774  002604  5175               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 12775  002606  0100               	movlb	0	; () banked
 12776  002608  5B73               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 12777  00260A  D005               	goto	i2l8442
 12778  00260C                     i2l8440:
 12779                           
 12780                           ; BSR set to: 0
 12781                           ;doprnt.c: 1351: else
 12782                           ;doprnt.c: 1352: width = 0;
 12783  00260C  0E00               	movlw	0
 12784  00260E  0100               	movlb	0	; () banked
 12785  002610  6F73               	movwf	(i2__doprnt@width+1)& (0+255),b
 12786  002612  0E00               	movlw	0
 12787  002614  6F72               	movwf	i2__doprnt@width& (0+255),b
 12788  002616                     i2l8442:
 12789                           
 12790                           ; BSR set to: 0
 12791                           ;doprnt.c: 1353: }
 12792                           ;doprnt.c: 1381: if(width > c)
 12793  002616  0E80               	movlw	128
 12794  002618  0100               	movlb	0	; () banked
 12795  00261A  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 12796  00261C  0E7F               	movlw	127
 12797  00261E  6E4C               	movwf	??i2__doprnt& (0+255),c
 12798  002620  0100               	movlb	0	; () banked
 12799  002622  5172               	movf	i2__doprnt@width& (0+255),w,b
 12800  002624  0100               	movlb	0	; () banked
 12801  002626  5D76               	subwf	i2__doprnt@c& (0+255),w,b
 12802  002628  0100               	movlb	0	; () banked
 12803  00262A  5173               	movf	(i2__doprnt@width+1)& (0+255),w,b
 12804  00262C  0A80               	xorlw	128
 12805  00262E  584C               	subwfb	??i2__doprnt& (0+255),w,c
 12806  002630  B0D8               	btfsc	status,0,c
 12807  002632  D00B               	goto	i2l8446
 12808                           
 12809                           ; BSR set to: 0
 12810                           ;doprnt.c: 1382: width -= c;
 12811  002634  0100               	movlb	0	; () banked
 12812  002636  5176               	movf	i2__doprnt@c& (0+255),w,b
 12813  002638  0100               	movlb	0	; () banked
 12814  00263A  5F72               	subwf	i2__doprnt@width& (0+255),f,b
 12815  00263C  0E00               	movlw	0
 12816  00263E  0100               	movlb	0	; () banked
 12817  002640  BF76               	btfsc	i2__doprnt@c& (0+255),7,b
 12818  002642  0EFF               	movlw	255
 12819  002644  0100               	movlb	0	; () banked
 12820  002646  5B73               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 12821  002648  D005               	goto	i2l8448
 12822  00264A                     i2l8446:
 12823                           
 12824                           ; BSR set to: 0
 12825                           ;doprnt.c: 1383: else
 12826                           ;doprnt.c: 1384: width = 0;
 12827  00264A  0E00               	movlw	0
 12828  00264C  0100               	movlb	0	; () banked
 12829  00264E  6F73               	movwf	(i2__doprnt@width+1)& (0+255),b
 12830  002650  0E00               	movlw	0
 12831  002652  6F72               	movwf	i2__doprnt@width& (0+255),b
 12832  002654                     i2l8448:
 12833                           
 12834                           ; BSR set to: 0
 12835                           ;doprnt.c: 1387: if(flag & 0x04) {
 12836  002654  0100               	movlb	0	; () banked
 12837  002656  A570               	btfss	i2__doprnt@flag& (0+255),2,b
 12838  002658  D07B               	goto	i2l8472
 12839                           
 12840                           ; BSR set to: 0
 12841                           ;doprnt.c: 1392: if(flag & 0x03)
 12842  00265A  0E03               	movlw	3
 12843  00265C  0100               	movlb	0	; () banked
 12844  00265E  1570               	andwf	i2__doprnt@flag& (0+255),w,b
 12845  002660  6E4C               	movwf	??i2__doprnt& (0+255),c
 12846  002662  0E00               	movlw	0
 12847  002664  0100               	movlb	0	; () banked
 12848  002666  1571               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 12849  002668  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 12850  00266A  504C               	movf	??i2__doprnt,w,c
 12851  00266C  104D               	iorwf	??i2__doprnt+1,w,c
 12852  00266E  B4D8               	btfsc	status,2,c
 12853  002670  D032               	goto	i2l8460
 12854                           
 12855                           ; BSR set to: 0
 12856                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 12857  002672  EE20 F002          	lfsr	2,2
 12858  002676  5046               	movf	i2__doprnt@pb,w,c
 12859  002678  26D9               	addwf	fsr2l,f,c
 12860  00267A  5047               	movf	i2__doprnt@pb+1,w,c
 12861  00267C  22DA               	addwfc	fsr2h,f,c
 12862  00267E  50DE               	movf	postinc2,w,c
 12863  002680  10DE               	iorwf	postinc2,w,c
 12864  002682  B4D8               	btfsc	status,2,c
 12865  002684  D013               	goto	i2l8456
 12866                           
 12867                           ; BSR set to: 0
 12868  002686  EE20 F002          	lfsr	2,2
 12869  00268A  5046               	movf	i2__doprnt@pb,w,c
 12870  00268C  26D9               	addwf	fsr2l,f,c
 12871  00268E  5047               	movf	i2__doprnt@pb+1,w,c
 12872  002690  22DA               	addwfc	fsr2h,f,c
 12873  002692  D801               	call	i2u1383_48
 12874  002694  D020               	goto	i2l8460
 12875  002696                     i2u1383_48:
 12876  002696  0005               	push	
 12877  002698  6EFA               	movwf	pclath,c
 12878  00269A  50DE               	movf	postinc2,w,c
 12879  00269C  6EFD               	movwf	tosl,c
 12880  00269E  50DE               	movf	postinc2,w,c
 12881  0026A0  6EFE               	movwf	tosh,c
 12882  0026A2  50F8               	movf	tblptru,w,c
 12883  0026A4  6EFF               	movwf	tosu,c
 12884  0026A6  50FA               	movf	pclath,w,c
 12885  0026A8  0E2D               	movlw	45
 12886  0026AA  0012               	return		;indir
 12887  0026AC                     i2l8456:
 12888  0026AC  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12889  0026B0  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12890  0026B4  CFDE F04C          	movff	postinc2,??i2__doprnt
 12891  0026B8  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12892  0026BC  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12893  0026C0  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12894  0026C4  0E2D               	movlw	45
 12895  0026C6  6EDF               	movwf	indf2,c
 12896  0026C8  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12897  0026CC  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12898  0026D0  2ADE               	incf	postinc2,f,c
 12899  0026D2  0E00               	movlw	0
 12900  0026D4  22DD               	addwfc	postdec2,f,c
 12901  0026D6                     i2l8460:
 12902                           
 12903                           ;doprnt.c: 1415: if(width)
 12904  0026D6  0100               	movlb	0	; () banked
 12905  0026D8  5172               	movf	i2__doprnt@width& (0+255),w,b
 12906  0026DA  0100               	movlb	0	; () banked
 12907  0026DC  1173               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 12908  0026DE  B4D8               	btfsc	status,2,c
 12909  0026E0  D120               	goto	i2l8504
 12910                           
 12911                           ; BSR set to: 0
 12912                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 12913                           
 12914                           ; BSR set to: 0
 12915                           
 12916                           ;doprnt.c: 1416: do
 12917  0026E2  EE20 F002          	lfsr	2,2
 12918  0026E6  5046               	movf	i2__doprnt@pb,w,c
 12919  0026E8  26D9               	addwf	fsr2l,f,c
 12920  0026EA  5047               	movf	i2__doprnt@pb+1,w,c
 12921  0026EC  22DA               	addwfc	fsr2h,f,c
 12922  0026EE  50DE               	movf	postinc2,w,c
 12923  0026F0  10DE               	iorwf	postinc2,w,c
 12924  0026F2  B4D8               	btfsc	status,2,c
 12925  0026F4  D013               	goto	i2l8466
 12926                           
 12927                           ; BSR set to: 0
 12928  0026F6  EE20 F002          	lfsr	2,2
 12929  0026FA  5046               	movf	i2__doprnt@pb,w,c
 12930  0026FC  26D9               	addwf	fsr2l,f,c
 12931  0026FE  5047               	movf	i2__doprnt@pb+1,w,c
 12932  002700  22DA               	addwfc	fsr2h,f,c
 12933  002702  D801               	call	i2u1386_48
 12934  002704  D020               	goto	i2l8470
 12935  002706                     i2u1386_48:
 12936  002706  0005               	push	
 12937  002708  6EFA               	movwf	pclath,c
 12938  00270A  50DE               	movf	postinc2,w,c
 12939  00270C  6EFD               	movwf	tosl,c
 12940  00270E  50DE               	movf	postinc2,w,c
 12941  002710  6EFE               	movwf	tosh,c
 12942  002712  50F8               	movf	tblptru,w,c
 12943  002714  6EFF               	movwf	tosu,c
 12944  002716  50FA               	movf	pclath,w,c
 12945  002718  0E30               	movlw	48
 12946  00271A  0012               	return		;indir
 12947  00271C                     i2l8466:
 12948  00271C  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12949  002720  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12950  002724  CFDE F04C          	movff	postinc2,??i2__doprnt
 12951  002728  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 12952  00272C  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 12953  002730  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 12954  002734  0E30               	movlw	48
 12955  002736  6EDF               	movwf	indf2,c
 12956  002738  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 12957  00273C  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 12958  002740  2ADE               	incf	postinc2,f,c
 12959  002742  0E00               	movlw	0
 12960  002744  22DD               	addwfc	postdec2,f,c
 12961  002746                     i2l8470:
 12962                           
 12963                           ;doprnt.c: 1418: while(--width);
 12964  002746  0100               	movlb	0	; () banked
 12965  002748  0772               	decf	i2__doprnt@width& (0+255),f,b
 12966  00274A  A0D8               	btfss	status,0,c
 12967  00274C  0773               	decf	(i2__doprnt@width+1)& (0+255),f,b
 12968  00274E  D7C3               	goto	i2l8460
 12969  002750                     i2l8472:
 12970                           
 12971                           ; BSR set to: 0
 12972                           ;doprnt.c: 1422: {
 12973                           ;doprnt.c: 1424: if(width
 12974                           ;doprnt.c: 1428: )
 12975  002750  0100               	movlb	0	; () banked
 12976  002752  5172               	movf	i2__doprnt@width& (0+255),w,b
 12977  002754  0100               	movlb	0	; () banked
 12978  002756  1173               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 12979  002758  B4D8               	btfsc	status,2,c
 12980  00275A  D03C               	goto	i2l8484
 12981  00275C                     i2l8474:
 12982                           
 12983                           ; BSR set to: 0
 12984                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 12985  00275C  EE20 F002          	lfsr	2,2
 12986  002760  5046               	movf	i2__doprnt@pb,w,c
 12987  002762  26D9               	addwf	fsr2l,f,c
 12988  002764  5047               	movf	i2__doprnt@pb+1,w,c
 12989  002766  22DA               	addwfc	fsr2h,f,c
 12990  002768  50DE               	movf	postinc2,w,c
 12991  00276A  10DE               	iorwf	postinc2,w,c
 12992  00276C  B4D8               	btfsc	status,2,c
 12993  00276E  D013               	goto	i2l8478
 12994                           
 12995                           ; BSR set to: 0
 12996  002770  EE20 F002          	lfsr	2,2
 12997  002774  5046               	movf	i2__doprnt@pb,w,c
 12998  002776  26D9               	addwf	fsr2l,f,c
 12999  002778  5047               	movf	i2__doprnt@pb+1,w,c
 13000  00277A  22DA               	addwfc	fsr2h,f,c
 13001  00277C  D801               	call	i2u1390_48
 13002  00277E  D020               	goto	i2l8482
 13003  002780                     i2u1390_48:
 13004  002780  0005               	push	
 13005  002782  6EFA               	movwf	pclath,c
 13006  002784  50DE               	movf	postinc2,w,c
 13007  002786  6EFD               	movwf	tosl,c
 13008  002788  50DE               	movf	postinc2,w,c
 13009  00278A  6EFE               	movwf	tosh,c
 13010  00278C  50F8               	movf	tblptru,w,c
 13011  00278E  6EFF               	movwf	tosu,c
 13012  002790  50FA               	movf	pclath,w,c
 13013  002792  0E20               	movlw	32
 13014  002794  0012               	return		;indir
 13015  002796                     i2l8478:
 13016  002796  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13017  00279A  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13018  00279E  CFDE F04C          	movff	postinc2,??i2__doprnt
 13019  0027A2  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13020  0027A6  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13021  0027AA  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13022  0027AE  0E20               	movlw	32
 13023  0027B0  6EDF               	movwf	indf2,c
 13024  0027B2  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13025  0027B6  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13026  0027BA  2ADE               	incf	postinc2,f,c
 13027  0027BC  0E00               	movlw	0
 13028  0027BE  22DD               	addwfc	postdec2,f,c
 13029  0027C0                     i2l8482:
 13030                           
 13031                           ;doprnt.c: 1431: while(--width);
 13032  0027C0  0100               	movlb	0	; () banked
 13033  0027C2  0772               	decf	i2__doprnt@width& (0+255),f,b
 13034  0027C4  A0D8               	btfss	status,0,c
 13035  0027C6  0773               	decf	(i2__doprnt@width+1)& (0+255),f,b
 13036  0027C8  0100               	movlb	0	; () banked
 13037  0027CA  5172               	movf	i2__doprnt@width& (0+255),w,b
 13038  0027CC  0100               	movlb	0	; () banked
 13039  0027CE  1173               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 13040  0027D0  A4D8               	btfss	status,2,c
 13041  0027D2  D7C4               	goto	i2l8474
 13042  0027D4                     i2l8484:
 13043                           
 13044                           ; BSR set to: 0
 13045                           ;doprnt.c: 1438: if(flag & 0x03)
 13046  0027D4  0E03               	movlw	3
 13047  0027D6  0100               	movlb	0	; () banked
 13048  0027D8  1570               	andwf	i2__doprnt@flag& (0+255),w,b
 13049  0027DA  6E4C               	movwf	??i2__doprnt& (0+255),c
 13050  0027DC  0E00               	movlw	0
 13051  0027DE  0100               	movlb	0	; () banked
 13052  0027E0  1571               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 13053  0027E2  6E4D               	movwf	(??i2__doprnt+1)& (0+255),c
 13054  0027E4  504C               	movf	??i2__doprnt,w,c
 13055  0027E6  104D               	iorwf	??i2__doprnt+1,w,c
 13056  0027E8  B4D8               	btfsc	status,2,c
 13057  0027EA  D09B               	goto	i2l8504
 13058                           
 13059                           ; BSR set to: 0
 13060                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 13061  0027EC  EE20 F002          	lfsr	2,2
 13062  0027F0  5046               	movf	i2__doprnt@pb,w,c
 13063  0027F2  26D9               	addwf	fsr2l,f,c
 13064  0027F4  5047               	movf	i2__doprnt@pb+1,w,c
 13065  0027F6  22DA               	addwfc	fsr2h,f,c
 13066  0027F8  50DE               	movf	postinc2,w,c
 13067  0027FA  10DE               	iorwf	postinc2,w,c
 13068  0027FC  B4D8               	btfsc	status,2,c
 13069  0027FE  D013               	goto	i2l8490
 13070                           
 13071                           ; BSR set to: 0
 13072  002800  EE20 F002          	lfsr	2,2
 13073  002804  5046               	movf	i2__doprnt@pb,w,c
 13074  002806  26D9               	addwf	fsr2l,f,c
 13075  002808  5047               	movf	i2__doprnt@pb+1,w,c
 13076  00280A  22DA               	addwfc	fsr2h,f,c
 13077  00280C  D801               	call	i2u1394_48
 13078  00280E  D089               	goto	i2l8504
 13079  002810                     i2u1394_48:
 13080  002810  0005               	push	
 13081  002812  6EFA               	movwf	pclath,c
 13082  002814  50DE               	movf	postinc2,w,c
 13083  002816  6EFD               	movwf	tosl,c
 13084  002818  50DE               	movf	postinc2,w,c
 13085  00281A  6EFE               	movwf	tosh,c
 13086  00281C  50F8               	movf	tblptru,w,c
 13087  00281E  6EFF               	movwf	tosu,c
 13088  002820  50FA               	movf	pclath,w,c
 13089  002822  0E2D               	movlw	45
 13090  002824  0012               	return		;indir
 13091  002826                     i2l8490:
 13092  002826  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13093  00282A  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13094  00282E  CFDE F04C          	movff	postinc2,??i2__doprnt
 13095  002832  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13096  002836  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13097  00283A  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13098  00283E  0E2D               	movlw	45
 13099  002840  6EDF               	movwf	indf2,c
 13100  002842  D068               	goto	i2l8502
 13101  002844                     i2l8494:
 13102                           
 13103                           ;doprnt.c: 1478: {
 13104                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 13105  002844  C074  F04C         	movff	i2__doprnt@prec,??i2__doprnt
 13106  002848  C075  F04D         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 13107  00284C  90D8               	bcf	status,0,c
 13108  00284E  364C               	rlcf	??i2__doprnt,f,c
 13109  002850  364D               	rlcf	??i2__doprnt+1,f,c
 13110  002852  90D8               	bcf	status,0,c
 13111  002854  364C               	rlcf	??i2__doprnt,f,c
 13112  002856  364D               	rlcf	??i2__doprnt+1,f,c
 13113  002858  0E01               	movlw	low _dpowers
 13114  00285A  244C               	addwf	??i2__doprnt,w,c
 13115  00285C  6EF6               	movwf	tblptrl,c
 13116  00285E  0E06               	movlw	high _dpowers
 13117  002860  204D               	addwfc	??i2__doprnt+1,w,c
 13118  002862  6EF7               	movwf	tblptrh,c
 13119  002864                     	if	0	;There are less than 3 active tblptr bytes
 13120  002864                     	endif
 13121  002864  0009               	tblrd		*+
 13122  002866  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 13123  00286A  0009               	tblrd		*+
 13124  00286C  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 13125  002870  0009               	tblrd		*+
 13126  002872  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 13127  002876  000A               	tblrd		*-
 13128  002878  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 13129  00287C  C063  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 13130  002880  C064  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 13131  002884  C065  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 13132  002888  C066  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 13133  00288C  EC73  F026         	call	i2___lldiv
 13134  002890  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 13135  002894  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 13136  002898  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 13137  00289C  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 13138  0028A0  0E0A               	movlw	10
 13139  0028A2  6E12               	movwf	i2___llmod@divisor,c
 13140  0028A4  0E00               	movlw	0
 13141  0028A6  6E13               	movwf	i2___llmod@divisor+1,c
 13142  0028A8  0E00               	movlw	0
 13143  0028AA  6E14               	movwf	i2___llmod@divisor+2,c
 13144  0028AC  0E00               	movlw	0
 13145  0028AE  6E15               	movwf	i2___llmod@divisor+3,c
 13146  0028B0  ECA2  F027         	call	i2___llmod	;wreg free
 13147  0028B4  500E               	movf	?i2___llmod,w,c
 13148  0028B6  0F30               	addlw	48
 13149  0028B8  0100               	movlb	0	; () banked
 13150  0028BA  6F76               	movwf	i2__doprnt@c& (0+255),b
 13151                           
 13152                           ; BSR set to: 0
 13153                           ;doprnt.c: 1523: }
 13154                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 13155  0028BC  EE20 F002          	lfsr	2,2
 13156  0028C0  5046               	movf	i2__doprnt@pb,w,c
 13157  0028C2  26D9               	addwf	fsr2l,f,c
 13158  0028C4  5047               	movf	i2__doprnt@pb+1,w,c
 13159  0028C6  22DA               	addwfc	fsr2h,f,c
 13160  0028C8  50DE               	movf	postinc2,w,c
 13161  0028CA  10DE               	iorwf	postinc2,w,c
 13162  0028CC  B4D8               	btfsc	status,2,c
 13163  0028CE  D014               	goto	i2l8500
 13164                           
 13165                           ; BSR set to: 0
 13166  0028D0  EE20 F002          	lfsr	2,2
 13167  0028D4  5046               	movf	i2__doprnt@pb,w,c
 13168  0028D6  26D9               	addwf	fsr2l,f,c
 13169  0028D8  5047               	movf	i2__doprnt@pb+1,w,c
 13170  0028DA  22DA               	addwfc	fsr2h,f,c
 13171  0028DC  D801               	call	i2u1396_48
 13172  0028DE  D021               	goto	i2l8504
 13173  0028E0                     i2u1396_48:
 13174  0028E0  0005               	push	
 13175  0028E2  6EFA               	movwf	pclath,c
 13176  0028E4  50DE               	movf	postinc2,w,c
 13177  0028E6  6EFD               	movwf	tosl,c
 13178  0028E8  50DE               	movf	postinc2,w,c
 13179  0028EA  6EFE               	movwf	tosh,c
 13180  0028EC  50F8               	movf	tblptru,w,c
 13181  0028EE  6EFF               	movwf	tosu,c
 13182  0028F0  50FA               	movf	pclath,w,c
 13183  0028F2  0100               	movlb	0	; () banked
 13184  0028F4  5176               	movf	i2__doprnt@c& (0+255),w,b
 13185  0028F6  0012               	return		;indir
 13186  0028F8                     i2l8500:
 13187  0028F8  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13188  0028FC  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13189  002900  CFDE F04C          	movff	postinc2,??i2__doprnt
 13190  002904  CFDD F04D          	movff	postdec2,??i2__doprnt+1
 13191  002908  C04C  FFD9         	movff	??i2__doprnt,fsr2l
 13192  00290C  C04D  FFDA         	movff	??i2__doprnt+1,fsr2h
 13193  002910  C076  FFDF         	movff	i2__doprnt@c,indf2
 13194  002914                     i2l8502:
 13195  002914  C046  FFD9         	movff	i2__doprnt@pb,fsr2l
 13196  002918  C047  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 13197  00291C  2ADE               	incf	postinc2,f,c
 13198  00291E  0E00               	movlw	0
 13199  002920  22DD               	addwfc	postdec2,f,c
 13200  002922                     i2l8504:
 13201  002922  0100               	movlb	0	; () banked
 13202  002924  0774               	decf	i2__doprnt@prec& (0+255),f,b
 13203  002926  A0D8               	btfss	status,0,c
 13204  002928  0775               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 13205  00292A  0100               	movlb	0	; () banked
 13206  00292C  2974               	incf	i2__doprnt@prec& (0+255),w,b
 13207  00292E  E18A               	bnz	i2l8494
 13208  002930  0100               	movlb	0	; () banked
 13209  002932  2975               	incf	(i2__doprnt@prec+1)& (0+255),w,b
 13210  002934  A4D8               	btfss	status,2,c
 13211  002936  D786               	goto	i2l8494
 13212  002938                     i2l8506:
 13213  002938  C048  FFF6         	movff	i2__doprnt@f,tblptrl
 13214  00293C  C049  FFF7         	movff	i2__doprnt@f+1,tblptrh
 13215  002940  4A48               	infsnz	i2__doprnt@f,f,c
 13216  002942  2A49               	incf	i2__doprnt@f+1,f,c
 13217  002944                     	if	0	;tblptru may be non-zero
 13218  002944                     	endif
 13219  002944                     	if	0	;tblptru may be non-zero
 13220  002944                     	endif
 13221  002944  0008               	tblrd		*
 13222  002946  CFF5 F076          	movff	tablat,i2__doprnt@c
 13223  00294A  0100               	movlb	0	; () banked
 13224  00294C  5176               	movf	i2__doprnt@c& (0+255),w,b
 13225  00294E  A4D8               	btfss	status,2,c
 13226  002950  EF43  F00C         	goto	i2l8130
 13227  002954                     i2l8508:
 13228                           
 13229                           ; BSR set to: 0
 13230                           ;doprnt.c: 1540: return 0;
 13231  002954  0E00               	movlw	0
 13232  002956  6E47               	movwf	?i2__doprnt+1,c
 13233  002958  0E00               	movlw	0
 13234  00295A  6E46               	movwf	?i2__doprnt,c
 13235  00295C  0012               	return	
 13236  00295E                     __end_ofi2__doprnt:
 13237                           	opt stack 0
 13238                           tosu	equ	0xFFF
 13239                           tosh	equ	0xFFE
 13240                           tosl	equ	0xFFD
 13241                           pclatu	equ	0xFFB
 13242                           pclath	equ	0xFFA
 13243                           tblptru	equ	0xFF8
 13244                           tblptrh	equ	0xFF7
 13245                           tblptrl	equ	0xFF6
 13246                           tablat	equ	0xFF5
 13247                           prodh	equ	0xFF4
 13248                           prodl	equ	0xFF3
 13249                           intcon	equ	0xFF2
 13250                           intcon2	equ	0xFF1
 13251                           postinc0	equ	0xFEE
 13252                           fsr0h	equ	0xFEA
 13253                           fsr0l	equ	0xFE9
 13254                           wreg	equ	0xFE8
 13255                           fsr1h	equ	0xFE2
 13256                           fsr1l	equ	0xFE1
 13257                           indf2	equ	0xFDF
 13258                           postinc2	equ	0xFDE
 13259                           postdec2	equ	0xFDD
 13260                           fsr2h	equ	0xFDA
 13261                           fsr2l	equ	0xFD9
 13262                           status	equ	0xFD8
 13263                           
 13264 ;; *************** function i2_scale *****************
 13265 ;; Defined at:
 13266 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 13267 ;; Parameters:    Size  Location     Type
 13268 ;;  scl             1    wreg     char 
 13269 ;; Auto vars:     Size  Location     Type
 13270 ;;  scl             1   53[COMRAM] char 
 13271 ;; Return value:  Size  Location     Type
 13272 ;;                  3   47[COMRAM] char 
 13273 ;; Registers used:
 13274 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13275 ;; Tracked objects:
 13276 ;;		On entry : 0/0
 13277 ;;		On exit  : 0/0
 13278 ;;		Unchanged: 0/0
 13279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13280 ;;      Params:         3       0       0       0       0       0       0
 13281 ;;      Locals:         4       0       0       0       0       0       0
 13282 ;;      Temps:          0       0       0       0       0       0       0
 13283 ;;      Totals:         7       0       0       0       0       0       0
 13284 ;;Total ram usage:        7 bytes
 13285 ;; Hardware stack levels used:    1
 13286 ;; Hardware stack levels required when called:    2
 13287 ;; This function calls:
 13288 ;;		i2___awdiv
 13289 ;;		i2___awmod
 13290 ;;		i2___ftmul
 13291 ;;		i2___wmul
 13292 ;; This function is called by:
 13293 ;;		i2__doprnt
 13294 ;; This function uses a non-reentrant model
 13295 ;;
 13296                           
 13297                           	psect	text48
 13298  002E0C                     __ptext48:
 13299                           	opt stack 0
 13300  002E0C                     i2_scale:
 13301                           	opt stack 19
 13302                           
 13303                           ; BSR set to: 0
 13304                           ;incstack = 0
 13305                           ;i2scale@scl stored from wreg
 13306  002E0C  6E36               	movwf	i2scale@scl,c
 13307                           
 13308                           ;doprnt.c: 428: if(scl < 0) {
 13309  002E0E  AE36               	btfss	i2scale@scl,7,c
 13310  002E10  D0FB               	goto	i2l3968
 13311                           
 13312                           ;doprnt.c: 429: scl = -scl;
 13313  002E12  6C36               	negf	i2scale@scl,c
 13314                           
 13315                           ;doprnt.c: 430: if(scl>=110)
 13316  002E14  5036               	movf	i2scale@scl,w,c
 13317  002E16  0A80               	xorlw	128
 13318  002E18  0F12               	addlw	-238
 13319  002E1A  A0D8               	btfss	status,0,c
 13320  002E1C  D091               	goto	i2l3958
 13321                           
 13322                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 13323  002E1E  0E00               	movlw	0
 13324  002E20  6E12               	movwf	i2___wmul@multiplicand+1,c
 13325  002E22  0E03               	movlw	3
 13326  002E24  6E11               	movwf	i2___wmul@multiplicand,c
 13327  002E26  0E00               	movlw	0
 13328  002E28  6E0A               	movwf	i2___awdiv@divisor+1,c
 13329  002E2A  0E0A               	movlw	10
 13330  002E2C  6E09               	movwf	i2___awdiv@divisor,c
 13331  002E2E  0E00               	movlw	0
 13332  002E30  6E04               	movwf	i2___awmod@divisor+1,c
 13333  002E32  0E64               	movlw	100
 13334  002E34  6E03               	movwf	i2___awmod@divisor,c
 13335  002E36  5036               	movf	i2scale@scl,w,c
 13336  002E38  6E01               	movwf	i2___awmod@dividend,c
 13337  002E3A  6A02               	clrf	i2___awmod@dividend+1,c
 13338  002E3C  BE01               	btfsc	i2___awmod@dividend,7,c
 13339  002E3E  0602               	decf	i2___awmod@dividend+1,f,c
 13340  002E40  EC6A  F027         	call	i2___awmod
 13341  002E44  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 13342  002E48  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 13343  002E4C  EC31  F026         	call	i2___awdiv	;wreg free
 13344  002E50  0E09               	movlw	9
 13345  002E52  2407               	addwf	?i2___awdiv,w,c
 13346  002E54  6E0F               	movwf	i2___wmul@multiplier,c
 13347  002E56  0E00               	movlw	0
 13348  002E58  2008               	addwfc	?i2___awdiv+1,w,c
 13349  002E5A  6E10               	movwf	i2___wmul@multiplier+1,c
 13350  002E5C  ECE9  F029         	call	i2___wmul	;wreg free
 13351  002E60  0E29               	movlw	low __npowers_
 13352  002E62  240F               	addwf	?i2___wmul,w,c
 13353  002E64  6EF6               	movwf	tblptrl,c
 13354  002E66  0E06               	movlw	high __npowers_
 13355  002E68  2010               	addwfc	?i2___wmul+1,w,c
 13356  002E6A  6EF7               	movwf	tblptrh,c
 13357  002E6C                     	if	0	;There are less than 3 active tblptr bytes
 13358  002E6C                     	endif
 13359  002E6C  0009               	tblrd		*+
 13360  002E6E  CFF5 F024          	movff	tablat,i2___ftmul@f2
 13361  002E72  0009               	tblrd		*+
 13362  002E74  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 13363  002E78  000A               	tblrd		*-
 13364  002E7A  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 13365  002E7E  0E00               	movlw	0
 13366  002E80  6E0A               	movwf	i2___awdiv@divisor+1,c
 13367  002E82  0E64               	movlw	100
 13368  002E84  6E09               	movwf	i2___awdiv@divisor,c
 13369  002E86  5036               	movf	i2scale@scl,w,c
 13370  002E88  6E07               	movwf	i2___awdiv@dividend,c
 13371  002E8A  6A08               	clrf	i2___awdiv@dividend+1,c
 13372  002E8C  BE07               	btfsc	i2___awdiv@dividend,7,c
 13373  002E8E  0608               	decf	i2___awdiv@dividend+1,f,c
 13374  002E90  EC31  F026         	call	i2___awdiv	;wreg free
 13375  002E94  0E12               	movlw	18
 13376  002E96  2407               	addwf	?i2___awdiv,w,c
 13377  002E98  6E0F               	movwf	i2___wmul@multiplier,c
 13378  002E9A  0E00               	movlw	0
 13379  002E9C  2008               	addwfc	?i2___awdiv+1,w,c
 13380  002E9E  6E10               	movwf	i2___wmul@multiplier+1,c
 13381  002EA0  0E00               	movlw	0
 13382  002EA2  6E12               	movwf	i2___wmul@multiplicand+1,c
 13383  002EA4  0E03               	movlw	3
 13384  002EA6  6E11               	movwf	i2___wmul@multiplicand,c
 13385  002EA8  ECE9  F029         	call	i2___wmul	;wreg free
 13386  002EAC  0E29               	movlw	low __npowers_
 13387  002EAE  240F               	addwf	?i2___wmul,w,c
 13388  002EB0  6EF6               	movwf	tblptrl,c
 13389  002EB2  0E06               	movlw	high __npowers_
 13390  002EB4  2010               	addwfc	?i2___wmul+1,w,c
 13391  002EB6  6EF7               	movwf	tblptrh,c
 13392  002EB8                     	if	0	;There are less than 3 active tblptr bytes
 13393  002EB8                     	endif
 13394  002EB8  0009               	tblrd		*+
 13395  002EBA  CFF5 F021          	movff	tablat,i2___ftmul@f1
 13396  002EBE  0009               	tblrd		*+
 13397  002EC0  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 13398  002EC4  000A               	tblrd		*-
 13399  002EC6  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 13400  002ECA  EC18  F022         	call	i2___ftmul	;wreg free
 13401  002ECE  C021  F033         	movff	?i2___ftmul,i2_scale$1792
 13402  002ED2  C022  F034         	movff	?i2___ftmul+1,i2_scale$1792+1
 13403  002ED6  C023  F035         	movff	?i2___ftmul+2,i2_scale$1792+2
 13404                           
 13405                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 13406  002EDA  C033  F021         	movff	i2_scale$1792,i2___ftmul@f1
 13407  002EDE  C034  F022         	movff	i2_scale$1792+1,i2___ftmul@f1+1
 13408  002EE2  C035  F023         	movff	i2_scale$1792+2,i2___ftmul@f1+2
 13409  002EE6  0E00               	movlw	0
 13410  002EE8  6E12               	movwf	i2___wmul@multiplicand+1,c
 13411  002EEA  0E03               	movlw	3
 13412  002EEC  6E11               	movwf	i2___wmul@multiplicand,c
 13413  002EEE  0E00               	movlw	0
 13414  002EF0  6E04               	movwf	i2___awmod@divisor+1,c
 13415  002EF2  0E0A               	movlw	10
 13416  002EF4  6E03               	movwf	i2___awmod@divisor,c
 13417  002EF6  5036               	movf	i2scale@scl,w,c
 13418  002EF8  6E01               	movwf	i2___awmod@dividend,c
 13419  002EFA  6A02               	clrf	i2___awmod@dividend+1,c
 13420  002EFC  BE01               	btfsc	i2___awmod@dividend,7,c
 13421  002EFE  0602               	decf	i2___awmod@dividend+1,f,c
 13422  002F00  EC6A  F027         	call	i2___awmod	;wreg free
 13423  002F04  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 13424  002F08  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 13425  002F0C  ECE9  F029         	call	i2___wmul	;wreg free
 13426  002F10  0E29               	movlw	low __npowers_
 13427  002F12  240F               	addwf	?i2___wmul,w,c
 13428  002F14  6EF6               	movwf	tblptrl,c
 13429  002F16  0E06               	movlw	high __npowers_
 13430  002F18  2010               	addwfc	?i2___wmul+1,w,c
 13431  002F1A  6EF7               	movwf	tblptrh,c
 13432  002F1C                     	if	0	;There are less than 3 active tblptr bytes
 13433  002F1C                     	endif
 13434  002F1C  0009               	tblrd		*+
 13435  002F1E  CFF5 F024          	movff	tablat,i2___ftmul@f2
 13436  002F22  0009               	tblrd		*+
 13437  002F24  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 13438  002F28  000A               	tblrd		*-
 13439  002F2A  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 13440  002F2E  EC18  F022         	call	i2___ftmul	;wreg free
 13441  002F32  C021  F030         	movff	?i2___ftmul,?i2_scale
 13442  002F36  C022  F031         	movff	?i2___ftmul+1,?i2_scale+1
 13443  002F3A  C023  F032         	movff	?i2___ftmul+2,?i2_scale+2
 13444  002F3E  0012               	return	
 13445  002F40                     i2l3958:
 13446                           
 13447                           ;doprnt.c: 432: else if(scl > 10)
 13448  002F40  5036               	movf	i2scale@scl,w,c
 13449  002F42  0A80               	xorlw	128
 13450  002F44  0F75               	addlw	-139
 13451  002F46  A0D8               	btfss	status,0,c
 13452  002F48  D04D               	goto	i2l3964
 13453                           
 13454                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 13455  002F4A  0E00               	movlw	0
 13456  002F4C  6E0A               	movwf	i2___awdiv@divisor+1,c
 13457  002F4E  0E0A               	movlw	10
 13458  002F50  6E09               	movwf	i2___awdiv@divisor,c
 13459  002F52  5036               	movf	i2scale@scl,w,c
 13460  002F54  6E07               	movwf	i2___awdiv@dividend,c
 13461  002F56  6A08               	clrf	i2___awdiv@dividend+1,c
 13462  002F58  BE07               	btfsc	i2___awdiv@dividend,7,c
 13463  002F5A  0608               	decf	i2___awdiv@dividend+1,f,c
 13464  002F5C  EC31  F026         	call	i2___awdiv	;wreg free
 13465  002F60  0E09               	movlw	9
 13466  002F62  2407               	addwf	?i2___awdiv,w,c
 13467  002F64  6E0F               	movwf	i2___wmul@multiplier,c
 13468  002F66  0E00               	movlw	0
 13469  002F68  2008               	addwfc	?i2___awdiv+1,w,c
 13470  002F6A  6E10               	movwf	i2___wmul@multiplier+1,c
 13471  002F6C  0E00               	movlw	0
 13472  002F6E  6E12               	movwf	i2___wmul@multiplicand+1,c
 13473  002F70  0E03               	movlw	3
 13474  002F72  6E11               	movwf	i2___wmul@multiplicand,c
 13475  002F74  ECE9  F029         	call	i2___wmul	;wreg free
 13476  002F78  0E29               	movlw	low __npowers_
 13477  002F7A  240F               	addwf	?i2___wmul,w,c
 13478  002F7C  6EF6               	movwf	tblptrl,c
 13479  002F7E  0E06               	movlw	high __npowers_
 13480  002F80  2010               	addwfc	?i2___wmul+1,w,c
 13481  002F82  6EF7               	movwf	tblptrh,c
 13482  002F84                     	if	0	;There are less than 3 active tblptr bytes
 13483  002F84                     	endif
 13484  002F84  0009               	tblrd		*+
 13485  002F86  CFF5 F021          	movff	tablat,i2___ftmul@f1
 13486  002F8A  0009               	tblrd		*+
 13487  002F8C  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 13488  002F90  000A               	tblrd		*-
 13489  002F92  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 13490  002F96  0E00               	movlw	0
 13491  002F98  6E12               	movwf	i2___wmul@multiplicand+1,c
 13492  002F9A  0E03               	movlw	3
 13493  002F9C  6E11               	movwf	i2___wmul@multiplicand,c
 13494  002F9E  0E00               	movlw	0
 13495  002FA0  6E04               	movwf	i2___awmod@divisor+1,c
 13496  002FA2  0E0A               	movlw	10
 13497  002FA4  6E03               	movwf	i2___awmod@divisor,c
 13498  002FA6  5036               	movf	i2scale@scl,w,c
 13499  002FA8  6E01               	movwf	i2___awmod@dividend,c
 13500  002FAA  6A02               	clrf	i2___awmod@dividend+1,c
 13501  002FAC  BE01               	btfsc	i2___awmod@dividend,7,c
 13502  002FAE  0602               	decf	i2___awmod@dividend+1,f,c
 13503  002FB0  EC6A  F027         	call	i2___awmod	;wreg free
 13504  002FB4  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 13505  002FB8  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 13506  002FBC  ECE9  F029         	call	i2___wmul	;wreg free
 13507  002FC0  0E29               	movlw	low __npowers_
 13508  002FC2  240F               	addwf	?i2___wmul,w,c
 13509  002FC4  6EF6               	movwf	tblptrl,c
 13510  002FC6  0E06               	movlw	high __npowers_
 13511  002FC8  2010               	addwfc	?i2___wmul+1,w,c
 13512  002FCA  6EF7               	movwf	tblptrh,c
 13513  002FCC                     	if	0	;There are less than 3 active tblptr bytes
 13514  002FCC                     	endif
 13515  002FCC  0009               	tblrd		*+
 13516  002FCE  CFF5 F024          	movff	tablat,i2___ftmul@f2
 13517  002FD2  0009               	tblrd		*+
 13518  002FD4  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 13519  002FD8  000A               	tblrd		*-
 13520  002FDA  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 13521  002FDE  EC18  F022         	call	i2___ftmul	;wreg free
 13522  002FE2  D7A7               	goto	L8
 13523  002FE4                     i2l3964:
 13524                           
 13525                           ;doprnt.c: 434: return _npowers_[scl];
 13526  002FE4  5036               	movf	i2scale@scl,w,c
 13527  002FE6  0D03               	mullw	3
 13528  002FE8  0E29               	movlw	low __npowers_
 13529  002FEA  24F3               	addwf	prodl,w,c
 13530  002FEC  6EF6               	movwf	tblptrl,c
 13531  002FEE  0E06               	movlw	high __npowers_
 13532  002FF0  20F4               	addwfc	prodh,w,c
 13533  002FF2  6EF7               	movwf	tblptrh,c
 13534  002FF4                     	if	0	;There are less than 3 active tblptr bytes
 13535  002FF4                     	endif
 13536  002FF4  0009               	tblrd		*+
 13537  002FF6  CFF5 F030          	movff	tablat,?i2_scale
 13538  002FFA  0009               	tblrd		*+
 13539  002FFC  CFF5 F031          	movff	tablat,?i2_scale+1
 13540  003000  000A               	tblrd		*-
 13541  003002  CFF5 F032          	movff	tablat,?i2_scale+2
 13542  003006  0012               	return	
 13543  003008                     i2l3968:
 13544                           
 13545                           ;doprnt.c: 435: }
 13546                           ;doprnt.c: 436: if(scl>=110)
 13547  003008  5036               	movf	i2scale@scl,w,c
 13548  00300A  0A80               	xorlw	128
 13549  00300C  0F12               	addlw	-238
 13550  00300E  A0D8               	btfss	status,0,c
 13551  003010  D091               	goto	i2l3976
 13552                           
 13553                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 13554  003012  0E00               	movlw	0
 13555  003014  6E12               	movwf	i2___wmul@multiplicand+1,c
 13556  003016  0E03               	movlw	3
 13557  003018  6E11               	movwf	i2___wmul@multiplicand,c
 13558  00301A  0E00               	movlw	0
 13559  00301C  6E0A               	movwf	i2___awdiv@divisor+1,c
 13560  00301E  0E0A               	movlw	10
 13561  003020  6E09               	movwf	i2___awdiv@divisor,c
 13562  003022  0E00               	movlw	0
 13563  003024  6E04               	movwf	i2___awmod@divisor+1,c
 13564  003026  0E64               	movlw	100
 13565  003028  6E03               	movwf	i2___awmod@divisor,c
 13566  00302A  5036               	movf	i2scale@scl,w,c
 13567  00302C  6E01               	movwf	i2___awmod@dividend,c
 13568  00302E  6A02               	clrf	i2___awmod@dividend+1,c
 13569  003030  BE01               	btfsc	i2___awmod@dividend,7,c
 13570  003032  0602               	decf	i2___awmod@dividend+1,f,c
 13571  003034  EC6A  F027         	call	i2___awmod	;wreg free
 13572  003038  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 13573  00303C  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 13574  003040  EC31  F026         	call	i2___awdiv	;wreg free
 13575  003044  0E09               	movlw	9
 13576  003046  2407               	addwf	?i2___awdiv,w,c
 13577  003048  6E0F               	movwf	i2___wmul@multiplier,c
 13578  00304A  0E00               	movlw	0
 13579  00304C  2008               	addwfc	?i2___awdiv+1,w,c
 13580  00304E  6E10               	movwf	i2___wmul@multiplier+1,c
 13581  003050  ECE9  F029         	call	i2___wmul	;wreg free
 13582  003054  0E50               	movlw	low __powers_
 13583  003056  240F               	addwf	?i2___wmul,w,c
 13584  003058  6EF6               	movwf	tblptrl,c
 13585  00305A  0E06               	movlw	high __powers_
 13586  00305C  2010               	addwfc	?i2___wmul+1,w,c
 13587  00305E  6EF7               	movwf	tblptrh,c
 13588  003060                     	if	0	;There are less than 3 active tblptr bytes
 13589  003060                     	endif
 13590  003060  0009               	tblrd		*+
 13591  003062  CFF5 F024          	movff	tablat,i2___ftmul@f2
 13592  003066  0009               	tblrd		*+
 13593  003068  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 13594  00306C  000A               	tblrd		*-
 13595  00306E  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 13596  003072  0E00               	movlw	0
 13597  003074  6E0A               	movwf	i2___awdiv@divisor+1,c
 13598  003076  0E64               	movlw	100
 13599  003078  6E09               	movwf	i2___awdiv@divisor,c
 13600  00307A  5036               	movf	i2scale@scl,w,c
 13601  00307C  6E07               	movwf	i2___awdiv@dividend,c
 13602  00307E  6A08               	clrf	i2___awdiv@dividend+1,c
 13603  003080  BE07               	btfsc	i2___awdiv@dividend,7,c
 13604  003082  0608               	decf	i2___awdiv@dividend+1,f,c
 13605  003084  EC31  F026         	call	i2___awdiv	;wreg free
 13606  003088  0E12               	movlw	18
 13607  00308A  2407               	addwf	?i2___awdiv,w,c
 13608  00308C  6E0F               	movwf	i2___wmul@multiplier,c
 13609  00308E  0E00               	movlw	0
 13610  003090  2008               	addwfc	?i2___awdiv+1,w,c
 13611  003092  6E10               	movwf	i2___wmul@multiplier+1,c
 13612  003094  0E00               	movlw	0
 13613  003096  6E12               	movwf	i2___wmul@multiplicand+1,c
 13614  003098  0E03               	movlw	3
 13615  00309A  6E11               	movwf	i2___wmul@multiplicand,c
 13616  00309C  ECE9  F029         	call	i2___wmul	;wreg free
 13617  0030A0  0E50               	movlw	low __powers_
 13618  0030A2  240F               	addwf	?i2___wmul,w,c
 13619  0030A4  6EF6               	movwf	tblptrl,c
 13620  0030A6  0E06               	movlw	high __powers_
 13621  0030A8  2010               	addwfc	?i2___wmul+1,w,c
 13622  0030AA  6EF7               	movwf	tblptrh,c
 13623  0030AC                     	if	0	;There are less than 3 active tblptr bytes
 13624  0030AC                     	endif
 13625  0030AC  0009               	tblrd		*+
 13626  0030AE  CFF5 F021          	movff	tablat,i2___ftmul@f1
 13627  0030B2  0009               	tblrd		*+
 13628  0030B4  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 13629  0030B8  000A               	tblrd		*-
 13630  0030BA  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 13631  0030BE  EC18  F022         	call	i2___ftmul	;wreg free
 13632  0030C2  C021  F033         	movff	?i2___ftmul,i2_scale$1792
 13633  0030C6  C022  F034         	movff	?i2___ftmul+1,i2_scale$1792+1
 13634  0030CA  C023  F035         	movff	?i2___ftmul+2,i2_scale$1792+2
 13635                           
 13636                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 13637  0030CE  C033  F021         	movff	i2_scale$1792,i2___ftmul@f1
 13638  0030D2  C034  F022         	movff	i2_scale$1792+1,i2___ftmul@f1+1
 13639  0030D6  C035  F023         	movff	i2_scale$1792+2,i2___ftmul@f1+2
 13640  0030DA  0E00               	movlw	0
 13641  0030DC  6E12               	movwf	i2___wmul@multiplicand+1,c
 13642  0030DE  0E03               	movlw	3
 13643  0030E0  6E11               	movwf	i2___wmul@multiplicand,c
 13644  0030E2  0E00               	movlw	0
 13645  0030E4  6E04               	movwf	i2___awmod@divisor+1,c
 13646  0030E6  0E0A               	movlw	10
 13647  0030E8  6E03               	movwf	i2___awmod@divisor,c
 13648  0030EA  5036               	movf	i2scale@scl,w,c
 13649  0030EC  6E01               	movwf	i2___awmod@dividend,c
 13650  0030EE  6A02               	clrf	i2___awmod@dividend+1,c
 13651  0030F0  BE01               	btfsc	i2___awmod@dividend,7,c
 13652  0030F2  0602               	decf	i2___awmod@dividend+1,f,c
 13653  0030F4  EC6A  F027         	call	i2___awmod	;wreg free
 13654  0030F8  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 13655  0030FC  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 13656  003100  ECE9  F029         	call	i2___wmul	;wreg free
 13657  003104  0E50               	movlw	low __powers_
 13658  003106  240F               	addwf	?i2___wmul,w,c
 13659  003108  6EF6               	movwf	tblptrl,c
 13660  00310A  0E06               	movlw	high __powers_
 13661  00310C  2010               	addwfc	?i2___wmul+1,w,c
 13662  00310E  6EF7               	movwf	tblptrh,c
 13663  003110                     	if	0	;There are less than 3 active tblptr bytes
 13664  003110                     	endif
 13665  003110  0009               	tblrd		*+
 13666  003112  CFF5 F024          	movff	tablat,i2___ftmul@f2
 13667  003116  0009               	tblrd		*+
 13668  003118  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 13669  00311C  000A               	tblrd		*-
 13670  00311E  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 13671  003122  EC18  F022         	call	i2___ftmul	;wreg free
 13672  003126  C021  F030         	movff	?i2___ftmul,?i2_scale
 13673  00312A  C022  F031         	movff	?i2___ftmul+1,?i2_scale+1
 13674  00312E  C023  F032         	movff	?i2___ftmul+2,?i2_scale+2
 13675  003132  0012               	return	
 13676  003134                     i2l3976:
 13677                           
 13678                           ;doprnt.c: 438: else if(scl > 10)
 13679  003134  5036               	movf	i2scale@scl,w,c
 13680  003136  0A80               	xorlw	128
 13681  003138  0F75               	addlw	-139
 13682  00313A  A0D8               	btfss	status,0,c
 13683  00313C  D04D               	goto	i2l3982
 13684                           
 13685                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 13686  00313E  0E00               	movlw	0
 13687  003140  6E0A               	movwf	i2___awdiv@divisor+1,c
 13688  003142  0E0A               	movlw	10
 13689  003144  6E09               	movwf	i2___awdiv@divisor,c
 13690  003146  5036               	movf	i2scale@scl,w,c
 13691  003148  6E07               	movwf	i2___awdiv@dividend,c
 13692  00314A  6A08               	clrf	i2___awdiv@dividend+1,c
 13693  00314C  BE07               	btfsc	i2___awdiv@dividend,7,c
 13694  00314E  0608               	decf	i2___awdiv@dividend+1,f,c
 13695  003150  EC31  F026         	call	i2___awdiv	;wreg free
 13696  003154  0E09               	movlw	9
 13697  003156  2407               	addwf	?i2___awdiv,w,c
 13698  003158  6E0F               	movwf	i2___wmul@multiplier,c
 13699  00315A  0E00               	movlw	0
 13700  00315C  2008               	addwfc	?i2___awdiv+1,w,c
 13701  00315E  6E10               	movwf	i2___wmul@multiplier+1,c
 13702  003160  0E00               	movlw	0
 13703  003162  6E12               	movwf	i2___wmul@multiplicand+1,c
 13704  003164  0E03               	movlw	3
 13705  003166  6E11               	movwf	i2___wmul@multiplicand,c
 13706  003168  ECE9  F029         	call	i2___wmul	;wreg free
 13707  00316C  0E50               	movlw	low __powers_
 13708  00316E  240F               	addwf	?i2___wmul,w,c
 13709  003170  6EF6               	movwf	tblptrl,c
 13710  003172  0E06               	movlw	high __powers_
 13711  003174  2010               	addwfc	?i2___wmul+1,w,c
 13712  003176  6EF7               	movwf	tblptrh,c
 13713  003178                     	if	0	;There are less than 3 active tblptr bytes
 13714  003178                     	endif
 13715  003178  0009               	tblrd		*+
 13716  00317A  CFF5 F021          	movff	tablat,i2___ftmul@f1
 13717  00317E  0009               	tblrd		*+
 13718  003180  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 13719  003184  000A               	tblrd		*-
 13720  003186  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 13721  00318A  0E00               	movlw	0
 13722  00318C  6E12               	movwf	i2___wmul@multiplicand+1,c
 13723  00318E  0E03               	movlw	3
 13724  003190  6E11               	movwf	i2___wmul@multiplicand,c
 13725  003192  0E00               	movlw	0
 13726  003194  6E04               	movwf	i2___awmod@divisor+1,c
 13727  003196  0E0A               	movlw	10
 13728  003198  6E03               	movwf	i2___awmod@divisor,c
 13729  00319A  5036               	movf	i2scale@scl,w,c
 13730  00319C  6E01               	movwf	i2___awmod@dividend,c
 13731  00319E  6A02               	clrf	i2___awmod@dividend+1,c
 13732  0031A0  BE01               	btfsc	i2___awmod@dividend,7,c
 13733  0031A2  0602               	decf	i2___awmod@dividend+1,f,c
 13734  0031A4  EC6A  F027         	call	i2___awmod	;wreg free
 13735  0031A8  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 13736  0031AC  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 13737  0031B0  ECE9  F029         	call	i2___wmul	;wreg free
 13738  0031B4  0E50               	movlw	low __powers_
 13739  0031B6  240F               	addwf	?i2___wmul,w,c
 13740  0031B8  6EF6               	movwf	tblptrl,c
 13741  0031BA  0E06               	movlw	high __powers_
 13742  0031BC  2010               	addwfc	?i2___wmul+1,w,c
 13743  0031BE  6EF7               	movwf	tblptrh,c
 13744  0031C0                     	if	0	;There are less than 3 active tblptr bytes
 13745  0031C0                     	endif
 13746  0031C0  0009               	tblrd		*+
 13747  0031C2  CFF5 F024          	movff	tablat,i2___ftmul@f2
 13748  0031C6  0009               	tblrd		*+
 13749  0031C8  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 13750  0031CC  000A               	tblrd		*-
 13751  0031CE  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 13752  0031D2  EC18  F022         	call	i2___ftmul	;wreg free
 13753  0031D6  D7A7               	goto	L9
 13754  0031D8                     i2l3982:
 13755                           
 13756                           ;doprnt.c: 440: return _powers_[scl];
 13757  0031D8  5036               	movf	i2scale@scl,w,c
 13758  0031DA  0D03               	mullw	3
 13759  0031DC  0E50               	movlw	low __powers_
 13760  0031DE  24F3               	addwf	prodl,w,c
 13761  0031E0  6EF6               	movwf	tblptrl,c
 13762  0031E2  0E06               	movlw	high __powers_
 13763  0031E4  20F4               	addwfc	prodh,w,c
 13764  0031E6  6EF7               	movwf	tblptrh,c
 13765  0031E8                     	if	0	;There are less than 3 active tblptr bytes
 13766  0031E8                     	endif
 13767  0031E8  0009               	tblrd		*+
 13768  0031EA  CFF5 F030          	movff	tablat,?i2_scale
 13769  0031EE  0009               	tblrd		*+
 13770  0031F0  CFF5 F031          	movff	tablat,?i2_scale+1
 13771  0031F4  000A               	tblrd		*-
 13772  0031F6  CFF5 F032          	movff	tablat,?i2_scale+2
 13773  0031FA  0012               	return	
 13774  0031FC                     __end_ofi2_scale:
 13775                           	opt stack 0
 13776                           tosu	equ	0xFFF
 13777                           tosh	equ	0xFFE
 13778                           tosl	equ	0xFFD
 13779                           pclatu	equ	0xFFB
 13780                           pclath	equ	0xFFA
 13781                           tblptru	equ	0xFF8
 13782                           tblptrh	equ	0xFF7
 13783                           tblptrl	equ	0xFF6
 13784                           tablat	equ	0xFF5
 13785                           prodh	equ	0xFF4
 13786                           prodl	equ	0xFF3
 13787                           intcon	equ	0xFF2
 13788                           intcon2	equ	0xFF1
 13789                           postinc0	equ	0xFEE
 13790                           fsr0h	equ	0xFEA
 13791                           fsr0l	equ	0xFE9
 13792                           wreg	equ	0xFE8
 13793                           fsr1h	equ	0xFE2
 13794                           fsr1l	equ	0xFE1
 13795                           indf2	equ	0xFDF
 13796                           postinc2	equ	0xFDE
 13797                           postdec2	equ	0xFDD
 13798                           fsr2h	equ	0xFDA
 13799                           fsr2l	equ	0xFD9
 13800                           status	equ	0xFD8
 13801                           
 13802 ;; *************** function i2_putch *****************
 13803 ;; Defined at:
 13804 ;;		line 111 in file "mcc_generated_files/eusart1.c"
 13805 ;; Parameters:    Size  Location     Type
 13806 ;;  txData          1    wreg     unsigned char 
 13807 ;; Auto vars:     Size  Location     Type
 13808 ;;  txData          1    1[COMRAM] unsigned char 
 13809 ;; Return value:  Size  Location     Type
 13810 ;;                  1    wreg      void 
 13811 ;; Registers used:
 13812 ;;		wreg, status,2, cstack
 13813 ;; Tracked objects:
 13814 ;;		On entry : 0/0
 13815 ;;		On exit  : 0/0
 13816 ;;		Unchanged: 0/0
 13817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13818 ;;      Params:         0       0       0       0       0       0       0
 13819 ;;      Locals:         1       0       0       0       0       0       0
 13820 ;;      Temps:          0       0       0       0       0       0       0
 13821 ;;      Totals:         1       0       0       0       0       0       0
 13822 ;;Total ram usage:        1 bytes
 13823 ;; Hardware stack levels used:    1
 13824 ;; Hardware stack levels required when called:    1
 13825 ;; This function calls:
 13826 ;;		i2_EUSART1_Write
 13827 ;; This function is called by:
 13828 ;;		_printf
 13829 ;; This function uses a non-reentrant model
 13830 ;;
 13831                           
 13832                           	psect	text49
 13833  005564                     __ptext49:
 13834                           	opt stack 0
 13835  005564                     i2_putch:
 13836                           	opt stack 20
 13837                           
 13838                           ;incstack = 0
 13839                           ;i2putch@txData stored from wreg
 13840  005564  6E02               	movwf	i2putch@txData,c
 13841                           
 13842                           ;eusart1.c: 113: EUSART1_Write(txData);
 13843  005566  5002               	movf	i2putch@txData,w,c
 13844  005568  EC9C  F02A         	call	i2_EUSART1_Write
 13845  00556C  0012               	return		;funcret
 13846  00556E                     __end_ofi2_putch:
 13847                           	opt stack 0
 13848                           tosu	equ	0xFFF
 13849                           tosh	equ	0xFFE
 13850                           tosl	equ	0xFFD
 13851                           pclatu	equ	0xFFB
 13852                           pclath	equ	0xFFA
 13853                           tblptru	equ	0xFF8
 13854                           tblptrh	equ	0xFF7
 13855                           tblptrl	equ	0xFF6
 13856                           tablat	equ	0xFF5
 13857                           prodh	equ	0xFF4
 13858                           prodl	equ	0xFF3
 13859                           intcon	equ	0xFF2
 13860                           intcon2	equ	0xFF1
 13861                           postinc0	equ	0xFEE
 13862                           fsr0h	equ	0xFEA
 13863                           fsr0l	equ	0xFE9
 13864                           wreg	equ	0xFE8
 13865                           fsr1h	equ	0xFE2
 13866                           fsr1l	equ	0xFE1
 13867                           indf2	equ	0xFDF
 13868                           postinc2	equ	0xFDE
 13869                           postdec2	equ	0xFDD
 13870                           fsr2h	equ	0xFDA
 13871                           fsr2l	equ	0xFD9
 13872                           status	equ	0xFD8
 13873                           
 13874 ;; *************** function i2_EUSART1_Write *****************
 13875 ;; Defined at:
 13876 ;;		line 97 in file "mcc_generated_files/eusart1.c"
 13877 ;; Parameters:    Size  Location     Type
 13878 ;;  txData          1    wreg     unsigned char 
 13879 ;; Auto vars:     Size  Location     Type
 13880 ;;  txData          1    0[COMRAM] unsigned char 
 13881 ;; Return value:  Size  Location     Type
 13882 ;;                  1    wreg      void 
 13883 ;; Registers used:
 13884 ;;		wreg
 13885 ;; Tracked objects:
 13886 ;;		On entry : 0/0
 13887 ;;		On exit  : 0/0
 13888 ;;		Unchanged: 0/0
 13889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13890 ;;      Params:         0       0       0       0       0       0       0
 13891 ;;      Locals:         1       0       0       0       0       0       0
 13892 ;;      Temps:          0       0       0       0       0       0       0
 13893 ;;      Totals:         1       0       0       0       0       0       0
 13894 ;;Total ram usage:        1 bytes
 13895 ;; Hardware stack levels used:    1
 13896 ;; This function calls:
 13897 ;;		Nothing
 13898 ;; This function is called by:
 13899 ;;		i2_putch
 13900 ;; This function uses a non-reentrant model
 13901 ;;
 13902                           
 13903                           	psect	text50
 13904  005538                     __ptext50:
 13905                           	opt stack 0
 13906  005538                     i2_EUSART1_Write:
 13907                           	opt stack 20
 13908                           
 13909                           ;incstack = 0
 13910                           ;i2EUSART1_Write@txData stored from wreg
 13911  005538  6E01               	movwf	i2EUSART1_Write@txData,c
 13912  00553A                     i2l207:
 13913  00553A  A89E               	btfss	3998,4,c	;volatile
 13914  00553C  D7FE               	goto	i2l207
 13915                           
 13916                           ;eusart1.c: 101: }
 13917                           ;eusart1.c: 103: TXREG1 = txData;
 13918  00553E  C001  FFAD         	movff	i2EUSART1_Write@txData,4013	;volatile
 13919  005542  0012               	return		;funcret
 13920  005544                     __end_ofi2_EUSART1_Write:
 13921                           	opt stack 0
 13922                           tosu	equ	0xFFF
 13923                           tosh	equ	0xFFE
 13924                           tosl	equ	0xFFD
 13925                           pclatu	equ	0xFFB
 13926                           pclath	equ	0xFFA
 13927                           tblptru	equ	0xFF8
 13928                           tblptrh	equ	0xFF7
 13929                           tblptrl	equ	0xFF6
 13930                           tablat	equ	0xFF5
 13931                           prodh	equ	0xFF4
 13932                           prodl	equ	0xFF3
 13933                           intcon	equ	0xFF2
 13934                           intcon2	equ	0xFF1
 13935                           postinc0	equ	0xFEE
 13936                           fsr0h	equ	0xFEA
 13937                           fsr0l	equ	0xFE9
 13938                           wreg	equ	0xFE8
 13939                           fsr1h	equ	0xFE2
 13940                           fsr1l	equ	0xFE1
 13941                           indf2	equ	0xFDF
 13942                           postinc2	equ	0xFDE
 13943                           postdec2	equ	0xFDD
 13944                           fsr2h	equ	0xFDA
 13945                           fsr2l	equ	0xFD9
 13946                           status	equ	0xFD8
 13947                           
 13948 ;; *************** function i2_isdigit *****************
 13949 ;; Defined at:
 13950 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
 13951 ;; Parameters:    Size  Location     Type
 13952 ;;  c               1    wreg     unsigned char 
 13953 ;; Auto vars:     Size  Location     Type
 13954 ;;  c               1    2[COMRAM] unsigned char 
 13955 ;; Return value:  Size  Location     Type
 13956 ;;		None               void
 13957 ;; Registers used:
 13958 ;;		wreg, status,2, status,0
 13959 ;; Tracked objects:
 13960 ;;		On entry : 0/0
 13961 ;;		On exit  : 0/0
 13962 ;;		Unchanged: 0/0
 13963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13964 ;;      Params:         0       0       0       0       0       0       0
 13965 ;;      Locals:         2       0       0       0       0       0       0
 13966 ;;      Temps:          1       0       0       0       0       0       0
 13967 ;;      Totals:         3       0       0       0       0       0       0
 13968 ;;Total ram usage:        3 bytes
 13969 ;; Hardware stack levels used:    1
 13970 ;; This function calls:
 13971 ;;		Nothing
 13972 ;; This function is called by:
 13973 ;;		i2__doprnt
 13974 ;; This function uses a non-reentrant model
 13975 ;;
 13976                           
 13977                           	psect	text51
 13978  00545E                     __ptext51:
 13979                           	opt stack 0
 13980  00545E                     i2_isdigit:
 13981                           	opt stack 21
 13982                           
 13983                           ;incstack = 0
 13984                           ;i2isdigit@c stored from wreg
 13985  00545E  6E03               	movwf	i2isdigit@c,c
 13986  005460  0E00               	movlw	0
 13987  005462  6E02               	movwf	i2_isdigit$1164,c
 13988  005464  0E3A               	movlw	58
 13989  005466  6003               	cpfslt	i2isdigit@c,c
 13990  005468  D005               	goto	i2l4186
 13991  00546A  0E2F               	movlw	47
 13992  00546C  6403               	cpfsgt	i2isdigit@c,c
 13993  00546E  D002               	goto	i2l4186
 13994  005470  0E01               	movlw	1
 13995  005472  6E02               	movwf	i2_isdigit$1164,c
 13996  005474                     i2l4186:
 13997  005474  C002  F001         	movff	i2_isdigit$1164,??i2_isdigit
 13998  005478  3001               	rrcf	??i2_isdigit,w,c
 13999  00547A  0012               	return	
 14000  00547C                     __end_ofi2_isdigit:
 14001                           	opt stack 0
 14002                           tosu	equ	0xFFF
 14003                           tosh	equ	0xFFE
 14004                           tosl	equ	0xFFD
 14005                           pclatu	equ	0xFFB
 14006                           pclath	equ	0xFFA
 14007                           tblptru	equ	0xFF8
 14008                           tblptrh	equ	0xFF7
 14009                           tblptrl	equ	0xFF6
 14010                           tablat	equ	0xFF5
 14011                           prodh	equ	0xFF4
 14012                           prodl	equ	0xFF3
 14013                           intcon	equ	0xFF2
 14014                           intcon2	equ	0xFF1
 14015                           postinc0	equ	0xFEE
 14016                           fsr0h	equ	0xFEA
 14017                           fsr0l	equ	0xFE9
 14018                           wreg	equ	0xFE8
 14019                           fsr1h	equ	0xFE2
 14020                           fsr1l	equ	0xFE1
 14021                           indf2	equ	0xFDF
 14022                           postinc2	equ	0xFDE
 14023                           postdec2	equ	0xFDD
 14024                           fsr2h	equ	0xFDA
 14025                           fsr2l	equ	0xFD9
 14026                           status	equ	0xFD8
 14027                           
 14028 ;; *************** function i2_fround *****************
 14029 ;; Defined at:
 14030 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 14031 ;; Parameters:    Size  Location     Type
 14032 ;;  prec            1    wreg     unsigned char 
 14033 ;; Auto vars:     Size  Location     Type
 14034 ;;  prec            1   56[COMRAM] unsigned char 
 14035 ;; Return value:  Size  Location     Type
 14036 ;;                  3   47[COMRAM] unsigned char 
 14037 ;; Registers used:
 14038 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14039 ;; Tracked objects:
 14040 ;;		On entry : 0/0
 14041 ;;		On exit  : 0/0
 14042 ;;		Unchanged: 0/0
 14043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14044 ;;      Params:         3       0       0       0       0       0       0
 14045 ;;      Locals:         7       0       0       0       0       0       0
 14046 ;;      Temps:          0       0       0       0       0       0       0
 14047 ;;      Totals:        10       0       0       0       0       0       0
 14048 ;;Total ram usage:       10 bytes
 14049 ;; Hardware stack levels used:    1
 14050 ;; Hardware stack levels required when called:    2
 14051 ;; This function calls:
 14052 ;;		i2___awdiv
 14053 ;;		i2___awmod
 14054 ;;		i2___ftmul
 14055 ;;		i2___wmul
 14056 ;; This function is called by:
 14057 ;;		i2__doprnt
 14058 ;; This function uses a non-reentrant model
 14059 ;;
 14060                           
 14061                           	psect	text52
 14062  003710                     __ptext52:
 14063                           	opt stack 0
 14064  003710                     i2_fround:
 14065                           	opt stack 19
 14066                           
 14067                           ;incstack = 0
 14068                           ;i2fround@prec stored from wreg
 14069  003710  6E39               	movwf	i2fround@prec,c
 14070                           
 14071                           ;doprnt.c: 413: if(prec>=110)
 14072  003712  0E6D               	movlw	109
 14073  003714  6439               	cpfsgt	i2fround@prec,c
 14074  003716  D09F               	goto	i2l3936
 14075                           
 14076                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 14077  003718  0E00               	movlw	0
 14078  00371A  6E12               	movwf	i2___wmul@multiplicand+1,c
 14079  00371C  0E03               	movlw	3
 14080  00371E  6E11               	movwf	i2___wmul@multiplicand,c
 14081  003720  0E00               	movlw	0
 14082  003722  6E0A               	movwf	i2___awdiv@divisor+1,c
 14083  003724  0E0A               	movlw	10
 14084  003726  6E09               	movwf	i2___awdiv@divisor,c
 14085  003728  0E00               	movlw	0
 14086  00372A  6E04               	movwf	i2___awmod@divisor+1,c
 14087  00372C  0E64               	movlw	100
 14088  00372E  6E03               	movwf	i2___awmod@divisor,c
 14089  003730  C039  F001         	movff	i2fround@prec,i2___awmod@dividend
 14090  003734  6A02               	clrf	i2___awmod@dividend+1,c
 14091  003736  EC6A  F027         	call	i2___awmod	;wreg free
 14092  00373A  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 14093  00373E  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 14094  003742  EC31  F026         	call	i2___awdiv	;wreg free
 14095  003746  0E09               	movlw	9
 14096  003748  2407               	addwf	?i2___awdiv,w,c
 14097  00374A  6E0F               	movwf	i2___wmul@multiplier,c
 14098  00374C  0E00               	movlw	0
 14099  00374E  2008               	addwfc	?i2___awdiv+1,w,c
 14100  003750  6E10               	movwf	i2___wmul@multiplier+1,c
 14101  003752  ECE9  F029         	call	i2___wmul	;wreg free
 14102  003756  0E29               	movlw	low __npowers_
 14103  003758  240F               	addwf	?i2___wmul,w,c
 14104  00375A  6EF6               	movwf	tblptrl,c
 14105  00375C  0E06               	movlw	high __npowers_
 14106  00375E  2010               	addwfc	?i2___wmul+1,w,c
 14107  003760  6EF7               	movwf	tblptrh,c
 14108  003762                     	if	0	;There are less than 3 active tblptr bytes
 14109  003762                     	endif
 14110  003762  0009               	tblrd		*+
 14111  003764  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14112  003768  0009               	tblrd		*+
 14113  00376A  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14114  00376E  000A               	tblrd		*-
 14115  003770  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14116  003774  0E00               	movlw	0
 14117  003776  6E0A               	movwf	i2___awdiv@divisor+1,c
 14118  003778  0E64               	movlw	100
 14119  00377A  6E09               	movwf	i2___awdiv@divisor,c
 14120  00377C  C039  F007         	movff	i2fround@prec,i2___awdiv@dividend
 14121  003780  6A08               	clrf	i2___awdiv@dividend+1,c
 14122  003782  EC31  F026         	call	i2___awdiv	;wreg free
 14123  003786  0E12               	movlw	18
 14124  003788  2407               	addwf	?i2___awdiv,w,c
 14125  00378A  6E0F               	movwf	i2___wmul@multiplier,c
 14126  00378C  0E00               	movlw	0
 14127  00378E  2008               	addwfc	?i2___awdiv+1,w,c
 14128  003790  6E10               	movwf	i2___wmul@multiplier+1,c
 14129  003792  0E00               	movlw	0
 14130  003794  6E12               	movwf	i2___wmul@multiplicand+1,c
 14131  003796  0E03               	movlw	3
 14132  003798  6E11               	movwf	i2___wmul@multiplicand,c
 14133  00379A  ECE9  F029         	call	i2___wmul	;wreg free
 14134  00379E  0E29               	movlw	low __npowers_
 14135  0037A0  240F               	addwf	?i2___wmul,w,c
 14136  0037A2  6EF6               	movwf	tblptrl,c
 14137  0037A4  0E06               	movlw	high __npowers_
 14138  0037A6  2010               	addwfc	?i2___wmul+1,w,c
 14139  0037A8  6EF7               	movwf	tblptrh,c
 14140  0037AA                     	if	0	;There are less than 3 active tblptr bytes
 14141  0037AA                     	endif
 14142  0037AA  0009               	tblrd		*+
 14143  0037AC  CFF5 F021          	movff	tablat,i2___ftmul@f1
 14144  0037B0  0009               	tblrd		*+
 14145  0037B2  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 14146  0037B6  000A               	tblrd		*-
 14147  0037B8  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 14148  0037BC  EC18  F022         	call	i2___ftmul	;wreg free
 14149  0037C0  C021  F036         	movff	?i2___ftmul,i2_fround$1790
 14150  0037C4  C022  F037         	movff	?i2___ftmul+1,i2_fround$1790+1
 14151  0037C8  C023  F038         	movff	?i2___ftmul+2,i2_fround$1790+2
 14152                           
 14153                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 14154  0037CC  0E00               	movlw	0
 14155  0037CE  6E12               	movwf	i2___wmul@multiplicand+1,c
 14156  0037D0  0E03               	movlw	3
 14157  0037D2  6E11               	movwf	i2___wmul@multiplicand,c
 14158  0037D4  0E00               	movlw	0
 14159  0037D6  6E04               	movwf	i2___awmod@divisor+1,c
 14160  0037D8  0E0A               	movlw	10
 14161  0037DA  6E03               	movwf	i2___awmod@divisor,c
 14162  0037DC  C039  F001         	movff	i2fround@prec,i2___awmod@dividend
 14163  0037E0  6A02               	clrf	i2___awmod@dividend+1,c
 14164  0037E2  EC6A  F027         	call	i2___awmod	;wreg free
 14165  0037E6  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 14166  0037EA  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14167  0037EE  ECE9  F029         	call	i2___wmul	;wreg free
 14168  0037F2  0E29               	movlw	low __npowers_
 14169  0037F4  240F               	addwf	?i2___wmul,w,c
 14170  0037F6  6EF6               	movwf	tblptrl,c
 14171  0037F8  0E06               	movlw	high __npowers_
 14172  0037FA  2010               	addwfc	?i2___wmul+1,w,c
 14173  0037FC  6EF7               	movwf	tblptrh,c
 14174  0037FE                     	if	0	;There are less than 3 active tblptr bytes
 14175  0037FE                     	endif
 14176  0037FE  0009               	tblrd		*+
 14177  003800  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14178  003804  0009               	tblrd		*+
 14179  003806  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14180  00380A  000A               	tblrd		*-
 14181  00380C  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14182  003810  C036  F021         	movff	i2_fround$1790,i2___ftmul@f1
 14183  003814  C037  F022         	movff	i2_fround$1790+1,i2___ftmul@f1+1
 14184  003818  C038  F023         	movff	i2_fround$1790+2,i2___ftmul@f1+2
 14185  00381C  EC18  F022         	call	i2___ftmul	;wreg free
 14186  003820  C021  F033         	movff	?i2___ftmul,i2_fround$1791
 14187  003824  C022  F034         	movff	?i2___ftmul+1,i2_fround$1791+1
 14188  003828  C023  F035         	movff	?i2___ftmul+2,i2_fround$1791+2
 14189                           
 14190                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 14191  00382C  C033  F021         	movff	i2_fround$1791,i2___ftmul@f1
 14192  003830  C034  F022         	movff	i2_fround$1791+1,i2___ftmul@f1+1
 14193  003834  C035  F023         	movff	i2_fround$1791+2,i2___ftmul@f1+2
 14194  003838  0E00               	movlw	0
 14195  00383A  6E24               	movwf	i2___ftmul@f2,c
 14196  00383C  0E00               	movlw	0
 14197  00383E  6E25               	movwf	i2___ftmul@f2+1,c
 14198  003840  0E3F               	movlw	63
 14199  003842  6E26               	movwf	i2___ftmul@f2+2,c
 14200  003844  EC18  F022         	call	i2___ftmul	;wreg free
 14201  003848  C021  F030         	movff	?i2___ftmul,?i2_fround
 14202  00384C  C022  F031         	movff	?i2___ftmul+1,?i2_fround+1
 14203  003850  C023  F032         	movff	?i2___ftmul+2,?i2_fround+2
 14204  003854  0012               	return	
 14205  003856                     i2l3936:
 14206                           
 14207                           ;doprnt.c: 415: else if(prec > 10)
 14208  003856  0E0A               	movlw	10
 14209  003858  6439               	cpfsgt	i2fround@prec,c
 14210  00385A  D05D               	goto	i2l3944
 14211                           
 14212                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 14213  00385C  0E00               	movlw	0
 14214  00385E  6E12               	movwf	i2___wmul@multiplicand+1,c
 14215  003860  0E03               	movlw	3
 14216  003862  6E11               	movwf	i2___wmul@multiplicand,c
 14217  003864  0E00               	movlw	0
 14218  003866  6E04               	movwf	i2___awmod@divisor+1,c
 14219  003868  0E0A               	movlw	10
 14220  00386A  6E03               	movwf	i2___awmod@divisor,c
 14221  00386C  C039  F001         	movff	i2fround@prec,i2___awmod@dividend
 14222  003870  6A02               	clrf	i2___awmod@dividend+1,c
 14223  003872  EC6A  F027         	call	i2___awmod	;wreg free
 14224  003876  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 14225  00387A  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14226  00387E  ECE9  F029         	call	i2___wmul	;wreg free
 14227  003882  0E29               	movlw	low __npowers_
 14228  003884  240F               	addwf	?i2___wmul,w,c
 14229  003886  6EF6               	movwf	tblptrl,c
 14230  003888  0E06               	movlw	high __npowers_
 14231  00388A  2010               	addwfc	?i2___wmul+1,w,c
 14232  00388C  6EF7               	movwf	tblptrh,c
 14233  00388E                     	if	0	;There are less than 3 active tblptr bytes
 14234  00388E                     	endif
 14235  00388E  0009               	tblrd		*+
 14236  003890  CFF5 F024          	movff	tablat,i2___ftmul@f2
 14237  003894  0009               	tblrd		*+
 14238  003896  CFF5 F025          	movff	tablat,i2___ftmul@f2+1
 14239  00389A  000A               	tblrd		*-
 14240  00389C  CFF5 F026          	movff	tablat,i2___ftmul@f2+2
 14241  0038A0  0E00               	movlw	0
 14242  0038A2  6E0A               	movwf	i2___awdiv@divisor+1,c
 14243  0038A4  0E0A               	movlw	10
 14244  0038A6  6E09               	movwf	i2___awdiv@divisor,c
 14245  0038A8  C039  F007         	movff	i2fround@prec,i2___awdiv@dividend
 14246  0038AC  6A08               	clrf	i2___awdiv@dividend+1,c
 14247  0038AE  EC31  F026         	call	i2___awdiv	;wreg free
 14248  0038B2  0E09               	movlw	9
 14249  0038B4  2407               	addwf	?i2___awdiv,w,c
 14250  0038B6  6E0F               	movwf	i2___wmul@multiplier,c
 14251  0038B8  0E00               	movlw	0
 14252  0038BA  2008               	addwfc	?i2___awdiv+1,w,c
 14253  0038BC  6E10               	movwf	i2___wmul@multiplier+1,c
 14254  0038BE  0E00               	movlw	0
 14255  0038C0  6E12               	movwf	i2___wmul@multiplicand+1,c
 14256  0038C2  0E03               	movlw	3
 14257  0038C4  6E11               	movwf	i2___wmul@multiplicand,c
 14258  0038C6  ECE9  F029         	call	i2___wmul	;wreg free
 14259  0038CA  0E29               	movlw	low __npowers_
 14260  0038CC  240F               	addwf	?i2___wmul,w,c
 14261  0038CE  6EF6               	movwf	tblptrl,c
 14262  0038D0  0E06               	movlw	high __npowers_
 14263  0038D2  2010               	addwfc	?i2___wmul+1,w,c
 14264  0038D4  6EF7               	movwf	tblptrh,c
 14265  0038D6                     	if	0	;There are less than 3 active tblptr bytes
 14266  0038D6                     	endif
 14267  0038D6  0009               	tblrd		*+
 14268  0038D8  CFF5 F021          	movff	tablat,i2___ftmul@f1
 14269  0038DC  0009               	tblrd		*+
 14270  0038DE  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 14271  0038E2  000A               	tblrd		*-
 14272  0038E4  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 14273  0038E8  EC18  F022         	call	i2___ftmul	;wreg free
 14274  0038EC  C021  F036         	movff	?i2___ftmul,i2_fround$1790
 14275  0038F0  C022  F037         	movff	?i2___ftmul+1,i2_fround$1790+1
 14276  0038F4  C023  F038         	movff	?i2___ftmul+2,i2_fround$1790+2
 14277                           
 14278                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 14279  0038F8  C036  F021         	movff	i2_fround$1790,i2___ftmul@f1
 14280  0038FC  C037  F022         	movff	i2_fround$1790+1,i2___ftmul@f1+1
 14281  003900  C038  F023         	movff	i2_fround$1790+2,i2___ftmul@f1+2
 14282  003904  0E00               	movlw	0
 14283  003906  6E24               	movwf	i2___ftmul@f2,c
 14284  003908  0E00               	movlw	0
 14285  00390A  6E25               	movwf	i2___ftmul@f2+1,c
 14286  00390C  0E3F               	movlw	63
 14287  00390E  6E26               	movwf	i2___ftmul@f2+2,c
 14288  003910  EC18  F022         	call	i2___ftmul	;wreg free
 14289  003914  D799               	goto	L10
 14290  003916                     i2l3944:
 14291                           
 14292                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 14293  003916  5039               	movf	i2fround@prec,w,c
 14294  003918  0D03               	mullw	3
 14295  00391A  0E29               	movlw	low __npowers_
 14296  00391C  24F3               	addwf	prodl,w,c
 14297  00391E  6EF6               	movwf	tblptrl,c
 14298  003920  0E06               	movlw	high __npowers_
 14299  003922  20F4               	addwfc	prodh,w,c
 14300  003924  6EF7               	movwf	tblptrh,c
 14301  003926                     	if	0	;There are less than 3 active tblptr bytes
 14302  003926                     	endif
 14303  003926  0009               	tblrd		*+
 14304  003928  CFF5 F021          	movff	tablat,i2___ftmul@f1
 14305  00392C  0009               	tblrd		*+
 14306  00392E  CFF5 F022          	movff	tablat,i2___ftmul@f1+1
 14307  003932  000A               	tblrd		*-
 14308  003934  CFF5 F023          	movff	tablat,i2___ftmul@f1+2
 14309  003938  0E00               	movlw	0
 14310  00393A  6E24               	movwf	i2___ftmul@f2,c
 14311  00393C  0E00               	movlw	0
 14312  00393E  6E25               	movwf	i2___ftmul@f2+1,c
 14313  003940  0E3F               	movlw	63
 14314  003942  6E26               	movwf	i2___ftmul@f2+2,c
 14315  003944  EC18  F022         	call	i2___ftmul	;wreg free
 14316  003948  C021  F030         	movff	?i2___ftmul,?i2_fround
 14317  00394C  C022  F031         	movff	?i2___ftmul+1,?i2_fround+1
 14318  003950  C023  F032         	movff	?i2___ftmul+2,?i2_fround+2
 14319  003954  0012               	return	
 14320  003956                     __end_ofi2_fround:
 14321                           	opt stack 0
 14322                           tosu	equ	0xFFF
 14323                           tosh	equ	0xFFE
 14324                           tosl	equ	0xFFD
 14325                           pclatu	equ	0xFFB
 14326                           pclath	equ	0xFFA
 14327                           tblptru	equ	0xFF8
 14328                           tblptrh	equ	0xFF7
 14329                           tblptrl	equ	0xFF6
 14330                           tablat	equ	0xFF5
 14331                           prodh	equ	0xFF4
 14332                           prodl	equ	0xFF3
 14333                           intcon	equ	0xFF2
 14334                           intcon2	equ	0xFF1
 14335                           postinc0	equ	0xFEE
 14336                           fsr0h	equ	0xFEA
 14337                           fsr0l	equ	0xFE9
 14338                           wreg	equ	0xFE8
 14339                           fsr1h	equ	0xFE2
 14340                           fsr1l	equ	0xFE1
 14341                           indf2	equ	0xFDF
 14342                           postinc2	equ	0xFDE
 14343                           postdec2	equ	0xFDD
 14344                           fsr2h	equ	0xFDA
 14345                           fsr2l	equ	0xFD9
 14346                           status	equ	0xFD8
 14347                           
 14348 ;; *************** function i2___wmul *****************
 14349 ;; Defined at:
 14350 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 14351 ;; Parameters:    Size  Location     Type
 14352 ;;  multiplier      2   14[COMRAM] unsigned int 
 14353 ;;  multiplicand    2   16[COMRAM] unsigned int 
 14354 ;; Auto vars:     Size  Location     Type
 14355 ;;  __wmul          2   18[COMRAM] unsigned int 
 14356 ;; Return value:  Size  Location     Type
 14357 ;;                  2   14[COMRAM] unsigned int 
 14358 ;; Registers used:
 14359 ;;		wreg, status,2, status,0, prodl, prodh
 14360 ;; Tracked objects:
 14361 ;;		On entry : 0/0
 14362 ;;		On exit  : 0/0
 14363 ;;		Unchanged: 0/0
 14364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14365 ;;      Params:         4       0       0       0       0       0       0
 14366 ;;      Locals:         2       0       0       0       0       0       0
 14367 ;;      Temps:          0       0       0       0       0       0       0
 14368 ;;      Totals:         6       0       0       0       0       0       0
 14369 ;;Total ram usage:        6 bytes
 14370 ;; Hardware stack levels used:    1
 14371 ;; This function calls:
 14372 ;;		Nothing
 14373 ;; This function is called by:
 14374 ;;		i2_fround
 14375 ;;		i2_scale
 14376 ;;		i2__doprnt
 14377 ;; This function uses a non-reentrant model
 14378 ;;
 14379                           
 14380                           	psect	text53
 14381  0053D2                     __ptext53:
 14382                           	opt stack 0
 14383  0053D2                     i2___wmul:
 14384                           	opt stack 20
 14385                           
 14386                           ;incstack = 0
 14387  0053D2  500F               	movf	i2___wmul@multiplier,w,c
 14388  0053D4  0211               	mulwf	i2___wmul@multiplicand,c
 14389  0053D6  CFF3 F013          	movff	prodl,i2___wmul@product
 14390  0053DA  CFF4 F014          	movff	prodh,i2___wmul@product+1
 14391  0053DE  500F               	movf	i2___wmul@multiplier,w,c
 14392  0053E0  0212               	mulwf	i2___wmul@multiplicand+1,c
 14393  0053E2  50F3               	movf	prodl,w,c
 14394  0053E4  2614               	addwf	i2___wmul@product+1,f,c
 14395  0053E6  5010               	movf	i2___wmul@multiplier+1,w,c
 14396  0053E8  0211               	mulwf	i2___wmul@multiplicand,c
 14397  0053EA  50F3               	movf	prodl,w,c
 14398  0053EC  2614               	addwf	i2___wmul@product+1,f,c
 14399  0053EE  C013  F00F         	movff	i2___wmul@product,?i2___wmul
 14400  0053F2  C014  F010         	movff	i2___wmul@product+1,?i2___wmul+1
 14401  0053F6  0012               	return	
 14402  0053F8                     __end_ofi2___wmul:
 14403                           	opt stack 0
 14404                           tosu	equ	0xFFF
 14405                           tosh	equ	0xFFE
 14406                           tosl	equ	0xFFD
 14407                           pclatu	equ	0xFFB
 14408                           pclath	equ	0xFFA
 14409                           tblptru	equ	0xFF8
 14410                           tblptrh	equ	0xFF7
 14411                           tblptrl	equ	0xFF6
 14412                           tablat	equ	0xFF5
 14413                           prodh	equ	0xFF4
 14414                           prodl	equ	0xFF3
 14415                           intcon	equ	0xFF2
 14416                           intcon2	equ	0xFF1
 14417                           postinc0	equ	0xFEE
 14418                           fsr0h	equ	0xFEA
 14419                           fsr0l	equ	0xFE9
 14420                           wreg	equ	0xFE8
 14421                           fsr1h	equ	0xFE2
 14422                           fsr1l	equ	0xFE1
 14423                           indf2	equ	0xFDF
 14424                           postinc2	equ	0xFDE
 14425                           postdec2	equ	0xFDD
 14426                           fsr2h	equ	0xFDA
 14427                           fsr2l	equ	0xFD9
 14428                           status	equ	0xFD8
 14429                           
 14430 ;; *************** function i2___ftmul *****************
 14431 ;; Defined at:
 14432 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
 14433 ;; Parameters:    Size  Location     Type
 14434 ;;  f1              3   32[COMRAM] float 
 14435 ;;  f2              3   35[COMRAM] float 
 14436 ;; Auto vars:     Size  Location     Type
 14437 ;;  __ftmul         3   42[COMRAM] unsigned um
 14438 ;;  __ftmul         1   46[COMRAM] unsigned char 
 14439 ;;  __ftmul         1   45[COMRAM] unsigned char 
 14440 ;;  __ftmul         1   41[COMRAM] unsigned char 
 14441 ;; Return value:  Size  Location     Type
 14442 ;;                  3   32[COMRAM] float 
 14443 ;; Registers used:
 14444 ;;		wreg, status,2, status,0, cstack
 14445 ;; Tracked objects:
 14446 ;;		On entry : 0/0
 14447 ;;		On exit  : 0/0
 14448 ;;		Unchanged: 0/0
 14449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14450 ;;      Params:         6       0       0       0       0       0       0
 14451 ;;      Locals:         6       0       0       0       0       0       0
 14452 ;;      Temps:          3       0       0       0       0       0       0
 14453 ;;      Totals:        15       0       0       0       0       0       0
 14454 ;;Total ram usage:       15 bytes
 14455 ;; Hardware stack levels used:    1
 14456 ;; Hardware stack levels required when called:    1
 14457 ;; This function calls:
 14458 ;;		i2___ftpack
 14459 ;; This function is called by:
 14460 ;;		_INT0_ISR
 14461 ;;		i2_fround
 14462 ;;		i2_scale
 14463 ;;		i2__doprnt
 14464 ;; This function uses a non-reentrant model
 14465 ;;
 14466                           
 14467                           	psect	text54
 14468  004430                     __ptext54:
 14469                           	opt stack 0
 14470  004430                     i2___ftmul:
 14471                           	opt stack 22
 14472                           
 14473                           ;incstack = 0
 14474  004430  C023  F027         	movff	i2___ftmul@f1+2,??i2___ftmul
 14475  004434  6A28               	clrf	(??i2___ftmul+1)& (0+255),c
 14476  004436  6A29               	clrf	(??i2___ftmul+2)& (0+255),c
 14477  004438  3422               	rlcf	i2___ftmul@f1+1,w,c
 14478  00443A  3627               	rlcf	??i2___ftmul& (0+255),f,c
 14479  00443C  E301               	bnc	u434_41
 14480  00443E  8028               	bsf	(??i2___ftmul+1)& (0+255),0,c
 14481  004440                     u434_41:
 14482  004440  5027               	movf	??i2___ftmul,w,c
 14483  004442  6E2A               	movwf	i2___ftmul@exp,c
 14484  004444  502A               	movf	i2___ftmul@exp,w,c
 14485  004446  A4D8               	btfss	status,2,c
 14486  004448  D007               	goto	i2l3658
 14487  00444A  0E00               	movlw	0
 14488  00444C  6E21               	movwf	?i2___ftmul,c
 14489  00444E  0E00               	movlw	0
 14490  004450  6E22               	movwf	?i2___ftmul+1,c
 14491  004452  0E00               	movlw	0
 14492  004454  6E23               	movwf	?i2___ftmul+2,c
 14493  004456  0012               	return	
 14494  004458                     i2l3658:
 14495  004458  C026  F027         	movff	i2___ftmul@f2+2,??i2___ftmul
 14496  00445C  6A28               	clrf	(??i2___ftmul+1)& (0+255),c
 14497  00445E  6A29               	clrf	(??i2___ftmul+2)& (0+255),c
 14498  004460  3425               	rlcf	i2___ftmul@f2+1,w,c
 14499  004462  3627               	rlcf	??i2___ftmul& (0+255),f,c
 14500  004464  E301               	bnc	u436_41
 14501  004466  8028               	bsf	(??i2___ftmul+1)& (0+255),0,c
 14502  004468                     u436_41:
 14503  004468  5027               	movf	??i2___ftmul,w,c
 14504  00446A  6E2F               	movwf	i2___ftmul@sign,c
 14505  00446C  502F               	movf	i2___ftmul@sign,w,c
 14506  00446E  A4D8               	btfss	status,2,c
 14507  004470  D007               	goto	i2l3664
 14508  004472  0E00               	movlw	0
 14509  004474  6E21               	movwf	?i2___ftmul,c
 14510  004476  0E00               	movlw	0
 14511  004478  6E22               	movwf	?i2___ftmul+1,c
 14512  00447A  0E00               	movlw	0
 14513  00447C  6E23               	movwf	?i2___ftmul+2,c
 14514  00447E  0012               	return	
 14515  004480                     i2l3664:
 14516  004480  502F               	movf	i2___ftmul@sign,w,c
 14517  004482  0F7B               	addlw	123
 14518  004484  262A               	addwf	i2___ftmul@exp,f,c
 14519  004486  C023  F02F         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 14520  00448A  5026               	movf	i2___ftmul@f2+2,w,c
 14521  00448C  1A2F               	xorwf	i2___ftmul@sign,f,c
 14522  00448E  0E80               	movlw	128
 14523  004490  162F               	andwf	i2___ftmul@sign,f,c
 14524  004492  8E22               	bsf	i2___ftmul@f1+1,7,c
 14525  004494  8E25               	bsf	i2___ftmul@f2+1,7,c
 14526  004496  0EFF               	movlw	255
 14527  004498  1624               	andwf	i2___ftmul@f2,f,c
 14528  00449A  0EFF               	movlw	255
 14529  00449C  1625               	andwf	i2___ftmul@f2+1,f,c
 14530  00449E  0E00               	movlw	0
 14531  0044A0  1626               	andwf	i2___ftmul@f2+2,f,c
 14532  0044A2  0E00               	movlw	0
 14533  0044A4  6E2B               	movwf	i2___ftmul@f3_as_product,c
 14534  0044A6  0E00               	movlw	0
 14535  0044A8  6E2C               	movwf	i2___ftmul@f3_as_product+1,c
 14536  0044AA  0E00               	movlw	0
 14537  0044AC  6E2D               	movwf	i2___ftmul@f3_as_product+2,c
 14538  0044AE  0E07               	movlw	7
 14539  0044B0  6E2E               	movwf	i2___ftmul@cntr,c
 14540  0044B2                     i2l3678:
 14541  0044B2  A021               	btfss	i2___ftmul@f1,0,c
 14542  0044B4  D006               	goto	i2l3682
 14543  0044B6  5024               	movf	i2___ftmul@f2,w,c
 14544  0044B8  262B               	addwf	i2___ftmul@f3_as_product,f,c
 14545  0044BA  5025               	movf	i2___ftmul@f2+1,w,c
 14546  0044BC  222C               	addwfc	i2___ftmul@f3_as_product+1,f,c
 14547  0044BE  5026               	movf	i2___ftmul@f2+2,w,c
 14548  0044C0  222D               	addwfc	i2___ftmul@f3_as_product+2,f,c
 14549  0044C2                     i2l3682:
 14550  0044C2  90D8               	bcf	status,0,c
 14551  0044C4  3223               	rrcf	i2___ftmul@f1+2,f,c
 14552  0044C6  3222               	rrcf	i2___ftmul@f1+1,f,c
 14553  0044C8  3221               	rrcf	i2___ftmul@f1,f,c
 14554  0044CA  90D8               	bcf	status,0,c
 14555  0044CC  3624               	rlcf	i2___ftmul@f2,f,c
 14556  0044CE  3625               	rlcf	i2___ftmul@f2+1,f,c
 14557  0044D0  3626               	rlcf	i2___ftmul@f2+2,f,c
 14558  0044D2  2E2E               	decfsz	i2___ftmul@cntr,f,c
 14559  0044D4  D7EE               	goto	i2l3678
 14560  0044D6  0E09               	movlw	9
 14561  0044D8  6E2E               	movwf	i2___ftmul@cntr,c
 14562  0044DA                     i2l3688:
 14563  0044DA  A021               	btfss	i2___ftmul@f1,0,c
 14564  0044DC  D006               	goto	i2l3692
 14565  0044DE  5024               	movf	i2___ftmul@f2,w,c
 14566  0044E0  262B               	addwf	i2___ftmul@f3_as_product,f,c
 14567  0044E2  5025               	movf	i2___ftmul@f2+1,w,c
 14568  0044E4  222C               	addwfc	i2___ftmul@f3_as_product+1,f,c
 14569  0044E6  5026               	movf	i2___ftmul@f2+2,w,c
 14570  0044E8  222D               	addwfc	i2___ftmul@f3_as_product+2,f,c
 14571  0044EA                     i2l3692:
 14572  0044EA  90D8               	bcf	status,0,c
 14573  0044EC  3223               	rrcf	i2___ftmul@f1+2,f,c
 14574  0044EE  3222               	rrcf	i2___ftmul@f1+1,f,c
 14575  0044F0  3221               	rrcf	i2___ftmul@f1,f,c
 14576  0044F2  90D8               	bcf	status,0,c
 14577  0044F4  322D               	rrcf	i2___ftmul@f3_as_product+2,f,c
 14578  0044F6  322C               	rrcf	i2___ftmul@f3_as_product+1,f,c
 14579  0044F8  322B               	rrcf	i2___ftmul@f3_as_product,f,c
 14580  0044FA  2E2E               	decfsz	i2___ftmul@cntr,f,c
 14581  0044FC  D7EE               	goto	i2l3688
 14582  0044FE  C02B  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 14583  004502  C02C  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 14584  004506  C02D  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 14585  00450A  C02A  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 14586  00450E  C02F  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 14587  004512  ECA0  F024         	call	i2___ftpack	;wreg free
 14588  004516  C001  F021         	movff	?i2___ftpack,?i2___ftmul
 14589  00451A  C002  F022         	movff	?i2___ftpack+1,?i2___ftmul+1
 14590  00451E  C003  F023         	movff	?i2___ftpack+2,?i2___ftmul+2
 14591  004522  0012               	return	
 14592  004524                     __end_ofi2___ftmul:
 14593                           	opt stack 0
 14594                           tosu	equ	0xFFF
 14595                           tosh	equ	0xFFE
 14596                           tosl	equ	0xFFD
 14597                           pclatu	equ	0xFFB
 14598                           pclath	equ	0xFFA
 14599                           tblptru	equ	0xFF8
 14600                           tblptrh	equ	0xFF7
 14601                           tblptrl	equ	0xFF6
 14602                           tablat	equ	0xFF5
 14603                           prodh	equ	0xFF4
 14604                           prodl	equ	0xFF3
 14605                           intcon	equ	0xFF2
 14606                           intcon2	equ	0xFF1
 14607                           postinc0	equ	0xFEE
 14608                           fsr0h	equ	0xFEA
 14609                           fsr0l	equ	0xFE9
 14610                           wreg	equ	0xFE8
 14611                           fsr1h	equ	0xFE2
 14612                           fsr1l	equ	0xFE1
 14613                           indf2	equ	0xFDF
 14614                           postinc2	equ	0xFDE
 14615                           postdec2	equ	0xFDD
 14616                           fsr2h	equ	0xFDA
 14617                           fsr2l	equ	0xFD9
 14618                           status	equ	0xFD8
 14619                           
 14620 ;; *************** function i2___awmod *****************
 14621 ;; Defined at:
 14622 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 14623 ;; Parameters:    Size  Location     Type
 14624 ;;  dividend        2    0[COMRAM] int 
 14625 ;;  divisor         2    2[COMRAM] int 
 14626 ;; Auto vars:     Size  Location     Type
 14627 ;;  __awmod         1    5[COMRAM] unsigned char 
 14628 ;;  __awmod         1    4[COMRAM] unsigned char 
 14629 ;; Return value:  Size  Location     Type
 14630 ;;                  2    0[COMRAM] int 
 14631 ;; Registers used:
 14632 ;;		wreg, status,2, status,0
 14633 ;; Tracked objects:
 14634 ;;		On entry : 0/0
 14635 ;;		On exit  : 0/0
 14636 ;;		Unchanged: 0/0
 14637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14638 ;;      Params:         4       0       0       0       0       0       0
 14639 ;;      Locals:         2       0       0       0       0       0       0
 14640 ;;      Temps:          0       0       0       0       0       0       0
 14641 ;;      Totals:         6       0       0       0       0       0       0
 14642 ;;Total ram usage:        6 bytes
 14643 ;; Hardware stack levels used:    1
 14644 ;; This function calls:
 14645 ;;		Nothing
 14646 ;; This function is called by:
 14647 ;;		i2_fround
 14648 ;;		i2_scale
 14649 ;; This function uses a non-reentrant model
 14650 ;;
 14651                           
 14652                           	psect	text55
 14653  004ED4                     __ptext55:
 14654                           	opt stack 0
 14655  004ED4                     i2___awmod:
 14656                           	opt stack 20
 14657                           
 14658                           ;incstack = 0
 14659  004ED4  0E00               	movlw	0
 14660  004ED6  6E06               	movwf	i2___awmod@sign,c
 14661  004ED8  AE02               	btfss	i2___awmod@dividend+1,7,c
 14662  004EDA  D006               	goto	i2l3554
 14663  004EDC  6C01               	negf	i2___awmod@dividend,c
 14664  004EDE  1E02               	comf	i2___awmod@dividend+1,f,c
 14665  004EE0  B0D8               	btfsc	status,0,c
 14666  004EE2  2A02               	incf	i2___awmod@dividend+1,f,c
 14667  004EE4  0E01               	movlw	1
 14668  004EE6  6E06               	movwf	i2___awmod@sign,c
 14669  004EE8                     i2l3554:
 14670  004EE8  AE04               	btfss	i2___awmod@divisor+1,7,c
 14671  004EEA  D004               	goto	i2l3558
 14672  004EEC  6C03               	negf	i2___awmod@divisor,c
 14673  004EEE  1E04               	comf	i2___awmod@divisor+1,f,c
 14674  004EF0  B0D8               	btfsc	status,0,c
 14675  004EF2  2A04               	incf	i2___awmod@divisor+1,f,c
 14676  004EF4                     i2l3558:
 14677  004EF4  5003               	movf	i2___awmod@divisor,w,c
 14678  004EF6  1004               	iorwf	i2___awmod@divisor+1,w,c
 14679  004EF8  B4D8               	btfsc	status,2,c
 14680  004EFA  D018               	goto	i2l3574
 14681  004EFC  0E01               	movlw	1
 14682  004EFE  6E05               	movwf	i2___awmod@counter,c
 14683  004F00  D004               	goto	i2l3564
 14684  004F02                     i2l3562:
 14685  004F02  90D8               	bcf	status,0,c
 14686  004F04  3603               	rlcf	i2___awmod@divisor,f,c
 14687  004F06  3604               	rlcf	i2___awmod@divisor+1,f,c
 14688  004F08  2A05               	incf	i2___awmod@counter,f,c
 14689  004F0A                     i2l3564:
 14690  004F0A  AE04               	btfss	i2___awmod@divisor+1,7,c
 14691  004F0C  D7FA               	goto	i2l3562
 14692  004F0E                     i2l3566:
 14693  004F0E  5003               	movf	i2___awmod@divisor,w,c
 14694  004F10  5C01               	subwf	i2___awmod@dividend,w,c
 14695  004F12  5004               	movf	i2___awmod@divisor+1,w,c
 14696  004F14  5802               	subwfb	i2___awmod@dividend+1,w,c
 14697  004F16  A0D8               	btfss	status,0,c
 14698  004F18  D004               	goto	i2l3570
 14699  004F1A  5003               	movf	i2___awmod@divisor,w,c
 14700  004F1C  5E01               	subwf	i2___awmod@dividend,f,c
 14701  004F1E  5004               	movf	i2___awmod@divisor+1,w,c
 14702  004F20  5A02               	subwfb	i2___awmod@dividend+1,f,c
 14703  004F22                     i2l3570:
 14704  004F22  90D8               	bcf	status,0,c
 14705  004F24  3204               	rrcf	i2___awmod@divisor+1,f,c
 14706  004F26  3203               	rrcf	i2___awmod@divisor,f,c
 14707  004F28  2E05               	decfsz	i2___awmod@counter,f,c
 14708  004F2A  D7F1               	goto	i2l3566
 14709  004F2C                     i2l3574:
 14710  004F2C  5006               	movf	i2___awmod@sign,w,c
 14711  004F2E  B4D8               	btfsc	status,2,c
 14712  004F30  D004               	goto	i2l3578
 14713  004F32  6C01               	negf	i2___awmod@dividend,c
 14714  004F34  1E02               	comf	i2___awmod@dividend+1,f,c
 14715  004F36  B0D8               	btfsc	status,0,c
 14716  004F38  2A02               	incf	i2___awmod@dividend+1,f,c
 14717  004F3A                     i2l3578:
 14718  004F3A  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 14719  004F3E  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 14720  004F42  0012               	return	
 14721  004F44                     __end_ofi2___awmod:
 14722                           	opt stack 0
 14723                           tosu	equ	0xFFF
 14724                           tosh	equ	0xFFE
 14725                           tosl	equ	0xFFD
 14726                           pclatu	equ	0xFFB
 14727                           pclath	equ	0xFFA
 14728                           tblptru	equ	0xFF8
 14729                           tblptrh	equ	0xFF7
 14730                           tblptrl	equ	0xFF6
 14731                           tablat	equ	0xFF5
 14732                           prodh	equ	0xFF4
 14733                           prodl	equ	0xFF3
 14734                           intcon	equ	0xFF2
 14735                           intcon2	equ	0xFF1
 14736                           postinc0	equ	0xFEE
 14737                           fsr0h	equ	0xFEA
 14738                           fsr0l	equ	0xFE9
 14739                           wreg	equ	0xFE8
 14740                           fsr1h	equ	0xFE2
 14741                           fsr1l	equ	0xFE1
 14742                           indf2	equ	0xFDF
 14743                           postinc2	equ	0xFDE
 14744                           postdec2	equ	0xFDD
 14745                           fsr2h	equ	0xFDA
 14746                           fsr2l	equ	0xFD9
 14747                           status	equ	0xFD8
 14748                           
 14749 ;; *************** function i2___awdiv *****************
 14750 ;; Defined at:
 14751 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 14752 ;; Parameters:    Size  Location     Type
 14753 ;;  dividend        2    6[COMRAM] int 
 14754 ;;  divisor         2    8[COMRAM] int 
 14755 ;; Auto vars:     Size  Location     Type
 14756 ;;  __awdiv         2   12[COMRAM] int 
 14757 ;;  __awdiv         1   11[COMRAM] unsigned char 
 14758 ;;  __awdiv         1   10[COMRAM] unsigned char 
 14759 ;; Return value:  Size  Location     Type
 14760 ;;                  2    6[COMRAM] int 
 14761 ;; Registers used:
 14762 ;;		wreg, status,2, status,0
 14763 ;; Tracked objects:
 14764 ;;		On entry : 0/0
 14765 ;;		On exit  : 0/0
 14766 ;;		Unchanged: 0/0
 14767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14768 ;;      Params:         4       0       0       0       0       0       0
 14769 ;;      Locals:         4       0       0       0       0       0       0
 14770 ;;      Temps:          0       0       0       0       0       0       0
 14771 ;;      Totals:         8       0       0       0       0       0       0
 14772 ;;Total ram usage:        8 bytes
 14773 ;; Hardware stack levels used:    1
 14774 ;; This function calls:
 14775 ;;		Nothing
 14776 ;; This function is called by:
 14777 ;;		i2_fround
 14778 ;;		i2_scale
 14779 ;;		i2__doprnt
 14780 ;; This function uses a non-reentrant model
 14781 ;;
 14782                           
 14783                           	psect	text56
 14784  004C62                     __ptext56:
 14785                           	opt stack 0
 14786  004C62                     i2___awdiv:
 14787                           	opt stack 20
 14788                           
 14789                           ;incstack = 0
 14790  004C62  0E00               	movlw	0
 14791  004C64  6E0C               	movwf	i2___awdiv@sign,c
 14792  004C66  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 14793  004C68  D006               	goto	i2l3510
 14794  004C6A  6C09               	negf	i2___awdiv@divisor,c
 14795  004C6C  1E0A               	comf	i2___awdiv@divisor+1,f,c
 14796  004C6E  B0D8               	btfsc	status,0,c
 14797  004C70  2A0A               	incf	i2___awdiv@divisor+1,f,c
 14798  004C72  0E01               	movlw	1
 14799  004C74  6E0C               	movwf	i2___awdiv@sign,c
 14800  004C76                     i2l3510:
 14801  004C76  AE08               	btfss	i2___awdiv@dividend+1,7,c
 14802  004C78  D006               	goto	i2l3516
 14803  004C7A  6C07               	negf	i2___awdiv@dividend,c
 14804  004C7C  1E08               	comf	i2___awdiv@dividend+1,f,c
 14805  004C7E  B0D8               	btfsc	status,0,c
 14806  004C80  2A08               	incf	i2___awdiv@dividend+1,f,c
 14807  004C82  0E01               	movlw	1
 14808  004C84  1A0C               	xorwf	i2___awdiv@sign,f,c
 14809  004C86                     i2l3516:
 14810  004C86  0E00               	movlw	0
 14811  004C88  6E0E               	movwf	i2___awdiv@quotient+1,c
 14812  004C8A  0E00               	movlw	0
 14813  004C8C  6E0D               	movwf	i2___awdiv@quotient,c
 14814  004C8E  5009               	movf	i2___awdiv@divisor,w,c
 14815  004C90  100A               	iorwf	i2___awdiv@divisor+1,w,c
 14816  004C92  B4D8               	btfsc	status,2,c
 14817  004C94  D01C               	goto	i2l3538
 14818  004C96  0E01               	movlw	1
 14819  004C98  6E0B               	movwf	i2___awdiv@counter,c
 14820  004C9A  D004               	goto	i2l3524
 14821  004C9C                     i2l3522:
 14822  004C9C  90D8               	bcf	status,0,c
 14823  004C9E  3609               	rlcf	i2___awdiv@divisor,f,c
 14824  004CA0  360A               	rlcf	i2___awdiv@divisor+1,f,c
 14825  004CA2  2A0B               	incf	i2___awdiv@counter,f,c
 14826  004CA4                     i2l3524:
 14827  004CA4  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 14828  004CA6  D7FA               	goto	i2l3522
 14829  004CA8                     i2l3526:
 14830  004CA8  90D8               	bcf	status,0,c
 14831  004CAA  360D               	rlcf	i2___awdiv@quotient,f,c
 14832  004CAC  360E               	rlcf	i2___awdiv@quotient+1,f,c
 14833  004CAE  5009               	movf	i2___awdiv@divisor,w,c
 14834  004CB0  5C07               	subwf	i2___awdiv@dividend,w,c
 14835  004CB2  500A               	movf	i2___awdiv@divisor+1,w,c
 14836  004CB4  5808               	subwfb	i2___awdiv@dividend+1,w,c
 14837  004CB6  A0D8               	btfss	status,0,c
 14838  004CB8  D005               	goto	i2l3534
 14839  004CBA  5009               	movf	i2___awdiv@divisor,w,c
 14840  004CBC  5E07               	subwf	i2___awdiv@dividend,f,c
 14841  004CBE  500A               	movf	i2___awdiv@divisor+1,w,c
 14842  004CC0  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 14843  004CC2  800D               	bsf	i2___awdiv@quotient,0,c
 14844  004CC4                     i2l3534:
 14845  004CC4  90D8               	bcf	status,0,c
 14846  004CC6  320A               	rrcf	i2___awdiv@divisor+1,f,c
 14847  004CC8  3209               	rrcf	i2___awdiv@divisor,f,c
 14848  004CCA  2E0B               	decfsz	i2___awdiv@counter,f,c
 14849  004CCC  D7ED               	goto	i2l3526
 14850  004CCE                     i2l3538:
 14851  004CCE  500C               	movf	i2___awdiv@sign,w,c
 14852  004CD0  B4D8               	btfsc	status,2,c
 14853  004CD2  D004               	goto	i2l3542
 14854  004CD4  6C0D               	negf	i2___awdiv@quotient,c
 14855  004CD6  1E0E               	comf	i2___awdiv@quotient+1,f,c
 14856  004CD8  B0D8               	btfsc	status,0,c
 14857  004CDA  2A0E               	incf	i2___awdiv@quotient+1,f,c
 14858  004CDC                     i2l3542:
 14859  004CDC  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 14860  004CE0  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 14861  004CE4  0012               	return	
 14862  004CE6                     __end_ofi2___awdiv:
 14863                           	opt stack 0
 14864                           tosu	equ	0xFFF
 14865                           tosh	equ	0xFFE
 14866                           tosl	equ	0xFFD
 14867                           pclatu	equ	0xFFB
 14868                           pclath	equ	0xFFA
 14869                           tblptru	equ	0xFF8
 14870                           tblptrh	equ	0xFF7
 14871                           tblptrl	equ	0xFF6
 14872                           tablat	equ	0xFF5
 14873                           prodh	equ	0xFF4
 14874                           prodl	equ	0xFF3
 14875                           intcon	equ	0xFF2
 14876                           intcon2	equ	0xFF1
 14877                           postinc0	equ	0xFEE
 14878                           fsr0h	equ	0xFEA
 14879                           fsr0l	equ	0xFE9
 14880                           wreg	equ	0xFE8
 14881                           fsr1h	equ	0xFE2
 14882                           fsr1l	equ	0xFE1
 14883                           indf2	equ	0xFDF
 14884                           postinc2	equ	0xFDE
 14885                           postdec2	equ	0xFDD
 14886                           fsr2h	equ	0xFDA
 14887                           fsr2l	equ	0xFD9
 14888                           status	equ	0xFD8
 14889                           
 14890 ;; *************** function i2__tdiv_to_l_ *****************
 14891 ;; Defined at:
 14892 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdivl.c"
 14893 ;; Parameters:    Size  Location     Type
 14894 ;;  f1              3    0[COMRAM] float 
 14895 ;;  f2              3    3[COMRAM] float 
 14896 ;; Auto vars:     Size  Location     Type
 14897 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 14898 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 14899 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 14900 ;; Return value:  Size  Location     Type
 14901 ;;                  4    0[COMRAM] unsigned long 
 14902 ;; Registers used:
 14903 ;;		wreg, status,2, status,0
 14904 ;; Tracked objects:
 14905 ;;		On entry : 0/0
 14906 ;;		On exit  : 0/0
 14907 ;;		Unchanged: 0/0
 14908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14909 ;;      Params:         6       0       0       0       0       0       0
 14910 ;;      Locals:         6       0       0       0       0       0       0
 14911 ;;      Temps:          3       0       0       0       0       0       0
 14912 ;;      Totals:        15       0       0       0       0       0       0
 14913 ;;Total ram usage:       15 bytes
 14914 ;; Hardware stack levels used:    1
 14915 ;; This function calls:
 14916 ;;		Nothing
 14917 ;; This function is called by:
 14918 ;;		i2__doprnt
 14919 ;; This function uses a non-reentrant model
 14920 ;;
 14921                           
 14922                           	psect	text57
 14923  0040CA                     __ptext57:
 14924                           	opt stack 0
 14925  0040CA                     i2__tdiv_to_l_:
 14926                           	opt stack 21
 14927                           
 14928                           ;incstack = 0
 14929  0040CA  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 14930  0040CE  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 14931  0040D0  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 14932  0040D2  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 14933  0040D4  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 14934  0040D6  E301               	bnc	u498_41
 14935  0040D8  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 14936  0040DA                     u498_41:
 14937  0040DA  5007               	movf	??i2__tdiv_to_l_,w,c
 14938  0040DC  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 14939  0040DE  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 14940  0040E0  A4D8               	btfss	status,2,c
 14941  0040E2  D009               	goto	i2l4052
 14942  0040E4  0E00               	movlw	0
 14943  0040E6  6E01               	movwf	?i2__tdiv_to_l_,c
 14944  0040E8  0E00               	movlw	0
 14945  0040EA  6E02               	movwf	?i2__tdiv_to_l_+1,c
 14946  0040EC  0E00               	movlw	0
 14947  0040EE  6E03               	movwf	?i2__tdiv_to_l_+2,c
 14948  0040F0  0E00               	movlw	0
 14949  0040F2  6E04               	movwf	?i2__tdiv_to_l_+3,c
 14950  0040F4  0012               	return	
 14951  0040F6                     i2l4052:
 14952  0040F6  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 14953  0040FA  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 14954  0040FC  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 14955  0040FE  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 14956  004100  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 14957  004102  E301               	bnc	u500_41
 14958  004104  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 14959  004106                     u500_41:
 14960  004106  5007               	movf	??i2__tdiv_to_l_,w,c
 14961  004108  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 14962  00410A  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 14963  00410C  A4D8               	btfss	status,2,c
 14964  00410E  D009               	goto	i2l4058
 14965  004110  0E00               	movlw	0
 14966  004112  6E01               	movwf	?i2__tdiv_to_l_,c
 14967  004114  0E00               	movlw	0
 14968  004116  6E02               	movwf	?i2__tdiv_to_l_+1,c
 14969  004118  0E00               	movlw	0
 14970  00411A  6E03               	movwf	?i2__tdiv_to_l_+2,c
 14971  00411C  0E00               	movlw	0
 14972  00411E  6E04               	movwf	?i2__tdiv_to_l_+3,c
 14973  004120  0012               	return	
 14974  004122                     i2l4058:
 14975  004122  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 14976  004124  0EFF               	movlw	255
 14977  004126  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 14978  004128  0EFF               	movlw	255
 14979  00412A  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 14980  00412C  0E00               	movlw	0
 14981  00412E  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 14982  004130  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 14983  004132  0EFF               	movlw	255
 14984  004134  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 14985  004136  0EFF               	movlw	255
 14986  004138  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 14987  00413A  0E00               	movlw	0
 14988  00413C  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 14989  00413E  0E00               	movlw	0
 14990  004140  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 14991  004142  0E00               	movlw	0
 14992  004144  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 14993  004146  0E00               	movlw	0
 14994  004148  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 14995  00414A  0E00               	movlw	0
 14996  00414C  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 14997  00414E  0E7F               	movlw	127
 14998  004150  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 14999  004152  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 15000  004154  0F98               	addlw	152
 15001  004156  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 15002  004158  0E18               	movlw	24
 15003  00415A  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 15004  00415C                     i2l764:
 15005  00415C  90D8               	bcf	status,0,c
 15006  00415E  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 15007  004160  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 15008  004162  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 15009  004164  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 15010  004166  5004               	movf	i2__tdiv_to_l_@f2,w,c
 15011  004168  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 15012  00416A  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 15013  00416C  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 15014  00416E  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 15015  004170  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 15016  004172  A0D8               	btfss	status,0,c
 15017  004174  D007               	goto	i2l765
 15018  004176  5004               	movf	i2__tdiv_to_l_@f2,w,c
 15019  004178  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 15020  00417A  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 15021  00417C  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 15022  00417E  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 15023  004180  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 15024  004182  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 15025  004184                     i2l765:
 15026  004184  90D8               	bcf	status,0,c
 15027  004186  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 15028  004188  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 15029  00418A  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 15030  00418C  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 15031  00418E  D7E6               	goto	i2l764
 15032  004190  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 15033  004192  D016               	goto	i2l4092
 15034  004194  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 15035  004196  0A80               	xorlw	128
 15036  004198  0F97               	addlw	151
 15037  00419A  B0D8               	btfsc	status,0,c
 15038  00419C  D009               	goto	i2l4088
 15039  00419E  0E00               	movlw	0
 15040  0041A0  6E01               	movwf	?i2__tdiv_to_l_,c
 15041  0041A2  0E00               	movlw	0
 15042  0041A4  6E02               	movwf	?i2__tdiv_to_l_+1,c
 15043  0041A6  0E00               	movlw	0
 15044  0041A8  6E03               	movwf	?i2__tdiv_to_l_+2,c
 15045  0041AA  0E00               	movlw	0
 15046  0041AC  6E04               	movwf	?i2__tdiv_to_l_+3,c
 15047  0041AE  0012               	return	
 15048  0041B0                     i2l4088:
 15049  0041B0  90D8               	bcf	status,0,c
 15050  0041B2  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 15051  0041B4  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 15052  0041B6  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 15053  0041B8  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 15054  0041BA  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 15055  0041BC  D7F9               	goto	i2l4088
 15056  0041BE  D015               	goto	i2l771
 15057  0041C0                     i2l4092:
 15058  0041C0  0E17               	movlw	23
 15059  0041C2  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 15060  0041C4  D00F               	goto	i2l4100
 15061  0041C6  0E00               	movlw	0
 15062  0041C8  6E01               	movwf	?i2__tdiv_to_l_,c
 15063  0041CA  0E00               	movlw	0
 15064  0041CC  6E02               	movwf	?i2__tdiv_to_l_+1,c
 15065  0041CE  0E00               	movlw	0
 15066  0041D0  6E03               	movwf	?i2__tdiv_to_l_+2,c
 15067  0041D2  0E00               	movlw	0
 15068  0041D4  6E04               	movwf	?i2__tdiv_to_l_+3,c
 15069  0041D6  0012               	return	
 15070  0041D8                     i2l4098:
 15071  0041D8  90D8               	bcf	status,0,c
 15072  0041DA  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 15073  0041DC  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 15074  0041DE  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 15075  0041E0  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 15076  0041E2  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 15077  0041E4                     i2l4100:
 15078  0041E4  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 15079  0041E6  A4D8               	btfss	status,2,c
 15080  0041E8  D7F7               	goto	i2l4098
 15081  0041EA                     i2l771:
 15082  0041EA  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 15083  0041EE  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 15084  0041F2  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 15085  0041F6  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 15086  0041FA  0012               	return		;funcret
 15087  0041FC                     __end_ofi2__tdiv_to_l_:
 15088                           	opt stack 0
 15089                           tosu	equ	0xFFF
 15090                           tosh	equ	0xFFE
 15091                           tosl	equ	0xFFD
 15092                           pclatu	equ	0xFFB
 15093                           pclath	equ	0xFFA
 15094                           tblptru	equ	0xFF8
 15095                           tblptrh	equ	0xFF7
 15096                           tblptrl	equ	0xFF6
 15097                           tablat	equ	0xFF5
 15098                           prodh	equ	0xFF4
 15099                           prodl	equ	0xFF3
 15100                           intcon	equ	0xFF2
 15101                           intcon2	equ	0xFF1
 15102                           postinc0	equ	0xFEE
 15103                           fsr0h	equ	0xFEA
 15104                           fsr0l	equ	0xFE9
 15105                           wreg	equ	0xFE8
 15106                           fsr1h	equ	0xFE2
 15107                           fsr1l	equ	0xFE1
 15108                           indf2	equ	0xFDF
 15109                           postinc2	equ	0xFDE
 15110                           postdec2	equ	0xFDD
 15111                           fsr2h	equ	0xFDA
 15112                           fsr2l	equ	0xFD9
 15113                           status	equ	0xFD8
 15114                           
 15115 ;; *************** function i2__div_to_l_ *****************
 15116 ;; Defined at:
 15117 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fldivl.c"
 15118 ;; Parameters:    Size  Location     Type
 15119 ;;  f1              3    0[COMRAM] unsigned long 
 15120 ;;  f2              3    3[COMRAM] unsigned long 
 15121 ;; Auto vars:     Size  Location     Type
 15122 ;;  _div_to_l_      4    6[COMRAM] unsigned long 
 15123 ;;  _div_to_l_      1   11[COMRAM] unsigned char 
 15124 ;;  _div_to_l_      1   10[COMRAM] unsigned char 
 15125 ;; Return value:  Size  Location     Type
 15126 ;;                  4    0[COMRAM] unsigned long 
 15127 ;; Registers used:
 15128 ;;		wreg, status,2, status,0
 15129 ;; Tracked objects:
 15130 ;;		On entry : 0/0
 15131 ;;		On exit  : 0/0
 15132 ;;		Unchanged: 0/0
 15133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15134 ;;      Params:         6       0       0       0       0       0       0
 15135 ;;      Locals:         6       0       0       0       0       0       0
 15136 ;;      Temps:          0       0       0       0       0       0       0
 15137 ;;      Totals:        12       0       0       0       0       0       0
 15138 ;;Total ram usage:       12 bytes
 15139 ;; Hardware stack levels used:    1
 15140 ;; This function calls:
 15141 ;;		Nothing
 15142 ;; This function is called by:
 15143 ;;		i2__doprnt
 15144 ;; This function uses a non-reentrant model
 15145 ;;
 15146                           
 15147                           	psect	text58
 15148  0041FC                     __ptext58:
 15149                           	opt stack 0
 15150  0041FC                     i2__div_to_l_:
 15151                           	opt stack 21
 15152                           
 15153                           ;incstack = 0
 15154  0041FC  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 15155  0041FE  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 15156  004200  6E0C               	movwf	i2__div_to_l_@exp1,c
 15157  004202  500C               	movf	i2__div_to_l_@exp1,w,c
 15158  004204  A4D8               	btfss	status,2,c
 15159  004206  D009               	goto	i2l3992
 15160  004208  0E00               	movlw	0
 15161  00420A  6E01               	movwf	?i2__div_to_l_,c
 15162  00420C  0E00               	movlw	0
 15163  00420E  6E02               	movwf	?i2__div_to_l_+1,c
 15164  004210  0E00               	movlw	0
 15165  004212  6E03               	movwf	?i2__div_to_l_+2,c
 15166  004214  0E00               	movlw	0
 15167  004216  6E04               	movwf	?i2__div_to_l_+3,c
 15168  004218  0012               	return	
 15169  00421A                     i2l3992:
 15170  00421A  3406               	rlcf	i2__div_to_l_@f2+2,w,c
 15171  00421C  3407               	rlcf	i2__div_to_l_@f2+3,w,c
 15172  00421E  6E0B               	movwf	i2__div_to_l_@cntr,c
 15173  004220  500B               	movf	i2__div_to_l_@cntr,w,c
 15174  004222  A4D8               	btfss	status,2,c
 15175  004224  D009               	goto	i2l3998
 15176  004226  0E00               	movlw	0
 15177  004228  6E01               	movwf	?i2__div_to_l_,c
 15178  00422A  0E00               	movlw	0
 15179  00422C  6E02               	movwf	?i2__div_to_l_+1,c
 15180  00422E  0E00               	movlw	0
 15181  004230  6E03               	movwf	?i2__div_to_l_+2,c
 15182  004232  0E00               	movlw	0
 15183  004234  6E04               	movwf	?i2__div_to_l_+3,c
 15184  004236  0012               	return	
 15185  004238                     i2l3998:
 15186  004238  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 15187  00423A  0EFF               	movlw	255
 15188  00423C  1601               	andwf	i2__div_to_l_@f1,f,c
 15189  00423E  0EFF               	movlw	255
 15190  004240  1602               	andwf	i2__div_to_l_@f1+1,f,c
 15191  004242  0EFF               	movlw	255
 15192  004244  1603               	andwf	i2__div_to_l_@f1+2,f,c
 15193  004246  0E00               	movlw	0
 15194  004248  1604               	andwf	i2__div_to_l_@f1+3,f,c
 15195  00424A  8E06               	bsf	i2__div_to_l_@f2+2,7,c
 15196  00424C  0EFF               	movlw	255
 15197  00424E  1604               	andwf	i2__div_to_l_@f2,f,c
 15198  004250  0EFF               	movlw	255
 15199  004252  1605               	andwf	i2__div_to_l_@f2+1,f,c
 15200  004254  0EFF               	movlw	255
 15201  004256  1606               	andwf	i2__div_to_l_@f2+2,f,c
 15202  004258  0E00               	movlw	0
 15203  00425A  1607               	andwf	i2__div_to_l_@f2+3,f,c
 15204  00425C  0E00               	movlw	0
 15205  00425E  6E07               	movwf	i2__div_to_l_@quot,c
 15206  004260  0E00               	movlw	0
 15207  004262  6E08               	movwf	i2__div_to_l_@quot+1,c
 15208  004264  0E00               	movlw	0
 15209  004266  6E09               	movwf	i2__div_to_l_@quot+2,c
 15210  004268  0E00               	movlw	0
 15211  00426A  6E0A               	movwf	i2__div_to_l_@quot+3,c
 15212  00426C  0E7F               	movlw	127
 15213  00426E  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 15214  004270  500B               	movf	i2__div_to_l_@cntr,w,c
 15215  004272  0FA0               	addlw	160
 15216  004274  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 15217  004276  0E20               	movlw	32
 15218  004278  6E0B               	movwf	i2__div_to_l_@cntr,c
 15219  00427A                     i2l4012:
 15220  00427A  90D8               	bcf	status,0,c
 15221  00427C  3607               	rlcf	i2__div_to_l_@quot,f,c
 15222  00427E  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 15223  004280  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 15224  004282  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 15225  004284  5004               	movf	i2__div_to_l_@f2,w,c
 15226  004286  5C01               	subwf	i2__div_to_l_@f1,w,c
 15227  004288  5005               	movf	i2__div_to_l_@f2+1,w,c
 15228  00428A  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 15229  00428C  5006               	movf	i2__div_to_l_@f2+2,w,c
 15230  00428E  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 15231  004290  5007               	movf	i2__div_to_l_@f2+3,w,c
 15232  004292  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 15233  004294  A0D8               	btfss	status,0,c
 15234  004296  D009               	goto	i2l4020
 15235  004298  5004               	movf	i2__div_to_l_@f2,w,c
 15236  00429A  5E01               	subwf	i2__div_to_l_@f1,f,c
 15237  00429C  5005               	movf	i2__div_to_l_@f2+1,w,c
 15238  00429E  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 15239  0042A0  5006               	movf	i2__div_to_l_@f2+2,w,c
 15240  0042A2  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 15241  0042A4  5007               	movf	i2__div_to_l_@f2+3,w,c
 15242  0042A6  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 15243  0042A8  8007               	bsf	i2__div_to_l_@quot,0,c
 15244  0042AA                     i2l4020:
 15245  0042AA  90D8               	bcf	status,0,c
 15246  0042AC  3601               	rlcf	i2__div_to_l_@f1,f,c
 15247  0042AE  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 15248  0042B0  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 15249  0042B2  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 15250  0042B4  2E0B               	decfsz	i2__div_to_l_@cntr,f,c
 15251  0042B6  D7E1               	goto	i2l4012
 15252  0042B8  AE0C               	btfss	i2__div_to_l_@exp1,7,c
 15253  0042BA  D016               	goto	i2l4036
 15254  0042BC  500C               	movf	i2__div_to_l_@exp1,w,c
 15255  0042BE  0A80               	xorlw	128
 15256  0042C0  0F9F               	addlw	159
 15257  0042C2  B0D8               	btfsc	status,0,c
 15258  0042C4  D009               	goto	i2l4032
 15259  0042C6  0E00               	movlw	0
 15260  0042C8  6E01               	movwf	?i2__div_to_l_,c
 15261  0042CA  0E00               	movlw	0
 15262  0042CC  6E02               	movwf	?i2__div_to_l_+1,c
 15263  0042CE  0E00               	movlw	0
 15264  0042D0  6E03               	movwf	?i2__div_to_l_+2,c
 15265  0042D2  0E00               	movlw	0
 15266  0042D4  6E04               	movwf	?i2__div_to_l_+3,c
 15267  0042D6  0012               	return	
 15268  0042D8                     i2l4032:
 15269  0042D8  90D8               	bcf	status,0,c
 15270  0042DA  320A               	rrcf	i2__div_to_l_@quot+3,f,c
 15271  0042DC  3209               	rrcf	i2__div_to_l_@quot+2,f,c
 15272  0042DE  3208               	rrcf	i2__div_to_l_@quot+1,f,c
 15273  0042E0  3207               	rrcf	i2__div_to_l_@quot,f,c
 15274  0042E2  3E0C               	incfsz	i2__div_to_l_@exp1,f,c
 15275  0042E4  D7F9               	goto	i2l4032
 15276  0042E6  D015               	goto	i2l667
 15277  0042E8                     i2l4036:
 15278  0042E8  0E1F               	movlw	31
 15279  0042EA  640C               	cpfsgt	i2__div_to_l_@exp1,c
 15280  0042EC  D00F               	goto	i2l4044
 15281  0042EE  0E00               	movlw	0
 15282  0042F0  6E01               	movwf	?i2__div_to_l_,c
 15283  0042F2  0E00               	movlw	0
 15284  0042F4  6E02               	movwf	?i2__div_to_l_+1,c
 15285  0042F6  0E00               	movlw	0
 15286  0042F8  6E03               	movwf	?i2__div_to_l_+2,c
 15287  0042FA  0E00               	movlw	0
 15288  0042FC  6E04               	movwf	?i2__div_to_l_+3,c
 15289  0042FE  0012               	return	
 15290  004300                     i2l4042:
 15291  004300  90D8               	bcf	status,0,c
 15292  004302  3607               	rlcf	i2__div_to_l_@quot,f,c
 15293  004304  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 15294  004306  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 15295  004308  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 15296  00430A  060C               	decf	i2__div_to_l_@exp1,f,c
 15297  00430C                     i2l4044:
 15298  00430C  500C               	movf	i2__div_to_l_@exp1,w,c
 15299  00430E  A4D8               	btfss	status,2,c
 15300  004310  D7F7               	goto	i2l4042
 15301  004312                     i2l667:
 15302  004312  C007  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 15303  004316  C008  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 15304  00431A  C009  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 15305  00431E  C00A  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 15306  004322  0012               	return		;funcret
 15307  004324                     __end_ofi2__div_to_l_:
 15308                           	opt stack 0
 15309                           tosu	equ	0xFFF
 15310                           tosh	equ	0xFFE
 15311                           tosl	equ	0xFFD
 15312                           pclatu	equ	0xFFB
 15313                           pclath	equ	0xFFA
 15314                           tblptru	equ	0xFF8
 15315                           tblptrh	equ	0xFF7
 15316                           tblptrl	equ	0xFF6
 15317                           tablat	equ	0xFF5
 15318                           prodh	equ	0xFF4
 15319                           prodl	equ	0xFF3
 15320                           intcon	equ	0xFF2
 15321                           intcon2	equ	0xFF1
 15322                           postinc0	equ	0xFEE
 15323                           fsr0h	equ	0xFEA
 15324                           fsr0l	equ	0xFE9
 15325                           wreg	equ	0xFE8
 15326                           fsr1h	equ	0xFE2
 15327                           fsr1l	equ	0xFE1
 15328                           indf2	equ	0xFDF
 15329                           postinc2	equ	0xFDE
 15330                           postdec2	equ	0xFDD
 15331                           fsr2h	equ	0xFDA
 15332                           fsr2l	equ	0xFD9
 15333                           status	equ	0xFD8
 15334                           
 15335 ;; *************** function i2___lltoft *****************
 15336 ;; Defined at:
 15337 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lltoft.c"
 15338 ;; Parameters:    Size  Location     Type
 15339 ;;  c               4    8[COMRAM] unsigned long 
 15340 ;; Auto vars:     Size  Location     Type
 15341 ;;  __lltoft        1   16[COMRAM] unsigned char 
 15342 ;; Return value:  Size  Location     Type
 15343 ;;                  3    8[COMRAM] float 
 15344 ;; Registers used:
 15345 ;;		wreg, status,2, status,0, cstack
 15346 ;; Tracked objects:
 15347 ;;		On entry : 0/0
 15348 ;;		On exit  : 0/0
 15349 ;;		Unchanged: 0/0
 15350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15351 ;;      Params:         4       0       0       0       0       0       0
 15352 ;;      Locals:         1       0       0       0       0       0       0
 15353 ;;      Temps:          4       0       0       0       0       0       0
 15354 ;;      Totals:         9       0       0       0       0       0       0
 15355 ;;Total ram usage:        9 bytes
 15356 ;; Hardware stack levels used:    1
 15357 ;; Hardware stack levels required when called:    1
 15358 ;; This function calls:
 15359 ;;		i2___ftpack
 15360 ;; This function is called by:
 15361 ;;		i2__doprnt
 15362 ;; This function uses a non-reentrant model
 15363 ;;
 15364                           
 15365                           	psect	text59
 15366  004FAA                     __ptext59:
 15367                           	opt stack 0
 15368  004FAA                     i2___lltoft:
 15369                           	opt stack 20
 15370                           
 15371                           ;incstack = 0
 15372  004FAA  0E8E               	movlw	142
 15373  004FAC  6E11               	movwf	i2___lltoft@exp,c
 15374  004FAE  D006               	goto	i2l4232
 15375  004FB0                     i2l4230:
 15376  004FB0  90D8               	bcf	status,0,c
 15377  004FB2  320C               	rrcf	i2___lltoft@c+3,f,c
 15378  004FB4  320B               	rrcf	i2___lltoft@c+2,f,c
 15379  004FB6  320A               	rrcf	i2___lltoft@c+1,f,c
 15380  004FB8  3209               	rrcf	i2___lltoft@c,f,c
 15381  004FBA  2A11               	incf	i2___lltoft@exp,f,c
 15382  004FBC                     i2l4232:
 15383  004FBC  0E00               	movlw	0
 15384  004FBE  1409               	andwf	i2___lltoft@c,w,c
 15385  004FC0  6E0D               	movwf	??i2___lltoft& (0+255),c
 15386  004FC2  0E00               	movlw	0
 15387  004FC4  140A               	andwf	i2___lltoft@c+1,w,c
 15388  004FC6  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 15389  004FC8  0E00               	movlw	0
 15390  004FCA  140B               	andwf	i2___lltoft@c+2,w,c
 15391  004FCC  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 15392  004FCE  0EFF               	movlw	255
 15393  004FD0  140C               	andwf	i2___lltoft@c+3,w,c
 15394  004FD2  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 15395  004FD4  500D               	movf	??i2___lltoft,w,c
 15396  004FD6  100E               	iorwf	??i2___lltoft+1,w,c
 15397  004FD8  100F               	iorwf	??i2___lltoft+2,w,c
 15398  004FDA  1010               	iorwf	??i2___lltoft+3,w,c
 15399  004FDC  A4D8               	btfss	status,2,c
 15400  004FDE  D7E8               	goto	i2l4230
 15401  004FE0  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 15402  004FE4  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 15403  004FE8  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 15404  004FEC  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 15405  004FF0  0E00               	movlw	0
 15406  004FF2  6E05               	movwf	i2___ftpack@sign,c
 15407  004FF4  ECA0  F024         	call	i2___ftpack	;wreg free
 15408  004FF8  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 15409  004FFC  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 15410  005000  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 15411  005004  0012               	return	
 15412  005006                     __end_ofi2___lltoft:
 15413                           	opt stack 0
 15414                           tosu	equ	0xFFF
 15415                           tosh	equ	0xFFE
 15416                           tosl	equ	0xFFD
 15417                           pclatu	equ	0xFFB
 15418                           pclath	equ	0xFFA
 15419                           tblptru	equ	0xFF8
 15420                           tblptrh	equ	0xFF7
 15421                           tblptrl	equ	0xFF6
 15422                           tablat	equ	0xFF5
 15423                           prodh	equ	0xFF4
 15424                           prodl	equ	0xFF3
 15425                           intcon	equ	0xFF2
 15426                           intcon2	equ	0xFF1
 15427                           postinc0	equ	0xFEE
 15428                           fsr0h	equ	0xFEA
 15429                           fsr0l	equ	0xFE9
 15430                           wreg	equ	0xFE8
 15431                           fsr1h	equ	0xFE2
 15432                           fsr1l	equ	0xFE1
 15433                           indf2	equ	0xFDF
 15434                           postinc2	equ	0xFDE
 15435                           postdec2	equ	0xFDD
 15436                           fsr2h	equ	0xFDA
 15437                           fsr2l	equ	0xFD9
 15438                           status	equ	0xFD8
 15439                           
 15440 ;; *************** function i2___llmod *****************
 15441 ;; Defined at:
 15442 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
 15443 ;; Parameters:    Size  Location     Type
 15444 ;;  dividend        4   13[COMRAM] unsigned long 
 15445 ;;  divisor         4   17[COMRAM] unsigned long 
 15446 ;; Auto vars:     Size  Location     Type
 15447 ;;  __llmod         1   21[COMRAM] unsigned char 
 15448 ;; Return value:  Size  Location     Type
 15449 ;;                  4   13[COMRAM] unsigned long 
 15450 ;; Registers used:
 15451 ;;		wreg, status,2, status,0
 15452 ;; Tracked objects:
 15453 ;;		On entry : 0/0
 15454 ;;		On exit  : 0/0
 15455 ;;		Unchanged: 0/0
 15456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15457 ;;      Params:         8       0       0       0       0       0       0
 15458 ;;      Locals:         1       0       0       0       0       0       0
 15459 ;;      Temps:          0       0       0       0       0       0       0
 15460 ;;      Totals:         9       0       0       0       0       0       0
 15461 ;;Total ram usage:        9 bytes
 15462 ;; Hardware stack levels used:    1
 15463 ;; This function calls:
 15464 ;;		Nothing
 15465 ;; This function is called by:
 15466 ;;		i2__doprnt
 15467 ;; This function uses a non-reentrant model
 15468 ;;
 15469                           
 15470                           	psect	text60
 15471  004F44                     __ptext60:
 15472                           	opt stack 0
 15473  004F44                     i2___llmod:
 15474                           	opt stack 21
 15475                           
 15476                           ;incstack = 0
 15477  004F44  5012               	movf	i2___llmod@divisor,w,c
 15478  004F46  1013               	iorwf	i2___llmod@divisor+1,w,c
 15479  004F48  1014               	iorwf	i2___llmod@divisor+2,w,c
 15480  004F4A  1015               	iorwf	i2___llmod@divisor+3,w,c
 15481  004F4C  B4D8               	btfsc	status,2,c
 15482  004F4E  D024               	goto	i2l878
 15483  004F50  0E01               	movlw	1
 15484  004F52  6E16               	movwf	i2___llmod@counter,c
 15485  004F54  D006               	goto	i2l4218
 15486  004F56                     i2l4216:
 15487  004F56  90D8               	bcf	status,0,c
 15488  004F58  3612               	rlcf	i2___llmod@divisor,f,c
 15489  004F5A  3613               	rlcf	i2___llmod@divisor+1,f,c
 15490  004F5C  3614               	rlcf	i2___llmod@divisor+2,f,c
 15491  004F5E  3615               	rlcf	i2___llmod@divisor+3,f,c
 15492  004F60  2A16               	incf	i2___llmod@counter,f,c
 15493  004F62                     i2l4218:
 15494  004F62  AE15               	btfss	i2___llmod@divisor+3,7,c
 15495  004F64  D7F8               	goto	i2l4216
 15496  004F66                     i2l4220:
 15497  004F66  5012               	movf	i2___llmod@divisor,w,c
 15498  004F68  5C0E               	subwf	i2___llmod@dividend,w,c
 15499  004F6A  5013               	movf	i2___llmod@divisor+1,w,c
 15500  004F6C  580F               	subwfb	i2___llmod@dividend+1,w,c
 15501  004F6E  5014               	movf	i2___llmod@divisor+2,w,c
 15502  004F70  5810               	subwfb	i2___llmod@dividend+2,w,c
 15503  004F72  5015               	movf	i2___llmod@divisor+3,w,c
 15504  004F74  5811               	subwfb	i2___llmod@dividend+3,w,c
 15505  004F76  A0D8               	btfss	status,0,c
 15506  004F78  D008               	goto	i2l4224
 15507  004F7A  5012               	movf	i2___llmod@divisor,w,c
 15508  004F7C  5E0E               	subwf	i2___llmod@dividend,f,c
 15509  004F7E  5013               	movf	i2___llmod@divisor+1,w,c
 15510  004F80  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 15511  004F82  5014               	movf	i2___llmod@divisor+2,w,c
 15512  004F84  5A10               	subwfb	i2___llmod@dividend+2,f,c
 15513  004F86  5015               	movf	i2___llmod@divisor+3,w,c
 15514  004F88  5A11               	subwfb	i2___llmod@dividend+3,f,c
 15515  004F8A                     i2l4224:
 15516  004F8A  90D8               	bcf	status,0,c
 15517  004F8C  3215               	rrcf	i2___llmod@divisor+3,f,c
 15518  004F8E  3214               	rrcf	i2___llmod@divisor+2,f,c
 15519  004F90  3213               	rrcf	i2___llmod@divisor+1,f,c
 15520  004F92  3212               	rrcf	i2___llmod@divisor,f,c
 15521  004F94  2E16               	decfsz	i2___llmod@counter,f,c
 15522  004F96  D7E7               	goto	i2l4220
 15523  004F98                     i2l878:
 15524  004F98  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 15525  004F9C  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 15526  004FA0  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 15527  004FA4  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 15528  004FA8  0012               	return		;funcret
 15529  004FAA                     __end_ofi2___llmod:
 15530                           	opt stack 0
 15531                           tosu	equ	0xFFF
 15532                           tosh	equ	0xFFE
 15533                           tosl	equ	0xFFD
 15534                           pclatu	equ	0xFFB
 15535                           pclath	equ	0xFFA
 15536                           tblptru	equ	0xFF8
 15537                           tblptrh	equ	0xFF7
 15538                           tblptrl	equ	0xFF6
 15539                           tablat	equ	0xFF5
 15540                           prodh	equ	0xFF4
 15541                           prodl	equ	0xFF3
 15542                           intcon	equ	0xFF2
 15543                           intcon2	equ	0xFF1
 15544                           postinc0	equ	0xFEE
 15545                           fsr0h	equ	0xFEA
 15546                           fsr0l	equ	0xFE9
 15547                           wreg	equ	0xFE8
 15548                           fsr1h	equ	0xFE2
 15549                           fsr1l	equ	0xFE1
 15550                           indf2	equ	0xFDF
 15551                           postinc2	equ	0xFDE
 15552                           postdec2	equ	0xFDD
 15553                           fsr2h	equ	0xFDA
 15554                           fsr2l	equ	0xFD9
 15555                           status	equ	0xFD8
 15556                           
 15557 ;; *************** function i2___lldiv *****************
 15558 ;; Defined at:
 15559 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
 15560 ;; Parameters:    Size  Location     Type
 15561 ;;  dividend        4    0[COMRAM] unsigned long 
 15562 ;;  divisor         4    4[COMRAM] unsigned long 
 15563 ;; Auto vars:     Size  Location     Type
 15564 ;;  __lldiv         4    8[COMRAM] unsigned long 
 15565 ;;  __lldiv         1   12[COMRAM] unsigned char 
 15566 ;; Return value:  Size  Location     Type
 15567 ;;                  4    0[COMRAM] unsigned long 
 15568 ;; Registers used:
 15569 ;;		wreg, status,2, status,0
 15570 ;; Tracked objects:
 15571 ;;		On entry : 0/0
 15572 ;;		On exit  : 0/0
 15573 ;;		Unchanged: 0/0
 15574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15575 ;;      Params:         8       0       0       0       0       0       0
 15576 ;;      Locals:         5       0       0       0       0       0       0
 15577 ;;      Temps:          0       0       0       0       0       0       0
 15578 ;;      Totals:        13       0       0       0       0       0       0
 15579 ;;Total ram usage:       13 bytes
 15580 ;; Hardware stack levels used:    1
 15581 ;; This function calls:
 15582 ;;		Nothing
 15583 ;; This function is called by:
 15584 ;;		i2__doprnt
 15585 ;; This function uses a non-reentrant model
 15586 ;;
 15587                           
 15588                           	psect	text61
 15589  004CE6                     __ptext61:
 15590                           	opt stack 0
 15591  004CE6                     i2___lldiv:
 15592                           	opt stack 21
 15593                           
 15594                           ;incstack = 0
 15595  004CE6  0E00               	movlw	0
 15596  004CE8  6E09               	movwf	i2___lldiv@quotient,c
 15597  004CEA  0E00               	movlw	0
 15598  004CEC  6E0A               	movwf	i2___lldiv@quotient+1,c
 15599  004CEE  0E00               	movlw	0
 15600  004CF0  6E0B               	movwf	i2___lldiv@quotient+2,c
 15601  004CF2  0E00               	movlw	0
 15602  004CF4  6E0C               	movwf	i2___lldiv@quotient+3,c
 15603  004CF6  5005               	movf	i2___lldiv@divisor,w,c
 15604  004CF8  1006               	iorwf	i2___lldiv@divisor+1,w,c
 15605  004CFA  1007               	iorwf	i2___lldiv@divisor+2,w,c
 15606  004CFC  1008               	iorwf	i2___lldiv@divisor+3,w,c
 15607  004CFE  B4D8               	btfsc	status,2,c
 15608  004D00  D02A               	goto	i2l868
 15609  004D02  0E01               	movlw	1
 15610  004D04  6E0D               	movwf	i2___lldiv@counter,c
 15611  004D06  D006               	goto	i2l4198
 15612  004D08                     i2l4196:
 15613  004D08  90D8               	bcf	status,0,c
 15614  004D0A  3605               	rlcf	i2___lldiv@divisor,f,c
 15615  004D0C  3606               	rlcf	i2___lldiv@divisor+1,f,c
 15616  004D0E  3607               	rlcf	i2___lldiv@divisor+2,f,c
 15617  004D10  3608               	rlcf	i2___lldiv@divisor+3,f,c
 15618  004D12  2A0D               	incf	i2___lldiv@counter,f,c
 15619  004D14                     i2l4198:
 15620  004D14  AE08               	btfss	i2___lldiv@divisor+3,7,c
 15621  004D16  D7F8               	goto	i2l4196
 15622  004D18                     i2l4200:
 15623  004D18  90D8               	bcf	status,0,c
 15624  004D1A  3609               	rlcf	i2___lldiv@quotient,f,c
 15625  004D1C  360A               	rlcf	i2___lldiv@quotient+1,f,c
 15626  004D1E  360B               	rlcf	i2___lldiv@quotient+2,f,c
 15627  004D20  360C               	rlcf	i2___lldiv@quotient+3,f,c
 15628  004D22  5005               	movf	i2___lldiv@divisor,w,c
 15629  004D24  5C01               	subwf	i2___lldiv@dividend,w,c
 15630  004D26  5006               	movf	i2___lldiv@divisor+1,w,c
 15631  004D28  5802               	subwfb	i2___lldiv@dividend+1,w,c
 15632  004D2A  5007               	movf	i2___lldiv@divisor+2,w,c
 15633  004D2C  5803               	subwfb	i2___lldiv@dividend+2,w,c
 15634  004D2E  5008               	movf	i2___lldiv@divisor+3,w,c
 15635  004D30  5804               	subwfb	i2___lldiv@dividend+3,w,c
 15636  004D32  A0D8               	btfss	status,0,c
 15637  004D34  D009               	goto	i2l4208
 15638  004D36  5005               	movf	i2___lldiv@divisor,w,c
 15639  004D38  5E01               	subwf	i2___lldiv@dividend,f,c
 15640  004D3A  5006               	movf	i2___lldiv@divisor+1,w,c
 15641  004D3C  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 15642  004D3E  5007               	movf	i2___lldiv@divisor+2,w,c
 15643  004D40  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 15644  004D42  5008               	movf	i2___lldiv@divisor+3,w,c
 15645  004D44  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 15646  004D46  8009               	bsf	i2___lldiv@quotient,0,c
 15647  004D48                     i2l4208:
 15648  004D48  90D8               	bcf	status,0,c
 15649  004D4A  3208               	rrcf	i2___lldiv@divisor+3,f,c
 15650  004D4C  3207               	rrcf	i2___lldiv@divisor+2,f,c
 15651  004D4E  3206               	rrcf	i2___lldiv@divisor+1,f,c
 15652  004D50  3205               	rrcf	i2___lldiv@divisor,f,c
 15653  004D52  2E0D               	decfsz	i2___lldiv@counter,f,c
 15654  004D54  D7E1               	goto	i2l4200
 15655  004D56                     i2l868:
 15656  004D56  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 15657  004D5A  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 15658  004D5E  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 15659  004D62  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 15660  004D66  0012               	return		;funcret
 15661  004D68                     __end_ofi2___lldiv:
 15662                           	opt stack 0
 15663                           tosu	equ	0xFFF
 15664                           tosh	equ	0xFFE
 15665                           tosl	equ	0xFFD
 15666                           pclatu	equ	0xFFB
 15667                           pclath	equ	0xFFA
 15668                           tblptru	equ	0xFF8
 15669                           tblptrh	equ	0xFF7
 15670                           tblptrl	equ	0xFF6
 15671                           tablat	equ	0xFF5
 15672                           prodh	equ	0xFF4
 15673                           prodl	equ	0xFF3
 15674                           intcon	equ	0xFF2
 15675                           intcon2	equ	0xFF1
 15676                           postinc0	equ	0xFEE
 15677                           fsr0h	equ	0xFEA
 15678                           fsr0l	equ	0xFE9
 15679                           wreg	equ	0xFE8
 15680                           fsr1h	equ	0xFE2
 15681                           fsr1l	equ	0xFE1
 15682                           indf2	equ	0xFDF
 15683                           postinc2	equ	0xFDE
 15684                           postdec2	equ	0xFDD
 15685                           fsr2h	equ	0xFDA
 15686                           fsr2l	equ	0xFD9
 15687                           status	equ	0xFD8
 15688                           
 15689 ;; *************** function i2___fttol *****************
 15690 ;; Defined at:
 15691 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
 15692 ;; Parameters:    Size  Location     Type
 15693 ;;  f1              3   54[COMRAM] float 
 15694 ;; Auto vars:     Size  Location     Type
 15695 ;;  __fttol         4   64[COMRAM] unsigned long 
 15696 ;;  __fttol         1   68[COMRAM] unsigned char 
 15697 ;;  __fttol         1   63[COMRAM] unsigned char 
 15698 ;; Return value:  Size  Location     Type
 15699 ;;                  4   54[COMRAM] long 
 15700 ;; Registers used:
 15701 ;;		wreg, status,2, status,0
 15702 ;; Tracked objects:
 15703 ;;		On entry : 0/0
 15704 ;;		On exit  : 0/0
 15705 ;;		Unchanged: 0/0
 15706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15707 ;;      Params:         4       0       0       0       0       0       0
 15708 ;;      Locals:         6       0       0       0       0       0       0
 15709 ;;      Temps:          5       0       0       0       0       0       0
 15710 ;;      Totals:        15       0       0       0       0       0       0
 15711 ;;Total ram usage:       15 bytes
 15712 ;; Hardware stack levels used:    1
 15713 ;; This function calls:
 15714 ;;		Nothing
 15715 ;; This function is called by:
 15716 ;;		i2__doprnt
 15717 ;; This function uses a non-reentrant model
 15718 ;;
 15719                           
 15720                           	psect	text62
 15721  004524                     __ptext62:
 15722                           	opt stack 0
 15723  004524                     i2___fttol:
 15724                           	opt stack 21
 15725                           
 15726                           ;incstack = 0
 15727  004524  C039  F03B         	movff	i2___fttol@f1+2,??i2___fttol
 15728  004528  6A3C               	clrf	(??i2___fttol+1)& (0+255),c
 15729  00452A  6A3D               	clrf	(??i2___fttol+2)& (0+255),c
 15730  00452C  3438               	rlcf	i2___fttol@f1+1,w,c
 15731  00452E  363B               	rlcf	??i2___fttol& (0+255),f,c
 15732  004530  E301               	bnc	u512_41
 15733  004532  803C               	bsf	(??i2___fttol+1)& (0+255),0,c
 15734  004534                     u512_41:
 15735  004534  503B               	movf	??i2___fttol,w,c
 15736  004536  6E45               	movwf	i2___fttol@exp1,c
 15737  004538  5045               	movf	i2___fttol@exp1,w,c
 15738  00453A  A4D8               	btfss	status,2,c
 15739  00453C  D009               	goto	i2l4138
 15740  00453E  0E00               	movlw	0
 15741  004540  6E37               	movwf	?i2___fttol,c
 15742  004542  0E00               	movlw	0
 15743  004544  6E38               	movwf	?i2___fttol+1,c
 15744  004546  0E00               	movlw	0
 15745  004548  6E39               	movwf	?i2___fttol+2,c
 15746  00454A  0E00               	movlw	0
 15747  00454C  6E3A               	movwf	?i2___fttol+3,c
 15748  00454E  0012               	return	
 15749  004550                     i2l4138:
 15750  004550  0E17               	movlw	23
 15751  004552  6E3B               	movwf	??i2___fttol& (0+255),c
 15752  004554  C037  F03C         	movff	i2___fttol@f1,??i2___fttol+1
 15753  004558  C038  F03D         	movff	i2___fttol@f1+1,??i2___fttol+2
 15754  00455C  C039  F03E         	movff	i2___fttol@f1+2,??i2___fttol+3
 15755  004560  283B               	incf	??i2___fttol,w,c
 15756  004562  6E3F               	movwf	(??i2___fttol+4)& (0+255),c
 15757  004564  D004               	goto	i2u514_40
 15758  004566                     i2u514_45:
 15759  004566  90D8               	bcf	status,0,c
 15760  004568  323E               	rrcf	??i2___fttol+3,f,c
 15761  00456A  323D               	rrcf	??i2___fttol+2,f,c
 15762  00456C  323C               	rrcf	??i2___fttol+1,f,c
 15763  00456E                     i2u514_40:
 15764  00456E  2E3F               	decfsz	(??i2___fttol+4)& (0+255),f,c
 15765  004570  D7FA               	goto	i2u514_45
 15766  004572  503C               	movf	??i2___fttol+1,w,c
 15767  004574  6E40               	movwf	i2___fttol@sign1,c
 15768  004576  8E38               	bsf	i2___fttol@f1+1,7,c
 15769  004578  0EFF               	movlw	255
 15770  00457A  1637               	andwf	i2___fttol@f1,f,c
 15771  00457C  0EFF               	movlw	255
 15772  00457E  1638               	andwf	i2___fttol@f1+1,f,c
 15773  004580  0E00               	movlw	0
 15774  004582  1639               	andwf	i2___fttol@f1+2,f,c
 15775  004584  5037               	movf	i2___fttol@f1,w,c
 15776  004586  6E41               	movwf	i2___fttol@lval,c
 15777  004588  5038               	movf	i2___fttol@f1+1,w,c
 15778  00458A  6E42               	movwf	i2___fttol@lval+1,c
 15779  00458C  5039               	movf	i2___fttol@f1+2,w,c
 15780  00458E  6E43               	movwf	i2___fttol@lval+2,c
 15781  004590  6A44               	clrf	i2___fttol@lval+3,c
 15782  004592  0E8E               	movlw	142
 15783  004594  5E45               	subwf	i2___fttol@exp1,f,c
 15784  004596  AE45               	btfss	i2___fttol@exp1,7,c
 15785  004598  D016               	goto	i2l4160
 15786  00459A  5045               	movf	i2___fttol@exp1,w,c
 15787  00459C  0A80               	xorlw	128
 15788  00459E  0F8F               	addlw	143
 15789  0045A0  B0D8               	btfsc	status,0,c
 15790  0045A2  D009               	goto	i2l4156
 15791  0045A4  0E00               	movlw	0
 15792  0045A6  6E37               	movwf	?i2___fttol,c
 15793  0045A8  0E00               	movlw	0
 15794  0045AA  6E38               	movwf	?i2___fttol+1,c
 15795  0045AC  0E00               	movlw	0
 15796  0045AE  6E39               	movwf	?i2___fttol+2,c
 15797  0045B0  0E00               	movlw	0
 15798  0045B2  6E3A               	movwf	?i2___fttol+3,c
 15799  0045B4  0012               	return	
 15800  0045B6                     i2l4156:
 15801  0045B6  90D8               	bcf	status,0,c
 15802  0045B8  3244               	rrcf	i2___fttol@lval+3,f,c
 15803  0045BA  3243               	rrcf	i2___fttol@lval+2,f,c
 15804  0045BC  3242               	rrcf	i2___fttol@lval+1,f,c
 15805  0045BE  3241               	rrcf	i2___fttol@lval,f,c
 15806  0045C0  3E45               	incfsz	i2___fttol@exp1,f,c
 15807  0045C2  D7F9               	goto	i2l4156
 15808  0045C4  D015               	goto	i2l4170
 15809  0045C6                     i2l4160:
 15810  0045C6  0E17               	movlw	23
 15811  0045C8  6445               	cpfsgt	i2___fttol@exp1,c
 15812  0045CA  D00F               	goto	i2l4168
 15813  0045CC  0E00               	movlw	0
 15814  0045CE  6E37               	movwf	?i2___fttol,c
 15815  0045D0  0E00               	movlw	0
 15816  0045D2  6E38               	movwf	?i2___fttol+1,c
 15817  0045D4  0E00               	movlw	0
 15818  0045D6  6E39               	movwf	?i2___fttol+2,c
 15819  0045D8  0E00               	movlw	0
 15820  0045DA  6E3A               	movwf	?i2___fttol+3,c
 15821  0045DC  0012               	return	
 15822  0045DE                     i2l4166:
 15823  0045DE  90D8               	bcf	status,0,c
 15824  0045E0  3641               	rlcf	i2___fttol@lval,f,c
 15825  0045E2  3642               	rlcf	i2___fttol@lval+1,f,c
 15826  0045E4  3643               	rlcf	i2___fttol@lval+2,f,c
 15827  0045E6  3644               	rlcf	i2___fttol@lval+3,f,c
 15828  0045E8  0645               	decf	i2___fttol@exp1,f,c
 15829  0045EA                     i2l4168:
 15830  0045EA  5045               	movf	i2___fttol@exp1,w,c
 15831  0045EC  A4D8               	btfss	status,2,c
 15832  0045EE  D7F7               	goto	i2l4166
 15833  0045F0                     i2l4170:
 15834  0045F0  5040               	movf	i2___fttol@sign1,w,c
 15835  0045F2  B4D8               	btfsc	status,2,c
 15836  0045F4  D008               	goto	i2l4174
 15837  0045F6  1E44               	comf	i2___fttol@lval+3,f,c
 15838  0045F8  1E43               	comf	i2___fttol@lval+2,f,c
 15839  0045FA  1E42               	comf	i2___fttol@lval+1,f,c
 15840  0045FC  6C41               	negf	i2___fttol@lval,c
 15841  0045FE  0E00               	movlw	0
 15842  004600  2242               	addwfc	i2___fttol@lval+1,f,c
 15843  004602  2243               	addwfc	i2___fttol@lval+2,f,c
 15844  004604  2244               	addwfc	i2___fttol@lval+3,f,c
 15845  004606                     i2l4174:
 15846  004606  C041  F037         	movff	i2___fttol@lval,?i2___fttol
 15847  00460A  C042  F038         	movff	i2___fttol@lval+1,?i2___fttol+1
 15848  00460E  C043  F039         	movff	i2___fttol@lval+2,?i2___fttol+2
 15849  004612  C044  F03A         	movff	i2___fttol@lval+3,?i2___fttol+3
 15850  004616  0012               	return	
 15851  004618                     __end_ofi2___fttol:
 15852                           	opt stack 0
 15853                           tosu	equ	0xFFF
 15854                           tosh	equ	0xFFE
 15855                           tosl	equ	0xFFD
 15856                           pclatu	equ	0xFFB
 15857                           pclath	equ	0xFFA
 15858                           tblptru	equ	0xFF8
 15859                           tblptrh	equ	0xFF7
 15860                           tblptrl	equ	0xFF6
 15861                           tablat	equ	0xFF5
 15862                           prodh	equ	0xFF4
 15863                           prodl	equ	0xFF3
 15864                           intcon	equ	0xFF2
 15865                           intcon2	equ	0xFF1
 15866                           postinc0	equ	0xFEE
 15867                           fsr0h	equ	0xFEA
 15868                           fsr0l	equ	0xFE9
 15869                           wreg	equ	0xFE8
 15870                           fsr1h	equ	0xFE2
 15871                           fsr1l	equ	0xFE1
 15872                           indf2	equ	0xFDF
 15873                           postinc2	equ	0xFDE
 15874                           postdec2	equ	0xFDD
 15875                           fsr2h	equ	0xFDA
 15876                           fsr2l	equ	0xFD9
 15877                           status	equ	0xFD8
 15878                           
 15879 ;; *************** function i2___ftsub *****************
 15880 ;; Defined at:
 15881 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
 15882 ;; Parameters:    Size  Location     Type
 15883 ;;  f1              3   32[COMRAM] float 
 15884 ;;  f2              3   35[COMRAM] float 
 15885 ;; Auto vars:     Size  Location     Type
 15886 ;;		None
 15887 ;; Return value:  Size  Location     Type
 15888 ;;                  3   32[COMRAM] float 
 15889 ;; Registers used:
 15890 ;;		wreg, status,2, status,0, cstack
 15891 ;; Tracked objects:
 15892 ;;		On entry : 0/0
 15893 ;;		On exit  : 0/0
 15894 ;;		Unchanged: 0/0
 15895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15896 ;;      Params:         6       0       0       0       0       0       0
 15897 ;;      Locals:         0       0       0       0       0       0       0
 15898 ;;      Temps:          0       0       0       0       0       0       0
 15899 ;;      Totals:         6       0       0       0       0       0       0
 15900 ;;Total ram usage:        6 bytes
 15901 ;; Hardware stack levels used:    1
 15902 ;; Hardware stack levels required when called:    2
 15903 ;; This function calls:
 15904 ;;		i2___ftadd
 15905 ;; This function is called by:
 15906 ;;		i2__doprnt
 15907 ;; This function uses a non-reentrant model
 15908 ;;
 15909                           
 15910                           	psect	text63
 15911  00520E                     __ptext63:
 15912                           	opt stack 0
 15913  00520E                     i2___ftsub:
 15914                           	opt stack 19
 15915                           
 15916                           ;incstack = 0
 15917  00520E  5024               	movf	i2___ftsub@f2,w,c
 15918  005210  1025               	iorwf	i2___ftsub@f2+1,w,c
 15919  005212  1026               	iorwf	i2___ftsub@f2+2,w,c
 15920  005214  B4D8               	btfsc	status,2,c
 15921  005216  D006               	goto	i2l4128
 15922  005218  0E00               	movlw	0
 15923  00521A  1A24               	xorwf	i2___ftsub@f2,f,c
 15924  00521C  0E00               	movlw	0
 15925  00521E  1A25               	xorwf	i2___ftsub@f2+1,f,c
 15926  005220  0E80               	movlw	128
 15927  005222  1A26               	xorwf	i2___ftsub@f2+2,f,c
 15928  005224                     i2l4128:
 15929  005224  C021  F015         	movff	i2___ftsub@f1,i2___ftadd@f1
 15930  005228  C022  F016         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 15931  00522C  C023  F017         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 15932  005230  C024  F018         	movff	i2___ftsub@f2,i2___ftadd@f2
 15933  005234  C025  F019         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 15934  005238  C026  F01A         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 15935  00523C  ECAB  F01C         	call	i2___ftadd	;wreg free
 15936  005240  C015  F021         	movff	?i2___ftadd,?i2___ftsub
 15937  005244  C016  F022         	movff	?i2___ftadd+1,?i2___ftsub+1
 15938  005248  C017  F023         	movff	?i2___ftadd+2,?i2___ftsub+2
 15939  00524C  0012               	return	
 15940  00524E                     __end_ofi2___ftsub:
 15941                           	opt stack 0
 15942                           tosu	equ	0xFFF
 15943                           tosh	equ	0xFFE
 15944                           tosl	equ	0xFFD
 15945                           pclatu	equ	0xFFB
 15946                           pclath	equ	0xFFA
 15947                           tblptru	equ	0xFF8
 15948                           tblptrh	equ	0xFF7
 15949                           tblptrl	equ	0xFF6
 15950                           tablat	equ	0xFF5
 15951                           prodh	equ	0xFF4
 15952                           prodl	equ	0xFF3
 15953                           intcon	equ	0xFF2
 15954                           intcon2	equ	0xFF1
 15955                           postinc0	equ	0xFEE
 15956                           fsr0h	equ	0xFEA
 15957                           fsr0l	equ	0xFE9
 15958                           wreg	equ	0xFE8
 15959                           fsr1h	equ	0xFE2
 15960                           fsr1l	equ	0xFE1
 15961                           indf2	equ	0xFDF
 15962                           postinc2	equ	0xFDE
 15963                           postdec2	equ	0xFDD
 15964                           fsr2h	equ	0xFDA
 15965                           fsr2l	equ	0xFD9
 15966                           status	equ	0xFD8
 15967                           
 15968 ;; *************** function i2___ftadd *****************
 15969 ;; Defined at:
 15970 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
 15971 ;; Parameters:    Size  Location     Type
 15972 ;;  f1              3   20[COMRAM] float 
 15973 ;;  f2              3   23[COMRAM] float 
 15974 ;; Auto vars:     Size  Location     Type
 15975 ;;  __ftadd         1   31[COMRAM] unsigned char 
 15976 ;;  __ftadd         1   30[COMRAM] unsigned char 
 15977 ;;  __ftadd         1   29[COMRAM] unsigned char 
 15978 ;; Return value:  Size  Location     Type
 15979 ;;                  3   20[COMRAM] float 
 15980 ;; Registers used:
 15981 ;;		wreg, status,2, status,0, cstack
 15982 ;; Tracked objects:
 15983 ;;		On entry : 0/0
 15984 ;;		On exit  : 0/0
 15985 ;;		Unchanged: 0/0
 15986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15987 ;;      Params:         6       0       0       0       0       0       0
 15988 ;;      Locals:         3       0       0       0       0       0       0
 15989 ;;      Temps:          3       0       0       0       0       0       0
 15990 ;;      Totals:        12       0       0       0       0       0       0
 15991 ;;Total ram usage:       12 bytes
 15992 ;; Hardware stack levels used:    1
 15993 ;; Hardware stack levels required when called:    1
 15994 ;; This function calls:
 15995 ;;		i2___ftpack
 15996 ;; This function is called by:
 15997 ;;		_INT0_ISR
 15998 ;;		i2__doprnt
 15999 ;;		i2___ftsub
 16000 ;; This function uses a non-reentrant model
 16001 ;;
 16002                           
 16003                           	psect	text64
 16004  003956                     __ptext64:
 16005                           	opt stack 0
 16006  003956                     i2___ftadd:
 16007                           	opt stack 22
 16008                           
 16009                           ;incstack = 0
 16010  003956  C017  F01B         	movff	i2___ftadd@f1+2,??i2___ftadd
 16011  00395A  6A1C               	clrf	(??i2___ftadd+1)& (0+255),c
 16012  00395C  6A1D               	clrf	(??i2___ftadd+2)& (0+255),c
 16013  00395E  3416               	rlcf	i2___ftadd@f1+1,w,c
 16014  003960  361B               	rlcf	??i2___ftadd& (0+255),f,c
 16015  003962  E301               	bnc	u413_41
 16016  003964  801C               	bsf	(??i2___ftadd+1)& (0+255),0,c
 16017  003966                     u413_41:
 16018  003966  501B               	movf	??i2___ftadd,w,c
 16019  003968  6E20               	movwf	i2___ftadd@exp1,c
 16020  00396A  C01A  F01B         	movff	i2___ftadd@f2+2,??i2___ftadd
 16021  00396E  6A1C               	clrf	(??i2___ftadd+1)& (0+255),c
 16022  003970  6A1D               	clrf	(??i2___ftadd+2)& (0+255),c
 16023  003972  3419               	rlcf	i2___ftadd@f2+1,w,c
 16024  003974  361B               	rlcf	??i2___ftadd& (0+255),f,c
 16025  003976  E301               	bnc	u414_41
 16026  003978  801C               	bsf	(??i2___ftadd+1)& (0+255),0,c
 16027  00397A                     u414_41:
 16028  00397A  501B               	movf	??i2___ftadd,w,c
 16029  00397C  6E1F               	movwf	i2___ftadd@exp2,c
 16030  00397E  5020               	movf	i2___ftadd@exp1,w,c
 16031  003980  B4D8               	btfsc	status,2,c
 16032  003982  D00B               	goto	i2l722
 16033  003984  501F               	movf	i2___ftadd@exp2,w,c
 16034  003986  5C20               	subwf	i2___ftadd@exp1,w,c
 16035  003988  B0D8               	btfsc	status,0,c
 16036  00398A  D00E               	goto	i2l3590
 16037  00398C  5020               	movf	i2___ftadd@exp1,w,c
 16038  00398E  0800               	sublw	0
 16039  003990  241F               	addwf	i2___ftadd@exp2,w,c
 16040  003992  6E1B               	movwf	??i2___ftadd& (0+255),c
 16041  003994  0E18               	movlw	24
 16042  003996  641B               	cpfsgt	??i2___ftadd,c
 16043  003998  D007               	goto	i2l3590
 16044  00399A                     i2l722:
 16045  00399A  C018  F015         	movff	i2___ftadd@f2,?i2___ftadd
 16046  00399E  C019  F016         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 16047  0039A2  C01A  F017         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 16048  0039A6  0012               	return	
 16049  0039A8                     i2l3590:
 16050  0039A8  501F               	movf	i2___ftadd@exp2,w,c
 16051  0039AA  B4D8               	btfsc	status,2,c
 16052  0039AC  D00B               	goto	i2l726
 16053  0039AE  5020               	movf	i2___ftadd@exp1,w,c
 16054  0039B0  5C1F               	subwf	i2___ftadd@exp2,w,c
 16055  0039B2  B0D8               	btfsc	status,0,c
 16056  0039B4  D00E               	goto	i2l3596
 16057  0039B6  501F               	movf	i2___ftadd@exp2,w,c
 16058  0039B8  0800               	sublw	0
 16059  0039BA  2420               	addwf	i2___ftadd@exp1,w,c
 16060  0039BC  6E1B               	movwf	??i2___ftadd& (0+255),c
 16061  0039BE  0E18               	movlw	24
 16062  0039C0  641B               	cpfsgt	??i2___ftadd,c
 16063  0039C2  D007               	goto	i2l3596
 16064  0039C4                     i2l726:
 16065  0039C4  C015  F015         	movff	i2___ftadd@f1,?i2___ftadd
 16066  0039C8  C016  F016         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 16067  0039CC  C017  F017         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 16068  0039D0  0012               	return	
 16069  0039D2                     i2l3596:
 16070  0039D2  0E06               	movlw	6
 16071  0039D4  6E1E               	movwf	i2___ftadd@sign,c
 16072  0039D6  BE17               	btfsc	i2___ftadd@f1+2,7,c
 16073  0039D8  8E1E               	bsf	i2___ftadd@sign,7,c
 16074  0039DA  BE1A               	btfsc	i2___ftadd@f2+2,7,c
 16075  0039DC  8C1E               	bsf	i2___ftadd@sign,6,c
 16076  0039DE  8E16               	bsf	i2___ftadd@f1+1,7,c
 16077  0039E0  0EFF               	movlw	255
 16078  0039E2  1615               	andwf	i2___ftadd@f1,f,c
 16079  0039E4  0EFF               	movlw	255
 16080  0039E6  1616               	andwf	i2___ftadd@f1+1,f,c
 16081  0039E8  0E00               	movlw	0
 16082  0039EA  1617               	andwf	i2___ftadd@f1+2,f,c
 16083  0039EC  8E19               	bsf	i2___ftadd@f2+1,7,c
 16084  0039EE  0EFF               	movlw	255
 16085  0039F0  1618               	andwf	i2___ftadd@f2,f,c
 16086  0039F2  0EFF               	movlw	255
 16087  0039F4  1619               	andwf	i2___ftadd@f2+1,f,c
 16088  0039F6  0E00               	movlw	0
 16089  0039F8  161A               	andwf	i2___ftadd@f2+2,f,c
 16090  0039FA  501F               	movf	i2___ftadd@exp2,w,c
 16091  0039FC  5C20               	subwf	i2___ftadd@exp1,w,c
 16092  0039FE  B0D8               	btfsc	status,0,c
 16093  003A00  D01B               	goto	i2l3622
 16094  003A02                     i2l3612:
 16095  003A02  90D8               	bcf	status,0,c
 16096  003A04  3618               	rlcf	i2___ftadd@f2,f,c
 16097  003A06  3619               	rlcf	i2___ftadd@f2+1,f,c
 16098  003A08  361A               	rlcf	i2___ftadd@f2+2,f,c
 16099  003A0A  061F               	decf	i2___ftadd@exp2,f,c
 16100  003A0C  5020               	movf	i2___ftadd@exp1,w,c
 16101  003A0E  181F               	xorwf	i2___ftadd@exp2,w,c
 16102  003A10  B4D8               	btfsc	status,2,c
 16103  003A12  D00D               	goto	i2l3620
 16104  003A14  061E               	decf	i2___ftadd@sign,f,c
 16105  003A16  C01E  F01B         	movff	i2___ftadd@sign,??i2___ftadd
 16106  003A1A  0E07               	movlw	7
 16107  003A1C  161B               	andwf	??i2___ftadd,f,c
 16108  003A1E  B4D8               	btfsc	status,2,c
 16109  003A20  D006               	goto	i2l3620
 16110  003A22  D7EF               	goto	i2l3612
 16111  003A24                     i2l3618:
 16112  003A24  90D8               	bcf	status,0,c
 16113  003A26  3217               	rrcf	i2___ftadd@f1+2,f,c
 16114  003A28  3216               	rrcf	i2___ftadd@f1+1,f,c
 16115  003A2A  3215               	rrcf	i2___ftadd@f1,f,c
 16116  003A2C  2A20               	incf	i2___ftadd@exp1,f,c
 16117  003A2E                     i2l3620:
 16118  003A2E  501F               	movf	i2___ftadd@exp2,w,c
 16119  003A30  1820               	xorwf	i2___ftadd@exp1,w,c
 16120  003A32  B4D8               	btfsc	status,2,c
 16121  003A34  D01F               	goto	i2l737
 16122  003A36  D7F6               	goto	i2l3618
 16123  003A38                     i2l3622:
 16124  003A38  5020               	movf	i2___ftadd@exp1,w,c
 16125  003A3A  5C1F               	subwf	i2___ftadd@exp2,w,c
 16126  003A3C  B0D8               	btfsc	status,0,c
 16127  003A3E  D01A               	goto	i2l737
 16128  003A40                     i2l3624:
 16129  003A40  90D8               	bcf	status,0,c
 16130  003A42  3615               	rlcf	i2___ftadd@f1,f,c
 16131  003A44  3616               	rlcf	i2___ftadd@f1+1,f,c
 16132  003A46  3617               	rlcf	i2___ftadd@f1+2,f,c
 16133  003A48  0620               	decf	i2___ftadd@exp1,f,c
 16134  003A4A  5020               	movf	i2___ftadd@exp1,w,c
 16135  003A4C  181F               	xorwf	i2___ftadd@exp2,w,c
 16136  003A4E  B4D8               	btfsc	status,2,c
 16137  003A50  D00D               	goto	i2l3632
 16138  003A52  061E               	decf	i2___ftadd@sign,f,c
 16139  003A54  C01E  F01B         	movff	i2___ftadd@sign,??i2___ftadd
 16140  003A58  0E07               	movlw	7
 16141  003A5A  161B               	andwf	??i2___ftadd,f,c
 16142  003A5C  B4D8               	btfsc	status,2,c
 16143  003A5E  D006               	goto	i2l3632
 16144  003A60  D7EF               	goto	i2l3624
 16145  003A62                     i2l3630:
 16146  003A62  90D8               	bcf	status,0,c
 16147  003A64  321A               	rrcf	i2___ftadd@f2+2,f,c
 16148  003A66  3219               	rrcf	i2___ftadd@f2+1,f,c
 16149  003A68  3218               	rrcf	i2___ftadd@f2,f,c
 16150  003A6A  2A1F               	incf	i2___ftadd@exp2,f,c
 16151  003A6C                     i2l3632:
 16152  003A6C  501F               	movf	i2___ftadd@exp2,w,c
 16153  003A6E  1820               	xorwf	i2___ftadd@exp1,w,c
 16154  003A70  A4D8               	btfss	status,2,c
 16155  003A72  D7F7               	goto	i2l3630
 16156  003A74                     i2l737:
 16157  003A74  AE1E               	btfss	i2___ftadd@sign,7,c
 16158  003A76  D00C               	goto	i2l746
 16159  003A78  0EFF               	movlw	255
 16160  003A7A  1A15               	xorwf	i2___ftadd@f1,f,c
 16161  003A7C  0EFF               	movlw	255
 16162  003A7E  1A16               	xorwf	i2___ftadd@f1+1,f,c
 16163  003A80  0EFF               	movlw	255
 16164  003A82  1A17               	xorwf	i2___ftadd@f1+2,f,c
 16165  003A84  0E01               	movlw	1
 16166  003A86  2615               	addwf	i2___ftadd@f1,f,c
 16167  003A88  0E00               	movlw	0
 16168  003A8A  2216               	addwfc	i2___ftadd@f1+1,f,c
 16169  003A8C  0E00               	movlw	0
 16170  003A8E  2217               	addwfc	i2___ftadd@f1+2,f,c
 16171  003A90                     i2l746:
 16172  003A90  AC1E               	btfss	i2___ftadd@sign,6,c
 16173  003A92  D00C               	goto	i2l3638
 16174  003A94  0EFF               	movlw	255
 16175  003A96  1A18               	xorwf	i2___ftadd@f2,f,c
 16176  003A98  0EFF               	movlw	255
 16177  003A9A  1A19               	xorwf	i2___ftadd@f2+1,f,c
 16178  003A9C  0EFF               	movlw	255
 16179  003A9E  1A1A               	xorwf	i2___ftadd@f2+2,f,c
 16180  003AA0  0E01               	movlw	1
 16181  003AA2  2618               	addwf	i2___ftadd@f2,f,c
 16182  003AA4  0E00               	movlw	0
 16183  003AA6  2219               	addwfc	i2___ftadd@f2+1,f,c
 16184  003AA8  0E00               	movlw	0
 16185  003AAA  221A               	addwfc	i2___ftadd@f2+2,f,c
 16186  003AAC                     i2l3638:
 16187  003AAC  0E00               	movlw	0
 16188  003AAE  6E1E               	movwf	i2___ftadd@sign,c
 16189  003AB0  5015               	movf	i2___ftadd@f1,w,c
 16190  003AB2  2618               	addwf	i2___ftadd@f2,f,c
 16191  003AB4  5016               	movf	i2___ftadd@f1+1,w,c
 16192  003AB6  2219               	addwfc	i2___ftadd@f2+1,f,c
 16193  003AB8  5017               	movf	i2___ftadd@f1+2,w,c
 16194  003ABA  221A               	addwfc	i2___ftadd@f2+2,f,c
 16195  003ABC  AE1A               	btfss	i2___ftadd@f2+2,7,c
 16196  003ABE  D00E               	goto	i2l3648
 16197  003AC0  0EFF               	movlw	255
 16198  003AC2  1A18               	xorwf	i2___ftadd@f2,f,c
 16199  003AC4  0EFF               	movlw	255
 16200  003AC6  1A19               	xorwf	i2___ftadd@f2+1,f,c
 16201  003AC8  0EFF               	movlw	255
 16202  003ACA  1A1A               	xorwf	i2___ftadd@f2+2,f,c
 16203  003ACC  0E01               	movlw	1
 16204  003ACE  2618               	addwf	i2___ftadd@f2,f,c
 16205  003AD0  0E00               	movlw	0
 16206  003AD2  2219               	addwfc	i2___ftadd@f2+1,f,c
 16207  003AD4  0E00               	movlw	0
 16208  003AD6  221A               	addwfc	i2___ftadd@f2+2,f,c
 16209  003AD8  0E01               	movlw	1
 16210  003ADA  6E1E               	movwf	i2___ftadd@sign,c
 16211  003ADC                     i2l3648:
 16212  003ADC  C018  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 16213  003AE0  C019  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 16214  003AE4  C01A  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 16215  003AE8  C020  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 16216  003AEC  C01E  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 16217  003AF0  ECA0  F024         	call	i2___ftpack	;wreg free
 16218  003AF4  C001  F015         	movff	?i2___ftpack,?i2___ftadd
 16219  003AF8  C002  F016         	movff	?i2___ftpack+1,?i2___ftadd+1
 16220  003AFC  C003  F017         	movff	?i2___ftpack+2,?i2___ftadd+2
 16221  003B00  0012               	return	
 16222  003B02                     __end_ofi2___ftadd:
 16223                           	opt stack 0
 16224                           tosu	equ	0xFFF
 16225                           tosh	equ	0xFFE
 16226                           tosl	equ	0xFFD
 16227                           pclatu	equ	0xFFB
 16228                           pclath	equ	0xFFA
 16229                           tblptru	equ	0xFF8
 16230                           tblptrh	equ	0xFF7
 16231                           tblptrl	equ	0xFF6
 16232                           tablat	equ	0xFF5
 16233                           prodh	equ	0xFF4
 16234                           prodl	equ	0xFF3
 16235                           intcon	equ	0xFF2
 16236                           intcon2	equ	0xFF1
 16237                           postinc0	equ	0xFEE
 16238                           fsr0h	equ	0xFEA
 16239                           fsr0l	equ	0xFE9
 16240                           wreg	equ	0xFE8
 16241                           fsr1h	equ	0xFE2
 16242                           fsr1l	equ	0xFE1
 16243                           indf2	equ	0xFDF
 16244                           postinc2	equ	0xFDE
 16245                           postdec2	equ	0xFDD
 16246                           fsr2h	equ	0xFDA
 16247                           fsr2l	equ	0xFD9
 16248                           status	equ	0xFD8
 16249                           
 16250 ;; *************** function i2___ftneg *****************
 16251 ;; Defined at:
 16252 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
 16253 ;; Parameters:    Size  Location     Type
 16254 ;;  f1              3    0[COMRAM] float 
 16255 ;; Auto vars:     Size  Location     Type
 16256 ;;		None
 16257 ;; Return value:  Size  Location     Type
 16258 ;;                  3    0[COMRAM] float 
 16259 ;; Registers used:
 16260 ;;		wreg, status,2, status,0
 16261 ;; Tracked objects:
 16262 ;;		On entry : 0/0
 16263 ;;		On exit  : 0/0
 16264 ;;		Unchanged: 0/0
 16265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16266 ;;      Params:         3       0       0       0       0       0       0
 16267 ;;      Locals:         0       0       0       0       0       0       0
 16268 ;;      Temps:          0       0       0       0       0       0       0
 16269 ;;      Totals:         3       0       0       0       0       0       0
 16270 ;;Total ram usage:        3 bytes
 16271 ;; Hardware stack levels used:    1
 16272 ;; This function calls:
 16273 ;;		Nothing
 16274 ;; This function is called by:
 16275 ;;		i2__doprnt
 16276 ;; This function uses a non-reentrant model
 16277 ;;
 16278                           
 16279                           	psect	text65
 16280  0053F8                     __ptext65:
 16281                           	opt stack 0
 16282  0053F8                     i2___ftneg:
 16283                           	opt stack 21
 16284                           
 16285                           ;incstack = 0
 16286  0053F8  5001               	movf	i2___ftneg@f1,w,c
 16287  0053FA  1002               	iorwf	i2___ftneg@f1+1,w,c
 16288  0053FC  1003               	iorwf	i2___ftneg@f1+2,w,c
 16289  0053FE  B4D8               	btfsc	status,2,c
 16290  005400  D006               	goto	i2l796
 16291  005402  0E00               	movlw	0
 16292  005404  1A01               	xorwf	i2___ftneg@f1,f,c
 16293  005406  0E00               	movlw	0
 16294  005408  1A02               	xorwf	i2___ftneg@f1+1,f,c
 16295  00540A  0E80               	movlw	128
 16296  00540C  1A03               	xorwf	i2___ftneg@f1+2,f,c
 16297  00540E                     i2l796:
 16298  00540E  C001  F001         	movff	i2___ftneg@f1,?i2___ftneg
 16299  005412  C002  F002         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 16300  005416  C003  F003         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 16301  00541A  0012               	return		;funcret
 16302  00541C                     __end_ofi2___ftneg:
 16303                           	opt stack 0
 16304                           tosu	equ	0xFFF
 16305                           tosh	equ	0xFFE
 16306                           tosl	equ	0xFFD
 16307                           pclatu	equ	0xFFB
 16308                           pclath	equ	0xFFA
 16309                           tblptru	equ	0xFF8
 16310                           tblptrh	equ	0xFF7
 16311                           tblptrl	equ	0xFF6
 16312                           tablat	equ	0xFF5
 16313                           prodh	equ	0xFF4
 16314                           prodl	equ	0xFF3
 16315                           intcon	equ	0xFF2
 16316                           intcon2	equ	0xFF1
 16317                           postinc0	equ	0xFEE
 16318                           fsr0h	equ	0xFEA
 16319                           fsr0l	equ	0xFE9
 16320                           wreg	equ	0xFE8
 16321                           fsr1h	equ	0xFE2
 16322                           fsr1l	equ	0xFE1
 16323                           indf2	equ	0xFDF
 16324                           postinc2	equ	0xFDE
 16325                           postdec2	equ	0xFDD
 16326                           fsr2h	equ	0xFDA
 16327                           fsr2l	equ	0xFD9
 16328                           status	equ	0xFD8
 16329                           
 16330 ;; *************** function i2___ftge *****************
 16331 ;; Defined at:
 16332 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
 16333 ;; Parameters:    Size  Location     Type
 16334 ;;  ff1             3    0[COMRAM] float 
 16335 ;;  ff2             3    3[COMRAM] float 
 16336 ;; Auto vars:     Size  Location     Type
 16337 ;;		None
 16338 ;; Return value:  Size  Location     Type
 16339 ;;		None               void
 16340 ;; Registers used:
 16341 ;;		wreg, status,2, status,0
 16342 ;; Tracked objects:
 16343 ;;		On entry : 0/0
 16344 ;;		On exit  : 0/0
 16345 ;;		Unchanged: 0/0
 16346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16347 ;;      Params:         6       0       0       0       0       0       0
 16348 ;;      Locals:         0       0       0       0       0       0       0
 16349 ;;      Temps:          3       0       0       0       0       0       0
 16350 ;;      Totals:         9       0       0       0       0       0       0
 16351 ;;Total ram usage:        9 bytes
 16352 ;; Hardware stack levels used:    1
 16353 ;; This function calls:
 16354 ;;		Nothing
 16355 ;; This function is called by:
 16356 ;;		i2__doprnt
 16357 ;; This function uses a non-reentrant model
 16358 ;;
 16359                           
 16360                           	psect	text66
 16361  004BD2                     __ptext66:
 16362                           	opt stack 0
 16363  004BD2                     i2___ftge:
 16364                           	opt stack 21
 16365                           
 16366                           ;incstack = 0
 16367  004BD2  AE03               	btfss	i2___ftge@ff1+2,7,c
 16368  004BD4  D016               	goto	i2l4106
 16369  004BD6  C001  F007         	movff	i2___ftge@ff1,??i2___ftge
 16370  004BDA  C002  F008         	movff	i2___ftge@ff1+1,??i2___ftge+1
 16371  004BDE  C003  F009         	movff	i2___ftge@ff1+2,??i2___ftge+2
 16372  004BE2  1E07               	comf	??i2___ftge,f,c
 16373  004BE4  1E08               	comf	??i2___ftge+1,f,c
 16374  004BE6  1E09               	comf	??i2___ftge+2,f,c
 16375  004BE8  2A07               	incf	??i2___ftge,f,c
 16376  004BEA  0E00               	movlw	0
 16377  004BEC  2208               	addwfc	??i2___ftge+1,f,c
 16378  004BEE  2209               	addwfc	??i2___ftge+2,f,c
 16379  004BF0  0E00               	movlw	0
 16380  004BF2  2407               	addwf	??i2___ftge,w,c
 16381  004BF4  6E01               	movwf	i2___ftge@ff1,c
 16382  004BF6  0E00               	movlw	0
 16383  004BF8  2008               	addwfc	??i2___ftge+1,w,c
 16384  004BFA  6E02               	movwf	i2___ftge@ff1+1,c
 16385  004BFC  0E80               	movlw	128
 16386  004BFE  2009               	addwfc	??i2___ftge+2,w,c
 16387  004C00  6E03               	movwf	i2___ftge@ff1+2,c
 16388  004C02                     i2l4106:
 16389  004C02  AE06               	btfss	i2___ftge@ff2+2,7,c
 16390  004C04  D016               	goto	i2l4110
 16391  004C06  C004  F007         	movff	i2___ftge@ff2,??i2___ftge
 16392  004C0A  C005  F008         	movff	i2___ftge@ff2+1,??i2___ftge+1
 16393  004C0E  C006  F009         	movff	i2___ftge@ff2+2,??i2___ftge+2
 16394  004C12  1E07               	comf	??i2___ftge,f,c
 16395  004C14  1E08               	comf	??i2___ftge+1,f,c
 16396  004C16  1E09               	comf	??i2___ftge+2,f,c
 16397  004C18  2A07               	incf	??i2___ftge,f,c
 16398  004C1A  0E00               	movlw	0
 16399  004C1C  2208               	addwfc	??i2___ftge+1,f,c
 16400  004C1E  2209               	addwfc	??i2___ftge+2,f,c
 16401  004C20  0E00               	movlw	0
 16402  004C22  2407               	addwf	??i2___ftge,w,c
 16403  004C24  6E04               	movwf	i2___ftge@ff2,c
 16404  004C26  0E00               	movlw	0
 16405  004C28  2008               	addwfc	??i2___ftge+1,w,c
 16406  004C2A  6E05               	movwf	i2___ftge@ff2+1,c
 16407  004C2C  0E80               	movlw	128
 16408  004C2E  2009               	addwfc	??i2___ftge+2,w,c
 16409  004C30  6E06               	movwf	i2___ftge@ff2+2,c
 16410  004C32                     i2l4110:
 16411  004C32  0E00               	movlw	0
 16412  004C34  1A01               	xorwf	i2___ftge@ff1,f,c
 16413  004C36  0E00               	movlw	0
 16414  004C38  1A02               	xorwf	i2___ftge@ff1+1,f,c
 16415  004C3A  0E80               	movlw	128
 16416  004C3C  1A03               	xorwf	i2___ftge@ff1+2,f,c
 16417  004C3E  0E00               	movlw	0
 16418  004C40  1A04               	xorwf	i2___ftge@ff2,f,c
 16419  004C42  0E00               	movlw	0
 16420  004C44  1A05               	xorwf	i2___ftge@ff2+1,f,c
 16421  004C46  0E80               	movlw	128
 16422  004C48  1A06               	xorwf	i2___ftge@ff2+2,f,c
 16423  004C4A  5004               	movf	i2___ftge@ff2,w,c
 16424  004C4C  5C01               	subwf	i2___ftge@ff1,w,c
 16425  004C4E  5005               	movf	i2___ftge@ff2+1,w,c
 16426  004C50  5802               	subwfb	i2___ftge@ff1+1,w,c
 16427  004C52  5006               	movf	i2___ftge@ff2+2,w,c
 16428  004C54  5803               	subwfb	i2___ftge@ff1+2,w,c
 16429  004C56  B0D8               	btfsc	status,0,c
 16430  004C58  D002               	goto	i2l4116
 16431  004C5A  90D8               	bcf	status,0,c
 16432  004C5C  0012               	return	
 16433  004C5E                     i2l4116:
 16434  004C5E  80D8               	bsf	status,0,c
 16435  004C60  0012               	return	
 16436  004C62                     __end_ofi2___ftge:
 16437                           	opt stack 0
 16438                           tosu	equ	0xFFF
 16439                           tosh	equ	0xFFE
 16440                           tosl	equ	0xFFD
 16441                           pclatu	equ	0xFFB
 16442                           pclath	equ	0xFFA
 16443                           tblptru	equ	0xFF8
 16444                           tblptrh	equ	0xFF7
 16445                           tblptrl	equ	0xFF6
 16446                           tablat	equ	0xFF5
 16447                           prodh	equ	0xFF4
 16448                           prodl	equ	0xFF3
 16449                           intcon	equ	0xFF2
 16450                           intcon2	equ	0xFF1
 16451                           postinc0	equ	0xFEE
 16452                           fsr0h	equ	0xFEA
 16453                           fsr0l	equ	0xFE9
 16454                           wreg	equ	0xFE8
 16455                           fsr1h	equ	0xFE2
 16456                           fsr1l	equ	0xFE1
 16457                           indf2	equ	0xFDF
 16458                           postinc2	equ	0xFDE
 16459                           postdec2	equ	0xFDD
 16460                           fsr2h	equ	0xFDA
 16461                           fsr2l	equ	0xFD9
 16462                           status	equ	0xFD8
 16463                           
 16464 ;; *************** function ___lwtoft *****************
 16465 ;; Defined at:
 16466 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
 16467 ;; Parameters:    Size  Location     Type
 16468 ;;  c               2    8[COMRAM] unsigned int 
 16469 ;; Auto vars:     Size  Location     Type
 16470 ;;		None
 16471 ;; Return value:  Size  Location     Type
 16472 ;;                  3    8[COMRAM] float 
 16473 ;; Registers used:
 16474 ;;		wreg, status,2, status,0, cstack
 16475 ;; Tracked objects:
 16476 ;;		On entry : 0/0
 16477 ;;		On exit  : 0/0
 16478 ;;		Unchanged: 0/0
 16479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16480 ;;      Params:         3       0       0       0       0       0       0
 16481 ;;      Locals:         0       0       0       0       0       0       0
 16482 ;;      Temps:          0       0       0       0       0       0       0
 16483 ;;      Totals:         3       0       0       0       0       0       0
 16484 ;;Total ram usage:        3 bytes
 16485 ;; Hardware stack levels used:    1
 16486 ;; Hardware stack levels required when called:    1
 16487 ;; This function calls:
 16488 ;;		i2___ftpack
 16489 ;; This function is called by:
 16490 ;;		_INT0_ISR
 16491 ;; This function uses a non-reentrant model
 16492 ;;
 16493                           
 16494                           	psect	text67
 16495  00541C                     __ptext67:
 16496                           	opt stack 0
 16497  00541C                     ___lwtoft:
 16498                           	opt stack 22
 16499                           
 16500                           ;incstack = 0
 16501  00541C  C009  F001         	movff	___lwtoft@c,i2___ftpack@arg
 16502  005420  C00A  F002         	movff	___lwtoft@c+1,i2___ftpack@arg+1
 16503  005424  6A03               	clrf	i2___ftpack@arg+2,c
 16504  005426  0E8E               	movlw	142
 16505  005428  6E04               	movwf	i2___ftpack@exp,c
 16506  00542A  0E00               	movlw	0
 16507  00542C  6E05               	movwf	i2___ftpack@sign,c
 16508  00542E  ECA0  F024         	call	i2___ftpack	;wreg free
 16509  005432  C001  F009         	movff	?i2___ftpack,?___lwtoft
 16510  005436  C002  F00A         	movff	?i2___ftpack+1,?___lwtoft+1
 16511  00543A  C003  F00B         	movff	?i2___ftpack+2,?___lwtoft+2
 16512  00543E  0012               	return	
 16513  005440                     __end_of___lwtoft:
 16514                           	opt stack 0
 16515                           tosu	equ	0xFFF
 16516                           tosh	equ	0xFFE
 16517                           tosl	equ	0xFFD
 16518                           pclatu	equ	0xFFB
 16519                           pclath	equ	0xFFA
 16520                           tblptru	equ	0xFF8
 16521                           tblptrh	equ	0xFF7
 16522                           tblptrl	equ	0xFF6
 16523                           tablat	equ	0xFF5
 16524                           prodh	equ	0xFF4
 16525                           prodl	equ	0xFF3
 16526                           intcon	equ	0xFF2
 16527                           intcon2	equ	0xFF1
 16528                           postinc0	equ	0xFEE
 16529                           fsr0h	equ	0xFEA
 16530                           fsr0l	equ	0xFE9
 16531                           wreg	equ	0xFE8
 16532                           fsr1h	equ	0xFE2
 16533                           fsr1l	equ	0xFE1
 16534                           indf2	equ	0xFDF
 16535                           postinc2	equ	0xFDE
 16536                           postdec2	equ	0xFDD
 16537                           fsr2h	equ	0xFDA
 16538                           fsr2l	equ	0xFD9
 16539                           status	equ	0xFD8
 16540                           
 16541 ;; *************** function ___ftdiv *****************
 16542 ;; Defined at:
 16543 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
 16544 ;; Parameters:    Size  Location     Type
 16545 ;;  f1              3   47[COMRAM] float 
 16546 ;;  f2              3   50[COMRAM] float 
 16547 ;; Auto vars:     Size  Location     Type
 16548 ;;  f3              3   57[COMRAM] float 
 16549 ;;  sign            1   61[COMRAM] unsigned char 
 16550 ;;  exp             1   60[COMRAM] unsigned char 
 16551 ;;  cntr            1   56[COMRAM] unsigned char 
 16552 ;; Return value:  Size  Location     Type
 16553 ;;                  3   47[COMRAM] float 
 16554 ;; Registers used:
 16555 ;;		wreg, status,2, status,0, cstack
 16556 ;; Tracked objects:
 16557 ;;		On entry : 0/0
 16558 ;;		On exit  : 0/0
 16559 ;;		Unchanged: 0/0
 16560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16561 ;;      Params:         6       0       0       0       0       0       0
 16562 ;;      Locals:         6       0       0       0       0       0       0
 16563 ;;      Temps:          3       0       0       0       0       0       0
 16564 ;;      Totals:        15       0       0       0       0       0       0
 16565 ;;Total ram usage:       15 bytes
 16566 ;; Hardware stack levels used:    1
 16567 ;; Hardware stack levels required when called:    1
 16568 ;; This function calls:
 16569 ;;		i2___ftpack
 16570 ;; This function is called by:
 16571 ;;		_INT0_ISR
 16572 ;; This function uses a non-reentrant model
 16573 ;;
 16574                           
 16575                           	psect	text68
 16576  004618                     __ptext68:
 16577                           	opt stack 0
 16578  004618                     ___ftdiv:
 16579                           	opt stack 22
 16580                           
 16581                           ;incstack = 0
 16582  004618  C032  F036         	movff	___ftdiv@f1+2,??___ftdiv
 16583  00461C  6A37               	clrf	(??___ftdiv+1)& (0+255),c
 16584  00461E  6A38               	clrf	(??___ftdiv+2)& (0+255),c
 16585  004620  3431               	rlcf	___ftdiv@f1+1,w,c
 16586  004622  3636               	rlcf	??___ftdiv& (0+255),f,c
 16587  004624  E301               	bnc	u752_41
 16588  004626  8037               	bsf	(??___ftdiv+1)& (0+255),0,c
 16589  004628                     u752_41:
 16590  004628  5036               	movf	??___ftdiv,w,c
 16591  00462A  6E3D               	movwf	___ftdiv@exp,c
 16592  00462C  503D               	movf	___ftdiv@exp,w,c
 16593  00462E  A4D8               	btfss	status,2,c
 16594  004630  D007               	goto	i2l5438
 16595  004632  0E00               	movlw	0
 16596  004634  6E30               	movwf	?___ftdiv,c
 16597  004636  0E00               	movlw	0
 16598  004638  6E31               	movwf	?___ftdiv+1,c
 16599  00463A  0E00               	movlw	0
 16600  00463C  6E32               	movwf	?___ftdiv+2,c
 16601  00463E  0012               	return	
 16602  004640                     i2l5438:
 16603  004640  C035  F036         	movff	___ftdiv@f2+2,??___ftdiv
 16604  004644  6A37               	clrf	(??___ftdiv+1)& (0+255),c
 16605  004646  6A38               	clrf	(??___ftdiv+2)& (0+255),c
 16606  004648  3434               	rlcf	___ftdiv@f2+1,w,c
 16607  00464A  3636               	rlcf	??___ftdiv& (0+255),f,c
 16608  00464C  E301               	bnc	u754_41
 16609  00464E  8037               	bsf	(??___ftdiv+1)& (0+255),0,c
 16610  004650                     u754_41:
 16611  004650  5036               	movf	??___ftdiv,w,c
 16612  004652  6E3E               	movwf	___ftdiv@sign,c
 16613  004654  503E               	movf	___ftdiv@sign,w,c
 16614  004656  A4D8               	btfss	status,2,c
 16615  004658  D007               	goto	i2l5444
 16616  00465A  0E00               	movlw	0
 16617  00465C  6E30               	movwf	?___ftdiv,c
 16618  00465E  0E00               	movlw	0
 16619  004660  6E31               	movwf	?___ftdiv+1,c
 16620  004662  0E00               	movlw	0
 16621  004664  6E32               	movwf	?___ftdiv+2,c
 16622  004666  0012               	return	
 16623  004668                     i2l5444:
 16624  004668  0E00               	movlw	0
 16625  00466A  6E3A               	movwf	___ftdiv@f3,c
 16626  00466C  0E00               	movlw	0
 16627  00466E  6E3B               	movwf	___ftdiv@f3+1,c
 16628  004670  0E00               	movlw	0
 16629  004672  6E3C               	movwf	___ftdiv@f3+2,c
 16630  004674  503E               	movf	___ftdiv@sign,w,c
 16631  004676  0F89               	addlw	137
 16632  004678  5E3D               	subwf	___ftdiv@exp,f,c
 16633  00467A  C032  F03E         	movff	___ftdiv@f1+2,___ftdiv@sign
 16634  00467E  5035               	movf	___ftdiv@f2+2,w,c
 16635  004680  1A3E               	xorwf	___ftdiv@sign,f,c
 16636  004682  0E80               	movlw	128
 16637  004684  163E               	andwf	___ftdiv@sign,f,c
 16638  004686  8E31               	bsf	___ftdiv@f1+1,7,c
 16639  004688  0EFF               	movlw	255
 16640  00468A  1630               	andwf	___ftdiv@f1,f,c
 16641  00468C  0EFF               	movlw	255
 16642  00468E  1631               	andwf	___ftdiv@f1+1,f,c
 16643  004690  0E00               	movlw	0
 16644  004692  1632               	andwf	___ftdiv@f1+2,f,c
 16645  004694  8E34               	bsf	___ftdiv@f2+1,7,c
 16646  004696  0EFF               	movlw	255
 16647  004698  1633               	andwf	___ftdiv@f2,f,c
 16648  00469A  0EFF               	movlw	255
 16649  00469C  1634               	andwf	___ftdiv@f2+1,f,c
 16650  00469E  0E00               	movlw	0
 16651  0046A0  1635               	andwf	___ftdiv@f2+2,f,c
 16652  0046A2  0E18               	movlw	24
 16653  0046A4  6E39               	movwf	___ftdiv@cntr,c
 16654  0046A6                     i2l5464:
 16655  0046A6  90D8               	bcf	status,0,c
 16656  0046A8  363A               	rlcf	___ftdiv@f3,f,c
 16657  0046AA  363B               	rlcf	___ftdiv@f3+1,f,c
 16658  0046AC  363C               	rlcf	___ftdiv@f3+2,f,c
 16659  0046AE  5033               	movf	___ftdiv@f2,w,c
 16660  0046B0  5C30               	subwf	___ftdiv@f1,w,c
 16661  0046B2  5034               	movf	___ftdiv@f2+1,w,c
 16662  0046B4  5831               	subwfb	___ftdiv@f1+1,w,c
 16663  0046B6  5035               	movf	___ftdiv@f2+2,w,c
 16664  0046B8  5832               	subwfb	___ftdiv@f1+2,w,c
 16665  0046BA  A0D8               	btfss	status,0,c
 16666  0046BC  D007               	goto	i2l757
 16667  0046BE  5033               	movf	___ftdiv@f2,w,c
 16668  0046C0  5E30               	subwf	___ftdiv@f1,f,c
 16669  0046C2  5034               	movf	___ftdiv@f2+1,w,c
 16670  0046C4  5A31               	subwfb	___ftdiv@f1+1,f,c
 16671  0046C6  5035               	movf	___ftdiv@f2+2,w,c
 16672  0046C8  5A32               	subwfb	___ftdiv@f1+2,f,c
 16673  0046CA  803A               	bsf	___ftdiv@f3,0,c
 16674  0046CC                     i2l757:
 16675  0046CC  90D8               	bcf	status,0,c
 16676  0046CE  3630               	rlcf	___ftdiv@f1,f,c
 16677  0046D0  3631               	rlcf	___ftdiv@f1+1,f,c
 16678  0046D2  3632               	rlcf	___ftdiv@f1+2,f,c
 16679  0046D4  2E39               	decfsz	___ftdiv@cntr,f,c
 16680  0046D6  D7E7               	goto	i2l5464
 16681  0046D8  C03A  F001         	movff	___ftdiv@f3,i2___ftpack@arg
 16682  0046DC  C03B  F002         	movff	___ftdiv@f3+1,i2___ftpack@arg+1
 16683  0046E0  C03C  F003         	movff	___ftdiv@f3+2,i2___ftpack@arg+2
 16684  0046E4  C03D  F004         	movff	___ftdiv@exp,i2___ftpack@exp
 16685  0046E8  C03E  F005         	movff	___ftdiv@sign,i2___ftpack@sign
 16686  0046EC  ECA0  F024         	call	i2___ftpack	;wreg free
 16687  0046F0  C001  F030         	movff	?i2___ftpack,?___ftdiv
 16688  0046F4  C002  F031         	movff	?i2___ftpack+1,?___ftdiv+1
 16689  0046F8  C003  F032         	movff	?i2___ftpack+2,?___ftdiv+2
 16690  0046FC  0012               	return	
 16691  0046FE                     __end_of___ftdiv:
 16692                           	opt stack 0
 16693                           tosu	equ	0xFFF
 16694                           tosh	equ	0xFFE
 16695                           tosl	equ	0xFFD
 16696                           pclatu	equ	0xFFB
 16697                           pclath	equ	0xFFA
 16698                           tblptru	equ	0xFF8
 16699                           tblptrh	equ	0xFF7
 16700                           tblptrl	equ	0xFF6
 16701                           tablat	equ	0xFF5
 16702                           prodh	equ	0xFF4
 16703                           prodl	equ	0xFF3
 16704                           intcon	equ	0xFF2
 16705                           intcon2	equ	0xFF1
 16706                           postinc0	equ	0xFEE
 16707                           fsr0h	equ	0xFEA
 16708                           fsr0l	equ	0xFE9
 16709                           wreg	equ	0xFE8
 16710                           fsr1h	equ	0xFE2
 16711                           fsr1l	equ	0xFE1
 16712                           indf2	equ	0xFDF
 16713                           postinc2	equ	0xFDE
 16714                           postdec2	equ	0xFDD
 16715                           fsr2h	equ	0xFDA
 16716                           fsr2l	equ	0xFD9
 16717                           status	equ	0xFD8
 16718                           
 16719 ;; *************** function i2___ftpack *****************
 16720 ;; Defined at:
 16721 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
 16722 ;; Parameters:    Size  Location     Type
 16723 ;;  arg             3    0[COMRAM] unsigned um
 16724 ;;  exp             1    3[COMRAM] unsigned char 
 16725 ;;  sign            1    4[COMRAM] unsigned char 
 16726 ;; Auto vars:     Size  Location     Type
 16727 ;;		None
 16728 ;; Return value:  Size  Location     Type
 16729 ;;                  3    0[COMRAM] float 
 16730 ;; Registers used:
 16731 ;;		wreg, status,2, status,0
 16732 ;; Tracked objects:
 16733 ;;		On entry : 0/0
 16734 ;;		On exit  : 0/0
 16735 ;;		Unchanged: 0/0
 16736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16737 ;;      Params:         5       0       0       0       0       0       0
 16738 ;;      Locals:         0       0       0       0       0       0       0
 16739 ;;      Temps:          3       0       0       0       0       0       0
 16740 ;;      Totals:         8       0       0       0       0       0       0
 16741 ;;Total ram usage:        8 bytes
 16742 ;; Hardware stack levels used:    1
 16743 ;; This function calls:
 16744 ;;		Nothing
 16745 ;; This function is called by:
 16746 ;;		___ftdiv
 16747 ;;		___lwtoft
 16748 ;;		i2___ftadd
 16749 ;;		i2___ftmul
 16750 ;;		i2___lltoft
 16751 ;; This function uses a non-reentrant model
 16752 ;;
 16753                           
 16754                           	psect	text69
 16755  004940                     __ptext69:
 16756                           	opt stack 0
 16757  004940                     i2___ftpack:
 16758                           	opt stack 22
 16759                           
 16760                           ;incstack = 0
 16761  004940  5004               	movf	i2___ftpack@exp,w,c
 16762  004942  B4D8               	btfsc	status,2,c
 16763  004944  D005               	goto	i2l3424
 16764  004946  5001               	movf	i2___ftpack@arg,w,c
 16765  004948  1002               	iorwf	i2___ftpack@arg+1,w,c
 16766  00494A  1003               	iorwf	i2___ftpack@arg+2,w,c
 16767  00494C  A4D8               	btfss	status,2,c
 16768  00494E  D00C               	goto	i2l3430
 16769  004950                     i2l3424:
 16770  004950  0E00               	movlw	0
 16771  004952  6E01               	movwf	?i2___ftpack,c
 16772  004954  0E00               	movlw	0
 16773  004956  6E02               	movwf	?i2___ftpack+1,c
 16774  004958  0E00               	movlw	0
 16775  00495A  6E03               	movwf	?i2___ftpack+2,c
 16776  00495C  0012               	return	
 16777  00495E                     i2l3428:
 16778  00495E  2A04               	incf	i2___ftpack@exp,f,c
 16779  004960  90D8               	bcf	status,0,c
 16780  004962  3203               	rrcf	i2___ftpack@arg+2,f,c
 16781  004964  3202               	rrcf	i2___ftpack@arg+1,f,c
 16782  004966  3201               	rrcf	i2___ftpack@arg,f,c
 16783  004968                     i2l3430:
 16784  004968  0E00               	movlw	0
 16785  00496A  1401               	andwf	i2___ftpack@arg,w,c
 16786  00496C  6E06               	movwf	??i2___ftpack& (0+255),c
 16787  00496E  0E00               	movlw	0
 16788  004970  1402               	andwf	i2___ftpack@arg+1,w,c
 16789  004972  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 16790  004974  0EFE               	movlw	254
 16791  004976  1403               	andwf	i2___ftpack@arg+2,w,c
 16792  004978  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 16793  00497A  5006               	movf	??i2___ftpack,w,c
 16794  00497C  1007               	iorwf	??i2___ftpack+1,w,c
 16795  00497E  1008               	iorwf	??i2___ftpack+2,w,c
 16796  004980  B4D8               	btfsc	status,2,c
 16797  004982  D00C               	goto	i2l3436
 16798  004984  D7EC               	goto	i2l3428
 16799  004986                     i2l3432:
 16800  004986  2A04               	incf	i2___ftpack@exp,f,c
 16801  004988  0E01               	movlw	1
 16802  00498A  2601               	addwf	i2___ftpack@arg,f,c
 16803  00498C  0E00               	movlw	0
 16804  00498E  2202               	addwfc	i2___ftpack@arg+1,f,c
 16805  004990  0E00               	movlw	0
 16806  004992  2203               	addwfc	i2___ftpack@arg+2,f,c
 16807  004994  90D8               	bcf	status,0,c
 16808  004996  3203               	rrcf	i2___ftpack@arg+2,f,c
 16809  004998  3202               	rrcf	i2___ftpack@arg+1,f,c
 16810  00499A  3201               	rrcf	i2___ftpack@arg,f,c
 16811  00499C                     i2l3436:
 16812  00499C  0E00               	movlw	0
 16813  00499E  1401               	andwf	i2___ftpack@arg,w,c
 16814  0049A0  6E06               	movwf	??i2___ftpack& (0+255),c
 16815  0049A2  0E00               	movlw	0
 16816  0049A4  1402               	andwf	i2___ftpack@arg+1,w,c
 16817  0049A6  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 16818  0049A8  0EFF               	movlw	255
 16819  0049AA  1403               	andwf	i2___ftpack@arg+2,w,c
 16820  0049AC  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 16821  0049AE  5006               	movf	??i2___ftpack,w,c
 16822  0049B0  1007               	iorwf	??i2___ftpack+1,w,c
 16823  0049B2  1008               	iorwf	??i2___ftpack+2,w,c
 16824  0049B4  B4D8               	btfsc	status,2,c
 16825  0049B6  D006               	goto	i2l3440
 16826  0049B8  D7E6               	goto	i2l3432
 16827  0049BA                     i2l3438:
 16828  0049BA  0604               	decf	i2___ftpack@exp,f,c
 16829  0049BC  90D8               	bcf	status,0,c
 16830  0049BE  3601               	rlcf	i2___ftpack@arg,f,c
 16831  0049C0  3602               	rlcf	i2___ftpack@arg+1,f,c
 16832  0049C2  3603               	rlcf	i2___ftpack@arg+2,f,c
 16833  0049C4                     i2l3440:
 16834  0049C4  BE02               	btfsc	i2___ftpack@arg+1,7,c
 16835  0049C6  D003               	goto	i2l699
 16836  0049C8  0E02               	movlw	2
 16837  0049CA  6004               	cpfslt	i2___ftpack@exp,c
 16838  0049CC  D7F6               	goto	i2l3438
 16839  0049CE                     i2l699:
 16840  0049CE  A004               	btfss	i2___ftpack@exp,0,c
 16841  0049D0  9E02               	bcf	i2___ftpack@arg+1,7,c
 16842  0049D2  90D8               	bcf	status,0,c
 16843  0049D4  3204               	rrcf	i2___ftpack@exp,f,c
 16844  0049D6  5004               	movf	i2___ftpack@exp,w,c
 16845  0049D8  1203               	iorwf	i2___ftpack@arg+2,f,c
 16846  0049DA  5005               	movf	i2___ftpack@sign,w,c
 16847  0049DC  A4D8               	btfss	status,2,c
 16848  0049DE  8E03               	bsf	i2___ftpack@arg+2,7,c
 16849  0049E0  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 16850  0049E4  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 16851  0049E8  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 16852  0049EC  0012               	return	
 16853  0049EE                     __end_ofi2___ftpack:
 16854                           	opt stack 0
 16855                           tosu	equ	0xFFF
 16856                           tosh	equ	0xFFE
 16857                           tosl	equ	0xFFD
 16858                           pclatu	equ	0xFFB
 16859                           pclath	equ	0xFFA
 16860                           tblptru	equ	0xFF8
 16861                           tblptrh	equ	0xFF7
 16862                           tblptrl	equ	0xFF6
 16863                           tablat	equ	0xFF5
 16864                           prodh	equ	0xFF4
 16865                           prodl	equ	0xFF3
 16866                           intcon	equ	0xFF2
 16867                           intcon2	equ	0xFF1
 16868                           postinc0	equ	0xFEE
 16869                           fsr0h	equ	0xFEA
 16870                           fsr0l	equ	0xFE9
 16871                           wreg	equ	0xFE8
 16872                           fsr1h	equ	0xFE2
 16873                           fsr1l	equ	0xFE1
 16874                           indf2	equ	0xFDF
 16875                           postinc2	equ	0xFDE
 16876                           postdec2	equ	0xFDD
 16877                           fsr2h	equ	0xFDA
 16878                           fsr2l	equ	0xFD9
 16879                           status	equ	0xFD8
 16880                           
 16881 ;; *************** function _TMR0_StopTimer *****************
 16882 ;; Defined at:
 16883 ;;		line 49 in file "mcc_generated_files/tmr0.c"
 16884 ;; Parameters:    Size  Location     Type
 16885 ;;		None
 16886 ;; Auto vars:     Size  Location     Type
 16887 ;;		None
 16888 ;; Return value:  Size  Location     Type
 16889 ;;                  1    wreg      void 
 16890 ;; Registers used:
 16891 ;;		None
 16892 ;; Tracked objects:
 16893 ;;		On entry : 0/0
 16894 ;;		On exit  : 0/0
 16895 ;;		Unchanged: 0/0
 16896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16897 ;;      Params:         0       0       0       0       0       0       0
 16898 ;;      Locals:         0       0       0       0       0       0       0
 16899 ;;      Temps:          0       0       0       0       0       0       0
 16900 ;;      Totals:         0       0       0       0       0       0       0
 16901 ;;Total ram usage:        0 bytes
 16902 ;; Hardware stack levels used:    1
 16903 ;; This function calls:
 16904 ;;		Nothing
 16905 ;; This function is called by:
 16906 ;;		_INT0_ISR
 16907 ;; This function uses a non-reentrant model
 16908 ;;
 16909                           
 16910                           	psect	text70
 16911  00557A                     __ptext70:
 16912                           	opt stack 0
 16913  00557A                     _TMR0_StopTimer:
 16914                           	opt stack 23
 16915                           
 16916                           ;tmr0.c: 52: T0CONbits.TMR0ON = 0;
 16917                           
 16918                           ;incstack = 0
 16919  00557A  9ED5               	bcf	4053,7,c	;volatile
 16920  00557C  0012               	return		;funcret
 16921  00557E                     __end_of_TMR0_StopTimer:
 16922                           	opt stack 0
 16923                           tosu	equ	0xFFF
 16924                           tosh	equ	0xFFE
 16925                           tosl	equ	0xFFD
 16926                           pclatu	equ	0xFFB
 16927                           pclath	equ	0xFFA
 16928                           tblptru	equ	0xFF8
 16929                           tblptrh	equ	0xFF7
 16930                           tblptrl	equ	0xFF6
 16931                           tablat	equ	0xFF5
 16932                           prodh	equ	0xFF4
 16933                           prodl	equ	0xFF3
 16934                           intcon	equ	0xFF2
 16935                           intcon2	equ	0xFF1
 16936                           postinc0	equ	0xFEE
 16937                           fsr0h	equ	0xFEA
 16938                           fsr0l	equ	0xFE9
 16939                           wreg	equ	0xFE8
 16940                           fsr1h	equ	0xFE2
 16941                           fsr1l	equ	0xFE1
 16942                           indf2	equ	0xFDF
 16943                           postinc2	equ	0xFDE
 16944                           postdec2	equ	0xFDD
 16945                           fsr2h	equ	0xFDA
 16946                           fsr2l	equ	0xFD9
 16947                           status	equ	0xFD8
 16948                           
 16949 ;; *************** function _TMR0_Reload *****************
 16950 ;; Defined at:
 16951 ;;		line 77 in file "mcc_generated_files/tmr0.c"
 16952 ;; Parameters:    Size  Location     Type
 16953 ;;		None
 16954 ;; Auto vars:     Size  Location     Type
 16955 ;;		None
 16956 ;; Return value:  Size  Location     Type
 16957 ;;                  1    wreg      void 
 16958 ;; Registers used:
 16959 ;;		wreg, status,2
 16960 ;; Tracked objects:
 16961 ;;		On entry : 0/0
 16962 ;;		On exit  : 0/0
 16963 ;;		Unchanged: 0/0
 16964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16965 ;;      Params:         0       0       0       0       0       0       0
 16966 ;;      Locals:         0       0       0       0       0       0       0
 16967 ;;      Temps:          0       0       0       0       0       0       0
 16968 ;;      Totals:         0       0       0       0       0       0       0
 16969 ;;Total ram usage:        0 bytes
 16970 ;; Hardware stack levels used:    1
 16971 ;; This function calls:
 16972 ;;		Nothing
 16973 ;; This function is called by:
 16974 ;;		_INT0_ISR
 16975 ;; This function uses a non-reentrant model
 16976 ;;
 16977                           
 16978                           	psect	text71
 16979  005544                     __ptext71:
 16980                           	opt stack 0
 16981  005544                     _TMR0_Reload:
 16982                           	opt stack 23
 16983                           
 16984                           ;tmr0.c: 80: TMR0H = timer0ReloadVal >> 8;
 16985                           
 16986                           ;incstack = 0
 16987  005544  0100               	movlb	0	; () banked
 16988  005546  51D9               	movf	(_timer0ReloadVal+1)& (0+255),w,b	;volatile
 16989  005548  6ED7               	movwf	4055,c	;volatile
 16990                           
 16991                           ; BSR set to: 0
 16992                           ;tmr0.c: 81: TMR0L = (uint8_t) timer0ReloadVal;
 16993  00554A  C0D8  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 16994                           
 16995                           ; BSR set to: 0
 16996  00554E  0012               	return		;funcret
 16997  005550                     __end_of_TMR0_Reload:
 16998                           	opt stack 0
 16999                           tosu	equ	0xFFF
 17000                           tosh	equ	0xFFE
 17001                           tosl	equ	0xFFD
 17002                           pclatu	equ	0xFFB
 17003                           pclath	equ	0xFFA
 17004                           tblptru	equ	0xFF8
 17005                           tblptrh	equ	0xFF7
 17006                           tblptrl	equ	0xFF6
 17007                           tablat	equ	0xFF5
 17008                           prodh	equ	0xFF4
 17009                           prodl	equ	0xFF3
 17010                           intcon	equ	0xFF2
 17011                           intcon2	equ	0xFF1
 17012                           postinc0	equ	0xFEE
 17013                           fsr0h	equ	0xFEA
 17014                           fsr0l	equ	0xFE9
 17015                           wreg	equ	0xFE8
 17016                           fsr1h	equ	0xFE2
 17017                           fsr1l	equ	0xFE1
 17018                           indf2	equ	0xFDF
 17019                           postinc2	equ	0xFDE
 17020                           postdec2	equ	0xFDD
 17021                           fsr2h	equ	0xFDA
 17022                           fsr2l	equ	0xFD9
 17023                           status	equ	0xFD8
 17024                           
 17025 ;; *************** function _TMR0_ReadTimer *****************
 17026 ;; Defined at:
 17027 ;;		line 55 in file "mcc_generated_files/tmr0.c"
 17028 ;; Parameters:    Size  Location     Type
 17029 ;;		None
 17030 ;; Auto vars:     Size  Location     Type
 17031 ;;  readVal         2    6[COMRAM] unsigned int 
 17032 ;;  readValHigh     1    9[COMRAM] unsigned char 
 17033 ;;  readValLow      1    8[COMRAM] unsigned char 
 17034 ;; Return value:  Size  Location     Type
 17035 ;;                  2    0[COMRAM] unsigned int 
 17036 ;; Registers used:
 17037 ;;		wreg, status,2, status,0
 17038 ;; Tracked objects:
 17039 ;;		On entry : 0/0
 17040 ;;		On exit  : 0/0
 17041 ;;		Unchanged: 0/0
 17042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17043 ;;      Params:         2       0       0       0       0       0       0
 17044 ;;      Locals:         4       0       0       0       0       0       0
 17045 ;;      Temps:          4       0       0       0       0       0       0
 17046 ;;      Totals:        10       0       0       0       0       0       0
 17047 ;;Total ram usage:       10 bytes
 17048 ;; Hardware stack levels used:    1
 17049 ;; This function calls:
 17050 ;;		Nothing
 17051 ;; This function is called by:
 17052 ;;		_INT0_ISR
 17053 ;; This function uses a non-reentrant model
 17054 ;;
 17055                           
 17056                           	psect	text72
 17057  0051CC                     __ptext72:
 17058                           	opt stack 0
 17059  0051CC                     _TMR0_ReadTimer:
 17060                           	opt stack 23
 17061                           
 17062                           ;tmr0.c: 57: uint16_t readVal;
 17063                           ;tmr0.c: 58: uint8_t readValLow;
 17064                           ;tmr0.c: 59: uint8_t readValHigh;
 17065                           ;tmr0.c: 61: readValLow = TMR0L;
 17066                           
 17067                           ; BSR set to: 0
 17068                           ;incstack = 0
 17069  0051CC  CFD6 F009          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
 17070                           
 17071                           ;tmr0.c: 62: readValHigh = TMR0H;
 17072  0051D0  CFD7 F00A          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
 17073                           
 17074                           ;tmr0.c: 65: readVal = ((uint16_t)readValHigh << 8) + readValLow - (timer0ReloadVal);
 17075  0051D4  C0D8  F003         	movff	_timer0ReloadVal,??_TMR0_ReadTimer	;volatile
 17076  0051D8  C0D9  F004         	movff	_timer0ReloadVal+1,??_TMR0_ReadTimer+1	;volatile
 17077  0051DC  1E03               	comf	??_TMR0_ReadTimer,f,c
 17078  0051DE  1E04               	comf	??_TMR0_ReadTimer+1,f,c
 17079  0051E0  4A03               	infsnz	??_TMR0_ReadTimer,f,c
 17080  0051E2  2A04               	incf	??_TMR0_ReadTimer+1,f,c
 17081  0051E4  5009               	movf	TMR0_ReadTimer@readValLow,w,c
 17082  0051E6  C00A  F005         	movff	TMR0_ReadTimer@readValHigh,??_TMR0_ReadTimer+2
 17083  0051EA  6A06               	clrf	(??_TMR0_ReadTimer+3)& (0+255),c
 17084  0051EC  C005  F006         	movff	??_TMR0_ReadTimer+2,??_TMR0_ReadTimer+3
 17085  0051F0  6A05               	clrf	??_TMR0_ReadTimer+2,c
 17086  0051F2  2605               	addwf	??_TMR0_ReadTimer+2,f,c
 17087  0051F4  0E00               	movlw	0
 17088  0051F6  2206               	addwfc	??_TMR0_ReadTimer+3,f,c
 17089  0051F8  5003               	movf	??_TMR0_ReadTimer,w,c
 17090  0051FA  2405               	addwf	??_TMR0_ReadTimer+2,w,c
 17091  0051FC  6E07               	movwf	TMR0_ReadTimer@readVal,c
 17092  0051FE  5004               	movf	??_TMR0_ReadTimer+1,w,c
 17093  005200  2006               	addwfc	??_TMR0_ReadTimer+3,w,c
 17094  005202  6E08               	movwf	TMR0_ReadTimer@readVal+1,c
 17095                           
 17096                           ;tmr0.c: 67: return readVal;
 17097  005204  C007  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
 17098  005208  C008  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
 17099  00520C  0012               	return	
 17100  00520E                     __end_of_TMR0_ReadTimer:
 17101                           	opt stack 0
 17102                           tosu	equ	0xFFF
 17103                           tosh	equ	0xFFE
 17104                           tosl	equ	0xFFD
 17105                           pclatu	equ	0xFFB
 17106                           pclath	equ	0xFFA
 17107                           tblptru	equ	0xFF8
 17108                           tblptrh	equ	0xFF7
 17109                           tblptrl	equ	0xFF6
 17110                           tablat	equ	0xFF5
 17111                           prodh	equ	0xFF4
 17112                           prodl	equ	0xFF3
 17113                           intcon	equ	0xFF2
 17114                           intcon2	equ	0xFF1
 17115                           postinc0	equ	0xFEE
 17116                           fsr0h	equ	0xFEA
 17117                           fsr0l	equ	0xFE9
 17118                           wreg	equ	0xFE8
 17119                           fsr1h	equ	0xFE2
 17120                           fsr1l	equ	0xFE1
 17121                           indf2	equ	0xFDF
 17122                           postinc2	equ	0xFDE
 17123                           postdec2	equ	0xFDD
 17124                           fsr2h	equ	0xFDA
 17125                           fsr2l	equ	0xFD9
 17126                           status	equ	0xFD8
 17127                           tosu	equ	0xFFF
 17128                           tosh	equ	0xFFE
 17129                           tosl	equ	0xFFD
 17130                           pclatu	equ	0xFFB
 17131                           pclath	equ	0xFFA
 17132                           tblptru	equ	0xFF8
 17133                           tblptrh	equ	0xFF7
 17134                           tblptrl	equ	0xFF6
 17135                           tablat	equ	0xFF5
 17136                           prodh	equ	0xFF4
 17137                           prodl	equ	0xFF3
 17138                           intcon	equ	0xFF2
 17139                           intcon2	equ	0xFF1
 17140                           postinc0	equ	0xFEE
 17141                           fsr0h	equ	0xFEA
 17142                           fsr0l	equ	0xFE9
 17143                           wreg	equ	0xFE8
 17144                           fsr1h	equ	0xFE2
 17145                           fsr1l	equ	0xFE1
 17146                           indf2	equ	0xFDF
 17147                           postinc2	equ	0xFDE
 17148                           postdec2	equ	0xFDD
 17149                           fsr2h	equ	0xFDA
 17150                           fsr2l	equ	0xFD9
 17151                           status	equ	0xFD8
 17152                           
 17153                           	psect	text73
 17154  000000                     __ptext73:
 17155                           	opt stack 0
 17156                           tosu	equ	0xFFF
 17157                           tosh	equ	0xFFE
 17158                           tosl	equ	0xFFD
 17159                           pclatu	equ	0xFFB
 17160                           pclath	equ	0xFFA
 17161                           tblptru	equ	0xFF8
 17162                           tblptrh	equ	0xFF7
 17163                           tblptrl	equ	0xFF6
 17164                           tablat	equ	0xFF5
 17165                           prodh	equ	0xFF4
 17166                           prodl	equ	0xFF3
 17167                           intcon	equ	0xFF2
 17168                           intcon2	equ	0xFF1
 17169                           postinc0	equ	0xFEE
 17170                           fsr0h	equ	0xFEA
 17171                           fsr0l	equ	0xFE9
 17172                           wreg	equ	0xFE8
 17173                           fsr1h	equ	0xFE2
 17174                           fsr1l	equ	0xFE1
 17175                           indf2	equ	0xFDF
 17176                           postinc2	equ	0xFDE
 17177                           postdec2	equ	0xFDD
 17178                           fsr2h	equ	0xFDA
 17179                           fsr2l	equ	0xFD9
 17180                           status	equ	0xFD8
 17181                           
 17182                           	psect	rparam
 17183  0000                     tosu	equ	0xFFF
 17184                           tosh	equ	0xFFE
 17185                           tosl	equ	0xFFD
 17186                           pclatu	equ	0xFFB
 17187                           pclath	equ	0xFFA
 17188                           tblptru	equ	0xFF8
 17189                           tblptrh	equ	0xFF7
 17190                           tblptrl	equ	0xFF6
 17191                           tablat	equ	0xFF5
 17192                           prodh	equ	0xFF4
 17193                           prodl	equ	0xFF3
 17194                           intcon	equ	0xFF2
 17195                           intcon2	equ	0xFF1
 17196                           postinc0	equ	0xFEE
 17197                           fsr0h	equ	0xFEA
 17198                           fsr0l	equ	0xFE9
 17199                           wreg	equ	0xFE8
 17200                           fsr1h	equ	0xFE2
 17201                           fsr1l	equ	0xFE1
 17202                           indf2	equ	0xFDF
 17203                           postinc2	equ	0xFDE
 17204                           postdec2	equ	0xFDD
 17205                           fsr2h	equ	0xFDA
 17206                           fsr2l	equ	0xFD9
 17207                           status	equ	0xFD8
 17208                           
 17209                           	psect	temp
 17210  00005F                     btemp:
 17211                           	opt stack 0
 17212  00005F                     	ds	1
 17213  0000                     int$flags	set	btemp
 17214                           tosu	equ	0xFFF
 17215                           tosh	equ	0xFFE
 17216                           tosl	equ	0xFFD
 17217                           pclatu	equ	0xFFB
 17218                           pclath	equ	0xFFA
 17219                           tblptru	equ	0xFF8
 17220                           tblptrh	equ	0xFF7
 17221                           tblptrl	equ	0xFF6
 17222                           tablat	equ	0xFF5
 17223                           prodh	equ	0xFF4
 17224                           prodl	equ	0xFF3
 17225                           intcon	equ	0xFF2
 17226                           intcon2	equ	0xFF1
 17227                           postinc0	equ	0xFEE
 17228                           fsr0h	equ	0xFEA
 17229                           fsr0l	equ	0xFE9
 17230                           wreg	equ	0xFE8
 17231                           fsr1h	equ	0xFE2
 17232                           fsr1l	equ	0xFE1
 17233                           indf2	equ	0xFDF
 17234                           postinc2	equ	0xFDE
 17235                           postdec2	equ	0xFDD
 17236                           fsr2h	equ	0xFDA
 17237                           fsr2l	equ	0xFD9
 17238                           status	equ	0xFD8


Data Sizes:
    Strings     58
    Constant    118
    Data        0
    BSS         22
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     94     122
    BANK1           256     70      70
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_3(CODE[11]), STR_2(CODE[11]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), ?_printf(COMRAM[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_1(CODE[36]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), ?_printf(COMRAM[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> i2_putch(), putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 0

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> lcd_sendInt@displayString(COMRAM[10]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), printf@ap(COMRAM[2]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_3(CODE[11]), STR_2(CODE[11]), STR_1(CODE[36]), 

    S872__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    S872__prbuf$ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), main@cap_string(BANK1[16]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 5
		 -> sprintf@pb(BANK1[4]), printf@pb(COMRAM[4]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 10
		 -> lcd_sendUInt@displayString(COMRAM[10]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> lcd_sendInt@displayString(COMRAM[10]), 

    lcd_sendStringToPos@charString	PTR const unsigned char  size(2) Largest target is 16
		 -> main@cap_string(BANK1[16]), 

    lcd_sendString@a	PTR const unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), lcd_sendUInt@displayString(COMRAM[10]), lcd_sendInt@displayString(COMRAM[10]), main@cap_string(BANK1[16]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_TMR0_DefaultInterruptHandler
    _INT0_ISR->_printf
    _printf->i2__doprnt
    i2__doprnt->i2___fttol
    i2_scale->i2___ftmul
    i2_putch->i2_EUSART1_Write
    i2_fround->i2___ftmul
    i2___wmul->i2___awdiv
    i2___ftmul->i2___ftadd
    i2___awdiv->i2___awmod
    i2___lltoft->i2___ftpack
    i2___llmod->i2___lldiv
    i2___fttol->i2_scale
    i2___ftsub->i2___ftadd
    i2___ftadd->i2___wmul
    ___lwtoft->i2___ftpack
    ___ftdiv->i2___ftmul

Critical Paths under _main in BANK0

    __doprnt->___ftadd
    __doprnt->___fttol
    _scale->___ftmul
    _putch->_EUSART1_Write
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _lcd_sendStringToPos->_lcd_sendString
    _lcd_sendStringToPos->_lcd_setPosition
    _lcd_setPosition->_lcd_sendCommand
    _lcd_sendString->_lcd_sendChar
    _lcd_sendChar->__lcd_Port
    _lcd_init->_lcd_sendCommand
    _lcd_clear->_lcd_sendCommand
    _lcd_sendCommand->__lcd_Port
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _printf->i2__doprnt

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->__doprnt
    __doprnt->___ftsub

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   62250
                                             54 BANK1     16    16      0
                  _SYSTEM_Initialize
                          _lcd_clear
                           _lcd_init
                _lcd_sendStringToPos
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             13     6      7   59328
                                             41 BANK1     13     6      7
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             41    35      6   55992
                                              6 BANK1     35    29      6
                   Absolute function *
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch *
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               10     7      3   10333
                                             72 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      44
                                             38 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      22
                                             37 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                             37 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              13    10      3   10135
                                             72 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2465
                                             51 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    4351
                                             57 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1448
                                             37 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1580
                                             43 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         15     9      6     431
                                             37 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          12     6      6     591
                                             37 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2137
                                             45 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     773
                                             50 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     750
                                             37 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     546
                                             79 BANK0     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    3705
                                              0 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    3227
                                             82 BANK0     12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1953
                                             37 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     160
                                             37 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     520
                                             37 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_sendStringToPos                                  4     1      3    1354
                                             45 BANK0      4     1      3
                     _lcd_sendString
                    _lcd_setPosition
 ---------------------------------------------------------------------------------
 (2) _lcd_setPosition                                      5     4      1     636
                                             40 BANK0      5     4      1
                    _lcd_sendCommand
 ---------------------------------------------------------------------------------
 (2) _lcd_sendString                                       4     2      2     524
                                             41 BANK0      4     2      2
                       _lcd_sendChar
 ---------------------------------------------------------------------------------
 (3) _lcd_sendChar                                         3     3      0     178
                                             38 BANK0      3     3      0
                          __lcd_Port
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     198
                                             40 BANK0      1     1      0
                          __lcd_Port
                    _lcd_sendCommand
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0     110
                    _lcd_sendCommand
 ---------------------------------------------------------------------------------
 (3) _lcd_sendCommand                                      2     2      0     110
                                             38 BANK0      2     2      0
                          __lcd_Port
 ---------------------------------------------------------------------------------
 (4) __lcd_Port                                            1     1      0      88
                                             37 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      86
                                             39 BANK0      2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      86
                                             37 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      86
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      86
                                             37 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                          14    14      0   41594
                                             23 BANK0     14    14      0
                           _INT0_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _INT0_ISR                                             0     0      0   41594
                     _TMR0_ReadTimer
                        _TMR0_Reload
                     _TMR0_StopTimer
                            ___ftdiv
                           ___lwtoft
                             _printf
                  i2_TMR0_StartTimer
                          i2___ftadd
                          i2___ftmul
 ---------------------------------------------------------------------------------
 (8) i2_TMR0_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _printf                                              13     6      7   36343
                                             81 COMRAM    13     6      7
                          i2__doprnt
 ---------------------------------------------------------------------------------
 (9) i2__doprnt                                           41    35      6   33445
                                             69 COMRAM    12     6      6
                                              0 BANK0     23    23      0
                   Absolute function *
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch *
                            i2_scale
 ---------------------------------------------------------------------------------
 (10) i2_scale                                            13    10      3    4893
                                             47 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (10) i2_putch                                             1     1      0      44
                                              1 COMRAM     1     1      0
                    i2_EUSART1_Write
 ---------------------------------------------------------------------------------
 (11) i2_EUSART1_Write                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) i2_isdigit                                           3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (10) i2_fround                                           16    13      3    4695
                                             47 COMRAM    10     7      3
                          i2___awdiv
                          i2___awmod
                          i2___ftadd (ARG)
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (11) i2___wmul                                            6     2      4    1093
                                             14 COMRAM     6     2      4
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (8) i2___ftmul                                           15     9      6    1727
                                             32 COMRAM    15     9      6
                           ___lwtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___ftadd (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___awmod                                           6     2      4     764
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (11) i2___awdiv                                           8     4      4     820
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (10) i2__tdiv_to_l_                                      15     9      6     355
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (10) i2__div_to_l_                                       12     6      6     481
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (10) i2___lltoft                                          9     5      4     716
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (10) i2___llmod                                           9     1      8     367
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___lldiv                                          13     5      8     318
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (10) i2___fttol                                          15    11      4     330
                                             54 COMRAM    15    11      4
                          i2___ftmul (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftsub                                           6     0      6    1736
                                             32 COMRAM     6     0      6
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (8) i2___ftadd                                           12     6      6    1617
                                             20 COMRAM    12     6      6
                           ___lwtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftneg                                           3     0      3      71
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (10) i2___ftge                                            9     3      6     292
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (8) ___lwtoft                                             3     0      3     707
                                              8 COMRAM     3     0      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (8) ___ftdiv                                             15     9      6    1131
                                             47 COMRAM    15     9      6
                           ___lwtoft (ARG)
                          i2___ftadd (ARG)
                          i2___ftmul (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (9) i2___ftpack                                           8     3      5     621
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (8) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ReadTimer                                      10     8      2      69
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
   _lcd_clear
     _lcd_sendCommand
       __lcd_Port
   _lcd_init
     __lcd_Port
     _lcd_sendCommand
       __lcd_Port
   _lcd_sendStringToPos
     _lcd_sendString
       _lcd_sendChar
         __lcd_Port
     _lcd_setPosition
       _lcd_sendCommand
         __lcd_Port
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___awdiv *
         ___awmod (ARG)
       ___ftadd *
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge *
       ___ftmul *
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg *
       ___ftsub *
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol *
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv *
       ___llmod *
         ___lldiv (ARG)
       ___lltoft *
         ___ftpack
       ___wmul *
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_ *
       __tdiv_to_l_ *
       _fround *
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit *
       _putch *
         _EUSART1_Write
       _scale *
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _INT0_ISR
     _TMR0_ReadTimer
     _TMR0_Reload
     _TMR0_StopTimer
     ___ftdiv
       ___lwtoft (ARG)
         i2___ftpack
       i2___ftadd (ARG)
         ___lwtoft (ARG)
           i2___ftpack
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftmul (ARG)
         ___lwtoft (ARG)
           i2___ftpack
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftadd (ARG)
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftpack (ARG)
     ___lwtoft
       i2___ftpack
     _printf
       i2__doprnt
         Absolute function(Fake) *
         i2___awdiv *
           i2___awmod (ARG)
         i2___ftadd *
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftge *
         i2___ftmul *
           ___lwtoft (ARG)
             i2___ftpack
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftadd (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg *
         i2___ftsub *
           i2___ftadd
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___lltoft (ARG)
             i2___ftpack
         i2___fttol *
           i2___ftmul (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftadd (ARG)
                 ___lwtoft (ARG)
                   i2___ftpack
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lldiv *
         i2___llmod *
           i2___lldiv (ARG)
         i2___lltoft *
           i2___ftpack
         i2___wmul *
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2__div_to_l_ *
         i2__tdiv_to_l_ *
         i2_fround *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftadd (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2_isdigit *
         i2_putch *
           i2_EUSART1_Write
         i2_scale *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             ___lwtoft (ARG)
               i2___ftpack
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftadd (ARG)
               ___lwtoft (ARG)
                 i2___ftpack
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
     i2_TMR0_StartTimer
     i2___ftadd
       ___lwtoft (ARG)
         i2___ftpack
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
       i2___ftpack (ARG)
       i2___ftpack (ARG)
       i2___wmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
     i2___ftmul
       ___lwtoft (ARG)
         i2___ftpack
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
       i2___ftadd (ARG)
         ___lwtoft (ARG)
           i2___ftpack
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftpack (ARG)
       i2___wmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     46      46       6       27.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     5E      7A       4       76.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11E       9        0.0%
DATA                 0      0     11E      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Jan 15 18:24:48 2017

                           ?_lcd_sendChar 0001                              ___awdiv@sign 0090  
                     ___wmul@multiplicand 0095                                i2___ftpack 4940  
                         _timer0ReloadVal 00D8                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                              ___ftadd@exp1 00BD  
                            ___ftadd@exp2 00BC                                i2___lltoft 4FAA  
                             __CFG_LVP$ON 000000                              ___ftadd@sign 00BB  
                         ?_lcd_sendString 0089                          ?_lcd_sendCommand 0001  
                                     l207 5512                                       l403 10AC  
                                     l351 1356                                       l282 5292  
                                     l284 529E                                       l286 52AA  
                                     l288 52B6                                       l722 3510  
                                     l726 354A                                       l728 3572  
                                     l737 3648                                       l746 3672  
                                     l667 3E16                                       l771 3C8E  
                                     l764 3BCA                                       l765 3C0E  
                                     l699 43FC                                       l796 5344  
                                     l868 492E                                       l878 4BC0  
                            __CFG_CPB$OFF 000000                              __CFG_CPD$OFF 000000  
              ??_INT0_SetInterruptHandler 0087                              ___awmod@sign 008A  
                                     tosl 000FFD                                       wreg 000FE8  
                            ___ftdiv@cntr 0039                              ___ftdiv@sign 003E  
                                    l5032 4E9A                                      l4400 3C74  
                                    l5042 5102                                      l4410 3CC6  
                                    l4402 3C84                                      l4314 2B96  
                                    l3460 433E                                      l4500 3FC0  
                                    l4332 2DE6                                      l4308 2AD0  
                                    l5046 5122                                      l4430 3D40  
                                    l4326 2D20                                      l4318 2BBC  
                                    l3712 52A0                                      l3472 43B0  
                                    l3464 4352                                      l4416 3CEC  
                                    l4360 3B76                                      l4344 53A2  
                                    l3482 4406                                      l3474 43E0  
                                    l3466 4360                                      l4530 4092  
                                    l4522 4066                                      l4450 3DCC  
                                    l4354 3B3C                                      l3802 3E62  
                                    l3716 52AC                                      l3708 5294  
                                    l3476 43EE                                      l3468 4390  
                                    l3740 3558                                      l4532 409C  
                                    l4460 3DFC                                      l3900 4AC2  
                                    l3734 351E                                      l4518 4052  
                                    l4550 48C8                                      l4462 3E0C  
                                    l4454 3DE0                                      l4438 3D94  
                                    l4390 3C44                                      l3822 3EEA  
                                    l4294 3460                                      l4286 337C  
                                    l4480 477E                                      l3488 4422  
                                    l4536 40B8                                      l4528 4082  
                                    l3920 4B2E                                      l3912 4B0C  
                                    l3904 4AD6                                      l3832 3F28  
                                    l3808 3E9C                                      l3762 35D8  
                                    l3746 3568                                      l4546 48B2  
                                    l4570 4B6A                                      l4394 3C58  
                                    l3906 4AE2                                      l3826 3F08  
                                    l4476 473E                                      l3764 35E6  
                                    l3756 35AA                                      l4548 48C2  
                                    l4580 4D70                                      l3852 47E2  
                                    l3908 4AE8                                      l3916 4B1A  
                                    l3836 3F46                                      l4486 47C2  
                                    l3782 369C                                      l3774 362E  
                                    l3766 35F4                                      l5622 50CC  
                                    l4558 491C                                      l4574 4BAE  
                                    l4566 4B54                                      l4582 4D80  
                                    l3792 36EA                                      l3776 363C  
                                    l3768 3600                                      l4568 4B64  
                                    l3864 4816                                      l3880 4866  
                                    l3866 4822                                      l3858 47F8  
                                    l3884 487A                                      l3876 4858  
                                    l3868 4828                                      l3896 4AB2  
                                    l8520 06B6                                      l8530 0730  
                                    l8620 0AAA                                      l8532 0746  
                                    l8702 0E6E                                      l8630 0B3A  
                                    l8622 0ADA                                      l8614 0A66  
                                    l8606 09F6                                      l8542 0780  
                                    l8550 07F6                                      l8526 0702  
                                    l8712 0EE8                                      l8704 0E76  
                                    l8624 0AF0                                      l8560 0864  
                                    l8536 0750                                      l8810 1436  
                                    l8714 0F04                                      l8706 0E8A  
                                    l8650 0C32                                      l8634 0B68  
                                    l8618 0A94                                      l8570 0896  
                                    l8562 087A                                      l8740 108E  
                                    l8732 1048                                      l8724 0FDA  
                                    l8716 0F14                                      l8644 0BC6  
                                    l8556 081E                                      l8830 14FA  
                                    l8814 145E                                      l8726 0FFC  
                                    l8670 0CF0                                      l8662 0C78  
                                    l8590 0944                                      l8582 08F0  
                                    l8566 088A                                      l8574 089E  
                                    l8832 1504                                      l8824 14C2  
                                    l8760 1188                                      l8752 110C  
                                    l8744 10B0                                      l8736 1072  
                                    l8728 100A                                      l8648 0C2C  
                                    l8576 08D4                                      l8568 0890  
                                    l8850 15D4                                      l8818 148E  
                                    l8770 127C                                      l8738 107A  
                                    l8690 0DE8                                      l8682 0D80  
                                    l8666 0CC8                                      l8860 1648  
                                    l8836 153C                                      l8772 12CA  
                                    l8756 1136                                      l8692 0DF0  
                                    l8846 15AA                                      l8862 1652  
                                    l8838 1546                                      l8790 13C4  
                                    l8782 1340                                      l8774 12D8  
                                    l8694 0E06                                      l8686 0DBE  
                                    l8678 0D54                                      l8880 1738  
                                    l8872 16C6                                      l8864 165E  
                                    l8856 161E                                      l8784 1348  
                                    l8768 124E                                      l8890 1818  
                                    l8874 16DA                                      l8778 1316  
                                    l8698 0E44                                      l8892 1834  
                                    l8884 1756                                      l8868 169C  
                                    l8796 13EA                                      l8788 138E  
                   __size_ofi2__div_to_l_ 0128                                      l8894 1842  
                                    l8798 13F0                                      l8958 5016  
                                    STR_1 0677                                      l8896 1858  
                                    STR_2 06A6                                      STR_3 069B  
                                    l8898 1876                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    u5401 3B52                                      u4451 34BE  
                                    u4461 34DC                                      u5610 3FE6  
                                    u5381 3B18                                      u4661 3E3E  
                                    u5615 3FDC                                      u4681 3E78  
                                    u5591 3F9C                                      i2l74 004E  
                                    i2l78 0058                                      _WPUB 000F61  
                           _EUSART1_Write 550E                                      _main 5006  
                             i2__doprnt@c 0076                              ___ftpack@arg 0085  
                             i2__doprnt@f 0048                          ?_lcd_setPosition 0088  
                            ___ftpack@exp 0088                           _TMR0_StartTimer 556E  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr0l 000FE9                                      fsr2h 000FDA  
                                    fsr1l 000FE1                                      indf2 000FDF  
                                    fsr2l 000FD9                                      btemp 005F  
                           __CFG_BORV$190 000000                              i2___ftadd@f1 0015  
                            i2___ftadd@f2 0018                                      pclat 000FFA  
                            i2___ftge@ff1 0001                              i2___ftge@ff2 0004  
             __end_of_lcd_sendStringToPos 545E                                      prodh 000FF4  
                                    prodl 000FF3                                      start 0094  
                           __CFG_IESO$OFF 000000                           __end_ofi2_scale 31FC  
                            i2___ftneg@f1 0001                           __end_ofi2_putch 556E  
                          ??_lcd_sendChar 0086                              ___ftmul@cntr 00A6  
                            i2___ftmul@f1 0021                              i2___ftmul@f2 0024  
                            ___param_bank 000010                              ___ftmul@sign 00A7  
                            i2___ftsub@f1 0021                              i2___ftsub@f2 0024  
                            i2___fttol@f1 0037                  __size_ofi2_EUSART1_Write 000C  
                            ___fttol@exp1 00BD                              i2___lltoft@c 0009  
                            ___fttol@lval 00B9                   __end_of_TMR0_Initialize 5186  
                        __end_of_INT0_ISR 4A96            ??_TMR0_DefaultInterruptHandler 0001  
          __size_of_OSCILLATOR_Initialize 000E             __end_of_OSCILLATOR_Initialize 5538  
                                   ?_main 0001                           __end_of___awdiv 4884  
                         __end_of___ftadd 3710                           __end_of___awmod 4B38  
               TMR0_ReadTimer@readValHigh 000A                           __end_of___ftdiv 46FE  
                         __end_of___ftneg 5352                           __end_of___lldiv 4940  
                         __end_of___ftmul 3F86                                     _T0CON 000FD5  
                         ___awdiv@divisor 008D                           __end_of___llmod 4BD2  
                         __end_of___ftsub 50F6                                     u14100 098A  
                         __end_of___fttol 40CA                                     u14105 097E  
                                   u14018 06EA                                     u14308 0DA8  
                                   u14440 10A4                                     u14338 0E2E  
                                   u14428 1032                                     u14528 1300  
                                   u14288 0D3E                                     u14378 0ED2  
                                   u14708 1594                                     u14478 10F6  
                                   u14398 0FC0                                     u14818 1722  
                                   u14738 1608                                     u14498 1234  
                                   u14838 1800                            __CFG_DEBUG$OFF 000000  
                                   u14778 1686                                     u14947 51AE  
                                   u14957 51C2                                     u14967 4DF2  
                                   u14977 4E0A                                     u14987 4E22  
                                   u14997 53C4                                     i2l207 553A  
                                   i2l403 21E0                                     i2l351 247C  
                                   i2l722 399A                                     i2l726 39C4  
                                   i2l737 3A74                                     i2l746 3A90  
                                   i2l667 4312                                     i2l771 41EA  
                                   i2l764 415C                                     i2l757 46CC  
                                   i2l765 4184                                     i2l699 49CE  
                                   i2l796 540E                                     i2l868 4D56  
                         ___awdiv@counter 008F                                     i2l878 4F98  
                                   _TMR0H 000FD7                                     _TMR0L 000FD6  
                            i2__div_to_l_ 41FC                           __end_of__doprnt 1882  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94         __size_of_TMR0_SetInterruptHandler 000A  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                 ?_TMR0_SetInterruptHandler 0085  
                           __CFG_WRT3$OFF 000000                              ___lltoft@exp 0095  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                          __end_of_TMR0_ISR 5322  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                              i2isdigit@c 0003                           __end_of_dpowers 0629  
                              i2scale@scl 0036                              i2__doprnt@ap 004A  
                            i2__doprnt@pb 0046                                     _scale 295E  
                         __end_of_isdigit 53AC                        __CFG_MCLRE$EXTMCLR 000000  
                           ___ftpack@sign 0089                                     _putch 54FA  
                          ?_EUSART1_Write 0001                                     pclath 000FFA  
                                   tablat 000FF5                          __end_ofi2___ftge 4C62  
                        __end_ofi2___wmul 53F8                                     status 000FD8  
                         __end_of_sprintf 50AA                            __CFG_HFOFST$ON 000000  
                          __CFG_FOSC$HSMP 000000                          __end_ofi2_fround 3956  
                      __size_ofi2___awdiv 0084                        __size_ofi2___ftadd 01AC  
                      __size_ofi2___awmod 0070                            __CFG_PBADEN$ON 000000  
                      __size_ofi2___ftneg 0024                        __size_ofi2___lldiv 0082  
                      __size_ofi2___ftmul 00F4                        __size_ofi2___llmod 0066  
                      __size_ofi2___ftsub 0040                        __size_ofi2___fttol 00F4  
                      __size_ofi2__doprnt 10DC                           __initialization 5498  
                       i2___lldiv@divisor 0005                __end_of_EUSART1_Initialize 54FA  
                            __end_of_main 5058                         i2___lldiv@counter 000D  
                           i2___ftmul@exp 002A                      lcd_sendStringToPos@x 0090  
                    lcd_sendStringToPos@y 008D                        __size_ofi2_isdigit 001E  
             ?_INTERRUPT_InterruptManager 0001                               ?i2___ftpack 0001  
                           lcd_sendChar@a 0088                             lcd_sendChar@y 0087  
                             ?i2___lltoft 0009                                    ??_main 00BE  
                           ___fttol@sign1 00B8                             __activetblptr 000002  
                    __size_of__tdiv_to_l_ 019E                   __end_of_TMR0_StartTimer 5572  
                        ___llmod@dividend 0092                                    ?_scale 00A8  
                        ___awdiv@dividend 008B                                    _ANSELA 000F38  
                                  ?_putch 0001                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                          __end_of___ftpack 4430  
                        __end_of___lltoft 4DE4                                    i2l4020 42AA  
                                  i2l4012 427A                                    i2l4100 41E4  
                                  i2l4110 4C32                                    i2l4200 4D18  
                                  i2l4032 42D8                                    i2l4106 4C02  
                                  i2l4042 4300                                    i2l4116 4C5E  
                                  i2l4220 4F66                                    i2l4044 430C  
                                  i2l4036 42E8                                    i2l4052 40F6  
                                  i2l3430 4968                                    i2l4230 4FB0  
                                  i2l3510 4C76                            __CFG_WDTEN$OFF 000000  
                                  i2l3440 49C4                                    i2l3432 4986  
                                  i2l3424 4950                                    i2l4128 5224  
                                  i2l4160 45C6                                    i2l4208 4D48  
                                  i2l4224 4F8A                                    i2l4216 4F56  
                                  i2l4232 4FBC                                    i2l4170 45F0  
                                  i2l4138 4550                                    i2l4218 4F62  
                                  i2l4058 4122                                    i2l3522 4C9C  
                                  i2l3436 499C                                    i2l3428 495E  
                                  i2l3620 3A2E                                    i2l3612 3A02  
                                  i2l4156 45B6                                    i2l4092 41C0  
                                  i2l3524 4CA4                                    i2l3516 4C86  
                                  i2l3438 49BA                                    i2l3630 3A62  
                                  i2l3622 3A38                                    i2l4174 4606  
                                  i2l4166 45DE                                    i2l3542 4CDC  
                                  i2l3534 4CC4                                    i2l3526 4CA8  
                                  i2l3632 3A6C                                    i2l3624 3A40  
                                  i2l4168 45EA                                    i2l4088 41B0  
                                  i2l3618 3A24                                    i2l4098 41D8  
                                  i2l3538 4CCE                                    i2l3570 4F22  
                                  i2l3562 4F02                                    i2l3554 4EE8  
                                  i2l4186 5474                                    i2l4196 4D08  
                                  i2l3564 4F0A                                    i2l3638 3AAC  
                                  i2l3590 39A8                                    i2l4198 4D14  
                                  i2l3566 4F0E                                    i2l3574 4F2C  
                                  i2l3558 4EF4                                    i2l3648 3ADC  
                                  i2l3664 4480                                    i2l3578 4F3A  
                                  i2l3682 44C2                                    i2l3658 4458  
                                  i2l5444 4668                                    i2l3596 39D2  
                                  i2l3692 44EA                                    i2l5438 4640  
                                  i2l3678 44B2                                    i2l5464 46A6  
                                  i2l3688 44DA                                    i2l3944 3916  
                                  i2l3936 3856                                    i2l8200 1AE8  
                                  i2l8130 1886                                    i2l3964 2FE4  
                                  i2l8300 1F36                                    i2l8140 18FC  
                                  i2l3982 31D8                                    i2l3958 2F40  
                                  i2l8302 1F3E                                    i2l8230 1C2E  
                                  i2l8142 1912                                    i2l3992 421A  
                                  i2l3976 3134                                    i2l3968 3008  
                                  i2l8400 24EA                                    i2l8312 1FB8  
                                  i2l8304 1F54                                    i2l8240 1CB6  
                                  i2l8232 1C5E                                    i2l8224 1BF2  
                                  i2l8216 1B8A                                    i2l8152 194A  
                                  i2l8160 19AA                                    i2l8136 18CE  
                                  i2l8322 2026                                    i2l8314 1FC0  
                                  i2l8234 1C74                                    i2l8170 1A0A  
                                  i2l8146 191A                                    i2l8500 28F8  
                                  i2l8420 255C                                    i2l8324 2042  
                                  i2l8316 1FD4                                    i2l8308 1F8E  
                                  i2l8260 1DA6                                    i2l8244 1CDC  
                                  i2l8228 1C18                                    i2l8180 1A3C  
                                  i2l8172 1A20                                    i2l3998 4238  
                                  i2l8502 2914                                    i2l8406 2510  
                                  i2l8350 21C2                                    i2l8342 217C  
                                  i2l8334 2112                                    i2l8326 2052  
                                  i2l8254 1D3A                                    i2l8166 19D0  
                                  i2l8504 2922                                    i2l8440 260C  
                                  i2l8424 2580                                    i2l8408 2516  
                                  i2l8336 2134                                    i2l8280 1E4E  
                                  i2l8272 1DEC                                    i2l8192 1A94  
                                  i2l8176 1A30                                    i2l8184 1A44  
                           i2putch@txData 0002                                    i2l8442 2616  
                                  i2l8434 25D8                                    i2l8370 22B8  
                                  i2l8362 223C                                    i2l8354 21E4  
                                  i2l8346 21A6                                    i2l8338 2142  
                                  i2l8258 1DA0                                    i2l8186 1A78  
                                  i2l8178 1A36                                    i2l8506 2938  
                                  i2l8460 26D6                                    i2l8428 25AC  
                                  i2l8380 23A6                                    i2l8348 21AE  
                                  i2l8292 1ED2                                    i2l8276 1E2E  
                                  i2l8508 2954                                    i2l8470 2746  
                                  i2l8446 264A                                    i2l8382 23F4  
                                  i2l8366 2266                                    i2l8456 26AC  
                                  i2l8472 2750                                    i2l8448 2654  
                                  i2l8392 2466                                    i2l8384 2402  
                                  i2l8296 1F0C                                    i2l8288 1EA6  
                                  i2l8490 2826                                    i2l8482 27C0  
                                  i2l8474 275C                                    i2l8466 271C  
                                  i2l8394 246E                                    i2l8378 2378  
                                  i2l8484 27D4                                    i2l8388 243C  
                                  u500_41 4106                                    i2l8494 2844  
                                  i2l8478 2796                                    i2l8398 24B4  
                                  u413_41 3966                                    u414_41 397A  
                                  _RCREG1 000FAE                                    u512_41 4534  
                               ??i2_scale 0033                          __end_of___lwtoft 5440  
                                  u434_41 4440                                    u436_41 4468  
                                  _RCSTA1 000FAB                                    _OSCCON 000FD3  
                                  u752_41 4628                                    u754_41 4650  
                                  u498_41 40DA                                    _SPBRG1 000FAF  
                               ??i2_putch 0002                                    _TXREG1 000FAD  
                                  _TXSTA1 000FAC                    __size_ofi2__tdiv_to_l_ 0132  
                            __doprnt$1621 0112                            __CFG_XINST$OFF 000000  
                            i2_scale$1792 0033                          __end_of__powers_ 0677  
                        __end_of_lcd_init 4E5E                              ?_TMR0_Reload 0001  
                                  ___ftge 46FE                          lcd_sendChar@temp 0086  
                                  ___wmul 524E                                 ??___awdiv 008F  
                               ??___ftadd 00B8                            __CFG_STVREN$ON 000000  
                               ??___awmod 0089                                 ??___ftdiv 0036  
                               ??___ftneg 0088                                 ??___lldiv 008D  
                               ??___ftmul 009F                                 ??___llmod 009A  
                               ??___ftsub 00BE                                 ??___fttol 00B3  
                               ??__doprnt 010C                          ?_TMR0_Initialize 0001  
                                  _fround 31FC                             i2__doprnt@exp 0067  
                           i2__doprnt@val 0063                                    clear_0 549E  
                        ___awdiv@quotient 0091                           ___awmod@divisor 0087  
                                  _result 00BE                              __doprnt@flag 011F  
                         ___awmod@counter 0089                                    _printf 52BA  
                            __doprnt@fval 0123                              __doprnt@prec 0126  
                          i2___awdiv@sign 000C                     ___ftmul@f3_as_product 00A3  
                       ??i2_EUSART1_Write 0001                                 ??_isdigit 0085  
                       __end_ofi2___awdiv 4CE6                         __end_ofi2___ftadd 3B02  
                       __end_ofi2___awmod 4F44                            i2___ftadd@exp1 0020  
                          i2___ftadd@exp2 001F                         __end_ofi2___ftneg 541C  
                       __end_ofi2___lldiv 4D68                         __end_ofi2___ftmul 4524  
                       __end_ofi2___llmod 4FAA                         __end_ofi2___ftsub 524E  
                       __end_ofi2___fttol 4618                            i2___ftadd@sign 001E  
                            __mediumconst 0000                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                       __end_ofi2__doprnt 295E                      __end_of_lcd_sendChar 51CC  
                        lcd_sendCommand@a 0087                            i2___awmod@sign 0006  
                         ??_EUSART1_Write 0085  TMR0_SetInterruptHandler@InterruptHandler 0085  
INT0_SetInterruptHandler@InterruptHandler 0085                                 ??_sprintf 00BE  
           __size_of_INTERRUPT_Initialize 0004                         __end_ofi2_isdigit 547C  
                       _SYSTEM_Initialize 54B2                                __accesstop 0060  
                 __end_of__initialization 54A4                                 ?_INT0_ISR 0001  
                              ___ftadd@f1 00B2                                ___ftadd@f2 00B5  
                     __size_ofi2___ftpack 00AE                                ___ftge@ff1 0085  
                              ___ftge@ff2 0088                        ?_SYSTEM_Initialize 0001  
                     __size_ofi2___lltoft 005C                             ___rparam_used 000001  
                              ___ftdiv@f1 0030                                ___ftdiv@f2 0033  
                              ___ftdiv@f3 003A                                ___ftneg@f1 0085  
                      __size_of__lcd_Port 0036                            i2___ftpack@arg 0001  
                      i2__tdiv_to_l_@exp1 000F                         i2___llmod@divisor 0012  
                          i2___ftpack@exp 0004                        i2__tdiv_to_l_@cntr 000E  
                       i2___llmod@counter 0016                        i2__tdiv_to_l_@quot 000A  
                              ___ftmul@f1 0099                                ___ftmul@f2 009C  
                              ___ftsub@f1 0100                                ___ftsub@f2 0103  
                              ___fttol@f1 00AF                            __pcstackCOMRAM 0001  
                      i2___lldiv@dividend 0001                       ??_SYSTEM_Initialize 0089  
                        ??_lcd_sendString 008B                                 ?_TMR0_ISR 0001  
                              ___lltoft@c 008D                            i2___ftmul@cntr 002E  
                           __end_of_scale 2E0C                            i2___ftmul@sign 002F  
                           __end_of_putch 550E                   __size_of_TMR0_ReadTimer 0042  
                          main@cap_string 0136                            i2___fttol@exp1 0045  
                              ___lwtoft@c 0009                            i2___fttol@lval 0041  
                               ?i2___ftge 0001                                 ?i2___wmul 000F  
                           i2__tdiv_to_l_ 40CA               __size_of_EXT_INT_Initialize 0018  
                              __div_to_l_ 3CA0                                 ?i2_fround 0030  
                      __size_of_lcd_clear 000E                                __doprnt@ap 010A  
                              __doprnt@pb 0106                     i2EUSART1_Write@txData 0001  
                         __div_to_l_@exp1 0090                          ?_TMR0_StartTimer 0001  
                         __div_to_l_@cntr 008F                                   ??_scale 00AB  
               __end_of_SYSTEM_Initialize 54CC                            i2___lltoft@exp 0011  
                         __div_to_l_@quot 008B                                   ??_putch 0086  
                      i2___lldiv@quotient 0009                                __pbssBANK0 00BE  
                        i2__tdiv_to_l_@f1 0001                          i2__tdiv_to_l_@f2 0004  
                         __CFG_PLLCFG$OFF 000000                     _INT0_InterruptHandler 00D4  
                              ??_INT0_ISR 005F                             __div_to_l_@f1 0085  
                           __div_to_l_@f2 0088                        __CFG_CCP2MX$PORTC1 000000  
                                 ?___ftge 0085          __end_of_TMR0_SetInterruptHandler 555A  
                 __size_of_TMR0_StopTimer 0004                                   ?___wmul 0093  
                              ??_TMR0_ISR 0002                        __CFG_CCP3MX$PORTB5 000000  
                                 ?_fround 00A8                                 ?___ftpack 0085  
                                 ?_printf 0052                                 ?___lltoft 008D  
                          ?i2__tdiv_to_l_ 0001                                ??i2___ftge 0007  
                               ?___lwtoft 0009                                ??i2___wmul 0013  
                       __end_of__lcd_Port 52BA                                ??i2_fround 0033  
                                 _OSCCON2 000FD2                          lcd_setPosition@i 008A  
                        lcd_setPosition@j 008B                          lcd_setPosition@x 0089  
                        lcd_setPosition@y 0088                                   _OSCTUNE 000F9B  
                                 _SPBRGH1 000FB0                  __size_of_lcd_sendCommand 0026  
                               ?_lcd_init 0001                                   i2_scale 2E0C  
                                 i2_putch 5564         __size_of_INT0_SetInterruptHandler 000A  
               ?_INT0_SetInterruptHandler 0085                           __CFG_PWRTEN$OFF 000000  
                       __end_of__npowers_ 0650                                   __Hparam 0000  
                              _scale$1620 00AB                                   __Lparam 0000  
                       __end_of_lcd_clear 552A                           __size_of___ftge 00C8  
                                 ___awdiv 47C6                  __size_of_lcd_setPosition 0076  
                                 ___ftadd 34A8                            i2__doprnt$1793 0060  
                                 ___awmod 4A96                                   ___ftdiv 4618  
                                 ___ftneg 5322                                   ___lldiv 4884  
                         __size_of___wmul 0036                                   ___ftmul 3E28  
                                 ___llmod 4B38                                   ___ftsub 50AA  
                                 ___fttol 3F86              __size_of_lcd_sendStringToPos 001E  
                            __psmallconst 0600                      __size_of_TMR0_Reload 000C  
                                 __doprnt 06B2                                   __pcinit 5498  
                            ??i2___ftpack 0006                                ??___ftpack 008A  
                         __size_of_fround 02AC                   i2___ftmul@f3_as_product 002B  
                                 __ramtop 0600                              ??i2___lltoft 000D  
                              ??___lltoft 0091                                   __ptext0 5006  
                                 __ptext1 5058                                   __ptext2 06B2  
                                 __ptext3 295E                                   __ptext4 54FA  
                                 __ptext5 550E                                   __ptext6 5382  
                                 __ptext7 31FC                                   __ptext8 524E  
                                 __ptext9 3E28                           __size_of_printf 0036  
                   __size_of_lcd_sendChar 0046                                ??___lwtoft 000C  
                               _T0CONbits 000FD5                             i2_fround$1790 0036  
                           i2_fround$1791 0033                               ?__div_to_l_ 0085  
                                 _dpowers 0601                     _OSCILLATOR_Initialize 552A  
                            i2fround@prec 0039                                   _isdigit 5382  
                          i2__doprnt@flag 0070                                   _reading 00D2  
                          i2__doprnt@fval 006D                          ___awmod@dividend 0085  
                          i2__doprnt@prec 0074                        _EUSART1_Initialize 54E4  
                ??_PIN_MANAGER_Initialize 0085                __size_of_SYSTEM_Initialize 001A  
                                 _sprintf 5058                             __doprnt@width 0121  
                              ??_lcd_init 0088                      end_of_initialization 54A4  
                                 ftoa@buf 00C1                       ?_EUSART1_Initialize 0001  
                           __Lmediumconst 0000                       i2___wmul@multiplier 000F  
                               i2u1323_40 1B28                                 i2u1314_48 18B6  
                               i2u1323_45 1B1E                                 i2u1341_48 1E90  
                               i2u1350_48 2010                                 i2u1343_48 1EF6  
                      __end_ofi2___ftpack 49EE                                 i2u1360_48 2226  
                               i2u1352_48 20F8                                 i2u1362_48 235E  
                               i2u1346_48 1F78                                 i2u1355_48 2166  
                               i2u1357_40 21D8                                 i2u1365_48 2426  
                               i2u1390_48 2780                                 i2u1383_48 2696  
                               i2u1394_48 2810                                 i2u1386_48 2706  
                               i2u1396_48 28E0                                 i2u1487_48 530C  
                      __end_ofi2___lltoft 5006                           ___lldiv@divisor 0089  
                         ___lldiv@counter 0091                           i2_EUSART1_Write 5538  
                   TMR0_ReadTimer@readVal 0007                                   printf@f 0052  
                            _lcd_sendChar 5186                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc2 000FDE  
                          __tdiv_to_l_@f1 0085                            __tdiv_to_l_@f2 0088  
                          _TMR0_ReadTimer 51CC                      ??_EUSART1_Initialize 0085  
                         ??i2__tdiv_to_l_ 0007                             ??__tdiv_to_l_ 008B  
                _TMR0_SetInterruptHandler 5550                                 i2___awdiv 4C62  
                     EUSART1_Write@txData 0085                                 i2___ftadd 3956  
                               i2___awmod 4ED4                                 i2___ftneg 53F8  
                               i2___lldiv 4CE6                                 i2___ftmul 4430  
                               i2___llmod 4F44                                 i2___ftsub 520E  
                               i2___fttol 4524                                 i2__doprnt 1882  
                             ___ftdiv@exp 003D                        i2___llmod@dividend 000E  
                      i2___awdiv@dividend 0007                         ??_lcd_sendCommand 0086  
                         i2___ftpack@sign 0005                                 i2_isdigit 545E  
                       __size_of_INT0_ISR 00A8                       __size_of__div_to_l_ 0188  
                             ___ftmul@exp 00A2                            _TMR0_StopTimer 557A  
                  __end_of_TMR0_ReadTimer 520E              __end_of_INTERRUPT_Initialize 5576  
            _INT0_DefaultInterruptHandler 000000                            __end_of___ftge 47C6  
                          __end_of___wmul 5284                         __size_of_TMR0_ISR 0032  
                  ?_OSCILLATOR_Initialize 0001                            __end_of_fround 34A8  
                        i2___wmul@product 0013                         ??_lcd_setPosition 0089  
                          __end_of_printf 52F0                       start_initialization 5498  
                       __size_ofi2___ftge 0090                        i2___awdiv@quotient 000D  
                       __size_ofi2___wmul 0026                  __size_of_TMR0_Initialize 0048  
         __size_of_PIN_MANAGER_Initialize 0030                       __end_of__tdiv_to_l_ 3CA0  
                             __lcd_Port@a 0085                           i2___fttol@sign1 0040  
                       __size_ofi2_fround 0246                                ?i2___awdiv 0007  
                              ?i2___ftadd 0015                                ?i2___awmod 0001  
                              ?i2___ftneg 0001                                ?i2___lldiv 0001  
                              ?i2___ftmul 0021                                ?i2___llmod 000E  
                              ?i2___ftsub 0021                                ?i2___fttol 0037  
                             putch@txData 0086                     __end_of_EUSART1_Write 551C  
                              ?i2__doprnt 0046             lcd_sendStringToPos@charString 008E  
                 __end_ofi2_EUSART1_Write 5544                           ___llmod@divisor 0096  
                         ___llmod@counter 009A                    __end_of_TMR0_StopTimer 557E  
                              ?i2_isdigit 0001                                  ??___ftge 008B  
                         ?_TMR0_ReadTimer 0001                                  ??___wmul 0097  
                             __doprnt@exp 0119                               __doprnt@val 0115  
                                ??_fround 00AB                __end_of_EXT_INT_Initialize 54E4  
                                ??_printf 0059                                fround@prec 00B1  
                           ?i2__div_to_l_ 0001                         __size_of___ftpack 010C  
                       __size_of___lltoft 007C          __end_of_INT0_SetInterruptHandler 5564  
                       __size_of___lwtoft 0024                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                              _isdigit$1164 0086  
                               __lcd_Port 5284                       _lcd_sendStringToPos 5440  
                                ?i2_scale 0030                         __size_of_lcd_init 007A  
                                ?i2_putch 0001                                 __doprnt@c 0128  
                               __doprnt@f 0108                     _TMR0_InterruptHandler 00D6  
                               __pnvBANK0 00D4                  __size_of_TMR0_StartTimer 0004  
                         lcd_sendString@a 0089                           lcd_sendString@i 008B  
                         ?_TMR0_StopTimer 0001                    _PIN_MANAGER_Initialize 5352  
                               __pintcode 0008                                  ?___awdiv 008B  
                                ?___ftadd 00B2                                  ?___awmod 0085  
                                ?___ftdiv 0030                                  ?___ftneg 0085  
                                ?___lldiv 0085                      ?_lcd_sendStringToPos 008D  
                                ?___ftmul 0099                                  ?___llmod 0092  
                                ?___ftsub 0100                                 __npowers_ 0629  
                                ?___fttol 00AF                                  ?__doprnt 0106  
                               _lcd_clear 551C              ??_INTERRUPT_InterruptManager 0077  
                        __CFG_PRICLKEN$ON 000000                               __tdiv_to_l_ 3B02  
                          ??i2__div_to_l_ 0007                              ??__div_to_l_ 008B  
                             __smallconst 0600                                  _BAUDCON1 000FB8  
                                ?_isdigit 0001                   __size_of_lcd_sendString 0048  
                             ??i2___awdiv 000B                               ??i2___ftadd 001B  
                             ??i2___awmod 0005                                  ?_sprintf 0129  
                             ??i2___ftneg 0004                               ??i2___lldiv 0009  
                             ??i2___ftmul 0027                            __size_of_scale 04AE  
                             ??i2___llmod 0016                               ??i2___ftsub 0027  
                             ??i2___fttol 003B                                ?__lcd_Port 0001  
                          __size_of_putch 0014                      _INTERRUPT_Initialize 5572  
                             ??i2__doprnt 004C                         ??_TMR0_Initialize 0087  
                                _INT0_ISR 49EE                          ?i2_EUSART1_Write 0001  
                          ___wmul@product 0097                          i2__doprnt@tmpval 0069  
                                _LATAbits 000F89                                  _LATBbits 000F8A  
                             ??i2_isdigit 0001                         i2_TMR0_StartTimer 5576  
     __size_of_INTERRUPT_InterruptManager 008C                ??_TMR0_SetInterruptHandler 0087  
                                _PIR1bits 000F9E                        __end_of__div_to_l_ 3E28  
                                i2u514_40 456E                                  i2u514_45 4566  
                                i2u661_40 5484                                  i2u661_46 5486  
                           ??_TMR0_Reload 0001                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                        ?i2_TMR0_StartTimer 0001  
                   ??_lcd_sendStringToPos 0090                                  _TMR0_ISR 52F0  
                         i2__div_to_l_@f1 0001                           i2__div_to_l_@f2 0004  
                              ?_lcd_clear 0001                  TMR0_ReadTimer@readValLow 0009  
                     ??i2_TMR0_StartTimer 0001                         ___wmul@multiplier 0093  
                                i2___ftge 4BD2                                  i2___wmul 53D2  
                       i2___awdiv@divisor 0009                                  i2_fround 3710  
                       i2___awdiv@counter 000B                           _lcd_sendCommand 53AC  
                             _INTCON2bits 000FF1                     ?_INTERRUPT_Initialize 0001  
                _INT0_SetInterruptHandler 555A                        i2___awmod@dividend 0001  
                        __size_ofi2_scale 03F0                 __end_ofi2_TMR0_StartTimer 557A  
                        __size_ofi2_putch 000A                                  __Hrparam 0000  
                                __Lrparam 0000                           _lcd_setPosition 4E5E  
                      __CFG_BOREN$SBORDIS 000000                         __CFG_P2BMX$PORTB5 000000  
                 ??_OSCILLATOR_Initialize 0085                         ??_TMR0_StartTimer 0085  
                        __size_of___awdiv 00BE                          __size_of___ftadd 0268  
                        __size_of___awmod 00A2                          __size_of___ftdiv 00E6  
                        __size_of___ftneg 0030                     i2___wmul@multiplicand 0011  
                        __size_of___lldiv 00BC                          __size_of___ftmul 015E  
                        __size_of___llmod 009A                          __size_of___ftsub 004C  
                        __size_of___fttol 0144               __size_of_EUSART1_Initialize 0016  
                                ___ftpack 4324                          __size_of__doprnt 11D0  
                             _fround$1618 00AE                               _fround$1619 00AB  
                                ___lltoft 4D68                     __end_ofi2__tdiv_to_l_ 41FC  
                     __end_of_TMR0_Reload 5550                           _putch$intlevel0 5500  
                                ___lwtoft 541C                          __size_of_isdigit 002A  
                                __ptext10 4A96                                  __ptext11 47C6  
                                __ptext20 4324                                  __ptext12 3B02  
                                __ptext21 5322                                  __ptext13 3CA0  
                                __ptext30 5284                                  __ptext22 46FE  
                                __ptext14 4D68                                  __ptext31 54B2  
                                __ptext23 5440                                  __ptext15 4B38  
                                __ptext40 54E4                                  __ptext32 513E  
                                __ptext24 4E5E                                  __ptext16 4884  
                                __ptext33 556E                                  __ptext25 50F6  
                                __ptext17 3F86                                  __ptext50 5538  
                                __ptext42 52F0                                  __ptext34 5550  
                                __ptext26 5186                                  __ptext18 50AA  
                                __ptext51 545E                                  __ptext43 547C  
                                __ptext35 5352                                  __ptext27 4DE4  
                                __ptext19 34A8                                  __ptext60 4F44  
                                __ptext52 3710                                  __ptext44 49EE  
                                __ptext36 552A                                  __ptext28 551C  
                                __ptext61 4CE6                                  __ptext53 53D2  
                                __ptext45 5576                                  __ptext37 5572  
                                __ptext29 53AC                                  __ptext70 557A  
                                __ptext62 4524                                  __ptext54 4430  
                                __ptext46 52BA                                  __ptext38 54CC  
                                __ptext71 5544                                  __ptext63 520E  
                                __ptext55 4ED4                                  __ptext47 1882  
                                __ptext39 555A                                  __ptext72 51CC  
                                __ptext64 3956                                  __ptext56 4C62  
                                __ptext48 2E0C                                  __ptext73 0000  
                                __ptext65 53F8                                  __ptext57 40CA  
                                __ptext49 5564                                  __ptext66 4BD2  
                                __ptext58 41FC                                  __ptext67 541C  
                                __ptext59 4FAA                                  __ptext68 4618  
                                __ptext69 4940                                  __powers_ 0650  
                                _lcd_init 4DE4                               ??__lcd_Port 0085  
                        __size_of_sprintf 0052                            i2_isdigit$1164 0002  
                           __size_of_main 0052                          ??_TMR0_ReadTimer 0003  
                    __end_ofi2__div_to_l_ 4324      __end_of_TMR0_DefaultInterruptHandler 5498  
   __size_of_TMR0_DefaultInterruptHandler 001C              _TMR0_DefaultInterruptHandler 547C  
                         i2__doprnt@width 0072                                  int$flags 005F  
      __end_of_INTERRUPT_InterruptManager 0094                _INTERRUPT_InterruptManager 0008  
                             ??_lcd_clear 0088                            __doprnt@tmpval 011B  
                 __end_of_lcd_sendCommand 53D2                         i2___awmod@divisor 0003  
                       i2___awmod@counter 0005                                _INTCONbits 000FF2  
                          _lcd_sendString 50F6                                  isdigit@c 0087  
                  ??_INTERRUPT_Initialize 0085                                  scale@scl 00AE  
                      _EXT_INT_Initialize 54CC                                  intlevel2 0000  
                               sprintf@ap 0130                                 sprintf@pb 0132  
                        ??_TMR0_StopTimer 0001                          __tdiv_to_l_@exp1 0093  
                        __tdiv_to_l_@cntr 0092                                 sprintf@wh 0129  
                        __tdiv_to_l_@quot 008E                   __end_of_lcd_setPosition 4ED4  
                        ___lldiv@dividend 0085                   ?_PIN_MANAGER_Initialize 0001  
              __size_ofi2_TMR0_StartTimer 0004                       ?_EXT_INT_Initialize 0001  
                              _RCSTA1bits 000FAB             ?_TMR0_DefaultInterruptHandler 0001  
                     lcd_setPosition@temp 008C                               _TMR0_Reload 5544  
                                printf@ap 0059                                  printf@pb 005B  
                  __size_of_EUSART1_Write 000E                              ?__tdiv_to_l_ 0085  
                  __end_of_lcd_sendString 513E                      ??_EXT_INT_Initialize 0087  
                                sprintf@f 012B                          ___lldiv@quotient 008D  
                         _TMR0_Initialize 513E                         __CFG_T3CMX$PORTC0 000000  
          __end_of_PIN_MANAGER_Initialize 5382                         i2__div_to_l_@exp1 000C  
                       i2__div_to_l_@cntr 000B                         i2__div_to_l_@quot 0007  
